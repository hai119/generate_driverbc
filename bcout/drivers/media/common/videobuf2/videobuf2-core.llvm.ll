; ModuleID = '../bcout/drivers/media/common/videobuf2/videobuf2-core.llvm.bc'
source_filename = "drivers/media/common/videobuf2/videobuf2-core.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.media_request_object_ops = type { i32 (%struct.media_request_object*)*, void (%struct.media_request_object*)*, void (%struct.media_request_object*)*, void (%struct.media_request_object*)*, void (%struct.media_request_object*)* }
%struct.media_request_object = type { %struct.media_request_object_ops*, i8*, %struct.media_request*, %struct.list_head, %struct.kref, i8 }
%struct.media_request = type { %struct.media_device*, %struct.kref, [27 x i8], i32, i32, i32, %struct.list_head, i32, %struct.wait_queue_head, %struct.spinlock }
%struct.media_device = type { %struct.device*, %struct.media_devnode*, [32 x i8], [32 x i8], [40 x i8], [32 x i8], i32, i64, i32, %struct.ida, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.media_graph, i8*, i32 (%struct.media_entity*, %struct.media_pipeline*)*, void (%struct.media_entity*)*, %struct.media_device_ops*, %struct.mutex, %struct.atomic_t }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.46, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.16, [0 x i64] }
%struct.anon.16 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.17, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.17 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.18 }
%union.anon.18 = type { %struct.anon.19 }
%struct.anon.19 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.23, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.24, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.25, %union.anon.29, %struct.key_restriction* }
%union.anon.23 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.24 = type { i64 }
%union.anon.25 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.26, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.26 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.29 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.32, %union.anon.33, i32 }
%struct.request_queue = type opaque
%union.anon.32 = type { %struct.list_head }
%union.anon.33 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.34 }
%struct.anon.34 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.38 }
%struct.anon.38 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.45, i32, [12 x i8] }
%union.anon.45 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.46 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.47, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.50 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { i64, i64 }
%union.anon.50 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.5 }
%union.anon.5 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.31 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.31 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.media_devnode = type { %struct.media_device*, %struct.media_file_operations*, %struct.device, %struct.cdev, %struct.device*, i32, i64, void (%struct.media_devnode*)* }
%struct.media_file_operations = type { %struct.module*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*)*, i32 (%struct.file*)* }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.ida = type { %struct.xarray }
%struct.media_graph = type { [16 x %struct.anon.66], %struct.media_entity_enum, i32 }
%struct.anon.66 = type { %struct.media_entity*, %struct.list_head* }
%struct.media_entity = type { %struct.media_gobj, i8*, i32, i32, i64, i16, i16, i16, i32, %struct.media_pad*, %struct.list_head, %struct.media_entity_operations*, i32, i32, %struct.media_pipeline*, %union.anon.69 }
%struct.media_gobj = type { %struct.media_device*, i32, %struct.list_head }
%struct.media_pad = type { %struct.media_gobj, %struct.media_entity*, i16, i32, i64 }
%struct.media_entity_operations = type { i32 (%struct.media_entity*, %struct.fwnode_endpoint*)*, i32 (%struct.media_entity*, %struct.media_pad*, %struct.media_pad*, i32)*, i32 (%struct.media_link*)* }
%struct.media_link = type { %struct.media_gobj, %struct.list_head, %union.anon.67, %union.anon.68, %struct.media_link*, i64, i8 }
%union.anon.67 = type { %struct.media_gobj* }
%union.anon.68 = type { %struct.media_gobj* }
%struct.media_pipeline = type { i32, %struct.media_graph }
%union.anon.69 = type { %struct.anon.70 }
%struct.anon.70 = type { i32, i32 }
%struct.media_entity_enum = type { i64*, i32 }
%struct.media_device_ops = type { i32 (%struct.media_link*, i32, i32)*, %struct.media_request* (%struct.media_device*)*, void (%struct.media_request*)*, i32 (%struct.media_request*)*, void (%struct.media_request*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.4 }
%union.anon.4 = type { %struct.raw_spinlock }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kref = type { %struct.refcount_struct }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.kmem_cache = type opaque
%struct.vb2_queue = type { i32, i32, %struct.device*, i64, i16, %struct.mutex*, i8*, %struct.vb2_ops*, %struct.vb2_mem_ops*, %struct.vb2_buf_ops*, i8*, i32, i32, i32, i32, i32, [8 x %struct.device*], %struct.mutex, i32, i32, [32 x %struct.vb2_buffer*], i32, %struct.list_head, i32, %struct.atomic_t, %struct.list_head, %struct.spinlock, %struct.wait_queue_head, i16, %struct.vb2_fileio_data*, %struct.vb2_threadio_data*, [32 x i8] }
%struct.vb2_ops = type { i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)*, void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)*, i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)*, i32 (%struct.vb2_queue*, i32)*, void (%struct.vb2_queue*)*, void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)* }
%struct.vb2_mem_ops = type { i8* (%struct.device*, i64, i64, i32, i32)*, void (i8*)*, %struct.dma_buf* (i8*, i64)*, i8* (%struct.device*, i64, i64, i32)*, void (i8*)*, void (i8*)*, void (i8*)*, i8* (%struct.device*, %struct.dma_buf*, i64, i32)*, void (i8*)*, i32 (i8*)*, void (i8*)*, i8* (i8*)*, i8* (i8*)*, i32 (i8*)*, i32 (i8*, %struct.vm_area_struct*)* }
%struct.dma_buf = type { i64, %struct.file*, %struct.list_head, %struct.dma_buf_ops*, %struct.mutex, i32, i8*, i8*, i8*, %struct.spinlock, %struct.module*, %struct.list_head, i8*, %struct.dma_resv*, %struct.wait_queue_head, %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t }
%struct.dma_buf_ops = type { i8, i32 (%struct.dma_buf*, %struct.dma_buf_attachment*)*, void (%struct.dma_buf*, %struct.dma_buf_attachment*)*, i32 (%struct.dma_buf_attachment*)*, void (%struct.dma_buf_attachment*)*, %struct.sg_table* (%struct.dma_buf_attachment*, i32)*, void (%struct.dma_buf_attachment*, %struct.sg_table*, i32)*, void (%struct.dma_buf*)*, i32 (%struct.dma_buf*, i32)*, i32 (%struct.dma_buf*, i32)*, i32 (%struct.dma_buf*, %struct.vm_area_struct*)*, i8* (%struct.dma_buf*)*, void (%struct.dma_buf*, i8*)* }
%struct.dma_buf_attachment = type { %struct.dma_buf*, %struct.device*, %struct.list_head, %struct.sg_table*, i32, i8, %struct.dma_buf_attach_ops*, i8*, i8* }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.dma_buf_attach_ops = type { i8, void (%struct.dma_buf_attachment*)* }
%struct.dma_resv = type opaque
%struct.dma_buf_poll_cb_t = type { %struct.dma_fence_cb, %struct.wait_queue_head*, i32 }
%struct.dma_fence_cb = type { %struct.list_head, void (%struct.dma_fence*, %struct.dma_fence_cb*)* }
%struct.dma_fence = type { %struct.spinlock*, %struct.dma_fence_ops*, %union.anon.71, i64, i64, i64, %struct.kref, i32 }
%struct.dma_fence_ops = type { i8, i8* (%struct.dma_fence*)*, i8* (%struct.dma_fence*)*, i1 (%struct.dma_fence*)*, i1 (%struct.dma_fence*)*, i64 (%struct.dma_fence*, i1, i64)*, void (%struct.dma_fence*)*, void (%struct.dma_fence*, i8*, i32)*, void (%struct.dma_fence*, i8*, i32)* }
%union.anon.71 = type { %struct.list_head }
%struct.vb2_buf_ops = type { i32 (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*, i8*)*, i32 (%struct.vb2_buffer*, %struct.vb2_plane*)*, void (%struct.vb2_buffer*, i8*)* }
%struct.vb2_plane = type { i8*, %struct.dma_buf*, i32, i32, i32, i32, %union.anon.72, i32 }
%union.anon.72 = type { i64 }
%struct.vb2_fileio_data = type { i32, i32, i32, [32 x %struct.vb2_fileio_buf], i32, i32, i32, i32, i8 }
%struct.vb2_fileio_buf = type { i8*, i32, i32, i8 }
%struct.vb2_threadio_data = type { %struct.task_struct*, i32 (%struct.vb2_buffer*, i8*)*, i8*, i8 }
%struct.vb2_buffer = type { %struct.vb2_queue*, i32, i32, i32, i32, i64, %struct.media_request*, %struct.media_request_object, i32, i8, [8 x %struct.vb2_plane], %struct.list_head, %struct.list_head }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }

@__param_str_debug = internal constant [23 x i8] c"videobuf2_common.debug\00", align 16, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@debug = internal global i32 0, align 4, !dbg !4633
@__param_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__param_str_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @debug to i8*) } }, section "__param", align 8, !dbg !4549
@__UNIQUE_ID_debugtype262 = internal constant [36 x i8] c"videobuf2_common.parmtype=debug:int\00", section ".modinfo", align 1, !dbg !4601
@.str = private unnamed_addr constant [54 x i8] c"\016videobuf2_common: [%s] %s: unsupported memory type\0A\00", align 1
@__func__.vb2_verify_memory_type = private unnamed_addr constant [23 x i8] c"vb2_verify_memory_type\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"\016videobuf2_common: [%s] %s: requested type is incorrect\0A\00", align 1
@.str.2 = private unnamed_addr constant [65 x i8] c"\016videobuf2_common: [%s] %s: MMAP for current setup unsupported\0A\00", align 1
@.str.3 = private unnamed_addr constant [68 x i8] c"\016videobuf2_common: [%s] %s: USERPTR for current setup unsupported\0A\00", align 1
@.str.4 = private unnamed_addr constant [67 x i8] c"\016videobuf2_common: [%s] %s: DMABUF for current setup unsupported\0A\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"\016videobuf2_common: [%s] %s: file io in progress\0A\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"\016videobuf2_common: [%s] %s: streaming active\0A\00", align 1
@__func__.vb2_core_reqbufs = private unnamed_addr constant [17 x i8] c"vb2_core_reqbufs\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"\016videobuf2_common: [%s] %s: another dup()ped fd is waiting for a buffer\0A\00", align 1
@.str.8 = private unnamed_addr constant [63 x i8] c"\016videobuf2_common: [%s] %s: memory in use, orphaning buffers\0A\00", align 1
@.str.9 = private unnamed_addr constant [48 x i8] c"drivers/media/common/videobuf2/videobuf2-core.c\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"\016videobuf2_common: [%s] %s: memory allocation failed\0A\00", align 1
@.str.11 = private unnamed_addr constant [74 x i8] c"\016videobuf2_common: [%s] %s: maximum number of buffers already allocated\0A\00", align 1
@__func__.vb2_core_create_bufs = private unnamed_addr constant [21 x i8] c"vb2_core_create_bufs\00", align 1
@.str.12 = private unnamed_addr constant [52 x i8] c"\016videobuf2_common: [%s] %s: memory model mismatch\0A\00", align 1
@.str.13 = private unnamed_addr constant [70 x i8] c"\016videobuf2_common: [%s] %s: done processing on buffer %d, state: %s\0A\00", align 1
@__func__.vb2_buffer_done = private unnamed_addr constant [16 x i8] c"vb2_buffer_done\00", align 1
@vb2_core_req_ops = internal constant %struct.media_request_object_ops { i32 (%struct.media_request_object*)* @vb2_req_prepare, void (%struct.media_request_object*)* @vb2_req_unprepare, void (%struct.media_request_object*)* @vb2_req_queue, void (%struct.media_request_object*)* @vb2_req_unbind, void (%struct.media_request_object*)* @vb2_req_release }, align 8, !dbg !4644
@.str.14 = private unnamed_addr constant [54 x i8] c"\016videobuf2_common: [%s] %s: invalid buffer state %s\0A\00", align 1
@__func__.vb2_core_prepare_buf = private unnamed_addr constant [21 x i8] c"vb2_core_prepare_buf\00", align 1
@.str.15 = private unnamed_addr constant [54 x i8] c"\016videobuf2_common: [%s] %s: buffer already prepared\0A\00", align 1
@.str.16 = private unnamed_addr constant [61 x i8] c"\016videobuf2_common: [%s] %s: prepare of buffer %d succeeded\0A\00", align 1
@.str.17 = private unnamed_addr constant [60 x i8] c"\016videobuf2_common: [%s] %s: fatal error occurred on queue\0A\00", align 1
@__func__.vb2_core_qbuf = private unnamed_addr constant [14 x i8] c"vb2_core_qbuf\00", align 1
@.str.18 = private unnamed_addr constant [54 x i8] c"\016videobuf2_common: [%s] %s: qbuf requires a request\0A\00", align 1
@.str.19 = private unnamed_addr constant [69 x i8] c"\016videobuf2_common: [%s] %s: queue in wrong mode (qbuf vs requests)\0A\00", align 1
@.str.20 = private unnamed_addr constant [62 x i8] c"\016videobuf2_common: [%s] %s: buffer %d not in dequeued state\0A\00", align 1
@.str.21 = private unnamed_addr constant [55 x i8] c"\016videobuf2_common: [%s] %s: buffer validation failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [58 x i8] c"\016videobuf2_common: [%s] %s: qbuf of buffer %d succeeded\0A\00", align 1
@.str.23 = private unnamed_addr constant [58 x i8] c"\016videobuf2_common: [%s] %s: buffer still being prepared\0A\00", align 1
@.str.24 = private unnamed_addr constant [71 x i8] c"\016videobuf2_common: [%s] %s: streaming off, will not wait for buffers\0A\00", align 1
@__func__.vb2_wait_for_all_buffers = private unnamed_addr constant [25 x i8] c"vb2_wait_for_all_buffers\00", align 1
@.str.25 = private unnamed_addr constant [52 x i8] c"\016videobuf2_common: [%s] %s: returning done buffer\0A\00", align 1
@__func__.vb2_core_dqbuf = private unnamed_addr constant [15 x i8] c"vb2_core_dqbuf\00", align 1
@.str.26 = private unnamed_addr constant [64 x i8] c"\016videobuf2_common: [%s] %s: returning done buffer with errors\0A\00", align 1
@.str.27 = private unnamed_addr constant [60 x i8] c"\016videobuf2_common: [%s] %s: dqbuf of buffer %d, state: %s\0A\00", align 1
@.str.28 = private unnamed_addr constant [50 x i8] c"\016videobuf2_common: [%s] %s: invalid stream type\0A\00", align 1
@__func__.vb2_core_streamon = private unnamed_addr constant [18 x i8] c"vb2_core_streamon\00", align 1
@.str.29 = private unnamed_addr constant [48 x i8] c"\016videobuf2_common: [%s] %s: already streaming\0A\00", align 1
@.str.30 = private unnamed_addr constant [61 x i8] c"\016videobuf2_common: [%s] %s: no buffers have been allocated\0A\00", align 1
@.str.31 = private unnamed_addr constant [65 x i8] c"\016videobuf2_common: [%s] %s: need at least %u allocated buffers\0A\00", align 1
@.str.32 = private unnamed_addr constant [41 x i8] c"\016videobuf2_common: [%s] %s: successful\0A\00", align 1
@__func__.vb2_core_streamoff = private unnamed_addr constant [19 x i8] c"vb2_core_streamoff\00", align 1
@.str.33 = private unnamed_addr constant [69 x i8] c"\016videobuf2_common: [%s] %s: queue is not currently set up for mmap\0A\00", align 1
@__func__.vb2_core_expbuf = private unnamed_addr constant [16 x i8] c"vb2_core_expbuf\00", align 1
@.str.34 = private unnamed_addr constant [74 x i8] c"\016videobuf2_common: [%s] %s: queue does not support DMA buffer exporting\0A\00", align 1
@.str.35 = private unnamed_addr constant [86 x i8] c"\016videobuf2_common: [%s] %s: queue does support only O_CLOEXEC and access mode flags\0A\00", align 1
@.str.36 = private unnamed_addr constant [50 x i8] c"\016videobuf2_common: [%s] %s: invalid buffer type\0A\00", align 1
@.str.37 = private unnamed_addr constant [56 x i8] c"\016videobuf2_common: [%s] %s: buffer index out of range\0A\00", align 1
@.str.38 = private unnamed_addr constant [56 x i8] c"\016videobuf2_common: [%s] %s: buffer plane out of range\0A\00", align 1
@.str.39 = private unnamed_addr constant [58 x i8] c"\016videobuf2_common: [%s] %s: expbuf: file io in progress\0A\00", align 1
@.str.40 = private unnamed_addr constant [67 x i8] c"\016videobuf2_common: [%s] %s: failed to export buffer %d, plane %d\0A\00", align 1
@.str.41 = private unnamed_addr constant [72 x i8] c"\016videobuf2_common: [%s] %s: buffer %d, plane %d failed to export (%d)\0A\00", align 1
@.str.42 = private unnamed_addr constant [76 x i8] c"\016videobuf2_common: [%s] %s: buffer %d, plane %d exported as %d descriptor\0A\00", align 1
@__func__.vb2_mmap = private unnamed_addr constant [9 x i8] c"vb2_mmap\00", align 1
@.str.43 = private unnamed_addr constant [66 x i8] c"\016videobuf2_common: [%s] %s: invalid vma flags, VM_SHARED needed\0A\00", align 1
@.str.44 = private unnamed_addr constant [65 x i8] c"\016videobuf2_common: [%s] %s: invalid vma flags, VM_WRITE needed\0A\00", align 1
@.str.45 = private unnamed_addr constant [64 x i8] c"\016videobuf2_common: [%s] %s: invalid vma flags, VM_READ needed\0A\00", align 1
@.str.46 = private unnamed_addr constant [56 x i8] c"\016videobuf2_common: [%s] %s: mmap: file io in progress\0A\00", align 1
@.str.47 = private unnamed_addr constant [79 x i8] c"\016videobuf2_common: [%s] %s: MMAP invalid, as it would overflow buffer length\0A\00", align 1
@.str.48 = private unnamed_addr constant [70 x i8] c"\016videobuf2_common: [%s] %s: buffer %d, plane %d successfully mapped\0A\00", align 1
@vb2_core_queue_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4606
@.str.49 = private unnamed_addr constant [14 x i8] c"&q->mmap_lock\00", align 1
@vb2_core_queue_init.__key.50 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4611
@.str.51 = private unnamed_addr constant [12 x i8] c"&q->done_wq\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"%s-%p\00", align 1
@.str.53 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"cap\00", align 1
@.str.55 = private unnamed_addr constant [66 x i8] c"\016videobuf2_common: [%s] %s: file io: vb2_init_fileio result: %d\0A\00", align 1
@__func__.vb2_thread_start = private unnamed_addr constant [17 x i8] c"vb2_thread_start\00", align 1
@.str.56 = private unnamed_addr constant [7 x i8] c"vb2-%s\00", align 1
@__UNIQUE_ID_description310 = internal constant [57 x i8] c"videobuf2_common.description=Media buffer core framework\00", section ".modinfo", align 1, !dbg !4613
@__UNIQUE_ID_author311 = internal constant [74 x i8] c"videobuf2_common.author=Pawel Osciak <pawel@osciak.com>, Marek Szyprowski\00", section ".modinfo", align 1, !dbg !4618
@__UNIQUE_ID_file312 = internal constant [70 x i8] c"videobuf2_common.file=drivers/media/common/videobuf2/videobuf2-common\00", section ".modinfo", align 1, !dbg !4623
@__UNIQUE_ID_license313 = internal constant [29 x i8] c"videobuf2_common.license=GPL\00", section ".modinfo", align 1, !dbg !4628
@.str.57 = private unnamed_addr constant [61 x i8] c"\016videobuf2_common: [%s] %s: preparing buffers, cannot free\0A\00", align 1
@__func__.__vb2_queue_free = private unnamed_addr constant [17 x i8] c"__vb2_queue_free\00", align 1
@.str.58 = private unnamed_addr constant [58 x i8] c"\016videobuf2_common: [%s] %s: freed plane %d of buffer %d\0A\00", align 1
@__func__.__vb2_buf_mem_free = private unnamed_addr constant [19 x i8] c"__vb2_buf_mem_free\00", align 1
@.str.59 = private unnamed_addr constant [68 x i8] c"\016videobuf2_common: [%s] %s: memory alloc for buffer struct failed\0A\00", align 1
@__func__.__vb2_queue_alloc = private unnamed_addr constant [18 x i8] c"__vb2_queue_alloc\00", align 1
@.str.60 = private unnamed_addr constant [69 x i8] c"\016videobuf2_common: [%s] %s: failed allocating memory for buffer %d\0A\00", align 1
@.str.61 = private unnamed_addr constant [65 x i8] c"\016videobuf2_common: [%s] %s: buffer %d %p initialization failed\0A\00", align 1
@.str.62 = private unnamed_addr constant [69 x i8] c"\016videobuf2_common: [%s] %s: allocated %d buffers, %d plane(s) each\0A\00", align 1
@.str.63 = private unnamed_addr constant [65 x i8] c"\016videobuf2_common: [%s] %s: buffer %d, plane %d offset 0x%08lx\0A\00", align 1
@__func__.__setup_offsets = private unnamed_addr constant [16 x i8] c"__setup_offsets\00", align 1
@vb2_state_name.state_names = internal constant [7 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i32 0, i32 0)], align 16, !dbg !4635
@.str.64 = private unnamed_addr constant [9 x i8] c"dequeued\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"in request\00", align 1
@.str.66 = private unnamed_addr constant [10 x i8] c"preparing\00", align 1
@.str.67 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"active\00", align 1
@.str.69 = private unnamed_addr constant [5 x i8] c"done\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.71 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@__func__.__buf_prepare = private unnamed_addr constant [14 x i8] c"__buf_prepare\00", align 1
@.str.72 = private unnamed_addr constant [20 x i8] c"Invalid queue type\0A\00", align 1
@.str.73 = private unnamed_addr constant [60 x i8] c"\016videobuf2_common: [%s] %s: buffer preparation failed: %d\0A\00", align 1
@.str.74 = private unnamed_addr constant [89 x i8] c"\016videobuf2_common: [%s] %s: userspace address for plane %d changed, reacquiring memory\0A\00", align 1
@__func__.__prepare_userptr = private unnamed_addr constant [18 x i8] c"__prepare_userptr\00", align 1
@.str.75 = private unnamed_addr constant [94 x i8] c"\016videobuf2_common: [%s] %s: provided buffer size %u is less than setup size %u for plane %d\0A\00", align 1
@.str.76 = private unnamed_addr constant [77 x i8] c"\016videobuf2_common: [%s] %s: failed acquiring userspace memory for plane %d\0A\00", align 1
@.str.77 = private unnamed_addr constant [59 x i8] c"\016videobuf2_common: [%s] %s: buffer initialization failed\0A\00", align 1
@.str.78 = private unnamed_addr constant [56 x i8] c"\016videobuf2_common: [%s] %s: buffer preparation failed\0A\00", align 1
@.str.79 = private unnamed_addr constant [61 x i8] c"\016videobuf2_common: [%s] %s: invalid dmabuf fd for plane %d\0A\00", align 1
@__func__.__prepare_dmabuf = private unnamed_addr constant [17 x i8] c"__prepare_dmabuf\00", align 1
@.str.80 = private unnamed_addr constant [87 x i8] c"\016videobuf2_common: [%s] %s: invalid dmabuf length %u for plane %d, minimum length %u\0A\00", align 1
@.str.81 = private unnamed_addr constant [58 x i8] c"\016videobuf2_common: [%s] %s: buffer for plane %d changed\0A\00", align 1
@.str.82 = private unnamed_addr constant [54 x i8] c"\016videobuf2_common: [%s] %s: failed to attach dmabuf\0A\00", align 1
@.str.83 = private unnamed_addr constant [64 x i8] c"\016videobuf2_common: [%s] %s: failed to map dmabuf for plane %d\0A\00", align 1
@.str.84 = private unnamed_addr constant [30 x i8] c"include/media/media-request.h\00", align 1
@.str.85 = private unnamed_addr constant [64 x i8] c"\016videobuf2_common: [%s] %s: driver refused to start streaming\0A\00", align 1
@__func__.vb2_start_streaming = private unnamed_addr constant [20 x i8] c"vb2_start_streaming\00", align 1
@__func__.__vb2_wait_for_done_vb = private unnamed_addr constant [23 x i8] c"__vb2_wait_for_done_vb\00", align 1
@.str.86 = private unnamed_addr constant [78 x i8] c"\016videobuf2_common: [%s] %s: Queue in error state, will not wait for buffers\0A\00", align 1
@.str.87 = private unnamed_addr constant [86 x i8] c"\016videobuf2_common: [%s] %s: last buffer dequeued already, will not wait for buffers\0A\00", align 1
@.str.88 = private unnamed_addr constant [83 x i8] c"\016videobuf2_common: [%s] %s: nonblocking and no buffers to dequeue, will not wait\0A\00", align 1
@.str.89 = private unnamed_addr constant [61 x i8] c"\016videobuf2_common: [%s] %s: will sleep waiting for buffers\0A\00", align 1
@.str.90 = private unnamed_addr constant [52 x i8] c"\016videobuf2_common: [%s] %s: sleep was interrupted\0A\00", align 1
@.str.91 = private unnamed_addr constant [92 x i8] c"\014videobuf2_common: driver bug: stop_streaming operation is leaving buf %p in active state\0A\00", align 1
@.str.92 = private unnamed_addr constant [104 x i8] c"\016videobuf2_common: [%s] %s: setting up file io: mode %s, count %d, read_once %d, write_immediately %d\0A\00", align 1
@__func__.__vb2_init_fileio = private unnamed_addr constant [18 x i8] c"__vb2_init_fileio\00", align 1
@.str.93 = private unnamed_addr constant [5 x i8] c"read\00", align 1
@.str.94 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.95 = private unnamed_addr constant [54 x i8] c"\016videobuf2_common: [%s] %s: file io emulator closed\0A\00", align 1
@__func__.__vb2_cleanup_fileio = private unnamed_addr constant [21 x i8] c"__vb2_cleanup_fileio\00", align 1
@.str.96 = private unnamed_addr constant [73 x i8] c"\016videobuf2_common: [%s] %s: mode %s, offset %ld, count %zd, %sblocking\0A\00", align 1
@__func__.__vb2_perform_fileio = private unnamed_addr constant [21 x i8] c"__vb2_perform_fileio\00", align 1
@.str.97 = private unnamed_addr constant [4 x i8] c"non\00", align 1
@.str.98 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.99 = private unnamed_addr constant [56 x i8] c"\016videobuf2_common: [%s] %s: another dup()ped fd is %s\0A\00", align 1
@.str.100 = private unnamed_addr constant [8 x i8] c"reading\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c"writing\00", align 1
@.str.102 = private unnamed_addr constant [57 x i8] c"\016videobuf2_common: [%s] %s: vb2_init_fileio result: %d\0A\00", align 1
@.str.103 = private unnamed_addr constant [51 x i8] c"\016videobuf2_common: [%s] %s: vb2_dqbuf result: %d\0A\00", align 1
@.str.104 = private unnamed_addr constant [55 x i8] c"\016videobuf2_common: [%s] %s: reducing read count: %zd\0A\00", align 1
@.str.105 = private unnamed_addr constant [71 x i8] c"\016videobuf2_common: [%s] %s: copying %zd bytes - buffer %d, offset %u\0A\00", align 1
@.str.106 = private unnamed_addr constant [49 x i8] c"\016videobuf2_common: [%s] %s: error copying data\0A\00", align 1
@.str.107 = private unnamed_addr constant [49 x i8] c"\016videobuf2_common: [%s] %s: read limit reached\0A\00", align 1
@.str.108 = private unnamed_addr constant [50 x i8] c"\016videobuf2_common: [%s] %s: vb2_dbuf result: %d\0A\00", align 1
@.str.109 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.110 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.111 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.112 = private unnamed_addr constant [60 x i8] c"\016videobuf2_common: [%s] %s: file io: vb2_dqbuf result: %d\0A\00", align 1
@__func__.vb2_thread = private unnamed_addr constant [11 x i8] c"vb2_thread\00", align 1
@system_freezing_cnt = external dso_local global %struct.atomic_t, align 4
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@llvm.used = appending global [6 x i8*] [i8* bitcast (%struct.kernel_param* @__param_debug to i8*), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__UNIQUE_ID_debugtype262, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__UNIQUE_ID_description310, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__UNIQUE_ID_author311, i32 0, i32 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__UNIQUE_ID_file312, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_license313, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @vb2_buffer_in_use(%struct.vb2_queue* %q, %struct.vb2_buffer* %vb) #0 !dbg !4655 {
entry:
  %retval = alloca i1, align 1
  %q.addr = alloca %struct.vb2_queue*, align 8
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %plane = alloca i32, align 4
  %mem_priv = alloca i8*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !4658, metadata !DIExpression()), !dbg !4659
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !4660, metadata !DIExpression()), !dbg !4661
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !4662, metadata !DIExpression()), !dbg !4663
  store i32 0, i32* %plane, align 4, !dbg !4664
  br label %for.cond, !dbg !4666

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %plane, align 4, !dbg !4667
  %1 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !4669
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %1, i32 0, i32 4, !dbg !4670
  %2 = load i32, i32* %num_planes, align 4, !dbg !4670
  %cmp = icmp ult i32 %0, %2, !dbg !4671
  br i1 %cmp, label %for.body, label %for.end, !dbg !4672

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %mem_priv, metadata !4673, metadata !DIExpression()), !dbg !4675
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !4676
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %3, i32 0, i32 10, !dbg !4677
  %4 = load i32, i32* %plane, align 4, !dbg !4678
  %idxprom = zext i32 %4 to i64, !dbg !4676
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !4676
  %mem_priv1 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 0, !dbg !4679
  %5 = load i8*, i8** %mem_priv1, align 8, !dbg !4679
  store i8* %5, i8** %mem_priv, align 8, !dbg !4675
  %6 = load i8*, i8** %mem_priv, align 8, !dbg !4680
  %tobool = icmp ne i8* %6, null, !dbg !4680
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4682

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !4683
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %7, i32 0, i32 0, !dbg !4683
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !4683
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 8, !dbg !4683
  %9 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !4683
  %num_users = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %9, i32 0, i32 13, !dbg !4683
  %10 = load i32 (i8*)*, i32 (i8*)** %num_users, align 8, !dbg !4683
  %tobool2 = icmp ne i32 (i8*)* %10, null, !dbg !4683
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !4683

cond.true:                                        ; preds = %land.lhs.true
  %11 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !4683
  %vb2_queue3 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %11, i32 0, i32 0, !dbg !4683
  %12 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue3, align 8, !dbg !4683
  %mem_ops4 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %12, i32 0, i32 8, !dbg !4683
  %13 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops4, align 8, !dbg !4683
  %num_users5 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %13, i32 0, i32 13, !dbg !4683
  %14 = load i32 (i8*)*, i32 (i8*)** %num_users5, align 8, !dbg !4683
  %15 = load i8*, i8** %mem_priv, align 8, !dbg !4683
  %call = call i32 %14(i8* %15) #10, !dbg !4683
  br label %cond.end, !dbg !4683

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !4683

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !4683
  %cmp6 = icmp ugt i32 %cond, 1, !dbg !4684
  br i1 %cmp6, label %if.then, label %if.end, !dbg !4685

if.then:                                          ; preds = %cond.end
  store i1 true, i1* %retval, align 1, !dbg !4686
  br label %return, !dbg !4686

if.end:                                           ; preds = %cond.end, %for.body
  br label %for.inc, !dbg !4687

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %plane, align 4, !dbg !4688
  %inc = add i32 %16, 1, !dbg !4688
  store i32 %inc, i32* %plane, align 4, !dbg !4688
  br label %for.cond, !dbg !4689, !llvm.loop !4690

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !4692
  br label %return, !dbg !4692

return:                                           ; preds = %for.end, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !4693
  ret i1 %17, !dbg !4693
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vb2_core_querybuf(%struct.vb2_queue* %q, i32 %index, i8* %pb) #0 !dbg !4694 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  %index.addr = alloca i32, align 4
  %pb.addr = alloca i8*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !4697, metadata !DIExpression()), !dbg !4698
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4699, metadata !DIExpression()), !dbg !4700
  store i8* %pb, i8** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pb.addr, metadata !4701, metadata !DIExpression()), !dbg !4702
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4703
  %tobool = icmp ne %struct.vb2_queue* %0, null, !dbg !4703
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4703

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4703
  %buf_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 9, !dbg !4703
  %2 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops, align 8, !dbg !4703
  %tobool1 = icmp ne %struct.vb2_buf_ops* %2, null, !dbg !4703
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !4703

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4703
  %buf_ops3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %3, i32 0, i32 9, !dbg !4703
  %4 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops3, align 8, !dbg !4703
  %fill_user_buffer = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %4, i32 0, i32 2, !dbg !4703
  %5 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %fill_user_buffer, align 8, !dbg !4703
  %tobool4 = icmp ne void (%struct.vb2_buffer*, i8*)* %5, null, !dbg !4703
  br i1 %tobool4, label %if.then, label %if.end, !dbg !4706

if.then:                                          ; preds = %land.lhs.true2
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4703
  %buf_ops5 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 9, !dbg !4703
  %7 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops5, align 8, !dbg !4703
  %fill_user_buffer6 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %7, i32 0, i32 2, !dbg !4703
  %8 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %fill_user_buffer6, align 8, !dbg !4703
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4703
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %9, i32 0, i32 20, !dbg !4703
  %10 = load i32, i32* %index.addr, align 4, !dbg !4703
  %idxprom = zext i32 %10 to i64, !dbg !4703
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !4703
  %11 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !4703
  %12 = load i8*, i8** %pb.addr, align 8, !dbg !4703
  call void %8(%struct.vb2_buffer* %11, i8* %12) #10, !dbg !4703
  br label %if.end, !dbg !4703

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !4707
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_verify_memory_type(%struct.vb2_queue* %q, i32 %memory, i32 %type) #0 !dbg !4708 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %memory.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !4711, metadata !DIExpression()), !dbg !4712
  store i32 %memory, i32* %memory.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %memory.addr, metadata !4713, metadata !DIExpression()), !dbg !4714
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4715, metadata !DIExpression()), !dbg !4716
  %0 = load i32, i32* %memory.addr, align 4, !dbg !4717
  %cmp = icmp ne i32 %0, 1, !dbg !4719
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !4720

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %memory.addr, align 4, !dbg !4721
  %cmp1 = icmp ne i32 %1, 2, !dbg !4722
  br i1 %cmp1, label %land.lhs.true2, label %if.end6, !dbg !4723

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, i32* %memory.addr, align 4, !dbg !4724
  %cmp3 = icmp ne i32 %2, 4, !dbg !4725
  br i1 %cmp3, label %if.then, label %if.end6, !dbg !4726

if.then:                                          ; preds = %land.lhs.true2
  br label %do.body, !dbg !4727

do.body:                                          ; preds = %if.then
  %3 = load i32, i32* @debug, align 4, !dbg !4729
  %cmp4 = icmp sge i32 %3, 1, !dbg !4729
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !4732

if.then5:                                         ; preds = %do.body
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4729
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 31, !dbg !4729
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !4729
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.vb2_verify_memory_type, i64 0, i64 0)) #11, !dbg !4729
  br label %if.end, !dbg !4729

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end, !dbg !4732

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !4733
  br label %return, !dbg !4733

if.end6:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %5 = load i32, i32* %type.addr, align 4, !dbg !4734
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4736
  %type7 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 0, !dbg !4737
  %7 = load i32, i32* %type7, align 8, !dbg !4737
  %cmp8 = icmp ne i32 %5, %7, !dbg !4738
  br i1 %cmp8, label %if.then9, label %if.end18, !dbg !4739

if.then9:                                         ; preds = %if.end6
  br label %do.body10, !dbg !4740

do.body10:                                        ; preds = %if.then9
  %8 = load i32, i32* @debug, align 4, !dbg !4742
  %cmp11 = icmp sge i32 %8, 1, !dbg !4742
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !4745

if.then12:                                        ; preds = %do.body10
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4742
  %name13 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %9, i32 0, i32 31, !dbg !4742
  %arraydecay14 = getelementptr inbounds [32 x i8], [32 x i8]* %name13, i64 0, i64 0, !dbg !4742
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i8* %arraydecay14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.vb2_verify_memory_type, i64 0, i64 0)) #11, !dbg !4742
  br label %if.end16, !dbg !4742

if.end16:                                         ; preds = %if.then12, %do.body10
  br label %do.end17, !dbg !4745

do.end17:                                         ; preds = %if.end16
  store i32 -22, i32* %retval, align 4, !dbg !4746
  br label %return, !dbg !4746

if.end18:                                         ; preds = %if.end6
  %10 = load i32, i32* %memory.addr, align 4, !dbg !4747
  %cmp19 = icmp eq i32 %10, 1, !dbg !4749
  br i1 %cmp19, label %land.lhs.true20, label %if.end31, !dbg !4750

land.lhs.true20:                                  ; preds = %if.end18
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4751
  %call21 = call i32 @__verify_mmap_ops(%struct.vb2_queue* %11) #10, !dbg !4752
  %tobool = icmp ne i32 %call21, 0, !dbg !4752
  br i1 %tobool, label %if.then22, label %if.end31, !dbg !4753

if.then22:                                        ; preds = %land.lhs.true20
  br label %do.body23, !dbg !4754

do.body23:                                        ; preds = %if.then22
  %12 = load i32, i32* @debug, align 4, !dbg !4756
  %cmp24 = icmp sge i32 %12, 1, !dbg !4756
  br i1 %cmp24, label %if.then25, label %if.end29, !dbg !4759

if.then25:                                        ; preds = %do.body23
  %13 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4756
  %name26 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %13, i32 0, i32 31, !dbg !4756
  %arraydecay27 = getelementptr inbounds [32 x i8], [32 x i8]* %name26, i64 0, i64 0, !dbg !4756
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay27, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.vb2_verify_memory_type, i64 0, i64 0)) #11, !dbg !4756
  br label %if.end29, !dbg !4756

if.end29:                                         ; preds = %if.then25, %do.body23
  br label %do.end30, !dbg !4759

do.end30:                                         ; preds = %if.end29
  store i32 -22, i32* %retval, align 4, !dbg !4760
  br label %return, !dbg !4760

if.end31:                                         ; preds = %land.lhs.true20, %if.end18
  %14 = load i32, i32* %memory.addr, align 4, !dbg !4761
  %cmp32 = icmp eq i32 %14, 2, !dbg !4763
  br i1 %cmp32, label %land.lhs.true33, label %if.end45, !dbg !4764

land.lhs.true33:                                  ; preds = %if.end31
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4765
  %call34 = call i32 @__verify_userptr_ops(%struct.vb2_queue* %15) #10, !dbg !4766
  %tobool35 = icmp ne i32 %call34, 0, !dbg !4766
  br i1 %tobool35, label %if.then36, label %if.end45, !dbg !4767

if.then36:                                        ; preds = %land.lhs.true33
  br label %do.body37, !dbg !4768

do.body37:                                        ; preds = %if.then36
  %16 = load i32, i32* @debug, align 4, !dbg !4770
  %cmp38 = icmp sge i32 %16, 1, !dbg !4770
  br i1 %cmp38, label %if.then39, label %if.end43, !dbg !4773

if.then39:                                        ; preds = %do.body37
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4770
  %name40 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %17, i32 0, i32 31, !dbg !4770
  %arraydecay41 = getelementptr inbounds [32 x i8], [32 x i8]* %name40, i64 0, i64 0, !dbg !4770
  %call42 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay41, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.vb2_verify_memory_type, i64 0, i64 0)) #11, !dbg !4770
  br label %if.end43, !dbg !4770

if.end43:                                         ; preds = %if.then39, %do.body37
  br label %do.end44, !dbg !4773

do.end44:                                         ; preds = %if.end43
  store i32 -22, i32* %retval, align 4, !dbg !4774
  br label %return, !dbg !4774

if.end45:                                         ; preds = %land.lhs.true33, %if.end31
  %18 = load i32, i32* %memory.addr, align 4, !dbg !4775
  %cmp46 = icmp eq i32 %18, 4, !dbg !4777
  br i1 %cmp46, label %land.lhs.true47, label %if.end59, !dbg !4778

land.lhs.true47:                                  ; preds = %if.end45
  %19 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4779
  %call48 = call i32 @__verify_dmabuf_ops(%struct.vb2_queue* %19) #10, !dbg !4780
  %tobool49 = icmp ne i32 %call48, 0, !dbg !4780
  br i1 %tobool49, label %if.then50, label %if.end59, !dbg !4781

if.then50:                                        ; preds = %land.lhs.true47
  br label %do.body51, !dbg !4782

do.body51:                                        ; preds = %if.then50
  %20 = load i32, i32* @debug, align 4, !dbg !4784
  %cmp52 = icmp sge i32 %20, 1, !dbg !4784
  br i1 %cmp52, label %if.then53, label %if.end57, !dbg !4787

if.then53:                                        ; preds = %do.body51
  %21 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4784
  %name54 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %21, i32 0, i32 31, !dbg !4784
  %arraydecay55 = getelementptr inbounds [32 x i8], [32 x i8]* %name54, i64 0, i64 0, !dbg !4784
  %call56 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay55, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.vb2_verify_memory_type, i64 0, i64 0)) #11, !dbg !4784
  br label %if.end57, !dbg !4784

if.end57:                                         ; preds = %if.then53, %do.body51
  br label %do.end58, !dbg !4787

do.end58:                                         ; preds = %if.end57
  store i32 -22, i32* %retval, align 4, !dbg !4788
  br label %return, !dbg !4788

if.end59:                                         ; preds = %land.lhs.true47, %if.end45
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4789
  %call60 = call zeroext i1 @vb2_fileio_is_active(%struct.vb2_queue* %22) #10, !dbg !4791
  br i1 %call60, label %if.then61, label %if.end70, !dbg !4792

if.then61:                                        ; preds = %if.end59
  br label %do.body62, !dbg !4793

do.body62:                                        ; preds = %if.then61
  %23 = load i32, i32* @debug, align 4, !dbg !4795
  %cmp63 = icmp sge i32 %23, 1, !dbg !4795
  br i1 %cmp63, label %if.then64, label %if.end68, !dbg !4798

if.then64:                                        ; preds = %do.body62
  %24 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4795
  %name65 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %24, i32 0, i32 31, !dbg !4795
  %arraydecay66 = getelementptr inbounds [32 x i8], [32 x i8]* %name65, i64 0, i64 0, !dbg !4795
  %call67 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay66, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.vb2_verify_memory_type, i64 0, i64 0)) #11, !dbg !4795
  br label %if.end68, !dbg !4795

if.end68:                                         ; preds = %if.then64, %do.body62
  br label %do.end69, !dbg !4798

do.end69:                                         ; preds = %if.end68
  store i32 -16, i32* %retval, align 4, !dbg !4799
  br label %return, !dbg !4799

if.end70:                                         ; preds = %if.end59
  store i32 0, i32* %retval, align 4, !dbg !4800
  br label %return, !dbg !4800

return:                                           ; preds = %if.end70, %do.end69, %do.end58, %do.end44, %do.end30, %do.end17, %do.end
  %25 = load i32, i32* %retval, align 4, !dbg !4801
  ret i32 %25, !dbg !4801
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__verify_mmap_ops(%struct.vb2_queue* %q) #0 !dbg !4802 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !4803, metadata !DIExpression()), !dbg !4804
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4805
  %io_modes = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 1, !dbg !4807
  %1 = load i32, i32* %io_modes, align 4, !dbg !4807
  %and = and i32 %1, 1, !dbg !4808
  %tobool = icmp ne i32 %and, 0, !dbg !4808
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4809

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4810
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %2, i32 0, i32 8, !dbg !4811
  %3 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !4811
  %alloc = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %3, i32 0, i32 0, !dbg !4812
  %4 = load i8* (%struct.device*, i64, i64, i32, i32)*, i8* (%struct.device*, i64, i64, i32, i32)** %alloc, align 8, !dbg !4812
  %tobool1 = icmp ne i8* (%struct.device*, i64, i64, i32, i32)* %4, null, !dbg !4810
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !4813

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4814
  %mem_ops3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %5, i32 0, i32 8, !dbg !4815
  %6 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops3, align 8, !dbg !4815
  %put = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %6, i32 0, i32 1, !dbg !4816
  %7 = load void (i8*)*, void (i8*)** %put, align 8, !dbg !4816
  %tobool4 = icmp ne void (i8*)* %7, null, !dbg !4814
  br i1 %tobool4, label %lor.lhs.false5, label %if.then, !dbg !4817

lor.lhs.false5:                                   ; preds = %lor.lhs.false2
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4818
  %mem_ops6 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 8, !dbg !4819
  %9 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops6, align 8, !dbg !4819
  %mmap = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %9, i32 0, i32 14, !dbg !4820
  %10 = load i32 (i8*, %struct.vm_area_struct*)*, i32 (i8*, %struct.vm_area_struct*)** %mmap, align 8, !dbg !4820
  %tobool7 = icmp ne i32 (i8*, %struct.vm_area_struct*)* %10, null, !dbg !4818
  br i1 %tobool7, label %if.end, label %if.then, !dbg !4821

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !4822
  br label %return, !dbg !4822

if.end:                                           ; preds = %lor.lhs.false5
  store i32 0, i32* %retval, align 4, !dbg !4823
  br label %return, !dbg !4823

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !4824
  ret i32 %11, !dbg !4824
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__verify_userptr_ops(%struct.vb2_queue* %q) #0 !dbg !4825 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !4826, metadata !DIExpression()), !dbg !4827
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4828
  %io_modes = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 1, !dbg !4830
  %1 = load i32, i32* %io_modes, align 4, !dbg !4830
  %and = and i32 %1, 2, !dbg !4831
  %tobool = icmp ne i32 %and, 0, !dbg !4831
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4832

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4833
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %2, i32 0, i32 8, !dbg !4834
  %3 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !4834
  %get_userptr = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %3, i32 0, i32 3, !dbg !4835
  %4 = load i8* (%struct.device*, i64, i64, i32)*, i8* (%struct.device*, i64, i64, i32)** %get_userptr, align 8, !dbg !4835
  %tobool1 = icmp ne i8* (%struct.device*, i64, i64, i32)* %4, null, !dbg !4833
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !4836

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4837
  %mem_ops3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %5, i32 0, i32 8, !dbg !4838
  %6 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops3, align 8, !dbg !4838
  %put_userptr = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %6, i32 0, i32 4, !dbg !4839
  %7 = load void (i8*)*, void (i8*)** %put_userptr, align 8, !dbg !4839
  %tobool4 = icmp ne void (i8*)* %7, null, !dbg !4837
  br i1 %tobool4, label %if.end, label %if.then, !dbg !4840

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !4841
  br label %return, !dbg !4841

if.end:                                           ; preds = %lor.lhs.false2
  store i32 0, i32* %retval, align 4, !dbg !4842
  br label %return, !dbg !4842

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !4843
  ret i32 %8, !dbg !4843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__verify_dmabuf_ops(%struct.vb2_queue* %q) #0 !dbg !4844 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !4845, metadata !DIExpression()), !dbg !4846
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4847
  %io_modes = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 1, !dbg !4849
  %1 = load i32, i32* %io_modes, align 4, !dbg !4849
  %and = and i32 %1, 16, !dbg !4850
  %tobool = icmp ne i32 %and, 0, !dbg !4850
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4851

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4852
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %2, i32 0, i32 8, !dbg !4853
  %3 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !4853
  %attach_dmabuf = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %3, i32 0, i32 7, !dbg !4854
  %4 = load i8* (%struct.device*, %struct.dma_buf*, i64, i32)*, i8* (%struct.device*, %struct.dma_buf*, i64, i32)** %attach_dmabuf, align 8, !dbg !4854
  %tobool1 = icmp ne i8* (%struct.device*, %struct.dma_buf*, i64, i32)* %4, null, !dbg !4852
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !4855

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4856
  %mem_ops3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %5, i32 0, i32 8, !dbg !4857
  %6 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops3, align 8, !dbg !4857
  %detach_dmabuf = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %6, i32 0, i32 8, !dbg !4858
  %7 = load void (i8*)*, void (i8*)** %detach_dmabuf, align 8, !dbg !4858
  %tobool4 = icmp ne void (i8*)* %7, null, !dbg !4856
  br i1 %tobool4, label %lor.lhs.false5, label %if.then, !dbg !4859

lor.lhs.false5:                                   ; preds = %lor.lhs.false2
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4860
  %mem_ops6 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 8, !dbg !4861
  %9 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops6, align 8, !dbg !4861
  %map_dmabuf = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %9, i32 0, i32 9, !dbg !4862
  %10 = load i32 (i8*)*, i32 (i8*)** %map_dmabuf, align 8, !dbg !4862
  %tobool7 = icmp ne i32 (i8*)* %10, null, !dbg !4860
  br i1 %tobool7, label %lor.lhs.false8, label %if.then, !dbg !4863

lor.lhs.false8:                                   ; preds = %lor.lhs.false5
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4864
  %mem_ops9 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 8, !dbg !4865
  %12 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops9, align 8, !dbg !4865
  %unmap_dmabuf = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %12, i32 0, i32 10, !dbg !4866
  %13 = load void (i8*)*, void (i8*)** %unmap_dmabuf, align 8, !dbg !4866
  %tobool10 = icmp ne void (i8*)* %13, null, !dbg !4864
  br i1 %tobool10, label %if.end, label %if.then, !dbg !4867

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false5, %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !4868
  br label %return, !dbg !4868

if.end:                                           ; preds = %lor.lhs.false8
  store i32 0, i32* %retval, align 4, !dbg !4869
  br label %return, !dbg !4869

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !4870
  ret i32 %14, !dbg !4870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @vb2_fileio_is_active(%struct.vb2_queue* %q) #0 !dbg !4871 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !4874, metadata !DIExpression()), !dbg !4875
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4876
  %fileio = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 29, !dbg !4877
  %1 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !4877
  %tobool = icmp ne %struct.vb2_fileio_data* %1, null, !dbg !4876
  ret i1 %tobool, !dbg !4878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_core_reqbufs(%struct.vb2_queue* %q, i32 %memory, i32* %count) #0 !dbg !4879 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %memory.addr = alloca i32, align 4
  %count.addr = alloca i32*, align 8
  %num_buffers = alloca i32, align 4
  %allocated_buffers = alloca i32, align 4
  %num_planes = alloca i32, align 4
  %plane_sizes = alloca [8 x i32], align 16
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__UNIQUE_ID___x266 = alloca i32, align 4
  %__UNIQUE_ID___y267 = alloca i32, align 4
  %tmp79 = alloca i32, align 4
  %__UNIQUE_ID___x268 = alloca i32, align 4
  %__UNIQUE_ID___y269 = alloca i32, align 4
  %tmp82 = alloca i32, align 4
  %__ret_warn_on105 = alloca i32, align 4
  %tmp130 = alloca i64, align 8
  %__ret_warn_on142 = alloca i32, align 4
  %tmp167 = alloca i64, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !4882, metadata !DIExpression()), !dbg !4883
  store i32 %memory, i32* %memory.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %memory.addr, metadata !4884, metadata !DIExpression()), !dbg !4885
  store i32* %count, i32** %count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %count.addr, metadata !4886, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.declare(metadata i32* %num_buffers, metadata !4888, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.declare(metadata i32* %allocated_buffers, metadata !4890, metadata !DIExpression()), !dbg !4891
  call void @llvm.dbg.declare(metadata i32* %num_planes, metadata !4892, metadata !DIExpression()), !dbg !4893
  store i32 0, i32* %num_planes, align 4, !dbg !4893
  call void @llvm.dbg.declare(metadata [8 x i32]* %plane_sizes, metadata !4894, metadata !DIExpression()), !dbg !4896
  %0 = bitcast [8 x i32]* %plane_sizes to i8*, !dbg !4896
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 32, i1 false), !dbg !4896
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4897, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4899, metadata !DIExpression()), !dbg !4900
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4901
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 28, !dbg !4903
  %bf.load = load i16, i16* %streaming, align 8, !dbg !4903
  %bf.clear = and i16 %bf.load, 1, !dbg !4903
  %bf.cast = zext i16 %bf.clear to i32, !dbg !4903
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !4901
  br i1 %tobool, label %if.then, label %if.end2, !dbg !4904

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !4905

do.body:                                          ; preds = %if.then
  %2 = load i32, i32* @debug, align 4, !dbg !4907
  %cmp = icmp sge i32 %2, 1, !dbg !4907
  br i1 %cmp, label %if.then1, label %if.end, !dbg !4910

if.then1:                                         ; preds = %do.body
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4907
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %3, i32 0, i32 31, !dbg !4907
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !4907
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.vb2_core_reqbufs, i64 0, i64 0)) #11, !dbg !4907
  br label %if.end, !dbg !4907

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !4910

do.end:                                           ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !4911
  br label %return, !dbg !4911

if.end2:                                          ; preds = %entry
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4912
  %waiting_in_dqbuf = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 28, !dbg !4914
  %bf.load3 = load i16, i16* %waiting_in_dqbuf, align 8, !dbg !4914
  %bf.lshr = lshr i16 %bf.load3, 4, !dbg !4914
  %bf.clear4 = and i16 %bf.lshr, 1, !dbg !4914
  %bf.cast5 = zext i16 %bf.clear4 to i32, !dbg !4914
  %tobool6 = icmp ne i32 %bf.cast5, 0, !dbg !4912
  br i1 %tobool6, label %land.lhs.true, label %if.end17, !dbg !4915

land.lhs.true:                                    ; preds = %if.end2
  %5 = load i32*, i32** %count.addr, align 8, !dbg !4916
  %6 = load i32, i32* %5, align 4, !dbg !4917
  %tobool7 = icmp ne i32 %6, 0, !dbg !4917
  br i1 %tobool7, label %if.then8, label %if.end17, !dbg !4918

if.then8:                                         ; preds = %land.lhs.true
  br label %do.body9, !dbg !4919

do.body9:                                         ; preds = %if.then8
  %7 = load i32, i32* @debug, align 4, !dbg !4921
  %cmp10 = icmp sge i32 %7, 1, !dbg !4921
  br i1 %cmp10, label %if.then11, label %if.end15, !dbg !4924

if.then11:                                        ; preds = %do.body9
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4921
  %name12 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 31, !dbg !4921
  %arraydecay13 = getelementptr inbounds [32 x i8], [32 x i8]* %name12, i64 0, i64 0, !dbg !4921
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i8* %arraydecay13, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.vb2_core_reqbufs, i64 0, i64 0)) #11, !dbg !4921
  br label %if.end15, !dbg !4921

if.end15:                                         ; preds = %if.then11, %do.body9
  br label %do.end16, !dbg !4924

do.end16:                                         ; preds = %if.end15
  store i32 -16, i32* %retval, align 4, !dbg !4925
  br label %return, !dbg !4925

if.end17:                                         ; preds = %land.lhs.true, %if.end2
  %9 = load i32*, i32** %count.addr, align 8, !dbg !4926
  %10 = load i32, i32* %9, align 4, !dbg !4928
  %cmp18 = icmp eq i32 %10, 0, !dbg !4929
  br i1 %cmp18, label %if.then27, label %lor.lhs.false, !dbg !4930

lor.lhs.false:                                    ; preds = %if.end17
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4931
  %num_buffers19 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 21, !dbg !4932
  %12 = load i32, i32* %num_buffers19, align 8, !dbg !4932
  %cmp20 = icmp ne i32 %12, 0, !dbg !4933
  br i1 %cmp20, label %if.then27, label %lor.lhs.false21, !dbg !4934

lor.lhs.false21:                                  ; preds = %lor.lhs.false
  %13 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4935
  %memory22 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %13, i32 0, i32 18, !dbg !4936
  %14 = load i32, i32* %memory22, align 8, !dbg !4936
  %cmp23 = icmp ne i32 %14, 0, !dbg !4937
  br i1 %cmp23, label %land.lhs.true24, label %if.end53, !dbg !4938

land.lhs.true24:                                  ; preds = %lor.lhs.false21
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4939
  %memory25 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 18, !dbg !4940
  %16 = load i32, i32* %memory25, align 8, !dbg !4940
  %17 = load i32, i32* %memory.addr, align 4, !dbg !4941
  %cmp26 = icmp ne i32 %16, %17, !dbg !4942
  br i1 %cmp26, label %if.then27, label %if.end53, !dbg !4943

if.then27:                                        ; preds = %land.lhs.true24, %lor.lhs.false, %if.end17
  %18 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4944
  %mmap_lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %18, i32 0, i32 17, !dbg !4946
  call void @mutex_lock(%struct.mutex* %mmap_lock) #10, !dbg !4947
  %19 = load i32, i32* @debug, align 4, !dbg !4948
  %tobool28 = icmp ne i32 %19, 0, !dbg !4948
  br i1 %tobool28, label %land.lhs.true29, label %if.end43, !dbg !4950

land.lhs.true29:                                  ; preds = %if.then27
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4951
  %memory30 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %20, i32 0, i32 18, !dbg !4952
  %21 = load i32, i32* %memory30, align 8, !dbg !4952
  %cmp31 = icmp eq i32 %21, 1, !dbg !4953
  br i1 %cmp31, label %land.lhs.true32, label %if.end43, !dbg !4954

land.lhs.true32:                                  ; preds = %land.lhs.true29
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4955
  %call33 = call zeroext i1 @__buffers_in_use(%struct.vb2_queue* %22) #10, !dbg !4956
  br i1 %call33, label %if.then34, label %if.end43, !dbg !4957

if.then34:                                        ; preds = %land.lhs.true32
  br label %do.body35, !dbg !4958

do.body35:                                        ; preds = %if.then34
  %23 = load i32, i32* @debug, align 4, !dbg !4959
  %cmp36 = icmp sge i32 %23, 1, !dbg !4959
  br i1 %cmp36, label %if.then37, label %if.end41, !dbg !4962

if.then37:                                        ; preds = %do.body35
  %24 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4959
  %name38 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %24, i32 0, i32 31, !dbg !4959
  %arraydecay39 = getelementptr inbounds [32 x i8], [32 x i8]* %name38, i64 0, i64 0, !dbg !4959
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay39, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.vb2_core_reqbufs, i64 0, i64 0)) #11, !dbg !4959
  br label %if.end41, !dbg !4959

if.end41:                                         ; preds = %if.then37, %do.body35
  br label %do.end42, !dbg !4962

do.end42:                                         ; preds = %if.end41
  br label %if.end43, !dbg !4962

if.end43:                                         ; preds = %do.end42, %land.lhs.true32, %land.lhs.true29, %if.then27
  %25 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4963
  call void @__vb2_queue_cancel(%struct.vb2_queue* %25) #10, !dbg !4964
  %26 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4965
  %27 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4966
  %num_buffers44 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %27, i32 0, i32 21, !dbg !4967
  %28 = load i32, i32* %num_buffers44, align 8, !dbg !4967
  %call45 = call i32 @__vb2_queue_free(%struct.vb2_queue* %26, i32 %28) #10, !dbg !4968
  store i32 %call45, i32* %ret, align 4, !dbg !4969
  %29 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4970
  %mmap_lock46 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %29, i32 0, i32 17, !dbg !4971
  call void @mutex_unlock(%struct.mutex* %mmap_lock46) #10, !dbg !4972
  %30 = load i32, i32* %ret, align 4, !dbg !4973
  %tobool47 = icmp ne i32 %30, 0, !dbg !4973
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !4975

if.then48:                                        ; preds = %if.end43
  %31 = load i32, i32* %ret, align 4, !dbg !4976
  store i32 %31, i32* %retval, align 4, !dbg !4977
  br label %return, !dbg !4977

if.end49:                                         ; preds = %if.end43
  %32 = load i32*, i32** %count.addr, align 8, !dbg !4978
  %33 = load i32, i32* %32, align 4, !dbg !4980
  %cmp50 = icmp eq i32 %33, 0, !dbg !4981
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !4982

if.then51:                                        ; preds = %if.end49
  store i32 0, i32* %retval, align 4, !dbg !4983
  br label %return, !dbg !4983

if.end52:                                         ; preds = %if.end49
  br label %if.end53, !dbg !4984

if.end53:                                         ; preds = %if.end52, %land.lhs.true24, %lor.lhs.false21
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !4985, metadata !DIExpression()), !dbg !4987
  %34 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !4987
  %min_buffers_needed = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %34, i32 0, i32 15, !dbg !4987
  %35 = load i32, i32* %min_buffers_needed, align 8, !dbg !4987
  %cmp54 = icmp ugt i32 %35, 32, !dbg !4987
  %lnot = xor i1 %cmp54, true, !dbg !4987
  %lnot55 = xor i1 %lnot, true, !dbg !4987
  %lnot.ext = zext i1 %lnot55 to i32, !dbg !4987
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !4987
  %36 = load i32, i32* %__ret_warn_on, align 4, !dbg !4988
  %tobool56 = icmp ne i32 %36, 0, !dbg !4988
  %lnot57 = xor i1 %tobool56, true, !dbg !4988
  %lnot59 = xor i1 %lnot57, true, !dbg !4988
  %lnot.ext60 = zext i1 %lnot59 to i32, !dbg !4988
  %conv = sext i32 %lnot.ext60 to i64, !dbg !4988
  %tobool61 = icmp ne i64 %conv, 0, !dbg !4988
  br i1 %tobool61, label %if.then62, label %if.end71, !dbg !4987

if.then62:                                        ; preds = %if.end53
  br label %do.body63, !dbg !4988

do.body63:                                        ; preds = %if.then62
  br label %do.body64, !dbg !4990

do.body64:                                        ; preds = %do.body63
  br label %do.end65, !dbg !4992

do.end65:                                         ; preds = %do.body64
  br label %do.body66, !dbg !4990

do.body66:                                        ; preds = %do.end65
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 786, i32 2305, i64 12) #6, !dbg !4994, !srcloc !4996
  br label %do.end67, !dbg !4994

do.end67:                                         ; preds = %do.body66
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 265) #6, !dbg !4997, !srcloc !4999
  br label %do.body68, !dbg !4990

do.body68:                                        ; preds = %do.end67
  br label %do.end69, !dbg !5000

do.end69:                                         ; preds = %do.body68
  br label %do.end70, !dbg !4990

do.end70:                                         ; preds = %do.end69
  br label %if.end71, !dbg !4990

if.end71:                                         ; preds = %do.end70, %if.end53
  %37 = load i32, i32* %__ret_warn_on, align 4, !dbg !4987
  %tobool72 = icmp ne i32 %37, 0, !dbg !4987
  %lnot73 = xor i1 %tobool72, true, !dbg !4987
  %lnot75 = xor i1 %lnot73, true, !dbg !4987
  %lnot.ext76 = zext i1 %lnot75 to i32, !dbg !4987
  %conv77 = sext i32 %lnot.ext76 to i64, !dbg !4987
  store i64 %conv77, i64* %tmp, align 8, !dbg !4988
  %38 = load i64, i64* %tmp, align 8, !dbg !4987
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x266, metadata !5002, metadata !DIExpression()), !dbg !5004
  %39 = load i32*, i32** %count.addr, align 8, !dbg !5004
  %40 = load i32, i32* %39, align 4, !dbg !5004
  store i32 %40, i32* %__UNIQUE_ID___x266, align 4, !dbg !5004
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y267, metadata !5005, metadata !DIExpression()), !dbg !5004
  %41 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5004
  %min_buffers_needed78 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %41, i32 0, i32 15, !dbg !5004
  %42 = load i32, i32* %min_buffers_needed78, align 8, !dbg !5004
  store i32 %42, i32* %__UNIQUE_ID___y267, align 4, !dbg !5004
  %43 = load i32, i32* %__UNIQUE_ID___x266, align 4, !dbg !5004
  %44 = load i32, i32* %__UNIQUE_ID___y267, align 4, !dbg !5004
  %cmp80 = icmp ugt i32 %43, %44, !dbg !5004
  br i1 %cmp80, label %cond.true, label %cond.false, !dbg !5004

cond.true:                                        ; preds = %if.end71
  %45 = load i32, i32* %__UNIQUE_ID___x266, align 4, !dbg !5004
  br label %cond.end, !dbg !5004

cond.false:                                       ; preds = %if.end71
  %46 = load i32, i32* %__UNIQUE_ID___y267, align 4, !dbg !5004
  br label %cond.end, !dbg !5004

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %45, %cond.true ], [ %46, %cond.false ], !dbg !5004
  store i32 %cond, i32* %tmp79, align 4, !dbg !5004
  %47 = load i32, i32* %tmp79, align 4, !dbg !5004
  store i32 %47, i32* %num_buffers, align 4, !dbg !5006
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x268, metadata !5007, metadata !DIExpression()), !dbg !5009
  %48 = load i32, i32* %num_buffers, align 4, !dbg !5009
  store i32 %48, i32* %__UNIQUE_ID___x268, align 4, !dbg !5009
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y269, metadata !5010, metadata !DIExpression()), !dbg !5009
  store i32 32, i32* %__UNIQUE_ID___y269, align 4, !dbg !5009
  %49 = load i32, i32* %__UNIQUE_ID___x268, align 4, !dbg !5009
  %50 = load i32, i32* %__UNIQUE_ID___y269, align 4, !dbg !5009
  %cmp83 = icmp ult i32 %49, %50, !dbg !5009
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !5009

cond.true85:                                      ; preds = %cond.end
  %51 = load i32, i32* %__UNIQUE_ID___x268, align 4, !dbg !5009
  br label %cond.end87, !dbg !5009

cond.false86:                                     ; preds = %cond.end
  %52 = load i32, i32* %__UNIQUE_ID___y269, align 4, !dbg !5009
  br label %cond.end87, !dbg !5009

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i32 [ %51, %cond.true85 ], [ %52, %cond.false86 ], !dbg !5009
  store i32 %cond88, i32* %tmp82, align 4, !dbg !5009
  %53 = load i32, i32* %tmp82, align 4, !dbg !5009
  store i32 %53, i32* %num_buffers, align 4, !dbg !5011
  %54 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5012
  %alloc_devs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %54, i32 0, i32 16, !dbg !5013
  %arraydecay89 = getelementptr inbounds [8 x %struct.device*], [8 x %struct.device*]* %alloc_devs, i64 0, i64 0, !dbg !5014
  %55 = bitcast %struct.device** %arraydecay89 to i8*, !dbg !5014
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 64, i1 false), !dbg !5014
  %56 = load i32, i32* %memory.addr, align 4, !dbg !5015
  %57 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5016
  %memory90 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %57, i32 0, i32 18, !dbg !5017
  store i32 %56, i32* %memory90, align 8, !dbg !5018
  %58 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5019
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %58, i32 0, i32 7, !dbg !5019
  %59 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !5019
  %queue_setup = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %59, i32 0, i32 0, !dbg !5019
  %60 = load i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)*, i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)** %queue_setup, align 8, !dbg !5019
  %tobool91 = icmp ne i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)* %60, null, !dbg !5019
  br i1 %tobool91, label %cond.true92, label %cond.false99, !dbg !5019

cond.true92:                                      ; preds = %cond.end87
  %61 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5019
  %ops93 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %61, i32 0, i32 7, !dbg !5019
  %62 = load %struct.vb2_ops*, %struct.vb2_ops** %ops93, align 8, !dbg !5019
  %queue_setup94 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %62, i32 0, i32 0, !dbg !5019
  %63 = load i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)*, i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)** %queue_setup94, align 8, !dbg !5019
  %64 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5019
  %arraydecay95 = getelementptr inbounds [8 x i32], [8 x i32]* %plane_sizes, i64 0, i64 0, !dbg !5019
  %65 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5019
  %alloc_devs96 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %65, i32 0, i32 16, !dbg !5019
  %arraydecay97 = getelementptr inbounds [8 x %struct.device*], [8 x %struct.device*]* %alloc_devs96, i64 0, i64 0, !dbg !5019
  %call98 = call i32 %63(%struct.vb2_queue* %64, i32* %num_buffers, i32* %num_planes, i32* %arraydecay95, %struct.device** %arraydecay97) #10, !dbg !5019
  br label %cond.end100, !dbg !5019

cond.false99:                                     ; preds = %cond.end87
  br label %cond.end100, !dbg !5019

cond.end100:                                      ; preds = %cond.false99, %cond.true92
  %cond101 = phi i32 [ %call98, %cond.true92 ], [ 0, %cond.false99 ], !dbg !5019
  store i32 %cond101, i32* %ret, align 4, !dbg !5020
  %66 = load i32, i32* %ret, align 4, !dbg !5021
  %tobool102 = icmp ne i32 %66, 0, !dbg !5021
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !5023

if.then103:                                       ; preds = %cond.end100
  %67 = load i32, i32* %ret, align 4, !dbg !5024
  store i32 %67, i32* %retval, align 4, !dbg !5025
  br label %return, !dbg !5025

if.end104:                                        ; preds = %cond.end100
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on105, metadata !5026, metadata !DIExpression()), !dbg !5029
  %68 = load i32, i32* %num_planes, align 4, !dbg !5029
  %tobool106 = icmp ne i32 %68, 0, !dbg !5029
  %lnot107 = xor i1 %tobool106, true, !dbg !5029
  %lnot109 = xor i1 %lnot107, true, !dbg !5029
  %lnot111 = xor i1 %lnot109, true, !dbg !5029
  %lnot.ext112 = zext i1 %lnot111 to i32, !dbg !5029
  store i32 %lnot.ext112, i32* %__ret_warn_on105, align 4, !dbg !5029
  %69 = load i32, i32* %__ret_warn_on105, align 4, !dbg !5030
  %tobool113 = icmp ne i32 %69, 0, !dbg !5030
  %lnot114 = xor i1 %tobool113, true, !dbg !5030
  %lnot116 = xor i1 %lnot114, true, !dbg !5030
  %lnot.ext117 = zext i1 %lnot116 to i32, !dbg !5030
  %conv118 = sext i32 %lnot.ext117 to i64, !dbg !5030
  %tobool119 = icmp ne i64 %conv118, 0, !dbg !5030
  br i1 %tobool119, label %if.then120, label %if.end129, !dbg !5029

if.then120:                                       ; preds = %if.end104
  br label %do.body121, !dbg !5030

do.body121:                                       ; preds = %if.then120
  br label %do.body122, !dbg !5032

do.body122:                                       ; preds = %do.body121
  br label %do.end123, !dbg !5034

do.end123:                                        ; preds = %do.body122
  br label %do.body124, !dbg !5032

do.body124:                                       ; preds = %do.end123
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 802, i32 2305, i64 12) #6, !dbg !5036, !srcloc !5038
  br label %do.end125, !dbg !5036

do.end125:                                        ; preds = %do.body124
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 270) #6, !dbg !5039, !srcloc !5041
  br label %do.body126, !dbg !5032

do.body126:                                       ; preds = %do.end125
  br label %do.end127, !dbg !5042

do.end127:                                        ; preds = %do.body126
  br label %do.end128, !dbg !5032

do.end128:                                        ; preds = %do.end127
  br label %if.end129, !dbg !5032

if.end129:                                        ; preds = %do.end128, %if.end104
  %70 = load i32, i32* %__ret_warn_on105, align 4, !dbg !5029
  %tobool131 = icmp ne i32 %70, 0, !dbg !5029
  %lnot132 = xor i1 %tobool131, true, !dbg !5029
  %lnot134 = xor i1 %lnot132, true, !dbg !5029
  %lnot.ext135 = zext i1 %lnot134 to i32, !dbg !5029
  %conv136 = sext i32 %lnot.ext135 to i64, !dbg !5029
  store i64 %conv136, i64* %tmp130, align 8, !dbg !5030
  %71 = load i64, i64* %tmp130, align 8, !dbg !5029
  %tobool137 = icmp ne i64 %71, 0, !dbg !5044
  br i1 %tobool137, label %if.then138, label %if.end139, !dbg !5045

if.then138:                                       ; preds = %if.end129
  store i32 -22, i32* %retval, align 4, !dbg !5046
  br label %return, !dbg !5046

if.end139:                                        ; preds = %if.end129
  store i32 0, i32* %i, align 4, !dbg !5047
  br label %for.cond, !dbg !5049

for.cond:                                         ; preds = %for.inc, %if.end139
  %72 = load i32, i32* %i, align 4, !dbg !5050
  %73 = load i32, i32* %num_planes, align 4, !dbg !5052
  %cmp140 = icmp ult i32 %72, %73, !dbg !5053
  br i1 %cmp140, label %for.body, label %for.end, !dbg !5054

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on142, metadata !5055, metadata !DIExpression()), !dbg !5058
  %74 = load i32, i32* %i, align 4, !dbg !5058
  %idxprom = zext i32 %74 to i64, !dbg !5058
  %arrayidx = getelementptr [8 x i32], [8 x i32]* %plane_sizes, i64 0, i64 %idxprom, !dbg !5058
  %75 = load i32, i32* %arrayidx, align 4, !dbg !5058
  %tobool143 = icmp ne i32 %75, 0, !dbg !5058
  %lnot144 = xor i1 %tobool143, true, !dbg !5058
  %lnot146 = xor i1 %lnot144, true, !dbg !5058
  %lnot148 = xor i1 %lnot146, true, !dbg !5058
  %lnot.ext149 = zext i1 %lnot148 to i32, !dbg !5058
  store i32 %lnot.ext149, i32* %__ret_warn_on142, align 4, !dbg !5058
  %76 = load i32, i32* %__ret_warn_on142, align 4, !dbg !5059
  %tobool150 = icmp ne i32 %76, 0, !dbg !5059
  %lnot151 = xor i1 %tobool150, true, !dbg !5059
  %lnot153 = xor i1 %lnot151, true, !dbg !5059
  %lnot.ext154 = zext i1 %lnot153 to i32, !dbg !5059
  %conv155 = sext i32 %lnot.ext154 to i64, !dbg !5059
  %tobool156 = icmp ne i64 %conv155, 0, !dbg !5059
  br i1 %tobool156, label %if.then157, label %if.end166, !dbg !5058

if.then157:                                       ; preds = %for.body
  br label %do.body158, !dbg !5059

do.body158:                                       ; preds = %if.then157
  br label %do.body159, !dbg !5061

do.body159:                                       ; preds = %do.body158
  br label %do.end160, !dbg !5063

do.end160:                                        ; preds = %do.body159
  br label %do.body161, !dbg !5061

do.body161:                                       ; preds = %do.end160
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 806, i32 2305, i64 12) #6, !dbg !5065, !srcloc !5067
  br label %do.end162, !dbg !5065

do.end162:                                        ; preds = %do.body161
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 271) #6, !dbg !5068, !srcloc !5070
  br label %do.body163, !dbg !5061

do.body163:                                       ; preds = %do.end162
  br label %do.end164, !dbg !5071

do.end164:                                        ; preds = %do.body163
  br label %do.end165, !dbg !5061

do.end165:                                        ; preds = %do.end164
  br label %if.end166, !dbg !5061

if.end166:                                        ; preds = %do.end165, %for.body
  %77 = load i32, i32* %__ret_warn_on142, align 4, !dbg !5058
  %tobool168 = icmp ne i32 %77, 0, !dbg !5058
  %lnot169 = xor i1 %tobool168, true, !dbg !5058
  %lnot171 = xor i1 %lnot169, true, !dbg !5058
  %lnot.ext172 = zext i1 %lnot171 to i32, !dbg !5058
  %conv173 = sext i32 %lnot.ext172 to i64, !dbg !5058
  store i64 %conv173, i64* %tmp167, align 8, !dbg !5059
  %78 = load i64, i64* %tmp167, align 8, !dbg !5058
  %tobool174 = icmp ne i64 %78, 0, !dbg !5073
  br i1 %tobool174, label %if.then175, label %if.end176, !dbg !5074

if.then175:                                       ; preds = %if.end166
  store i32 -22, i32* %retval, align 4, !dbg !5075
  br label %return, !dbg !5075

if.end176:                                        ; preds = %if.end166
  br label %for.inc, !dbg !5073

for.inc:                                          ; preds = %if.end176
  %79 = load i32, i32* %i, align 4, !dbg !5076
  %inc = add i32 %79, 1, !dbg !5076
  store i32 %inc, i32* %i, align 4, !dbg !5076
  br label %for.cond, !dbg !5077, !llvm.loop !5078

for.end:                                          ; preds = %for.cond
  %80 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5080
  %81 = load i32, i32* %memory.addr, align 4, !dbg !5081
  %82 = load i32, i32* %num_buffers, align 4, !dbg !5082
  %83 = load i32, i32* %num_planes, align 4, !dbg !5083
  %arraydecay177 = getelementptr inbounds [8 x i32], [8 x i32]* %plane_sizes, i64 0, i64 0, !dbg !5084
  %call178 = call i32 @__vb2_queue_alloc(%struct.vb2_queue* %80, i32 %81, i32 %82, i32 %83, i32* %arraydecay177) #10, !dbg !5085
  store i32 %call178, i32* %allocated_buffers, align 4, !dbg !5086
  %84 = load i32, i32* %allocated_buffers, align 4, !dbg !5087
  %cmp179 = icmp eq i32 %84, 0, !dbg !5089
  br i1 %cmp179, label %if.then181, label %if.end191, !dbg !5090

if.then181:                                       ; preds = %for.end
  br label %do.body182, !dbg !5091

do.body182:                                       ; preds = %if.then181
  %85 = load i32, i32* @debug, align 4, !dbg !5093
  %cmp183 = icmp sge i32 %85, 1, !dbg !5093
  br i1 %cmp183, label %if.then185, label %if.end189, !dbg !5096

if.then185:                                       ; preds = %do.body182
  %86 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5093
  %name186 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %86, i32 0, i32 31, !dbg !5093
  %arraydecay187 = getelementptr inbounds [32 x i8], [32 x i8]* %name186, i64 0, i64 0, !dbg !5093
  %call188 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i8* %arraydecay187, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.vb2_core_reqbufs, i64 0, i64 0)) #11, !dbg !5093
  br label %if.end189, !dbg !5093

if.end189:                                        ; preds = %if.then185, %do.body182
  br label %do.end190, !dbg !5096

do.end190:                                        ; preds = %if.end189
  store i32 -12, i32* %retval, align 4, !dbg !5097
  br label %return, !dbg !5097

if.end191:                                        ; preds = %for.end
  %87 = load i32, i32* %allocated_buffers, align 4, !dbg !5098
  %88 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5100
  %min_buffers_needed192 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %88, i32 0, i32 15, !dbg !5101
  %89 = load i32, i32* %min_buffers_needed192, align 8, !dbg !5101
  %cmp193 = icmp ult i32 %87, %89, !dbg !5102
  br i1 %cmp193, label %if.then195, label %if.end196, !dbg !5103

if.then195:                                       ; preds = %if.end191
  store i32 -12, i32* %ret, align 4, !dbg !5104
  br label %if.end196, !dbg !5105

if.end196:                                        ; preds = %if.then195, %if.end191
  %90 = load i32, i32* %ret, align 4, !dbg !5106
  %tobool197 = icmp ne i32 %90, 0, !dbg !5106
  br i1 %tobool197, label %if.end221, label %land.lhs.true198, !dbg !5108

land.lhs.true198:                                 ; preds = %if.end196
  %91 = load i32, i32* %allocated_buffers, align 4, !dbg !5109
  %92 = load i32, i32* %num_buffers, align 4, !dbg !5110
  %cmp199 = icmp ult i32 %91, %92, !dbg !5111
  br i1 %cmp199, label %if.then201, label %if.end221, !dbg !5112

if.then201:                                       ; preds = %land.lhs.true198
  %93 = load i32, i32* %allocated_buffers, align 4, !dbg !5113
  store i32 %93, i32* %num_buffers, align 4, !dbg !5115
  store i32 0, i32* %num_planes, align 4, !dbg !5116
  %94 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5117
  %ops202 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %94, i32 0, i32 7, !dbg !5117
  %95 = load %struct.vb2_ops*, %struct.vb2_ops** %ops202, align 8, !dbg !5117
  %queue_setup203 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %95, i32 0, i32 0, !dbg !5117
  %96 = load i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)*, i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)** %queue_setup203, align 8, !dbg !5117
  %tobool204 = icmp ne i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)* %96, null, !dbg !5117
  br i1 %tobool204, label %cond.true205, label %cond.false212, !dbg !5117

cond.true205:                                     ; preds = %if.then201
  %97 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5117
  %ops206 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %97, i32 0, i32 7, !dbg !5117
  %98 = load %struct.vb2_ops*, %struct.vb2_ops** %ops206, align 8, !dbg !5117
  %queue_setup207 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %98, i32 0, i32 0, !dbg !5117
  %99 = load i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)*, i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)** %queue_setup207, align 8, !dbg !5117
  %100 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5117
  %arraydecay208 = getelementptr inbounds [8 x i32], [8 x i32]* %plane_sizes, i64 0, i64 0, !dbg !5117
  %101 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5117
  %alloc_devs209 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %101, i32 0, i32 16, !dbg !5117
  %arraydecay210 = getelementptr inbounds [8 x %struct.device*], [8 x %struct.device*]* %alloc_devs209, i64 0, i64 0, !dbg !5117
  %call211 = call i32 %99(%struct.vb2_queue* %100, i32* %num_buffers, i32* %num_planes, i32* %arraydecay208, %struct.device** %arraydecay210) #10, !dbg !5117
  br label %cond.end213, !dbg !5117

cond.false212:                                    ; preds = %if.then201
  br label %cond.end213, !dbg !5117

cond.end213:                                      ; preds = %cond.false212, %cond.true205
  %cond214 = phi i32 [ %call211, %cond.true205 ], [ 0, %cond.false212 ], !dbg !5117
  store i32 %cond214, i32* %ret, align 4, !dbg !5118
  %102 = load i32, i32* %ret, align 4, !dbg !5119
  %tobool215 = icmp ne i32 %102, 0, !dbg !5119
  br i1 %tobool215, label %if.end220, label %land.lhs.true216, !dbg !5121

land.lhs.true216:                                 ; preds = %cond.end213
  %103 = load i32, i32* %allocated_buffers, align 4, !dbg !5122
  %104 = load i32, i32* %num_buffers, align 4, !dbg !5123
  %cmp217 = icmp ult i32 %103, %104, !dbg !5124
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !5125

if.then219:                                       ; preds = %land.lhs.true216
  store i32 -12, i32* %ret, align 4, !dbg !5126
  br label %if.end220, !dbg !5127

if.end220:                                        ; preds = %if.then219, %land.lhs.true216, %cond.end213
  br label %if.end221, !dbg !5128

if.end221:                                        ; preds = %if.end220, %land.lhs.true198, %if.end196
  %105 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5129
  %mmap_lock222 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %105, i32 0, i32 17, !dbg !5130
  call void @mutex_lock(%struct.mutex* %mmap_lock222) #10, !dbg !5131
  %106 = load i32, i32* %allocated_buffers, align 4, !dbg !5132
  %107 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5133
  %num_buffers223 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %107, i32 0, i32 21, !dbg !5134
  store i32 %106, i32* %num_buffers223, align 8, !dbg !5135
  %108 = load i32, i32* %ret, align 4, !dbg !5136
  %cmp224 = icmp slt i32 %108, 0, !dbg !5138
  br i1 %cmp224, label %if.then226, label %if.end229, !dbg !5139

if.then226:                                       ; preds = %if.end221
  %109 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5140
  %110 = load i32, i32* %allocated_buffers, align 4, !dbg !5142
  %call227 = call i32 @__vb2_queue_free(%struct.vb2_queue* %109, i32 %110) #10, !dbg !5143
  %111 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5144
  %mmap_lock228 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %111, i32 0, i32 17, !dbg !5145
  call void @mutex_unlock(%struct.mutex* %mmap_lock228) #10, !dbg !5146
  %112 = load i32, i32* %ret, align 4, !dbg !5147
  store i32 %112, i32* %retval, align 4, !dbg !5148
  br label %return, !dbg !5148

if.end229:                                        ; preds = %if.end221
  %113 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5149
  %mmap_lock230 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %113, i32 0, i32 17, !dbg !5150
  call void @mutex_unlock(%struct.mutex* %mmap_lock230) #10, !dbg !5151
  %114 = load i32, i32* %allocated_buffers, align 4, !dbg !5152
  %115 = load i32*, i32** %count.addr, align 8, !dbg !5153
  store i32 %114, i32* %115, align 4, !dbg !5154
  %116 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5155
  %is_output = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %116, i32 0, i32 28, !dbg !5156
  %bf.load231 = load i16, i16* %is_output, align 8, !dbg !5156
  %bf.lshr232 = lshr i16 %bf.load231, 6, !dbg !5156
  %bf.clear233 = and i16 %bf.lshr232, 1, !dbg !5156
  %bf.cast234 = zext i16 %bf.clear233 to i32, !dbg !5156
  %tobool235 = icmp ne i32 %bf.cast234, 0, !dbg !5157
  %lnot236 = xor i1 %tobool235, true, !dbg !5157
  %lnot.ext237 = zext i1 %lnot236 to i32, !dbg !5157
  %117 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5158
  %waiting_for_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %117, i32 0, i32 28, !dbg !5159
  %118 = trunc i32 %lnot.ext237 to i16, !dbg !5160
  %bf.load238 = load i16, i16* %waiting_for_buffers, align 8, !dbg !5160
  %bf.value = and i16 %118, 1, !dbg !5160
  %bf.shl = shl i16 %bf.value, 3, !dbg !5160
  %bf.clear239 = and i16 %bf.load238, -9, !dbg !5160
  %bf.set = or i16 %bf.clear239, %bf.shl, !dbg !5160
  store i16 %bf.set, i16* %waiting_for_buffers, align 8, !dbg !5160
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !5160
  store i32 0, i32* %retval, align 4, !dbg !5161
  br label %return, !dbg !5161

return:                                           ; preds = %if.end229, %if.then226, %do.end190, %if.then175, %if.then138, %if.then103, %if.then51, %if.then48, %do.end16, %do.end
  %119 = load i32, i32* %retval, align 4, !dbg !5162
  ret i32 %119, !dbg !5162
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__buffers_in_use(%struct.vb2_queue* %q) #0 !dbg !5163 {
entry:
  %retval = alloca i1, align 1
  %q.addr = alloca %struct.vb2_queue*, align 8
  %buffer = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !5164, metadata !DIExpression()), !dbg !5165
  call void @llvm.dbg.declare(metadata i32* %buffer, metadata !5166, metadata !DIExpression()), !dbg !5167
  store i32 0, i32* %buffer, align 4, !dbg !5168
  br label %for.cond, !dbg !5170

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %buffer, align 4, !dbg !5171
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5173
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 21, !dbg !5174
  %2 = load i32, i32* %num_buffers, align 8, !dbg !5174
  %cmp = icmp ult i32 %0, %2, !dbg !5175
  br i1 %cmp, label %for.body, label %for.end, !dbg !5176

for.body:                                         ; preds = %for.cond
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5177
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5180
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 20, !dbg !5181
  %5 = load i32, i32* %buffer, align 4, !dbg !5182
  %idxprom = zext i32 %5 to i64, !dbg !5180
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !5180
  %6 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !5180
  %call = call zeroext i1 @vb2_buffer_in_use(%struct.vb2_queue* %3, %struct.vb2_buffer* %6) #10, !dbg !5183
  br i1 %call, label %if.then, label %if.end, !dbg !5184

if.then:                                          ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !5185
  br label %return, !dbg !5185

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5186

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %buffer, align 4, !dbg !5187
  %inc = add i32 %7, 1, !dbg !5187
  store i32 %inc, i32* %buffer, align 4, !dbg !5187
  br label %for.cond, !dbg !5188, !llvm.loop !5189

for.end:                                          ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !5191
  br label %return, !dbg !5191

return:                                           ; preds = %for.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !5192
  ret i1 %8, !dbg !5192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vb2_queue_cancel(%struct.vb2_queue* %q) #0 !dbg !5193 {
entry:
  %lock.addr.i192 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i192, metadata !5194, metadata !DIExpression()), !dbg !5199
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5206, metadata !DIExpression()), !dbg !5207
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5208, metadata !DIExpression()), !dbg !5213
  %v.addr.i1.i185 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i185, metadata !5220, metadata !DIExpression()), !dbg !5226
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !5231, metadata !DIExpression()), !dbg !5232
  %v.addr.i.i186 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i186, metadata !5233, metadata !DIExpression()), !dbg !5241
  %size.addr.i.i187 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i187, metadata !5243, metadata !DIExpression()), !dbg !5244
  %v.addr.i188 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i188, metadata !5245, metadata !DIExpression()), !dbg !5246
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !5247, metadata !DIExpression()), !dbg !5248
  %v.addr.i1.i178 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i178, metadata !5249, metadata !DIExpression()), !dbg !5255
  %v.addr.i.i179 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i179, metadata !5262, metadata !DIExpression()), !dbg !5264
  %size.addr.i.i180 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i180, metadata !5266, metadata !DIExpression()), !dbg !5267
  %v.addr.i181 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i181, metadata !5268, metadata !DIExpression()), !dbg !5269
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5249, metadata !DIExpression()), !dbg !5270
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5262, metadata !DIExpression()), !dbg !5274
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5266, metadata !DIExpression()), !dbg !5276
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5268, metadata !DIExpression()), !dbg !5277
  %q.addr = alloca %struct.vb2_queue*, align 8
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on44 = alloca i32, align 4
  %tmp69 = alloca i64, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %req = alloca %struct.media_request*, align 8
  %state100 = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp105 = alloca i32, align 4
  %__dummy109 = alloca i64, align 8
  %__dummy2110 = alloca i64, align 8
  %tmp113 = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !5278, metadata !DIExpression()), !dbg !5279
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5280, metadata !DIExpression()), !dbg !5281
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5282
  %start_streaming_called = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 28, !dbg !5284
  %bf.load = load i16, i16* %start_streaming_called, align 8, !dbg !5284
  %bf.lshr = lshr i16 %bf.load, 1, !dbg !5284
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5284
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5284
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !5282
  br i1 %tobool, label %if.then, label %if.end5, !dbg !5285

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5286

do.body:                                          ; preds = %if.then
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5287
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 7, !dbg !5287
  %2 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !5287
  %stop_streaming = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %2, i32 0, i32 9, !dbg !5287
  %3 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %stop_streaming, align 8, !dbg !5287
  %tobool1 = icmp ne void (%struct.vb2_queue*)* %3, null, !dbg !5287
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !5290

if.then2:                                         ; preds = %do.body
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5287
  %ops3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 7, !dbg !5287
  %5 = load %struct.vb2_ops*, %struct.vb2_ops** %ops3, align 8, !dbg !5287
  %stop_streaming4 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %5, i32 0, i32 9, !dbg !5287
  %6 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %stop_streaming4, align 8, !dbg !5287
  %7 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5287
  call void %6(%struct.vb2_queue* %7) #10, !dbg !5287
  br label %if.end, !dbg !5287

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !5290

do.end:                                           ; preds = %if.end
  br label %if.end5, !dbg !5290

if.end5:                                          ; preds = %do.end, %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !5291, metadata !DIExpression()), !dbg !5292
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5292
  %owned_by_drv_count = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 24, !dbg !5292
  store %struct.atomic_t* %owned_by_drv_count, %struct.atomic_t** %v.addr.i, align 8
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5293
  %10 = bitcast %struct.atomic_t* %9 to i8*, !dbg !5293
  store i8* %10, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %11 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5294
  %12 = load i64, i64* %size.addr.i.i, align 8, !dbg !5295
  %conv.i.i = trunc i64 %12 to i32, !dbg !5295
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %11, i32 %conv.i.i) #12, !dbg !5296
  %13 = load i8*, i8** %v.addr.i.i, align 8, !dbg !5297
  %14 = load i64, i64* %size.addr.i.i, align 8, !dbg !5297
  call void @kcsan_check_access(i8* %13, i64 %14, i32 4) #12, !dbg !5297
  %15 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !5298
  store %struct.atomic_t* %15, %struct.atomic_t** %v.addr.i1.i, align 8
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !5299
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %16, i32 0, i32 0, !dbg !5299
  %17 = load volatile i32, i32* %counter.i.i, align 4, !dbg !5299
  %tobool6 = icmp ne i32 %17, 0, !dbg !5292
  %lnot = xor i1 %tobool6, true, !dbg !5292
  %lnot7 = xor i1 %lnot, true, !dbg !5292
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !5292
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !5292
  %18 = load i32, i32* %__ret_warn_on, align 4, !dbg !5300
  %tobool8 = icmp ne i32 %18, 0, !dbg !5300
  %lnot9 = xor i1 %tobool8, true, !dbg !5300
  %lnot11 = xor i1 %lnot9, true, !dbg !5300
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !5300
  %conv = sext i32 %lnot.ext12 to i64, !dbg !5300
  %tobool13 = icmp ne i64 %conv, 0, !dbg !5300
  br i1 %tobool13, label %if.then14, label %if.end23, !dbg !5292

if.then14:                                        ; preds = %if.end5
  br label %do.body15, !dbg !5300

do.body15:                                        ; preds = %if.then14
  br label %do.body16, !dbg !5302

do.body16:                                        ; preds = %do.body15
  br label %do.end17, !dbg !5304

do.end17:                                         ; preds = %do.body16
  br label %do.body18, !dbg !5302

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 1945, i32 2305, i64 12) #6, !dbg !5306, !srcloc !5308
  br label %do.end19, !dbg !5306

do.end19:                                         ; preds = %do.body18
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 296) #6, !dbg !5309, !srcloc !5311
  br label %do.body20, !dbg !5302

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !5312

do.end21:                                         ; preds = %do.body20
  br label %do.end22, !dbg !5302

do.end22:                                         ; preds = %do.end21
  br label %if.end23, !dbg !5302

if.end23:                                         ; preds = %do.end22, %if.end5
  %19 = load i32, i32* %__ret_warn_on, align 4, !dbg !5292
  %tobool24 = icmp ne i32 %19, 0, !dbg !5292
  %lnot25 = xor i1 %tobool24, true, !dbg !5292
  %lnot27 = xor i1 %lnot25, true, !dbg !5292
  %lnot.ext28 = zext i1 %lnot27 to i32, !dbg !5292
  %conv29 = sext i32 %lnot.ext28 to i64, !dbg !5292
  store i64 %conv29, i64* %tmp, align 8, !dbg !5300
  %20 = load i64, i64* %tmp, align 8, !dbg !5292
  %tobool30 = icmp ne i64 %20, 0, !dbg !5314
  br i1 %tobool30, label %if.then31, label %if.end76, !dbg !5315

if.then31:                                        ; preds = %if.end23
  store i32 0, i32* %i, align 4, !dbg !5316
  br label %for.cond, !dbg !5318

for.cond:                                         ; preds = %for.inc, %if.then31
  %21 = load i32, i32* %i, align 4, !dbg !5319
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5321
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %22, i32 0, i32 21, !dbg !5322
  %23 = load i32, i32* %num_buffers, align 8, !dbg !5322
  %cmp = icmp ult i32 %21, %23, !dbg !5323
  br i1 %cmp, label %for.body, label %for.end, !dbg !5324

for.body:                                         ; preds = %for.cond
  %24 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5325
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %24, i32 0, i32 20, !dbg !5327
  %25 = load i32, i32* %i, align 4, !dbg !5328
  %idxprom = zext i32 %25 to i64, !dbg !5325
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !5325
  %26 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !5325
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %26, i32 0, i32 8, !dbg !5329
  %27 = load i32, i32* %state, align 8, !dbg !5329
  %cmp33 = icmp eq i32 %27, 4, !dbg !5330
  br i1 %cmp33, label %if.then35, label %if.end43, !dbg !5331

if.then35:                                        ; preds = %for.body
  %28 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5332
  %bufs36 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %28, i32 0, i32 20, !dbg !5332
  %29 = load i32, i32* %i, align 4, !dbg !5332
  %idxprom37 = zext i32 %29 to i64, !dbg !5332
  %arrayidx38 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs36, i64 0, i64 %idxprom37, !dbg !5332
  %30 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx38, align 8, !dbg !5332
  %call39 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.91, i64 0, i64 0), %struct.vb2_buffer* %30) #11, !dbg !5332
  %31 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5334
  %bufs40 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %31, i32 0, i32 20, !dbg !5335
  %32 = load i32, i32* %i, align 4, !dbg !5336
  %idxprom41 = zext i32 %32 to i64, !dbg !5334
  %arrayidx42 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs40, i64 0, i64 %idxprom41, !dbg !5334
  %33 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx42, align 8, !dbg !5334
  call void @vb2_buffer_done(%struct.vb2_buffer* %33, i32 6) #10, !dbg !5337
  br label %if.end43, !dbg !5338

if.end43:                                         ; preds = %if.then35, %for.body
  br label %for.inc, !dbg !5339

for.inc:                                          ; preds = %if.end43
  %34 = load i32, i32* %i, align 4, !dbg !5340
  %inc = add i32 %34, 1, !dbg !5340
  store i32 %inc, i32* %i, align 4, !dbg !5340
  br label %for.cond, !dbg !5341, !llvm.loop !5342

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on44, metadata !5344, metadata !DIExpression()), !dbg !5345
  %35 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5345
  %owned_by_drv_count45 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %35, i32 0, i32 24, !dbg !5345
  store %struct.atomic_t* %owned_by_drv_count45, %struct.atomic_t** %v.addr.i181, align 8
  %36 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i181, align 8, !dbg !5346
  %37 = bitcast %struct.atomic_t* %36 to i8*, !dbg !5346
  store i8* %37, i8** %v.addr.i.i179, align 8
  store i64 4, i64* %size.addr.i.i180, align 8
  %38 = load i8*, i8** %v.addr.i.i179, align 8, !dbg !5347
  %39 = load i64, i64* %size.addr.i.i180, align 8, !dbg !5348
  %conv.i.i182 = trunc i64 %39 to i32, !dbg !5348
  %call.i.i183 = call zeroext i1 @kasan_check_read(i8* %38, i32 %conv.i.i182) #12, !dbg !5349
  %40 = load i8*, i8** %v.addr.i.i179, align 8, !dbg !5350
  %41 = load i64, i64* %size.addr.i.i180, align 8, !dbg !5350
  call void @kcsan_check_access(i8* %40, i64 %41, i32 4) #12, !dbg !5350
  %42 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i181, align 8, !dbg !5351
  store %struct.atomic_t* %42, %struct.atomic_t** %v.addr.i1.i178, align 8
  %43 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i178, align 8, !dbg !5352
  %counter.i.i184 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %43, i32 0, i32 0, !dbg !5352
  %44 = load volatile i32, i32* %counter.i.i184, align 4, !dbg !5352
  %tobool47 = icmp ne i32 %44, 0, !dbg !5345
  %lnot48 = xor i1 %tobool47, true, !dbg !5345
  %lnot50 = xor i1 %lnot48, true, !dbg !5345
  %lnot.ext51 = zext i1 %lnot50 to i32, !dbg !5345
  store i32 %lnot.ext51, i32* %__ret_warn_on44, align 4, !dbg !5345
  %45 = load i32, i32* %__ret_warn_on44, align 4, !dbg !5353
  %tobool52 = icmp ne i32 %45, 0, !dbg !5353
  %lnot53 = xor i1 %tobool52, true, !dbg !5353
  %lnot55 = xor i1 %lnot53, true, !dbg !5353
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !5353
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !5353
  %tobool58 = icmp ne i64 %conv57, 0, !dbg !5353
  br i1 %tobool58, label %if.then59, label %if.end68, !dbg !5345

if.then59:                                        ; preds = %for.end
  br label %do.body60, !dbg !5353

do.body60:                                        ; preds = %if.then59
  br label %do.body61, !dbg !5355

do.body61:                                        ; preds = %do.body60
  br label %do.end62, !dbg !5357

do.end62:                                         ; preds = %do.body61
  br label %do.body63, !dbg !5355

do.body63:                                        ; preds = %do.end62
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 1953, i32 2305, i64 12) #6, !dbg !5359, !srcloc !5361
  br label %do.end64, !dbg !5359

do.end64:                                         ; preds = %do.body63
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 297) #6, !dbg !5362, !srcloc !5364
  br label %do.body65, !dbg !5355

do.body65:                                        ; preds = %do.end64
  br label %do.end66, !dbg !5365

do.end66:                                         ; preds = %do.body65
  br label %do.end67, !dbg !5355

do.end67:                                         ; preds = %do.end66
  br label %if.end68, !dbg !5355

if.end68:                                         ; preds = %do.end67, %for.end
  %46 = load i32, i32* %__ret_warn_on44, align 4, !dbg !5345
  %tobool70 = icmp ne i32 %46, 0, !dbg !5345
  %lnot71 = xor i1 %tobool70, true, !dbg !5345
  %lnot73 = xor i1 %lnot71, true, !dbg !5345
  %lnot.ext74 = zext i1 %lnot73 to i32, !dbg !5345
  %conv75 = sext i32 %lnot.ext74 to i64, !dbg !5345
  store i64 %conv75, i64* %tmp69, align 8, !dbg !5353
  %47 = load i64, i64* %tmp69, align 8, !dbg !5345
  br label %if.end76, !dbg !5367

if.end76:                                         ; preds = %if.end68, %if.end23
  %48 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5368
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %48, i32 0, i32 28, !dbg !5369
  %bf.load77 = load i16, i16* %streaming, align 8, !dbg !5370
  %bf.clear78 = and i16 %bf.load77, -2, !dbg !5370
  store i16 %bf.clear78, i16* %streaming, align 8, !dbg !5370
  %49 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5371
  %start_streaming_called79 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %49, i32 0, i32 28, !dbg !5372
  %bf.load80 = load i16, i16* %start_streaming_called79, align 8, !dbg !5373
  %bf.clear81 = and i16 %bf.load80, -3, !dbg !5373
  store i16 %bf.clear81, i16* %start_streaming_called79, align 8, !dbg !5373
  %50 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5374
  %queued_count = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %50, i32 0, i32 23, !dbg !5375
  store i32 0, i32* %queued_count, align 8, !dbg !5376
  %51 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5377
  %error = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %51, i32 0, i32 28, !dbg !5378
  %bf.load82 = load i16, i16* %error, align 8, !dbg !5379
  %bf.clear83 = and i16 %bf.load82, -5, !dbg !5379
  store i16 %bf.clear83, i16* %error, align 8, !dbg !5379
  %52 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5380
  %uses_requests = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %52, i32 0, i32 4, !dbg !5381
  %bf.load84 = load i16, i16* %uses_requests, align 8, !dbg !5382
  %bf.clear85 = and i16 %bf.load84, -257, !dbg !5382
  store i16 %bf.clear85, i16* %uses_requests, align 8, !dbg !5382
  %53 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5383
  %uses_qbuf = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %53, i32 0, i32 4, !dbg !5384
  %bf.load86 = load i16, i16* %uses_qbuf, align 8, !dbg !5385
  %bf.clear87 = and i16 %bf.load86, -129, !dbg !5385
  store i16 %bf.clear87, i16* %uses_qbuf, align 8, !dbg !5385
  %54 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5386
  %queued_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %54, i32 0, i32 22, !dbg !5387
  call void @INIT_LIST_HEAD(%struct.list_head* %queued_list) #10, !dbg !5388
  %55 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5389
  %done_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %55, i32 0, i32 25, !dbg !5390
  call void @INIT_LIST_HEAD(%struct.list_head* %done_list) #10, !dbg !5391
  %56 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5392
  %owned_by_drv_count88 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %56, i32 0, i32 24, !dbg !5393
  store %struct.atomic_t* %owned_by_drv_count88, %struct.atomic_t** %v.addr.i188, align 8
  store i32 0, i32* %i.addr.i, align 4
  %57 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i188, align 8, !dbg !5394
  %58 = bitcast %struct.atomic_t* %57 to i8*, !dbg !5394
  store i8* %58, i8** %v.addr.i.i186, align 8
  store i64 4, i64* %size.addr.i.i187, align 8
  %59 = load i8*, i8** %v.addr.i.i186, align 8, !dbg !5395
  %60 = load i64, i64* %size.addr.i.i187, align 8, !dbg !5396
  %conv.i.i189 = trunc i64 %60 to i32, !dbg !5396
  %call.i.i190 = call zeroext i1 @kasan_check_write(i8* %59, i32 %conv.i.i189) #12, !dbg !5397
  %61 = load i8*, i8** %v.addr.i.i186, align 8, !dbg !5398
  %62 = load i64, i64* %size.addr.i.i187, align 8, !dbg !5398
  call void @kcsan_check_access(i8* %61, i64 %62, i32 5) #12, !dbg !5398
  %63 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i188, align 8, !dbg !5399
  %64 = load i32, i32* %i.addr.i, align 4, !dbg !5400
  store %struct.atomic_t* %63, %struct.atomic_t** %v.addr.i1.i185, align 8
  store i32 %64, i32* %i.addr.i.i, align 4
  %65 = load i32, i32* %i.addr.i.i, align 4, !dbg !5401
  %66 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i185, align 8, !dbg !5401
  %counter.i.i191 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %66, i32 0, i32 0, !dbg !5401
  store volatile i32 %65, i32* %counter.i.i191, align 4, !dbg !5401
  %67 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5403
  %done_wq = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %67, i32 0, i32 27, !dbg !5403
  call void @__wake_up(%struct.wait_queue_head* %done_wq, i32 3, i32 0, i8* null) #10, !dbg !5403
  store i32 0, i32* %i, align 4, !dbg !5404
  br label %for.cond89, !dbg !5405

for.cond89:                                       ; preds = %for.inc175, %if.end76
  %68 = load i32, i32* %i, align 4, !dbg !5406
  %69 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5407
  %num_buffers90 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %69, i32 0, i32 21, !dbg !5408
  %70 = load i32, i32* %num_buffers90, align 8, !dbg !5408
  %cmp91 = icmp ult i32 %68, %70, !dbg !5409
  br i1 %cmp91, label %for.body93, label %for.end177, !dbg !5410

for.body93:                                       ; preds = %for.cond89
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !5411, metadata !DIExpression()), !dbg !5412
  %71 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5413
  %bufs94 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %71, i32 0, i32 20, !dbg !5414
  %72 = load i32, i32* %i, align 4, !dbg !5415
  %idxprom95 = zext i32 %72 to i64, !dbg !5413
  %arrayidx96 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs94, i64 0, i64 %idxprom95, !dbg !5413
  %73 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx96, align 8, !dbg !5413
  store %struct.vb2_buffer* %73, %struct.vb2_buffer** %vb, align 8, !dbg !5412
  call void @llvm.dbg.declare(metadata %struct.media_request** %req, metadata !5416, metadata !DIExpression()), !dbg !5417
  %74 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5418
  %req_obj = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %74, i32 0, i32 7, !dbg !5419
  %req97 = getelementptr inbounds %struct.media_request_object, %struct.media_request_object* %req_obj, i32 0, i32 2, !dbg !5420
  %75 = load %struct.media_request*, %struct.media_request** %req97, align 8, !dbg !5420
  store %struct.media_request* %75, %struct.media_request** %req, align 8, !dbg !5417
  %76 = load %struct.media_request*, %struct.media_request** %req, align 8, !dbg !5421
  %tobool98 = icmp ne %struct.media_request* %76, null, !dbg !5421
  br i1 %tobool98, label %if.then99, label %if.end140, !dbg !5422

if.then99:                                        ; preds = %for.body93
  call void @llvm.dbg.declare(metadata i32* %state100, metadata !5423, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5425, metadata !DIExpression()), !dbg !5426
  br label %do.body101, !dbg !5427

do.body101:                                       ; preds = %if.then99
  br label %do.body102, !dbg !5428

do.body102:                                       ; preds = %do.body101
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5429, metadata !DIExpression()), !dbg !5431
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5432, metadata !DIExpression()), !dbg !5431
  %cmp103 = icmp eq i64* %__dummy, %__dummy2, !dbg !5431
  %conv104 = zext i1 %cmp103 to i32, !dbg !5431
  store i32 1, i32* %tmp105, align 4, !dbg !5431
  %77 = load i32, i32* %tmp105, align 4, !dbg !5431
  br label %do.body106, !dbg !5433

do.body106:                                       ; preds = %do.body102
  br label %do.body107, !dbg !5434

do.body107:                                       ; preds = %do.body106
  br label %do.body108, !dbg !5435

do.body108:                                       ; preds = %do.body107
  call void @llvm.dbg.declare(metadata i64* %__dummy109, metadata !5437, metadata !DIExpression()), !dbg !5440
  call void @llvm.dbg.declare(metadata i64* %__dummy2110, metadata !5441, metadata !DIExpression()), !dbg !5440
  %cmp111 = icmp eq i64* %__dummy109, %__dummy2110, !dbg !5440
  %conv112 = zext i1 %cmp111 to i32, !dbg !5440
  store i32 1, i32* %tmp113, align 4, !dbg !5440
  %78 = load i32, i32* %tmp113, align 4, !dbg !5440
  %call114 = call i64 @arch_local_irq_save() #10, !dbg !5442
  store i64 %call114, i64* %flags, align 8, !dbg !5442
  br label %do.end115, !dbg !5442

do.end115:                                        ; preds = %do.body108
  br label %do.end116, !dbg !5435

do.end116:                                        ; preds = %do.end115
  br label %do.body117, !dbg !5434

do.body117:                                       ; preds = %do.end116
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5443, !srcloc !5444
  br label %do.body118, !dbg !5443

do.body118:                                       ; preds = %do.body117
  %79 = load %struct.media_request*, %struct.media_request** %req, align 8, !dbg !5445
  %lock = getelementptr inbounds %struct.media_request, %struct.media_request* %79, i32 0, i32 9, !dbg !5445
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %80 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5446
  %81 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %80, i32 0, i32 0, !dbg !5447
  %rlock.i = bitcast %union.anon.4* %81 to %struct.raw_spinlock*, !dbg !5447
  br label %do.end120, !dbg !5445

do.end120:                                        ; preds = %do.body118
  br label %do.end121, !dbg !5443

do.end121:                                        ; preds = %do.end120
  br label %do.end122, !dbg !5434

do.end122:                                        ; preds = %do.end121
  br label %do.end123, !dbg !5433

do.end123:                                        ; preds = %do.end122
  br label %do.end124, !dbg !5428

do.end124:                                        ; preds = %do.end123
  %82 = load %struct.media_request*, %struct.media_request** %req, align 8, !dbg !5448
  %state125 = getelementptr inbounds %struct.media_request, %struct.media_request* %82, i32 0, i32 3, !dbg !5449
  %83 = load i32, i32* %state125, align 8, !dbg !5449
  store i32 %83, i32* %state100, align 4, !dbg !5450
  %84 = load %struct.media_request*, %struct.media_request** %req, align 8, !dbg !5451
  %lock126 = getelementptr inbounds %struct.media_request, %struct.media_request* %84, i32 0, i32 9, !dbg !5452
  %85 = load i64, i64* %flags, align 8, !dbg !5453
  store %struct.spinlock* %lock126, %struct.spinlock** %lock.addr.i192, align 8
  store i64 %85, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !231, metadata !5454, metadata !DIExpression()) #6, !dbg !5457
  call void @llvm.dbg.declare(metadata !231, metadata !5458, metadata !DIExpression()) #6, !dbg !5457
  store i32 1, i32* %tmp.i, align 4, !dbg !5457
  %86 = load i32, i32* %tmp.i, align 4, !dbg !5457
  call void @llvm.dbg.declare(metadata !231, metadata !5459, metadata !DIExpression()) #6, !dbg !5464
  call void @llvm.dbg.declare(metadata !231, metadata !5465, metadata !DIExpression()) #6, !dbg !5464
  store i32 1, i32* %tmp8.i, align 4, !dbg !5464
  %87 = load i32, i32* %tmp8.i, align 4, !dbg !5464
  %88 = load i64, i64* %flags.addr.i, align 8, !dbg !5466
  call void @arch_local_irq_restore(i64 %88) #12, !dbg !5466
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !5467, !srcloc !5469
  %89 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i192, align 8, !dbg !5470
  %90 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %89, i32 0, i32 0, !dbg !5470
  %rlock.i193 = bitcast %union.anon.4* %90 to %struct.raw_spinlock*, !dbg !5470
  %91 = load i32, i32* %state100, align 4, !dbg !5472
  %cmp127 = icmp eq i32 %91, 2, !dbg !5474
  br i1 %cmp127, label %if.then129, label %if.end139, !dbg !5475

if.then129:                                       ; preds = %do.end124
  br label %do.body130, !dbg !5476

do.body130:                                       ; preds = %if.then129
  %92 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5477
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %92, i32 0, i32 0, !dbg !5477
  %93 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !5477
  %ops131 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %93, i32 0, i32 7, !dbg !5477
  %94 = load %struct.vb2_ops*, %struct.vb2_ops** %ops131, align 8, !dbg !5477
  %buf_request_complete = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %94, i32 0, i32 11, !dbg !5477
  %95 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_request_complete, align 8, !dbg !5477
  %tobool132 = icmp ne void (%struct.vb2_buffer*)* %95, null, !dbg !5477
  br i1 %tobool132, label %if.then133, label %if.end137, !dbg !5480

if.then133:                                       ; preds = %do.body130
  %96 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5477
  %vb2_queue134 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %96, i32 0, i32 0, !dbg !5477
  %97 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue134, align 8, !dbg !5477
  %ops135 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %97, i32 0, i32 7, !dbg !5477
  %98 = load %struct.vb2_ops*, %struct.vb2_ops** %ops135, align 8, !dbg !5477
  %buf_request_complete136 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %98, i32 0, i32 11, !dbg !5477
  %99 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_request_complete136, align 8, !dbg !5477
  %100 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5477
  call void %99(%struct.vb2_buffer* %100) #10, !dbg !5477
  br label %if.end137, !dbg !5477

if.end137:                                        ; preds = %if.then133, %do.body130
  br label %do.end138, !dbg !5480

do.end138:                                        ; preds = %if.end137
  br label %if.end139, !dbg !5480

if.end139:                                        ; preds = %do.end138, %do.end124
  br label %if.end140, !dbg !5481

if.end140:                                        ; preds = %if.end139, %for.body93
  %101 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5482
  call void @__vb2_buf_mem_finish(%struct.vb2_buffer* %101) #10, !dbg !5483
  %102 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5484
  %prepared = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %102, i32 0, i32 9, !dbg !5486
  %bf.load141 = load i8, i8* %prepared, align 4, !dbg !5486
  %bf.lshr142 = lshr i8 %bf.load141, 1, !dbg !5486
  %bf.clear143 = and i8 %bf.lshr142, 1, !dbg !5486
  %bf.cast144 = zext i8 %bf.clear143 to i32, !dbg !5486
  %tobool145 = icmp ne i32 %bf.cast144, 0, !dbg !5484
  br i1 %tobool145, label %if.then146, label %if.end160, !dbg !5487

if.then146:                                       ; preds = %if.end140
  br label %do.body147, !dbg !5488

do.body147:                                       ; preds = %if.then146
  %103 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5490
  %vb2_queue148 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %103, i32 0, i32 0, !dbg !5490
  %104 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue148, align 8, !dbg !5490
  %ops149 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %104, i32 0, i32 7, !dbg !5490
  %105 = load %struct.vb2_ops*, %struct.vb2_ops** %ops149, align 8, !dbg !5490
  %buf_finish = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %105, i32 0, i32 6, !dbg !5490
  %106 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_finish, align 8, !dbg !5490
  %tobool150 = icmp ne void (%struct.vb2_buffer*)* %106, null, !dbg !5490
  br i1 %tobool150, label %if.then151, label %if.end155, !dbg !5493

if.then151:                                       ; preds = %do.body147
  %107 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5490
  %vb2_queue152 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %107, i32 0, i32 0, !dbg !5490
  %108 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue152, align 8, !dbg !5490
  %ops153 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %108, i32 0, i32 7, !dbg !5490
  %109 = load %struct.vb2_ops*, %struct.vb2_ops** %ops153, align 8, !dbg !5490
  %buf_finish154 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %109, i32 0, i32 6, !dbg !5490
  %110 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_finish154, align 8, !dbg !5490
  %111 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5490
  call void %110(%struct.vb2_buffer* %111) #10, !dbg !5490
  br label %if.end155, !dbg !5490

if.end155:                                        ; preds = %if.then151, %do.body147
  br label %do.end156, !dbg !5493

do.end156:                                        ; preds = %if.end155
  %112 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5494
  %prepared157 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %112, i32 0, i32 9, !dbg !5495
  %bf.load158 = load i8, i8* %prepared157, align 4, !dbg !5496
  %bf.clear159 = and i8 %bf.load158, -3, !dbg !5496
  store i8 %bf.clear159, i8* %prepared157, align 4, !dbg !5496
  br label %if.end160, !dbg !5497

if.end160:                                        ; preds = %do.end156, %if.end140
  %113 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5498
  call void @__vb2_dqbuf(%struct.vb2_buffer* %113) #10, !dbg !5499
  %114 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5500
  %req_obj161 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %114, i32 0, i32 7, !dbg !5502
  %req162 = getelementptr inbounds %struct.media_request_object, %struct.media_request_object* %req_obj161, i32 0, i32 2, !dbg !5503
  %115 = load %struct.media_request*, %struct.media_request** %req162, align 8, !dbg !5503
  %tobool163 = icmp ne %struct.media_request* %115, null, !dbg !5500
  br i1 %tobool163, label %if.then164, label %if.end167, !dbg !5504

if.then164:                                       ; preds = %if.end160
  %116 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5505
  %req_obj165 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %116, i32 0, i32 7, !dbg !5507
  call void @media_request_object_unbind(%struct.media_request_object* %req_obj165) #10, !dbg !5508
  %117 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5509
  %req_obj166 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %117, i32 0, i32 7, !dbg !5510
  call void @media_request_object_put(%struct.media_request_object* %req_obj166) #10, !dbg !5511
  br label %if.end167, !dbg !5512

if.end167:                                        ; preds = %if.then164, %if.end160
  %118 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5513
  %request = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %118, i32 0, i32 6, !dbg !5515
  %119 = load %struct.media_request*, %struct.media_request** %request, align 8, !dbg !5515
  %tobool168 = icmp ne %struct.media_request* %119, null, !dbg !5513
  br i1 %tobool168, label %if.then169, label %if.end171, !dbg !5516

if.then169:                                       ; preds = %if.end167
  %120 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5517
  %request170 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %120, i32 0, i32 6, !dbg !5518
  %121 = load %struct.media_request*, %struct.media_request** %request170, align 8, !dbg !5518
  call void @media_request_put(%struct.media_request* %121) #10, !dbg !5519
  br label %if.end171, !dbg !5519

if.end171:                                        ; preds = %if.then169, %if.end167
  %122 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5520
  %request172 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %122, i32 0, i32 6, !dbg !5521
  store %struct.media_request* null, %struct.media_request** %request172, align 8, !dbg !5522
  %123 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5523
  %copied_timestamp = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %123, i32 0, i32 9, !dbg !5524
  %bf.load173 = load i8, i8* %copied_timestamp, align 4, !dbg !5525
  %bf.clear174 = and i8 %bf.load173, -5, !dbg !5525
  store i8 %bf.clear174, i8* %copied_timestamp, align 4, !dbg !5525
  br label %for.inc175, !dbg !5526

for.inc175:                                       ; preds = %if.end171
  %124 = load i32, i32* %i, align 4, !dbg !5527
  %inc176 = add i32 %124, 1, !dbg !5527
  store i32 %inc176, i32* %i, align 4, !dbg !5527
  br label %for.cond89, !dbg !5528, !llvm.loop !5529

for.end177:                                       ; preds = %for.cond89
  ret void, !dbg !5531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__vb2_queue_free(%struct.vb2_queue* %q, i32 %buffers) #0 !dbg !5532 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %buffers.addr = alloca i32, align 4
  %buffer = alloca i32, align 4
  %vb = alloca %struct.vb2_buffer*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !5533, metadata !DIExpression()), !dbg !5534
  store i32 %buffers, i32* %buffers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffers.addr, metadata !5535, metadata !DIExpression()), !dbg !5536
  call void @llvm.dbg.declare(metadata i32* %buffer, metadata !5537, metadata !DIExpression()), !dbg !5538
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5539
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 21, !dbg !5541
  %1 = load i32, i32* %num_buffers, align 8, !dbg !5541
  %2 = load i32, i32* %buffers.addr, align 4, !dbg !5542
  %sub = sub i32 %1, %2, !dbg !5543
  store i32 %sub, i32* %buffer, align 4, !dbg !5544
  br label %for.cond, !dbg !5545

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %buffer, align 4, !dbg !5546
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5548
  %num_buffers1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 21, !dbg !5549
  %5 = load i32, i32* %num_buffers1, align 8, !dbg !5549
  %cmp = icmp ult i32 %3, %5, !dbg !5550
  br i1 %cmp, label %for.body, label %for.end, !dbg !5551

for.body:                                         ; preds = %for.cond
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5552
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 20, !dbg !5555
  %7 = load i32, i32* %buffer, align 4, !dbg !5556
  %idxprom = zext i32 %7 to i64, !dbg !5552
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !5552
  %8 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !5552
  %cmp2 = icmp eq %struct.vb2_buffer* %8, null, !dbg !5557
  br i1 %cmp2, label %if.then, label %if.end, !dbg !5558

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !5559

if.end:                                           ; preds = %for.body
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5560
  %bufs3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %9, i32 0, i32 20, !dbg !5562
  %10 = load i32, i32* %buffer, align 4, !dbg !5563
  %idxprom4 = zext i32 %10 to i64, !dbg !5560
  %arrayidx5 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs3, i64 0, i64 %idxprom4, !dbg !5560
  %11 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx5, align 8, !dbg !5560
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %11, i32 0, i32 8, !dbg !5564
  %12 = load i32, i32* %state, align 8, !dbg !5564
  %cmp6 = icmp eq i32 %12, 2, !dbg !5565
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !5566

if.then7:                                         ; preds = %if.end
  br label %do.body, !dbg !5567

do.body:                                          ; preds = %if.then7
  %13 = load i32, i32* @debug, align 4, !dbg !5569
  %cmp8 = icmp sge i32 %13, 1, !dbg !5569
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5572

if.then9:                                         ; preds = %do.body
  %14 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5569
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %14, i32 0, i32 31, !dbg !5569
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !5569
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.57, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.__vb2_queue_free, i64 0, i64 0)) #11, !dbg !5569
  br label %if.end10, !dbg !5569

if.end10:                                         ; preds = %if.then9, %do.body
  br label %do.end, !dbg !5572

do.end:                                           ; preds = %if.end10
  store i32 -11, i32* %retval, align 4, !dbg !5573
  br label %return, !dbg !5573

if.end11:                                         ; preds = %if.end
  br label %for.inc, !dbg !5574

for.inc:                                          ; preds = %if.end11, %if.then
  %15 = load i32, i32* %buffer, align 4, !dbg !5575
  %inc = add i32 %15, 1, !dbg !5575
  store i32 %inc, i32* %buffer, align 4, !dbg !5575
  br label %for.cond, !dbg !5576, !llvm.loop !5577

for.end:                                          ; preds = %for.cond
  %16 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5579
  %num_buffers12 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %16, i32 0, i32 21, !dbg !5581
  %17 = load i32, i32* %num_buffers12, align 8, !dbg !5581
  %18 = load i32, i32* %buffers.addr, align 4, !dbg !5582
  %sub13 = sub i32 %17, %18, !dbg !5583
  store i32 %sub13, i32* %buffer, align 4, !dbg !5584
  br label %for.cond14, !dbg !5585

for.cond14:                                       ; preds = %for.inc33, %for.end
  %19 = load i32, i32* %buffer, align 4, !dbg !5586
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5588
  %num_buffers15 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %20, i32 0, i32 21, !dbg !5589
  %21 = load i32, i32* %num_buffers15, align 8, !dbg !5589
  %cmp16 = icmp ult i32 %19, %21, !dbg !5590
  br i1 %cmp16, label %for.body17, label %for.end35, !dbg !5591

for.body17:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !5592, metadata !DIExpression()), !dbg !5594
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5595
  %bufs18 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %22, i32 0, i32 20, !dbg !5596
  %23 = load i32, i32* %buffer, align 4, !dbg !5597
  %idxprom19 = zext i32 %23 to i64, !dbg !5595
  %arrayidx20 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs18, i64 0, i64 %idxprom19, !dbg !5595
  %24 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx20, align 8, !dbg !5595
  store %struct.vb2_buffer* %24, %struct.vb2_buffer** %vb, align 8, !dbg !5594
  %25 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5598
  %tobool = icmp ne %struct.vb2_buffer* %25, null, !dbg !5598
  br i1 %tobool, label %land.lhs.true, label %if.end32, !dbg !5600

land.lhs.true:                                    ; preds = %for.body17
  %26 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5601
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %26, i32 0, i32 10, !dbg !5602
  %arrayidx21 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 0, !dbg !5601
  %mem_priv = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx21, i32 0, i32 0, !dbg !5603
  %27 = load i8*, i8** %mem_priv, align 8, !dbg !5603
  %tobool22 = icmp ne i8* %27, null, !dbg !5601
  br i1 %tobool22, label %if.then23, label %if.end32, !dbg !5604

if.then23:                                        ; preds = %land.lhs.true
  br label %do.body24, !dbg !5605

do.body24:                                        ; preds = %if.then23
  %28 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5606
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %28, i32 0, i32 0, !dbg !5606
  %29 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !5606
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %29, i32 0, i32 7, !dbg !5606
  %30 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !5606
  %buf_cleanup = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %30, i32 0, i32 7, !dbg !5606
  %31 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_cleanup, align 8, !dbg !5606
  %tobool25 = icmp ne void (%struct.vb2_buffer*)* %31, null, !dbg !5606
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !5609

if.then26:                                        ; preds = %do.body24
  %32 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5606
  %vb2_queue27 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %32, i32 0, i32 0, !dbg !5606
  %33 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue27, align 8, !dbg !5606
  %ops28 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %33, i32 0, i32 7, !dbg !5606
  %34 = load %struct.vb2_ops*, %struct.vb2_ops** %ops28, align 8, !dbg !5606
  %buf_cleanup29 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %34, i32 0, i32 7, !dbg !5606
  %35 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_cleanup29, align 8, !dbg !5606
  %36 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5606
  call void %35(%struct.vb2_buffer* %36) #10, !dbg !5606
  br label %if.end30, !dbg !5606

if.end30:                                         ; preds = %if.then26, %do.body24
  br label %do.end31, !dbg !5609

do.end31:                                         ; preds = %if.end30
  br label %if.end32, !dbg !5609

if.end32:                                         ; preds = %do.end31, %land.lhs.true, %for.body17
  br label %for.inc33, !dbg !5610

for.inc33:                                        ; preds = %if.end32
  %37 = load i32, i32* %buffer, align 4, !dbg !5611
  %inc34 = add i32 %37, 1, !dbg !5611
  store i32 %inc34, i32* %buffer, align 4, !dbg !5611
  br label %for.cond14, !dbg !5612, !llvm.loop !5613

for.end35:                                        ; preds = %for.cond14
  %38 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5615
  %39 = load i32, i32* %buffers.addr, align 4, !dbg !5616
  call void @__vb2_free_mem(%struct.vb2_queue* %38, i32 %39) #10, !dbg !5617
  %40 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5618
  %num_buffers36 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %40, i32 0, i32 21, !dbg !5620
  %41 = load i32, i32* %num_buffers36, align 8, !dbg !5620
  %42 = load i32, i32* %buffers.addr, align 4, !dbg !5621
  %sub37 = sub i32 %41, %42, !dbg !5622
  store i32 %sub37, i32* %buffer, align 4, !dbg !5623
  br label %for.cond38, !dbg !5624

for.cond38:                                       ; preds = %for.inc48, %for.end35
  %43 = load i32, i32* %buffer, align 4, !dbg !5625
  %44 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5627
  %num_buffers39 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %44, i32 0, i32 21, !dbg !5628
  %45 = load i32, i32* %num_buffers39, align 8, !dbg !5628
  %cmp40 = icmp ult i32 %43, %45, !dbg !5629
  br i1 %cmp40, label %for.body41, label %for.end50, !dbg !5630

for.body41:                                       ; preds = %for.cond38
  %46 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5631
  %bufs42 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %46, i32 0, i32 20, !dbg !5633
  %47 = load i32, i32* %buffer, align 4, !dbg !5634
  %idxprom43 = zext i32 %47 to i64, !dbg !5631
  %arrayidx44 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs42, i64 0, i64 %idxprom43, !dbg !5631
  %48 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx44, align 8, !dbg !5631
  %49 = bitcast %struct.vb2_buffer* %48 to i8*, !dbg !5631
  call void @kfree(i8* %49) #10, !dbg !5635
  %50 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5636
  %bufs45 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %50, i32 0, i32 20, !dbg !5637
  %51 = load i32, i32* %buffer, align 4, !dbg !5638
  %idxprom46 = zext i32 %51 to i64, !dbg !5636
  %arrayidx47 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs45, i64 0, i64 %idxprom46, !dbg !5636
  store %struct.vb2_buffer* null, %struct.vb2_buffer** %arrayidx47, align 8, !dbg !5639
  br label %for.inc48, !dbg !5640

for.inc48:                                        ; preds = %for.body41
  %52 = load i32, i32* %buffer, align 4, !dbg !5641
  %inc49 = add i32 %52, 1, !dbg !5641
  store i32 %inc49, i32* %buffer, align 4, !dbg !5641
  br label %for.cond38, !dbg !5642, !llvm.loop !5643

for.end50:                                        ; preds = %for.cond38
  %53 = load i32, i32* %buffers.addr, align 4, !dbg !5645
  %54 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5646
  %num_buffers51 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %54, i32 0, i32 21, !dbg !5647
  %55 = load i32, i32* %num_buffers51, align 8, !dbg !5648
  %sub52 = sub i32 %55, %53, !dbg !5648
  store i32 %sub52, i32* %num_buffers51, align 8, !dbg !5648
  %56 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5649
  %num_buffers53 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %56, i32 0, i32 21, !dbg !5651
  %57 = load i32, i32* %num_buffers53, align 8, !dbg !5651
  %tobool54 = icmp ne i32 %57, 0, !dbg !5649
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !5652

if.then55:                                        ; preds = %for.end50
  %58 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5653
  %memory = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %58, i32 0, i32 18, !dbg !5655
  store i32 0, i32* %memory, align 8, !dbg !5656
  %59 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5657
  %queued_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %59, i32 0, i32 22, !dbg !5658
  call void @INIT_LIST_HEAD(%struct.list_head* %queued_list) #10, !dbg !5659
  br label %if.end56, !dbg !5660

if.end56:                                         ; preds = %if.then55, %for.end50
  store i32 0, i32* %retval, align 4, !dbg !5661
  br label %return, !dbg !5661

return:                                           ; preds = %if.end56, %do.end
  %60 = load i32, i32* %retval, align 4, !dbg !5662
  ret i32 %60, !dbg !5662
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__vb2_queue_alloc(%struct.vb2_queue* %q, i32 %memory, i32 %num_buffers, i32 %num_planes, i32* %plane_sizes) #0 !dbg !5663 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  %memory.addr = alloca i32, align 4
  %num_buffers.addr = alloca i32, align 4
  %num_planes.addr = alloca i32, align 4
  %plane_sizes.addr = alloca i32*, align 8
  %buffer = alloca i32, align 4
  %plane = alloca i32, align 4
  %vb = alloca %struct.vb2_buffer*, align 8
  %ret = alloca i32, align 4
  %__UNIQUE_ID___x263 = alloca i32, align 4
  %__UNIQUE_ID___y264 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !5667, metadata !DIExpression()), !dbg !5668
  store i32 %memory, i32* %memory.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %memory.addr, metadata !5669, metadata !DIExpression()), !dbg !5670
  store i32 %num_buffers, i32* %num_buffers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_buffers.addr, metadata !5671, metadata !DIExpression()), !dbg !5672
  store i32 %num_planes, i32* %num_planes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_planes.addr, metadata !5673, metadata !DIExpression()), !dbg !5674
  store i32* %plane_sizes, i32** %plane_sizes.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %plane_sizes.addr, metadata !5675, metadata !DIExpression()), !dbg !5676
  call void @llvm.dbg.declare(metadata i32* %buffer, metadata !5677, metadata !DIExpression()), !dbg !5678
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !5679, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !5681, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5683, metadata !DIExpression()), !dbg !5684
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x263, metadata !5685, metadata !DIExpression()), !dbg !5687
  %0 = load i32, i32* %num_buffers.addr, align 4, !dbg !5687
  store i32 %0, i32* %__UNIQUE_ID___x263, align 4, !dbg !5687
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y264, metadata !5688, metadata !DIExpression()), !dbg !5687
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5687
  %num_buffers1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 21, !dbg !5687
  %2 = load i32, i32* %num_buffers1, align 8, !dbg !5687
  %sub = sub i32 32, %2, !dbg !5687
  store i32 %sub, i32* %__UNIQUE_ID___y264, align 4, !dbg !5687
  %3 = load i32, i32* %__UNIQUE_ID___x263, align 4, !dbg !5687
  %4 = load i32, i32* %__UNIQUE_ID___y264, align 4, !dbg !5687
  %cmp = icmp ult i32 %3, %4, !dbg !5687
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5687

cond.true:                                        ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___x263, align 4, !dbg !5687
  br label %cond.end, !dbg !5687

cond.false:                                       ; preds = %entry
  %6 = load i32, i32* %__UNIQUE_ID___y264, align 4, !dbg !5687
  br label %cond.end, !dbg !5687

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !5687
  store i32 %cond, i32* %tmp, align 4, !dbg !5687
  %7 = load i32, i32* %tmp, align 4, !dbg !5687
  store i32 %7, i32* %num_buffers.addr, align 4, !dbg !5689
  store i32 0, i32* %buffer, align 4, !dbg !5690
  br label %for.cond, !dbg !5692

for.cond:                                         ; preds = %for.inc90, %cond.end
  %8 = load i32, i32* %buffer, align 4, !dbg !5693
  %9 = load i32, i32* %num_buffers.addr, align 4, !dbg !5695
  %cmp2 = icmp ult i32 %8, %9, !dbg !5696
  br i1 %cmp2, label %for.body, label %for.end92, !dbg !5697

for.body:                                         ; preds = %for.cond
  %10 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5698
  %buf_struct_size = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %10, i32 0, i32 12, !dbg !5700
  %11 = load i32, i32* %buf_struct_size, align 4, !dbg !5700
  %conv = zext i32 %11 to i64, !dbg !5698
  %call = call i8* @kzalloc(i64 %conv, i32 3264) #10, !dbg !5701
  %12 = bitcast i8* %call to %struct.vb2_buffer*, !dbg !5701
  store %struct.vb2_buffer* %12, %struct.vb2_buffer** %vb, align 8, !dbg !5702
  %13 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5703
  %tobool = icmp ne %struct.vb2_buffer* %13, null, !dbg !5703
  br i1 %tobool, label %if.end7, label %if.then, !dbg !5705

if.then:                                          ; preds = %for.body
  br label %do.body, !dbg !5706

do.body:                                          ; preds = %if.then
  %14 = load i32, i32* @debug, align 4, !dbg !5708
  %cmp3 = icmp sge i32 %14, 1, !dbg !5708
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !5711

if.then5:                                         ; preds = %do.body
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5708
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 31, !dbg !5708
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !5708
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.59, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.__vb2_queue_alloc, i64 0, i64 0)) #11, !dbg !5708
  br label %if.end, !dbg !5708

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end, !dbg !5711

do.end:                                           ; preds = %if.end
  br label %for.end92, !dbg !5712

if.end7:                                          ; preds = %for.body
  %16 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5713
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %16, i32 0, i32 8, !dbg !5714
  store i32 0, i32* %state, align 8, !dbg !5715
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5716
  %18 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5717
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %18, i32 0, i32 0, !dbg !5718
  store %struct.vb2_queue* %17, %struct.vb2_queue** %vb2_queue, align 8, !dbg !5719
  %19 = load i32, i32* %num_planes.addr, align 4, !dbg !5720
  %20 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5721
  %num_planes8 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %20, i32 0, i32 4, !dbg !5722
  store i32 %19, i32* %num_planes8, align 4, !dbg !5723
  %21 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5724
  %num_buffers9 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %21, i32 0, i32 21, !dbg !5725
  %22 = load i32, i32* %num_buffers9, align 8, !dbg !5725
  %23 = load i32, i32* %buffer, align 4, !dbg !5726
  %add = add i32 %22, %23, !dbg !5727
  %24 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5728
  %index = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %24, i32 0, i32 1, !dbg !5729
  store i32 %add, i32* %index, align 8, !dbg !5730
  %25 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5731
  %type = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %25, i32 0, i32 0, !dbg !5732
  %26 = load i32, i32* %type, align 8, !dbg !5732
  %27 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5733
  %type10 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %27, i32 0, i32 2, !dbg !5734
  store i32 %26, i32* %type10, align 4, !dbg !5735
  %28 = load i32, i32* %memory.addr, align 4, !dbg !5736
  %29 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5737
  %memory11 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %29, i32 0, i32 3, !dbg !5738
  store i32 %28, i32* %memory11, align 8, !dbg !5739
  %30 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5740
  %memory12 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %30, i32 0, i32 18, !dbg !5742
  %31 = load i32, i32* %memory12, align 8, !dbg !5742
  %cmp13 = icmp ne i32 %31, 4, !dbg !5743
  br i1 %cmp13, label %if.then15, label %if.end19, !dbg !5744

if.then15:                                        ; preds = %if.end7
  %32 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5745
  %need_cache_sync_on_prepare = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %32, i32 0, i32 9, !dbg !5747
  %bf.load = load i8, i8* %need_cache_sync_on_prepare, align 4, !dbg !5748
  %bf.clear = and i8 %bf.load, -9, !dbg !5748
  %bf.set = or i8 %bf.clear, 8, !dbg !5748
  store i8 %bf.set, i8* %need_cache_sync_on_prepare, align 4, !dbg !5748
  %33 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5749
  %need_cache_sync_on_finish = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %33, i32 0, i32 9, !dbg !5750
  %bf.load16 = load i8, i8* %need_cache_sync_on_finish, align 4, !dbg !5751
  %bf.clear17 = and i8 %bf.load16, -17, !dbg !5751
  %bf.set18 = or i8 %bf.clear17, 16, !dbg !5751
  store i8 %bf.set18, i8* %need_cache_sync_on_finish, align 4, !dbg !5751
  br label %if.end19, !dbg !5752

if.end19:                                         ; preds = %if.then15, %if.end7
  store i32 0, i32* %plane, align 4, !dbg !5753
  br label %for.cond20, !dbg !5755

for.cond20:                                       ; preds = %for.inc, %if.end19
  %34 = load i32, i32* %plane, align 4, !dbg !5756
  %35 = load i32, i32* %num_planes.addr, align 4, !dbg !5758
  %cmp21 = icmp ult i32 %34, %35, !dbg !5759
  br i1 %cmp21, label %for.body23, label %for.end, !dbg !5760

for.body23:                                       ; preds = %for.cond20
  %36 = load i32*, i32** %plane_sizes.addr, align 8, !dbg !5761
  %37 = load i32, i32* %plane, align 4, !dbg !5763
  %idxprom = zext i32 %37 to i64, !dbg !5761
  %arrayidx = getelementptr i32, i32* %36, i64 %idxprom, !dbg !5761
  %38 = load i32, i32* %arrayidx, align 4, !dbg !5761
  %39 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5764
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %39, i32 0, i32 10, !dbg !5765
  %40 = load i32, i32* %plane, align 4, !dbg !5766
  %idxprom24 = zext i32 %40 to i64, !dbg !5764
  %arrayidx25 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom24, !dbg !5764
  %length = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx25, i32 0, i32 4, !dbg !5767
  store i32 %38, i32* %length, align 8, !dbg !5768
  %41 = load i32*, i32** %plane_sizes.addr, align 8, !dbg !5769
  %42 = load i32, i32* %plane, align 4, !dbg !5770
  %idxprom26 = zext i32 %42 to i64, !dbg !5769
  %arrayidx27 = getelementptr i32, i32* %41, i64 %idxprom26, !dbg !5769
  %43 = load i32, i32* %arrayidx27, align 4, !dbg !5769
  %44 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5771
  %planes28 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %44, i32 0, i32 10, !dbg !5772
  %45 = load i32, i32* %plane, align 4, !dbg !5773
  %idxprom29 = zext i32 %45 to i64, !dbg !5771
  %arrayidx30 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes28, i64 0, i64 %idxprom29, !dbg !5771
  %min_length = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx30, i32 0, i32 5, !dbg !5774
  store i32 %43, i32* %min_length, align 4, !dbg !5775
  br label %for.inc, !dbg !5776

for.inc:                                          ; preds = %for.body23
  %46 = load i32, i32* %plane, align 4, !dbg !5777
  %inc = add i32 %46, 1, !dbg !5777
  store i32 %inc, i32* %plane, align 4, !dbg !5777
  br label %for.cond20, !dbg !5778, !llvm.loop !5779

for.end:                                          ; preds = %for.cond20
  %47 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5781
  %tobool31 = icmp ne %struct.vb2_queue* %47, null, !dbg !5781
  br i1 %tobool31, label %land.lhs.true, label %if.end39, !dbg !5781

land.lhs.true:                                    ; preds = %for.end
  %48 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5781
  %buf_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %48, i32 0, i32 9, !dbg !5781
  %49 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops, align 8, !dbg !5781
  %tobool32 = icmp ne %struct.vb2_buf_ops* %49, null, !dbg !5781
  br i1 %tobool32, label %land.lhs.true33, label %if.end39, !dbg !5781

land.lhs.true33:                                  ; preds = %land.lhs.true
  %50 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5781
  %buf_ops34 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %50, i32 0, i32 9, !dbg !5781
  %51 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops34, align 8, !dbg !5781
  %init_buffer = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %51, i32 0, i32 1, !dbg !5781
  %52 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %init_buffer, align 8, !dbg !5781
  %tobool35 = icmp ne void (%struct.vb2_buffer*)* %52, null, !dbg !5781
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !5784

if.then36:                                        ; preds = %land.lhs.true33
  %53 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5781
  %buf_ops37 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %53, i32 0, i32 9, !dbg !5781
  %54 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops37, align 8, !dbg !5781
  %init_buffer38 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %54, i32 0, i32 1, !dbg !5781
  %55 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %init_buffer38, align 8, !dbg !5781
  %56 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5781
  call void %55(%struct.vb2_buffer* %56) #10, !dbg !5781
  br label %if.end39, !dbg !5781

if.end39:                                         ; preds = %if.then36, %land.lhs.true33, %land.lhs.true, %for.end
  %57 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5785
  %58 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5786
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %58, i32 0, i32 20, !dbg !5787
  %59 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5788
  %index40 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %59, i32 0, i32 1, !dbg !5789
  %60 = load i32, i32* %index40, align 8, !dbg !5789
  %idxprom41 = zext i32 %60 to i64, !dbg !5786
  %arrayidx42 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom41, !dbg !5786
  store %struct.vb2_buffer* %57, %struct.vb2_buffer** %arrayidx42, align 8, !dbg !5790
  %61 = load i32, i32* %memory.addr, align 4, !dbg !5791
  %cmp43 = icmp eq i32 %61, 1, !dbg !5793
  br i1 %cmp43, label %if.then45, label %if.end89, !dbg !5794

if.then45:                                        ; preds = %if.end39
  %62 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5795
  %call46 = call i32 @__vb2_buf_mem_alloc(%struct.vb2_buffer* %62) #10, !dbg !5797
  store i32 %call46, i32* %ret, align 4, !dbg !5798
  %63 = load i32, i32* %ret, align 4, !dbg !5799
  %tobool47 = icmp ne i32 %63, 0, !dbg !5799
  br i1 %tobool47, label %if.then48, label %if.end62, !dbg !5801

if.then48:                                        ; preds = %if.then45
  br label %do.body49, !dbg !5802

do.body49:                                        ; preds = %if.then48
  %64 = load i32, i32* @debug, align 4, !dbg !5804
  %cmp50 = icmp sge i32 %64, 1, !dbg !5804
  br i1 %cmp50, label %if.then52, label %if.end56, !dbg !5807

if.then52:                                        ; preds = %do.body49
  %65 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5804
  %name53 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %65, i32 0, i32 31, !dbg !5804
  %arraydecay54 = getelementptr inbounds [32 x i8], [32 x i8]* %name53, i64 0, i64 0, !dbg !5804
  %66 = load i32, i32* %buffer, align 4, !dbg !5804
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.60, i64 0, i64 0), i8* %arraydecay54, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.__vb2_queue_alloc, i64 0, i64 0), i32 %66) #11, !dbg !5804
  br label %if.end56, !dbg !5804

if.end56:                                         ; preds = %if.then52, %do.body49
  br label %do.end57, !dbg !5807

do.end57:                                         ; preds = %if.end56
  %67 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5808
  %bufs58 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %67, i32 0, i32 20, !dbg !5809
  %68 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5810
  %index59 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %68, i32 0, i32 1, !dbg !5811
  %69 = load i32, i32* %index59, align 8, !dbg !5811
  %idxprom60 = zext i32 %69 to i64, !dbg !5808
  %arrayidx61 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs58, i64 0, i64 %idxprom60, !dbg !5808
  store %struct.vb2_buffer* null, %struct.vb2_buffer** %arrayidx61, align 8, !dbg !5812
  %70 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5813
  %71 = bitcast %struct.vb2_buffer* %70 to i8*, !dbg !5813
  call void @kfree(i8* %71) #10, !dbg !5814
  br label %for.end92, !dbg !5815

if.end62:                                         ; preds = %if.then45
  %72 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5816
  call void @__setup_offsets(%struct.vb2_buffer* %72) #10, !dbg !5817
  %73 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5818
  %vb2_queue63 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %73, i32 0, i32 0, !dbg !5818
  %74 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue63, align 8, !dbg !5818
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %74, i32 0, i32 7, !dbg !5818
  %75 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !5818
  %buf_init = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %75, i32 0, i32 4, !dbg !5818
  %76 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_init, align 8, !dbg !5818
  %tobool64 = icmp ne i32 (%struct.vb2_buffer*)* %76, null, !dbg !5818
  br i1 %tobool64, label %cond.true65, label %cond.false70, !dbg !5818

cond.true65:                                      ; preds = %if.end62
  %77 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5818
  %vb2_queue66 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %77, i32 0, i32 0, !dbg !5818
  %78 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue66, align 8, !dbg !5818
  %ops67 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %78, i32 0, i32 7, !dbg !5818
  %79 = load %struct.vb2_ops*, %struct.vb2_ops** %ops67, align 8, !dbg !5818
  %buf_init68 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %79, i32 0, i32 4, !dbg !5818
  %80 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_init68, align 8, !dbg !5818
  %81 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5818
  %call69 = call i32 %80(%struct.vb2_buffer* %81) #10, !dbg !5818
  br label %cond.end71, !dbg !5818

cond.false70:                                     ; preds = %if.end62
  br label %cond.end71, !dbg !5818

cond.end71:                                       ; preds = %cond.false70, %cond.true65
  %cond72 = phi i32 [ %call69, %cond.true65 ], [ 0, %cond.false70 ], !dbg !5818
  store i32 %cond72, i32* %ret, align 4, !dbg !5819
  %82 = load i32, i32* %ret, align 4, !dbg !5820
  %tobool73 = icmp ne i32 %82, 0, !dbg !5820
  br i1 %tobool73, label %if.then74, label %if.end88, !dbg !5822

if.then74:                                        ; preds = %cond.end71
  br label %do.body75, !dbg !5823

do.body75:                                        ; preds = %if.then74
  %83 = load i32, i32* @debug, align 4, !dbg !5825
  %cmp76 = icmp sge i32 %83, 1, !dbg !5825
  br i1 %cmp76, label %if.then78, label %if.end82, !dbg !5828

if.then78:                                        ; preds = %do.body75
  %84 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5825
  %name79 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %84, i32 0, i32 31, !dbg !5825
  %arraydecay80 = getelementptr inbounds [32 x i8], [32 x i8]* %name79, i64 0, i64 0, !dbg !5825
  %85 = load i32, i32* %buffer, align 4, !dbg !5825
  %86 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5825
  %call81 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.61, i64 0, i64 0), i8* %arraydecay80, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.__vb2_queue_alloc, i64 0, i64 0), i32 %85, %struct.vb2_buffer* %86) #11, !dbg !5825
  br label %if.end82, !dbg !5825

if.end82:                                         ; preds = %if.then78, %do.body75
  br label %do.end83, !dbg !5828

do.end83:                                         ; preds = %if.end82
  %87 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5829
  call void @__vb2_buf_mem_free(%struct.vb2_buffer* %87) #10, !dbg !5830
  %88 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5831
  %bufs84 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %88, i32 0, i32 20, !dbg !5832
  %89 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5833
  %index85 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %89, i32 0, i32 1, !dbg !5834
  %90 = load i32, i32* %index85, align 8, !dbg !5834
  %idxprom86 = zext i32 %90 to i64, !dbg !5831
  %arrayidx87 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs84, i64 0, i64 %idxprom86, !dbg !5831
  store %struct.vb2_buffer* null, %struct.vb2_buffer** %arrayidx87, align 8, !dbg !5835
  %91 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !5836
  %92 = bitcast %struct.vb2_buffer* %91 to i8*, !dbg !5836
  call void @kfree(i8* %92) #10, !dbg !5837
  br label %for.end92, !dbg !5838

if.end88:                                         ; preds = %cond.end71
  br label %if.end89, !dbg !5839

if.end89:                                         ; preds = %if.end88, %if.end39
  br label %for.inc90, !dbg !5840

for.inc90:                                        ; preds = %if.end89
  %93 = load i32, i32* %buffer, align 4, !dbg !5841
  %inc91 = add i32 %93, 1, !dbg !5841
  store i32 %inc91, i32* %buffer, align 4, !dbg !5841
  br label %for.cond, !dbg !5842, !llvm.loop !5843

for.end92:                                        ; preds = %do.end83, %do.end57, %do.end, %for.cond
  br label %do.body93, !dbg !5845

do.body93:                                        ; preds = %for.end92
  %94 = load i32, i32* @debug, align 4, !dbg !5846
  %cmp94 = icmp sge i32 %94, 3, !dbg !5846
  br i1 %cmp94, label %if.then96, label %if.end100, !dbg !5849

if.then96:                                        ; preds = %do.body93
  %95 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5846
  %name97 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %95, i32 0, i32 31, !dbg !5846
  %arraydecay98 = getelementptr inbounds [32 x i8], [32 x i8]* %name97, i64 0, i64 0, !dbg !5846
  %96 = load i32, i32* %buffer, align 4, !dbg !5846
  %97 = load i32, i32* %num_planes.addr, align 4, !dbg !5846
  %call99 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.62, i64 0, i64 0), i8* %arraydecay98, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.__vb2_queue_alloc, i64 0, i64 0), i32 %96, i32 %97) #11, !dbg !5846
  br label %if.end100, !dbg !5846

if.end100:                                        ; preds = %if.then96, %do.body93
  br label %do.end101, !dbg !5849

do.end101:                                        ; preds = %if.end100
  %98 = load i32, i32* %buffer, align 4, !dbg !5850
  ret i32 %98, !dbg !5851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_core_create_bufs(%struct.vb2_queue* %q, i32 %memory, i32* %count, i32 %requested_planes, i32* %requested_sizes) #0 !dbg !5852 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %memory.addr = alloca i32, align 4
  %count.addr = alloca i32*, align 8
  %requested_planes.addr = alloca i32, align 4
  %requested_sizes.addr = alloca i32*, align 8
  %num_planes = alloca i32, align 4
  %num_buffers = alloca i32, align 4
  %allocated_buffers = alloca i32, align 4
  %plane_sizes = alloca [8 x i32], align 16
  %ret = alloca i32, align 4
  %__UNIQUE_ID___x272 = alloca i32, align 4
  %__UNIQUE_ID___y273 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !5855, metadata !DIExpression()), !dbg !5856
  store i32 %memory, i32* %memory.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %memory.addr, metadata !5857, metadata !DIExpression()), !dbg !5858
  store i32* %count, i32** %count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %count.addr, metadata !5859, metadata !DIExpression()), !dbg !5860
  store i32 %requested_planes, i32* %requested_planes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %requested_planes.addr, metadata !5861, metadata !DIExpression()), !dbg !5862
  store i32* %requested_sizes, i32** %requested_sizes.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %requested_sizes.addr, metadata !5863, metadata !DIExpression()), !dbg !5864
  call void @llvm.dbg.declare(metadata i32* %num_planes, metadata !5865, metadata !DIExpression()), !dbg !5866
  store i32 0, i32* %num_planes, align 4, !dbg !5866
  call void @llvm.dbg.declare(metadata i32* %num_buffers, metadata !5867, metadata !DIExpression()), !dbg !5868
  call void @llvm.dbg.declare(metadata i32* %allocated_buffers, metadata !5869, metadata !DIExpression()), !dbg !5870
  call void @llvm.dbg.declare(metadata [8 x i32]* %plane_sizes, metadata !5871, metadata !DIExpression()), !dbg !5872
  %0 = bitcast [8 x i32]* %plane_sizes to i8*, !dbg !5872
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 32, i1 false), !dbg !5872
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5873, metadata !DIExpression()), !dbg !5874
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5875
  %num_buffers1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 21, !dbg !5877
  %2 = load i32, i32* %num_buffers1, align 8, !dbg !5877
  %cmp = icmp eq i32 %2, 32, !dbg !5878
  br i1 %cmp, label %if.then, label %if.end4, !dbg !5879

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5880

do.body:                                          ; preds = %if.then
  %3 = load i32, i32* @debug, align 4, !dbg !5882
  %cmp2 = icmp sge i32 %3, 1, !dbg !5882
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !5885

if.then3:                                         ; preds = %do.body
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5882
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 31, !dbg !5882
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !5882
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.11, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.vb2_core_create_bufs, i64 0, i64 0)) #11, !dbg !5882
  br label %if.end, !dbg !5882

if.end:                                           ; preds = %if.then3, %do.body
  br label %do.end, !dbg !5885

do.end:                                           ; preds = %if.end
  store i32 -105, i32* %retval, align 4, !dbg !5886
  br label %return, !dbg !5886

if.end4:                                          ; preds = %entry
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5887
  %num_buffers5 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %5, i32 0, i32 21, !dbg !5889
  %6 = load i32, i32* %num_buffers5, align 8, !dbg !5889
  %tobool = icmp ne i32 %6, 0, !dbg !5887
  br i1 %tobool, label %if.else, label %if.then6, !dbg !5890

if.then6:                                         ; preds = %if.end4
  %7 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5891
  %waiting_in_dqbuf = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %7, i32 0, i32 28, !dbg !5894
  %bf.load = load i16, i16* %waiting_in_dqbuf, align 8, !dbg !5894
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !5894
  %bf.clear = and i16 %bf.lshr, 1, !dbg !5894
  %bf.cast = zext i16 %bf.clear to i32, !dbg !5894
  %tobool7 = icmp ne i32 %bf.cast, 0, !dbg !5891
  br i1 %tobool7, label %land.lhs.true, label %if.end18, !dbg !5895

land.lhs.true:                                    ; preds = %if.then6
  %8 = load i32*, i32** %count.addr, align 8, !dbg !5896
  %9 = load i32, i32* %8, align 4, !dbg !5897
  %tobool8 = icmp ne i32 %9, 0, !dbg !5897
  br i1 %tobool8, label %if.then9, label %if.end18, !dbg !5898

if.then9:                                         ; preds = %land.lhs.true
  br label %do.body10, !dbg !5899

do.body10:                                        ; preds = %if.then9
  %10 = load i32, i32* @debug, align 4, !dbg !5901
  %cmp11 = icmp sge i32 %10, 1, !dbg !5901
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !5904

if.then12:                                        ; preds = %do.body10
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5901
  %name13 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 31, !dbg !5901
  %arraydecay14 = getelementptr inbounds [32 x i8], [32 x i8]* %name13, i64 0, i64 0, !dbg !5901
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i8* %arraydecay14, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.vb2_core_create_bufs, i64 0, i64 0)) #11, !dbg !5901
  br label %if.end16, !dbg !5901

if.end16:                                         ; preds = %if.then12, %do.body10
  br label %do.end17, !dbg !5904

do.end17:                                         ; preds = %if.end16
  store i32 -16, i32* %retval, align 4, !dbg !5905
  br label %return, !dbg !5905

if.end18:                                         ; preds = %land.lhs.true, %if.then6
  %12 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5906
  %alloc_devs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %12, i32 0, i32 16, !dbg !5907
  %arraydecay19 = getelementptr inbounds [8 x %struct.device*], [8 x %struct.device*]* %alloc_devs, i64 0, i64 0, !dbg !5908
  %13 = bitcast %struct.device** %arraydecay19 to i8*, !dbg !5908
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 64, i1 false), !dbg !5908
  %14 = load i32, i32* %memory.addr, align 4, !dbg !5909
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5910
  %memory20 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 18, !dbg !5911
  store i32 %14, i32* %memory20, align 8, !dbg !5912
  %16 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5913
  %is_output = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %16, i32 0, i32 28, !dbg !5914
  %bf.load21 = load i16, i16* %is_output, align 8, !dbg !5914
  %bf.lshr22 = lshr i16 %bf.load21, 6, !dbg !5914
  %bf.clear23 = and i16 %bf.lshr22, 1, !dbg !5914
  %bf.cast24 = zext i16 %bf.clear23 to i32, !dbg !5914
  %tobool25 = icmp ne i32 %bf.cast24, 0, !dbg !5915
  %lnot = xor i1 %tobool25, true, !dbg !5915
  %lnot.ext = zext i1 %lnot to i32, !dbg !5915
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5916
  %waiting_for_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %17, i32 0, i32 28, !dbg !5917
  %18 = trunc i32 %lnot.ext to i16, !dbg !5918
  %bf.load26 = load i16, i16* %waiting_for_buffers, align 8, !dbg !5918
  %bf.value = and i16 %18, 1, !dbg !5918
  %bf.shl = shl i16 %bf.value, 3, !dbg !5918
  %bf.clear27 = and i16 %bf.load26, -9, !dbg !5918
  %bf.set = or i16 %bf.clear27, %bf.shl, !dbg !5918
  store i16 %bf.set, i16* %waiting_for_buffers, align 8, !dbg !5918
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !5918
  br label %if.end40, !dbg !5919

if.else:                                          ; preds = %if.end4
  %19 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5920
  %memory28 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %19, i32 0, i32 18, !dbg !5923
  %20 = load i32, i32* %memory28, align 8, !dbg !5923
  %21 = load i32, i32* %memory.addr, align 4, !dbg !5924
  %cmp29 = icmp ne i32 %20, %21, !dbg !5925
  br i1 %cmp29, label %if.then30, label %if.end39, !dbg !5926

if.then30:                                        ; preds = %if.else
  br label %do.body31, !dbg !5927

do.body31:                                        ; preds = %if.then30
  %22 = load i32, i32* @debug, align 4, !dbg !5929
  %cmp32 = icmp sge i32 %22, 1, !dbg !5929
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !5932

if.then33:                                        ; preds = %do.body31
  %23 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5929
  %name34 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %23, i32 0, i32 31, !dbg !5929
  %arraydecay35 = getelementptr inbounds [32 x i8], [32 x i8]* %name34, i64 0, i64 0, !dbg !5929
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12, i64 0, i64 0), i8* %arraydecay35, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.vb2_core_create_bufs, i64 0, i64 0)) #11, !dbg !5929
  br label %if.end37, !dbg !5929

if.end37:                                         ; preds = %if.then33, %do.body31
  br label %do.end38, !dbg !5932

do.end38:                                         ; preds = %if.end37
  store i32 -22, i32* %retval, align 4, !dbg !5933
  br label %return, !dbg !5933

if.end39:                                         ; preds = %if.else
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end18
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x272, metadata !5934, metadata !DIExpression()), !dbg !5936
  %24 = load i32*, i32** %count.addr, align 8, !dbg !5936
  %25 = load i32, i32* %24, align 4, !dbg !5936
  store i32 %25, i32* %__UNIQUE_ID___x272, align 4, !dbg !5936
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y273, metadata !5937, metadata !DIExpression()), !dbg !5936
  %26 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5936
  %num_buffers41 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %26, i32 0, i32 21, !dbg !5936
  %27 = load i32, i32* %num_buffers41, align 8, !dbg !5936
  %sub = sub i32 32, %27, !dbg !5936
  store i32 %sub, i32* %__UNIQUE_ID___y273, align 4, !dbg !5936
  %28 = load i32, i32* %__UNIQUE_ID___x272, align 4, !dbg !5936
  %29 = load i32, i32* %__UNIQUE_ID___y273, align 4, !dbg !5936
  %cmp42 = icmp ult i32 %28, %29, !dbg !5936
  br i1 %cmp42, label %cond.true, label %cond.false, !dbg !5936

cond.true:                                        ; preds = %if.end40
  %30 = load i32, i32* %__UNIQUE_ID___x272, align 4, !dbg !5936
  br label %cond.end, !dbg !5936

cond.false:                                       ; preds = %if.end40
  %31 = load i32, i32* %__UNIQUE_ID___y273, align 4, !dbg !5936
  br label %cond.end, !dbg !5936

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %30, %cond.true ], [ %31, %cond.false ], !dbg !5936
  store i32 %cond, i32* %tmp, align 4, !dbg !5936
  %32 = load i32, i32* %tmp, align 4, !dbg !5936
  store i32 %32, i32* %num_buffers, align 4, !dbg !5938
  %33 = load i32, i32* %requested_planes.addr, align 4, !dbg !5939
  %tobool43 = icmp ne i32 %33, 0, !dbg !5939
  br i1 %tobool43, label %land.lhs.true44, label %if.end48, !dbg !5941

land.lhs.true44:                                  ; preds = %cond.end
  %34 = load i32*, i32** %requested_sizes.addr, align 8, !dbg !5942
  %tobool45 = icmp ne i32* %34, null, !dbg !5942
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !5943

if.then46:                                        ; preds = %land.lhs.true44
  %35 = load i32, i32* %requested_planes.addr, align 4, !dbg !5944
  store i32 %35, i32* %num_planes, align 4, !dbg !5946
  %arraydecay47 = getelementptr inbounds [8 x i32], [8 x i32]* %plane_sizes, i64 0, i64 0, !dbg !5947
  %36 = bitcast i32* %arraydecay47 to i8*, !dbg !5947
  %37 = load i32*, i32** %requested_sizes.addr, align 8, !dbg !5948
  %38 = bitcast i32* %37 to i8*, !dbg !5947
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %36, i8* align 4 %38, i64 32, i1 false), !dbg !5947
  br label %if.end48, !dbg !5949

if.end48:                                         ; preds = %if.then46, %land.lhs.true44, %cond.end
  %39 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5950
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %39, i32 0, i32 7, !dbg !5950
  %40 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !5950
  %queue_setup = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %40, i32 0, i32 0, !dbg !5950
  %41 = load i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)*, i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)** %queue_setup, align 8, !dbg !5950
  %tobool49 = icmp ne i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)* %41, null, !dbg !5950
  br i1 %tobool49, label %cond.true50, label %cond.false57, !dbg !5950

cond.true50:                                      ; preds = %if.end48
  %42 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5950
  %ops51 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %42, i32 0, i32 7, !dbg !5950
  %43 = load %struct.vb2_ops*, %struct.vb2_ops** %ops51, align 8, !dbg !5950
  %queue_setup52 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %43, i32 0, i32 0, !dbg !5950
  %44 = load i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)*, i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)** %queue_setup52, align 8, !dbg !5950
  %45 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5950
  %arraydecay53 = getelementptr inbounds [8 x i32], [8 x i32]* %plane_sizes, i64 0, i64 0, !dbg !5950
  %46 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5950
  %alloc_devs54 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %46, i32 0, i32 16, !dbg !5950
  %arraydecay55 = getelementptr inbounds [8 x %struct.device*], [8 x %struct.device*]* %alloc_devs54, i64 0, i64 0, !dbg !5950
  %call56 = call i32 %44(%struct.vb2_queue* %45, i32* %num_buffers, i32* %num_planes, i32* %arraydecay53, %struct.device** %arraydecay55) #10, !dbg !5950
  br label %cond.end58, !dbg !5950

cond.false57:                                     ; preds = %if.end48
  br label %cond.end58, !dbg !5950

cond.end58:                                       ; preds = %cond.false57, %cond.true50
  %cond59 = phi i32 [ %call56, %cond.true50 ], [ 0, %cond.false57 ], !dbg !5950
  store i32 %cond59, i32* %ret, align 4, !dbg !5951
  %47 = load i32, i32* %ret, align 4, !dbg !5952
  %tobool60 = icmp ne i32 %47, 0, !dbg !5952
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !5954

if.then61:                                        ; preds = %cond.end58
  %48 = load i32, i32* %ret, align 4, !dbg !5955
  store i32 %48, i32* %retval, align 4, !dbg !5956
  br label %return, !dbg !5956

if.end62:                                         ; preds = %cond.end58
  %49 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5957
  %50 = load i32, i32* %memory.addr, align 4, !dbg !5958
  %51 = load i32, i32* %num_buffers, align 4, !dbg !5959
  %52 = load i32, i32* %num_planes, align 4, !dbg !5960
  %arraydecay63 = getelementptr inbounds [8 x i32], [8 x i32]* %plane_sizes, i64 0, i64 0, !dbg !5961
  %call64 = call i32 @__vb2_queue_alloc(%struct.vb2_queue* %49, i32 %50, i32 %51, i32 %52, i32* %arraydecay63) #10, !dbg !5962
  store i32 %call64, i32* %allocated_buffers, align 4, !dbg !5963
  %53 = load i32, i32* %allocated_buffers, align 4, !dbg !5964
  %cmp65 = icmp eq i32 %53, 0, !dbg !5966
  br i1 %cmp65, label %if.then66, label %if.end75, !dbg !5967

if.then66:                                        ; preds = %if.end62
  br label %do.body67, !dbg !5968

do.body67:                                        ; preds = %if.then66
  %54 = load i32, i32* @debug, align 4, !dbg !5970
  %cmp68 = icmp sge i32 %54, 1, !dbg !5970
  br i1 %cmp68, label %if.then69, label %if.end73, !dbg !5973

if.then69:                                        ; preds = %do.body67
  %55 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5970
  %name70 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %55, i32 0, i32 31, !dbg !5970
  %arraydecay71 = getelementptr inbounds [32 x i8], [32 x i8]* %name70, i64 0, i64 0, !dbg !5970
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i8* %arraydecay71, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.vb2_core_create_bufs, i64 0, i64 0)) #11, !dbg !5970
  br label %if.end73, !dbg !5970

if.end73:                                         ; preds = %if.then69, %do.body67
  br label %do.end74, !dbg !5973

do.end74:                                         ; preds = %if.end73
  store i32 -12, i32* %retval, align 4, !dbg !5974
  br label %return, !dbg !5974

if.end75:                                         ; preds = %if.end62
  %56 = load i32, i32* %allocated_buffers, align 4, !dbg !5975
  %57 = load i32, i32* %num_buffers, align 4, !dbg !5977
  %cmp76 = icmp ult i32 %56, %57, !dbg !5978
  br i1 %cmp76, label %if.then77, label %if.end96, !dbg !5979

if.then77:                                        ; preds = %if.end75
  %58 = load i32, i32* %allocated_buffers, align 4, !dbg !5980
  store i32 %58, i32* %num_buffers, align 4, !dbg !5982
  %59 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5983
  %ops78 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %59, i32 0, i32 7, !dbg !5983
  %60 = load %struct.vb2_ops*, %struct.vb2_ops** %ops78, align 8, !dbg !5983
  %queue_setup79 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %60, i32 0, i32 0, !dbg !5983
  %61 = load i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)*, i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)** %queue_setup79, align 8, !dbg !5983
  %tobool80 = icmp ne i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)* %61, null, !dbg !5983
  br i1 %tobool80, label %cond.true81, label %cond.false88, !dbg !5983

cond.true81:                                      ; preds = %if.then77
  %62 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5983
  %ops82 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %62, i32 0, i32 7, !dbg !5983
  %63 = load %struct.vb2_ops*, %struct.vb2_ops** %ops82, align 8, !dbg !5983
  %queue_setup83 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %63, i32 0, i32 0, !dbg !5983
  %64 = load i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)*, i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)** %queue_setup83, align 8, !dbg !5983
  %65 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5983
  %arraydecay84 = getelementptr inbounds [8 x i32], [8 x i32]* %plane_sizes, i64 0, i64 0, !dbg !5983
  %66 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5983
  %alloc_devs85 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %66, i32 0, i32 16, !dbg !5983
  %arraydecay86 = getelementptr inbounds [8 x %struct.device*], [8 x %struct.device*]* %alloc_devs85, i64 0, i64 0, !dbg !5983
  %call87 = call i32 %64(%struct.vb2_queue* %65, i32* %num_buffers, i32* %num_planes, i32* %arraydecay84, %struct.device** %arraydecay86) #10, !dbg !5983
  br label %cond.end89, !dbg !5983

cond.false88:                                     ; preds = %if.then77
  br label %cond.end89, !dbg !5983

cond.end89:                                       ; preds = %cond.false88, %cond.true81
  %cond90 = phi i32 [ %call87, %cond.true81 ], [ 0, %cond.false88 ], !dbg !5983
  store i32 %cond90, i32* %ret, align 4, !dbg !5984
  %67 = load i32, i32* %ret, align 4, !dbg !5985
  %tobool91 = icmp ne i32 %67, 0, !dbg !5985
  br i1 %tobool91, label %if.end95, label %land.lhs.true92, !dbg !5987

land.lhs.true92:                                  ; preds = %cond.end89
  %68 = load i32, i32* %allocated_buffers, align 4, !dbg !5988
  %69 = load i32, i32* %num_buffers, align 4, !dbg !5989
  %cmp93 = icmp ult i32 %68, %69, !dbg !5990
  br i1 %cmp93, label %if.then94, label %if.end95, !dbg !5991

if.then94:                                        ; preds = %land.lhs.true92
  store i32 -12, i32* %ret, align 4, !dbg !5992
  br label %if.end95, !dbg !5993

if.end95:                                         ; preds = %if.then94, %land.lhs.true92, %cond.end89
  br label %if.end96, !dbg !5994

if.end96:                                         ; preds = %if.end95, %if.end75
  %70 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5995
  %mmap_lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %70, i32 0, i32 17, !dbg !5996
  call void @mutex_lock(%struct.mutex* %mmap_lock) #10, !dbg !5997
  %71 = load i32, i32* %allocated_buffers, align 4, !dbg !5998
  %72 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !5999
  %num_buffers97 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %72, i32 0, i32 21, !dbg !6000
  %73 = load i32, i32* %num_buffers97, align 8, !dbg !6001
  %add = add i32 %73, %71, !dbg !6001
  store i32 %add, i32* %num_buffers97, align 8, !dbg !6001
  %74 = load i32, i32* %ret, align 4, !dbg !6002
  %cmp98 = icmp slt i32 %74, 0, !dbg !6004
  br i1 %cmp98, label %if.then99, label %if.end102, !dbg !6005

if.then99:                                        ; preds = %if.end96
  %75 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6006
  %76 = load i32, i32* %allocated_buffers, align 4, !dbg !6008
  %call100 = call i32 @__vb2_queue_free(%struct.vb2_queue* %75, i32 %76) #10, !dbg !6009
  %77 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6010
  %mmap_lock101 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %77, i32 0, i32 17, !dbg !6011
  call void @mutex_unlock(%struct.mutex* %mmap_lock101) #10, !dbg !6012
  store i32 -12, i32* %retval, align 4, !dbg !6013
  br label %return, !dbg !6013

if.end102:                                        ; preds = %if.end96
  %78 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6014
  %mmap_lock103 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %78, i32 0, i32 17, !dbg !6015
  call void @mutex_unlock(%struct.mutex* %mmap_lock103) #10, !dbg !6016
  %79 = load i32, i32* %allocated_buffers, align 4, !dbg !6017
  %80 = load i32*, i32** %count.addr, align 8, !dbg !6018
  store i32 %79, i32* %80, align 4, !dbg !6019
  store i32 0, i32* %retval, align 4, !dbg !6020
  br label %return, !dbg !6020

return:                                           ; preds = %if.end102, %if.then99, %do.end74, %if.then61, %do.end38, %do.end17, %do.end
  %81 = load i32, i32* %retval, align 4, !dbg !6021
  ret i32 %81, !dbg !6021
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @vb2_plane_vaddr(%struct.vb2_buffer* %vb, i32 %plane_no) #0 !dbg !6022 {
entry:
  %retval = alloca i8*, align 8
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %plane_no.addr = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !6025, metadata !DIExpression()), !dbg !6026
  store i32 %plane_no, i32* %plane_no.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_no.addr, metadata !6027, metadata !DIExpression()), !dbg !6028
  %0 = load i32, i32* %plane_no.addr, align 4, !dbg !6029
  %1 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6031
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %1, i32 0, i32 4, !dbg !6032
  %2 = load i32, i32* %num_planes, align 4, !dbg !6032
  %cmp = icmp uge i32 %0, %2, !dbg !6033
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6034

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6035
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %3, i32 0, i32 10, !dbg !6036
  %4 = load i32, i32* %plane_no.addr, align 4, !dbg !6037
  %idxprom = zext i32 %4 to i64, !dbg !6035
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !6035
  %mem_priv = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 0, !dbg !6038
  %5 = load i8*, i8** %mem_priv, align 8, !dbg !6038
  %tobool = icmp ne i8* %5, null, !dbg !6035
  br i1 %tobool, label %if.end, label %if.then, !dbg !6039

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !6040
  br label %return, !dbg !6040

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6041
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %6, i32 0, i32 0, !dbg !6041
  %7 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !6041
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %7, i32 0, i32 8, !dbg !6041
  %8 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !6041
  %vaddr = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %8, i32 0, i32 11, !dbg !6041
  %9 = load i8* (i8*)*, i8* (i8*)** %vaddr, align 8, !dbg !6041
  %tobool1 = icmp ne i8* (i8*)* %9, null, !dbg !6041
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !6041

cond.true:                                        ; preds = %if.end
  %10 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6041
  %vb2_queue2 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %10, i32 0, i32 0, !dbg !6041
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue2, align 8, !dbg !6041
  %mem_ops3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 8, !dbg !6041
  %12 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops3, align 8, !dbg !6041
  %vaddr4 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %12, i32 0, i32 11, !dbg !6041
  %13 = load i8* (i8*)*, i8* (i8*)** %vaddr4, align 8, !dbg !6041
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6041
  %planes5 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %14, i32 0, i32 10, !dbg !6041
  %15 = load i32, i32* %plane_no.addr, align 4, !dbg !6041
  %idxprom6 = zext i32 %15 to i64, !dbg !6041
  %arrayidx7 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes5, i64 0, i64 %idxprom6, !dbg !6041
  %mem_priv8 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx7, i32 0, i32 0, !dbg !6041
  %16 = load i8*, i8** %mem_priv8, align 8, !dbg !6041
  %call = call i8* %13(i8* %16) #10, !dbg !6041
  br label %cond.end, !dbg !6041

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !6041

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ null, %cond.false ], !dbg !6041
  store i8* %cond, i8** %retval, align 8, !dbg !6042
  br label %return, !dbg !6042

return:                                           ; preds = %cond.end, %if.then
  %17 = load i8*, i8** %retval, align 8, !dbg !6043
  ret i8* %17, !dbg !6043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @vb2_plane_cookie(%struct.vb2_buffer* %vb, i32 %plane_no) #0 !dbg !6044 {
entry:
  %retval = alloca i8*, align 8
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %plane_no.addr = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !6045, metadata !DIExpression()), !dbg !6046
  store i32 %plane_no, i32* %plane_no.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_no.addr, metadata !6047, metadata !DIExpression()), !dbg !6048
  %0 = load i32, i32* %plane_no.addr, align 4, !dbg !6049
  %1 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6051
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %1, i32 0, i32 4, !dbg !6052
  %2 = load i32, i32* %num_planes, align 4, !dbg !6052
  %cmp = icmp uge i32 %0, %2, !dbg !6053
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6054

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6055
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %3, i32 0, i32 10, !dbg !6056
  %4 = load i32, i32* %plane_no.addr, align 4, !dbg !6057
  %idxprom = zext i32 %4 to i64, !dbg !6055
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !6055
  %mem_priv = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 0, !dbg !6058
  %5 = load i8*, i8** %mem_priv, align 8, !dbg !6058
  %tobool = icmp ne i8* %5, null, !dbg !6055
  br i1 %tobool, label %if.end, label %if.then, !dbg !6059

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !6060
  br label %return, !dbg !6060

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6061
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %6, i32 0, i32 0, !dbg !6061
  %7 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !6061
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %7, i32 0, i32 8, !dbg !6061
  %8 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !6061
  %cookie = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %8, i32 0, i32 12, !dbg !6061
  %9 = load i8* (i8*)*, i8* (i8*)** %cookie, align 8, !dbg !6061
  %tobool1 = icmp ne i8* (i8*)* %9, null, !dbg !6061
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !6061

cond.true:                                        ; preds = %if.end
  %10 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6061
  %vb2_queue2 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %10, i32 0, i32 0, !dbg !6061
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue2, align 8, !dbg !6061
  %mem_ops3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 8, !dbg !6061
  %12 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops3, align 8, !dbg !6061
  %cookie4 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %12, i32 0, i32 12, !dbg !6061
  %13 = load i8* (i8*)*, i8* (i8*)** %cookie4, align 8, !dbg !6061
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6061
  %planes5 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %14, i32 0, i32 10, !dbg !6061
  %15 = load i32, i32* %plane_no.addr, align 4, !dbg !6061
  %idxprom6 = zext i32 %15 to i64, !dbg !6061
  %arrayidx7 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes5, i64 0, i64 %idxprom6, !dbg !6061
  %mem_priv8 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx7, i32 0, i32 0, !dbg !6061
  %16 = load i8*, i8** %mem_priv8, align 8, !dbg !6061
  %call = call i8* %13(i8* %16) #10, !dbg !6061
  br label %cond.end, !dbg !6061

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !6061

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ null, %cond.false ], !dbg !6061
  store i8* %cond, i8** %retval, align 8, !dbg !6062
  br label %return, !dbg !6062

return:                                           ; preds = %cond.end, %if.then
  %17 = load i8*, i8** %retval, align 8, !dbg !6063
  ret i8* %17, !dbg !6063
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vb2_buffer_done(%struct.vb2_buffer* %vb, i32 %state) #0 !dbg !6064 {
entry:
  %lock.addr.i111 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i111, metadata !5194, metadata !DIExpression()), !dbg !6067
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5206, metadata !DIExpression()), !dbg !6069
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !6070, metadata !DIExpression()), !dbg !6074
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6078, metadata !DIExpression()), !dbg !6080
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6082, metadata !DIExpression()), !dbg !6083
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !6084, metadata !DIExpression()), !dbg !6085
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5208, metadata !DIExpression()), !dbg !6086
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %state.addr = alloca i32, align 4
  %q = alloca %struct.vb2_queue*, align 8
  %flags = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on23 = alloca i32, align 4
  %tmp51 = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp76 = alloca i32, align 4
  %__dummy80 = alloca i64, align 8
  %__dummy281 = alloca i64, align 8
  %tmp84 = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !6093, metadata !DIExpression()), !dbg !6094
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !6095, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q, metadata !6097, metadata !DIExpression()), !dbg !6098
  %0 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6099
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %0, i32 0, i32 0, !dbg !6100
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !6100
  store %struct.vb2_queue* %1, %struct.vb2_queue** %q, align 8, !dbg !6098
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6101, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6103, metadata !DIExpression()), !dbg !6106
  %2 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6106
  %state1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %2, i32 0, i32 8, !dbg !6106
  %3 = load i32, i32* %state1, align 8, !dbg !6106
  %cmp = icmp ne i32 %3, 4, !dbg !6106
  %lnot = xor i1 %cmp, true, !dbg !6106
  %lnot2 = xor i1 %lnot, true, !dbg !6106
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6106
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6106
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !6107
  %tobool = icmp ne i32 %4, 0, !dbg !6107
  %lnot3 = xor i1 %tobool, true, !dbg !6107
  %lnot5 = xor i1 %lnot3, true, !dbg !6107
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !6107
  %conv = sext i32 %lnot.ext6 to i64, !dbg !6107
  %tobool7 = icmp ne i64 %conv, 0, !dbg !6107
  br i1 %tobool7, label %if.then, label %if.end, !dbg !6106

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6107

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !6109

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !6111

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !6109

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 997, i32 2305, i64 12) #6, !dbg !6113, !srcloc !6115
  br label %do.end10, !dbg !6113

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 274) #6, !dbg !6116, !srcloc !6118
  br label %do.body11, !dbg !6109

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !6119

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !6109

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !6109

if.end:                                           ; preds = %do.end13, %entry
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !6106
  %tobool14 = icmp ne i32 %5, 0, !dbg !6106
  %lnot15 = xor i1 %tobool14, true, !dbg !6106
  %lnot17 = xor i1 %lnot15, true, !dbg !6106
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !6106
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !6106
  store i64 %conv19, i64* %tmp, align 8, !dbg !6107
  %6 = load i64, i64* %tmp, align 8, !dbg !6106
  %tobool20 = icmp ne i64 %6, 0, !dbg !6121
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !6122

if.then21:                                        ; preds = %if.end
  br label %sw.epilog, !dbg !6123

if.end22:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on23, metadata !6124, metadata !DIExpression()), !dbg !6127
  %7 = load i32, i32* %state.addr, align 4, !dbg !6127
  %cmp24 = icmp ne i32 %7, 5, !dbg !6127
  br i1 %cmp24, label %land.lhs.true, label %land.end, !dbg !6127

land.lhs.true:                                    ; preds = %if.end22
  %8 = load i32, i32* %state.addr, align 4, !dbg !6127
  %cmp26 = icmp ne i32 %8, 6, !dbg !6127
  br i1 %cmp26, label %land.rhs, label %land.end, !dbg !6127

land.rhs:                                         ; preds = %land.lhs.true
  %9 = load i32, i32* %state.addr, align 4, !dbg !6127
  %cmp28 = icmp ne i32 %9, 3, !dbg !6127
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %if.end22
  %10 = phi i1 [ false, %land.lhs.true ], [ false, %if.end22 ], [ %cmp28, %land.rhs ], !dbg !6128
  %lnot30 = xor i1 %10, true, !dbg !6127
  %lnot32 = xor i1 %lnot30, true, !dbg !6127
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !6127
  store i32 %lnot.ext33, i32* %__ret_warn_on23, align 4, !dbg !6127
  %11 = load i32, i32* %__ret_warn_on23, align 4, !dbg !6129
  %tobool34 = icmp ne i32 %11, 0, !dbg !6129
  %lnot35 = xor i1 %tobool34, true, !dbg !6129
  %lnot37 = xor i1 %lnot35, true, !dbg !6129
  %lnot.ext38 = zext i1 %lnot37 to i32, !dbg !6129
  %conv39 = sext i32 %lnot.ext38 to i64, !dbg !6129
  %tobool40 = icmp ne i64 %conv39, 0, !dbg !6129
  br i1 %tobool40, label %if.then41, label %if.end50, !dbg !6127

if.then41:                                        ; preds = %land.end
  br label %do.body42, !dbg !6129

do.body42:                                        ; preds = %if.then41
  br label %do.body43, !dbg !6131

do.body43:                                        ; preds = %do.body42
  br label %do.end44, !dbg !6133

do.end44:                                         ; preds = %do.body43
  br label %do.body45, !dbg !6131

do.body45:                                        ; preds = %do.end44
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 1002, i32 2305, i64 12) #6, !dbg !6135, !srcloc !6137
  br label %do.end46, !dbg !6135

do.end46:                                         ; preds = %do.body45
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 275) #6, !dbg !6138, !srcloc !6140
  br label %do.body47, !dbg !6131

do.body47:                                        ; preds = %do.end46
  br label %do.end48, !dbg !6141

do.end48:                                         ; preds = %do.body47
  br label %do.end49, !dbg !6131

do.end49:                                         ; preds = %do.end48
  br label %if.end50, !dbg !6131

if.end50:                                         ; preds = %do.end49, %land.end
  %12 = load i32, i32* %__ret_warn_on23, align 4, !dbg !6127
  %tobool52 = icmp ne i32 %12, 0, !dbg !6127
  %lnot53 = xor i1 %tobool52, true, !dbg !6127
  %lnot55 = xor i1 %lnot53, true, !dbg !6127
  %lnot.ext56 = zext i1 %lnot55 to i32, !dbg !6127
  %conv57 = sext i32 %lnot.ext56 to i64, !dbg !6127
  store i64 %conv57, i64* %tmp51, align 8, !dbg !6129
  %13 = load i64, i64* %tmp51, align 8, !dbg !6127
  %tobool58 = icmp ne i64 %13, 0, !dbg !6143
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !6144

if.then59:                                        ; preds = %if.end50
  store i32 6, i32* %state.addr, align 4, !dbg !6145
  br label %if.end60, !dbg !6146

if.end60:                                         ; preds = %if.then59, %if.end50
  br label %do.body61, !dbg !6147

do.body61:                                        ; preds = %if.end60
  %14 = load i32, i32* @debug, align 4, !dbg !6148
  %cmp62 = icmp sge i32 %14, 4, !dbg !6148
  br i1 %cmp62, label %if.then64, label %if.end66, !dbg !6151

if.then64:                                        ; preds = %do.body61
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6148
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 31, !dbg !6148
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !6148
  %16 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6148
  %index = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %16, i32 0, i32 1, !dbg !6148
  %17 = load i32, i32* %index, align 8, !dbg !6148
  %18 = load i32, i32* %state.addr, align 4, !dbg !6148
  %call = call i8* @vb2_state_name(i32 %18) #10, !dbg !6148
  %call65 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.13, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.vb2_buffer_done, i64 0, i64 0), i32 %17, i8* %call) #11, !dbg !6148
  br label %if.end66, !dbg !6148

if.end66:                                         ; preds = %if.then64, %do.body61
  br label %do.end67, !dbg !6151

do.end67:                                         ; preds = %if.end66
  %19 = load i32, i32* %state.addr, align 4, !dbg !6152
  %cmp68 = icmp ne i32 %19, 3, !dbg !6154
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !6155

if.then70:                                        ; preds = %do.end67
  %20 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6156
  call void @__vb2_buf_mem_finish(%struct.vb2_buffer* %20) #10, !dbg !6157
  br label %if.end71, !dbg !6157

if.end71:                                         ; preds = %if.then70, %do.end67
  br label %do.body72, !dbg !6158

do.body72:                                        ; preds = %if.end71
  br label %do.body73, !dbg !6159

do.body73:                                        ; preds = %do.body72
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6160, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6163, metadata !DIExpression()), !dbg !6162
  %cmp74 = icmp eq i64* %__dummy, %__dummy2, !dbg !6162
  %conv75 = zext i1 %cmp74 to i32, !dbg !6162
  store i32 1, i32* %tmp76, align 4, !dbg !6162
  %21 = load i32, i32* %tmp76, align 4, !dbg !6162
  br label %do.body77, !dbg !6164

do.body77:                                        ; preds = %do.body73
  br label %do.body78, !dbg !6165

do.body78:                                        ; preds = %do.body77
  br label %do.body79, !dbg !6166

do.body79:                                        ; preds = %do.body78
  call void @llvm.dbg.declare(metadata i64* %__dummy80, metadata !6168, metadata !DIExpression()), !dbg !6171
  call void @llvm.dbg.declare(metadata i64* %__dummy281, metadata !6172, metadata !DIExpression()), !dbg !6171
  %cmp82 = icmp eq i64* %__dummy80, %__dummy281, !dbg !6171
  %conv83 = zext i1 %cmp82 to i32, !dbg !6171
  store i32 1, i32* %tmp84, align 4, !dbg !6171
  %22 = load i32, i32* %tmp84, align 4, !dbg !6171
  %call85 = call i64 @arch_local_irq_save() #10, !dbg !6173
  store i64 %call85, i64* %flags, align 8, !dbg !6173
  br label %do.end86, !dbg !6173

do.end86:                                         ; preds = %do.body79
  br label %do.end87, !dbg !6166

do.end87:                                         ; preds = %do.end86
  br label %do.body88, !dbg !6165

do.body88:                                        ; preds = %do.end87
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6174, !srcloc !6175
  br label %do.body89, !dbg !6174

do.body89:                                        ; preds = %do.body88
  %23 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6176
  %done_lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %23, i32 0, i32 26, !dbg !6176
  store %struct.spinlock* %done_lock, %struct.spinlock** %lock.addr.i, align 8
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6177
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !6178
  %rlock.i = bitcast %union.anon.4* %25 to %struct.raw_spinlock*, !dbg !6178
  br label %do.end91, !dbg !6176

do.end91:                                         ; preds = %do.body89
  br label %do.end92, !dbg !6174

do.end92:                                         ; preds = %do.end91
  br label %do.end93, !dbg !6165

do.end93:                                         ; preds = %do.end92
  br label %do.end94, !dbg !6164

do.end94:                                         ; preds = %do.end93
  br label %do.end95, !dbg !6159

do.end95:                                         ; preds = %do.end94
  %26 = load i32, i32* %state.addr, align 4, !dbg !6179
  %cmp96 = icmp eq i32 %26, 3, !dbg !6181
  br i1 %cmp96, label %if.then98, label %if.else, !dbg !6182

if.then98:                                        ; preds = %do.end95
  %27 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6183
  %state99 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %27, i32 0, i32 8, !dbg !6185
  store i32 3, i32* %state99, align 8, !dbg !6186
  br label %if.end101, !dbg !6187

if.else:                                          ; preds = %do.end95
  %28 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6188
  %done_entry = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %28, i32 0, i32 12, !dbg !6190
  %29 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6191
  %done_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %29, i32 0, i32 25, !dbg !6192
  call void @list_add_tail(%struct.list_head* %done_entry, %struct.list_head* %done_list) #10, !dbg !6193
  %30 = load i32, i32* %state.addr, align 4, !dbg !6194
  %31 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6195
  %state100 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %31, i32 0, i32 8, !dbg !6196
  store i32 %30, i32* %state100, align 8, !dbg !6197
  br label %if.end101

if.end101:                                        ; preds = %if.else, %if.then98
  %32 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6198
  %owned_by_drv_count = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %32, i32 0, i32 24, !dbg !6199
  store %struct.atomic_t* %owned_by_drv_count, %struct.atomic_t** %v.addr.i, align 8
  %33 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6200
  %34 = bitcast %struct.atomic_t* %33 to i8*, !dbg !6200
  store i8* %34, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %35 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6201
  %36 = load i64, i64* %size.addr.i.i, align 8, !dbg !6202
  %conv.i.i = trunc i64 %36 to i32, !dbg !6202
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %35, i32 %conv.i.i) #12, !dbg !6203
  %37 = load i8*, i8** %v.addr.i.i, align 8, !dbg !6204
  %38 = load i64, i64* %size.addr.i.i, align 8, !dbg !6204
  call void @kcsan_check_access(i8* %37, i64 %38, i32 7) #12, !dbg !6204
  %39 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !6205
  store %struct.atomic_t* %39, %struct.atomic_t** %v.addr.i1.i, align 8
  %40 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !6206
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %40, i32 0, i32 0, !dbg !6207
  call void asm sideeffect "decl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !6208, !srcloc !6209
  %41 = load i32, i32* %state.addr, align 4, !dbg !6210
  %cmp102 = icmp ne i32 %41, 3, !dbg !6212
  br i1 %cmp102, label %land.lhs.true104, label %if.end109, !dbg !6213

land.lhs.true104:                                 ; preds = %if.end101
  %42 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6214
  %req_obj = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %42, i32 0, i32 7, !dbg !6215
  %req = getelementptr inbounds %struct.media_request_object, %struct.media_request_object* %req_obj, i32 0, i32 2, !dbg !6216
  %43 = load %struct.media_request*, %struct.media_request** %req, align 8, !dbg !6216
  %tobool105 = icmp ne %struct.media_request* %43, null, !dbg !6214
  br i1 %tobool105, label %if.then106, label %if.end109, !dbg !6217

if.then106:                                       ; preds = %land.lhs.true104
  %44 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6218
  %req_obj107 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %44, i32 0, i32 7, !dbg !6220
  call void @media_request_object_unbind(%struct.media_request_object* %req_obj107) #10, !dbg !6221
  %45 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6222
  %req_obj108 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %45, i32 0, i32 7, !dbg !6223
  call void @media_request_object_put(%struct.media_request_object* %req_obj108) #10, !dbg !6224
  br label %if.end109, !dbg !6225

if.end109:                                        ; preds = %if.then106, %land.lhs.true104, %if.end101
  %46 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6226
  %done_lock110 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %46, i32 0, i32 26, !dbg !6227
  %47 = load i64, i64* %flags, align 8, !dbg !6228
  store %struct.spinlock* %done_lock110, %struct.spinlock** %lock.addr.i111, align 8
  store i64 %47, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !231, metadata !5454, metadata !DIExpression()) #6, !dbg !6229
  call void @llvm.dbg.declare(metadata !231, metadata !5458, metadata !DIExpression()) #6, !dbg !6229
  store i32 1, i32* %tmp.i, align 4, !dbg !6229
  %48 = load i32, i32* %tmp.i, align 4, !dbg !6229
  call void @llvm.dbg.declare(metadata !231, metadata !5459, metadata !DIExpression()) #6, !dbg !6230
  call void @llvm.dbg.declare(metadata !231, metadata !5465, metadata !DIExpression()) #6, !dbg !6230
  store i32 1, i32* %tmp8.i, align 4, !dbg !6230
  %49 = load i32, i32* %tmp8.i, align 4, !dbg !6230
  %50 = load i64, i64* %flags.addr.i, align 8, !dbg !6231
  call void @arch_local_irq_restore(i64 %50) #12, !dbg !6231
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6232, !srcloc !5469
  %51 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i111, align 8, !dbg !6233
  %52 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %51, i32 0, i32 0, !dbg !6233
  %rlock.i112 = bitcast %union.anon.4* %52 to %struct.raw_spinlock*, !dbg !6233
  %53 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6234
  %54 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6235
  call void @trace_vb2_buf_done(%struct.vb2_queue* %53, %struct.vb2_buffer* %54) #10, !dbg !6236
  %55 = load i32, i32* %state.addr, align 4, !dbg !6237
  switch i32 %55, label %sw.default [
    i32 3, label %sw.bb
  ], !dbg !6238

sw.bb:                                            ; preds = %if.end109
  br label %sw.epilog, !dbg !6239

sw.default:                                       ; preds = %if.end109
  %56 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6241
  %done_wq = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %56, i32 0, i32 27, !dbg !6241
  call void @__wake_up(%struct.wait_queue_head* %done_wq, i32 3, i32 1, i8* null) #10, !dbg !6241
  br label %sw.epilog, !dbg !6242

sw.epilog:                                        ; preds = %if.then21, %sw.bb, %sw.default
  ret void, !dbg !6243
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @vb2_state_name(i32 %s) #0 !dbg !4637 {
entry:
  %retval = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  store i32 %s, i32* %s.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !6244, metadata !DIExpression()), !dbg !6245
  %0 = load i32, i32* %s.addr, align 4, !dbg !6246
  %conv = zext i32 %0 to i64, !dbg !6248
  %cmp = icmp ult i64 %conv, 7, !dbg !6249
  br i1 %cmp, label %if.then, label %if.end, !dbg !6250

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %s.addr, align 4, !dbg !6251
  %idxprom = zext i32 %1 to i64, !dbg !6252
  %arrayidx = getelementptr [7 x i8*], [7 x i8*]* @vb2_state_name.state_names, i64 0, i64 %idxprom, !dbg !6252
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !6252
  store i8* %2, i8** %retval, align 8, !dbg !6253
  br label %return, !dbg !6253

if.end:                                           ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.71, i64 0, i64 0), i8** %retval, align 8, !dbg !6254
  br label %return, !dbg !6254

return:                                           ; preds = %if.end, %if.then
  %3 = load i8*, i8** %retval, align 8, !dbg !6255
  ret i8* %3, !dbg !6255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vb2_buf_mem_finish(%struct.vb2_buffer* %vb) #0 !dbg !6256 {
entry:
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %plane = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !6257, metadata !DIExpression()), !dbg !6258
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !6259, metadata !DIExpression()), !dbg !6260
  %0 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6261
  %synced = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %0, i32 0, i32 9, !dbg !6263
  %bf.load = load i8, i8* %synced, align 4, !dbg !6263
  %bf.clear = and i8 %bf.load, 1, !dbg !6263
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6263
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6261
  br i1 %tobool, label %if.end, label %if.then, !dbg !6264

if.then:                                          ; preds = %entry
  br label %return, !dbg !6265

if.end:                                           ; preds = %entry
  %1 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6266
  %need_cache_sync_on_finish = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %1, i32 0, i32 9, !dbg !6268
  %bf.load1 = load i8, i8* %need_cache_sync_on_finish, align 4, !dbg !6268
  %bf.lshr = lshr i8 %bf.load1, 4, !dbg !6268
  %bf.clear2 = and i8 %bf.lshr, 1, !dbg !6268
  %bf.cast3 = zext i8 %bf.clear2 to i32, !dbg !6268
  %tobool4 = icmp ne i32 %bf.cast3, 0, !dbg !6266
  br i1 %tobool4, label %if.then5, label %if.end12, !dbg !6269

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %plane, align 4, !dbg !6270
  br label %for.cond, !dbg !6273

for.cond:                                         ; preds = %for.inc, %if.then5
  %2 = load i32, i32* %plane, align 4, !dbg !6274
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6276
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %3, i32 0, i32 4, !dbg !6277
  %4 = load i32, i32* %num_planes, align 4, !dbg !6277
  %cmp = icmp ult i32 %2, %4, !dbg !6278
  br i1 %cmp, label %for.body, label %for.end, !dbg !6279

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !6280

do.body:                                          ; preds = %for.body
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6281
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 0, !dbg !6281
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !6281
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 8, !dbg !6281
  %7 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !6281
  %finish = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %7, i32 0, i32 6, !dbg !6281
  %8 = load void (i8*)*, void (i8*)** %finish, align 8, !dbg !6281
  %tobool6 = icmp ne void (i8*)* %8, null, !dbg !6281
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !6284

if.then7:                                         ; preds = %do.body
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6281
  %vb2_queue8 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 0, !dbg !6281
  %10 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue8, align 8, !dbg !6281
  %mem_ops9 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %10, i32 0, i32 8, !dbg !6281
  %11 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops9, align 8, !dbg !6281
  %finish10 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %11, i32 0, i32 6, !dbg !6281
  %12 = load void (i8*)*, void (i8*)** %finish10, align 8, !dbg !6281
  %13 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6281
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %13, i32 0, i32 10, !dbg !6281
  %14 = load i32, i32* %plane, align 4, !dbg !6281
  %idxprom = zext i32 %14 to i64, !dbg !6281
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !6281
  %mem_priv = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 0, !dbg !6281
  %15 = load i8*, i8** %mem_priv, align 8, !dbg !6281
  call void %12(i8* %15) #10, !dbg !6281
  br label %if.end11, !dbg !6281

if.end11:                                         ; preds = %if.then7, %do.body
  br label %do.end, !dbg !6284

do.end:                                           ; preds = %if.end11
  br label %for.inc, !dbg !6284

for.inc:                                          ; preds = %do.end
  %16 = load i32, i32* %plane, align 4, !dbg !6285
  %inc = add i32 %16, 1, !dbg !6285
  store i32 %inc, i32* %plane, align 4, !dbg !6285
  br label %for.cond, !dbg !6286, !llvm.loop !6287

for.end:                                          ; preds = %for.cond
  br label %if.end12, !dbg !6289

if.end12:                                         ; preds = %for.end, %if.end
  %17 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6290
  %synced13 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %17, i32 0, i32 9, !dbg !6291
  %bf.load14 = load i8, i8* %synced13, align 4, !dbg !6292
  %bf.clear15 = and i8 %bf.load14, -2, !dbg !6292
  store i8 %bf.clear15, i8* %synced13, align 4, !dbg !6292
  br label %return, !dbg !6293

return:                                           ; preds = %if.end12, %if.then
  ret void, !dbg !6293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !6294 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !6298, metadata !DIExpression()), !dbg !6299
  %call = call i64 @arch_local_save_flags() #10, !dbg !6300
  store i64 %call, i64* %f, align 8, !dbg !6301
  call void @arch_local_irq_disable() #10, !dbg !6302
  %0 = load i64, i64* %f, align 8, !dbg !6303
  ret i64 %0, !dbg !6304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !6305 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6309, metadata !DIExpression()), !dbg !6310
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6313
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6314
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6315
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6315
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6316
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #10, !dbg !6317
  ret void, !dbg !6318
}

; Function Attrs: noredzone
declare dso_local void @media_request_object_unbind(%struct.media_request_object*) #4

; Function Attrs: noredzone
declare dso_local void @media_request_object_put(%struct.media_request_object*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_vb2_buf_done(%struct.vb2_queue* %q, %struct.vb2_buffer* %vb) #0 !dbg !6319 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !6323, metadata !DIExpression()), !dbg !6324
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !6325, metadata !DIExpression()), !dbg !6324
  ret void, !dbg !6324
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vb2_discard_done(%struct.vb2_queue* %q) #0 !dbg !6326 {
entry:
  %lock.addr.i33 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i33, metadata !5194, metadata !DIExpression()), !dbg !6327
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5206, metadata !DIExpression()), !dbg !6329
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5208, metadata !DIExpression()), !dbg !6330
  %q.addr = alloca %struct.vb2_queue*, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp21 = alloca %struct.vb2_buffer*, align 8
  %__mptr25 = alloca i8*, align 8
  %tmp30 = alloca %struct.vb2_buffer*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !6337, metadata !DIExpression()), !dbg !6338
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !6339, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6341, metadata !DIExpression()), !dbg !6342
  br label %do.body, !dbg !6343

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6344

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6345, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6348, metadata !DIExpression()), !dbg !6347
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6347
  %conv = zext i1 %cmp to i32, !dbg !6347
  store i32 1, i32* %tmp, align 4, !dbg !6347
  %0 = load i32, i32* %tmp, align 4, !dbg !6347
  br label %do.body2, !dbg !6349

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6350

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6351

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6353, metadata !DIExpression()), !dbg !6356
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6357, metadata !DIExpression()), !dbg !6356
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6356
  %conv8 = zext i1 %cmp7 to i32, !dbg !6356
  store i32 1, i32* %tmp9, align 4, !dbg !6356
  %1 = load i32, i32* %tmp9, align 4, !dbg !6356
  %call = call i64 @arch_local_irq_save() #10, !dbg !6358
  store i64 %call, i64* %flags, align 8, !dbg !6358
  br label %do.end, !dbg !6358

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6351

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6350

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6359, !srcloc !6360
  br label %do.body12, !dbg !6359

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6361
  %done_lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %2, i32 0, i32 26, !dbg !6361
  store %struct.spinlock* %done_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6362
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !6363
  %rlock.i = bitcast %union.anon.4* %4 to %struct.raw_spinlock*, !dbg !6363
  br label %do.end14, !dbg !6361

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6359

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6350

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6349

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6344

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6364, metadata !DIExpression()), !dbg !6367
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6367
  %done_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %5, i32 0, i32 25, !dbg !6367
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %done_list, i32 0, i32 0, !dbg !6367
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6367
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !6367
  store i8* %7, i8** %__mptr, align 8, !dbg !6367
  br label %do.body19, !dbg !6367

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !6368

do.end20:                                         ; preds = %do.body19
  %8 = load i8*, i8** %__mptr, align 8, !dbg !6367
  %add.ptr = getelementptr i8, i8* %8, i64 -496, !dbg !6367
  %9 = bitcast i8* %add.ptr to %struct.vb2_buffer*, !dbg !6367
  store %struct.vb2_buffer* %9, %struct.vb2_buffer** %tmp21, align 8, !dbg !6368
  %10 = load %struct.vb2_buffer*, %struct.vb2_buffer** %tmp21, align 8, !dbg !6367
  store %struct.vb2_buffer* %10, %struct.vb2_buffer** %vb, align 8, !dbg !6370
  br label %for.cond, !dbg !6370

for.cond:                                         ; preds = %do.end29, %do.end20
  %11 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6371
  %done_entry = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %11, i32 0, i32 12, !dbg !6371
  %12 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6371
  %done_list22 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %12, i32 0, i32 25, !dbg !6371
  %cmp23 = icmp eq %struct.list_head* %done_entry, %done_list22, !dbg !6371
  %lnot = xor i1 %cmp23, true, !dbg !6371
  br i1 %lnot, label %for.body, label %for.end, !dbg !6370

for.body:                                         ; preds = %for.cond
  %13 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6373
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %13, i32 0, i32 8, !dbg !6374
  store i32 6, i32* %state, align 8, !dbg !6375
  br label %for.inc, !dbg !6373

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr25, metadata !6376, metadata !DIExpression()), !dbg !6378
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6378
  %done_entry26 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %14, i32 0, i32 12, !dbg !6378
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %done_entry26, i32 0, i32 0, !dbg !6378
  %15 = load %struct.list_head*, %struct.list_head** %next27, align 8, !dbg !6378
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !6378
  store i8* %16, i8** %__mptr25, align 8, !dbg !6378
  br label %do.body28, !dbg !6378

do.body28:                                        ; preds = %for.inc
  br label %do.end29, !dbg !6379

do.end29:                                         ; preds = %do.body28
  %17 = load i8*, i8** %__mptr25, align 8, !dbg !6378
  %add.ptr31 = getelementptr i8, i8* %17, i64 -496, !dbg !6378
  %18 = bitcast i8* %add.ptr31 to %struct.vb2_buffer*, !dbg !6378
  store %struct.vb2_buffer* %18, %struct.vb2_buffer** %tmp30, align 8, !dbg !6379
  %19 = load %struct.vb2_buffer*, %struct.vb2_buffer** %tmp30, align 8, !dbg !6378
  store %struct.vb2_buffer* %19, %struct.vb2_buffer** %vb, align 8, !dbg !6371
  br label %for.cond, !dbg !6371, !llvm.loop !6381

for.end:                                          ; preds = %for.cond
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6383
  %done_lock32 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %20, i32 0, i32 26, !dbg !6384
  %21 = load i64, i64* %flags, align 8, !dbg !6385
  store %struct.spinlock* %done_lock32, %struct.spinlock** %lock.addr.i33, align 8
  store i64 %21, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !231, metadata !5454, metadata !DIExpression()) #6, !dbg !6386
  call void @llvm.dbg.declare(metadata !231, metadata !5458, metadata !DIExpression()) #6, !dbg !6386
  store i32 1, i32* %tmp.i, align 4, !dbg !6386
  %22 = load i32, i32* %tmp.i, align 4, !dbg !6386
  call void @llvm.dbg.declare(metadata !231, metadata !5459, metadata !DIExpression()) #6, !dbg !6387
  call void @llvm.dbg.declare(metadata !231, metadata !5465, metadata !DIExpression()) #6, !dbg !6387
  store i32 1, i32* %tmp8.i, align 4, !dbg !6387
  %23 = load i32, i32* %tmp8.i, align 4, !dbg !6387
  %24 = load i64, i64* %flags.addr.i, align 8, !dbg !6388
  call void @arch_local_irq_restore(i64 %24) #12, !dbg !6388
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6389, !srcloc !5469
  %25 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i33, align 8, !dbg !6390
  %26 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %25, i32 0, i32 0, !dbg !6390
  %rlock.i34 = bitcast %union.anon.4* %26 to %struct.raw_spinlock*, !dbg !6390
  ret void, !dbg !6391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @vb2_request_object_is_buffer(%struct.media_request_object* %obj) #0 !dbg !6392 {
entry:
  %obj.addr = alloca %struct.media_request_object*, align 8
  store %struct.media_request_object* %obj, %struct.media_request_object** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.media_request_object** %obj.addr, metadata !6395, metadata !DIExpression()), !dbg !6396
  %0 = load %struct.media_request_object*, %struct.media_request_object** %obj.addr, align 8, !dbg !6397
  %ops = getelementptr inbounds %struct.media_request_object, %struct.media_request_object* %0, i32 0, i32 0, !dbg !6398
  %1 = load %struct.media_request_object_ops*, %struct.media_request_object_ops** %ops, align 8, !dbg !6398
  %cmp = icmp eq %struct.media_request_object_ops* %1, @vb2_core_req_ops, !dbg !6399
  ret i1 %cmp, !dbg !6400
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_request_buffer_cnt(%struct.media_request* %req) #0 !dbg !6401 {
entry:
  %lock.addr.i34 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i34, metadata !5194, metadata !DIExpression()), !dbg !6404
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5206, metadata !DIExpression()), !dbg !6406
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5208, metadata !DIExpression()), !dbg !6407
  %req.addr = alloca %struct.media_request*, align 8
  %obj = alloca %struct.media_request_object*, align 8
  %flags = alloca i64, align 8
  %buffer_cnt = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp21 = alloca %struct.media_request_object*, align 8
  %__mptr26 = alloca i8*, align 8
  %tmp31 = alloca %struct.media_request_object*, align 8
  store %struct.media_request* %req, %struct.media_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.media_request** %req.addr, metadata !6414, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.declare(metadata %struct.media_request_object** %obj, metadata !6416, metadata !DIExpression()), !dbg !6417
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6418, metadata !DIExpression()), !dbg !6419
  call void @llvm.dbg.declare(metadata i32* %buffer_cnt, metadata !6420, metadata !DIExpression()), !dbg !6421
  store i32 0, i32* %buffer_cnt, align 4, !dbg !6421
  br label %do.body, !dbg !6422

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6423

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6424, metadata !DIExpression()), !dbg !6426
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6427, metadata !DIExpression()), !dbg !6426
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6426
  %conv = zext i1 %cmp to i32, !dbg !6426
  store i32 1, i32* %tmp, align 4, !dbg !6426
  %0 = load i32, i32* %tmp, align 4, !dbg !6426
  br label %do.body2, !dbg !6428

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6429

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6430

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6432, metadata !DIExpression()), !dbg !6435
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6436, metadata !DIExpression()), !dbg !6435
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6435
  %conv8 = zext i1 %cmp7 to i32, !dbg !6435
  store i32 1, i32* %tmp9, align 4, !dbg !6435
  %1 = load i32, i32* %tmp9, align 4, !dbg !6435
  %call = call i64 @arch_local_irq_save() #10, !dbg !6437
  store i64 %call, i64* %flags, align 8, !dbg !6437
  br label %do.end, !dbg !6437

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6430

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6429

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6438, !srcloc !6439
  br label %do.body12, !dbg !6438

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6440
  %lock = getelementptr inbounds %struct.media_request, %struct.media_request* %2, i32 0, i32 9, !dbg !6440
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6441
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !6442
  %rlock.i = bitcast %union.anon.4* %4 to %struct.raw_spinlock*, !dbg !6442
  br label %do.end14, !dbg !6440

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6438

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6429

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6428

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6423

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6443, metadata !DIExpression()), !dbg !6446
  %5 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6446
  %objects = getelementptr inbounds %struct.media_request, %struct.media_request* %5, i32 0, i32 6, !dbg !6446
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %objects, i32 0, i32 0, !dbg !6446
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6446
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !6446
  store i8* %7, i8** %__mptr, align 8, !dbg !6446
  br label %do.body19, !dbg !6446

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !6447

do.end20:                                         ; preds = %do.body19
  %8 = load i8*, i8** %__mptr, align 8, !dbg !6446
  %add.ptr = getelementptr i8, i8* %8, i64 -24, !dbg !6446
  %9 = bitcast i8* %add.ptr to %struct.media_request_object*, !dbg !6446
  store %struct.media_request_object* %9, %struct.media_request_object** %tmp21, align 8, !dbg !6447
  %10 = load %struct.media_request_object*, %struct.media_request_object** %tmp21, align 8, !dbg !6446
  store %struct.media_request_object* %10, %struct.media_request_object** %obj, align 8, !dbg !6449
  br label %for.cond, !dbg !6449

for.cond:                                         ; preds = %do.end30, %do.end20
  %11 = load %struct.media_request_object*, %struct.media_request_object** %obj, align 8, !dbg !6450
  %list = getelementptr inbounds %struct.media_request_object, %struct.media_request_object* %11, i32 0, i32 3, !dbg !6450
  %12 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6450
  %objects22 = getelementptr inbounds %struct.media_request, %struct.media_request* %12, i32 0, i32 6, !dbg !6450
  %cmp23 = icmp eq %struct.list_head* %list, %objects22, !dbg !6450
  %lnot = xor i1 %cmp23, true, !dbg !6450
  br i1 %lnot, label %for.body, label %for.end, !dbg !6449

for.body:                                         ; preds = %for.cond
  %13 = load %struct.media_request_object*, %struct.media_request_object** %obj, align 8, !dbg !6452
  %call25 = call zeroext i1 @vb2_request_object_is_buffer(%struct.media_request_object* %13) #10, !dbg !6454
  br i1 %call25, label %if.then, label %if.end, !dbg !6455

if.then:                                          ; preds = %for.body
  %14 = load i32, i32* %buffer_cnt, align 4, !dbg !6456
  %inc = add i32 %14, 1, !dbg !6456
  store i32 %inc, i32* %buffer_cnt, align 4, !dbg !6456
  br label %if.end, !dbg !6457

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6458

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr26, metadata !6459, metadata !DIExpression()), !dbg !6461
  %15 = load %struct.media_request_object*, %struct.media_request_object** %obj, align 8, !dbg !6461
  %list27 = getelementptr inbounds %struct.media_request_object, %struct.media_request_object* %15, i32 0, i32 3, !dbg !6461
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %list27, i32 0, i32 0, !dbg !6461
  %16 = load %struct.list_head*, %struct.list_head** %next28, align 8, !dbg !6461
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !6461
  store i8* %17, i8** %__mptr26, align 8, !dbg !6461
  br label %do.body29, !dbg !6461

do.body29:                                        ; preds = %for.inc
  br label %do.end30, !dbg !6462

do.end30:                                         ; preds = %do.body29
  %18 = load i8*, i8** %__mptr26, align 8, !dbg !6461
  %add.ptr32 = getelementptr i8, i8* %18, i64 -24, !dbg !6461
  %19 = bitcast i8* %add.ptr32 to %struct.media_request_object*, !dbg !6461
  store %struct.media_request_object* %19, %struct.media_request_object** %tmp31, align 8, !dbg !6462
  %20 = load %struct.media_request_object*, %struct.media_request_object** %tmp31, align 8, !dbg !6461
  store %struct.media_request_object* %20, %struct.media_request_object** %obj, align 8, !dbg !6450
  br label %for.cond, !dbg !6450, !llvm.loop !6464

for.end:                                          ; preds = %for.cond
  %21 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6466
  %lock33 = getelementptr inbounds %struct.media_request, %struct.media_request* %21, i32 0, i32 9, !dbg !6467
  %22 = load i64, i64* %flags, align 8, !dbg !6468
  store %struct.spinlock* %lock33, %struct.spinlock** %lock.addr.i34, align 8
  store i64 %22, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !231, metadata !5454, metadata !DIExpression()) #6, !dbg !6469
  call void @llvm.dbg.declare(metadata !231, metadata !5458, metadata !DIExpression()) #6, !dbg !6469
  store i32 1, i32* %tmp.i, align 4, !dbg !6469
  %23 = load i32, i32* %tmp.i, align 4, !dbg !6469
  call void @llvm.dbg.declare(metadata !231, metadata !5459, metadata !DIExpression()) #6, !dbg !6470
  call void @llvm.dbg.declare(metadata !231, metadata !5465, metadata !DIExpression()) #6, !dbg !6470
  store i32 1, i32* %tmp8.i, align 4, !dbg !6470
  %24 = load i32, i32* %tmp8.i, align 4, !dbg !6470
  %25 = load i64, i64* %flags.addr.i, align 8, !dbg !6471
  call void @arch_local_irq_restore(i64 %25) #12, !dbg !6471
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6472, !srcloc !5469
  %26 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i34, align 8, !dbg !6473
  %27 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %26, i32 0, i32 0, !dbg !6473
  %rlock.i35 = bitcast %union.anon.4* %27 to %struct.raw_spinlock*, !dbg !6473
  %28 = load i32, i32* %buffer_cnt, align 4, !dbg !6474
  ret i32 %28, !dbg !6475
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_core_prepare_buf(%struct.vb2_queue* %q, i32 %index, i8* %pb) #0 !dbg !6476 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %index.addr = alloca i32, align 4
  %pb.addr = alloca i8*, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %ret = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !6479, metadata !DIExpression()), !dbg !6480
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6481, metadata !DIExpression()), !dbg !6482
  store i8* %pb, i8** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pb.addr, metadata !6483, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !6485, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6487, metadata !DIExpression()), !dbg !6488
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6489
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 20, !dbg !6490
  %1 = load i32, i32* %index.addr, align 4, !dbg !6491
  %idxprom = zext i32 %1 to i64, !dbg !6489
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !6489
  %2 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !6489
  store %struct.vb2_buffer* %2, %struct.vb2_buffer** %vb, align 8, !dbg !6492
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6493
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %3, i32 0, i32 8, !dbg !6495
  %4 = load i32, i32* %state, align 8, !dbg !6495
  %cmp = icmp ne i32 %4, 0, !dbg !6496
  br i1 %cmp, label %if.then, label %if.end5, !dbg !6497

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6498

do.body:                                          ; preds = %if.then
  %5 = load i32, i32* @debug, align 4, !dbg !6500
  %cmp1 = icmp sge i32 %5, 1, !dbg !6500
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !6503

if.then2:                                         ; preds = %do.body
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6500
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 31, !dbg !6500
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !6500
  %7 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6500
  %state3 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %7, i32 0, i32 8, !dbg !6500
  %8 = load i32, i32* %state3, align 8, !dbg !6500
  %call = call i8* @vb2_state_name(i32 %8) #10, !dbg !6500
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.14, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.vb2_core_prepare_buf, i64 0, i64 0), i8* %call) #11, !dbg !6500
  br label %if.end, !dbg !6500

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !6503

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !6504
  br label %return, !dbg !6504

if.end5:                                          ; preds = %entry
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6505
  %prepared = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 9, !dbg !6507
  %bf.load = load i8, i8* %prepared, align 4, !dbg !6507
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !6507
  %bf.clear = and i8 %bf.lshr, 1, !dbg !6507
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6507
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6505
  br i1 %tobool, label %if.then6, label %if.end15, !dbg !6508

if.then6:                                         ; preds = %if.end5
  br label %do.body7, !dbg !6509

do.body7:                                         ; preds = %if.then6
  %10 = load i32, i32* @debug, align 4, !dbg !6511
  %cmp8 = icmp sge i32 %10, 1, !dbg !6511
  br i1 %cmp8, label %if.then9, label %if.end13, !dbg !6514

if.then9:                                         ; preds = %do.body7
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6511
  %name10 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 31, !dbg !6511
  %arraydecay11 = getelementptr inbounds [32 x i8], [32 x i8]* %name10, i64 0, i64 0, !dbg !6511
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i64 0, i64 0), i8* %arraydecay11, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.vb2_core_prepare_buf, i64 0, i64 0)) #11, !dbg !6511
  br label %if.end13, !dbg !6511

if.end13:                                         ; preds = %if.then9, %do.body7
  br label %do.end14, !dbg !6514

do.end14:                                         ; preds = %if.end13
  store i32 -22, i32* %retval, align 4, !dbg !6515
  br label %return, !dbg !6515

if.end15:                                         ; preds = %if.end5
  %12 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6516
  %call16 = call i32 @__buf_prepare(%struct.vb2_buffer* %12) #10, !dbg !6517
  store i32 %call16, i32* %ret, align 4, !dbg !6518
  %13 = load i32, i32* %ret, align 4, !dbg !6519
  %tobool17 = icmp ne i32 %13, 0, !dbg !6519
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !6521

if.then18:                                        ; preds = %if.end15
  %14 = load i32, i32* %ret, align 4, !dbg !6522
  store i32 %14, i32* %retval, align 4, !dbg !6523
  br label %return, !dbg !6523

if.end19:                                         ; preds = %if.end15
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6524
  %tobool20 = icmp ne %struct.vb2_queue* %15, null, !dbg !6524
  br i1 %tobool20, label %land.lhs.true, label %if.end28, !dbg !6524

land.lhs.true:                                    ; preds = %if.end19
  %16 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6524
  %buf_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %16, i32 0, i32 9, !dbg !6524
  %17 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops, align 8, !dbg !6524
  %tobool21 = icmp ne %struct.vb2_buf_ops* %17, null, !dbg !6524
  br i1 %tobool21, label %land.lhs.true22, label %if.end28, !dbg !6524

land.lhs.true22:                                  ; preds = %land.lhs.true
  %18 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6524
  %buf_ops23 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %18, i32 0, i32 9, !dbg !6524
  %19 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops23, align 8, !dbg !6524
  %fill_user_buffer = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %19, i32 0, i32 2, !dbg !6524
  %20 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %fill_user_buffer, align 8, !dbg !6524
  %tobool24 = icmp ne void (%struct.vb2_buffer*, i8*)* %20, null, !dbg !6524
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !6527

if.then25:                                        ; preds = %land.lhs.true22
  %21 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6524
  %buf_ops26 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %21, i32 0, i32 9, !dbg !6524
  %22 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops26, align 8, !dbg !6524
  %fill_user_buffer27 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %22, i32 0, i32 2, !dbg !6524
  %23 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %fill_user_buffer27, align 8, !dbg !6524
  %24 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6524
  %25 = load i8*, i8** %pb.addr, align 8, !dbg !6524
  call void %23(%struct.vb2_buffer* %24, i8* %25) #10, !dbg !6524
  br label %if.end28, !dbg !6524

if.end28:                                         ; preds = %if.then25, %land.lhs.true22, %land.lhs.true, %if.end19
  br label %do.body29, !dbg !6528

do.body29:                                        ; preds = %if.end28
  %26 = load i32, i32* @debug, align 4, !dbg !6529
  %cmp30 = icmp sge i32 %26, 2, !dbg !6529
  br i1 %cmp30, label %if.then31, label %if.end36, !dbg !6532

if.then31:                                        ; preds = %do.body29
  %27 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6529
  %name32 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %27, i32 0, i32 31, !dbg !6529
  %arraydecay33 = getelementptr inbounds [32 x i8], [32 x i8]* %name32, i64 0, i64 0, !dbg !6529
  %28 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6529
  %index34 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %28, i32 0, i32 1, !dbg !6529
  %29 = load i32, i32* %index34, align 8, !dbg !6529
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.16, i64 0, i64 0), i8* %arraydecay33, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.vb2_core_prepare_buf, i64 0, i64 0), i32 %29) #11, !dbg !6529
  br label %if.end36, !dbg !6529

if.end36:                                         ; preds = %if.then31, %do.body29
  br label %do.end37, !dbg !6532

do.end37:                                         ; preds = %if.end36
  store i32 0, i32* %retval, align 4, !dbg !6533
  br label %return, !dbg !6533

return:                                           ; preds = %do.end37, %if.then18, %do.end14, %do.end
  %30 = load i32, i32* %retval, align 4, !dbg !6534
  ret i32 %30, !dbg !6534
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__buf_prepare(%struct.vb2_buffer* %vb) #0 !dbg !6535 {
entry:
  %retval = alloca i32, align 4
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %q = alloca %struct.vb2_queue*, align 8
  %orig_state = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on68 = alloca i32, align 4
  %tmp92 = alloca i64, align 8
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !6536, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q, metadata !6538, metadata !DIExpression()), !dbg !6539
  %0 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6540
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %0, i32 0, i32 0, !dbg !6541
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !6541
  store %struct.vb2_queue* %1, %struct.vb2_queue** %q, align 8, !dbg !6539
  call void @llvm.dbg.declare(metadata i32* %orig_state, metadata !6542, metadata !DIExpression()), !dbg !6543
  %2 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6544
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %2, i32 0, i32 8, !dbg !6545
  %3 = load i32, i32* %state, align 8, !dbg !6545
  store i32 %3, i32* %orig_state, align 4, !dbg !6543
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6546, metadata !DIExpression()), !dbg !6547
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6548
  %error = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 28, !dbg !6550
  %bf.load = load i16, i16* %error, align 8, !dbg !6550
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !6550
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6550
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6550
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6548
  br i1 %tobool, label %if.then, label %if.end2, !dbg !6551

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6552

do.body:                                          ; preds = %if.then
  %5 = load i32, i32* @debug, align 4, !dbg !6554
  %cmp = icmp sge i32 %5, 1, !dbg !6554
  br i1 %cmp, label %if.then1, label %if.end, !dbg !6557

if.then1:                                         ; preds = %do.body
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6554
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 31, !dbg !6554
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !6554
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.17, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.__buf_prepare, i64 0, i64 0)) #11, !dbg !6554
  br label %if.end, !dbg !6554

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !6557

do.end:                                           ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !6558
  br label %return, !dbg !6558

if.end2:                                          ; preds = %entry
  %7 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6559
  %prepared = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %7, i32 0, i32 9, !dbg !6561
  %bf.load3 = load i8, i8* %prepared, align 4, !dbg !6561
  %bf.lshr4 = lshr i8 %bf.load3, 1, !dbg !6561
  %bf.clear5 = and i8 %bf.lshr4, 1, !dbg !6561
  %bf.cast6 = zext i8 %bf.clear5 to i32, !dbg !6561
  %tobool7 = icmp ne i32 %bf.cast6, 0, !dbg !6559
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !6562

if.then8:                                         ; preds = %if.end2
  store i32 0, i32* %retval, align 4, !dbg !6563
  br label %return, !dbg !6563

if.end9:                                          ; preds = %if.end2
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6564, metadata !DIExpression()), !dbg !6566
  %8 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6566
  %synced = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %8, i32 0, i32 9, !dbg !6566
  %bf.load10 = load i8, i8* %synced, align 4, !dbg !6566
  %bf.clear11 = and i8 %bf.load10, 1, !dbg !6566
  %bf.cast12 = zext i8 %bf.clear11 to i32, !dbg !6566
  %tobool13 = icmp ne i32 %bf.cast12, 0, !dbg !6566
  %lnot = xor i1 %tobool13, true, !dbg !6566
  %lnot14 = xor i1 %lnot, true, !dbg !6566
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !6566
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6566
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !6567
  %tobool15 = icmp ne i32 %9, 0, !dbg !6567
  %lnot16 = xor i1 %tobool15, true, !dbg !6567
  %lnot18 = xor i1 %lnot16, true, !dbg !6567
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !6567
  %conv = sext i32 %lnot.ext19 to i64, !dbg !6567
  %tobool20 = icmp ne i64 %conv, 0, !dbg !6567
  br i1 %tobool20, label %if.then21, label %if.end30, !dbg !6566

if.then21:                                        ; preds = %if.end9
  br label %do.body22, !dbg !6567

do.body22:                                        ; preds = %if.then21
  br label %do.body23, !dbg !6569

do.body23:                                        ; preds = %do.body22
  br label %do.end24, !dbg !6571

do.end24:                                         ; preds = %do.body23
  br label %do.body25, !dbg !6569

do.body25:                                        ; preds = %do.end24
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 1350, i32 2305, i64 12) #6, !dbg !6573, !srcloc !6575
  br label %do.end26, !dbg !6573

do.end26:                                         ; preds = %do.body25
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 278) #6, !dbg !6576, !srcloc !6578
  br label %do.body27, !dbg !6569

do.body27:                                        ; preds = %do.end26
  br label %do.end28, !dbg !6579

do.end28:                                         ; preds = %do.body27
  br label %do.end29, !dbg !6569

do.end29:                                         ; preds = %do.end28
  br label %if.end30, !dbg !6569

if.end30:                                         ; preds = %do.end29, %if.end9
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !6566
  %tobool31 = icmp ne i32 %10, 0, !dbg !6566
  %lnot32 = xor i1 %tobool31, true, !dbg !6566
  %lnot34 = xor i1 %lnot32, true, !dbg !6566
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !6566
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !6566
  store i64 %conv36, i64* %tmp, align 8, !dbg !6567
  %11 = load i64, i64* %tmp, align 8, !dbg !6566
  %12 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6581
  %is_output = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %12, i32 0, i32 28, !dbg !6583
  %bf.load37 = load i16, i16* %is_output, align 8, !dbg !6583
  %bf.lshr38 = lshr i16 %bf.load37, 6, !dbg !6583
  %bf.clear39 = and i16 %bf.lshr38, 1, !dbg !6583
  %bf.cast40 = zext i16 %bf.clear39 to i32, !dbg !6583
  %tobool41 = icmp ne i32 %bf.cast40, 0, !dbg !6581
  br i1 %tobool41, label %if.then42, label %if.end61, !dbg !6584

if.then42:                                        ; preds = %if.end30
  %13 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6585
  %vb2_queue43 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %13, i32 0, i32 0, !dbg !6585
  %14 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue43, align 8, !dbg !6585
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %14, i32 0, i32 7, !dbg !6585
  %15 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !6585
  %buf_out_validate = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %15, i32 0, i32 3, !dbg !6585
  %16 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_out_validate, align 8, !dbg !6585
  %tobool44 = icmp ne i32 (%struct.vb2_buffer*)* %16, null, !dbg !6585
  br i1 %tobool44, label %cond.true, label %cond.false, !dbg !6585

cond.true:                                        ; preds = %if.then42
  %17 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6585
  %vb2_queue45 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %17, i32 0, i32 0, !dbg !6585
  %18 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue45, align 8, !dbg !6585
  %ops46 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %18, i32 0, i32 7, !dbg !6585
  %19 = load %struct.vb2_ops*, %struct.vb2_ops** %ops46, align 8, !dbg !6585
  %buf_out_validate47 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %19, i32 0, i32 3, !dbg !6585
  %20 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_out_validate47, align 8, !dbg !6585
  %21 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6585
  %call48 = call i32 %20(%struct.vb2_buffer* %21) #10, !dbg !6585
  br label %cond.end, !dbg !6585

cond.false:                                       ; preds = %if.then42
  br label %cond.end, !dbg !6585

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call48, %cond.true ], [ 0, %cond.false ], !dbg !6585
  store i32 %cond, i32* %ret, align 4, !dbg !6587
  %22 = load i32, i32* %ret, align 4, !dbg !6588
  %tobool49 = icmp ne i32 %22, 0, !dbg !6588
  br i1 %tobool49, label %if.then50, label %if.end60, !dbg !6590

if.then50:                                        ; preds = %cond.end
  br label %do.body51, !dbg !6591

do.body51:                                        ; preds = %if.then50
  %23 = load i32, i32* @debug, align 4, !dbg !6593
  %cmp52 = icmp sge i32 %23, 1, !dbg !6593
  br i1 %cmp52, label %if.then54, label %if.end58, !dbg !6596

if.then54:                                        ; preds = %do.body51
  %24 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6593
  %name55 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %24, i32 0, i32 31, !dbg !6593
  %arraydecay56 = getelementptr inbounds [32 x i8], [32 x i8]* %name55, i64 0, i64 0, !dbg !6593
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.21, i64 0, i64 0), i8* %arraydecay56, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.__buf_prepare, i64 0, i64 0)) #11, !dbg !6593
  br label %if.end58, !dbg !6593

if.end58:                                         ; preds = %if.then54, %do.body51
  br label %do.end59, !dbg !6596

do.end59:                                         ; preds = %if.end58
  %25 = load i32, i32* %ret, align 4, !dbg !6597
  store i32 %25, i32* %retval, align 4, !dbg !6598
  br label %return, !dbg !6598

if.end60:                                         ; preds = %cond.end
  br label %if.end61, !dbg !6599

if.end61:                                         ; preds = %if.end60, %if.end30
  %26 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6600
  %state62 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %26, i32 0, i32 8, !dbg !6601
  store i32 2, i32* %state62, align 8, !dbg !6602
  %27 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6603
  %memory = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %27, i32 0, i32 18, !dbg !6604
  %28 = load i32, i32* %memory, align 8, !dbg !6604
  switch i32 %28, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb64
    i32 4, label %sw.bb66
  ], !dbg !6605

sw.bb:                                            ; preds = %if.end61
  %29 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6606
  %call63 = call i32 @__prepare_mmap(%struct.vb2_buffer* %29) #10, !dbg !6608
  store i32 %call63, i32* %ret, align 4, !dbg !6609
  br label %sw.epilog, !dbg !6610

sw.bb64:                                          ; preds = %if.end61
  %30 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6611
  %call65 = call i32 @__prepare_userptr(%struct.vb2_buffer* %30) #10, !dbg !6612
  store i32 %call65, i32* %ret, align 4, !dbg !6613
  br label %sw.epilog, !dbg !6614

sw.bb66:                                          ; preds = %if.end61
  %31 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6615
  %call67 = call i32 @__prepare_dmabuf(%struct.vb2_buffer* %31) #10, !dbg !6616
  store i32 %call67, i32* %ret, align 4, !dbg !6617
  br label %sw.epilog, !dbg !6618

sw.default:                                       ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on68, metadata !6619, metadata !DIExpression()), !dbg !6621
  store i32 1, i32* %__ret_warn_on68, align 4, !dbg !6621
  %32 = load i32, i32* %__ret_warn_on68, align 4, !dbg !6622
  %tobool69 = icmp ne i32 %32, 0, !dbg !6622
  %lnot70 = xor i1 %tobool69, true, !dbg !6622
  %lnot72 = xor i1 %lnot70, true, !dbg !6622
  %lnot.ext73 = zext i1 %lnot72 to i32, !dbg !6622
  %conv74 = sext i32 %lnot.ext73 to i64, !dbg !6622
  %tobool75 = icmp ne i64 %conv74, 0, !dbg !6622
  br i1 %tobool75, label %if.then76, label %if.end91, !dbg !6621

if.then76:                                        ; preds = %sw.default
  br label %do.body77, !dbg !6622

do.body77:                                        ; preds = %if.then76
  br label %do.body78, !dbg !6624

do.body78:                                        ; preds = %do.body77
  br label %do.end79, !dbg !6626

do.end79:                                         ; preds = %do.body78
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72, i64 0, i64 0)) #10, !dbg !6624
  br label %do.body80, !dbg !6624

do.body80:                                        ; preds = %do.end79
  br label %do.body81, !dbg !6628

do.body81:                                        ; preds = %do.body80
  br label %do.end82, !dbg !6630

do.end82:                                         ; preds = %do.body81
  br label %do.body83, !dbg !6628

do.body83:                                        ; preds = %do.end82
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 1373, i32 2313, i64 12) #6, !dbg !6632, !srcloc !6634
  br label %do.end84, !dbg !6632

do.end84:                                         ; preds = %do.body83
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 279) #6, !dbg !6635, !srcloc !6637
  br label %do.body85, !dbg !6628

do.body85:                                        ; preds = %do.end84
  br label %do.end86, !dbg !6638

do.end86:                                         ; preds = %do.body85
  br label %do.end87, !dbg !6628

do.end87:                                         ; preds = %do.end86
  br label %do.body88, !dbg !6624

do.body88:                                        ; preds = %do.end87
  br label %do.end89, !dbg !6640

do.end89:                                         ; preds = %do.body88
  br label %do.end90, !dbg !6624

do.end90:                                         ; preds = %do.end89
  br label %if.end91, !dbg !6624

if.end91:                                         ; preds = %do.end90, %sw.default
  %33 = load i32, i32* %__ret_warn_on68, align 4, !dbg !6621
  %tobool93 = icmp ne i32 %33, 0, !dbg !6621
  %lnot94 = xor i1 %tobool93, true, !dbg !6621
  %lnot96 = xor i1 %lnot94, true, !dbg !6621
  %lnot.ext97 = zext i1 %lnot96 to i32, !dbg !6621
  %conv98 = sext i32 %lnot.ext97 to i64, !dbg !6621
  store i64 %conv98, i64* %tmp92, align 8, !dbg !6622
  %34 = load i64, i64* %tmp92, align 8, !dbg !6621
  store i32 -22, i32* %ret, align 4, !dbg !6642
  br label %sw.epilog, !dbg !6643

sw.epilog:                                        ; preds = %if.end91, %sw.bb66, %sw.bb64, %sw.bb
  %35 = load i32, i32* %ret, align 4, !dbg !6644
  %tobool99 = icmp ne i32 %35, 0, !dbg !6644
  br i1 %tobool99, label %if.then100, label %if.end111, !dbg !6646

if.then100:                                       ; preds = %sw.epilog
  br label %do.body101, !dbg !6647

do.body101:                                       ; preds = %if.then100
  %36 = load i32, i32* @debug, align 4, !dbg !6649
  %cmp102 = icmp sge i32 %36, 1, !dbg !6649
  br i1 %cmp102, label %if.then104, label %if.end108, !dbg !6652

if.then104:                                       ; preds = %do.body101
  %37 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !6649
  %name105 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %37, i32 0, i32 31, !dbg !6649
  %arraydecay106 = getelementptr inbounds [32 x i8], [32 x i8]* %name105, i64 0, i64 0, !dbg !6649
  %38 = load i32, i32* %ret, align 4, !dbg !6649
  %call107 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.73, i64 0, i64 0), i8* %arraydecay106, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.__buf_prepare, i64 0, i64 0), i32 %38) #11, !dbg !6649
  br label %if.end108, !dbg !6649

if.end108:                                        ; preds = %if.then104, %do.body101
  br label %do.end109, !dbg !6652

do.end109:                                        ; preds = %if.end108
  %39 = load i32, i32* %orig_state, align 4, !dbg !6653
  %40 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6654
  %state110 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %40, i32 0, i32 8, !dbg !6655
  store i32 %39, i32* %state110, align 8, !dbg !6656
  %41 = load i32, i32* %ret, align 4, !dbg !6657
  store i32 %41, i32* %retval, align 4, !dbg !6658
  br label %return, !dbg !6658

if.end111:                                        ; preds = %sw.epilog
  %42 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6659
  call void @__vb2_buf_mem_prepare(%struct.vb2_buffer* %42) #10, !dbg !6660
  %43 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6661
  %prepared112 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %43, i32 0, i32 9, !dbg !6662
  %bf.load113 = load i8, i8* %prepared112, align 4, !dbg !6663
  %bf.clear114 = and i8 %bf.load113, -3, !dbg !6663
  %bf.set = or i8 %bf.clear114, 2, !dbg !6663
  store i8 %bf.set, i8* %prepared112, align 4, !dbg !6663
  %44 = load i32, i32* %orig_state, align 4, !dbg !6664
  %45 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !6665
  %state115 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %45, i32 0, i32 8, !dbg !6666
  store i32 %44, i32* %state115, align 8, !dbg !6667
  store i32 0, i32* %retval, align 4, !dbg !6668
  br label %return, !dbg !6668

return:                                           ; preds = %if.end111, %do.end109, %do.end59, %if.then8, %do.end
  %46 = load i32, i32* %retval, align 4, !dbg !6669
  ret i32 %46, !dbg !6669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_core_qbuf(%struct.vb2_queue* %q, i32 %index, i8* %pb, %struct.media_request* %req) #0 !dbg !6670 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %index.addr = alloca i32, align 4
  %pb.addr = alloca i8*, align 8
  %req.addr = alloca %struct.media_request*, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %ret = alloca i32, align 4
  %ret50 = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !6673, metadata !DIExpression()), !dbg !6674
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6675, metadata !DIExpression()), !dbg !6676
  store i8* %pb, i8** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pb.addr, metadata !6677, metadata !DIExpression()), !dbg !6678
  store %struct.media_request* %req, %struct.media_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.media_request** %req.addr, metadata !6679, metadata !DIExpression()), !dbg !6680
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !6681, metadata !DIExpression()), !dbg !6682
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6683, metadata !DIExpression()), !dbg !6684
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6685
  %error = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 28, !dbg !6687
  %bf.load = load i16, i16* %error, align 8, !dbg !6687
  %bf.lshr = lshr i16 %bf.load, 2, !dbg !6687
  %bf.clear = and i16 %bf.lshr, 1, !dbg !6687
  %bf.cast = zext i16 %bf.clear to i32, !dbg !6687
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6685
  br i1 %tobool, label %if.then, label %if.end2, !dbg !6688

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !6689

do.body:                                          ; preds = %if.then
  %1 = load i32, i32* @debug, align 4, !dbg !6691
  %cmp = icmp sge i32 %1, 1, !dbg !6691
  br i1 %cmp, label %if.then1, label %if.end, !dbg !6694

if.then1:                                         ; preds = %do.body
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6691
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %2, i32 0, i32 31, !dbg !6691
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !6691
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.17, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.vb2_core_qbuf, i64 0, i64 0)) #11, !dbg !6691
  br label %if.end, !dbg !6691

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !6694

do.end:                                           ; preds = %if.end
  store i32 -5, i32* %retval, align 4, !dbg !6695
  br label %return, !dbg !6695

if.end2:                                          ; preds = %entry
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6696
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %3, i32 0, i32 20, !dbg !6697
  %4 = load i32, i32* %index.addr, align 4, !dbg !6698
  %idxprom = zext i32 %4 to i64, !dbg !6696
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !6696
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !6696
  store %struct.vb2_buffer* %5, %struct.vb2_buffer** %vb, align 8, !dbg !6699
  %6 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6700
  %tobool3 = icmp ne %struct.media_request* %6, null, !dbg !6700
  br i1 %tobool3, label %if.end20, label %land.lhs.true, !dbg !6702

land.lhs.true:                                    ; preds = %if.end2
  %7 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6703
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %7, i32 0, i32 8, !dbg !6704
  %8 = load i32, i32* %state, align 8, !dbg !6704
  %cmp4 = icmp ne i32 %8, 1, !dbg !6705
  br i1 %cmp4, label %land.lhs.true5, label %if.end20, !dbg !6706

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6707
  %requires_requests = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %9, i32 0, i32 4, !dbg !6708
  %bf.load6 = load i16, i16* %requires_requests, align 8, !dbg !6708
  %bf.lshr7 = lshr i16 %bf.load6, 6, !dbg !6708
  %bf.clear8 = and i16 %bf.lshr7, 1, !dbg !6708
  %bf.cast9 = zext i16 %bf.clear8 to i32, !dbg !6708
  %tobool10 = icmp ne i32 %bf.cast9, 0, !dbg !6707
  br i1 %tobool10, label %if.then11, label %if.end20, !dbg !6709

if.then11:                                        ; preds = %land.lhs.true5
  br label %do.body12, !dbg !6710

do.body12:                                        ; preds = %if.then11
  %10 = load i32, i32* @debug, align 4, !dbg !6712
  %cmp13 = icmp sge i32 %10, 1, !dbg !6712
  br i1 %cmp13, label %if.then14, label %if.end18, !dbg !6715

if.then14:                                        ; preds = %do.body12
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6712
  %name15 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 31, !dbg !6712
  %arraydecay16 = getelementptr inbounds [32 x i8], [32 x i8]* %name15, i64 0, i64 0, !dbg !6712
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0), i8* %arraydecay16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.vb2_core_qbuf, i64 0, i64 0)) #11, !dbg !6712
  br label %if.end18, !dbg !6712

if.end18:                                         ; preds = %if.then14, %do.body12
  br label %do.end19, !dbg !6715

do.end19:                                         ; preds = %if.end18
  store i32 -53, i32* %retval, align 4, !dbg !6716
  br label %return, !dbg !6716

if.end20:                                         ; preds = %land.lhs.true5, %land.lhs.true, %if.end2
  %12 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6717
  %tobool21 = icmp ne %struct.media_request* %12, null, !dbg !6717
  br i1 %tobool21, label %land.lhs.true22, label %lor.lhs.false, !dbg !6719

land.lhs.true22:                                  ; preds = %if.end20
  %13 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6720
  %uses_qbuf = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %13, i32 0, i32 4, !dbg !6721
  %bf.load23 = load i16, i16* %uses_qbuf, align 8, !dbg !6721
  %bf.lshr24 = lshr i16 %bf.load23, 7, !dbg !6721
  %bf.clear25 = and i16 %bf.lshr24, 1, !dbg !6721
  %bf.cast26 = zext i16 %bf.clear25 to i32, !dbg !6721
  %tobool27 = icmp ne i32 %bf.cast26, 0, !dbg !6720
  br i1 %tobool27, label %if.then38, label %lor.lhs.false, !dbg !6722

lor.lhs.false:                                    ; preds = %land.lhs.true22, %if.end20
  %14 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6723
  %tobool28 = icmp ne %struct.media_request* %14, null, !dbg !6723
  br i1 %tobool28, label %if.end47, label %land.lhs.true29, !dbg !6724

land.lhs.true29:                                  ; preds = %lor.lhs.false
  %15 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6725
  %state30 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %15, i32 0, i32 8, !dbg !6726
  %16 = load i32, i32* %state30, align 8, !dbg !6726
  %cmp31 = icmp ne i32 %16, 1, !dbg !6727
  br i1 %cmp31, label %land.lhs.true32, label %if.end47, !dbg !6728

land.lhs.true32:                                  ; preds = %land.lhs.true29
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6729
  %uses_requests = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %17, i32 0, i32 4, !dbg !6730
  %bf.load33 = load i16, i16* %uses_requests, align 8, !dbg !6730
  %bf.lshr34 = lshr i16 %bf.load33, 8, !dbg !6730
  %bf.clear35 = and i16 %bf.lshr34, 1, !dbg !6730
  %bf.cast36 = zext i16 %bf.clear35 to i32, !dbg !6730
  %tobool37 = icmp ne i32 %bf.cast36, 0, !dbg !6729
  br i1 %tobool37, label %if.then38, label %if.end47, !dbg !6731

if.then38:                                        ; preds = %land.lhs.true32, %land.lhs.true22
  br label %do.body39, !dbg !6732

do.body39:                                        ; preds = %if.then38
  %18 = load i32, i32* @debug, align 4, !dbg !6734
  %cmp40 = icmp sge i32 %18, 1, !dbg !6734
  br i1 %cmp40, label %if.then41, label %if.end45, !dbg !6737

if.then41:                                        ; preds = %do.body39
  %19 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6734
  %name42 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %19, i32 0, i32 31, !dbg !6734
  %arraydecay43 = getelementptr inbounds [32 x i8], [32 x i8]* %name42, i64 0, i64 0, !dbg !6734
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.19, i64 0, i64 0), i8* %arraydecay43, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.vb2_core_qbuf, i64 0, i64 0)) #11, !dbg !6734
  br label %if.end45, !dbg !6734

if.end45:                                         ; preds = %if.then41, %do.body39
  br label %do.end46, !dbg !6737

do.end46:                                         ; preds = %if.end45
  store i32 -16, i32* %retval, align 4, !dbg !6738
  br label %return, !dbg !6738

if.end47:                                         ; preds = %land.lhs.true32, %land.lhs.true29, %lor.lhs.false
  %20 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6739
  %tobool48 = icmp ne %struct.media_request* %20, null, !dbg !6739
  br i1 %tobool48, label %if.then49, label %if.end139, !dbg !6741

if.then49:                                        ; preds = %if.end47
  call void @llvm.dbg.declare(metadata i32* %ret50, metadata !6742, metadata !DIExpression()), !dbg !6744
  %21 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6745
  %uses_requests51 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %21, i32 0, i32 4, !dbg !6746
  %bf.load52 = load i16, i16* %uses_requests51, align 8, !dbg !6747
  %bf.clear53 = and i16 %bf.load52, -257, !dbg !6747
  %bf.set = or i16 %bf.clear53, 256, !dbg !6747
  store i16 %bf.set, i16* %uses_requests51, align 8, !dbg !6747
  %22 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6748
  %state54 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %22, i32 0, i32 8, !dbg !6750
  %23 = load i32, i32* %state54, align 8, !dbg !6750
  %cmp55 = icmp ne i32 %23, 0, !dbg !6751
  br i1 %cmp55, label %if.then56, label %if.end66, !dbg !6752

if.then56:                                        ; preds = %if.then49
  br label %do.body57, !dbg !6753

do.body57:                                        ; preds = %if.then56
  %24 = load i32, i32* @debug, align 4, !dbg !6755
  %cmp58 = icmp sge i32 %24, 1, !dbg !6755
  br i1 %cmp58, label %if.then59, label %if.end64, !dbg !6758

if.then59:                                        ; preds = %do.body57
  %25 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6755
  %name60 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %25, i32 0, i32 31, !dbg !6755
  %arraydecay61 = getelementptr inbounds [32 x i8], [32 x i8]* %name60, i64 0, i64 0, !dbg !6755
  %26 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6755
  %index62 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %26, i32 0, i32 1, !dbg !6755
  %27 = load i32, i32* %index62, align 8, !dbg !6755
  %call63 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay61, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.vb2_core_qbuf, i64 0, i64 0), i32 %27) #11, !dbg !6755
  br label %if.end64, !dbg !6755

if.end64:                                         ; preds = %if.then59, %do.body57
  br label %do.end65, !dbg !6758

do.end65:                                         ; preds = %if.end64
  store i32 -22, i32* %retval, align 4, !dbg !6759
  br label %return, !dbg !6759

if.end66:                                         ; preds = %if.then49
  %28 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6760
  %is_output = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %28, i32 0, i32 28, !dbg !6762
  %bf.load67 = load i16, i16* %is_output, align 8, !dbg !6762
  %bf.lshr68 = lshr i16 %bf.load67, 6, !dbg !6762
  %bf.clear69 = and i16 %bf.lshr68, 1, !dbg !6762
  %bf.cast70 = zext i16 %bf.clear69 to i32, !dbg !6762
  %tobool71 = icmp ne i32 %bf.cast70, 0, !dbg !6760
  br i1 %tobool71, label %land.lhs.true72, label %if.end95, !dbg !6763

land.lhs.true72:                                  ; preds = %if.end66
  %29 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6764
  %prepared = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %29, i32 0, i32 9, !dbg !6765
  %bf.load73 = load i8, i8* %prepared, align 4, !dbg !6765
  %bf.lshr74 = lshr i8 %bf.load73, 1, !dbg !6765
  %bf.clear75 = and i8 %bf.lshr74, 1, !dbg !6765
  %bf.cast76 = zext i8 %bf.clear75 to i32, !dbg !6765
  %tobool77 = icmp ne i32 %bf.cast76, 0, !dbg !6764
  br i1 %tobool77, label %if.end95, label %if.then78, !dbg !6766

if.then78:                                        ; preds = %land.lhs.true72
  %30 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6767
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %30, i32 0, i32 0, !dbg !6767
  %31 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !6767
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %31, i32 0, i32 7, !dbg !6767
  %32 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !6767
  %buf_out_validate = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %32, i32 0, i32 3, !dbg !6767
  %33 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_out_validate, align 8, !dbg !6767
  %tobool79 = icmp ne i32 (%struct.vb2_buffer*)* %33, null, !dbg !6767
  br i1 %tobool79, label %cond.true, label %cond.false, !dbg !6767

cond.true:                                        ; preds = %if.then78
  %34 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6767
  %vb2_queue80 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %34, i32 0, i32 0, !dbg !6767
  %35 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue80, align 8, !dbg !6767
  %ops81 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %35, i32 0, i32 7, !dbg !6767
  %36 = load %struct.vb2_ops*, %struct.vb2_ops** %ops81, align 8, !dbg !6767
  %buf_out_validate82 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %36, i32 0, i32 3, !dbg !6767
  %37 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_out_validate82, align 8, !dbg !6767
  %38 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6767
  %call83 = call i32 %37(%struct.vb2_buffer* %38) #10, !dbg !6767
  br label %cond.end, !dbg !6767

cond.false:                                       ; preds = %if.then78
  br label %cond.end, !dbg !6767

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call83, %cond.true ], [ 0, %cond.false ], !dbg !6767
  store i32 %cond, i32* %ret50, align 4, !dbg !6769
  %39 = load i32, i32* %ret50, align 4, !dbg !6770
  %tobool84 = icmp ne i32 %39, 0, !dbg !6770
  br i1 %tobool84, label %if.then85, label %if.end94, !dbg !6772

if.then85:                                        ; preds = %cond.end
  br label %do.body86, !dbg !6773

do.body86:                                        ; preds = %if.then85
  %40 = load i32, i32* @debug, align 4, !dbg !6775
  %cmp87 = icmp sge i32 %40, 1, !dbg !6775
  br i1 %cmp87, label %if.then88, label %if.end92, !dbg !6778

if.then88:                                        ; preds = %do.body86
  %41 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6775
  %name89 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %41, i32 0, i32 31, !dbg !6775
  %arraydecay90 = getelementptr inbounds [32 x i8], [32 x i8]* %name89, i64 0, i64 0, !dbg !6775
  %call91 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.21, i64 0, i64 0), i8* %arraydecay90, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.vb2_core_qbuf, i64 0, i64 0)) #11, !dbg !6775
  br label %if.end92, !dbg !6775

if.end92:                                         ; preds = %if.then88, %do.body86
  br label %do.end93, !dbg !6778

do.end93:                                         ; preds = %if.end92
  %42 = load i32, i32* %ret50, align 4, !dbg !6779
  store i32 %42, i32* %retval, align 4, !dbg !6780
  br label %return, !dbg !6780

if.end94:                                         ; preds = %cond.end
  br label %if.end95, !dbg !6781

if.end95:                                         ; preds = %if.end94, %land.lhs.true72, %if.end66
  %43 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6782
  %req_obj = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %43, i32 0, i32 7, !dbg !6783
  call void @media_request_object_init(%struct.media_request_object* %req_obj) #10, !dbg !6784
  %44 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6785
  %call96 = call i32 @media_request_lock_for_update(%struct.media_request* %44) #10, !dbg !6786
  store i32 %call96, i32* %ret50, align 4, !dbg !6787
  %45 = load i32, i32* %ret50, align 4, !dbg !6788
  %tobool97 = icmp ne i32 %45, 0, !dbg !6788
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !6790

if.then98:                                        ; preds = %if.end95
  %46 = load i32, i32* %ret50, align 4, !dbg !6791
  store i32 %46, i32* %retval, align 4, !dbg !6792
  br label %return, !dbg !6792

if.end99:                                         ; preds = %if.end95
  %47 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6793
  %48 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6794
  %49 = bitcast %struct.vb2_queue* %48 to i8*, !dbg !6794
  %50 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6795
  %req_obj100 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %50, i32 0, i32 7, !dbg !6796
  %call101 = call i32 @media_request_object_bind(%struct.media_request* %47, %struct.media_request_object_ops* @vb2_core_req_ops, i8* %49, i1 zeroext true, %struct.media_request_object* %req_obj100) #10, !dbg !6797
  store i32 %call101, i32* %ret50, align 4, !dbg !6798
  %51 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6799
  call void @media_request_unlock_for_update(%struct.media_request* %51) #10, !dbg !6800
  %52 = load i32, i32* %ret50, align 4, !dbg !6801
  %tobool102 = icmp ne i32 %52, 0, !dbg !6801
  br i1 %tobool102, label %if.then103, label %if.end104, !dbg !6803

if.then103:                                       ; preds = %if.end99
  %53 = load i32, i32* %ret50, align 4, !dbg !6804
  store i32 %53, i32* %retval, align 4, !dbg !6805
  br label %return, !dbg !6805

if.end104:                                        ; preds = %if.end99
  %54 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6806
  %state105 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %54, i32 0, i32 8, !dbg !6807
  store i32 1, i32* %state105, align 8, !dbg !6808
  %55 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6809
  call void @media_request_get(%struct.media_request* %55) #10, !dbg !6810
  %56 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6811
  %57 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6812
  %request = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %57, i32 0, i32 6, !dbg !6813
  store %struct.media_request* %56, %struct.media_request** %request, align 8, !dbg !6814
  %58 = load i8*, i8** %pb.addr, align 8, !dbg !6815
  %tobool106 = icmp ne i8* %58, null, !dbg !6815
  br i1 %tobool106, label %if.then107, label %if.end129, !dbg !6817

if.then107:                                       ; preds = %if.end104
  %59 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6818
  %tobool108 = icmp ne %struct.vb2_queue* %59, null, !dbg !6818
  br i1 %tobool108, label %land.lhs.true109, label %if.end117, !dbg !6818

land.lhs.true109:                                 ; preds = %if.then107
  %60 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6818
  %buf_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %60, i32 0, i32 9, !dbg !6818
  %61 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops, align 8, !dbg !6818
  %tobool110 = icmp ne %struct.vb2_buf_ops* %61, null, !dbg !6818
  br i1 %tobool110, label %land.lhs.true111, label %if.end117, !dbg !6818

land.lhs.true111:                                 ; preds = %land.lhs.true109
  %62 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6818
  %buf_ops112 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %62, i32 0, i32 9, !dbg !6818
  %63 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops112, align 8, !dbg !6818
  %copy_timestamp = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %63, i32 0, i32 4, !dbg !6818
  %64 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %copy_timestamp, align 8, !dbg !6818
  %tobool113 = icmp ne void (%struct.vb2_buffer*, i8*)* %64, null, !dbg !6818
  br i1 %tobool113, label %if.then114, label %if.end117, !dbg !6822

if.then114:                                       ; preds = %land.lhs.true111
  %65 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6818
  %buf_ops115 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %65, i32 0, i32 9, !dbg !6818
  %66 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops115, align 8, !dbg !6818
  %copy_timestamp116 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %66, i32 0, i32 4, !dbg !6818
  %67 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %copy_timestamp116, align 8, !dbg !6818
  %68 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6818
  %69 = load i8*, i8** %pb.addr, align 8, !dbg !6818
  call void %67(%struct.vb2_buffer* %68, i8* %69) #10, !dbg !6818
  br label %if.end117, !dbg !6818

if.end117:                                        ; preds = %if.then114, %land.lhs.true111, %land.lhs.true109, %if.then107
  %70 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6823
  %tobool118 = icmp ne %struct.vb2_queue* %70, null, !dbg !6823
  br i1 %tobool118, label %land.lhs.true119, label %if.end128, !dbg !6823

land.lhs.true119:                                 ; preds = %if.end117
  %71 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6823
  %buf_ops120 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %71, i32 0, i32 9, !dbg !6823
  %72 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops120, align 8, !dbg !6823
  %tobool121 = icmp ne %struct.vb2_buf_ops* %72, null, !dbg !6823
  br i1 %tobool121, label %land.lhs.true122, label %if.end128, !dbg !6823

land.lhs.true122:                                 ; preds = %land.lhs.true119
  %73 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6823
  %buf_ops123 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %73, i32 0, i32 9, !dbg !6823
  %74 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops123, align 8, !dbg !6823
  %fill_user_buffer = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %74, i32 0, i32 2, !dbg !6823
  %75 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %fill_user_buffer, align 8, !dbg !6823
  %tobool124 = icmp ne void (%struct.vb2_buffer*, i8*)* %75, null, !dbg !6823
  br i1 %tobool124, label %if.then125, label %if.end128, !dbg !6826

if.then125:                                       ; preds = %land.lhs.true122
  %76 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6823
  %buf_ops126 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %76, i32 0, i32 9, !dbg !6823
  %77 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops126, align 8, !dbg !6823
  %fill_user_buffer127 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %77, i32 0, i32 2, !dbg !6823
  %78 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %fill_user_buffer127, align 8, !dbg !6823
  %79 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6823
  %80 = load i8*, i8** %pb.addr, align 8, !dbg !6823
  call void %78(%struct.vb2_buffer* %79, i8* %80) #10, !dbg !6823
  br label %if.end128, !dbg !6823

if.end128:                                        ; preds = %if.then125, %land.lhs.true122, %land.lhs.true119, %if.end117
  br label %if.end129, !dbg !6827

if.end129:                                        ; preds = %if.end128, %if.end104
  br label %do.body130, !dbg !6828

do.body130:                                       ; preds = %if.end129
  %81 = load i32, i32* @debug, align 4, !dbg !6829
  %cmp131 = icmp sge i32 %81, 2, !dbg !6829
  br i1 %cmp131, label %if.then132, label %if.end137, !dbg !6832

if.then132:                                       ; preds = %do.body130
  %82 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6829
  %name133 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %82, i32 0, i32 31, !dbg !6829
  %arraydecay134 = getelementptr inbounds [32 x i8], [32 x i8]* %name133, i64 0, i64 0, !dbg !6829
  %83 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6829
  %index135 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %83, i32 0, i32 1, !dbg !6829
  %84 = load i32, i32* %index135, align 8, !dbg !6829
  %call136 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay134, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.vb2_core_qbuf, i64 0, i64 0), i32 %84) #11, !dbg !6829
  br label %if.end137, !dbg !6829

if.end137:                                        ; preds = %if.then132, %do.body130
  br label %do.end138, !dbg !6832

do.end138:                                        ; preds = %if.end137
  store i32 0, i32* %retval, align 4, !dbg !6833
  br label %return, !dbg !6833

if.end139:                                        ; preds = %if.end47
  %85 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6834
  %state140 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %85, i32 0, i32 8, !dbg !6836
  %86 = load i32, i32* %state140, align 8, !dbg !6836
  %cmp141 = icmp ne i32 %86, 1, !dbg !6837
  br i1 %cmp141, label %if.then142, label %if.end147, !dbg !6838

if.then142:                                       ; preds = %if.end139
  %87 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6839
  %uses_qbuf143 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %87, i32 0, i32 4, !dbg !6840
  %bf.load144 = load i16, i16* %uses_qbuf143, align 8, !dbg !6841
  %bf.clear145 = and i16 %bf.load144, -129, !dbg !6841
  %bf.set146 = or i16 %bf.clear145, 128, !dbg !6841
  store i16 %bf.set146, i16* %uses_qbuf143, align 8, !dbg !6841
  br label %if.end147, !dbg !6839

if.end147:                                        ; preds = %if.then142, %if.end139
  %88 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6842
  %state148 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %88, i32 0, i32 8, !dbg !6843
  %89 = load i32, i32* %state148, align 8, !dbg !6843
  switch i32 %89, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb161
  ], !dbg !6844

sw.bb:                                            ; preds = %if.end147, %if.end147
  %90 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6845
  %prepared149 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %90, i32 0, i32 9, !dbg !6848
  %bf.load150 = load i8, i8* %prepared149, align 4, !dbg !6848
  %bf.lshr151 = lshr i8 %bf.load150, 1, !dbg !6848
  %bf.clear152 = and i8 %bf.lshr151, 1, !dbg !6848
  %bf.cast153 = zext i8 %bf.clear152 to i32, !dbg !6848
  %tobool154 = icmp ne i32 %bf.cast153, 0, !dbg !6845
  br i1 %tobool154, label %if.end160, label %if.then155, !dbg !6849

if.then155:                                       ; preds = %sw.bb
  %91 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6850
  %call156 = call i32 @__buf_prepare(%struct.vb2_buffer* %91) #10, !dbg !6852
  store i32 %call156, i32* %ret, align 4, !dbg !6853
  %92 = load i32, i32* %ret, align 4, !dbg !6854
  %tobool157 = icmp ne i32 %92, 0, !dbg !6854
  br i1 %tobool157, label %if.then158, label %if.end159, !dbg !6856

if.then158:                                       ; preds = %if.then155
  %93 = load i32, i32* %ret, align 4, !dbg !6857
  store i32 %93, i32* %retval, align 4, !dbg !6858
  br label %return, !dbg !6858

if.end159:                                        ; preds = %if.then155
  br label %if.end160, !dbg !6859

if.end160:                                        ; preds = %if.end159, %sw.bb
  br label %sw.epilog, !dbg !6860

sw.bb161:                                         ; preds = %if.end147
  br label %do.body162, !dbg !6861

do.body162:                                       ; preds = %sw.bb161
  %94 = load i32, i32* @debug, align 4, !dbg !6862
  %cmp163 = icmp sge i32 %94, 1, !dbg !6862
  br i1 %cmp163, label %if.then164, label %if.end168, !dbg !6865

if.then164:                                       ; preds = %do.body162
  %95 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6862
  %name165 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %95, i32 0, i32 31, !dbg !6862
  %arraydecay166 = getelementptr inbounds [32 x i8], [32 x i8]* %name165, i64 0, i64 0, !dbg !6862
  %call167 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.23, i64 0, i64 0), i8* %arraydecay166, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.vb2_core_qbuf, i64 0, i64 0)) #11, !dbg !6862
  br label %if.end168, !dbg !6862

if.end168:                                        ; preds = %if.then164, %do.body162
  br label %do.end169, !dbg !6865

do.end169:                                        ; preds = %if.end168
  store i32 -22, i32* %retval, align 4, !dbg !6866
  br label %return, !dbg !6866

sw.default:                                       ; preds = %if.end147
  br label %do.body170, !dbg !6867

do.body170:                                       ; preds = %sw.default
  %96 = load i32, i32* @debug, align 4, !dbg !6868
  %cmp171 = icmp sge i32 %96, 1, !dbg !6868
  br i1 %cmp171, label %if.then172, label %if.end178, !dbg !6871

if.then172:                                       ; preds = %do.body170
  %97 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6868
  %name173 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %97, i32 0, i32 31, !dbg !6868
  %arraydecay174 = getelementptr inbounds [32 x i8], [32 x i8]* %name173, i64 0, i64 0, !dbg !6868
  %98 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6868
  %state175 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %98, i32 0, i32 8, !dbg !6868
  %99 = load i32, i32* %state175, align 8, !dbg !6868
  %call176 = call i8* @vb2_state_name(i32 %99) #10, !dbg !6868
  %call177 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.14, i64 0, i64 0), i8* %arraydecay174, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.vb2_core_qbuf, i64 0, i64 0), i8* %call176) #11, !dbg !6868
  br label %if.end178, !dbg !6868

if.end178:                                        ; preds = %if.then172, %do.body170
  br label %do.end179, !dbg !6871

do.end179:                                        ; preds = %if.end178
  store i32 -22, i32* %retval, align 4, !dbg !6872
  br label %return, !dbg !6872

sw.epilog:                                        ; preds = %if.end160
  %100 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6873
  %queued_entry = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %100, i32 0, i32 11, !dbg !6874
  %101 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6875
  %queued_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %101, i32 0, i32 22, !dbg !6876
  call void @list_add_tail(%struct.list_head* %queued_entry, %struct.list_head* %queued_list) #10, !dbg !6877
  %102 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6878
  %queued_count = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %102, i32 0, i32 23, !dbg !6879
  %103 = load i32, i32* %queued_count, align 8, !dbg !6880
  %inc = add i32 %103, 1, !dbg !6880
  store i32 %inc, i32* %queued_count, align 8, !dbg !6880
  %104 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6881
  %waiting_for_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %104, i32 0, i32 28, !dbg !6882
  %bf.load180 = load i16, i16* %waiting_for_buffers, align 8, !dbg !6883
  %bf.clear181 = and i16 %bf.load180, -9, !dbg !6883
  store i16 %bf.clear181, i16* %waiting_for_buffers, align 8, !dbg !6883
  %105 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6884
  %state182 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %105, i32 0, i32 8, !dbg !6885
  store i32 3, i32* %state182, align 8, !dbg !6886
  %106 = load i8*, i8** %pb.addr, align 8, !dbg !6887
  %tobool183 = icmp ne i8* %106, null, !dbg !6887
  br i1 %tobool183, label %if.then184, label %if.end197, !dbg !6889

if.then184:                                       ; preds = %sw.epilog
  %107 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6890
  %tobool185 = icmp ne %struct.vb2_queue* %107, null, !dbg !6890
  br i1 %tobool185, label %land.lhs.true186, label %if.end196, !dbg !6890

land.lhs.true186:                                 ; preds = %if.then184
  %108 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6890
  %buf_ops187 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %108, i32 0, i32 9, !dbg !6890
  %109 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops187, align 8, !dbg !6890
  %tobool188 = icmp ne %struct.vb2_buf_ops* %109, null, !dbg !6890
  br i1 %tobool188, label %land.lhs.true189, label %if.end196, !dbg !6890

land.lhs.true189:                                 ; preds = %land.lhs.true186
  %110 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6890
  %buf_ops190 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %110, i32 0, i32 9, !dbg !6890
  %111 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops190, align 8, !dbg !6890
  %copy_timestamp191 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %111, i32 0, i32 4, !dbg !6890
  %112 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %copy_timestamp191, align 8, !dbg !6890
  %tobool192 = icmp ne void (%struct.vb2_buffer*, i8*)* %112, null, !dbg !6890
  br i1 %tobool192, label %if.then193, label %if.end196, !dbg !6893

if.then193:                                       ; preds = %land.lhs.true189
  %113 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6890
  %buf_ops194 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %113, i32 0, i32 9, !dbg !6890
  %114 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops194, align 8, !dbg !6890
  %copy_timestamp195 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %114, i32 0, i32 4, !dbg !6890
  %115 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %copy_timestamp195, align 8, !dbg !6890
  %116 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6890
  %117 = load i8*, i8** %pb.addr, align 8, !dbg !6890
  call void %115(%struct.vb2_buffer* %116, i8* %117) #10, !dbg !6890
  br label %if.end196, !dbg !6890

if.end196:                                        ; preds = %if.then193, %land.lhs.true189, %land.lhs.true186, %if.then184
  br label %if.end197, !dbg !6894

if.end197:                                        ; preds = %if.end196, %sw.epilog
  %118 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6895
  %119 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6896
  call void @trace_vb2_qbuf(%struct.vb2_queue* %118, %struct.vb2_buffer* %119) #10, !dbg !6897
  %120 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6898
  %start_streaming_called = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %120, i32 0, i32 28, !dbg !6900
  %bf.load198 = load i16, i16* %start_streaming_called, align 8, !dbg !6900
  %bf.lshr199 = lshr i16 %bf.load198, 1, !dbg !6900
  %bf.clear200 = and i16 %bf.lshr199, 1, !dbg !6900
  %bf.cast201 = zext i16 %bf.clear200 to i32, !dbg !6900
  %tobool202 = icmp ne i32 %bf.cast201, 0, !dbg !6898
  br i1 %tobool202, label %if.then203, label %if.end204, !dbg !6901

if.then203:                                       ; preds = %if.end197
  %121 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6902
  call void @__enqueue_in_driver(%struct.vb2_buffer* %121) #10, !dbg !6903
  br label %if.end204, !dbg !6903

if.end204:                                        ; preds = %if.then203, %if.end197
  %122 = load i8*, i8** %pb.addr, align 8, !dbg !6904
  %tobool205 = icmp ne i8* %122, null, !dbg !6904
  br i1 %tobool205, label %if.then206, label %if.end219, !dbg !6906

if.then206:                                       ; preds = %if.end204
  %123 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6907
  %tobool207 = icmp ne %struct.vb2_queue* %123, null, !dbg !6907
  br i1 %tobool207, label %land.lhs.true208, label %if.end218, !dbg !6907

land.lhs.true208:                                 ; preds = %if.then206
  %124 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6907
  %buf_ops209 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %124, i32 0, i32 9, !dbg !6907
  %125 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops209, align 8, !dbg !6907
  %tobool210 = icmp ne %struct.vb2_buf_ops* %125, null, !dbg !6907
  br i1 %tobool210, label %land.lhs.true211, label %if.end218, !dbg !6907

land.lhs.true211:                                 ; preds = %land.lhs.true208
  %126 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6907
  %buf_ops212 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %126, i32 0, i32 9, !dbg !6907
  %127 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops212, align 8, !dbg !6907
  %fill_user_buffer213 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %127, i32 0, i32 2, !dbg !6907
  %128 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %fill_user_buffer213, align 8, !dbg !6907
  %tobool214 = icmp ne void (%struct.vb2_buffer*, i8*)* %128, null, !dbg !6907
  br i1 %tobool214, label %if.then215, label %if.end218, !dbg !6910

if.then215:                                       ; preds = %land.lhs.true211
  %129 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6907
  %buf_ops216 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %129, i32 0, i32 9, !dbg !6907
  %130 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops216, align 8, !dbg !6907
  %fill_user_buffer217 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %130, i32 0, i32 2, !dbg !6907
  %131 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %fill_user_buffer217, align 8, !dbg !6907
  %132 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6907
  %133 = load i8*, i8** %pb.addr, align 8, !dbg !6907
  call void %131(%struct.vb2_buffer* %132, i8* %133) #10, !dbg !6907
  br label %if.end218, !dbg !6907

if.end218:                                        ; preds = %if.then215, %land.lhs.true211, %land.lhs.true208, %if.then206
  br label %if.end219, !dbg !6911

if.end219:                                        ; preds = %if.end218, %if.end204
  %134 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6912
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %134, i32 0, i32 28, !dbg !6914
  %bf.load220 = load i16, i16* %streaming, align 8, !dbg !6914
  %bf.clear221 = and i16 %bf.load220, 1, !dbg !6914
  %bf.cast222 = zext i16 %bf.clear221 to i32, !dbg !6914
  %tobool223 = icmp ne i32 %bf.cast222, 0, !dbg !6912
  br i1 %tobool223, label %land.lhs.true224, label %if.end239, !dbg !6915

land.lhs.true224:                                 ; preds = %if.end219
  %135 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6916
  %start_streaming_called225 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %135, i32 0, i32 28, !dbg !6917
  %bf.load226 = load i16, i16* %start_streaming_called225, align 8, !dbg !6917
  %bf.lshr227 = lshr i16 %bf.load226, 1, !dbg !6917
  %bf.clear228 = and i16 %bf.lshr227, 1, !dbg !6917
  %bf.cast229 = zext i16 %bf.clear228 to i32, !dbg !6917
  %tobool230 = icmp ne i32 %bf.cast229, 0, !dbg !6916
  br i1 %tobool230, label %if.end239, label %land.lhs.true231, !dbg !6918

land.lhs.true231:                                 ; preds = %land.lhs.true224
  %136 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6919
  %queued_count232 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %136, i32 0, i32 23, !dbg !6920
  %137 = load i32, i32* %queued_count232, align 8, !dbg !6920
  %138 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6921
  %min_buffers_needed = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %138, i32 0, i32 15, !dbg !6922
  %139 = load i32, i32* %min_buffers_needed, align 8, !dbg !6922
  %cmp233 = icmp uge i32 %137, %139, !dbg !6923
  br i1 %cmp233, label %if.then234, label %if.end239, !dbg !6924

if.then234:                                       ; preds = %land.lhs.true231
  %140 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6925
  %call235 = call i32 @vb2_start_streaming(%struct.vb2_queue* %140) #10, !dbg !6927
  store i32 %call235, i32* %ret, align 4, !dbg !6928
  %141 = load i32, i32* %ret, align 4, !dbg !6929
  %tobool236 = icmp ne i32 %141, 0, !dbg !6929
  br i1 %tobool236, label %if.then237, label %if.end238, !dbg !6931

if.then237:                                       ; preds = %if.then234
  %142 = load i32, i32* %ret, align 4, !dbg !6932
  store i32 %142, i32* %retval, align 4, !dbg !6933
  br label %return, !dbg !6933

if.end238:                                        ; preds = %if.then234
  br label %if.end239, !dbg !6934

if.end239:                                        ; preds = %if.end238, %land.lhs.true231, %land.lhs.true224, %if.end219
  br label %do.body240, !dbg !6935

do.body240:                                       ; preds = %if.end239
  %143 = load i32, i32* @debug, align 4, !dbg !6936
  %cmp241 = icmp sge i32 %143, 2, !dbg !6936
  br i1 %cmp241, label %if.then242, label %if.end247, !dbg !6939

if.then242:                                       ; preds = %do.body240
  %144 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !6936
  %name243 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %144, i32 0, i32 31, !dbg !6936
  %arraydecay244 = getelementptr inbounds [32 x i8], [32 x i8]* %name243, i64 0, i64 0, !dbg !6936
  %145 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !6936
  %index245 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %145, i32 0, i32 1, !dbg !6936
  %146 = load i32, i32* %index245, align 8, !dbg !6936
  %call246 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay244, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.vb2_core_qbuf, i64 0, i64 0), i32 %146) #11, !dbg !6936
  br label %if.end247, !dbg !6936

if.end247:                                        ; preds = %if.then242, %do.body240
  br label %do.end248, !dbg !6939

do.end248:                                        ; preds = %if.end247
  store i32 0, i32* %retval, align 4, !dbg !6940
  br label %return, !dbg !6940

return:                                           ; preds = %do.end248, %if.then237, %do.end179, %do.end169, %if.then158, %do.end138, %if.then103, %if.then98, %do.end93, %do.end65, %do.end46, %do.end19, %do.end
  %147 = load i32, i32* %retval, align 4, !dbg !6941
  ret i32 %147, !dbg !6941
}

; Function Attrs: noredzone
declare dso_local void @media_request_object_init(%struct.media_request_object*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @media_request_lock_for_update(%struct.media_request* %req) #0 !dbg !6942 {
entry:
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !5194, metadata !DIExpression()), !dbg !6943
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5206, metadata !DIExpression()), !dbg !6945
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5208, metadata !DIExpression()), !dbg !6946
  %req.addr = alloca %struct.media_request*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.media_request* %req, %struct.media_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.media_request** %req.addr, metadata !6953, metadata !DIExpression()), !dbg !6954
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6955, metadata !DIExpression()), !dbg !6956
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6957, metadata !DIExpression()), !dbg !6958
  store i32 0, i32* %ret, align 4, !dbg !6958
  br label %do.body, !dbg !6959

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !6960

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6961, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6964, metadata !DIExpression()), !dbg !6963
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6963
  %conv = zext i1 %cmp to i32, !dbg !6963
  store i32 1, i32* %tmp, align 4, !dbg !6963
  %0 = load i32, i32* %tmp, align 4, !dbg !6963
  br label %do.body2, !dbg !6965

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !6966

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !6967

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !6969, metadata !DIExpression()), !dbg !6972
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !6973, metadata !DIExpression()), !dbg !6972
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !6972
  %conv8 = zext i1 %cmp7 to i32, !dbg !6972
  store i32 1, i32* %tmp9, align 4, !dbg !6972
  %1 = load i32, i32* %tmp9, align 4, !dbg !6972
  %call = call i64 @arch_local_irq_save() #10, !dbg !6974
  store i64 %call, i64* %flags, align 8, !dbg !6974
  br label %do.end, !dbg !6974

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !6967

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !6966

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !6975, !srcloc !6976
  br label %do.body12, !dbg !6975

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6977
  %lock = getelementptr inbounds %struct.media_request, %struct.media_request* %2, i32 0, i32 9, !dbg !6977
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6978
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !6979
  %rlock.i = bitcast %union.anon.4* %4 to %struct.raw_spinlock*, !dbg !6979
  br label %do.end14, !dbg !6977

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !6975

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !6966

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !6965

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !6960

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6980
  %state = getelementptr inbounds %struct.media_request, %struct.media_request* %5, i32 0, i32 3, !dbg !6982
  %6 = load i32, i32* %state, align 8, !dbg !6982
  %cmp19 = icmp eq i32 %6, 0, !dbg !6983
  br i1 %cmp19, label %if.then, label %lor.lhs.false, !dbg !6984

lor.lhs.false:                                    ; preds = %do.end18
  %7 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6985
  %state21 = getelementptr inbounds %struct.media_request, %struct.media_request* %7, i32 0, i32 3, !dbg !6986
  %8 = load i32, i32* %state21, align 8, !dbg !6986
  %cmp22 = icmp eq i32 %8, 5, !dbg !6987
  br i1 %cmp22, label %if.then, label %if.else, !dbg !6988

if.then:                                          ; preds = %lor.lhs.false, %do.end18
  %9 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6989
  %state24 = getelementptr inbounds %struct.media_request, %struct.media_request* %9, i32 0, i32 3, !dbg !6991
  store i32 5, i32* %state24, align 8, !dbg !6992
  %10 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6993
  %updating_count = getelementptr inbounds %struct.media_request, %struct.media_request* %10, i32 0, i32 4, !dbg !6994
  %11 = load i32, i32* %updating_count, align 4, !dbg !6995
  %inc = add i32 %11, 1, !dbg !6995
  store i32 %inc, i32* %updating_count, align 4, !dbg !6995
  br label %if.end, !dbg !6996

if.else:                                          ; preds = %lor.lhs.false
  store i32 -16, i32* %ret, align 4, !dbg !6997
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !6999
  %lock25 = getelementptr inbounds %struct.media_request, %struct.media_request* %12, i32 0, i32 9, !dbg !7000
  %13 = load i64, i64* %flags, align 8, !dbg !7001
  store %struct.spinlock* %lock25, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !231, metadata !5454, metadata !DIExpression()) #6, !dbg !7002
  call void @llvm.dbg.declare(metadata !231, metadata !5458, metadata !DIExpression()) #6, !dbg !7002
  store i32 1, i32* %tmp.i, align 4, !dbg !7002
  %14 = load i32, i32* %tmp.i, align 4, !dbg !7002
  call void @llvm.dbg.declare(metadata !231, metadata !5459, metadata !DIExpression()) #6, !dbg !7003
  call void @llvm.dbg.declare(metadata !231, metadata !5465, metadata !DIExpression()) #6, !dbg !7003
  store i32 1, i32* %tmp8.i, align 4, !dbg !7003
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !7003
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !7004
  call void @arch_local_irq_restore(i64 %16) #12, !dbg !7004
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7005, !srcloc !5469
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !7006
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !7006
  %rlock.i27 = bitcast %union.anon.4* %18 to %struct.raw_spinlock*, !dbg !7006
  %19 = load i32, i32* %ret, align 4, !dbg !7007
  ret i32 %19, !dbg !7008
}

; Function Attrs: noredzone
declare dso_local i32 @media_request_object_bind(%struct.media_request*, %struct.media_request_object_ops*, i8*, i1 zeroext, %struct.media_request_object*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @media_request_unlock_for_update(%struct.media_request* %req) #0 !dbg !7009 {
entry:
  %lock.addr.i48 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i48, metadata !5194, metadata !DIExpression()), !dbg !7010
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5206, metadata !DIExpression()), !dbg !7012
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5208, metadata !DIExpression()), !dbg !7013
  %req.addr = alloca %struct.media_request*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp36 = alloca i64, align 8
  store %struct.media_request* %req, %struct.media_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.media_request** %req.addr, metadata !7020, metadata !DIExpression()), !dbg !7021
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7022, metadata !DIExpression()), !dbg !7023
  br label %do.body, !dbg !7024

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7025

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7026, metadata !DIExpression()), !dbg !7028
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7029, metadata !DIExpression()), !dbg !7028
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7028
  %conv = zext i1 %cmp to i32, !dbg !7028
  store i32 1, i32* %tmp, align 4, !dbg !7028
  %0 = load i32, i32* %tmp, align 4, !dbg !7028
  br label %do.body2, !dbg !7030

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7031

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7032

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7034, metadata !DIExpression()), !dbg !7037
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7038, metadata !DIExpression()), !dbg !7037
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7037
  %conv8 = zext i1 %cmp7 to i32, !dbg !7037
  store i32 1, i32* %tmp9, align 4, !dbg !7037
  %1 = load i32, i32* %tmp9, align 4, !dbg !7037
  %call = call i64 @arch_local_irq_save() #10, !dbg !7039
  store i64 %call, i64* %flags, align 8, !dbg !7039
  br label %do.end, !dbg !7039

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7032

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7031

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7040, !srcloc !7041
  br label %do.body12, !dbg !7040

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !7042
  %lock = getelementptr inbounds %struct.media_request, %struct.media_request* %2, i32 0, i32 9, !dbg !7042
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7043
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !7044
  %rlock.i = bitcast %union.anon.4* %4 to %struct.raw_spinlock*, !dbg !7044
  br label %do.end14, !dbg !7042

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7040

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7031

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7030

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7025

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7045, metadata !DIExpression()), !dbg !7047
  %5 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !7047
  %updating_count = getelementptr inbounds %struct.media_request, %struct.media_request* %5, i32 0, i32 4, !dbg !7047
  %6 = load i32, i32* %updating_count, align 4, !dbg !7047
  %cmp19 = icmp ule i32 %6, 0, !dbg !7047
  %lnot = xor i1 %cmp19, true, !dbg !7047
  %lnot21 = xor i1 %lnot, true, !dbg !7047
  %lnot.ext = zext i1 %lnot21 to i32, !dbg !7047
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7047
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !7048
  %tobool = icmp ne i32 %7, 0, !dbg !7048
  %lnot22 = xor i1 %tobool, true, !dbg !7048
  %lnot24 = xor i1 %lnot22, true, !dbg !7048
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !7048
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !7048
  %tobool27 = icmp ne i64 %conv26, 0, !dbg !7048
  br i1 %tobool27, label %if.then, label %if.end, !dbg !7047

if.then:                                          ; preds = %do.end18
  br label %do.body28, !dbg !7048

do.body28:                                        ; preds = %if.then
  br label %do.body29, !dbg !7050

do.body29:                                        ; preds = %do.body28
  br label %do.end30, !dbg !7052

do.end30:                                         ; preds = %do.body29
  br label %do.body31, !dbg !7050

do.body31:                                        ; preds = %do.end30
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.84, i64 0, i64 0), i32 164, i32 2305, i64 12) #6, !dbg !7054, !srcloc !7056
  br label %do.end32, !dbg !7054

do.end32:                                         ; preds = %do.body31
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 245) #6, !dbg !7057, !srcloc !7059
  br label %do.body33, !dbg !7050

do.body33:                                        ; preds = %do.end32
  br label %do.end34, !dbg !7060

do.end34:                                         ; preds = %do.body33
  br label %do.end35, !dbg !7050

do.end35:                                         ; preds = %do.end34
  br label %if.end, !dbg !7050

if.end:                                           ; preds = %do.end35, %do.end18
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !7047
  %tobool37 = icmp ne i32 %8, 0, !dbg !7047
  %lnot38 = xor i1 %tobool37, true, !dbg !7047
  %lnot40 = xor i1 %lnot38, true, !dbg !7047
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !7047
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !7047
  store i64 %conv42, i64* %tmp36, align 8, !dbg !7048
  %9 = load i64, i64* %tmp36, align 8, !dbg !7047
  %10 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !7062
  %updating_count43 = getelementptr inbounds %struct.media_request, %struct.media_request* %10, i32 0, i32 4, !dbg !7064
  %11 = load i32, i32* %updating_count43, align 4, !dbg !7065
  %dec = add i32 %11, -1, !dbg !7065
  store i32 %dec, i32* %updating_count43, align 4, !dbg !7065
  %tobool44 = icmp ne i32 %dec, 0, !dbg !7065
  br i1 %tobool44, label %if.end46, label %if.then45, !dbg !7066

if.then45:                                        ; preds = %if.end
  %12 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !7067
  %state = getelementptr inbounds %struct.media_request, %struct.media_request* %12, i32 0, i32 3, !dbg !7068
  store i32 0, i32* %state, align 8, !dbg !7069
  br label %if.end46, !dbg !7067

if.end46:                                         ; preds = %if.then45, %if.end
  %13 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !7070
  %lock47 = getelementptr inbounds %struct.media_request, %struct.media_request* %13, i32 0, i32 9, !dbg !7071
  %14 = load i64, i64* %flags, align 8, !dbg !7072
  store %struct.spinlock* %lock47, %struct.spinlock** %lock.addr.i48, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !231, metadata !5454, metadata !DIExpression()) #6, !dbg !7073
  call void @llvm.dbg.declare(metadata !231, metadata !5458, metadata !DIExpression()) #6, !dbg !7073
  store i32 1, i32* %tmp.i, align 4, !dbg !7073
  %15 = load i32, i32* %tmp.i, align 4, !dbg !7073
  call void @llvm.dbg.declare(metadata !231, metadata !5459, metadata !DIExpression()) #6, !dbg !7074
  call void @llvm.dbg.declare(metadata !231, metadata !5465, metadata !DIExpression()) #6, !dbg !7074
  store i32 1, i32* %tmp8.i, align 4, !dbg !7074
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !7074
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !7075
  call void @arch_local_irq_restore(i64 %17) #12, !dbg !7075
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7076, !srcloc !5469
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i48, align 8, !dbg !7077
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !7077
  %rlock.i49 = bitcast %union.anon.4* %19 to %struct.raw_spinlock*, !dbg !7077
  ret void, !dbg !7078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @media_request_get(%struct.media_request* %req) #0 !dbg !7079 {
entry:
  %req.addr = alloca %struct.media_request*, align 8
  store %struct.media_request* %req, %struct.media_request** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.media_request** %req.addr, metadata !7080, metadata !DIExpression()), !dbg !7081
  %0 = load %struct.media_request*, %struct.media_request** %req.addr, align 8, !dbg !7082
  %kref = getelementptr inbounds %struct.media_request, %struct.media_request* %0, i32 0, i32 1, !dbg !7083
  call void @kref_get(%struct.kref* %kref) #10, !dbg !7084
  ret void, !dbg !7085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_vb2_qbuf(%struct.vb2_queue* %q, %struct.vb2_buffer* %vb) #0 !dbg !7086 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !7087, metadata !DIExpression()), !dbg !7088
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !7089, metadata !DIExpression()), !dbg !7088
  ret void, !dbg !7088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__enqueue_in_driver(%struct.vb2_buffer* %vb) #0 !dbg !7090 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !7091, metadata !DIExpression()), !dbg !7093
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6078, metadata !DIExpression()), !dbg !7097
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6082, metadata !DIExpression()), !dbg !7099
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !7100, metadata !DIExpression()), !dbg !7101
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %q = alloca %struct.vb2_queue*, align 8
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !7102, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q, metadata !7104, metadata !DIExpression()), !dbg !7105
  %0 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !7106
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %0, i32 0, i32 0, !dbg !7107
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !7107
  store %struct.vb2_queue* %1, %struct.vb2_queue** %q, align 8, !dbg !7105
  %2 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !7108
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %2, i32 0, i32 8, !dbg !7109
  store i32 4, i32* %state, align 8, !dbg !7110
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !7111
  %owned_by_drv_count = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %3, i32 0, i32 24, !dbg !7112
  store %struct.atomic_t* %owned_by_drv_count, %struct.atomic_t** %v.addr.i, align 8
  %4 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7113
  %5 = bitcast %struct.atomic_t* %4 to i8*, !dbg !7113
  store i8* %5, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7114
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7115
  %conv.i.i = trunc i64 %7 to i32, !dbg !7115
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %6, i32 %conv.i.i) #12, !dbg !7116
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7117
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !7117
  call void @kcsan_check_access(i8* %8, i64 %9, i32 7) #12, !dbg !7117
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7118
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i1.i, align 8
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7119
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !7120
  call void asm sideeffect "incl $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32* %counter.i.i) #6, !dbg !7121, !srcloc !7122
  %12 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !7123
  %13 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !7124
  call void @trace_vb2_buf_queue(%struct.vb2_queue* %12, %struct.vb2_buffer* %13) #10, !dbg !7125
  br label %do.body, !dbg !7126

do.body:                                          ; preds = %entry
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !7127
  %vb2_queue1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %14, i32 0, i32 0, !dbg !7127
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue1, align 8, !dbg !7127
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 7, !dbg !7127
  %16 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !7127
  %buf_queue = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %16, i32 0, i32 10, !dbg !7127
  %17 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_queue, align 8, !dbg !7127
  %tobool = icmp ne void (%struct.vb2_buffer*)* %17, null, !dbg !7127
  br i1 %tobool, label %if.then, label %if.end, !dbg !7130

if.then:                                          ; preds = %do.body
  %18 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !7127
  %vb2_queue2 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %18, i32 0, i32 0, !dbg !7127
  %19 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue2, align 8, !dbg !7127
  %ops3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %19, i32 0, i32 7, !dbg !7127
  %20 = load %struct.vb2_ops*, %struct.vb2_ops** %ops3, align 8, !dbg !7127
  %buf_queue4 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %20, i32 0, i32 10, !dbg !7127
  %21 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_queue4, align 8, !dbg !7127
  %22 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !7127
  call void %21(%struct.vb2_buffer* %22) #10, !dbg !7127
  br label %if.end, !dbg !7127

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !7130

do.end:                                           ; preds = %if.end
  ret void, !dbg !7131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vb2_start_streaming(%struct.vb2_queue* %q) #0 !dbg !7132 {
entry:
  %v.addr.i1.i135 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i135, metadata !5249, metadata !DIExpression()), !dbg !7133
  %v.addr.i.i136 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i136, metadata !5262, metadata !DIExpression()), !dbg !7139
  %size.addr.i.i137 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i137, metadata !5266, metadata !DIExpression()), !dbg !7141
  %v.addr.i138 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i138, metadata !5268, metadata !DIExpression()), !dbg !7142
  %v.addr.i1.i128 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i128, metadata !5249, metadata !DIExpression()), !dbg !7143
  %v.addr.i.i129 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i129, metadata !5262, metadata !DIExpression()), !dbg !7147
  %size.addr.i.i130 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i130, metadata !5266, metadata !DIExpression()), !dbg !7149
  %v.addr.i131 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i131, metadata !5268, metadata !DIExpression()), !dbg !7150
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5249, metadata !DIExpression()), !dbg !7151
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5262, metadata !DIExpression()), !dbg !7154
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5266, metadata !DIExpression()), !dbg !7156
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5268, metadata !DIExpression()), !dbg !7157
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.vb2_buffer*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.vb2_buffer*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp43 = alloca i64, align 8
  %i = alloca i32, align 4
  %__ret_warn_on62 = alloca i32, align 4
  %tmp87 = alloca i64, align 8
  %__ret_warn_on95 = alloca i32, align 4
  %tmp121 = alloca i64, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !7158, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !7160, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7162, metadata !DIExpression()), !dbg !7163
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7164, metadata !DIExpression()), !dbg !7167
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7167
  %queued_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 22, !dbg !7167
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queued_list, i32 0, i32 0, !dbg !7167
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7167
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !7167
  store i8* %2, i8** %__mptr, align 8, !dbg !7167
  br label %do.body, !dbg !7167

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7168

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7167
  %add.ptr = getelementptr i8, i8* %3, i64 -480, !dbg !7167
  %4 = bitcast i8* %add.ptr to %struct.vb2_buffer*, !dbg !7167
  store %struct.vb2_buffer* %4, %struct.vb2_buffer** %tmp, align 8, !dbg !7168
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %tmp, align 8, !dbg !7167
  store %struct.vb2_buffer* %5, %struct.vb2_buffer** %vb, align 8, !dbg !7170
  br label %for.cond, !dbg !7170

for.cond:                                         ; preds = %do.end6, %do.end
  %6 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7171
  %queued_entry = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %6, i32 0, i32 11, !dbg !7171
  %7 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7171
  %queued_list1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %7, i32 0, i32 22, !dbg !7171
  %cmp = icmp eq %struct.list_head* %queued_entry, %queued_list1, !dbg !7171
  %lnot = xor i1 %cmp, true, !dbg !7171
  br i1 %lnot, label %for.body, label %for.end, !dbg !7170

for.body:                                         ; preds = %for.cond
  %8 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7173
  call void @__enqueue_in_driver(%struct.vb2_buffer* %8) #10, !dbg !7174
  br label %for.inc, !dbg !7174

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !7175, metadata !DIExpression()), !dbg !7177
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7177
  %queued_entry3 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 11, !dbg !7177
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %queued_entry3, i32 0, i32 0, !dbg !7177
  %10 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !7177
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !7177
  store i8* %11, i8** %__mptr2, align 8, !dbg !7177
  br label %do.body5, !dbg !7177

do.body5:                                         ; preds = %for.inc
  br label %do.end6, !dbg !7178

do.end6:                                          ; preds = %do.body5
  %12 = load i8*, i8** %__mptr2, align 8, !dbg !7177
  %add.ptr8 = getelementptr i8, i8* %12, i64 -480, !dbg !7177
  %13 = bitcast i8* %add.ptr8 to %struct.vb2_buffer*, !dbg !7177
  store %struct.vb2_buffer* %13, %struct.vb2_buffer** %tmp7, align 8, !dbg !7178
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %tmp7, align 8, !dbg !7177
  store %struct.vb2_buffer* %14, %struct.vb2_buffer** %vb, align 8, !dbg !7171
  br label %for.cond, !dbg !7171, !llvm.loop !7180

for.end:                                          ; preds = %for.cond
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7182
  %start_streaming_called = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 28, !dbg !7183
  %bf.load = load i16, i16* %start_streaming_called, align 8, !dbg !7184
  %bf.clear = and i16 %bf.load, -3, !dbg !7184
  %bf.set = or i16 %bf.clear, 2, !dbg !7184
  store i16 %bf.set, i16* %start_streaming_called, align 8, !dbg !7184
  %16 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7185
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %16, i32 0, i32 7, !dbg !7185
  %17 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !7185
  %start_streaming = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %17, i32 0, i32 8, !dbg !7185
  %18 = load i32 (%struct.vb2_queue*, i32)*, i32 (%struct.vb2_queue*, i32)** %start_streaming, align 8, !dbg !7185
  %tobool = icmp ne i32 (%struct.vb2_queue*, i32)* %18, null, !dbg !7185
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7185

cond.true:                                        ; preds = %for.end
  %19 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7185
  %ops9 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %19, i32 0, i32 7, !dbg !7185
  %20 = load %struct.vb2_ops*, %struct.vb2_ops** %ops9, align 8, !dbg !7185
  %start_streaming10 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %20, i32 0, i32 8, !dbg !7185
  %21 = load i32 (%struct.vb2_queue*, i32)*, i32 (%struct.vb2_queue*, i32)** %start_streaming10, align 8, !dbg !7185
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7185
  %23 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7185
  %owned_by_drv_count = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %23, i32 0, i32 24, !dbg !7185
  store %struct.atomic_t* %owned_by_drv_count, %struct.atomic_t** %v.addr.i, align 8
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7186
  %25 = bitcast %struct.atomic_t* %24 to i8*, !dbg !7186
  store i8* %25, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %26 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7187
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !7188
  %conv.i.i = trunc i64 %27 to i32, !dbg !7188
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %26, i32 %conv.i.i) #12, !dbg !7189
  %28 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7190
  %29 = load i64, i64* %size.addr.i.i, align 8, !dbg !7190
  call void @kcsan_check_access(i8* %28, i64 %29, i32 4) #12, !dbg !7190
  %30 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7191
  store %struct.atomic_t* %30, %struct.atomic_t** %v.addr.i1.i, align 8
  %31 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7192
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %31, i32 0, i32 0, !dbg !7192
  %32 = load volatile i32, i32* %counter.i.i, align 4, !dbg !7192
  %call11 = call i32 %21(%struct.vb2_queue* %22, i32 %32) #10, !dbg !7185
  br label %cond.end, !dbg !7185

cond.false:                                       ; preds = %for.end
  br label %cond.end, !dbg !7185

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call11, %cond.true ], [ 0, %cond.false ], !dbg !7185
  store i32 %cond, i32* %ret, align 4, !dbg !7193
  %33 = load i32, i32* %ret, align 4, !dbg !7194
  %tobool12 = icmp ne i32 %33, 0, !dbg !7194
  br i1 %tobool12, label %if.end, label %if.then, !dbg !7196

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !7197
  br label %return, !dbg !7197

if.end:                                           ; preds = %cond.end
  %34 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7198
  %start_streaming_called13 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %34, i32 0, i32 28, !dbg !7199
  %bf.load14 = load i16, i16* %start_streaming_called13, align 8, !dbg !7200
  %bf.clear15 = and i16 %bf.load14, -3, !dbg !7200
  store i16 %bf.clear15, i16* %start_streaming_called13, align 8, !dbg !7200
  br label %do.body16, !dbg !7201

do.body16:                                        ; preds = %if.end
  %35 = load i32, i32* @debug, align 4, !dbg !7202
  %cmp17 = icmp sge i32 %35, 1, !dbg !7202
  br i1 %cmp17, label %if.then18, label %if.end20, !dbg !7205

if.then18:                                        ; preds = %do.body16
  %36 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7202
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %36, i32 0, i32 31, !dbg !7202
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !7202
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.85, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.vb2_start_streaming, i64 0, i64 0)) #11, !dbg !7202
  br label %if.end20, !dbg !7202

if.end20:                                         ; preds = %if.then18, %do.body16
  br label %do.end21, !dbg !7205

do.end21:                                         ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7206, metadata !DIExpression()), !dbg !7207
  %37 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7207
  %owned_by_drv_count22 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %37, i32 0, i32 24, !dbg !7207
  store %struct.atomic_t* %owned_by_drv_count22, %struct.atomic_t** %v.addr.i131, align 8
  %38 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i131, align 8, !dbg !7208
  %39 = bitcast %struct.atomic_t* %38 to i8*, !dbg !7208
  store i8* %39, i8** %v.addr.i.i129, align 8
  store i64 4, i64* %size.addr.i.i130, align 8
  %40 = load i8*, i8** %v.addr.i.i129, align 8, !dbg !7209
  %41 = load i64, i64* %size.addr.i.i130, align 8, !dbg !7210
  %conv.i.i132 = trunc i64 %41 to i32, !dbg !7210
  %call.i.i133 = call zeroext i1 @kasan_check_read(i8* %40, i32 %conv.i.i132) #12, !dbg !7211
  %42 = load i8*, i8** %v.addr.i.i129, align 8, !dbg !7212
  %43 = load i64, i64* %size.addr.i.i130, align 8, !dbg !7212
  call void @kcsan_check_access(i8* %42, i64 %43, i32 4) #12, !dbg !7212
  %44 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i131, align 8, !dbg !7213
  store %struct.atomic_t* %44, %struct.atomic_t** %v.addr.i1.i128, align 8
  %45 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i128, align 8, !dbg !7214
  %counter.i.i134 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %45, i32 0, i32 0, !dbg !7214
  %46 = load volatile i32, i32* %counter.i.i134, align 4, !dbg !7214
  %tobool24 = icmp ne i32 %46, 0, !dbg !7207
  %lnot25 = xor i1 %tobool24, true, !dbg !7207
  %lnot26 = xor i1 %lnot25, true, !dbg !7207
  %lnot.ext = zext i1 %lnot26 to i32, !dbg !7207
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7207
  %47 = load i32, i32* %__ret_warn_on, align 4, !dbg !7215
  %tobool27 = icmp ne i32 %47, 0, !dbg !7215
  %lnot28 = xor i1 %tobool27, true, !dbg !7215
  %lnot30 = xor i1 %lnot28, true, !dbg !7215
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !7215
  %conv = sext i32 %lnot.ext31 to i64, !dbg !7215
  %tobool32 = icmp ne i64 %conv, 0, !dbg !7215
  br i1 %tobool32, label %if.then33, label %if.end42, !dbg !7207

if.then33:                                        ; preds = %do.end21
  br label %do.body34, !dbg !7215

do.body34:                                        ; preds = %if.then33
  br label %do.body35, !dbg !7217

do.body35:                                        ; preds = %do.body34
  br label %do.end36, !dbg !7219

do.end36:                                         ; preds = %do.body35
  br label %do.body37, !dbg !7217

do.body37:                                        ; preds = %do.end36
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 1548, i32 2305, i64 12) #6, !dbg !7221, !srcloc !7223
  br label %do.end38, !dbg !7221

do.end38:                                         ; preds = %do.body37
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 291) #6, !dbg !7224, !srcloc !7226
  br label %do.body39, !dbg !7217

do.body39:                                        ; preds = %do.end38
  br label %do.end40, !dbg !7227

do.end40:                                         ; preds = %do.body39
  br label %do.end41, !dbg !7217

do.end41:                                         ; preds = %do.end40
  br label %if.end42, !dbg !7217

if.end42:                                         ; preds = %do.end41, %do.end21
  %48 = load i32, i32* %__ret_warn_on, align 4, !dbg !7207
  %tobool44 = icmp ne i32 %48, 0, !dbg !7207
  %lnot45 = xor i1 %tobool44, true, !dbg !7207
  %lnot47 = xor i1 %lnot45, true, !dbg !7207
  %lnot.ext48 = zext i1 %lnot47 to i32, !dbg !7207
  %conv49 = sext i32 %lnot.ext48 to i64, !dbg !7207
  store i64 %conv49, i64* %tmp43, align 8, !dbg !7215
  %49 = load i64, i64* %tmp43, align 8, !dbg !7207
  %tobool50 = icmp ne i64 %49, 0, !dbg !7229
  br i1 %tobool50, label %if.then51, label %if.end94, !dbg !7230

if.then51:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7231, metadata !DIExpression()), !dbg !7232
  store i32 0, i32* %i, align 4, !dbg !7233
  br label %for.cond52, !dbg !7235

for.cond52:                                       ; preds = %for.inc60, %if.then51
  %50 = load i32, i32* %i, align 4, !dbg !7236
  %51 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7238
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %51, i32 0, i32 21, !dbg !7239
  %52 = load i32, i32* %num_buffers, align 8, !dbg !7239
  %cmp53 = icmp ult i32 %50, %52, !dbg !7240
  br i1 %cmp53, label %for.body55, label %for.end61, !dbg !7241

for.body55:                                       ; preds = %for.cond52
  %53 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7242
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %53, i32 0, i32 20, !dbg !7244
  %54 = load i32, i32* %i, align 4, !dbg !7245
  %idxprom = zext i32 %54 to i64, !dbg !7242
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !7242
  %55 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !7242
  store %struct.vb2_buffer* %55, %struct.vb2_buffer** %vb, align 8, !dbg !7246
  %56 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7247
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %56, i32 0, i32 8, !dbg !7249
  %57 = load i32, i32* %state, align 8, !dbg !7249
  %cmp56 = icmp eq i32 %57, 4, !dbg !7250
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !7251

if.then58:                                        ; preds = %for.body55
  %58 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7252
  call void @vb2_buffer_done(%struct.vb2_buffer* %58, i32 3) #10, !dbg !7253
  br label %if.end59, !dbg !7253

if.end59:                                         ; preds = %if.then58, %for.body55
  br label %for.inc60, !dbg !7254

for.inc60:                                        ; preds = %if.end59
  %59 = load i32, i32* %i, align 4, !dbg !7255
  %inc = add i32 %59, 1, !dbg !7255
  store i32 %inc, i32* %i, align 4, !dbg !7255
  br label %for.cond52, !dbg !7256, !llvm.loop !7257

for.end61:                                        ; preds = %for.cond52
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on62, metadata !7259, metadata !DIExpression()), !dbg !7260
  %60 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7260
  %owned_by_drv_count63 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %60, i32 0, i32 24, !dbg !7260
  store %struct.atomic_t* %owned_by_drv_count63, %struct.atomic_t** %v.addr.i138, align 8
  %61 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i138, align 8, !dbg !7261
  %62 = bitcast %struct.atomic_t* %61 to i8*, !dbg !7261
  store i8* %62, i8** %v.addr.i.i136, align 8
  store i64 4, i64* %size.addr.i.i137, align 8
  %63 = load i8*, i8** %v.addr.i.i136, align 8, !dbg !7262
  %64 = load i64, i64* %size.addr.i.i137, align 8, !dbg !7263
  %conv.i.i139 = trunc i64 %64 to i32, !dbg !7263
  %call.i.i140 = call zeroext i1 @kasan_check_read(i8* %63, i32 %conv.i.i139) #12, !dbg !7264
  %65 = load i8*, i8** %v.addr.i.i136, align 8, !dbg !7265
  %66 = load i64, i64* %size.addr.i.i137, align 8, !dbg !7265
  call void @kcsan_check_access(i8* %65, i64 %66, i32 4) #12, !dbg !7265
  %67 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i138, align 8, !dbg !7266
  store %struct.atomic_t* %67, %struct.atomic_t** %v.addr.i1.i135, align 8
  %68 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i135, align 8, !dbg !7267
  %counter.i.i141 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %68, i32 0, i32 0, !dbg !7267
  %69 = load volatile i32, i32* %counter.i.i141, align 4, !dbg !7267
  %tobool65 = icmp ne i32 %69, 0, !dbg !7260
  %lnot66 = xor i1 %tobool65, true, !dbg !7260
  %lnot68 = xor i1 %lnot66, true, !dbg !7260
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !7260
  store i32 %lnot.ext69, i32* %__ret_warn_on62, align 4, !dbg !7260
  %70 = load i32, i32* %__ret_warn_on62, align 4, !dbg !7268
  %tobool70 = icmp ne i32 %70, 0, !dbg !7268
  %lnot71 = xor i1 %tobool70, true, !dbg !7268
  %lnot73 = xor i1 %lnot71, true, !dbg !7268
  %lnot.ext74 = zext i1 %lnot73 to i32, !dbg !7268
  %conv75 = sext i32 %lnot.ext74 to i64, !dbg !7268
  %tobool76 = icmp ne i64 %conv75, 0, !dbg !7268
  br i1 %tobool76, label %if.then77, label %if.end86, !dbg !7260

if.then77:                                        ; preds = %for.end61
  br label %do.body78, !dbg !7268

do.body78:                                        ; preds = %if.then77
  br label %do.body79, !dbg !7270

do.body79:                                        ; preds = %do.body78
  br label %do.end80, !dbg !7272

do.end80:                                         ; preds = %do.body79
  br label %do.body81, !dbg !7270

do.body81:                                        ; preds = %do.end80
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 1561, i32 2305, i64 12) #6, !dbg !7274, !srcloc !7276
  br label %do.end82, !dbg !7274

do.end82:                                         ; preds = %do.body81
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 292) #6, !dbg !7277, !srcloc !7279
  br label %do.body83, !dbg !7270

do.body83:                                        ; preds = %do.end82
  br label %do.end84, !dbg !7280

do.end84:                                         ; preds = %do.body83
  br label %do.end85, !dbg !7270

do.end85:                                         ; preds = %do.end84
  br label %if.end86, !dbg !7270

if.end86:                                         ; preds = %do.end85, %for.end61
  %71 = load i32, i32* %__ret_warn_on62, align 4, !dbg !7260
  %tobool88 = icmp ne i32 %71, 0, !dbg !7260
  %lnot89 = xor i1 %tobool88, true, !dbg !7260
  %lnot91 = xor i1 %lnot89, true, !dbg !7260
  %lnot.ext92 = zext i1 %lnot91 to i32, !dbg !7260
  %conv93 = sext i32 %lnot.ext92 to i64, !dbg !7260
  store i64 %conv93, i64* %tmp87, align 8, !dbg !7268
  %72 = load i64, i64* %tmp87, align 8, !dbg !7260
  br label %if.end94, !dbg !7282

if.end94:                                         ; preds = %if.end86, %if.end42
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on95, metadata !7283, metadata !DIExpression()), !dbg !7285
  %73 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7285
  %done_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %73, i32 0, i32 25, !dbg !7285
  %call96 = call i32 @list_empty(%struct.list_head* %done_list) #10, !dbg !7285
  %tobool97 = icmp ne i32 %call96, 0, !dbg !7285
  %lnot98 = xor i1 %tobool97, true, !dbg !7285
  %lnot100 = xor i1 %lnot98, true, !dbg !7285
  %lnot102 = xor i1 %lnot100, true, !dbg !7285
  %lnot.ext103 = zext i1 %lnot102 to i32, !dbg !7285
  store i32 %lnot.ext103, i32* %__ret_warn_on95, align 4, !dbg !7285
  %74 = load i32, i32* %__ret_warn_on95, align 4, !dbg !7286
  %tobool104 = icmp ne i32 %74, 0, !dbg !7286
  %lnot105 = xor i1 %tobool104, true, !dbg !7286
  %lnot107 = xor i1 %lnot105, true, !dbg !7286
  %lnot.ext108 = zext i1 %lnot107 to i32, !dbg !7286
  %conv109 = sext i32 %lnot.ext108 to i64, !dbg !7286
  %tobool110 = icmp ne i64 %conv109, 0, !dbg !7286
  br i1 %tobool110, label %if.then111, label %if.end120, !dbg !7285

if.then111:                                       ; preds = %if.end94
  br label %do.body112, !dbg !7286

do.body112:                                       ; preds = %if.then111
  br label %do.body113, !dbg !7288

do.body113:                                       ; preds = %do.body112
  br label %do.end114, !dbg !7290

do.end114:                                        ; preds = %do.body113
  br label %do.body115, !dbg !7288

do.body115:                                       ; preds = %do.end114
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 1568, i32 2305, i64 12) #6, !dbg !7292, !srcloc !7294
  br label %do.end116, !dbg !7292

do.end116:                                        ; preds = %do.body115
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 293) #6, !dbg !7295, !srcloc !7297
  br label %do.body117, !dbg !7288

do.body117:                                       ; preds = %do.end116
  br label %do.end118, !dbg !7298

do.end118:                                        ; preds = %do.body117
  br label %do.end119, !dbg !7288

do.end119:                                        ; preds = %do.end118
  br label %if.end120, !dbg !7288

if.end120:                                        ; preds = %do.end119, %if.end94
  %75 = load i32, i32* %__ret_warn_on95, align 4, !dbg !7285
  %tobool122 = icmp ne i32 %75, 0, !dbg !7285
  %lnot123 = xor i1 %tobool122, true, !dbg !7285
  %lnot125 = xor i1 %lnot123, true, !dbg !7285
  %lnot.ext126 = zext i1 %lnot125 to i32, !dbg !7285
  %conv127 = sext i32 %lnot.ext126 to i64, !dbg !7285
  store i64 %conv127, i64* %tmp121, align 8, !dbg !7286
  %76 = load i64, i64* %tmp121, align 8, !dbg !7285
  %77 = load i32, i32* %ret, align 4, !dbg !7300
  store i32 %77, i32* %retval, align 4, !dbg !7301
  br label %return, !dbg !7301

return:                                           ; preds = %if.end120, %if.then
  %78 = load i32, i32* %retval, align 4, !dbg !7302
  ret i32 %78, !dbg !7302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_wait_for_all_buffers(%struct.vb2_queue* %q) #0 !dbg !7303 {
entry:
  %v.addr.i1.i26 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i26, metadata !5249, metadata !DIExpression()), !dbg !7304
  %v.addr.i.i27 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i27, metadata !5262, metadata !DIExpression()), !dbg !7314
  %size.addr.i.i28 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i28, metadata !5266, metadata !DIExpression()), !dbg !7316
  %v.addr.i29 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i29, metadata !5268, metadata !DIExpression()), !dbg !7317
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5249, metadata !DIExpression()), !dbg !7318
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5262, metadata !DIExpression()), !dbg !7322
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5266, metadata !DIExpression()), !dbg !7324
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5268, metadata !DIExpression()), !dbg !7325
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !7326, metadata !DIExpression()), !dbg !7327
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7328
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 28, !dbg !7330
  %bf.load = load i16, i16* %streaming, align 8, !dbg !7330
  %bf.clear = and i16 %bf.load, 1, !dbg !7330
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7330
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7328
  br i1 %tobool, label %if.end2, label %if.then, !dbg !7331

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7332

do.body:                                          ; preds = %if.then
  %1 = load i32, i32* @debug, align 4, !dbg !7334
  %cmp = icmp sge i32 %1, 1, !dbg !7334
  br i1 %cmp, label %if.then1, label %if.end, !dbg !7337

if.then1:                                         ; preds = %do.body
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7334
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %2, i32 0, i32 31, !dbg !7334
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !7334
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.vb2_wait_for_all_buffers, i64 0, i64 0)) #11, !dbg !7334
  br label %if.end, !dbg !7334

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !7337

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7338
  br label %return, !dbg !7338

if.end2:                                          ; preds = %entry
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7339
  %start_streaming_called = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %3, i32 0, i32 28, !dbg !7340
  %bf.load3 = load i16, i16* %start_streaming_called, align 8, !dbg !7340
  %bf.lshr = lshr i16 %bf.load3, 1, !dbg !7340
  %bf.clear4 = and i16 %bf.lshr, 1, !dbg !7340
  %bf.cast5 = zext i16 %bf.clear4 to i32, !dbg !7340
  %tobool6 = icmp ne i32 %bf.cast5, 0, !dbg !7339
  br i1 %tobool6, label %if.then7, label %if.end25, !dbg !7341

if.then7:                                         ; preds = %if.end2
  br label %do.body8, !dbg !7342

do.body8:                                         ; preds = %if.then7
  br label %do.body9, !dbg !7343

do.body9:                                         ; preds = %do.body8
  br label %do.body10, !dbg !7344

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !7346

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !7344

do.end12:                                         ; preds = %do.end11
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7348
  %owned_by_drv_count = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 24, !dbg !7348
  store %struct.atomic_t* %owned_by_drv_count, %struct.atomic_t** %v.addr.i, align 8
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7349
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !7349
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7350
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7351
  %conv.i.i = trunc i64 %8 to i32, !dbg !7351
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %7, i32 %conv.i.i) #12, !dbg !7352
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !7353
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !7353
  call void @kcsan_check_access(i8* %9, i64 %10, i32 4) #12, !dbg !7353
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !7354
  store %struct.atomic_t* %11, %struct.atomic_t** %v.addr.i1.i, align 8
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !7355
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !7355
  %13 = load volatile i32, i32* %counter.i.i, align 4, !dbg !7355
  %tobool14 = icmp ne i32 %13, 0, !dbg !7348
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !7343

if.then15:                                        ; preds = %do.end12
  br label %do.end24, !dbg !7348

if.end16:                                         ; preds = %do.end12
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !7356, metadata !DIExpression()), !dbg !7368
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7369, metadata !DIExpression()), !dbg !7368
  store i64 0, i64* %__ret, align 8, !dbg !7368
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #10, !dbg !7368
  br label %for.cond, !dbg !7368

for.cond:                                         ; preds = %if.end22, %if.end16
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !7370, metadata !DIExpression()), !dbg !7371
  %14 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7371
  %done_wq = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %14, i32 0, i32 27, !dbg !7371
  %call17 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %done_wq, %struct.wait_queue_entry* %__wq_entry, i32 2) #10, !dbg !7371
  store i64 %call17, i64* %__int, align 8, !dbg !7371
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7372
  %owned_by_drv_count18 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 24, !dbg !7372
  store %struct.atomic_t* %owned_by_drv_count18, %struct.atomic_t** %v.addr.i29, align 8
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i29, align 8, !dbg !7373
  %17 = bitcast %struct.atomic_t* %16 to i8*, !dbg !7373
  store i8* %17, i8** %v.addr.i.i27, align 8
  store i64 4, i64* %size.addr.i.i28, align 8
  %18 = load i8*, i8** %v.addr.i.i27, align 8, !dbg !7374
  %19 = load i64, i64* %size.addr.i.i28, align 8, !dbg !7375
  %conv.i.i30 = trunc i64 %19 to i32, !dbg !7375
  %call.i.i31 = call zeroext i1 @kasan_check_read(i8* %18, i32 %conv.i.i30) #12, !dbg !7376
  %20 = load i8*, i8** %v.addr.i.i27, align 8, !dbg !7377
  %21 = load i64, i64* %size.addr.i.i28, align 8, !dbg !7377
  call void @kcsan_check_access(i8* %20, i64 %21, i32 4) #12, !dbg !7377
  %22 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i29, align 8, !dbg !7378
  store %struct.atomic_t* %22, %struct.atomic_t** %v.addr.i1.i26, align 8
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i26, align 8, !dbg !7379
  %counter.i.i32 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %23, i32 0, i32 0, !dbg !7379
  %24 = load volatile i32, i32* %counter.i.i32, align 4, !dbg !7379
  %tobool20 = icmp ne i32 %24, 0, !dbg !7372
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !7371

if.then21:                                        ; preds = %for.cond
  br label %for.end, !dbg !7372

if.end22:                                         ; preds = %for.cond
  call void @schedule() #10, !dbg !7371
  br label %for.cond, !dbg !7380, !llvm.loop !7381

for.end:                                          ; preds = %if.then21
  %25 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7368
  %done_wq23 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %25, i32 0, i32 27, !dbg !7368
  call void @finish_wait(%struct.wait_queue_head* %done_wq23, %struct.wait_queue_entry* %__wq_entry) #10, !dbg !7368
  br label %__out, !dbg !7368

__out:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !7383), !dbg !7368
  %26 = load i64, i64* %__ret, align 8, !dbg !7368
  store i64 %26, i64* %tmp, align 8, !dbg !7368
  %27 = load i64, i64* %tmp, align 8, !dbg !7368
  br label %do.end24, !dbg !7343

do.end24:                                         ; preds = %__out, %if.then15
  br label %if.end25, !dbg !7343

if.end25:                                         ; preds = %do.end24, %if.end2
  store i32 0, i32* %retval, align 4, !dbg !7384
  br label %return, !dbg !7384

return:                                           ; preds = %if.end25, %do.end
  %28 = load i32, i32* %retval, align 4, !dbg !7385
  ret i32 %28, !dbg !7385
}

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #4

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #4

; Function Attrs: noredzone
declare dso_local void @schedule() #4

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_core_dqbuf(%struct.vb2_queue* %q, i32* %pindex, i8* %pb, i1 zeroext %nonblocking) #0 !dbg !7386 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %pindex.addr = alloca i32*, align 8
  %pb.addr = alloca i8*, align 8
  %nonblocking.addr = alloca i8, align 1
  %vb = alloca %struct.vb2_buffer*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !7389, metadata !DIExpression()), !dbg !7390
  store i32* %pindex, i32** %pindex.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pindex.addr, metadata !7391, metadata !DIExpression()), !dbg !7392
  store i8* %pb, i8** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pb.addr, metadata !7393, metadata !DIExpression()), !dbg !7394
  %frombool = zext i1 %nonblocking to i8
  store i8 %frombool, i8* %nonblocking.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nonblocking.addr, metadata !7395, metadata !DIExpression()), !dbg !7396
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !7397, metadata !DIExpression()), !dbg !7398
  store %struct.vb2_buffer* null, %struct.vb2_buffer** %vb, align 8, !dbg !7398
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7399, metadata !DIExpression()), !dbg !7400
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7401
  %1 = load i8*, i8** %pb.addr, align 8, !dbg !7402
  %2 = load i8, i8* %nonblocking.addr, align 1, !dbg !7403
  %tobool = trunc i8 %2 to i1, !dbg !7403
  %conv = zext i1 %tobool to i32, !dbg !7403
  %call = call i32 @__vb2_get_done_vb(%struct.vb2_queue* %0, %struct.vb2_buffer** %vb, i8* %1, i32 %conv) #10, !dbg !7404
  store i32 %call, i32* %ret, align 4, !dbg !7405
  %3 = load i32, i32* %ret, align 4, !dbg !7406
  %cmp = icmp slt i32 %3, 0, !dbg !7408
  br i1 %cmp, label %if.then, label %if.end, !dbg !7409

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %ret, align 4, !dbg !7410
  store i32 %4, i32* %retval, align 4, !dbg !7411
  br label %return, !dbg !7411

if.end:                                           ; preds = %entry
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7412
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 8, !dbg !7413
  %6 = load i32, i32* %state, align 8, !dbg !7413
  switch i32 %6, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb7
  ], !dbg !7414

sw.bb:                                            ; preds = %if.end
  br label %do.body, !dbg !7415

do.body:                                          ; preds = %sw.bb
  %7 = load i32, i32* @debug, align 4, !dbg !7417
  %cmp2 = icmp sge i32 %7, 3, !dbg !7417
  br i1 %cmp2, label %if.then4, label %if.end6, !dbg !7420

if.then4:                                         ; preds = %do.body
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7417
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 31, !dbg !7417
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !7417
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.25, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vb2_core_dqbuf, i64 0, i64 0)) #11, !dbg !7417
  br label %if.end6, !dbg !7417

if.end6:                                          ; preds = %if.then4, %do.body
  br label %do.end, !dbg !7420

do.end:                                           ; preds = %if.end6
  br label %sw.epilog, !dbg !7421

sw.bb7:                                           ; preds = %if.end
  br label %do.body8, !dbg !7422

do.body8:                                         ; preds = %sw.bb7
  %9 = load i32, i32* @debug, align 4, !dbg !7423
  %cmp9 = icmp sge i32 %9, 3, !dbg !7423
  br i1 %cmp9, label %if.then11, label %if.end15, !dbg !7426

if.then11:                                        ; preds = %do.body8
  %10 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7423
  %name12 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %10, i32 0, i32 31, !dbg !7423
  %arraydecay13 = getelementptr inbounds [32 x i8], [32 x i8]* %name12, i64 0, i64 0, !dbg !7423
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.26, i64 0, i64 0), i8* %arraydecay13, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vb2_core_dqbuf, i64 0, i64 0)) #11, !dbg !7423
  br label %if.end15, !dbg !7423

if.end15:                                         ; preds = %if.then11, %do.body8
  br label %do.end16, !dbg !7426

do.end16:                                         ; preds = %if.end15
  br label %sw.epilog, !dbg !7427

sw.default:                                       ; preds = %if.end
  br label %do.body17, !dbg !7428

do.body17:                                        ; preds = %sw.default
  %11 = load i32, i32* @debug, align 4, !dbg !7429
  %cmp18 = icmp sge i32 %11, 1, !dbg !7429
  br i1 %cmp18, label %if.then20, label %if.end26, !dbg !7432

if.then20:                                        ; preds = %do.body17
  %12 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7429
  %name21 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %12, i32 0, i32 31, !dbg !7429
  %arraydecay22 = getelementptr inbounds [32 x i8], [32 x i8]* %name21, i64 0, i64 0, !dbg !7429
  %13 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7429
  %state23 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %13, i32 0, i32 8, !dbg !7429
  %14 = load i32, i32* %state23, align 8, !dbg !7429
  %call24 = call i8* @vb2_state_name(i32 %14) #10, !dbg !7429
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.14, i64 0, i64 0), i8* %arraydecay22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vb2_core_dqbuf, i64 0, i64 0), i8* %call24) #11, !dbg !7429
  br label %if.end26, !dbg !7429

if.end26:                                         ; preds = %if.then20, %do.body17
  br label %do.end27, !dbg !7432

do.end27:                                         ; preds = %if.end26
  store i32 -22, i32* %retval, align 4, !dbg !7433
  br label %return, !dbg !7433

sw.epilog:                                        ; preds = %do.end16, %do.end
  br label %do.body28, !dbg !7434

do.body28:                                        ; preds = %sw.epilog
  %15 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7435
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %15, i32 0, i32 0, !dbg !7435
  %16 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !7435
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %16, i32 0, i32 7, !dbg !7435
  %17 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !7435
  %buf_finish = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %17, i32 0, i32 6, !dbg !7435
  %18 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_finish, align 8, !dbg !7435
  %tobool29 = icmp ne void (%struct.vb2_buffer*)* %18, null, !dbg !7435
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !7438

if.then30:                                        ; preds = %do.body28
  %19 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7435
  %vb2_queue31 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %19, i32 0, i32 0, !dbg !7435
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue31, align 8, !dbg !7435
  %ops32 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %20, i32 0, i32 7, !dbg !7435
  %21 = load %struct.vb2_ops*, %struct.vb2_ops** %ops32, align 8, !dbg !7435
  %buf_finish33 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %21, i32 0, i32 6, !dbg !7435
  %22 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_finish33, align 8, !dbg !7435
  %23 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7435
  call void %22(%struct.vb2_buffer* %23) #10, !dbg !7435
  br label %if.end34, !dbg !7435

if.end34:                                         ; preds = %if.then30, %do.body28
  br label %do.end35, !dbg !7438

do.end35:                                         ; preds = %if.end34
  %24 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7439
  %prepared = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %24, i32 0, i32 9, !dbg !7440
  %bf.load = load i8, i8* %prepared, align 4, !dbg !7441
  %bf.clear = and i8 %bf.load, -3, !dbg !7441
  store i8 %bf.clear, i8* %prepared, align 4, !dbg !7441
  %25 = load i32*, i32** %pindex.addr, align 8, !dbg !7442
  %tobool36 = icmp ne i32* %25, null, !dbg !7442
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !7444

if.then37:                                        ; preds = %do.end35
  %26 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7445
  %index = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %26, i32 0, i32 1, !dbg !7446
  %27 = load i32, i32* %index, align 8, !dbg !7446
  %28 = load i32*, i32** %pindex.addr, align 8, !dbg !7447
  store i32 %27, i32* %28, align 4, !dbg !7448
  br label %if.end38, !dbg !7449

if.end38:                                         ; preds = %if.then37, %do.end35
  %29 = load i8*, i8** %pb.addr, align 8, !dbg !7450
  %tobool39 = icmp ne i8* %29, null, !dbg !7450
  br i1 %tobool39, label %if.then40, label %if.end50, !dbg !7452

if.then40:                                        ; preds = %if.end38
  %30 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7453
  %tobool41 = icmp ne %struct.vb2_queue* %30, null, !dbg !7453
  br i1 %tobool41, label %land.lhs.true, label %if.end49, !dbg !7453

land.lhs.true:                                    ; preds = %if.then40
  %31 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7453
  %buf_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %31, i32 0, i32 9, !dbg !7453
  %32 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops, align 8, !dbg !7453
  %tobool42 = icmp ne %struct.vb2_buf_ops* %32, null, !dbg !7453
  br i1 %tobool42, label %land.lhs.true43, label %if.end49, !dbg !7453

land.lhs.true43:                                  ; preds = %land.lhs.true
  %33 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7453
  %buf_ops44 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %33, i32 0, i32 9, !dbg !7453
  %34 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops44, align 8, !dbg !7453
  %fill_user_buffer = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %34, i32 0, i32 2, !dbg !7453
  %35 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %fill_user_buffer, align 8, !dbg !7453
  %tobool45 = icmp ne void (%struct.vb2_buffer*, i8*)* %35, null, !dbg !7453
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !7456

if.then46:                                        ; preds = %land.lhs.true43
  %36 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7453
  %buf_ops47 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %36, i32 0, i32 9, !dbg !7453
  %37 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops47, align 8, !dbg !7453
  %fill_user_buffer48 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %37, i32 0, i32 2, !dbg !7453
  %38 = load void (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)** %fill_user_buffer48, align 8, !dbg !7453
  %39 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7453
  %40 = load i8*, i8** %pb.addr, align 8, !dbg !7453
  call void %38(%struct.vb2_buffer* %39, i8* %40) #10, !dbg !7453
  br label %if.end49, !dbg !7453

if.end49:                                         ; preds = %if.then46, %land.lhs.true43, %land.lhs.true, %if.then40
  br label %if.end50, !dbg !7457

if.end50:                                         ; preds = %if.end49, %if.end38
  %41 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7458
  %queued_entry = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %41, i32 0, i32 11, !dbg !7459
  call void @list_del(%struct.list_head* %queued_entry) #10, !dbg !7460
  %42 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7461
  %queued_count = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %42, i32 0, i32 23, !dbg !7462
  %43 = load i32, i32* %queued_count, align 8, !dbg !7463
  %dec = add i32 %43, -1, !dbg !7463
  store i32 %dec, i32* %queued_count, align 8, !dbg !7463
  %44 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7464
  %45 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7465
  call void @trace_vb2_dqbuf(%struct.vb2_queue* %44, %struct.vb2_buffer* %45) #10, !dbg !7466
  %46 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7467
  call void @__vb2_dqbuf(%struct.vb2_buffer* %46) #10, !dbg !7468
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7469, metadata !DIExpression()), !dbg !7472
  %47 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7472
  %req_obj = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %47, i32 0, i32 7, !dbg !7472
  %req = getelementptr inbounds %struct.media_request_object, %struct.media_request_object* %req_obj, i32 0, i32 2, !dbg !7472
  %48 = load %struct.media_request*, %struct.media_request** %req, align 8, !dbg !7472
  %tobool51 = icmp ne %struct.media_request* %48, null, !dbg !7472
  %lnot = xor i1 %tobool51, true, !dbg !7472
  %lnot52 = xor i1 %lnot, true, !dbg !7472
  %lnot.ext = zext i1 %lnot52 to i32, !dbg !7472
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7472
  %49 = load i32, i32* %__ret_warn_on, align 4, !dbg !7473
  %tobool53 = icmp ne i32 %49, 0, !dbg !7473
  %lnot54 = xor i1 %tobool53, true, !dbg !7473
  %lnot56 = xor i1 %lnot54, true, !dbg !7473
  %lnot.ext57 = zext i1 %lnot56 to i32, !dbg !7473
  %conv58 = sext i32 %lnot.ext57 to i64, !dbg !7473
  %tobool59 = icmp ne i64 %conv58, 0, !dbg !7473
  br i1 %tobool59, label %if.then60, label %if.end69, !dbg !7472

if.then60:                                        ; preds = %if.end50
  br label %do.body61, !dbg !7473

do.body61:                                        ; preds = %if.then60
  br label %do.body62, !dbg !7475

do.body62:                                        ; preds = %do.body61
  br label %do.end63, !dbg !7477

do.end63:                                         ; preds = %do.body62
  br label %do.body64, !dbg !7475

do.body64:                                        ; preds = %do.end63
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 1906, i32 2305, i64 12) #6, !dbg !7479, !srcloc !7481
  br label %do.end65, !dbg !7479

do.end65:                                         ; preds = %do.body64
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 295) #6, !dbg !7482, !srcloc !7484
  br label %do.body66, !dbg !7475

do.body66:                                        ; preds = %do.end65
  br label %do.end67, !dbg !7485

do.end67:                                         ; preds = %do.body66
  br label %do.end68, !dbg !7475

do.end68:                                         ; preds = %do.end67
  br label %if.end69, !dbg !7475

if.end69:                                         ; preds = %do.end68, %if.end50
  %50 = load i32, i32* %__ret_warn_on, align 4, !dbg !7472
  %tobool70 = icmp ne i32 %50, 0, !dbg !7472
  %lnot71 = xor i1 %tobool70, true, !dbg !7472
  %lnot73 = xor i1 %lnot71, true, !dbg !7472
  %lnot.ext74 = zext i1 %lnot73 to i32, !dbg !7472
  %conv75 = sext i32 %lnot.ext74 to i64, !dbg !7472
  store i64 %conv75, i64* %tmp, align 8, !dbg !7473
  %51 = load i64, i64* %tmp, align 8, !dbg !7472
  %tobool76 = icmp ne i64 %51, 0, !dbg !7487
  br i1 %tobool76, label %if.then77, label %if.end80, !dbg !7488

if.then77:                                        ; preds = %if.end69
  %52 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7489
  %req_obj78 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %52, i32 0, i32 7, !dbg !7491
  call void @media_request_object_unbind(%struct.media_request_object* %req_obj78) #10, !dbg !7492
  %53 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7493
  %req_obj79 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %53, i32 0, i32 7, !dbg !7494
  call void @media_request_object_put(%struct.media_request_object* %req_obj79) #10, !dbg !7495
  br label %if.end80, !dbg !7496

if.end80:                                         ; preds = %if.then77, %if.end69
  %54 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7497
  %request = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %54, i32 0, i32 6, !dbg !7499
  %55 = load %struct.media_request*, %struct.media_request** %request, align 8, !dbg !7499
  %tobool81 = icmp ne %struct.media_request* %55, null, !dbg !7497
  br i1 %tobool81, label %if.then82, label %if.end84, !dbg !7500

if.then82:                                        ; preds = %if.end80
  %56 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7501
  %request83 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %56, i32 0, i32 6, !dbg !7502
  %57 = load %struct.media_request*, %struct.media_request** %request83, align 8, !dbg !7502
  call void @media_request_put(%struct.media_request* %57) #10, !dbg !7503
  br label %if.end84, !dbg !7503

if.end84:                                         ; preds = %if.then82, %if.end80
  %58 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7504
  %request85 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %58, i32 0, i32 6, !dbg !7505
  store %struct.media_request* null, %struct.media_request** %request85, align 8, !dbg !7506
  br label %do.body86, !dbg !7507

do.body86:                                        ; preds = %if.end84
  %59 = load i32, i32* @debug, align 4, !dbg !7508
  %cmp87 = icmp sge i32 %59, 2, !dbg !7508
  br i1 %cmp87, label %if.then89, label %if.end96, !dbg !7511

if.then89:                                        ; preds = %do.body86
  %60 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7508
  %name90 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %60, i32 0, i32 31, !dbg !7508
  %arraydecay91 = getelementptr inbounds [32 x i8], [32 x i8]* %name90, i64 0, i64 0, !dbg !7508
  %61 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7508
  %index92 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %61, i32 0, i32 1, !dbg !7508
  %62 = load i32, i32* %index92, align 8, !dbg !7508
  %63 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7508
  %state93 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %63, i32 0, i32 8, !dbg !7508
  %64 = load i32, i32* %state93, align 8, !dbg !7508
  %call94 = call i8* @vb2_state_name(i32 %64) #10, !dbg !7508
  %call95 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.27, i64 0, i64 0), i8* %arraydecay91, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vb2_core_dqbuf, i64 0, i64 0), i32 %62, i8* %call94) #11, !dbg !7508
  br label %if.end96, !dbg !7508

if.end96:                                         ; preds = %if.then89, %do.body86
  br label %do.end97, !dbg !7511

do.end97:                                         ; preds = %if.end96
  store i32 0, i32* %retval, align 4, !dbg !7512
  br label %return, !dbg !7512

return:                                           ; preds = %do.end97, %do.end27, %if.then
  %65 = load i32, i32* %retval, align 4, !dbg !7513
  ret i32 %65, !dbg !7513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__vb2_get_done_vb(%struct.vb2_queue* %q, %struct.vb2_buffer** %vb, i8* %pb, i32 %nonblocking) #0 !dbg !7514 {
entry:
  %lock.addr.i42 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i42, metadata !5194, metadata !DIExpression()), !dbg !7518
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5206, metadata !DIExpression()), !dbg !7520
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5208, metadata !DIExpression()), !dbg !7521
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %vb.addr = alloca %struct.vb2_buffer**, align 8
  %pb.addr = alloca i8*, align 8
  %nonblocking.addr = alloca i32, align 4
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp22 = alloca %struct.vb2_buffer*, align 8
  %ret25 = alloca i32, align 4
  %tmp36 = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !7528, metadata !DIExpression()), !dbg !7529
  store %struct.vb2_buffer** %vb, %struct.vb2_buffer*** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer*** %vb.addr, metadata !7530, metadata !DIExpression()), !dbg !7531
  store i8* %pb, i8** %pb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pb.addr, metadata !7532, metadata !DIExpression()), !dbg !7533
  store i32 %nonblocking, i32* %nonblocking.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nonblocking.addr, metadata !7534, metadata !DIExpression()), !dbg !7535
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7536, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7538, metadata !DIExpression()), !dbg !7539
  store i32 0, i32* %ret, align 4, !dbg !7539
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7540
  %1 = load i32, i32* %nonblocking.addr, align 4, !dbg !7541
  %call = call i32 @__vb2_wait_for_done_vb(%struct.vb2_queue* %0, i32 %1) #10, !dbg !7542
  store i32 %call, i32* %ret, align 4, !dbg !7543
  %2 = load i32, i32* %ret, align 4, !dbg !7544
  %tobool = icmp ne i32 %2, 0, !dbg !7544
  br i1 %tobool, label %if.then, label %if.end, !dbg !7546

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !7547
  store i32 %3, i32* %retval, align 4, !dbg !7548
  br label %return, !dbg !7548

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !7549

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !7550

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7551, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7554, metadata !DIExpression()), !dbg !7553
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7553
  %conv = zext i1 %cmp to i32, !dbg !7553
  store i32 1, i32* %tmp, align 4, !dbg !7553
  %4 = load i32, i32* %tmp, align 4, !dbg !7553
  br label %do.body2, !dbg !7555

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7556

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7557

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7559, metadata !DIExpression()), !dbg !7562
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7563, metadata !DIExpression()), !dbg !7562
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7562
  %conv8 = zext i1 %cmp7 to i32, !dbg !7562
  store i32 1, i32* %tmp9, align 4, !dbg !7562
  %5 = load i32, i32* %tmp9, align 4, !dbg !7562
  %call10 = call i64 @arch_local_irq_save() #10, !dbg !7564
  store i64 %call10, i64* %flags, align 8, !dbg !7564
  br label %do.end, !dbg !7564

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !7557

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !7556

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7565, !srcloc !7566
  br label %do.body13, !dbg !7565

do.body13:                                        ; preds = %do.body12
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7567
  %done_lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 26, !dbg !7567
  store %struct.spinlock* %done_lock, %struct.spinlock** %lock.addr.i, align 8
  %7 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7568
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0, !dbg !7569
  %rlock.i = bitcast %union.anon.4* %8 to %struct.raw_spinlock*, !dbg !7569
  br label %do.end15, !dbg !7567

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !7565

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7556

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7555

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !7550

do.end19:                                         ; preds = %do.end18
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7570, metadata !DIExpression()), !dbg !7572
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7572
  %done_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %9, i32 0, i32 25, !dbg !7572
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %done_list, i32 0, i32 0, !dbg !7572
  %10 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7572
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !7572
  store i8* %11, i8** %__mptr, align 8, !dbg !7572
  br label %do.body20, !dbg !7572

do.body20:                                        ; preds = %do.end19
  br label %do.end21, !dbg !7573

do.end21:                                         ; preds = %do.body20
  %12 = load i8*, i8** %__mptr, align 8, !dbg !7572
  %add.ptr = getelementptr i8, i8* %12, i64 -496, !dbg !7572
  %13 = bitcast i8* %add.ptr to %struct.vb2_buffer*, !dbg !7572
  store %struct.vb2_buffer* %13, %struct.vb2_buffer** %tmp22, align 8, !dbg !7573
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %tmp22, align 8, !dbg !7572
  %15 = load %struct.vb2_buffer**, %struct.vb2_buffer*** %vb.addr, align 8, !dbg !7575
  store %struct.vb2_buffer* %14, %struct.vb2_buffer** %15, align 8, !dbg !7576
  %16 = load i8*, i8** %pb.addr, align 8, !dbg !7577
  %tobool23 = icmp ne i8* %16, null, !dbg !7577
  br i1 %tobool23, label %if.then24, label %if.end37, !dbg !7579

if.then24:                                        ; preds = %do.end21
  call void @llvm.dbg.declare(metadata i32* %ret25, metadata !7580, metadata !DIExpression()), !dbg !7582
  store i32 0, i32* %ret25, align 4, !dbg !7582
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7583
  %tobool26 = icmp ne %struct.vb2_queue* %17, null, !dbg !7583
  br i1 %tobool26, label %land.lhs.true, label %if.end35, !dbg !7583

land.lhs.true:                                    ; preds = %if.then24
  %18 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7583
  %buf_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %18, i32 0, i32 9, !dbg !7583
  %19 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops, align 8, !dbg !7583
  %tobool27 = icmp ne %struct.vb2_buf_ops* %19, null, !dbg !7583
  br i1 %tobool27, label %land.lhs.true28, label %if.end35, !dbg !7583

land.lhs.true28:                                  ; preds = %land.lhs.true
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7583
  %buf_ops29 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %20, i32 0, i32 9, !dbg !7583
  %21 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops29, align 8, !dbg !7583
  %verify_planes_array = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %21, i32 0, i32 0, !dbg !7583
  %22 = load i32 (%struct.vb2_buffer*, i8*)*, i32 (%struct.vb2_buffer*, i8*)** %verify_planes_array, align 8, !dbg !7583
  %tobool30 = icmp ne i32 (%struct.vb2_buffer*, i8*)* %22, null, !dbg !7583
  br i1 %tobool30, label %if.then31, label %if.end35, !dbg !7582

if.then31:                                        ; preds = %land.lhs.true28
  %23 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7583
  %buf_ops32 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %23, i32 0, i32 9, !dbg !7583
  %24 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops32, align 8, !dbg !7583
  %verify_planes_array33 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %24, i32 0, i32 0, !dbg !7583
  %25 = load i32 (%struct.vb2_buffer*, i8*)*, i32 (%struct.vb2_buffer*, i8*)** %verify_planes_array33, align 8, !dbg !7583
  %26 = load %struct.vb2_buffer**, %struct.vb2_buffer*** %vb.addr, align 8, !dbg !7583
  %27 = load %struct.vb2_buffer*, %struct.vb2_buffer** %26, align 8, !dbg !7583
  %28 = load i8*, i8** %pb.addr, align 8, !dbg !7583
  %call34 = call i32 %25(%struct.vb2_buffer* %27, i8* %28) #10, !dbg !7583
  store i32 %call34, i32* %ret25, align 4, !dbg !7583
  br label %if.end35, !dbg !7583

if.end35:                                         ; preds = %if.then31, %land.lhs.true28, %land.lhs.true, %if.then24
  %29 = load i32, i32* %ret25, align 4, !dbg !7582
  store i32 %29, i32* %tmp36, align 4, !dbg !7583
  %30 = load i32, i32* %tmp36, align 4, !dbg !7582
  store i32 %30, i32* %ret, align 4, !dbg !7585
  br label %if.end37, !dbg !7586

if.end37:                                         ; preds = %if.end35, %do.end21
  %31 = load i32, i32* %ret, align 4, !dbg !7587
  %tobool38 = icmp ne i32 %31, 0, !dbg !7587
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !7589

if.then39:                                        ; preds = %if.end37
  %32 = load %struct.vb2_buffer**, %struct.vb2_buffer*** %vb.addr, align 8, !dbg !7590
  %33 = load %struct.vb2_buffer*, %struct.vb2_buffer** %32, align 8, !dbg !7591
  %done_entry = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %33, i32 0, i32 12, !dbg !7592
  call void @list_del(%struct.list_head* %done_entry) #10, !dbg !7593
  br label %if.end40, !dbg !7593

if.end40:                                         ; preds = %if.then39, %if.end37
  %34 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7594
  %done_lock41 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %34, i32 0, i32 26, !dbg !7595
  %35 = load i64, i64* %flags, align 8, !dbg !7596
  store %struct.spinlock* %done_lock41, %struct.spinlock** %lock.addr.i42, align 8
  store i64 %35, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !231, metadata !5454, metadata !DIExpression()) #6, !dbg !7597
  call void @llvm.dbg.declare(metadata !231, metadata !5458, metadata !DIExpression()) #6, !dbg !7597
  store i32 1, i32* %tmp.i, align 4, !dbg !7597
  %36 = load i32, i32* %tmp.i, align 4, !dbg !7597
  call void @llvm.dbg.declare(metadata !231, metadata !5459, metadata !DIExpression()) #6, !dbg !7598
  call void @llvm.dbg.declare(metadata !231, metadata !5465, metadata !DIExpression()) #6, !dbg !7598
  store i32 1, i32* %tmp8.i, align 4, !dbg !7598
  %37 = load i32, i32* %tmp8.i, align 4, !dbg !7598
  %38 = load i64, i64* %flags.addr.i, align 8, !dbg !7599
  call void @arch_local_irq_restore(i64 %38) #12, !dbg !7599
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !7600, !srcloc !5469
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i42, align 8, !dbg !7601
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !7601
  %rlock.i43 = bitcast %union.anon.4* %40 to %struct.raw_spinlock*, !dbg !7601
  %41 = load i32, i32* %ret, align 4, !dbg !7602
  store i32 %41, i32* %retval, align 4, !dbg !7603
  br label %return, !dbg !7603

return:                                           ; preds = %if.end40, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !7604
  ret i32 %42, !dbg !7604
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !7605 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7608, metadata !DIExpression()), !dbg !7609
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7610
  call void @__list_del_entry(%struct.list_head* %0) #10, !dbg !7611
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7612
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !7613
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !7614
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7615
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !7616
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !7617
  ret void, !dbg !7618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_vb2_dqbuf(%struct.vb2_queue* %q, %struct.vb2_buffer* %vb) #0 !dbg !7619 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !7620, metadata !DIExpression()), !dbg !7621
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !7622, metadata !DIExpression()), !dbg !7621
  ret void, !dbg !7621
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vb2_dqbuf(%struct.vb2_buffer* %vb) #0 !dbg !7623 {
entry:
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %q = alloca %struct.vb2_queue*, align 8
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !7624, metadata !DIExpression()), !dbg !7625
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q, metadata !7626, metadata !DIExpression()), !dbg !7627
  %0 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !7628
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %0, i32 0, i32 0, !dbg !7629
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !7629
  store %struct.vb2_queue* %1, %struct.vb2_queue** %q, align 8, !dbg !7627
  %2 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !7630
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %2, i32 0, i32 8, !dbg !7632
  %3 = load i32, i32* %state, align 8, !dbg !7632
  %cmp = icmp eq i32 %3, 0, !dbg !7633
  br i1 %cmp, label %if.then, label %if.end, !dbg !7634

if.then:                                          ; preds = %entry
  br label %if.end9, !dbg !7635

if.end:                                           ; preds = %entry
  %4 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !7636
  %state1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %4, i32 0, i32 8, !dbg !7637
  store i32 0, i32* %state1, align 8, !dbg !7638
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !7639
  %tobool = icmp ne %struct.vb2_queue* %5, null, !dbg !7639
  br i1 %tobool, label %land.lhs.true, label %if.end9, !dbg !7639

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !7639
  %buf_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 9, !dbg !7639
  %7 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops, align 8, !dbg !7639
  %tobool2 = icmp ne %struct.vb2_buf_ops* %7, null, !dbg !7639
  br i1 %tobool2, label %land.lhs.true3, label %if.end9, !dbg !7639

land.lhs.true3:                                   ; preds = %land.lhs.true
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !7639
  %buf_ops4 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 9, !dbg !7639
  %9 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops4, align 8, !dbg !7639
  %init_buffer = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %9, i32 0, i32 1, !dbg !7639
  %10 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %init_buffer, align 8, !dbg !7639
  %tobool5 = icmp ne void (%struct.vb2_buffer*)* %10, null, !dbg !7639
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !7642

if.then6:                                         ; preds = %land.lhs.true3
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !7639
  %buf_ops7 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 9, !dbg !7639
  %12 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops7, align 8, !dbg !7639
  %init_buffer8 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %12, i32 0, i32 1, !dbg !7639
  %13 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %init_buffer8, align 8, !dbg !7639
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !7639
  call void %13(%struct.vb2_buffer* %14) #10, !dbg !7639
  br label %if.end9, !dbg !7639

if.end9:                                          ; preds = %if.then, %if.then6, %land.lhs.true3, %land.lhs.true, %if.end
  ret void, !dbg !7643
}

; Function Attrs: noredzone
declare dso_local void @media_request_put(%struct.media_request*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_core_streamon(%struct.vb2_queue* %q, i32 %type) #0 !dbg !7644 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %type.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !7645, metadata !DIExpression()), !dbg !7646
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7647, metadata !DIExpression()), !dbg !7648
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7649, metadata !DIExpression()), !dbg !7650
  %0 = load i32, i32* %type.addr, align 4, !dbg !7651
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7653
  %type1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 0, !dbg !7654
  %2 = load i32, i32* %type1, align 8, !dbg !7654
  %cmp = icmp ne i32 %0, %2, !dbg !7655
  br i1 %cmp, label %if.then, label %if.end4, !dbg !7656

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7657

do.body:                                          ; preds = %if.then
  %3 = load i32, i32* @debug, align 4, !dbg !7659
  %cmp2 = icmp sge i32 %3, 1, !dbg !7659
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7662

if.then3:                                         ; preds = %do.body
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7659
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 31, !dbg !7659
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !7659
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.28, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.vb2_core_streamon, i64 0, i64 0)) #11, !dbg !7659
  br label %if.end, !dbg !7659

if.end:                                           ; preds = %if.then3, %do.body
  br label %do.end, !dbg !7662

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7663
  br label %return, !dbg !7663

if.end4:                                          ; preds = %entry
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7664
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %5, i32 0, i32 28, !dbg !7666
  %bf.load = load i16, i16* %streaming, align 8, !dbg !7666
  %bf.clear = and i16 %bf.load, 1, !dbg !7666
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7666
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7664
  br i1 %tobool, label %if.then5, label %if.end14, !dbg !7667

if.then5:                                         ; preds = %if.end4
  br label %do.body6, !dbg !7668

do.body6:                                         ; preds = %if.then5
  %6 = load i32, i32* @debug, align 4, !dbg !7670
  %cmp7 = icmp sge i32 %6, 3, !dbg !7670
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !7673

if.then8:                                         ; preds = %do.body6
  %7 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7670
  %name9 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %7, i32 0, i32 31, !dbg !7670
  %arraydecay10 = getelementptr inbounds [32 x i8], [32 x i8]* %name9, i64 0, i64 0, !dbg !7670
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.29, i64 0, i64 0), i8* %arraydecay10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.vb2_core_streamon, i64 0, i64 0)) #11, !dbg !7670
  br label %if.end12, !dbg !7670

if.end12:                                         ; preds = %if.then8, %do.body6
  br label %do.end13, !dbg !7673

do.end13:                                         ; preds = %if.end12
  store i32 0, i32* %retval, align 4, !dbg !7674
  br label %return, !dbg !7674

if.end14:                                         ; preds = %if.end4
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7675
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 21, !dbg !7677
  %9 = load i32, i32* %num_buffers, align 8, !dbg !7677
  %tobool15 = icmp ne i32 %9, 0, !dbg !7675
  br i1 %tobool15, label %if.end25, label %if.then16, !dbg !7678

if.then16:                                        ; preds = %if.end14
  br label %do.body17, !dbg !7679

do.body17:                                        ; preds = %if.then16
  %10 = load i32, i32* @debug, align 4, !dbg !7681
  %cmp18 = icmp sge i32 %10, 1, !dbg !7681
  br i1 %cmp18, label %if.then19, label %if.end23, !dbg !7684

if.then19:                                        ; preds = %do.body17
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7681
  %name20 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 31, !dbg !7681
  %arraydecay21 = getelementptr inbounds [32 x i8], [32 x i8]* %name20, i64 0, i64 0, !dbg !7681
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.30, i64 0, i64 0), i8* %arraydecay21, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.vb2_core_streamon, i64 0, i64 0)) #11, !dbg !7681
  br label %if.end23, !dbg !7681

if.end23:                                         ; preds = %if.then19, %do.body17
  br label %do.end24, !dbg !7684

do.end24:                                         ; preds = %if.end23
  store i32 -22, i32* %retval, align 4, !dbg !7685
  br label %return, !dbg !7685

if.end25:                                         ; preds = %if.end14
  %12 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7686
  %num_buffers26 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %12, i32 0, i32 21, !dbg !7688
  %13 = load i32, i32* %num_buffers26, align 8, !dbg !7688
  %14 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7689
  %min_buffers_needed = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %14, i32 0, i32 15, !dbg !7690
  %15 = load i32, i32* %min_buffers_needed, align 8, !dbg !7690
  %cmp27 = icmp ult i32 %13, %15, !dbg !7691
  br i1 %cmp27, label %if.then28, label %if.end38, !dbg !7692

if.then28:                                        ; preds = %if.end25
  br label %do.body29, !dbg !7693

do.body29:                                        ; preds = %if.then28
  %16 = load i32, i32* @debug, align 4, !dbg !7695
  %cmp30 = icmp sge i32 %16, 1, !dbg !7695
  br i1 %cmp30, label %if.then31, label %if.end36, !dbg !7698

if.then31:                                        ; preds = %do.body29
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7695
  %name32 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %17, i32 0, i32 31, !dbg !7695
  %arraydecay33 = getelementptr inbounds [32 x i8], [32 x i8]* %name32, i64 0, i64 0, !dbg !7695
  %18 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7695
  %min_buffers_needed34 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %18, i32 0, i32 15, !dbg !7695
  %19 = load i32, i32* %min_buffers_needed34, align 8, !dbg !7695
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.31, i64 0, i64 0), i8* %arraydecay33, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.vb2_core_streamon, i64 0, i64 0), i32 %19) #11, !dbg !7695
  br label %if.end36, !dbg !7695

if.end36:                                         ; preds = %if.then31, %do.body29
  br label %do.end37, !dbg !7698

do.end37:                                         ; preds = %if.end36
  store i32 -22, i32* %retval, align 4, !dbg !7699
  br label %return, !dbg !7699

if.end38:                                         ; preds = %if.end25
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7700
  %queued_count = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %20, i32 0, i32 23, !dbg !7702
  %21 = load i32, i32* %queued_count, align 8, !dbg !7702
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7703
  %min_buffers_needed39 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %22, i32 0, i32 15, !dbg !7704
  %23 = load i32, i32* %min_buffers_needed39, align 8, !dbg !7704
  %cmp40 = icmp uge i32 %21, %23, !dbg !7705
  br i1 %cmp40, label %if.then41, label %if.end50, !dbg !7706

if.then41:                                        ; preds = %if.end38
  %24 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7707
  %call42 = call i32 @v4l_vb2q_enable_media_source(%struct.vb2_queue* %24) #10, !dbg !7709
  store i32 %call42, i32* %ret, align 4, !dbg !7710
  %25 = load i32, i32* %ret, align 4, !dbg !7711
  %tobool43 = icmp ne i32 %25, 0, !dbg !7711
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !7713

if.then44:                                        ; preds = %if.then41
  %26 = load i32, i32* %ret, align 4, !dbg !7714
  store i32 %26, i32* %retval, align 4, !dbg !7715
  br label %return, !dbg !7715

if.end45:                                         ; preds = %if.then41
  %27 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7716
  %call46 = call i32 @vb2_start_streaming(%struct.vb2_queue* %27) #10, !dbg !7717
  store i32 %call46, i32* %ret, align 4, !dbg !7718
  %28 = load i32, i32* %ret, align 4, !dbg !7719
  %tobool47 = icmp ne i32 %28, 0, !dbg !7719
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !7721

if.then48:                                        ; preds = %if.end45
  %29 = load i32, i32* %ret, align 4, !dbg !7722
  store i32 %29, i32* %retval, align 4, !dbg !7723
  br label %return, !dbg !7723

if.end49:                                         ; preds = %if.end45
  br label %if.end50, !dbg !7724

if.end50:                                         ; preds = %if.end49, %if.end38
  %30 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7725
  %streaming51 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %30, i32 0, i32 28, !dbg !7726
  %bf.load52 = load i16, i16* %streaming51, align 8, !dbg !7727
  %bf.clear53 = and i16 %bf.load52, -2, !dbg !7727
  %bf.set = or i16 %bf.clear53, 1, !dbg !7727
  store i16 %bf.set, i16* %streaming51, align 8, !dbg !7727
  br label %do.body54, !dbg !7728

do.body54:                                        ; preds = %if.end50
  %31 = load i32, i32* @debug, align 4, !dbg !7729
  %cmp55 = icmp sge i32 %31, 3, !dbg !7729
  br i1 %cmp55, label %if.then56, label %if.end60, !dbg !7732

if.then56:                                        ; preds = %do.body54
  %32 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7729
  %name57 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %32, i32 0, i32 31, !dbg !7729
  %arraydecay58 = getelementptr inbounds [32 x i8], [32 x i8]* %name57, i64 0, i64 0, !dbg !7729
  %call59 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i8* %arraydecay58, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.vb2_core_streamon, i64 0, i64 0)) #11, !dbg !7729
  br label %if.end60, !dbg !7729

if.end60:                                         ; preds = %if.then56, %do.body54
  br label %do.end61, !dbg !7732

do.end61:                                         ; preds = %if.end60
  store i32 0, i32* %retval, align 4, !dbg !7733
  br label %return, !dbg !7733

return:                                           ; preds = %do.end61, %if.then48, %if.then44, %do.end37, %do.end24, %do.end13, %do.end
  %33 = load i32, i32* %retval, align 4, !dbg !7734
  ret i32 %33, !dbg !7734
}

; Function Attrs: noredzone
declare dso_local i32 @v4l_vb2q_enable_media_source(%struct.vb2_queue*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vb2_queue_error(%struct.vb2_queue* %q) #0 !dbg !7735 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !7736, metadata !DIExpression()), !dbg !7737
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7738
  %error = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 28, !dbg !7739
  %bf.load = load i16, i16* %error, align 8, !dbg !7740
  %bf.clear = and i16 %bf.load, -5, !dbg !7740
  %bf.set = or i16 %bf.clear, 4, !dbg !7740
  store i16 %bf.set, i16* %error, align 8, !dbg !7740
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7741
  %done_wq = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 27, !dbg !7741
  call void @__wake_up(%struct.wait_queue_head* %done_wq, i32 3, i32 0, i8* null) #10, !dbg !7741
  ret void, !dbg !7742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_core_streamoff(%struct.vb2_queue* %q, i32 %type) #0 !dbg !7743 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %type.addr = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !7744, metadata !DIExpression()), !dbg !7745
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7746, metadata !DIExpression()), !dbg !7747
  %0 = load i32, i32* %type.addr, align 4, !dbg !7748
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7750
  %type1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 0, !dbg !7751
  %2 = load i32, i32* %type1, align 8, !dbg !7751
  %cmp = icmp ne i32 %0, %2, !dbg !7752
  br i1 %cmp, label %if.then, label %if.end4, !dbg !7753

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7754

do.body:                                          ; preds = %if.then
  %3 = load i32, i32* @debug, align 4, !dbg !7756
  %cmp2 = icmp sge i32 %3, 1, !dbg !7756
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7759

if.then3:                                         ; preds = %do.body
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7756
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 31, !dbg !7756
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !7756
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.28, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.vb2_core_streamoff, i64 0, i64 0)) #11, !dbg !7756
  br label %if.end, !dbg !7756

if.end:                                           ; preds = %if.then3, %do.body
  br label %do.end, !dbg !7759

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7760
  br label %return, !dbg !7760

if.end4:                                          ; preds = %entry
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7761
  call void @__vb2_queue_cancel(%struct.vb2_queue* %5) #10, !dbg !7762
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7763
  %is_output = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 28, !dbg !7764
  %bf.load = load i16, i16* %is_output, align 8, !dbg !7764
  %bf.lshr = lshr i16 %bf.load, 6, !dbg !7764
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7764
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7764
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !7765
  %lnot = xor i1 %tobool, true, !dbg !7765
  %lnot.ext = zext i1 %lnot to i32, !dbg !7765
  %7 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7766
  %waiting_for_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %7, i32 0, i32 28, !dbg !7767
  %8 = trunc i32 %lnot.ext to i16, !dbg !7768
  %bf.load5 = load i16, i16* %waiting_for_buffers, align 8, !dbg !7768
  %bf.value = and i16 %8, 1, !dbg !7768
  %bf.shl = shl i16 %bf.value, 3, !dbg !7768
  %bf.clear6 = and i16 %bf.load5, -9, !dbg !7768
  %bf.set = or i16 %bf.clear6, %bf.shl, !dbg !7768
  store i16 %bf.set, i16* %waiting_for_buffers, align 8, !dbg !7768
  %bf.result.cast = zext i16 %bf.value to i32, !dbg !7768
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7769
  %last_buffer_dequeued = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %9, i32 0, i32 28, !dbg !7770
  %bf.load7 = load i16, i16* %last_buffer_dequeued, align 8, !dbg !7771
  %bf.clear8 = and i16 %bf.load7, -257, !dbg !7771
  store i16 %bf.clear8, i16* %last_buffer_dequeued, align 8, !dbg !7771
  br label %do.body9, !dbg !7772

do.body9:                                         ; preds = %if.end4
  %10 = load i32, i32* @debug, align 4, !dbg !7773
  %cmp10 = icmp sge i32 %10, 3, !dbg !7773
  br i1 %cmp10, label %if.then11, label %if.end15, !dbg !7776

if.then11:                                        ; preds = %do.body9
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7773
  %name12 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 31, !dbg !7773
  %arraydecay13 = getelementptr inbounds [32 x i8], [32 x i8]* %name12, i64 0, i64 0, !dbg !7773
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.32, i64 0, i64 0), i8* %arraydecay13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.vb2_core_streamoff, i64 0, i64 0)) #11, !dbg !7773
  br label %if.end15, !dbg !7773

if.end15:                                         ; preds = %if.then11, %do.body9
  br label %do.end16, !dbg !7776

do.end16:                                         ; preds = %if.end15
  store i32 0, i32* %retval, align 4, !dbg !7777
  br label %return, !dbg !7777

return:                                           ; preds = %do.end16, %do.end
  %12 = load i32, i32* %retval, align 4, !dbg !7778
  ret i32 %12, !dbg !7778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_core_expbuf(%struct.vb2_queue* %q, i32* %fd, i32 %type, i32 %index, i32 %plane, i32 %flags) #0 !dbg !7779 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %fd.addr = alloca i32*, align 8
  %type.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %plane.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %vb = alloca %struct.vb2_buffer*, align 8
  %vb_plane = alloca %struct.vb2_plane*, align 8
  %ret = alloca i32, align 4
  %dbuf = alloca %struct.dma_buf*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !7782, metadata !DIExpression()), !dbg !7783
  store i32* %fd, i32** %fd.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %fd.addr, metadata !7784, metadata !DIExpression()), !dbg !7785
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7786, metadata !DIExpression()), !dbg !7787
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7788, metadata !DIExpression()), !dbg !7789
  store i32 %plane, i32* %plane.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane.addr, metadata !7790, metadata !DIExpression()), !dbg !7791
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7792, metadata !DIExpression()), !dbg !7793
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !7794, metadata !DIExpression()), !dbg !7795
  store %struct.vb2_buffer* null, %struct.vb2_buffer** %vb, align 8, !dbg !7795
  call void @llvm.dbg.declare(metadata %struct.vb2_plane** %vb_plane, metadata !7796, metadata !DIExpression()), !dbg !7797
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7798, metadata !DIExpression()), !dbg !7799
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dbuf, metadata !7800, metadata !DIExpression()), !dbg !7801
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7802
  %memory = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 18, !dbg !7804
  %1 = load i32, i32* %memory, align 8, !dbg !7804
  %cmp = icmp ne i32 %1, 1, !dbg !7805
  br i1 %cmp, label %if.then, label %if.end3, !dbg !7806

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7807

do.body:                                          ; preds = %if.then
  %2 = load i32, i32* @debug, align 4, !dbg !7809
  %cmp1 = icmp sge i32 %2, 1, !dbg !7809
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !7812

if.then2:                                         ; preds = %do.body
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7809
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %3, i32 0, i32 31, !dbg !7809
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !7809
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.33, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.vb2_core_expbuf, i64 0, i64 0)) #11, !dbg !7809
  br label %if.end, !dbg !7809

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !7812

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7813
  br label %return, !dbg !7813

if.end3:                                          ; preds = %entry
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7814
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 8, !dbg !7816
  %5 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !7816
  %get_dmabuf = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %5, i32 0, i32 2, !dbg !7817
  %6 = load %struct.dma_buf* (i8*, i64)*, %struct.dma_buf* (i8*, i64)** %get_dmabuf, align 8, !dbg !7817
  %tobool = icmp ne %struct.dma_buf* (i8*, i64)* %6, null, !dbg !7814
  br i1 %tobool, label %if.end13, label %if.then4, !dbg !7818

if.then4:                                         ; preds = %if.end3
  br label %do.body5, !dbg !7819

do.body5:                                         ; preds = %if.then4
  %7 = load i32, i32* @debug, align 4, !dbg !7821
  %cmp6 = icmp sge i32 %7, 1, !dbg !7821
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !7824

if.then7:                                         ; preds = %do.body5
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7821
  %name8 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 31, !dbg !7821
  %arraydecay9 = getelementptr inbounds [32 x i8], [32 x i8]* %name8, i64 0, i64 0, !dbg !7821
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.34, i64 0, i64 0), i8* %arraydecay9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.vb2_core_expbuf, i64 0, i64 0)) #11, !dbg !7821
  br label %if.end11, !dbg !7821

if.end11:                                         ; preds = %if.then7, %do.body5
  br label %do.end12, !dbg !7824

do.end12:                                         ; preds = %if.end11
  store i32 -22, i32* %retval, align 4, !dbg !7825
  br label %return, !dbg !7825

if.end13:                                         ; preds = %if.end3
  %9 = load i32, i32* %flags.addr, align 4, !dbg !7826
  %and = and i32 %9, -524292, !dbg !7828
  %tobool14 = icmp ne i32 %and, 0, !dbg !7828
  br i1 %tobool14, label %if.then15, label %if.end24, !dbg !7829

if.then15:                                        ; preds = %if.end13
  br label %do.body16, !dbg !7830

do.body16:                                        ; preds = %if.then15
  %10 = load i32, i32* @debug, align 4, !dbg !7832
  %cmp17 = icmp sge i32 %10, 1, !dbg !7832
  br i1 %cmp17, label %if.then18, label %if.end22, !dbg !7835

if.then18:                                        ; preds = %do.body16
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7832
  %name19 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 31, !dbg !7832
  %arraydecay20 = getelementptr inbounds [32 x i8], [32 x i8]* %name19, i64 0, i64 0, !dbg !7832
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.35, i64 0, i64 0), i8* %arraydecay20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.vb2_core_expbuf, i64 0, i64 0)) #11, !dbg !7832
  br label %if.end22, !dbg !7832

if.end22:                                         ; preds = %if.then18, %do.body16
  br label %do.end23, !dbg !7835

do.end23:                                         ; preds = %if.end22
  store i32 -22, i32* %retval, align 4, !dbg !7836
  br label %return, !dbg !7836

if.end24:                                         ; preds = %if.end13
  %12 = load i32, i32* %type.addr, align 4, !dbg !7837
  %13 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7839
  %type25 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %13, i32 0, i32 0, !dbg !7840
  %14 = load i32, i32* %type25, align 8, !dbg !7840
  %cmp26 = icmp ne i32 %12, %14, !dbg !7841
  br i1 %cmp26, label %if.then27, label %if.end36, !dbg !7842

if.then27:                                        ; preds = %if.end24
  br label %do.body28, !dbg !7843

do.body28:                                        ; preds = %if.then27
  %15 = load i32, i32* @debug, align 4, !dbg !7845
  %cmp29 = icmp sge i32 %15, 1, !dbg !7845
  br i1 %cmp29, label %if.then30, label %if.end34, !dbg !7848

if.then30:                                        ; preds = %do.body28
  %16 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7845
  %name31 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %16, i32 0, i32 31, !dbg !7845
  %arraydecay32 = getelementptr inbounds [32 x i8], [32 x i8]* %name31, i64 0, i64 0, !dbg !7845
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.36, i64 0, i64 0), i8* %arraydecay32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.vb2_core_expbuf, i64 0, i64 0)) #11, !dbg !7845
  br label %if.end34, !dbg !7845

if.end34:                                         ; preds = %if.then30, %do.body28
  br label %do.end35, !dbg !7848

do.end35:                                         ; preds = %if.end34
  store i32 -22, i32* %retval, align 4, !dbg !7849
  br label %return, !dbg !7849

if.end36:                                         ; preds = %if.end24
  %17 = load i32, i32* %index.addr, align 4, !dbg !7850
  %18 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7852
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %18, i32 0, i32 21, !dbg !7853
  %19 = load i32, i32* %num_buffers, align 8, !dbg !7853
  %cmp37 = icmp uge i32 %17, %19, !dbg !7854
  br i1 %cmp37, label %if.then38, label %if.end47, !dbg !7855

if.then38:                                        ; preds = %if.end36
  br label %do.body39, !dbg !7856

do.body39:                                        ; preds = %if.then38
  %20 = load i32, i32* @debug, align 4, !dbg !7858
  %cmp40 = icmp sge i32 %20, 1, !dbg !7858
  br i1 %cmp40, label %if.then41, label %if.end45, !dbg !7861

if.then41:                                        ; preds = %do.body39
  %21 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7858
  %name42 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %21, i32 0, i32 31, !dbg !7858
  %arraydecay43 = getelementptr inbounds [32 x i8], [32 x i8]* %name42, i64 0, i64 0, !dbg !7858
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.37, i64 0, i64 0), i8* %arraydecay43, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.vb2_core_expbuf, i64 0, i64 0)) #11, !dbg !7858
  br label %if.end45, !dbg !7858

if.end45:                                         ; preds = %if.then41, %do.body39
  br label %do.end46, !dbg !7861

do.end46:                                         ; preds = %if.end45
  store i32 -22, i32* %retval, align 4, !dbg !7862
  br label %return, !dbg !7862

if.end47:                                         ; preds = %if.end36
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7863
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %22, i32 0, i32 20, !dbg !7864
  %23 = load i32, i32* %index.addr, align 4, !dbg !7865
  %idxprom = zext i32 %23 to i64, !dbg !7863
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !7863
  %24 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !7863
  store %struct.vb2_buffer* %24, %struct.vb2_buffer** %vb, align 8, !dbg !7866
  %25 = load i32, i32* %plane.addr, align 4, !dbg !7867
  %26 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7869
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %26, i32 0, i32 4, !dbg !7870
  %27 = load i32, i32* %num_planes, align 4, !dbg !7870
  %cmp48 = icmp uge i32 %25, %27, !dbg !7871
  br i1 %cmp48, label %if.then49, label %if.end58, !dbg !7872

if.then49:                                        ; preds = %if.end47
  br label %do.body50, !dbg !7873

do.body50:                                        ; preds = %if.then49
  %28 = load i32, i32* @debug, align 4, !dbg !7875
  %cmp51 = icmp sge i32 %28, 1, !dbg !7875
  br i1 %cmp51, label %if.then52, label %if.end56, !dbg !7878

if.then52:                                        ; preds = %do.body50
  %29 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7875
  %name53 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %29, i32 0, i32 31, !dbg !7875
  %arraydecay54 = getelementptr inbounds [32 x i8], [32 x i8]* %name53, i64 0, i64 0, !dbg !7875
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.38, i64 0, i64 0), i8* %arraydecay54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.vb2_core_expbuf, i64 0, i64 0)) #11, !dbg !7875
  br label %if.end56, !dbg !7875

if.end56:                                         ; preds = %if.then52, %do.body50
  br label %do.end57, !dbg !7878

do.end57:                                         ; preds = %if.end56
  store i32 -22, i32* %retval, align 4, !dbg !7879
  br label %return, !dbg !7879

if.end58:                                         ; preds = %if.end47
  %30 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7880
  %call59 = call zeroext i1 @vb2_fileio_is_active(%struct.vb2_queue* %30) #10, !dbg !7882
  br i1 %call59, label %if.then60, label %if.end69, !dbg !7883

if.then60:                                        ; preds = %if.end58
  br label %do.body61, !dbg !7884

do.body61:                                        ; preds = %if.then60
  %31 = load i32, i32* @debug, align 4, !dbg !7886
  %cmp62 = icmp sge i32 %31, 1, !dbg !7886
  br i1 %cmp62, label %if.then63, label %if.end67, !dbg !7889

if.then63:                                        ; preds = %do.body61
  %32 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7886
  %name64 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %32, i32 0, i32 31, !dbg !7886
  %arraydecay65 = getelementptr inbounds [32 x i8], [32 x i8]* %name64, i64 0, i64 0, !dbg !7886
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.39, i64 0, i64 0), i8* %arraydecay65, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.vb2_core_expbuf, i64 0, i64 0)) #11, !dbg !7886
  br label %if.end67, !dbg !7886

if.end67:                                         ; preds = %if.then63, %do.body61
  br label %do.end68, !dbg !7889

do.end68:                                         ; preds = %if.end67
  store i32 -16, i32* %retval, align 4, !dbg !7890
  br label %return, !dbg !7890

if.end69:                                         ; preds = %if.end58
  %33 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7891
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %33, i32 0, i32 10, !dbg !7892
  %34 = load i32, i32* %plane.addr, align 4, !dbg !7893
  %idxprom70 = zext i32 %34 to i64, !dbg !7891
  %arrayidx71 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom70, !dbg !7891
  store %struct.vb2_plane* %arrayidx71, %struct.vb2_plane** %vb_plane, align 8, !dbg !7894
  %35 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7895
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %35, i32 0, i32 0, !dbg !7895
  %36 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !7895
  %mem_ops72 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %36, i32 0, i32 8, !dbg !7895
  %37 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops72, align 8, !dbg !7895
  %get_dmabuf73 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %37, i32 0, i32 2, !dbg !7895
  %38 = load %struct.dma_buf* (i8*, i64)*, %struct.dma_buf* (i8*, i64)** %get_dmabuf73, align 8, !dbg !7895
  %tobool74 = icmp ne %struct.dma_buf* (i8*, i64)* %38, null, !dbg !7895
  br i1 %tobool74, label %cond.true, label %cond.false, !dbg !7895

cond.true:                                        ; preds = %if.end69
  %39 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !7895
  %vb2_queue75 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %39, i32 0, i32 0, !dbg !7895
  %40 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue75, align 8, !dbg !7895
  %mem_ops76 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %40, i32 0, i32 8, !dbg !7895
  %41 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops76, align 8, !dbg !7895
  %get_dmabuf77 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %41, i32 0, i32 2, !dbg !7895
  %42 = load %struct.dma_buf* (i8*, i64)*, %struct.dma_buf* (i8*, i64)** %get_dmabuf77, align 8, !dbg !7895
  %43 = load %struct.vb2_plane*, %struct.vb2_plane** %vb_plane, align 8, !dbg !7895
  %mem_priv = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %43, i32 0, i32 0, !dbg !7895
  %44 = load i8*, i8** %mem_priv, align 8, !dbg !7895
  %45 = load i32, i32* %flags.addr, align 4, !dbg !7895
  %and78 = and i32 %45, 3, !dbg !7895
  %conv = zext i32 %and78 to i64, !dbg !7895
  %call79 = call %struct.dma_buf* %42(i8* %44, i64 %conv) #10, !dbg !7895
  br label %cond.end, !dbg !7895

cond.false:                                       ; preds = %if.end69
  br label %cond.end, !dbg !7895

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.dma_buf* [ %call79, %cond.true ], [ null, %cond.false ], !dbg !7895
  store %struct.dma_buf* %cond, %struct.dma_buf** %dbuf, align 8, !dbg !7896
  %46 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !7897
  %47 = bitcast %struct.dma_buf* %46 to i8*, !dbg !7897
  %call80 = call zeroext i1 @IS_ERR_OR_NULL(i8* %47) #10, !dbg !7899
  br i1 %call80, label %if.then81, label %if.end91, !dbg !7900

if.then81:                                        ; preds = %cond.end
  br label %do.body82, !dbg !7901

do.body82:                                        ; preds = %if.then81
  %48 = load i32, i32* @debug, align 4, !dbg !7903
  %cmp83 = icmp sge i32 %48, 1, !dbg !7903
  br i1 %cmp83, label %if.then85, label %if.end89, !dbg !7906

if.then85:                                        ; preds = %do.body82
  %49 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7903
  %name86 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %49, i32 0, i32 31, !dbg !7903
  %arraydecay87 = getelementptr inbounds [32 x i8], [32 x i8]* %name86, i64 0, i64 0, !dbg !7903
  %50 = load i32, i32* %index.addr, align 4, !dbg !7903
  %51 = load i32, i32* %plane.addr, align 4, !dbg !7903
  %call88 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.40, i64 0, i64 0), i8* %arraydecay87, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.vb2_core_expbuf, i64 0, i64 0), i32 %50, i32 %51) #11, !dbg !7903
  br label %if.end89, !dbg !7903

if.end89:                                         ; preds = %if.then85, %do.body82
  br label %do.end90, !dbg !7906

do.end90:                                         ; preds = %if.end89
  store i32 -22, i32* %retval, align 4, !dbg !7907
  br label %return, !dbg !7907

if.end91:                                         ; preds = %cond.end
  %52 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !7908
  %53 = load i32, i32* %flags.addr, align 4, !dbg !7909
  %and92 = and i32 %53, -4, !dbg !7910
  %call93 = call i32 @dma_buf_fd(%struct.dma_buf* %52, i32 %and92) #10, !dbg !7911
  store i32 %call93, i32* %ret, align 4, !dbg !7912
  %54 = load i32, i32* %ret, align 4, !dbg !7913
  %cmp94 = icmp slt i32 %54, 0, !dbg !7915
  br i1 %cmp94, label %if.then96, label %if.end106, !dbg !7916

if.then96:                                        ; preds = %if.end91
  br label %do.body97, !dbg !7917

do.body97:                                        ; preds = %if.then96
  %55 = load i32, i32* @debug, align 4, !dbg !7919
  %cmp98 = icmp sge i32 %55, 3, !dbg !7919
  br i1 %cmp98, label %if.then100, label %if.end104, !dbg !7922

if.then100:                                       ; preds = %do.body97
  %56 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7919
  %name101 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %56, i32 0, i32 31, !dbg !7919
  %arraydecay102 = getelementptr inbounds [32 x i8], [32 x i8]* %name101, i64 0, i64 0, !dbg !7919
  %57 = load i32, i32* %index.addr, align 4, !dbg !7919
  %58 = load i32, i32* %plane.addr, align 4, !dbg !7919
  %59 = load i32, i32* %ret, align 4, !dbg !7919
  %call103 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.41, i64 0, i64 0), i8* %arraydecay102, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.vb2_core_expbuf, i64 0, i64 0), i32 %57, i32 %58, i32 %59) #11, !dbg !7919
  br label %if.end104, !dbg !7919

if.end104:                                        ; preds = %if.then100, %do.body97
  br label %do.end105, !dbg !7922

do.end105:                                        ; preds = %if.end104
  %60 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !7923
  call void @dma_buf_put(%struct.dma_buf* %60) #10, !dbg !7924
  %61 = load i32, i32* %ret, align 4, !dbg !7925
  store i32 %61, i32* %retval, align 4, !dbg !7926
  br label %return, !dbg !7926

if.end106:                                        ; preds = %if.end91
  br label %do.body107, !dbg !7927

do.body107:                                       ; preds = %if.end106
  %62 = load i32, i32* @debug, align 4, !dbg !7928
  %cmp108 = icmp sge i32 %62, 3, !dbg !7928
  br i1 %cmp108, label %if.then110, label %if.end114, !dbg !7931

if.then110:                                       ; preds = %do.body107
  %63 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7928
  %name111 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %63, i32 0, i32 31, !dbg !7928
  %arraydecay112 = getelementptr inbounds [32 x i8], [32 x i8]* %name111, i64 0, i64 0, !dbg !7928
  %64 = load i32, i32* %index.addr, align 4, !dbg !7928
  %65 = load i32, i32* %plane.addr, align 4, !dbg !7928
  %66 = load i32, i32* %ret, align 4, !dbg !7928
  %call113 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.42, i64 0, i64 0), i8* %arraydecay112, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.vb2_core_expbuf, i64 0, i64 0), i32 %64, i32 %65, i32 %66) #11, !dbg !7928
  br label %if.end114, !dbg !7928

if.end114:                                        ; preds = %if.then110, %do.body107
  br label %do.end115, !dbg !7931

do.end115:                                        ; preds = %if.end114
  %67 = load i32, i32* %ret, align 4, !dbg !7932
  %68 = load i32*, i32** %fd.addr, align 8, !dbg !7933
  store i32 %67, i32* %68, align 4, !dbg !7934
  store i32 0, i32* %retval, align 4, !dbg !7935
  br label %return, !dbg !7935

return:                                           ; preds = %do.end115, %do.end105, %do.end90, %do.end68, %do.end57, %do.end46, %do.end35, %do.end23, %do.end12, %do.end
  %69 = load i32, i32* %retval, align 4, !dbg !7936
  ret i32 %69, !dbg !7936
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #0 !dbg !7937 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7941, metadata !DIExpression()), !dbg !7942
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7943
  %tobool = icmp ne i8* %0, null, !dbg !7943
  %lnot = xor i1 %tobool, true, !dbg !7943
  %lnot1 = xor i1 %lnot, true, !dbg !7943
  %lnot2 = xor i1 %lnot1, true, !dbg !7943
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7943
  %conv = sext i32 %lnot.ext to i64, !dbg !7943
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7943
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !7944

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !7945
  %2 = ptrtoint i8* %1 to i64, !dbg !7945
  %3 = inttoptr i64 %2 to i8*, !dbg !7945
  %4 = ptrtoint i8* %3 to i64, !dbg !7945
  %cmp = icmp uge i64 %4, -4095, !dbg !7945
  %lnot5 = xor i1 %cmp, true, !dbg !7945
  %lnot7 = xor i1 %lnot5, true, !dbg !7945
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !7945
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !7945
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !7944
  br label %lor.end, !dbg !7944

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !7946
}

; Function Attrs: noredzone
declare dso_local i32 @dma_buf_fd(%struct.dma_buf*, i32) #4

; Function Attrs: noredzone
declare dso_local void @dma_buf_put(%struct.dma_buf*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_mmap(%struct.vb2_queue* %q, %struct.vm_area_struct* %vma) #0 !dbg !7947 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %vma.addr = alloca %struct.vm_area_struct*, align 8
  %off = alloca i64, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %buffer = alloca i32, align 4
  %plane = alloca i32, align 4
  %ret = alloca i32, align 4
  %length = alloca i64, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !7950, metadata !DIExpression()), !dbg !7951
  store %struct.vm_area_struct* %vma, %struct.vm_area_struct** %vma.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vm_area_struct** %vma.addr, metadata !7952, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.declare(metadata i64* %off, metadata !7954, metadata !DIExpression()), !dbg !7955
  %0 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7956
  %vm_pgoff = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %0, i32 0, i32 13, !dbg !7957
  %1 = load i64, i64* %vm_pgoff, align 8, !dbg !7957
  %shl = shl i64 %1, 12, !dbg !7958
  store i64 %shl, i64* %off, align 8, !dbg !7955
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !7959, metadata !DIExpression()), !dbg !7960
  call void @llvm.dbg.declare(metadata i32* %buffer, metadata !7961, metadata !DIExpression()), !dbg !7962
  store i32 0, i32* %buffer, align 4, !dbg !7962
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !7963, metadata !DIExpression()), !dbg !7964
  store i32 0, i32* %plane, align 4, !dbg !7964
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7965, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.declare(metadata i64* %length, metadata !7967, metadata !DIExpression()), !dbg !7968
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7969
  %memory = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %2, i32 0, i32 18, !dbg !7971
  %3 = load i32, i32* %memory, align 8, !dbg !7971
  %cmp = icmp ne i32 %3, 1, !dbg !7972
  br i1 %cmp, label %if.then, label %if.end3, !dbg !7973

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !7974

do.body:                                          ; preds = %if.then
  %4 = load i32, i32* @debug, align 4, !dbg !7976
  %cmp1 = icmp sge i32 %4, 1, !dbg !7976
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !7979

if.then2:                                         ; preds = %do.body
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7976
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %5, i32 0, i32 31, !dbg !7976
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !7976
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.33, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.vb2_mmap, i64 0, i64 0)) #11, !dbg !7976
  br label %if.end, !dbg !7976

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !7979

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7980
  br label %return, !dbg !7980

if.end3:                                          ; preds = %entry
  %6 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7981
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %6, i32 0, i32 8, !dbg !7983
  %7 = load i64, i64* %vm_flags, align 8, !dbg !7983
  %and = and i64 %7, 8, !dbg !7984
  %tobool = icmp ne i64 %and, 0, !dbg !7984
  br i1 %tobool, label %if.end13, label %if.then4, !dbg !7985

if.then4:                                         ; preds = %if.end3
  br label %do.body5, !dbg !7986

do.body5:                                         ; preds = %if.then4
  %8 = load i32, i32* @debug, align 4, !dbg !7988
  %cmp6 = icmp sge i32 %8, 1, !dbg !7988
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !7991

if.then7:                                         ; preds = %do.body5
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7988
  %name8 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %9, i32 0, i32 31, !dbg !7988
  %arraydecay9 = getelementptr inbounds [32 x i8], [32 x i8]* %name8, i64 0, i64 0, !dbg !7988
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.43, i64 0, i64 0), i8* %arraydecay9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.vb2_mmap, i64 0, i64 0)) #11, !dbg !7988
  br label %if.end11, !dbg !7988

if.end11:                                         ; preds = %if.then7, %do.body5
  br label %do.end12, !dbg !7991

do.end12:                                         ; preds = %if.end11
  store i32 -22, i32* %retval, align 4, !dbg !7992
  br label %return, !dbg !7992

if.end13:                                         ; preds = %if.end3
  %10 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !7993
  %is_output = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %10, i32 0, i32 28, !dbg !7995
  %bf.load = load i16, i16* %is_output, align 8, !dbg !7995
  %bf.lshr = lshr i16 %bf.load, 6, !dbg !7995
  %bf.clear = and i16 %bf.lshr, 1, !dbg !7995
  %bf.cast = zext i16 %bf.clear to i32, !dbg !7995
  %tobool14 = icmp ne i32 %bf.cast, 0, !dbg !7993
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !7996

if.then15:                                        ; preds = %if.end13
  %11 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !7997
  %vm_flags16 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %11, i32 0, i32 8, !dbg !8000
  %12 = load i64, i64* %vm_flags16, align 8, !dbg !8000
  %and17 = and i64 %12, 2, !dbg !8001
  %tobool18 = icmp ne i64 %and17, 0, !dbg !8001
  br i1 %tobool18, label %if.end28, label %if.then19, !dbg !8002

if.then19:                                        ; preds = %if.then15
  br label %do.body20, !dbg !8003

do.body20:                                        ; preds = %if.then19
  %13 = load i32, i32* @debug, align 4, !dbg !8005
  %cmp21 = icmp sge i32 %13, 1, !dbg !8005
  br i1 %cmp21, label %if.then22, label %if.end26, !dbg !8008

if.then22:                                        ; preds = %do.body20
  %14 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8005
  %name23 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %14, i32 0, i32 31, !dbg !8005
  %arraydecay24 = getelementptr inbounds [32 x i8], [32 x i8]* %name23, i64 0, i64 0, !dbg !8005
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.44, i64 0, i64 0), i8* %arraydecay24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.vb2_mmap, i64 0, i64 0)) #11, !dbg !8005
  br label %if.end26, !dbg !8005

if.end26:                                         ; preds = %if.then22, %do.body20
  br label %do.end27, !dbg !8008

do.end27:                                         ; preds = %if.end26
  store i32 -22, i32* %retval, align 4, !dbg !8009
  br label %return, !dbg !8009

if.end28:                                         ; preds = %if.then15
  br label %if.end42, !dbg !8010

if.else:                                          ; preds = %if.end13
  %15 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !8011
  %vm_flags29 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %15, i32 0, i32 8, !dbg !8014
  %16 = load i64, i64* %vm_flags29, align 8, !dbg !8014
  %and30 = and i64 %16, 1, !dbg !8015
  %tobool31 = icmp ne i64 %and30, 0, !dbg !8015
  br i1 %tobool31, label %if.end41, label %if.then32, !dbg !8016

if.then32:                                        ; preds = %if.else
  br label %do.body33, !dbg !8017

do.body33:                                        ; preds = %if.then32
  %17 = load i32, i32* @debug, align 4, !dbg !8019
  %cmp34 = icmp sge i32 %17, 1, !dbg !8019
  br i1 %cmp34, label %if.then35, label %if.end39, !dbg !8022

if.then35:                                        ; preds = %do.body33
  %18 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8019
  %name36 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %18, i32 0, i32 31, !dbg !8019
  %arraydecay37 = getelementptr inbounds [32 x i8], [32 x i8]* %name36, i64 0, i64 0, !dbg !8019
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.45, i64 0, i64 0), i8* %arraydecay37, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.vb2_mmap, i64 0, i64 0)) #11, !dbg !8019
  br label %if.end39, !dbg !8019

if.end39:                                         ; preds = %if.then35, %do.body33
  br label %do.end40, !dbg !8022

do.end40:                                         ; preds = %if.end39
  store i32 -22, i32* %retval, align 4, !dbg !8023
  br label %return, !dbg !8023

if.end41:                                         ; preds = %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end28
  %19 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8024
  %mmap_lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %19, i32 0, i32 17, !dbg !8025
  call void @mutex_lock(%struct.mutex* %mmap_lock) #10, !dbg !8026
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8027
  %call43 = call zeroext i1 @vb2_fileio_is_active(%struct.vb2_queue* %20) #10, !dbg !8029
  br i1 %call43, label %if.then44, label %if.end53, !dbg !8030

if.then44:                                        ; preds = %if.end42
  br label %do.body45, !dbg !8031

do.body45:                                        ; preds = %if.then44
  %21 = load i32, i32* @debug, align 4, !dbg !8033
  %cmp46 = icmp sge i32 %21, 1, !dbg !8033
  br i1 %cmp46, label %if.then47, label %if.end51, !dbg !8036

if.then47:                                        ; preds = %do.body45
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8033
  %name48 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %22, i32 0, i32 31, !dbg !8033
  %arraydecay49 = getelementptr inbounds [32 x i8], [32 x i8]* %name48, i64 0, i64 0, !dbg !8033
  %call50 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.46, i64 0, i64 0), i8* %arraydecay49, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.vb2_mmap, i64 0, i64 0)) #11, !dbg !8033
  br label %if.end51, !dbg !8033

if.end51:                                         ; preds = %if.then47, %do.body45
  br label %do.end52, !dbg !8036

do.end52:                                         ; preds = %if.end51
  store i32 -16, i32* %ret, align 4, !dbg !8037
  br label %unlock, !dbg !8038

if.end53:                                         ; preds = %if.end42
  %23 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8039
  %24 = load i64, i64* %off, align 8, !dbg !8040
  %call54 = call i32 @__find_plane_by_offset(%struct.vb2_queue* %23, i64 %24, i32* %buffer, i32* %plane) #10, !dbg !8041
  store i32 %call54, i32* %ret, align 4, !dbg !8042
  %25 = load i32, i32* %ret, align 4, !dbg !8043
  %tobool55 = icmp ne i32 %25, 0, !dbg !8043
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !8045

if.then56:                                        ; preds = %if.end53
  br label %unlock, !dbg !8046

if.end57:                                         ; preds = %if.end53
  %26 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8047
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %26, i32 0, i32 20, !dbg !8048
  %27 = load i32, i32* %buffer, align 4, !dbg !8049
  %idxprom = zext i32 %27 to i64, !dbg !8047
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !8047
  %28 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !8047
  store %struct.vb2_buffer* %28, %struct.vb2_buffer** %vb, align 8, !dbg !8050
  %29 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !8051
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %29, i32 0, i32 10, !dbg !8051
  %30 = load i32, i32* %plane, align 4, !dbg !8051
  %idxprom58 = zext i32 %30 to i64, !dbg !8051
  %arrayidx59 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom58, !dbg !8051
  %length60 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx59, i32 0, i32 4, !dbg !8051
  %31 = load i32, i32* %length60, align 8, !dbg !8051
  %add = add i32 %31, 4095, !dbg !8051
  %and61 = and i32 %add, -4096, !dbg !8051
  %conv = zext i32 %and61 to i64, !dbg !8051
  store i64 %conv, i64* %length, align 8, !dbg !8052
  %32 = load i64, i64* %length, align 8, !dbg !8053
  %33 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !8055
  %vm_end = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %33, i32 0, i32 1, !dbg !8056
  %34 = load i64, i64* %vm_end, align 8, !dbg !8056
  %35 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !8057
  %vm_start = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %35, i32 0, i32 0, !dbg !8058
  %36 = load i64, i64* %vm_start, align 8, !dbg !8058
  %sub = sub i64 %34, %36, !dbg !8059
  %cmp62 = icmp ult i64 %32, %sub, !dbg !8060
  br i1 %cmp62, label %if.then64, label %if.end74, !dbg !8061

if.then64:                                        ; preds = %if.end57
  br label %do.body65, !dbg !8062

do.body65:                                        ; preds = %if.then64
  %37 = load i32, i32* @debug, align 4, !dbg !8064
  %cmp66 = icmp sge i32 %37, 1, !dbg !8064
  br i1 %cmp66, label %if.then68, label %if.end72, !dbg !8067

if.then68:                                        ; preds = %do.body65
  %38 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8064
  %name69 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %38, i32 0, i32 31, !dbg !8064
  %arraydecay70 = getelementptr inbounds [32 x i8], [32 x i8]* %name69, i64 0, i64 0, !dbg !8064
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.47, i64 0, i64 0), i8* %arraydecay70, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.vb2_mmap, i64 0, i64 0)) #11, !dbg !8064
  br label %if.end72, !dbg !8064

if.end72:                                         ; preds = %if.then68, %do.body65
  br label %do.end73, !dbg !8067

do.end73:                                         ; preds = %if.end72
  store i32 -22, i32* %ret, align 4, !dbg !8068
  br label %unlock, !dbg !8069

if.end74:                                         ; preds = %if.end57
  %39 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !8070
  %vm_pgoff75 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %39, i32 0, i32 13, !dbg !8071
  store i64 0, i64* %vm_pgoff75, align 8, !dbg !8072
  %40 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !8073
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %40, i32 0, i32 0, !dbg !8073
  %41 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !8073
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %41, i32 0, i32 8, !dbg !8073
  %42 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !8073
  %mmap = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %42, i32 0, i32 14, !dbg !8073
  %43 = load i32 (i8*, %struct.vm_area_struct*)*, i32 (i8*, %struct.vm_area_struct*)** %mmap, align 8, !dbg !8073
  %tobool76 = icmp ne i32 (i8*, %struct.vm_area_struct*)* %43, null, !dbg !8073
  br i1 %tobool76, label %cond.true, label %cond.false, !dbg !8073

cond.true:                                        ; preds = %if.end74
  %44 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !8073
  %vb2_queue77 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %44, i32 0, i32 0, !dbg !8073
  %45 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue77, align 8, !dbg !8073
  %mem_ops78 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %45, i32 0, i32 8, !dbg !8073
  %46 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops78, align 8, !dbg !8073
  %mmap79 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %46, i32 0, i32 14, !dbg !8073
  %47 = load i32 (i8*, %struct.vm_area_struct*)*, i32 (i8*, %struct.vm_area_struct*)** %mmap79, align 8, !dbg !8073
  %48 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !8073
  %planes80 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %48, i32 0, i32 10, !dbg !8073
  %49 = load i32, i32* %plane, align 4, !dbg !8073
  %idxprom81 = zext i32 %49 to i64, !dbg !8073
  %arrayidx82 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes80, i64 0, i64 %idxprom81, !dbg !8073
  %mem_priv = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx82, i32 0, i32 0, !dbg !8073
  %50 = load i8*, i8** %mem_priv, align 8, !dbg !8073
  %51 = load %struct.vm_area_struct*, %struct.vm_area_struct** %vma.addr, align 8, !dbg !8073
  %call83 = call i32 %47(i8* %50, %struct.vm_area_struct* %51) #10, !dbg !8073
  br label %cond.end, !dbg !8073

cond.false:                                       ; preds = %if.end74
  br label %cond.end, !dbg !8073

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call83, %cond.true ], [ 0, %cond.false ], !dbg !8073
  store i32 %cond, i32* %ret, align 4, !dbg !8074
  br label %unlock, !dbg !8075

unlock:                                           ; preds = %cond.end, %do.end73, %if.then56, %do.end52
  call void @llvm.dbg.label(metadata !8076), !dbg !8077
  %52 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8078
  %mmap_lock84 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %52, i32 0, i32 17, !dbg !8079
  call void @mutex_unlock(%struct.mutex* %mmap_lock84) #10, !dbg !8080
  %53 = load i32, i32* %ret, align 4, !dbg !8081
  %tobool85 = icmp ne i32 %53, 0, !dbg !8081
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !8083

if.then86:                                        ; preds = %unlock
  %54 = load i32, i32* %ret, align 4, !dbg !8084
  store i32 %54, i32* %retval, align 4, !dbg !8085
  br label %return, !dbg !8085

if.end87:                                         ; preds = %unlock
  br label %do.body88, !dbg !8086

do.body88:                                        ; preds = %if.end87
  %55 = load i32, i32* @debug, align 4, !dbg !8087
  %cmp89 = icmp sge i32 %55, 3, !dbg !8087
  br i1 %cmp89, label %if.then91, label %if.end95, !dbg !8090

if.then91:                                        ; preds = %do.body88
  %56 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8087
  %name92 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %56, i32 0, i32 31, !dbg !8087
  %arraydecay93 = getelementptr inbounds [32 x i8], [32 x i8]* %name92, i64 0, i64 0, !dbg !8087
  %57 = load i32, i32* %buffer, align 4, !dbg !8087
  %58 = load i32, i32* %plane, align 4, !dbg !8087
  %call94 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.48, i64 0, i64 0), i8* %arraydecay93, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.vb2_mmap, i64 0, i64 0), i32 %57, i32 %58) #11, !dbg !8087
  br label %if.end95, !dbg !8087

if.end95:                                         ; preds = %if.then91, %do.body88
  br label %do.end96, !dbg !8090

do.end96:                                         ; preds = %if.end95
  store i32 0, i32* %retval, align 4, !dbg !8091
  br label %return, !dbg !8091

return:                                           ; preds = %do.end96, %if.then86, %do.end40, %do.end27, %do.end12, %do.end
  %59 = load i32, i32* %retval, align 4, !dbg !8092
  ret i32 %59, !dbg !8092
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__find_plane_by_offset(%struct.vb2_queue* %q, i64 %off, i32* %_buffer, i32* %_plane) #0 !dbg !8093 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %off.addr = alloca i64, align 8
  %_buffer.addr = alloca i32*, align 8
  %_plane.addr = alloca i32*, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %buffer = alloca i32, align 4
  %plane = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !8096, metadata !DIExpression()), !dbg !8097
  store i64 %off, i64* %off.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %off.addr, metadata !8098, metadata !DIExpression()), !dbg !8099
  store i32* %_buffer, i32** %_buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %_buffer.addr, metadata !8100, metadata !DIExpression()), !dbg !8101
  store i32* %_plane, i32** %_plane.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %_plane.addr, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !8104, metadata !DIExpression()), !dbg !8105
  call void @llvm.dbg.declare(metadata i32* %buffer, metadata !8106, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !8108, metadata !DIExpression()), !dbg !8109
  store i32 0, i32* %buffer, align 4, !dbg !8110
  br label %for.cond, !dbg !8112

for.cond:                                         ; preds = %for.inc8, %entry
  %0 = load i32, i32* %buffer, align 4, !dbg !8113
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8115
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 21, !dbg !8116
  %2 = load i32, i32* %num_buffers, align 8, !dbg !8116
  %cmp = icmp ult i32 %0, %2, !dbg !8117
  br i1 %cmp, label %for.body, label %for.end10, !dbg !8118

for.body:                                         ; preds = %for.cond
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8119
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %3, i32 0, i32 20, !dbg !8121
  %4 = load i32, i32* %buffer, align 4, !dbg !8122
  %idxprom = zext i32 %4 to i64, !dbg !8119
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !8119
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !8119
  store %struct.vb2_buffer* %5, %struct.vb2_buffer** %vb, align 8, !dbg !8123
  store i32 0, i32* %plane, align 4, !dbg !8124
  br label %for.cond1, !dbg !8126

for.cond1:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %plane, align 4, !dbg !8127
  %7 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !8129
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %7, i32 0, i32 4, !dbg !8130
  %8 = load i32, i32* %num_planes, align 4, !dbg !8130
  %cmp2 = icmp ult i32 %6, %8, !dbg !8131
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !8132

for.body3:                                        ; preds = %for.cond1
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !8133
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 10, !dbg !8136
  %10 = load i32, i32* %plane, align 4, !dbg !8137
  %idxprom4 = zext i32 %10 to i64, !dbg !8133
  %arrayidx5 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom4, !dbg !8133
  %m = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx5, i32 0, i32 6, !dbg !8138
  %offset = bitcast %union.anon.72* %m to i32*, !dbg !8139
  %11 = load i32, i32* %offset, align 8, !dbg !8139
  %conv = zext i32 %11 to i64, !dbg !8133
  %12 = load i64, i64* %off.addr, align 8, !dbg !8140
  %cmp6 = icmp eq i64 %conv, %12, !dbg !8141
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8142

if.then:                                          ; preds = %for.body3
  %13 = load i32, i32* %buffer, align 4, !dbg !8143
  %14 = load i32*, i32** %_buffer.addr, align 8, !dbg !8145
  store i32 %13, i32* %14, align 4, !dbg !8146
  %15 = load i32, i32* %plane, align 4, !dbg !8147
  %16 = load i32*, i32** %_plane.addr, align 8, !dbg !8148
  store i32 %15, i32* %16, align 4, !dbg !8149
  store i32 0, i32* %retval, align 4, !dbg !8150
  br label %return, !dbg !8150

if.end:                                           ; preds = %for.body3
  br label %for.inc, !dbg !8151

for.inc:                                          ; preds = %if.end
  %17 = load i32, i32* %plane, align 4, !dbg !8152
  %inc = add i32 %17, 1, !dbg !8152
  store i32 %inc, i32* %plane, align 4, !dbg !8152
  br label %for.cond1, !dbg !8153, !llvm.loop !8154

for.end:                                          ; preds = %for.cond1
  br label %for.inc8, !dbg !8156

for.inc8:                                         ; preds = %for.end
  %18 = load i32, i32* %buffer, align 4, !dbg !8157
  %inc9 = add i32 %18, 1, !dbg !8157
  store i32 %inc9, i32* %buffer, align 4, !dbg !8157
  br label %for.cond, !dbg !8158, !llvm.loop !8159

for.end10:                                        ; preds = %for.cond
  store i32 -22, i32* %retval, align 4, !dbg !8161
  br label %return, !dbg !8161

return:                                           ; preds = %for.end10, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !8162
  ret i32 %19, !dbg !8162
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_core_queue_init(%struct.vb2_queue* %q) #0 !dbg !4608 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5208, metadata !DIExpression()), !dbg !8163
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on22 = alloca i32, align 4
  %tmp47 = alloca i64, align 8
  %__ret_warn_on56 = alloca i32, align 4
  %tmp81 = alloca i64, align 8
  %__ret_warn_on90 = alloca i32, align 4
  %tmp115 = alloca i64, align 8
  %__ret_warn_on124 = alloca i32, align 4
  %tmp149 = alloca i64, align 8
  %__ret_warn_on158 = alloca i32, align 4
  %tmp184 = alloca i64, align 8
  %__ret_warn_on193 = alloca i32, align 4
  %tmp219 = alloca i64, align 8
  %__ret_warn_on229 = alloca i32, align 4
  %tmp259 = alloca i64, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !8166, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8168, metadata !DIExpression()), !dbg !8171
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8171
  %tobool = icmp ne %struct.vb2_queue* %0, null, !dbg !8171
  %lnot = xor i1 %tobool, true, !dbg !8171
  %lnot1 = xor i1 %lnot, true, !dbg !8171
  %lnot2 = xor i1 %lnot1, true, !dbg !8171
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8171
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8171
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !8172
  %tobool3 = icmp ne i32 %1, 0, !dbg !8172
  %lnot4 = xor i1 %tobool3, true, !dbg !8172
  %lnot6 = xor i1 %lnot4, true, !dbg !8172
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !8172
  %conv = sext i32 %lnot.ext7 to i64, !dbg !8172
  %tobool8 = icmp ne i64 %conv, 0, !dbg !8172
  br i1 %tobool8, label %if.then, label %if.end, !dbg !8171

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8172

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !8174

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !8176

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !8174

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 2322, i32 2305, i64 12) #6, !dbg !8178, !srcloc !8180
  br label %do.end11, !dbg !8178

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 298) #6, !dbg !8181, !srcloc !8183
  br label %do.body12, !dbg !8174

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !8184

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !8174

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !8174

if.end:                                           ; preds = %do.end14, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !8171
  %tobool15 = icmp ne i32 %2, 0, !dbg !8171
  %lnot16 = xor i1 %tobool15, true, !dbg !8171
  %lnot18 = xor i1 %lnot16, true, !dbg !8171
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8171
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8171
  store i64 %conv20, i64* %tmp, align 8, !dbg !8172
  %3 = load i64, i64* %tmp, align 8, !dbg !8171
  %tobool21 = icmp ne i64 %3, 0, !dbg !8186
  br i1 %tobool21, label %if.then227, label %lor.lhs.false, !dbg !8187

lor.lhs.false:                                    ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on22, metadata !8188, metadata !DIExpression()), !dbg !8190
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8190
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 7, !dbg !8190
  %5 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !8190
  %tobool23 = icmp ne %struct.vb2_ops* %5, null, !dbg !8190
  %lnot24 = xor i1 %tobool23, true, !dbg !8190
  %lnot26 = xor i1 %lnot24, true, !dbg !8190
  %lnot28 = xor i1 %lnot26, true, !dbg !8190
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !8190
  store i32 %lnot.ext29, i32* %__ret_warn_on22, align 4, !dbg !8190
  %6 = load i32, i32* %__ret_warn_on22, align 4, !dbg !8191
  %tobool30 = icmp ne i32 %6, 0, !dbg !8191
  %lnot31 = xor i1 %tobool30, true, !dbg !8191
  %lnot33 = xor i1 %lnot31, true, !dbg !8191
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !8191
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !8191
  %tobool36 = icmp ne i64 %conv35, 0, !dbg !8191
  br i1 %tobool36, label %if.then37, label %if.end46, !dbg !8190

if.then37:                                        ; preds = %lor.lhs.false
  br label %do.body38, !dbg !8191

do.body38:                                        ; preds = %if.then37
  br label %do.body39, !dbg !8193

do.body39:                                        ; preds = %do.body38
  br label %do.end40, !dbg !8195

do.end40:                                         ; preds = %do.body39
  br label %do.body41, !dbg !8193

do.body41:                                        ; preds = %do.end40
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 2323, i32 2305, i64 12) #6, !dbg !8197, !srcloc !8199
  br label %do.end42, !dbg !8197

do.end42:                                         ; preds = %do.body41
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 299) #6, !dbg !8200, !srcloc !8202
  br label %do.body43, !dbg !8193

do.body43:                                        ; preds = %do.end42
  br label %do.end44, !dbg !8203

do.end44:                                         ; preds = %do.body43
  br label %do.end45, !dbg !8193

do.end45:                                         ; preds = %do.end44
  br label %if.end46, !dbg !8193

if.end46:                                         ; preds = %do.end45, %lor.lhs.false
  %7 = load i32, i32* %__ret_warn_on22, align 4, !dbg !8190
  %tobool48 = icmp ne i32 %7, 0, !dbg !8190
  %lnot49 = xor i1 %tobool48, true, !dbg !8190
  %lnot51 = xor i1 %lnot49, true, !dbg !8190
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !8190
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !8190
  store i64 %conv53, i64* %tmp47, align 8, !dbg !8191
  %8 = load i64, i64* %tmp47, align 8, !dbg !8190
  %tobool54 = icmp ne i64 %8, 0, !dbg !8205
  br i1 %tobool54, label %if.then227, label %lor.lhs.false55, !dbg !8206

lor.lhs.false55:                                  ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on56, metadata !8207, metadata !DIExpression()), !dbg !8209
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8209
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %9, i32 0, i32 8, !dbg !8209
  %10 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !8209
  %tobool57 = icmp ne %struct.vb2_mem_ops* %10, null, !dbg !8209
  %lnot58 = xor i1 %tobool57, true, !dbg !8209
  %lnot60 = xor i1 %lnot58, true, !dbg !8209
  %lnot62 = xor i1 %lnot60, true, !dbg !8209
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !8209
  store i32 %lnot.ext63, i32* %__ret_warn_on56, align 4, !dbg !8209
  %11 = load i32, i32* %__ret_warn_on56, align 4, !dbg !8210
  %tobool64 = icmp ne i32 %11, 0, !dbg !8210
  %lnot65 = xor i1 %tobool64, true, !dbg !8210
  %lnot67 = xor i1 %lnot65, true, !dbg !8210
  %lnot.ext68 = zext i1 %lnot67 to i32, !dbg !8210
  %conv69 = sext i32 %lnot.ext68 to i64, !dbg !8210
  %tobool70 = icmp ne i64 %conv69, 0, !dbg !8210
  br i1 %tobool70, label %if.then71, label %if.end80, !dbg !8209

if.then71:                                        ; preds = %lor.lhs.false55
  br label %do.body72, !dbg !8210

do.body72:                                        ; preds = %if.then71
  br label %do.body73, !dbg !8212

do.body73:                                        ; preds = %do.body72
  br label %do.end74, !dbg !8214

do.end74:                                         ; preds = %do.body73
  br label %do.body75, !dbg !8212

do.body75:                                        ; preds = %do.end74
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 2324, i32 2305, i64 12) #6, !dbg !8216, !srcloc !8218
  br label %do.end76, !dbg !8216

do.end76:                                         ; preds = %do.body75
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 300) #6, !dbg !8219, !srcloc !8221
  br label %do.body77, !dbg !8212

do.body77:                                        ; preds = %do.end76
  br label %do.end78, !dbg !8222

do.end78:                                         ; preds = %do.body77
  br label %do.end79, !dbg !8212

do.end79:                                         ; preds = %do.end78
  br label %if.end80, !dbg !8212

if.end80:                                         ; preds = %do.end79, %lor.lhs.false55
  %12 = load i32, i32* %__ret_warn_on56, align 4, !dbg !8209
  %tobool82 = icmp ne i32 %12, 0, !dbg !8209
  %lnot83 = xor i1 %tobool82, true, !dbg !8209
  %lnot85 = xor i1 %lnot83, true, !dbg !8209
  %lnot.ext86 = zext i1 %lnot85 to i32, !dbg !8209
  %conv87 = sext i32 %lnot.ext86 to i64, !dbg !8209
  store i64 %conv87, i64* %tmp81, align 8, !dbg !8210
  %13 = load i64, i64* %tmp81, align 8, !dbg !8209
  %tobool88 = icmp ne i64 %13, 0, !dbg !8224
  br i1 %tobool88, label %if.then227, label %lor.lhs.false89, !dbg !8225

lor.lhs.false89:                                  ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on90, metadata !8226, metadata !DIExpression()), !dbg !8228
  %14 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8228
  %type = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %14, i32 0, i32 0, !dbg !8228
  %15 = load i32, i32* %type, align 8, !dbg !8228
  %tobool91 = icmp ne i32 %15, 0, !dbg !8228
  %lnot92 = xor i1 %tobool91, true, !dbg !8228
  %lnot94 = xor i1 %lnot92, true, !dbg !8228
  %lnot96 = xor i1 %lnot94, true, !dbg !8228
  %lnot.ext97 = zext i1 %lnot96 to i32, !dbg !8228
  store i32 %lnot.ext97, i32* %__ret_warn_on90, align 4, !dbg !8228
  %16 = load i32, i32* %__ret_warn_on90, align 4, !dbg !8229
  %tobool98 = icmp ne i32 %16, 0, !dbg !8229
  %lnot99 = xor i1 %tobool98, true, !dbg !8229
  %lnot101 = xor i1 %lnot99, true, !dbg !8229
  %lnot.ext102 = zext i1 %lnot101 to i32, !dbg !8229
  %conv103 = sext i32 %lnot.ext102 to i64, !dbg !8229
  %tobool104 = icmp ne i64 %conv103, 0, !dbg !8229
  br i1 %tobool104, label %if.then105, label %if.end114, !dbg !8228

if.then105:                                       ; preds = %lor.lhs.false89
  br label %do.body106, !dbg !8229

do.body106:                                       ; preds = %if.then105
  br label %do.body107, !dbg !8231

do.body107:                                       ; preds = %do.body106
  br label %do.end108, !dbg !8233

do.end108:                                        ; preds = %do.body107
  br label %do.body109, !dbg !8231

do.body109:                                       ; preds = %do.end108
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 2325, i32 2305, i64 12) #6, !dbg !8235, !srcloc !8237
  br label %do.end110, !dbg !8235

do.end110:                                        ; preds = %do.body109
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 301) #6, !dbg !8238, !srcloc !8240
  br label %do.body111, !dbg !8231

do.body111:                                       ; preds = %do.end110
  br label %do.end112, !dbg !8241

do.end112:                                        ; preds = %do.body111
  br label %do.end113, !dbg !8231

do.end113:                                        ; preds = %do.end112
  br label %if.end114, !dbg !8231

if.end114:                                        ; preds = %do.end113, %lor.lhs.false89
  %17 = load i32, i32* %__ret_warn_on90, align 4, !dbg !8228
  %tobool116 = icmp ne i32 %17, 0, !dbg !8228
  %lnot117 = xor i1 %tobool116, true, !dbg !8228
  %lnot119 = xor i1 %lnot117, true, !dbg !8228
  %lnot.ext120 = zext i1 %lnot119 to i32, !dbg !8228
  %conv121 = sext i32 %lnot.ext120 to i64, !dbg !8228
  store i64 %conv121, i64* %tmp115, align 8, !dbg !8229
  %18 = load i64, i64* %tmp115, align 8, !dbg !8228
  %tobool122 = icmp ne i64 %18, 0, !dbg !8243
  br i1 %tobool122, label %if.then227, label %lor.lhs.false123, !dbg !8244

lor.lhs.false123:                                 ; preds = %if.end114
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on124, metadata !8245, metadata !DIExpression()), !dbg !8247
  %19 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8247
  %io_modes = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %19, i32 0, i32 1, !dbg !8247
  %20 = load i32, i32* %io_modes, align 4, !dbg !8247
  %tobool125 = icmp ne i32 %20, 0, !dbg !8247
  %lnot126 = xor i1 %tobool125, true, !dbg !8247
  %lnot128 = xor i1 %lnot126, true, !dbg !8247
  %lnot130 = xor i1 %lnot128, true, !dbg !8247
  %lnot.ext131 = zext i1 %lnot130 to i32, !dbg !8247
  store i32 %lnot.ext131, i32* %__ret_warn_on124, align 4, !dbg !8247
  %21 = load i32, i32* %__ret_warn_on124, align 4, !dbg !8248
  %tobool132 = icmp ne i32 %21, 0, !dbg !8248
  %lnot133 = xor i1 %tobool132, true, !dbg !8248
  %lnot135 = xor i1 %lnot133, true, !dbg !8248
  %lnot.ext136 = zext i1 %lnot135 to i32, !dbg !8248
  %conv137 = sext i32 %lnot.ext136 to i64, !dbg !8248
  %tobool138 = icmp ne i64 %conv137, 0, !dbg !8248
  br i1 %tobool138, label %if.then139, label %if.end148, !dbg !8247

if.then139:                                       ; preds = %lor.lhs.false123
  br label %do.body140, !dbg !8248

do.body140:                                       ; preds = %if.then139
  br label %do.body141, !dbg !8250

do.body141:                                       ; preds = %do.body140
  br label %do.end142, !dbg !8252

do.end142:                                        ; preds = %do.body141
  br label %do.body143, !dbg !8250

do.body143:                                       ; preds = %do.end142
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 2326, i32 2305, i64 12) #6, !dbg !8254, !srcloc !8256
  br label %do.end144, !dbg !8254

do.end144:                                        ; preds = %do.body143
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 302) #6, !dbg !8257, !srcloc !8259
  br label %do.body145, !dbg !8250

do.body145:                                       ; preds = %do.end144
  br label %do.end146, !dbg !8260

do.end146:                                        ; preds = %do.body145
  br label %do.end147, !dbg !8250

do.end147:                                        ; preds = %do.end146
  br label %if.end148, !dbg !8250

if.end148:                                        ; preds = %do.end147, %lor.lhs.false123
  %22 = load i32, i32* %__ret_warn_on124, align 4, !dbg !8247
  %tobool150 = icmp ne i32 %22, 0, !dbg !8247
  %lnot151 = xor i1 %tobool150, true, !dbg !8247
  %lnot153 = xor i1 %lnot151, true, !dbg !8247
  %lnot.ext154 = zext i1 %lnot153 to i32, !dbg !8247
  %conv155 = sext i32 %lnot.ext154 to i64, !dbg !8247
  store i64 %conv155, i64* %tmp149, align 8, !dbg !8248
  %23 = load i64, i64* %tmp149, align 8, !dbg !8247
  %tobool156 = icmp ne i64 %23, 0, !dbg !8262
  br i1 %tobool156, label %if.then227, label %lor.lhs.false157, !dbg !8263

lor.lhs.false157:                                 ; preds = %if.end148
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on158, metadata !8264, metadata !DIExpression()), !dbg !8266
  %24 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8266
  %ops159 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %24, i32 0, i32 7, !dbg !8266
  %25 = load %struct.vb2_ops*, %struct.vb2_ops** %ops159, align 8, !dbg !8266
  %queue_setup = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %25, i32 0, i32 0, !dbg !8266
  %26 = load i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)*, i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)** %queue_setup, align 8, !dbg !8266
  %tobool160 = icmp ne i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)* %26, null, !dbg !8266
  %lnot161 = xor i1 %tobool160, true, !dbg !8266
  %lnot163 = xor i1 %lnot161, true, !dbg !8266
  %lnot165 = xor i1 %lnot163, true, !dbg !8266
  %lnot.ext166 = zext i1 %lnot165 to i32, !dbg !8266
  store i32 %lnot.ext166, i32* %__ret_warn_on158, align 4, !dbg !8266
  %27 = load i32, i32* %__ret_warn_on158, align 4, !dbg !8267
  %tobool167 = icmp ne i32 %27, 0, !dbg !8267
  %lnot168 = xor i1 %tobool167, true, !dbg !8267
  %lnot170 = xor i1 %lnot168, true, !dbg !8267
  %lnot.ext171 = zext i1 %lnot170 to i32, !dbg !8267
  %conv172 = sext i32 %lnot.ext171 to i64, !dbg !8267
  %tobool173 = icmp ne i64 %conv172, 0, !dbg !8267
  br i1 %tobool173, label %if.then174, label %if.end183, !dbg !8266

if.then174:                                       ; preds = %lor.lhs.false157
  br label %do.body175, !dbg !8267

do.body175:                                       ; preds = %if.then174
  br label %do.body176, !dbg !8269

do.body176:                                       ; preds = %do.body175
  br label %do.end177, !dbg !8271

do.end177:                                        ; preds = %do.body176
  br label %do.body178, !dbg !8269

do.body178:                                       ; preds = %do.end177
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 2327, i32 2305, i64 12) #6, !dbg !8273, !srcloc !8275
  br label %do.end179, !dbg !8273

do.end179:                                        ; preds = %do.body178
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 303) #6, !dbg !8276, !srcloc !8278
  br label %do.body180, !dbg !8269

do.body180:                                       ; preds = %do.end179
  br label %do.end181, !dbg !8279

do.end181:                                        ; preds = %do.body180
  br label %do.end182, !dbg !8269

do.end182:                                        ; preds = %do.end181
  br label %if.end183, !dbg !8269

if.end183:                                        ; preds = %do.end182, %lor.lhs.false157
  %28 = load i32, i32* %__ret_warn_on158, align 4, !dbg !8266
  %tobool185 = icmp ne i32 %28, 0, !dbg !8266
  %lnot186 = xor i1 %tobool185, true, !dbg !8266
  %lnot188 = xor i1 %lnot186, true, !dbg !8266
  %lnot.ext189 = zext i1 %lnot188 to i32, !dbg !8266
  %conv190 = sext i32 %lnot.ext189 to i64, !dbg !8266
  store i64 %conv190, i64* %tmp184, align 8, !dbg !8267
  %29 = load i64, i64* %tmp184, align 8, !dbg !8266
  %tobool191 = icmp ne i64 %29, 0, !dbg !8281
  br i1 %tobool191, label %if.then227, label %lor.lhs.false192, !dbg !8282

lor.lhs.false192:                                 ; preds = %if.end183
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on193, metadata !8283, metadata !DIExpression()), !dbg !8285
  %30 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8285
  %ops194 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %30, i32 0, i32 7, !dbg !8285
  %31 = load %struct.vb2_ops*, %struct.vb2_ops** %ops194, align 8, !dbg !8285
  %buf_queue = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %31, i32 0, i32 10, !dbg !8285
  %32 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_queue, align 8, !dbg !8285
  %tobool195 = icmp ne void (%struct.vb2_buffer*)* %32, null, !dbg !8285
  %lnot196 = xor i1 %tobool195, true, !dbg !8285
  %lnot198 = xor i1 %lnot196, true, !dbg !8285
  %lnot200 = xor i1 %lnot198, true, !dbg !8285
  %lnot.ext201 = zext i1 %lnot200 to i32, !dbg !8285
  store i32 %lnot.ext201, i32* %__ret_warn_on193, align 4, !dbg !8285
  %33 = load i32, i32* %__ret_warn_on193, align 4, !dbg !8286
  %tobool202 = icmp ne i32 %33, 0, !dbg !8286
  %lnot203 = xor i1 %tobool202, true, !dbg !8286
  %lnot205 = xor i1 %lnot203, true, !dbg !8286
  %lnot.ext206 = zext i1 %lnot205 to i32, !dbg !8286
  %conv207 = sext i32 %lnot.ext206 to i64, !dbg !8286
  %tobool208 = icmp ne i64 %conv207, 0, !dbg !8286
  br i1 %tobool208, label %if.then209, label %if.end218, !dbg !8285

if.then209:                                       ; preds = %lor.lhs.false192
  br label %do.body210, !dbg !8286

do.body210:                                       ; preds = %if.then209
  br label %do.body211, !dbg !8288

do.body211:                                       ; preds = %do.body210
  br label %do.end212, !dbg !8290

do.end212:                                        ; preds = %do.body211
  br label %do.body213, !dbg !8288

do.body213:                                       ; preds = %do.end212
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 2328, i32 2305, i64 12) #6, !dbg !8292, !srcloc !8294
  br label %do.end214, !dbg !8292

do.end214:                                        ; preds = %do.body213
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 304) #6, !dbg !8295, !srcloc !8297
  br label %do.body215, !dbg !8288

do.body215:                                       ; preds = %do.end214
  br label %do.end216, !dbg !8298

do.end216:                                        ; preds = %do.body215
  br label %do.end217, !dbg !8288

do.end217:                                        ; preds = %do.end216
  br label %if.end218, !dbg !8288

if.end218:                                        ; preds = %do.end217, %lor.lhs.false192
  %34 = load i32, i32* %__ret_warn_on193, align 4, !dbg !8285
  %tobool220 = icmp ne i32 %34, 0, !dbg !8285
  %lnot221 = xor i1 %tobool220, true, !dbg !8285
  %lnot223 = xor i1 %lnot221, true, !dbg !8285
  %lnot.ext224 = zext i1 %lnot223 to i32, !dbg !8285
  %conv225 = sext i32 %lnot.ext224 to i64, !dbg !8285
  store i64 %conv225, i64* %tmp219, align 8, !dbg !8286
  %35 = load i64, i64* %tmp219, align 8, !dbg !8285
  %tobool226 = icmp ne i64 %35, 0, !dbg !8300
  br i1 %tobool226, label %if.then227, label %if.end228, !dbg !8301

if.then227:                                       ; preds = %if.end218, %if.end183, %if.end148, %if.end114, %if.end80, %if.end46, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8302
  br label %return, !dbg !8302

if.end228:                                        ; preds = %if.end218
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on229, metadata !8303, metadata !DIExpression()), !dbg !8306
  %36 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8306
  %requires_requests = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %36, i32 0, i32 4, !dbg !8306
  %bf.load = load i16, i16* %requires_requests, align 8, !dbg !8306
  %bf.lshr = lshr i16 %bf.load, 6, !dbg !8306
  %bf.clear = and i16 %bf.lshr, 1, !dbg !8306
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8306
  %tobool230 = icmp ne i32 %bf.cast, 0, !dbg !8306
  br i1 %tobool230, label %land.rhs, label %land.end, !dbg !8306

land.rhs:                                         ; preds = %if.end228
  %37 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8306
  %supports_requests = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %37, i32 0, i32 4, !dbg !8306
  %bf.load231 = load i16, i16* %supports_requests, align 8, !dbg !8306
  %bf.lshr232 = lshr i16 %bf.load231, 5, !dbg !8306
  %bf.clear233 = and i16 %bf.lshr232, 1, !dbg !8306
  %bf.cast234 = zext i16 %bf.clear233 to i32, !dbg !8306
  %tobool235 = icmp ne i32 %bf.cast234, 0, !dbg !8306
  %lnot236 = xor i1 %tobool235, true, !dbg !8306
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end228
  %38 = phi i1 [ false, %if.end228 ], [ %lnot236, %land.rhs ], !dbg !8307
  %lnot238 = xor i1 %38, true, !dbg !8306
  %lnot240 = xor i1 %lnot238, true, !dbg !8306
  %lnot.ext241 = zext i1 %lnot240 to i32, !dbg !8306
  store i32 %lnot.ext241, i32* %__ret_warn_on229, align 4, !dbg !8306
  %39 = load i32, i32* %__ret_warn_on229, align 4, !dbg !8308
  %tobool242 = icmp ne i32 %39, 0, !dbg !8308
  %lnot243 = xor i1 %tobool242, true, !dbg !8308
  %lnot245 = xor i1 %lnot243, true, !dbg !8308
  %lnot.ext246 = zext i1 %lnot245 to i32, !dbg !8308
  %conv247 = sext i32 %lnot.ext246 to i64, !dbg !8308
  %tobool248 = icmp ne i64 %conv247, 0, !dbg !8308
  br i1 %tobool248, label %if.then249, label %if.end258, !dbg !8306

if.then249:                                       ; preds = %land.end
  br label %do.body250, !dbg !8308

do.body250:                                       ; preds = %if.then249
  br label %do.body251, !dbg !8310

do.body251:                                       ; preds = %do.body250
  br label %do.end252, !dbg !8312

do.end252:                                        ; preds = %do.body251
  br label %do.body253, !dbg !8310

do.body253:                                       ; preds = %do.end252
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 2331, i32 2305, i64 12) #6, !dbg !8314, !srcloc !8316
  br label %do.end254, !dbg !8314

do.end254:                                        ; preds = %do.body253
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 305) #6, !dbg !8317, !srcloc !8319
  br label %do.body255, !dbg !8310

do.body255:                                       ; preds = %do.end254
  br label %do.end256, !dbg !8320

do.end256:                                        ; preds = %do.body255
  br label %do.end257, !dbg !8310

do.end257:                                        ; preds = %do.end256
  br label %if.end258, !dbg !8310

if.end258:                                        ; preds = %do.end257, %land.end
  %40 = load i32, i32* %__ret_warn_on229, align 4, !dbg !8306
  %tobool260 = icmp ne i32 %40, 0, !dbg !8306
  %lnot261 = xor i1 %tobool260, true, !dbg !8306
  %lnot263 = xor i1 %lnot261, true, !dbg !8306
  %lnot.ext264 = zext i1 %lnot263 to i32, !dbg !8306
  %conv265 = sext i32 %lnot.ext264 to i64, !dbg !8306
  store i64 %conv265, i64* %tmp259, align 8, !dbg !8308
  %41 = load i64, i64* %tmp259, align 8, !dbg !8306
  %tobool266 = icmp ne i64 %41, 0, !dbg !8322
  br i1 %tobool266, label %if.then267, label %if.end268, !dbg !8323

if.then267:                                       ; preds = %if.end258
  store i32 -22, i32* %retval, align 4, !dbg !8324
  br label %return, !dbg !8324

if.end268:                                        ; preds = %if.end258
  %42 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8325
  %queued_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %42, i32 0, i32 22, !dbg !8326
  call void @INIT_LIST_HEAD(%struct.list_head* %queued_list) #10, !dbg !8327
  %43 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8328
  %done_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %43, i32 0, i32 25, !dbg !8329
  call void @INIT_LIST_HEAD(%struct.list_head* %done_list) #10, !dbg !8330
  br label %do.body269, !dbg !8331

do.body269:                                       ; preds = %if.end268
  %44 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8332
  %done_lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %44, i32 0, i32 26, !dbg !8332
  store %struct.spinlock* %done_lock, %struct.spinlock** %lock.addr.i, align 8
  %45 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8333
  %46 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %45, i32 0, i32 0, !dbg !8334
  %rlock.i = bitcast %union.anon.4* %46 to %struct.raw_spinlock*, !dbg !8334
  %47 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8332
  %done_lock270 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %47, i32 0, i32 26, !dbg !8332
  %48 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8332
  %rlock = bitcast %union.anon.4* %48 to %struct.raw_spinlock*, !dbg !8332
  %49 = bitcast %struct.spinlock* %done_lock270 to i8*, !dbg !8332
  %50 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 1 %50, i64 0, i1 false), !dbg !8332
  br label %do.end271, !dbg !8332

do.end271:                                        ; preds = %do.body269
  br label %do.body272, !dbg !8335

do.body272:                                       ; preds = %do.end271
  %51 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8336
  %mmap_lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %51, i32 0, i32 17, !dbg !8336
  call void @__mutex_init(%struct.mutex* %mmap_lock, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i64 0, i64 0), %struct.lock_class_key* @vb2_core_queue_init.__key) #10, !dbg !8336
  br label %do.end273, !dbg !8336

do.end273:                                        ; preds = %do.body272
  br label %do.body274, !dbg !8338

do.body274:                                       ; preds = %do.end273
  %52 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8339
  %done_wq = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %52, i32 0, i32 27, !dbg !8339
  call void @__init_waitqueue_head(%struct.wait_queue_head* %done_wq, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.51, i64 0, i64 0), %struct.lock_class_key* @vb2_core_queue_init.__key.50) #10, !dbg !8339
  br label %do.end275, !dbg !8339

do.end275:                                        ; preds = %do.body274
  %53 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8341
  %memory = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %53, i32 0, i32 18, !dbg !8342
  store i32 0, i32* %memory, align 8, !dbg !8343
  %54 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8344
  %buf_struct_size = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %54, i32 0, i32 12, !dbg !8346
  %55 = load i32, i32* %buf_struct_size, align 4, !dbg !8346
  %cmp = icmp eq i32 %55, 0, !dbg !8347
  br i1 %cmp, label %if.then277, label %if.end279, !dbg !8348

if.then277:                                       ; preds = %do.end275
  %56 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8349
  %buf_struct_size278 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %56, i32 0, i32 12, !dbg !8350
  store i32 512, i32* %buf_struct_size278, align 4, !dbg !8351
  br label %if.end279, !dbg !8349

if.end279:                                        ; preds = %if.then277, %do.end275
  %57 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8352
  %bidirectional = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %57, i32 0, i32 4, !dbg !8354
  %bf.load280 = load i16, i16* %bidirectional, align 8, !dbg !8354
  %bf.clear281 = and i16 %bf.load280, 1, !dbg !8354
  %bf.cast282 = zext i16 %bf.clear281 to i32, !dbg !8354
  %tobool283 = icmp ne i32 %bf.cast282, 0, !dbg !8352
  br i1 %tobool283, label %if.then284, label %if.else, !dbg !8355

if.then284:                                       ; preds = %if.end279
  %58 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8356
  %dma_dir = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %58, i32 0, i32 19, !dbg !8357
  store i32 0, i32* %dma_dir, align 4, !dbg !8358
  br label %if.end291, !dbg !8356

if.else:                                          ; preds = %if.end279
  %59 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8359
  %is_output = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %59, i32 0, i32 28, !dbg !8360
  %bf.load285 = load i16, i16* %is_output, align 8, !dbg !8360
  %bf.lshr286 = lshr i16 %bf.load285, 6, !dbg !8360
  %bf.clear287 = and i16 %bf.lshr286, 1, !dbg !8360
  %bf.cast288 = zext i16 %bf.clear287 to i32, !dbg !8360
  %tobool289 = icmp ne i32 %bf.cast288, 0, !dbg !8359
  %60 = zext i1 %tobool289 to i64, !dbg !8359
  %cond = select i1 %tobool289, i32 1, i32 2, !dbg !8359
  %61 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8361
  %dma_dir290 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %61, i32 0, i32 19, !dbg !8362
  store i32 %cond, i32* %dma_dir290, align 4, !dbg !8363
  br label %if.end291

if.end291:                                        ; preds = %if.else, %if.then284
  %62 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8364
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %62, i32 0, i32 31, !dbg !8366
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !8364
  %63 = load i8, i8* %arrayidx, align 8, !dbg !8364
  %conv292 = sext i8 %63 to i32, !dbg !8364
  %cmp293 = icmp eq i32 %conv292, 0, !dbg !8367
  br i1 %cmp293, label %if.then295, label %if.end305, !dbg !8368

if.then295:                                       ; preds = %if.end291
  %64 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8369
  %name296 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %64, i32 0, i32 31, !dbg !8370
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name296, i64 0, i64 0, !dbg !8369
  %65 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8371
  %is_output297 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %65, i32 0, i32 28, !dbg !8372
  %bf.load298 = load i16, i16* %is_output297, align 8, !dbg !8372
  %bf.lshr299 = lshr i16 %bf.load298, 6, !dbg !8372
  %bf.clear300 = and i16 %bf.lshr299, 1, !dbg !8372
  %bf.cast301 = zext i16 %bf.clear300 to i32, !dbg !8372
  %tobool302 = icmp ne i32 %bf.cast301, 0, !dbg !8371
  %66 = zext i1 %tobool302 to i64, !dbg !8371
  %cond303 = select i1 %tobool302, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), !dbg !8371
  %67 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8373
  %call304 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i64 0, i64 0), i8* %cond303, %struct.vb2_queue* %67) #10, !dbg !8374
  br label %if.end305, !dbg !8374

if.end305:                                        ; preds = %if.then295, %if.end291
  store i32 0, i32* %retval, align 4, !dbg !8375
  br label %return, !dbg !8375

return:                                           ; preds = %if.end305, %if.then267, %if.then227
  %68 = load i32, i32* %retval, align 4, !dbg !8376
  ret i32 %68, !dbg !8376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !8377 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8378, metadata !DIExpression()), !dbg !8379
  br label %do.body, !dbg !8380

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8381

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !8383

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !8381

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8385
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8385
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8385
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !8385
  br label %do.end3, !dbg !8385

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !8381

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8387
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8388
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !8389
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !8390
  ret void, !dbg !8391
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #4

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #4

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @vb2_core_queue_release(%struct.vb2_queue* %q) #0 !dbg !8392 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !8393, metadata !DIExpression()), !dbg !8394
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8395
  %call = call i32 @__vb2_cleanup_fileio(%struct.vb2_queue* %0) #10, !dbg !8396
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8397
  call void @__vb2_queue_cancel(%struct.vb2_queue* %1) #10, !dbg !8398
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8399
  %mmap_lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %2, i32 0, i32 17, !dbg !8400
  call void @mutex_lock(%struct.mutex* %mmap_lock) #10, !dbg !8401
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8402
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8403
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 21, !dbg !8404
  %5 = load i32, i32* %num_buffers, align 8, !dbg !8404
  %call1 = call i32 @__vb2_queue_free(%struct.vb2_queue* %3, i32 %5) #10, !dbg !8405
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8406
  %mmap_lock2 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 17, !dbg !8407
  call void @mutex_unlock(%struct.mutex* %mmap_lock2) #10, !dbg !8408
  ret void, !dbg !8409
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__vb2_cleanup_fileio(%struct.vb2_queue* %q) #0 !dbg !8410 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  %fileio = alloca %struct.vb2_fileio_data*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !8411, metadata !DIExpression()), !dbg !8412
  call void @llvm.dbg.declare(metadata %struct.vb2_fileio_data** %fileio, metadata !8413, metadata !DIExpression()), !dbg !8414
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8415
  %fileio1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 29, !dbg !8416
  %1 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio1, align 8, !dbg !8416
  store %struct.vb2_fileio_data* %1, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8414
  %2 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8417
  %tobool = icmp ne %struct.vb2_fileio_data* %2, null, !dbg !8417
  br i1 %tobool, label %if.then, label %if.end7, !dbg !8419

if.then:                                          ; preds = %entry
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8420
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8422
  %type = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 0, !dbg !8423
  %5 = load i32, i32* %type, align 8, !dbg !8423
  %call = call i32 @vb2_core_streamoff(%struct.vb2_queue* %3, i32 %5) #10, !dbg !8424
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8425
  %fileio2 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 29, !dbg !8426
  store %struct.vb2_fileio_data* null, %struct.vb2_fileio_data** %fileio2, align 8, !dbg !8427
  %7 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8428
  %count = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %7, i32 0, i32 0, !dbg !8429
  store i32 0, i32* %count, align 8, !dbg !8430
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8431
  %9 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8432
  %memory = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %9, i32 0, i32 2, !dbg !8433
  %10 = load i32, i32* %memory, align 8, !dbg !8433
  %11 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8434
  %count3 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %11, i32 0, i32 0, !dbg !8435
  %call4 = call i32 @vb2_core_reqbufs(%struct.vb2_queue* %8, i32 %10, i32* %count3) #10, !dbg !8436
  %12 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8437
  %13 = bitcast %struct.vb2_fileio_data* %12 to i8*, !dbg !8437
  call void @kfree(i8* %13) #10, !dbg !8438
  br label %do.body, !dbg !8439

do.body:                                          ; preds = %if.then
  %14 = load i32, i32* @debug, align 4, !dbg !8440
  %cmp = icmp sge i32 %14, 3, !dbg !8440
  br i1 %cmp, label %if.then5, label %if.end, !dbg !8443

if.then5:                                         ; preds = %do.body
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8440
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 31, !dbg !8440
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !8440
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.95, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.__vb2_cleanup_fileio, i64 0, i64 0)) #11, !dbg !8440
  br label %if.end, !dbg !8440

if.end:                                           ; preds = %if.then5, %do.body
  br label %do.end, !dbg !8443

do.end:                                           ; preds = %if.end
  br label %if.end7, !dbg !8444

if.end7:                                          ; preds = %do.end, %entry
  ret i32 0, !dbg !8445
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_core_poll(%struct.vb2_queue* %q, %struct.file* %file, %struct.poll_table_struct* %wait) #0 !dbg !8446 {
entry:
  %lock.addr.i148 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i148, metadata !5194, metadata !DIExpression()), !dbg !8451
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5206, metadata !DIExpression()), !dbg !8453
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5208, metadata !DIExpression()), !dbg !8454
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %file.addr = alloca %struct.file*, align 8
  %wait.addr = alloca %struct.poll_table_struct*, align 8
  %req_events = alloca i32, align 4
  %vb = alloca %struct.vb2_buffer*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy107 = alloca i64, align 8
  %__dummy2108 = alloca i64, align 8
  %tmp111 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp129 = alloca %struct.vb2_buffer*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !8461, metadata !DIExpression()), !dbg !8462
  store %struct.file* %file, %struct.file** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %file.addr, metadata !8463, metadata !DIExpression()), !dbg !8464
  store %struct.poll_table_struct* %wait, %struct.poll_table_struct** %wait.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %wait.addr, metadata !8465, metadata !DIExpression()), !dbg !8466
  call void @llvm.dbg.declare(metadata i32* %req_events, metadata !8467, metadata !DIExpression()), !dbg !8468
  %0 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !8469
  %call = call i32 @poll_requested_events(%struct.poll_table_struct* %0) #10, !dbg !8470
  store i32 %call, i32* %req_events, align 4, !dbg !8468
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !8471, metadata !DIExpression()), !dbg !8472
  store %struct.vb2_buffer* null, %struct.vb2_buffer** %vb, align 8, !dbg !8472
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !8473, metadata !DIExpression()), !dbg !8474
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8475
  %is_output = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 28, !dbg !8477
  %bf.load = load i16, i16* %is_output, align 8, !dbg !8477
  %bf.lshr = lshr i16 %bf.load, 6, !dbg !8477
  %bf.clear = and i16 %bf.lshr, 1, !dbg !8477
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8477
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8475
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8478

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %req_events, align 4, !dbg !8479
  %and = and i32 %2, 65, !dbg !8480
  %tobool1 = icmp ne i32 %and, 0, !dbg !8480
  br i1 %tobool1, label %if.end, label %if.then, !dbg !8481

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !8482
  br label %return, !dbg !8482

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8483
  %is_output2 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %3, i32 0, i32 28, !dbg !8485
  %bf.load3 = load i16, i16* %is_output2, align 8, !dbg !8485
  %bf.lshr4 = lshr i16 %bf.load3, 6, !dbg !8485
  %bf.clear5 = and i16 %bf.lshr4, 1, !dbg !8485
  %bf.cast6 = zext i16 %bf.clear5 to i32, !dbg !8485
  %tobool7 = icmp ne i32 %bf.cast6, 0, !dbg !8483
  br i1 %tobool7, label %land.lhs.true8, label %if.end12, !dbg !8486

land.lhs.true8:                                   ; preds = %if.end
  %4 = load i32, i32* %req_events, align 4, !dbg !8487
  %and9 = and i32 %4, 260, !dbg !8488
  %tobool10 = icmp ne i32 %and9, 0, !dbg !8488
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !8489

if.then11:                                        ; preds = %land.lhs.true8
  store i32 0, i32* %retval, align 4, !dbg !8490
  br label %return, !dbg !8490

if.end12:                                         ; preds = %land.lhs.true8, %if.end
  %5 = load %struct.file*, %struct.file** %file.addr, align 8, !dbg !8491
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8492
  %done_wq = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 27, !dbg !8493
  %7 = load %struct.poll_table_struct*, %struct.poll_table_struct** %wait.addr, align 8, !dbg !8494
  call void @poll_wait(%struct.file* %5, %struct.wait_queue_head* %done_wq, %struct.poll_table_struct* %7) #10, !dbg !8495
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8496
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 21, !dbg !8498
  %9 = load i32, i32* %num_buffers, align 8, !dbg !8498
  %cmp = icmp eq i32 %9, 0, !dbg !8499
  br i1 %cmp, label %land.lhs.true13, label %if.end53, !dbg !8500

land.lhs.true13:                                  ; preds = %if.end12
  %10 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8501
  %call14 = call zeroext i1 @vb2_fileio_is_active(%struct.vb2_queue* %10) #10, !dbg !8502
  br i1 %call14, label %if.end53, label %if.then15, !dbg !8503

if.then15:                                        ; preds = %land.lhs.true13
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8504
  %is_output16 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 28, !dbg !8507
  %bf.load17 = load i16, i16* %is_output16, align 8, !dbg !8507
  %bf.lshr18 = lshr i16 %bf.load17, 6, !dbg !8507
  %bf.clear19 = and i16 %bf.lshr18, 1, !dbg !8507
  %bf.cast20 = zext i16 %bf.clear19 to i32, !dbg !8507
  %tobool21 = icmp ne i32 %bf.cast20, 0, !dbg !8504
  br i1 %tobool21, label %if.end33, label %land.lhs.true22, !dbg !8508

land.lhs.true22:                                  ; preds = %if.then15
  %12 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8509
  %io_modes = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %12, i32 0, i32 1, !dbg !8510
  %13 = load i32, i32* %io_modes, align 4, !dbg !8510
  %and23 = and i32 %13, 4, !dbg !8511
  %tobool24 = icmp ne i32 %and23, 0, !dbg !8511
  br i1 %tobool24, label %land.lhs.true25, label %if.end33, !dbg !8512

land.lhs.true25:                                  ; preds = %land.lhs.true22
  %14 = load i32, i32* %req_events, align 4, !dbg !8513
  %and26 = and i32 %14, 65, !dbg !8514
  %tobool27 = icmp ne i32 %and26, 0, !dbg !8514
  br i1 %tobool27, label %if.then28, label %if.end33, !dbg !8515

if.then28:                                        ; preds = %land.lhs.true25
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8516
  %call29 = call i32 @__vb2_init_fileio(%struct.vb2_queue* %15, i32 1) #10, !dbg !8519
  %tobool30 = icmp ne i32 %call29, 0, !dbg !8519
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !8520

if.then31:                                        ; preds = %if.then28
  store i32 8, i32* %retval, align 4, !dbg !8521
  br label %return, !dbg !8521

if.end32:                                         ; preds = %if.then28
  br label %if.end33, !dbg !8522

if.end33:                                         ; preds = %if.end32, %land.lhs.true25, %land.lhs.true22, %if.then15
  %16 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8523
  %is_output34 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %16, i32 0, i32 28, !dbg !8525
  %bf.load35 = load i16, i16* %is_output34, align 8, !dbg !8525
  %bf.lshr36 = lshr i16 %bf.load35, 6, !dbg !8525
  %bf.clear37 = and i16 %bf.lshr36, 1, !dbg !8525
  %bf.cast38 = zext i16 %bf.clear37 to i32, !dbg !8525
  %tobool39 = icmp ne i32 %bf.cast38, 0, !dbg !8523
  br i1 %tobool39, label %land.lhs.true40, label %if.end52, !dbg !8526

land.lhs.true40:                                  ; preds = %if.end33
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8527
  %io_modes41 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %17, i32 0, i32 1, !dbg !8528
  %18 = load i32, i32* %io_modes41, align 4, !dbg !8528
  %and42 = and i32 %18, 8, !dbg !8529
  %tobool43 = icmp ne i32 %and42, 0, !dbg !8529
  br i1 %tobool43, label %land.lhs.true44, label %if.end52, !dbg !8530

land.lhs.true44:                                  ; preds = %land.lhs.true40
  %19 = load i32, i32* %req_events, align 4, !dbg !8531
  %and45 = and i32 %19, 260, !dbg !8532
  %tobool46 = icmp ne i32 %and45, 0, !dbg !8532
  br i1 %tobool46, label %if.then47, label %if.end52, !dbg !8533

if.then47:                                        ; preds = %land.lhs.true44
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8534
  %call48 = call i32 @__vb2_init_fileio(%struct.vb2_queue* %20, i32 0) #10, !dbg !8537
  %tobool49 = icmp ne i32 %call48, 0, !dbg !8537
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !8538

if.then50:                                        ; preds = %if.then47
  store i32 8, i32* %retval, align 4, !dbg !8539
  br label %return, !dbg !8539

if.end51:                                         ; preds = %if.then47
  store i32 260, i32* %retval, align 4, !dbg !8540
  br label %return, !dbg !8540

if.end52:                                         ; preds = %land.lhs.true44, %land.lhs.true40, %if.end33
  br label %if.end53, !dbg !8541

if.end53:                                         ; preds = %if.end52, %land.lhs.true13, %if.end12
  %21 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8542
  %call54 = call zeroext i1 @vb2_is_streaming(%struct.vb2_queue* %21) #10, !dbg !8544
  br i1 %call54, label %lor.lhs.false, label %if.then60, !dbg !8545

lor.lhs.false:                                    ; preds = %if.end53
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8546
  %error = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %22, i32 0, i32 28, !dbg !8547
  %bf.load55 = load i16, i16* %error, align 8, !dbg !8547
  %bf.lshr56 = lshr i16 %bf.load55, 2, !dbg !8547
  %bf.clear57 = and i16 %bf.lshr56, 1, !dbg !8547
  %bf.cast58 = zext i16 %bf.clear57 to i32, !dbg !8547
  %tobool59 = icmp ne i32 %bf.cast58, 0, !dbg !8546
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !8548

if.then60:                                        ; preds = %lor.lhs.false, %if.end53
  store i32 8, i32* %retval, align 4, !dbg !8549
  br label %return, !dbg !8549

if.end61:                                         ; preds = %lor.lhs.false
  %23 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8550
  %quirk_poll_must_check_waiting_for_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %23, i32 0, i32 4, !dbg !8552
  %bf.load62 = load i16, i16* %quirk_poll_must_check_waiting_for_buffers, align 8, !dbg !8552
  %bf.lshr63 = lshr i16 %bf.load62, 4, !dbg !8552
  %bf.clear64 = and i16 %bf.lshr63, 1, !dbg !8552
  %bf.cast65 = zext i16 %bf.clear64 to i32, !dbg !8552
  %tobool66 = icmp ne i32 %bf.cast65, 0, !dbg !8550
  br i1 %tobool66, label %land.lhs.true67, label %if.end77, !dbg !8553

land.lhs.true67:                                  ; preds = %if.end61
  %24 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8554
  %waiting_for_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %24, i32 0, i32 28, !dbg !8555
  %bf.load68 = load i16, i16* %waiting_for_buffers, align 8, !dbg !8555
  %bf.lshr69 = lshr i16 %bf.load68, 3, !dbg !8555
  %bf.clear70 = and i16 %bf.lshr69, 1, !dbg !8555
  %bf.cast71 = zext i16 %bf.clear70 to i32, !dbg !8555
  %tobool72 = icmp ne i32 %bf.cast71, 0, !dbg !8554
  br i1 %tobool72, label %land.lhs.true73, label %if.end77, !dbg !8556

land.lhs.true73:                                  ; preds = %land.lhs.true67
  %25 = load i32, i32* %req_events, align 4, !dbg !8557
  %and74 = and i32 %25, 65, !dbg !8558
  %tobool75 = icmp ne i32 %and74, 0, !dbg !8558
  br i1 %tobool75, label %if.then76, label %if.end77, !dbg !8559

if.then76:                                        ; preds = %land.lhs.true73
  store i32 8, i32* %retval, align 4, !dbg !8560
  br label %return, !dbg !8560

if.end77:                                         ; preds = %land.lhs.true73, %land.lhs.true67, %if.end61
  %26 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8561
  %is_output78 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %26, i32 0, i32 28, !dbg !8563
  %bf.load79 = load i16, i16* %is_output78, align 8, !dbg !8563
  %bf.lshr80 = lshr i16 %bf.load79, 6, !dbg !8563
  %bf.clear81 = and i16 %bf.lshr80, 1, !dbg !8563
  %bf.cast82 = zext i16 %bf.clear81 to i32, !dbg !8563
  %tobool83 = icmp ne i32 %bf.cast82, 0, !dbg !8561
  br i1 %tobool83, label %land.lhs.true84, label %if.end90, !dbg !8564

land.lhs.true84:                                  ; preds = %if.end77
  %27 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8565
  %fileio = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %27, i32 0, i32 29, !dbg !8566
  %28 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8566
  %tobool85 = icmp ne %struct.vb2_fileio_data* %28, null, !dbg !8565
  br i1 %tobool85, label %land.lhs.true86, label %if.end90, !dbg !8567

land.lhs.true86:                                  ; preds = %land.lhs.true84
  %29 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8568
  %queued_count = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %29, i32 0, i32 23, !dbg !8569
  %30 = load i32, i32* %queued_count, align 8, !dbg !8569
  %31 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8570
  %num_buffers87 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %31, i32 0, i32 21, !dbg !8571
  %32 = load i32, i32* %num_buffers87, align 8, !dbg !8571
  %cmp88 = icmp ult i32 %30, %32, !dbg !8572
  br i1 %cmp88, label %if.then89, label %if.end90, !dbg !8573

if.then89:                                        ; preds = %land.lhs.true86
  store i32 260, i32* %retval, align 4, !dbg !8574
  br label %return, !dbg !8574

if.end90:                                         ; preds = %land.lhs.true86, %land.lhs.true84, %if.end77
  %33 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8575
  %done_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %33, i32 0, i32 25, !dbg !8577
  %call91 = call i32 @list_empty(%struct.list_head* %done_list) #10, !dbg !8578
  %tobool92 = icmp ne i32 %call91, 0, !dbg !8578
  br i1 %tobool92, label %if.then93, label %if.end101, !dbg !8579

if.then93:                                        ; preds = %if.end90
  %34 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8580
  %last_buffer_dequeued = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %34, i32 0, i32 28, !dbg !8583
  %bf.load94 = load i16, i16* %last_buffer_dequeued, align 8, !dbg !8583
  %bf.lshr95 = lshr i16 %bf.load94, 8, !dbg !8583
  %bf.clear96 = and i16 %bf.lshr95, 1, !dbg !8583
  %bf.cast97 = zext i16 %bf.clear96 to i32, !dbg !8583
  %tobool98 = icmp ne i32 %bf.cast97, 0, !dbg !8580
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !8584

if.then99:                                        ; preds = %if.then93
  store i32 65, i32* %retval, align 4, !dbg !8585
  br label %return, !dbg !8585

if.end100:                                        ; preds = %if.then93
  br label %if.end101, !dbg !8586

if.end101:                                        ; preds = %if.end100, %if.end90
  br label %do.body, !dbg !8587

do.body:                                          ; preds = %if.end101
  br label %do.body102, !dbg !8588

do.body102:                                       ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !8589, metadata !DIExpression()), !dbg !8591
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !8592, metadata !DIExpression()), !dbg !8591
  %cmp103 = icmp eq i64* %__dummy, %__dummy2, !dbg !8591
  %conv = zext i1 %cmp103 to i32, !dbg !8591
  store i32 1, i32* %tmp, align 4, !dbg !8591
  %35 = load i32, i32* %tmp, align 4, !dbg !8591
  br label %do.body104, !dbg !8593

do.body104:                                       ; preds = %do.body102
  br label %do.body105, !dbg !8594

do.body105:                                       ; preds = %do.body104
  br label %do.body106, !dbg !8595

do.body106:                                       ; preds = %do.body105
  call void @llvm.dbg.declare(metadata i64* %__dummy107, metadata !8597, metadata !DIExpression()), !dbg !8600
  call void @llvm.dbg.declare(metadata i64* %__dummy2108, metadata !8601, metadata !DIExpression()), !dbg !8600
  %cmp109 = icmp eq i64* %__dummy107, %__dummy2108, !dbg !8600
  %conv110 = zext i1 %cmp109 to i32, !dbg !8600
  store i32 1, i32* %tmp111, align 4, !dbg !8600
  %36 = load i32, i32* %tmp111, align 4, !dbg !8600
  %call112 = call i64 @arch_local_irq_save() #10, !dbg !8602
  store i64 %call112, i64* %flags, align 8, !dbg !8602
  br label %do.end, !dbg !8602

do.end:                                           ; preds = %do.body106
  br label %do.end113, !dbg !8595

do.end113:                                        ; preds = %do.end
  br label %do.body114, !dbg !8594

do.body114:                                       ; preds = %do.end113
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8603, !srcloc !8604
  br label %do.body115, !dbg !8603

do.body115:                                       ; preds = %do.body114
  %37 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8605
  %done_lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %37, i32 0, i32 26, !dbg !8605
  store %struct.spinlock* %done_lock, %struct.spinlock** %lock.addr.i, align 8
  %38 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8606
  %39 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %38, i32 0, i32 0, !dbg !8607
  %rlock.i = bitcast %union.anon.4* %39 to %struct.raw_spinlock*, !dbg !8607
  br label %do.end117, !dbg !8605

do.end117:                                        ; preds = %do.body115
  br label %do.end118, !dbg !8603

do.end118:                                        ; preds = %do.end117
  br label %do.end119, !dbg !8594

do.end119:                                        ; preds = %do.end118
  br label %do.end120, !dbg !8593

do.end120:                                        ; preds = %do.end119
  br label %do.end121, !dbg !8588

do.end121:                                        ; preds = %do.end120
  %40 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8608
  %done_list122 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %40, i32 0, i32 25, !dbg !8610
  %call123 = call i32 @list_empty(%struct.list_head* %done_list122) #10, !dbg !8611
  %tobool124 = icmp ne i32 %call123, 0, !dbg !8611
  br i1 %tobool124, label %if.end130, label %if.then125, !dbg !8612

if.then125:                                       ; preds = %do.end121
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8613, metadata !DIExpression()), !dbg !8615
  %41 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8615
  %done_list126 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %41, i32 0, i32 25, !dbg !8615
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %done_list126, i32 0, i32 0, !dbg !8615
  %42 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8615
  %43 = bitcast %struct.list_head* %42 to i8*, !dbg !8615
  store i8* %43, i8** %__mptr, align 8, !dbg !8615
  br label %do.body127, !dbg !8615

do.body127:                                       ; preds = %if.then125
  br label %do.end128, !dbg !8616

do.end128:                                        ; preds = %do.body127
  %44 = load i8*, i8** %__mptr, align 8, !dbg !8615
  %add.ptr = getelementptr i8, i8* %44, i64 -496, !dbg !8615
  %45 = bitcast i8* %add.ptr to %struct.vb2_buffer*, !dbg !8615
  store %struct.vb2_buffer* %45, %struct.vb2_buffer** %tmp129, align 8, !dbg !8616
  %46 = load %struct.vb2_buffer*, %struct.vb2_buffer** %tmp129, align 8, !dbg !8615
  store %struct.vb2_buffer* %46, %struct.vb2_buffer** %vb, align 8, !dbg !8618
  br label %if.end130, !dbg !8619

if.end130:                                        ; preds = %do.end128, %do.end121
  %47 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8620
  %done_lock131 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %47, i32 0, i32 26, !dbg !8621
  %48 = load i64, i64* %flags, align 8, !dbg !8622
  store %struct.spinlock* %done_lock131, %struct.spinlock** %lock.addr.i148, align 8
  store i64 %48, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !231, metadata !5454, metadata !DIExpression()) #6, !dbg !8623
  call void @llvm.dbg.declare(metadata !231, metadata !5458, metadata !DIExpression()) #6, !dbg !8623
  store i32 1, i32* %tmp.i, align 4, !dbg !8623
  %49 = load i32, i32* %tmp.i, align 4, !dbg !8623
  call void @llvm.dbg.declare(metadata !231, metadata !5459, metadata !DIExpression()) #6, !dbg !8624
  call void @llvm.dbg.declare(metadata !231, metadata !5465, metadata !DIExpression()) #6, !dbg !8624
  store i32 1, i32* %tmp8.i, align 4, !dbg !8624
  %50 = load i32, i32* %tmp8.i, align 4, !dbg !8624
  %51 = load i64, i64* %flags.addr.i, align 8, !dbg !8625
  call void @arch_local_irq_restore(i64 %51) #12, !dbg !8625
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !8626, !srcloc !5469
  %52 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i148, align 8, !dbg !8627
  %53 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %52, i32 0, i32 0, !dbg !8627
  %rlock.i149 = bitcast %union.anon.4* %53 to %struct.raw_spinlock*, !dbg !8627
  %54 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !8628
  %tobool132 = icmp ne %struct.vb2_buffer* %54, null, !dbg !8628
  br i1 %tobool132, label %land.lhs.true133, label %if.end147, !dbg !8630

land.lhs.true133:                                 ; preds = %if.end130
  %55 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !8631
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %55, i32 0, i32 8, !dbg !8632
  %56 = load i32, i32* %state, align 8, !dbg !8632
  %cmp134 = icmp eq i32 %56, 5, !dbg !8633
  br i1 %cmp134, label %if.then140, label %lor.lhs.false136, !dbg !8634

lor.lhs.false136:                                 ; preds = %land.lhs.true133
  %57 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !8635
  %state137 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %57, i32 0, i32 8, !dbg !8636
  %58 = load i32, i32* %state137, align 8, !dbg !8636
  %cmp138 = icmp eq i32 %58, 6, !dbg !8637
  br i1 %cmp138, label %if.then140, label %if.end147, !dbg !8638

if.then140:                                       ; preds = %lor.lhs.false136, %land.lhs.true133
  %59 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8639
  %is_output141 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %59, i32 0, i32 28, !dbg !8641
  %bf.load142 = load i16, i16* %is_output141, align 8, !dbg !8641
  %bf.lshr143 = lshr i16 %bf.load142, 6, !dbg !8641
  %bf.clear144 = and i16 %bf.lshr143, 1, !dbg !8641
  %bf.cast145 = zext i16 %bf.clear144 to i32, !dbg !8641
  %tobool146 = icmp ne i32 %bf.cast145, 0, !dbg !8642
  %60 = zext i1 %tobool146 to i64, !dbg !8642
  %cond = select i1 %tobool146, i32 260, i32 65, !dbg !8642
  store i32 %cond, i32* %retval, align 4, !dbg !8643
  br label %return, !dbg !8643

if.end147:                                        ; preds = %lor.lhs.false136, %if.end130
  store i32 0, i32* %retval, align 4, !dbg !8644
  br label %return, !dbg !8644

return:                                           ; preds = %if.end147, %if.then140, %if.then99, %if.then89, %if.then76, %if.then60, %if.end51, %if.then50, %if.then31, %if.then11, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !8645
  ret i32 %61, !dbg !8645
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @poll_requested_events(%struct.poll_table_struct* %p) #0 !dbg !8646 {
entry:
  %p.addr = alloca %struct.poll_table_struct*, align 8
  store %struct.poll_table_struct* %p, %struct.poll_table_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %p.addr, metadata !8651, metadata !DIExpression()), !dbg !8652
  %0 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !8653
  %tobool = icmp ne %struct.poll_table_struct* %0, null, !dbg !8653
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8653

cond.true:                                        ; preds = %entry
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !8654
  %_key = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %1, i32 0, i32 1, !dbg !8655
  %2 = load i32, i32* %_key, align 8, !dbg !8655
  br label %cond.end, !dbg !8653

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8653

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ -1, %cond.false ], !dbg !8653
  ret i32 %cond, !dbg !8656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @poll_wait(%struct.file* %filp, %struct.wait_queue_head* %wait_address, %struct.poll_table_struct* %p) #0 !dbg !8657 {
entry:
  %filp.addr = alloca %struct.file*, align 8
  %wait_address.addr = alloca %struct.wait_queue_head*, align 8
  %p.addr = alloca %struct.poll_table_struct*, align 8
  store %struct.file* %filp, %struct.file** %filp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.file** %filp.addr, metadata !8660, metadata !DIExpression()), !dbg !8661
  store %struct.wait_queue_head* %wait_address, %struct.wait_queue_head** %wait_address.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wait_queue_head** %wait_address.addr, metadata !8662, metadata !DIExpression()), !dbg !8663
  store %struct.poll_table_struct* %p, %struct.poll_table_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.poll_table_struct** %p.addr, metadata !8664, metadata !DIExpression()), !dbg !8665
  %0 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !8666
  %tobool = icmp ne %struct.poll_table_struct* %0, null, !dbg !8666
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8668

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !8669
  %_qproc = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %1, i32 0, i32 0, !dbg !8670
  %2 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc, align 8, !dbg !8670
  %tobool1 = icmp ne void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)* %2, null, !dbg !8669
  br i1 %tobool1, label %land.lhs.true2, label %if.end, !dbg !8671

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !8672
  %tobool3 = icmp ne %struct.wait_queue_head* %3, null, !dbg !8672
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8673

if.then:                                          ; preds = %land.lhs.true2
  %4 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !8674
  %_qproc4 = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %4, i32 0, i32 0, !dbg !8675
  %5 = load void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)** %_qproc4, align 8, !dbg !8675
  %6 = load %struct.file*, %struct.file** %filp.addr, align 8, !dbg !8676
  %7 = load %struct.wait_queue_head*, %struct.wait_queue_head** %wait_address.addr, align 8, !dbg !8677
  %8 = load %struct.poll_table_struct*, %struct.poll_table_struct** %p.addr, align 8, !dbg !8678
  call void %5(%struct.file* %6, %struct.wait_queue_head* %7, %struct.poll_table_struct* %8) #10, !dbg !8674
  br label %if.end, !dbg !8674

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !8679
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__vb2_init_fileio(%struct.vb2_queue* %q, i32 %read) #0 !dbg !8680 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %read.addr = alloca i32, align 4
  %fileio = alloca %struct.vb2_fileio_data*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %count = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !8683, metadata !DIExpression()), !dbg !8684
  store i32 %read, i32* %read.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %read.addr, metadata !8685, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.declare(metadata %struct.vb2_fileio_data** %fileio, metadata !8687, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8689, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8691, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8693, metadata !DIExpression()), !dbg !8694
  store i32 0, i32* %count, align 4, !dbg !8694
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8695, metadata !DIExpression()), !dbg !8698
  %0 = load i32, i32* %read.addr, align 4, !dbg !8698
  %tobool = icmp ne i32 %0, 0, !dbg !8698
  br i1 %tobool, label %land.lhs.true, label %lor.rhs, !dbg !8698

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8698
  %io_modes = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %1, i32 0, i32 1, !dbg !8698
  %2 = load i32, i32* %io_modes, align 4, !dbg !8698
  %and = and i32 %2, 4, !dbg !8698
  %tobool1 = icmp ne i32 %and, 0, !dbg !8698
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !8698

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %3 = load i32, i32* %read.addr, align 4, !dbg !8698
  %tobool2 = icmp ne i32 %3, 0, !dbg !8698
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !8698

land.rhs:                                         ; preds = %lor.rhs
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8698
  %io_modes3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 1, !dbg !8698
  %5 = load i32, i32* %io_modes3, align 4, !dbg !8698
  %and4 = and i32 %5, 8, !dbg !8698
  %tobool5 = icmp ne i32 %and4, 0, !dbg !8698
  %lnot = xor i1 %tobool5, true, !dbg !8698
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %lnot, %land.rhs ], !dbg !8699
  br label %lor.end, !dbg !8698

lor.end:                                          ; preds = %land.end, %land.lhs.true
  %7 = phi i1 [ true, %land.lhs.true ], [ %6, %land.end ]
  %lnot6 = xor i1 %7, true, !dbg !8698
  %lnot7 = xor i1 %lnot6, true, !dbg !8698
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !8698
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8698
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !8700
  %tobool8 = icmp ne i32 %8, 0, !dbg !8700
  %lnot9 = xor i1 %tobool8, true, !dbg !8700
  %lnot11 = xor i1 %lnot9, true, !dbg !8700
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !8700
  %conv = sext i32 %lnot.ext12 to i64, !dbg !8700
  %tobool13 = icmp ne i64 %conv, 0, !dbg !8700
  br i1 %tobool13, label %if.then, label %if.end, !dbg !8698

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !8700

do.body:                                          ; preds = %if.then
  br label %do.body14, !dbg !8702

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !8704

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !8702

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 2522, i32 2305, i64 12) #6, !dbg !8706, !srcloc !8708
  br label %do.end16, !dbg !8706

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 307) #6, !dbg !8709, !srcloc !8711
  br label %do.body17, !dbg !8702

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !8712

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !8702

do.end19:                                         ; preds = %do.end18
  br label %if.end, !dbg !8702

if.end:                                           ; preds = %do.end19, %lor.end
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !8698
  %tobool20 = icmp ne i32 %9, 0, !dbg !8698
  %lnot21 = xor i1 %tobool20, true, !dbg !8698
  %lnot23 = xor i1 %lnot21, true, !dbg !8698
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !8698
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !8698
  store i64 %conv25, i64* %tmp, align 8, !dbg !8700
  %10 = load i64, i64* %tmp, align 8, !dbg !8698
  %tobool26 = icmp ne i64 %10, 0, !dbg !8714
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !8715

if.then27:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8716
  br label %return, !dbg !8716

if.end28:                                         ; preds = %if.end
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8717
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 8, !dbg !8719
  %12 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !8719
  %vaddr = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %12, i32 0, i32 11, !dbg !8720
  %13 = load i8* (i8*)*, i8* (i8*)** %vaddr, align 8, !dbg !8720
  %tobool29 = icmp ne i8* (i8*)* %13, null, !dbg !8717
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !8721

if.then30:                                        ; preds = %if.end28
  store i32 -16, i32* %retval, align 4, !dbg !8722
  br label %return, !dbg !8722

if.end31:                                         ; preds = %if.end28
  %14 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8723
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %14, i32 0, i32 28, !dbg !8725
  %bf.load = load i16, i16* %streaming, align 8, !dbg !8725
  %bf.clear = and i16 %bf.load, 1, !dbg !8725
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8725
  %tobool32 = icmp ne i32 %bf.cast, 0, !dbg !8723
  br i1 %tobool32, label %if.then34, label %lor.lhs.false, !dbg !8726

lor.lhs.false:                                    ; preds = %if.end31
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8727
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 21, !dbg !8728
  %16 = load i32, i32* %num_buffers, align 8, !dbg !8728
  %cmp = icmp ugt i32 %16, 0, !dbg !8729
  br i1 %cmp, label %if.then34, label %if.end35, !dbg !8730

if.then34:                                        ; preds = %lor.lhs.false, %if.end31
  store i32 -16, i32* %retval, align 4, !dbg !8731
  br label %return, !dbg !8731

if.end35:                                         ; preds = %lor.lhs.false
  store i32 1, i32* %count, align 4, !dbg !8732
  br label %do.body36, !dbg !8733

do.body36:                                        ; preds = %if.end35
  %17 = load i32, i32* @debug, align 4, !dbg !8734
  %cmp37 = icmp sge i32 %17, 3, !dbg !8734
  br i1 %cmp37, label %if.then39, label %if.end48, !dbg !8737

if.then39:                                        ; preds = %do.body36
  %18 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8734
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %18, i32 0, i32 31, !dbg !8734
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !8734
  %19 = load i32, i32* %read.addr, align 4, !dbg !8734
  %tobool40 = icmp ne i32 %19, 0, !dbg !8734
  %20 = zext i1 %tobool40 to i64, !dbg !8734
  %cond = select i1 %tobool40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0), !dbg !8734
  %21 = load i32, i32* %count, align 4, !dbg !8734
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8734
  %fileio_read_once = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %22, i32 0, i32 4, !dbg !8734
  %bf.load41 = load i16, i16* %fileio_read_once, align 8, !dbg !8734
  %bf.lshr = lshr i16 %bf.load41, 1, !dbg !8734
  %bf.clear42 = and i16 %bf.lshr, 1, !dbg !8734
  %bf.cast43 = zext i16 %bf.clear42 to i32, !dbg !8734
  %23 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8734
  %fileio_write_immediately = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %23, i32 0, i32 4, !dbg !8734
  %bf.load44 = load i16, i16* %fileio_write_immediately, align 8, !dbg !8734
  %bf.lshr45 = lshr i16 %bf.load44, 2, !dbg !8734
  %bf.clear46 = and i16 %bf.lshr45, 1, !dbg !8734
  %bf.cast47 = zext i16 %bf.clear46 to i32, !dbg !8734
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.92, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.__vb2_init_fileio, i64 0, i64 0), i8* %cond, i32 %21, i32 %bf.cast43, i32 %bf.cast47) #11, !dbg !8734
  br label %if.end48, !dbg !8734

if.end48:                                         ; preds = %if.then39, %do.body36
  br label %do.end49, !dbg !8737

do.end49:                                         ; preds = %if.end48
  %call50 = call i8* @kzalloc(i64 808, i32 3264) #10, !dbg !8738
  %24 = bitcast i8* %call50 to %struct.vb2_fileio_data*, !dbg !8738
  store %struct.vb2_fileio_data* %24, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8739
  %25 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8740
  %cmp51 = icmp eq %struct.vb2_fileio_data* %25, null, !dbg !8742
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !8743

if.then53:                                        ; preds = %do.end49
  store i32 -12, i32* %retval, align 4, !dbg !8744
  br label %return, !dbg !8744

if.end54:                                         ; preds = %do.end49
  %26 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8745
  %fileio_read_once55 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %26, i32 0, i32 4, !dbg !8746
  %bf.load56 = load i16, i16* %fileio_read_once55, align 8, !dbg !8746
  %bf.lshr57 = lshr i16 %bf.load56, 1, !dbg !8746
  %bf.clear58 = and i16 %bf.lshr57, 1, !dbg !8746
  %bf.cast59 = zext i16 %bf.clear58 to i32, !dbg !8746
  %27 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8747
  %read_once = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %27, i32 0, i32 8, !dbg !8748
  %28 = trunc i32 %bf.cast59 to i8, !dbg !8749
  %bf.load60 = load i8, i8* %read_once, align 8, !dbg !8749
  %bf.value = and i8 %28, 1, !dbg !8749
  %bf.clear61 = and i8 %bf.load60, -2, !dbg !8749
  %bf.set = or i8 %bf.clear61, %bf.value, !dbg !8749
  store i8 %bf.set, i8* %read_once, align 8, !dbg !8749
  %bf.result.cast = zext i8 %bf.value to i32, !dbg !8749
  %29 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8750
  %fileio_write_immediately62 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %29, i32 0, i32 4, !dbg !8751
  %bf.load63 = load i16, i16* %fileio_write_immediately62, align 8, !dbg !8751
  %bf.lshr64 = lshr i16 %bf.load63, 2, !dbg !8751
  %bf.clear65 = and i16 %bf.lshr64, 1, !dbg !8751
  %bf.cast66 = zext i16 %bf.clear65 to i32, !dbg !8751
  %30 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8752
  %write_immediately = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %30, i32 0, i32 8, !dbg !8753
  %31 = trunc i32 %bf.cast66 to i8, !dbg !8754
  %bf.load67 = load i8, i8* %write_immediately, align 8, !dbg !8754
  %bf.value68 = and i8 %31, 1, !dbg !8754
  %bf.shl = shl i8 %bf.value68, 1, !dbg !8754
  %bf.clear69 = and i8 %bf.load67, -3, !dbg !8754
  %bf.set70 = or i8 %bf.clear69, %bf.shl, !dbg !8754
  store i8 %bf.set70, i8* %write_immediately, align 8, !dbg !8754
  %bf.result.cast71 = zext i8 %bf.value68 to i32, !dbg !8754
  %32 = load i32, i32* %count, align 4, !dbg !8755
  %33 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8756
  %count72 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %33, i32 0, i32 0, !dbg !8757
  store i32 %32, i32* %count72, align 8, !dbg !8758
  %34 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8759
  %memory = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %34, i32 0, i32 2, !dbg !8760
  store i32 1, i32* %memory, align 8, !dbg !8761
  %35 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8762
  %type = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %35, i32 0, i32 0, !dbg !8763
  %36 = load i32, i32* %type, align 8, !dbg !8763
  %37 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8764
  %type73 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %37, i32 0, i32 1, !dbg !8765
  store i32 %36, i32* %type73, align 4, !dbg !8766
  %38 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8767
  %39 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8768
  %fileio74 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %39, i32 0, i32 29, !dbg !8769
  store %struct.vb2_fileio_data* %38, %struct.vb2_fileio_data** %fileio74, align 8, !dbg !8770
  %40 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8771
  %41 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8772
  %memory75 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %41, i32 0, i32 2, !dbg !8773
  %42 = load i32, i32* %memory75, align 8, !dbg !8773
  %43 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8774
  %count76 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %43, i32 0, i32 0, !dbg !8775
  %call77 = call i32 @vb2_core_reqbufs(%struct.vb2_queue* %40, i32 %42, i32* %count76) #10, !dbg !8776
  store i32 %call77, i32* %ret, align 4, !dbg !8777
  %44 = load i32, i32* %ret, align 4, !dbg !8778
  %tobool78 = icmp ne i32 %44, 0, !dbg !8778
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !8780

if.then79:                                        ; preds = %if.end54
  br label %err_kfree, !dbg !8781

if.end80:                                         ; preds = %if.end54
  %45 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8782
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %45, i32 0, i32 20, !dbg !8784
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 0, !dbg !8782
  %46 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !8782
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %46, i32 0, i32 4, !dbg !8785
  %47 = load i32, i32* %num_planes, align 4, !dbg !8785
  %cmp81 = icmp ne i32 %47, 1, !dbg !8786
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !8787

if.then83:                                        ; preds = %if.end80
  store i32 -16, i32* %ret, align 4, !dbg !8788
  br label %err_reqbufs, !dbg !8790

if.end84:                                         ; preds = %if.end80
  store i32 0, i32* %i, align 4, !dbg !8791
  br label %for.cond, !dbg !8793

for.cond:                                         ; preds = %for.inc, %if.end84
  %48 = load i32, i32* %i, align 4, !dbg !8794
  %49 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8796
  %num_buffers85 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %49, i32 0, i32 21, !dbg !8797
  %50 = load i32, i32* %num_buffers85, align 8, !dbg !8797
  %cmp86 = icmp ult i32 %48, %50, !dbg !8798
  br i1 %cmp86, label %for.body, label %for.end, !dbg !8799

for.body:                                         ; preds = %for.cond
  %51 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8800
  %bufs88 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %51, i32 0, i32 20, !dbg !8802
  %52 = load i32, i32* %i, align 4, !dbg !8803
  %idxprom = sext i32 %52 to i64, !dbg !8800
  %arrayidx89 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs88, i64 0, i64 %idxprom, !dbg !8800
  %53 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx89, align 8, !dbg !8800
  %call90 = call i8* @vb2_plane_vaddr(%struct.vb2_buffer* %53, i32 0) #10, !dbg !8804
  %54 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8805
  %bufs91 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %54, i32 0, i32 3, !dbg !8806
  %55 = load i32, i32* %i, align 4, !dbg !8807
  %idxprom92 = sext i32 %55 to i64, !dbg !8805
  %arrayidx93 = getelementptr [32 x %struct.vb2_fileio_buf], [32 x %struct.vb2_fileio_buf]* %bufs91, i64 0, i64 %idxprom92, !dbg !8805
  %vaddr94 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %arrayidx93, i32 0, i32 0, !dbg !8808
  store i8* %call90, i8** %vaddr94, align 8, !dbg !8809
  %56 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8810
  %bufs95 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %56, i32 0, i32 3, !dbg !8812
  %57 = load i32, i32* %i, align 4, !dbg !8813
  %idxprom96 = sext i32 %57 to i64, !dbg !8810
  %arrayidx97 = getelementptr [32 x %struct.vb2_fileio_buf], [32 x %struct.vb2_fileio_buf]* %bufs95, i64 0, i64 %idxprom96, !dbg !8810
  %vaddr98 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %arrayidx97, i32 0, i32 0, !dbg !8814
  %58 = load i8*, i8** %vaddr98, align 8, !dbg !8814
  %cmp99 = icmp eq i8* %58, null, !dbg !8815
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !8816

if.then101:                                       ; preds = %for.body
  store i32 -22, i32* %ret, align 4, !dbg !8817
  br label %err_reqbufs, !dbg !8819

if.end102:                                        ; preds = %for.body
  %59 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8820
  %bufs103 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %59, i32 0, i32 20, !dbg !8821
  %60 = load i32, i32* %i, align 4, !dbg !8822
  %idxprom104 = sext i32 %60 to i64, !dbg !8820
  %arrayidx105 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs103, i64 0, i64 %idxprom104, !dbg !8820
  %61 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx105, align 8, !dbg !8820
  %call106 = call i64 @vb2_plane_size(%struct.vb2_buffer* %61, i32 0) #10, !dbg !8823
  %conv107 = trunc i64 %call106 to i32, !dbg !8823
  %62 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8824
  %bufs108 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %62, i32 0, i32 3, !dbg !8825
  %63 = load i32, i32* %i, align 4, !dbg !8826
  %idxprom109 = sext i32 %63 to i64, !dbg !8824
  %arrayidx110 = getelementptr [32 x %struct.vb2_fileio_buf], [32 x %struct.vb2_fileio_buf]* %bufs108, i64 0, i64 %idxprom109, !dbg !8824
  %size = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %arrayidx110, i32 0, i32 1, !dbg !8827
  store i32 %conv107, i32* %size, align 8, !dbg !8828
  br label %for.inc, !dbg !8829

for.inc:                                          ; preds = %if.end102
  %64 = load i32, i32* %i, align 4, !dbg !8830
  %inc = add i32 %64, 1, !dbg !8830
  store i32 %inc, i32* %i, align 4, !dbg !8830
  br label %for.cond, !dbg !8831, !llvm.loop !8832

for.end:                                          ; preds = %for.cond
  %65 = load i32, i32* %read.addr, align 4, !dbg !8834
  %tobool111 = icmp ne i32 %65, 0, !dbg !8834
  br i1 %tobool111, label %if.then112, label %if.end133, !dbg !8836

if.then112:                                       ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !8837
  br label %for.cond113, !dbg !8840

for.cond113:                                      ; preds = %for.inc128, %if.then112
  %66 = load i32, i32* %i, align 4, !dbg !8841
  %67 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8843
  %num_buffers114 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %67, i32 0, i32 21, !dbg !8844
  %68 = load i32, i32* %num_buffers114, align 8, !dbg !8844
  %cmp115 = icmp ult i32 %66, %68, !dbg !8845
  br i1 %cmp115, label %for.body117, label %for.end130, !dbg !8846

for.body117:                                      ; preds = %for.cond113
  %69 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8847
  %70 = load i32, i32* %i, align 4, !dbg !8849
  %call118 = call i32 @vb2_core_qbuf(%struct.vb2_queue* %69, i32 %70, i8* null, %struct.media_request* null) #10, !dbg !8850
  store i32 %call118, i32* %ret, align 4, !dbg !8851
  %71 = load i32, i32* %ret, align 4, !dbg !8852
  %tobool119 = icmp ne i32 %71, 0, !dbg !8852
  br i1 %tobool119, label %if.then120, label %if.end121, !dbg !8854

if.then120:                                       ; preds = %for.body117
  br label %err_reqbufs, !dbg !8855

if.end121:                                        ; preds = %for.body117
  %72 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8856
  %bufs122 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %72, i32 0, i32 3, !dbg !8857
  %73 = load i32, i32* %i, align 4, !dbg !8858
  %idxprom123 = sext i32 %73 to i64, !dbg !8856
  %arrayidx124 = getelementptr [32 x %struct.vb2_fileio_buf], [32 x %struct.vb2_fileio_buf]* %bufs122, i64 0, i64 %idxprom123, !dbg !8856
  %queued = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %arrayidx124, i32 0, i32 3, !dbg !8859
  %bf.load125 = load i8, i8* %queued, align 8, !dbg !8860
  %bf.clear126 = and i8 %bf.load125, -2, !dbg !8860
  %bf.set127 = or i8 %bf.clear126, 1, !dbg !8860
  store i8 %bf.set127, i8* %queued, align 8, !dbg !8860
  br label %for.inc128, !dbg !8861

for.inc128:                                       ; preds = %if.end121
  %74 = load i32, i32* %i, align 4, !dbg !8862
  %inc129 = add i32 %74, 1, !dbg !8862
  store i32 %inc129, i32* %i, align 4, !dbg !8862
  br label %for.cond113, !dbg !8863, !llvm.loop !8864

for.end130:                                       ; preds = %for.cond113
  %75 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8866
  %num_buffers131 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %75, i32 0, i32 21, !dbg !8867
  %76 = load i32, i32* %num_buffers131, align 8, !dbg !8867
  %77 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8868
  %initial_index = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %77, i32 0, i32 5, !dbg !8869
  store i32 %76, i32* %initial_index, align 4, !dbg !8870
  %78 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8871
  %num_buffers132 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %78, i32 0, i32 21, !dbg !8872
  %79 = load i32, i32* %num_buffers132, align 8, !dbg !8872
  %80 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8873
  %cur_index = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %80, i32 0, i32 4, !dbg !8874
  store i32 %79, i32* %cur_index, align 8, !dbg !8875
  br label %if.end133, !dbg !8876

if.end133:                                        ; preds = %for.end130, %for.end
  %81 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8877
  %82 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8878
  %type134 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %82, i32 0, i32 0, !dbg !8879
  %83 = load i32, i32* %type134, align 8, !dbg !8879
  %call135 = call i32 @vb2_core_streamon(%struct.vb2_queue* %81, i32 %83) #10, !dbg !8880
  store i32 %call135, i32* %ret, align 4, !dbg !8881
  %84 = load i32, i32* %ret, align 4, !dbg !8882
  %tobool136 = icmp ne i32 %84, 0, !dbg !8882
  br i1 %tobool136, label %if.then137, label %if.end138, !dbg !8884

if.then137:                                       ; preds = %if.end133
  br label %err_reqbufs, !dbg !8885

if.end138:                                        ; preds = %if.end133
  %85 = load i32, i32* %ret, align 4, !dbg !8886
  store i32 %85, i32* %retval, align 4, !dbg !8887
  br label %return, !dbg !8887

err_reqbufs:                                      ; preds = %if.then137, %if.then120, %if.then101, %if.then83
  call void @llvm.dbg.label(metadata !8888), !dbg !8889
  %86 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8890
  %count139 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %86, i32 0, i32 0, !dbg !8891
  store i32 0, i32* %count139, align 8, !dbg !8892
  %87 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8893
  %88 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8894
  %memory140 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %88, i32 0, i32 2, !dbg !8895
  %89 = load i32, i32* %memory140, align 8, !dbg !8895
  %90 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8896
  %count141 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %90, i32 0, i32 0, !dbg !8897
  %call142 = call i32 @vb2_core_reqbufs(%struct.vb2_queue* %87, i32 %89, i32* %count141) #10, !dbg !8898
  br label %err_kfree, !dbg !8898

err_kfree:                                        ; preds = %err_reqbufs, %if.then79
  call void @llvm.dbg.label(metadata !8899), !dbg !8900
  %91 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8901
  %fileio143 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %91, i32 0, i32 29, !dbg !8902
  store %struct.vb2_fileio_data* null, %struct.vb2_fileio_data** %fileio143, align 8, !dbg !8903
  %92 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !8904
  %93 = bitcast %struct.vb2_fileio_data* %92 to i8*, !dbg !8904
  call void @kfree(i8* %93) #10, !dbg !8905
  %94 = load i32, i32* %ret, align 4, !dbg !8906
  store i32 %94, i32* %retval, align 4, !dbg !8907
  br label %return, !dbg !8907

return:                                           ; preds = %err_kfree, %if.end138, %if.then53, %if.then34, %if.then30, %if.then27
  %95 = load i32, i32* %retval, align 4, !dbg !8908
  ret i32 %95, !dbg !8908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @vb2_is_streaming(%struct.vb2_queue* %q) #0 !dbg !8909 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !8910, metadata !DIExpression()), !dbg !8911
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8912
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 28, !dbg !8913
  %bf.load = load i16, i16* %streaming, align 8, !dbg !8913
  %bf.clear = and i16 %bf.load, 1, !dbg !8913
  %bf.cast = zext i16 %bf.clear to i32, !dbg !8913
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !8912
  ret i1 %tobool, !dbg !8914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !8915 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !8920, metadata !DIExpression()), !dbg !8921
  br label %do.body, !dbg !8922

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8924

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8922
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8922
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8922
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !8924
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !8922
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !8926
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !8927
  %conv = zext i1 %cmp to i32, !dbg !8927
  ret i32 %conv, !dbg !8928
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @vb2_read(%struct.vb2_queue* %q, i8* %data, i64 %count, i64* %ppos, i32 %nonblocking) #0 !dbg !8929 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  %data.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %ppos.addr = alloca i64*, align 8
  %nonblocking.addr = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !8932, metadata !DIExpression()), !dbg !8933
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8934, metadata !DIExpression()), !dbg !8935
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !8936, metadata !DIExpression()), !dbg !8937
  store i64* %ppos, i64** %ppos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ppos.addr, metadata !8938, metadata !DIExpression()), !dbg !8939
  store i32 %nonblocking, i32* %nonblocking.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nonblocking.addr, metadata !8940, metadata !DIExpression()), !dbg !8941
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !8942
  %1 = load i8*, i8** %data.addr, align 8, !dbg !8943
  %2 = load i64, i64* %count.addr, align 8, !dbg !8944
  %3 = load i64*, i64** %ppos.addr, align 8, !dbg !8945
  %4 = load i32, i32* %nonblocking.addr, align 4, !dbg !8946
  %call = call i64 @__vb2_perform_fileio(%struct.vb2_queue* %0, i8* %1, i64 %2, i64* %3, i32 %4, i32 1) #10, !dbg !8947
  ret i64 %call, !dbg !8948
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__vb2_perform_fileio(%struct.vb2_queue* %q, i8* %data, i64 %count, i64* %ppos, i32 %nonblock, i32 %read) #0 !dbg !8949 {
entry:
  %retval.i.i252 = alloca i1, align 1
  %addr.addr.i.i253 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i253, metadata !8952, metadata !DIExpression()), !dbg !8957
  %bytes.addr.i.i254 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i254, metadata !8966, metadata !DIExpression()), !dbg !8967
  %is_source.addr.i.i255 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i255, metadata !8968, metadata !DIExpression()), !dbg !8969
  %sz.i.i256 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i256, metadata !8970, metadata !DIExpression()), !dbg !8971
  %__ret_warn_on.i.i257 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i257, metadata !8972, metadata !DIExpression()), !dbg !8975
  %tmp.i.i258 = alloca i64, align 8
  %to.addr.i259 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i259, metadata !8976, metadata !DIExpression()), !dbg !8977
  %from.addr.i260 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i260, metadata !8978, metadata !DIExpression()), !dbg !8979
  %n.addr.i261 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i261, metadata !8980, metadata !DIExpression()), !dbg !8981
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !8952, metadata !DIExpression()), !dbg !8982
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !8966, metadata !DIExpression()), !dbg !8987
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !8968, metadata !DIExpression()), !dbg !8988
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !8970, metadata !DIExpression()), !dbg !8989
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !8972, metadata !DIExpression()), !dbg !8990
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !8991, metadata !DIExpression()), !dbg !8992
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !8993, metadata !DIExpression()), !dbg !8994
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !8995, metadata !DIExpression()), !dbg !8996
  %retval = alloca i64, align 8
  %q.addr = alloca %struct.vb2_queue*, align 8
  %data.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %ppos.addr = alloca i64*, align 8
  %nonblock.addr = alloca i32, align 4
  %read.addr = alloca i32, align 4
  %fileio = alloca %struct.vb2_fileio_data*, align 8
  %buf = alloca %struct.vb2_fileio_buf*, align 8
  %is_multiplanar = alloca i8, align 1
  %copy_timestamp = alloca i8, align 1
  %index = alloca i32, align 4
  %ret = alloca i32, align 4
  %b = alloca %struct.vb2_buffer*, align 8
  %b178 = alloca %struct.vb2_buffer*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !8997, metadata !DIExpression()), !dbg !8998
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8999, metadata !DIExpression()), !dbg !9000
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !9001, metadata !DIExpression()), !dbg !9002
  store i64* %ppos, i64** %ppos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ppos.addr, metadata !9003, metadata !DIExpression()), !dbg !9004
  store i32 %nonblock, i32* %nonblock.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nonblock.addr, metadata !9005, metadata !DIExpression()), !dbg !9006
  store i32 %read, i32* %read.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %read.addr, metadata !9007, metadata !DIExpression()), !dbg !9008
  call void @llvm.dbg.declare(metadata %struct.vb2_fileio_data** %fileio, metadata !9009, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.declare(metadata %struct.vb2_fileio_buf** %buf, metadata !9011, metadata !DIExpression()), !dbg !9013
  call void @llvm.dbg.declare(metadata i8* %is_multiplanar, metadata !9014, metadata !DIExpression()), !dbg !9015
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9016
  %is_multiplanar1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 28, !dbg !9017
  %bf.load = load i16, i16* %is_multiplanar1, align 8, !dbg !9017
  %bf.lshr = lshr i16 %bf.load, 5, !dbg !9017
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9017
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9017
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9016
  %frombool = zext i1 %tobool to i8, !dbg !9015
  store i8 %frombool, i8* %is_multiplanar, align 1, !dbg !9015
  call void @llvm.dbg.declare(metadata i8* %copy_timestamp, metadata !9018, metadata !DIExpression()), !dbg !9019
  %1 = load i32, i32* %read.addr, align 4, !dbg !9020
  %tobool2 = icmp ne i32 %1, 0, !dbg !9020
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !9021

land.rhs:                                         ; preds = %entry
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9022
  %copy_timestamp3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %2, i32 0, i32 28, !dbg !9023
  %bf.load4 = load i16, i16* %copy_timestamp3, align 8, !dbg !9023
  %bf.lshr5 = lshr i16 %bf.load4, 7, !dbg !9023
  %bf.clear6 = and i16 %bf.lshr5, 1, !dbg !9023
  %bf.cast7 = zext i16 %bf.clear6 to i32, !dbg !9023
  %tobool8 = icmp ne i32 %bf.cast7, 0, !dbg !9021
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool8, %land.rhs ], !dbg !9024
  %frombool9 = zext i1 %3 to i8, !dbg !9019
  store i8 %frombool9, i8* %copy_timestamp, align 1, !dbg !9019
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9025, metadata !DIExpression()), !dbg !9026
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9027, metadata !DIExpression()), !dbg !9028
  br label %do.body, !dbg !9029

do.body:                                          ; preds = %land.end
  %4 = load i32, i32* @debug, align 4, !dbg !9030
  %cmp = icmp sge i32 %4, 3, !dbg !9030
  br i1 %cmp, label %if.then, label %if.end, !dbg !9033

if.then:                                          ; preds = %do.body
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9030
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %5, i32 0, i32 31, !dbg !9030
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !9030
  %6 = load i32, i32* %read.addr, align 4, !dbg !9030
  %tobool10 = icmp ne i32 %6, 0, !dbg !9030
  %7 = zext i1 %tobool10 to i64, !dbg !9030
  %cond = select i1 %tobool10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0), !dbg !9030
  %8 = load i64*, i64** %ppos.addr, align 8, !dbg !9030
  %9 = load i64, i64* %8, align 8, !dbg !9030
  %10 = load i64, i64* %count.addr, align 8, !dbg !9030
  %11 = load i32, i32* %nonblock.addr, align 4, !dbg !9030
  %tobool11 = icmp ne i32 %11, 0, !dbg !9030
  %12 = zext i1 %tobool11 to i64, !dbg !9030
  %cond12 = select i1 %tobool11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.98, i64 0, i64 0), !dbg !9030
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.96, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.__vb2_perform_fileio, i64 0, i64 0), i8* %cond, i64 %9, i64 %10, i8* %cond12) #11, !dbg !9030
  br label %if.end, !dbg !9030

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9033

do.end:                                           ; preds = %if.end
  %13 = load i8*, i8** %data.addr, align 8, !dbg !9034
  %tobool13 = icmp ne i8* %13, null, !dbg !9034
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !9036

if.then14:                                        ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !9037
  br label %return, !dbg !9037

if.end15:                                         ; preds = %do.end
  %14 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9038
  %waiting_in_dqbuf = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %14, i32 0, i32 28, !dbg !9040
  %bf.load16 = load i16, i16* %waiting_in_dqbuf, align 8, !dbg !9040
  %bf.lshr17 = lshr i16 %bf.load16, 4, !dbg !9040
  %bf.clear18 = and i16 %bf.lshr17, 1, !dbg !9040
  %bf.cast19 = zext i16 %bf.clear18 to i32, !dbg !9040
  %tobool20 = icmp ne i32 %bf.cast19, 0, !dbg !9038
  br i1 %tobool20, label %if.then21, label %if.end32, !dbg !9041

if.then21:                                        ; preds = %if.end15
  br label %do.body22, !dbg !9042

do.body22:                                        ; preds = %if.then21
  %15 = load i32, i32* @debug, align 4, !dbg !9044
  %cmp23 = icmp sge i32 %15, 3, !dbg !9044
  br i1 %cmp23, label %if.then24, label %if.end30, !dbg !9047

if.then24:                                        ; preds = %do.body22
  %16 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9044
  %name25 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %16, i32 0, i32 31, !dbg !9044
  %arraydecay26 = getelementptr inbounds [32 x i8], [32 x i8]* %name25, i64 0, i64 0, !dbg !9044
  %17 = load i32, i32* %read.addr, align 4, !dbg !9044
  %tobool27 = icmp ne i32 %17, 0, !dbg !9044
  %18 = zext i1 %tobool27 to i64, !dbg !9044
  %cond28 = select i1 %tobool27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i64 0, i64 0), !dbg !9044
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.99, i64 0, i64 0), i8* %arraydecay26, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.__vb2_perform_fileio, i64 0, i64 0), i8* %cond28) #11, !dbg !9044
  br label %if.end30, !dbg !9044

if.end30:                                         ; preds = %if.then24, %do.body22
  br label %do.end31, !dbg !9047

do.end31:                                         ; preds = %if.end30
  store i64 -16, i64* %retval, align 8, !dbg !9048
  br label %return, !dbg !9048

if.end32:                                         ; preds = %if.end15
  %19 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9049
  %call33 = call zeroext i1 @vb2_fileio_is_active(%struct.vb2_queue* %19) #10, !dbg !9051
  br i1 %call33, label %if.end47, label %if.then34, !dbg !9052

if.then34:                                        ; preds = %if.end32
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9053
  %21 = load i32, i32* %read.addr, align 4, !dbg !9055
  %call35 = call i32 @__vb2_init_fileio(%struct.vb2_queue* %20, i32 %21) #10, !dbg !9056
  store i32 %call35, i32* %ret, align 4, !dbg !9057
  br label %do.body36, !dbg !9058

do.body36:                                        ; preds = %if.then34
  %22 = load i32, i32* @debug, align 4, !dbg !9059
  %cmp37 = icmp sge i32 %22, 3, !dbg !9059
  br i1 %cmp37, label %if.then38, label %if.end42, !dbg !9062

if.then38:                                        ; preds = %do.body36
  %23 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9059
  %name39 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %23, i32 0, i32 31, !dbg !9059
  %arraydecay40 = getelementptr inbounds [32 x i8], [32 x i8]* %name39, i64 0, i64 0, !dbg !9059
  %24 = load i32, i32* %ret, align 4, !dbg !9059
  %call41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.102, i64 0, i64 0), i8* %arraydecay40, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.__vb2_perform_fileio, i64 0, i64 0), i32 %24) #11, !dbg !9059
  br label %if.end42, !dbg !9059

if.end42:                                         ; preds = %if.then38, %do.body36
  br label %do.end43, !dbg !9062

do.end43:                                         ; preds = %if.end42
  %25 = load i32, i32* %ret, align 4, !dbg !9063
  %tobool44 = icmp ne i32 %25, 0, !dbg !9063
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !9065

if.then45:                                        ; preds = %do.end43
  %26 = load i32, i32* %ret, align 4, !dbg !9066
  %conv = sext i32 %26 to i64, !dbg !9066
  store i64 %conv, i64* %retval, align 8, !dbg !9067
  br label %return, !dbg !9067

if.end46:                                         ; preds = %do.end43
  br label %if.end47, !dbg !9068

if.end47:                                         ; preds = %if.end46, %if.end32
  %27 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9069
  %fileio48 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %27, i32 0, i32 29, !dbg !9070
  %28 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio48, align 8, !dbg !9070
  store %struct.vb2_fileio_data* %28, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9071
  %29 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9072
  %cur_index = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %29, i32 0, i32 4, !dbg !9073
  %30 = load i32, i32* %cur_index, align 8, !dbg !9073
  store i32 %30, i32* %index, align 4, !dbg !9074
  %31 = load i32, i32* %index, align 4, !dbg !9075
  %32 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9077
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %32, i32 0, i32 21, !dbg !9078
  %33 = load i32, i32* %num_buffers, align 8, !dbg !9078
  %cmp49 = icmp uge i32 %31, %33, !dbg !9079
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !9080

if.then51:                                        ; preds = %if.end47
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %b, metadata !9081, metadata !DIExpression()), !dbg !9083
  %34 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9084
  %35 = load i32, i32* %nonblock.addr, align 4, !dbg !9085
  %tobool52 = icmp ne i32 %35, 0, !dbg !9085
  %call53 = call i32 @vb2_core_dqbuf(%struct.vb2_queue* %34, i32* %index, i8* null, i1 zeroext %tobool52) #10, !dbg !9086
  store i32 %call53, i32* %ret, align 4, !dbg !9087
  br label %do.body54, !dbg !9088

do.body54:                                        ; preds = %if.then51
  %36 = load i32, i32* @debug, align 4, !dbg !9089
  %cmp55 = icmp sge i32 %36, 5, !dbg !9089
  br i1 %cmp55, label %if.then57, label %if.end61, !dbg !9092

if.then57:                                        ; preds = %do.body54
  %37 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9089
  %name58 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %37, i32 0, i32 31, !dbg !9089
  %arraydecay59 = getelementptr inbounds [32 x i8], [32 x i8]* %name58, i64 0, i64 0, !dbg !9089
  %38 = load i32, i32* %ret, align 4, !dbg !9089
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.103, i64 0, i64 0), i8* %arraydecay59, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.__vb2_perform_fileio, i64 0, i64 0), i32 %38) #11, !dbg !9089
  br label %if.end61, !dbg !9089

if.end61:                                         ; preds = %if.then57, %do.body54
  br label %do.end62, !dbg !9092

do.end62:                                         ; preds = %if.end61
  %39 = load i32, i32* %ret, align 4, !dbg !9093
  %tobool63 = icmp ne i32 %39, 0, !dbg !9093
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !9095

if.then64:                                        ; preds = %do.end62
  %40 = load i32, i32* %ret, align 4, !dbg !9096
  %conv65 = sext i32 %40 to i64, !dbg !9096
  store i64 %conv65, i64* %retval, align 8, !dbg !9097
  br label %return, !dbg !9097

if.end66:                                         ; preds = %do.end62
  %41 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9098
  %dq_count = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %41, i32 0, i32 7, !dbg !9099
  %42 = load i32, i32* %dq_count, align 4, !dbg !9100
  %add = add i32 %42, 1, !dbg !9100
  store i32 %add, i32* %dq_count, align 4, !dbg !9100
  %43 = load i32, i32* %index, align 4, !dbg !9101
  %44 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9102
  %cur_index67 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %44, i32 0, i32 4, !dbg !9103
  store i32 %43, i32* %cur_index67, align 8, !dbg !9104
  %45 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9105
  %bufs = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %45, i32 0, i32 3, !dbg !9106
  %46 = load i32, i32* %index, align 4, !dbg !9107
  %idxprom = zext i32 %46 to i64, !dbg !9105
  %arrayidx = getelementptr [32 x %struct.vb2_fileio_buf], [32 x %struct.vb2_fileio_buf]* %bufs, i64 0, i64 %idxprom, !dbg !9105
  store %struct.vb2_fileio_buf* %arrayidx, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9108
  %47 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9109
  %bufs68 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %47, i32 0, i32 20, !dbg !9110
  %48 = load i32, i32* %index, align 4, !dbg !9111
  %idxprom69 = zext i32 %48 to i64, !dbg !9109
  %arrayidx70 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs68, i64 0, i64 %idxprom69, !dbg !9109
  %49 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx70, align 8, !dbg !9109
  store %struct.vb2_buffer* %49, %struct.vb2_buffer** %b, align 8, !dbg !9112
  %50 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9113
  %pos = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %50, i32 0, i32 2, !dbg !9114
  store i32 0, i32* %pos, align 4, !dbg !9115
  %51 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9116
  %queued = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %51, i32 0, i32 3, !dbg !9117
  %bf.load71 = load i8, i8* %queued, align 8, !dbg !9118
  %bf.clear72 = and i8 %bf.load71, -2, !dbg !9118
  store i8 %bf.clear72, i8* %queued, align 8, !dbg !9118
  %52 = load i32, i32* %read.addr, align 4, !dbg !9119
  %tobool73 = icmp ne i32 %52, 0, !dbg !9119
  br i1 %tobool73, label %cond.true, label %cond.false, !dbg !9119

cond.true:                                        ; preds = %if.end66
  %53 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9120
  %bufs74 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %53, i32 0, i32 20, !dbg !9121
  %54 = load i32, i32* %index, align 4, !dbg !9122
  %idxprom75 = zext i32 %54 to i64, !dbg !9120
  %arrayidx76 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs74, i64 0, i64 %idxprom75, !dbg !9120
  %55 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx76, align 8, !dbg !9120
  %call77 = call i64 @vb2_get_plane_payload(%struct.vb2_buffer* %55, i32 0) #10, !dbg !9123
  br label %cond.end, !dbg !9119

cond.false:                                       ; preds = %if.end66
  %56 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9124
  %bufs78 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %56, i32 0, i32 20, !dbg !9125
  %57 = load i32, i32* %index, align 4, !dbg !9126
  %idxprom79 = zext i32 %57 to i64, !dbg !9124
  %arrayidx80 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs78, i64 0, i64 %idxprom79, !dbg !9124
  %58 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx80, align 8, !dbg !9124
  %call81 = call i64 @vb2_plane_size(%struct.vb2_buffer* %58, i32 0) #10, !dbg !9127
  br label %cond.end, !dbg !9119

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond82 = phi i64 [ %call77, %cond.true ], [ %call81, %cond.false ], !dbg !9119
  %conv83 = trunc i64 %cond82 to i32, !dbg !9119
  %59 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9128
  %size = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %59, i32 0, i32 1, !dbg !9129
  store i32 %conv83, i32* %size, align 8, !dbg !9130
  %60 = load i8, i8* %is_multiplanar, align 1, !dbg !9131
  %tobool84 = trunc i8 %60 to i1, !dbg !9131
  br i1 %tobool84, label %land.lhs.true, label %if.end99, !dbg !9133

land.lhs.true:                                    ; preds = %cond.end
  %61 = load i32, i32* %read.addr, align 4, !dbg !9134
  %tobool86 = icmp ne i32 %61, 0, !dbg !9134
  br i1 %tobool86, label %land.lhs.true87, label %if.end99, !dbg !9135

land.lhs.true87:                                  ; preds = %land.lhs.true
  %62 = load %struct.vb2_buffer*, %struct.vb2_buffer** %b, align 8, !dbg !9136
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %62, i32 0, i32 10, !dbg !9137
  %arrayidx88 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 0, !dbg !9136
  %data_offset = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx88, i32 0, i32 7, !dbg !9138
  %63 = load i32, i32* %data_offset, align 8, !dbg !9138
  %64 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9139
  %size89 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %64, i32 0, i32 1, !dbg !9140
  %65 = load i32, i32* %size89, align 8, !dbg !9140
  %cmp90 = icmp ult i32 %63, %65, !dbg !9141
  br i1 %cmp90, label %if.then92, label %if.end99, !dbg !9142

if.then92:                                        ; preds = %land.lhs.true87
  %66 = load %struct.vb2_buffer*, %struct.vb2_buffer** %b, align 8, !dbg !9143
  %planes93 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %66, i32 0, i32 10, !dbg !9145
  %arrayidx94 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes93, i64 0, i64 0, !dbg !9143
  %data_offset95 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx94, i32 0, i32 7, !dbg !9146
  %67 = load i32, i32* %data_offset95, align 8, !dbg !9146
  %68 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9147
  %pos96 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %68, i32 0, i32 2, !dbg !9148
  store i32 %67, i32* %pos96, align 4, !dbg !9149
  %69 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9150
  %pos97 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %69, i32 0, i32 2, !dbg !9151
  %70 = load i32, i32* %pos97, align 4, !dbg !9151
  %71 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9152
  %size98 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %71, i32 0, i32 1, !dbg !9153
  %72 = load i32, i32* %size98, align 8, !dbg !9154
  %sub = sub i32 %72, %70, !dbg !9154
  store i32 %sub, i32* %size98, align 8, !dbg !9154
  br label %if.end99, !dbg !9155

if.end99:                                         ; preds = %if.then92, %land.lhs.true87, %land.lhs.true, %cond.end
  br label %if.end103, !dbg !9156

if.else:                                          ; preds = %if.end47
  %73 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9157
  %bufs100 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %73, i32 0, i32 3, !dbg !9159
  %74 = load i32, i32* %index, align 4, !dbg !9160
  %idxprom101 = zext i32 %74 to i64, !dbg !9157
  %arrayidx102 = getelementptr [32 x %struct.vb2_fileio_buf], [32 x %struct.vb2_fileio_buf]* %bufs100, i64 0, i64 %idxprom101, !dbg !9157
  store %struct.vb2_fileio_buf* %arrayidx102, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9161
  br label %if.end103

if.end103:                                        ; preds = %if.else, %if.end99
  %75 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9162
  %pos104 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %75, i32 0, i32 2, !dbg !9164
  %76 = load i32, i32* %pos104, align 4, !dbg !9164
  %conv105 = zext i32 %76 to i64, !dbg !9162
  %77 = load i64, i64* %count.addr, align 8, !dbg !9165
  %add106 = add i64 %conv105, %77, !dbg !9166
  %78 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9167
  %size107 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %78, i32 0, i32 1, !dbg !9168
  %79 = load i32, i32* %size107, align 8, !dbg !9168
  %conv108 = zext i32 %79 to i64, !dbg !9167
  %cmp109 = icmp ugt i64 %add106, %conv108, !dbg !9169
  br i1 %cmp109, label %if.then111, label %if.end125, !dbg !9170

if.then111:                                       ; preds = %if.end103
  %80 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9171
  %size112 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %80, i32 0, i32 1, !dbg !9173
  %81 = load i32, i32* %size112, align 8, !dbg !9173
  %82 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9174
  %pos113 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %82, i32 0, i32 2, !dbg !9175
  %83 = load i32, i32* %pos113, align 4, !dbg !9175
  %sub114 = sub i32 %81, %83, !dbg !9176
  %conv115 = zext i32 %sub114 to i64, !dbg !9171
  store i64 %conv115, i64* %count.addr, align 8, !dbg !9177
  br label %do.body116, !dbg !9178

do.body116:                                       ; preds = %if.then111
  %84 = load i32, i32* @debug, align 4, !dbg !9179
  %cmp117 = icmp sge i32 %84, 5, !dbg !9179
  br i1 %cmp117, label %if.then119, label %if.end123, !dbg !9182

if.then119:                                       ; preds = %do.body116
  %85 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9179
  %name120 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %85, i32 0, i32 31, !dbg !9179
  %arraydecay121 = getelementptr inbounds [32 x i8], [32 x i8]* %name120, i64 0, i64 0, !dbg !9179
  %86 = load i64, i64* %count.addr, align 8, !dbg !9179
  %call122 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.104, i64 0, i64 0), i8* %arraydecay121, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.__vb2_perform_fileio, i64 0, i64 0), i64 %86) #11, !dbg !9179
  br label %if.end123, !dbg !9179

if.end123:                                        ; preds = %if.then119, %do.body116
  br label %do.end124, !dbg !9182

do.end124:                                        ; preds = %if.end123
  br label %if.end125, !dbg !9183

if.end125:                                        ; preds = %do.end124, %if.end103
  br label %do.body126, !dbg !9184

do.body126:                                       ; preds = %if.end125
  %87 = load i32, i32* @debug, align 4, !dbg !9185
  %cmp127 = icmp sge i32 %87, 3, !dbg !9185
  br i1 %cmp127, label %if.then129, label %if.end134, !dbg !9188

if.then129:                                       ; preds = %do.body126
  %88 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9185
  %name130 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %88, i32 0, i32 31, !dbg !9185
  %arraydecay131 = getelementptr inbounds [32 x i8], [32 x i8]* %name130, i64 0, i64 0, !dbg !9185
  %89 = load i64, i64* %count.addr, align 8, !dbg !9185
  %90 = load i32, i32* %index, align 4, !dbg !9185
  %91 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9185
  %pos132 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %91, i32 0, i32 2, !dbg !9185
  %92 = load i32, i32* %pos132, align 4, !dbg !9185
  %call133 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.105, i64 0, i64 0), i8* %arraydecay131, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.__vb2_perform_fileio, i64 0, i64 0), i64 %89, i32 %90, i32 %92) #11, !dbg !9185
  br label %if.end134, !dbg !9185

if.end134:                                        ; preds = %if.then129, %do.body126
  br label %do.end135, !dbg !9188

do.end135:                                        ; preds = %if.end134
  %93 = load i32, i32* %read.addr, align 4, !dbg !9189
  %tobool136 = icmp ne i32 %93, 0, !dbg !9189
  br i1 %tobool136, label %if.then137, label %if.else141, !dbg !9190

if.then137:                                       ; preds = %do.end135
  %94 = load i8*, i8** %data.addr, align 8, !dbg !9191
  %95 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9192
  %vaddr = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %95, i32 0, i32 0, !dbg !9193
  %96 = load i8*, i8** %vaddr, align 8, !dbg !9193
  %97 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9194
  %pos138 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %97, i32 0, i32 2, !dbg !9195
  %98 = load i32, i32* %pos138, align 4, !dbg !9195
  %idx.ext = zext i32 %98 to i64, !dbg !9196
  %add.ptr = getelementptr i8, i8* %96, i64 %idx.ext, !dbg !9196
  %99 = load i64, i64* %count.addr, align 8, !dbg !9197
  store i8* %94, i8** %to.addr.i, align 8
  store i8* %add.ptr, i8** %from.addr.i, align 8
  store i64 %99, i64* %n.addr.i, align 8
  %100 = load i8*, i8** %from.addr.i, align 8, !dbg !9198
  %101 = load i64, i64* %n.addr.i, align 8, !dbg !9198
  store i8* %100, i8** %addr.addr.i.i, align 8
  store i64 %101, i64* %bytes.addr.i.i, align 8
  store i8 1, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !8989
  %102 = load i32, i32* %sz.i.i, align 4, !dbg !9199
  %cmp.i.i = icmp sge i32 %102, 0, !dbg !9199
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !9199

land.rhs.i.i:                                     ; preds = %if.then137
  %103 = load i32, i32* %sz.i.i, align 4, !dbg !9199
  %conv.i.i = sext i32 %103 to i64, !dbg !9199
  %104 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9199
  %cmp1.i.i = icmp ult i64 %conv.i.i, %104, !dbg !9199
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.then137
  %105 = phi i1 [ false, %if.then137 ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !9201
  %lnot.i.i = xor i1 %105, true, !dbg !9199
  %lnot.ext.i.i = zext i1 %105 to i32, !dbg !9199
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9199
  br i1 %105, label %if.then.i.i, label %if.end10.i.i, !dbg !9202

if.then.i.i:                                      ; preds = %land.end.i.i
  %106 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9203
  %107 = call i1 @llvm.is.constant.i64(i64 %106) #6, !dbg !9206
  br i1 %107, label %if.else.i.i, label %if.then5.i.i, !dbg !9207

if.then5.i.i:                                     ; preds = %if.then.i.i
  %108 = load i32, i32* %sz.i.i, align 4, !dbg !9208
  %109 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9209
  call void @copy_overflow(i32 %108, i64 %109) #12, !dbg !9210
  br label %if.end9.i.i, !dbg !9210

if.else.i.i:                                      ; preds = %if.then.i.i
  %110 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9211
  %tobool6.i.i = trunc i8 %110 to i1, !dbg !9211
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !9213

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #12, !dbg !9214
  br label %if.end.i.i, !dbg !9214

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #12, !dbg !9215
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9216
  br label %check_copy_size.exit.i, !dbg !9216

if.end10.i.i:                                     ; preds = %land.end.i.i
  %111 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !8990
  %cmp11.i.i = icmp ugt i64 %111, 2147483647, !dbg !8990
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !8990
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !8990
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !8990
  %112 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !9217
  %tobool17.i.i = icmp ne i32 %112, 0, !dbg !9217
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !9217
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !9217
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !9217
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !8990

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.109, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !9219, !srcloc !9222
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #6, !dbg !9223, !srcloc !9225
  br label %if.end31.i.i, !dbg !9226

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %113 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !8990
  %tobool32.i.i = icmp ne i32 %113, 0, !dbg !8990
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !8990
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !8990
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !8990
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !9217
  %114 = load i64, i64* %tmp.i.i, align 8, !dbg !8990
  %tobool38.i.i = icmp ne i64 %114, 0, !dbg !9227
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !9228

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !9229
  br label %check_copy_size.exit.i, !dbg !9229

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %115 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !9230
  %116 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !9231
  %117 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !9232
  %tobool41.i.i = trunc i8 %117 to i1, !dbg !9232
  call void @check_object_size(i8* %115, i64 %116, i1 zeroext %tobool41.i.i) #12, !dbg !9233
  store i1 true, i1* %retval.i.i, align 1, !dbg !9234
  br label %check_copy_size.exit.i, !dbg !9234

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %118 = load i1, i1* %retval.i.i, align 1, !dbg !9235
  %lnot.i = xor i1 %118, true, !dbg !9198
  %lnot.ext.i = zext i1 %118 to i32, !dbg !9198
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !9198
  br i1 %118, label %if.then.i, label %copy_to_user.exit, !dbg !9236

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %119 = load i8*, i8** %to.addr.i, align 8, !dbg !9237
  %120 = load i8*, i8** %from.addr.i, align 8, !dbg !9238
  %121 = load i64, i64* %n.addr.i, align 8, !dbg !9239
  %call2.i = call i64 @_copy_to_user(i8* %119, i8* %120, i64 %121) #12, !dbg !9240
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !9241
  br label %copy_to_user.exit, !dbg !9242

copy_to_user.exit:                                ; preds = %check_copy_size.exit.i, %if.then.i
  %122 = load i64, i64* %n.addr.i, align 8, !dbg !9243
  %conv140 = trunc i64 %122 to i32, !dbg !9244
  store i32 %conv140, i32* %ret, align 4, !dbg !9245
  br label %if.end148, !dbg !9246

if.else141:                                       ; preds = %do.end135
  %123 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9247
  %vaddr142 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %123, i32 0, i32 0, !dbg !9248
  %124 = load i8*, i8** %vaddr142, align 8, !dbg !9248
  %125 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9249
  %pos143 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %125, i32 0, i32 2, !dbg !9250
  %126 = load i32, i32* %pos143, align 4, !dbg !9250
  %idx.ext144 = zext i32 %126 to i64, !dbg !9251
  %add.ptr145 = getelementptr i8, i8* %124, i64 %idx.ext144, !dbg !9251
  %127 = load i8*, i8** %data.addr, align 8, !dbg !9252
  %128 = load i64, i64* %count.addr, align 8, !dbg !9253
  store i8* %add.ptr145, i8** %to.addr.i259, align 8
  store i8* %127, i8** %from.addr.i260, align 8
  store i64 %128, i64* %n.addr.i261, align 8
  %129 = load i8*, i8** %to.addr.i259, align 8, !dbg !9254
  %130 = load i64, i64* %n.addr.i261, align 8, !dbg !9254
  store i8* %129, i8** %addr.addr.i.i253, align 8
  store i64 %130, i64* %bytes.addr.i.i254, align 8
  store i8 0, i8* %is_source.addr.i.i255, align 1
  store i32 -1, i32* %sz.i.i256, align 4, !dbg !8971
  %131 = load i32, i32* %sz.i.i256, align 4, !dbg !9255
  %cmp.i.i262 = icmp sge i32 %131, 0, !dbg !9255
  br i1 %cmp.i.i262, label %land.rhs.i.i265, label %land.end.i.i269, !dbg !9255

land.rhs.i.i265:                                  ; preds = %if.else141
  %132 = load i32, i32* %sz.i.i256, align 4, !dbg !9255
  %conv.i.i263 = sext i32 %132 to i64, !dbg !9255
  %133 = load i64, i64* %bytes.addr.i.i254, align 8, !dbg !9255
  %cmp1.i.i264 = icmp ult i64 %conv.i.i263, %133, !dbg !9255
  br label %land.end.i.i269

land.end.i.i269:                                  ; preds = %land.rhs.i.i265, %if.else141
  %134 = phi i1 [ false, %if.else141 ], [ %cmp1.i.i264, %land.rhs.i.i265 ], !dbg !9256
  %lnot.i.i266 = xor i1 %134, true, !dbg !9255
  %lnot.ext.i.i267 = zext i1 %134 to i32, !dbg !9255
  %conv4.i.i268 = sext i32 %lnot.ext.i.i267 to i64, !dbg !9255
  br i1 %134, label %if.then.i.i270, label %if.end10.i.i285, !dbg !9257

if.then.i.i270:                                   ; preds = %land.end.i.i269
  %135 = load i64, i64* %bytes.addr.i.i254, align 8, !dbg !9258
  %136 = call i1 @llvm.is.constant.i64(i64 %135) #6, !dbg !9259
  br i1 %136, label %if.else.i.i273, label %if.then5.i.i271, !dbg !9260

if.then5.i.i271:                                  ; preds = %if.then.i.i270
  %137 = load i32, i32* %sz.i.i256, align 4, !dbg !9261
  %138 = load i64, i64* %bytes.addr.i.i254, align 8, !dbg !9262
  call void @copy_overflow(i32 %137, i64 %138) #12, !dbg !9263
  br label %if.end9.i.i277, !dbg !9263

if.else.i.i273:                                   ; preds = %if.then.i.i270
  %139 = load i8, i8* %is_source.addr.i.i255, align 1, !dbg !9264
  %tobool6.i.i272 = trunc i8 %139 to i1, !dbg !9264
  br i1 %tobool6.i.i272, label %if.then7.i.i274, label %if.else8.i.i275, !dbg !9265

if.then7.i.i274:                                  ; preds = %if.else.i.i273
  call void @__bad_copy_from() #12, !dbg !9266
  br label %if.end.i.i276, !dbg !9266

if.else8.i.i275:                                  ; preds = %if.else.i.i273
  call void @__bad_copy_to() #12, !dbg !9267
  br label %if.end.i.i276

if.end.i.i276:                                    ; preds = %if.else8.i.i275, %if.then7.i.i274
  br label %if.end9.i.i277

if.end9.i.i277:                                   ; preds = %if.end.i.i276, %if.then5.i.i271
  store i1 false, i1* %retval.i.i252, align 1, !dbg !9268
  br label %check_copy_size.exit.i299, !dbg !9268

if.end10.i.i285:                                  ; preds = %land.end.i.i269
  %140 = load i64, i64* %bytes.addr.i.i254, align 8, !dbg !8975
  %cmp11.i.i278 = icmp ugt i64 %140, 2147483647, !dbg !8975
  %lnot13.i.i279 = xor i1 %cmp11.i.i278, true, !dbg !8975
  %lnot.ext16.i.i280 = zext i1 %cmp11.i.i278 to i32, !dbg !8975
  store i32 %lnot.ext16.i.i280, i32* %__ret_warn_on.i.i257, align 4, !dbg !8975
  %141 = load i32, i32* %__ret_warn_on.i.i257, align 4, !dbg !9269
  %tobool17.i.i281 = icmp ne i32 %141, 0, !dbg !9269
  %lnot18.i.i282 = xor i1 %tobool17.i.i281, true, !dbg !9269
  %lnot.ext21.i.i283 = zext i1 %tobool17.i.i281 to i32, !dbg !9269
  %conv22.i.i284 = sext i32 %lnot.ext21.i.i283 to i64, !dbg !9269
  br i1 %tobool17.i.i281, label %if.then24.i.i286, label %if.end31.i.i292, !dbg !8975

if.then24.i.i286:                                 ; preds = %if.end10.i.i285
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.109, i64 0, i64 0), i32 150, i32 2307, i64 12) #6, !dbg !9270, !srcloc !9222
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #6, !dbg !9271, !srcloc !9225
  br label %if.end31.i.i292, !dbg !9272

if.end31.i.i292:                                  ; preds = %if.then24.i.i286, %if.end10.i.i285
  %142 = load i32, i32* %__ret_warn_on.i.i257, align 4, !dbg !8975
  %tobool32.i.i287 = icmp ne i32 %142, 0, !dbg !8975
  %lnot33.i.i288 = xor i1 %tobool32.i.i287, true, !dbg !8975
  %lnot.ext36.i.i289 = zext i1 %tobool32.i.i287 to i32, !dbg !8975
  %conv37.i.i290 = sext i32 %lnot.ext36.i.i289 to i64, !dbg !8975
  store i64 %conv37.i.i290, i64* %tmp.i.i258, align 8, !dbg !9269
  %143 = load i64, i64* %tmp.i.i258, align 8, !dbg !8975
  %tobool38.i.i291 = icmp ne i64 %143, 0, !dbg !9273
  br i1 %tobool38.i.i291, label %if.then39.i.i293, label %if.end40.i.i295, !dbg !9274

if.then39.i.i293:                                 ; preds = %if.end31.i.i292
  store i1 false, i1* %retval.i.i252, align 1, !dbg !9275
  br label %check_copy_size.exit.i299, !dbg !9275

if.end40.i.i295:                                  ; preds = %if.end31.i.i292
  %144 = load i8*, i8** %addr.addr.i.i253, align 8, !dbg !9276
  %145 = load i64, i64* %bytes.addr.i.i254, align 8, !dbg !9277
  %146 = load i8, i8* %is_source.addr.i.i255, align 1, !dbg !9278
  %tobool41.i.i294 = trunc i8 %146 to i1, !dbg !9278
  call void @check_object_size(i8* %144, i64 %145, i1 zeroext %tobool41.i.i294) #12, !dbg !9279
  store i1 true, i1* %retval.i.i252, align 1, !dbg !9280
  br label %check_copy_size.exit.i299, !dbg !9280

check_copy_size.exit.i299:                        ; preds = %if.end40.i.i295, %if.then39.i.i293, %if.end9.i.i277
  %147 = load i1, i1* %retval.i.i252, align 1, !dbg !9281
  %lnot.i296 = xor i1 %147, true, !dbg !9254
  %lnot.ext.i297 = zext i1 %147 to i32, !dbg !9254
  %conv.i298 = sext i32 %lnot.ext.i297 to i64, !dbg !9254
  br i1 %147, label %if.then.i301, label %copy_from_user.exit, !dbg !9282

if.then.i301:                                     ; preds = %check_copy_size.exit.i299
  %148 = load i8*, i8** %to.addr.i259, align 8, !dbg !9283
  %149 = load i8*, i8** %from.addr.i260, align 8, !dbg !9284
  %150 = load i64, i64* %n.addr.i261, align 8, !dbg !9285
  %call2.i300 = call i64 @_copy_from_user(i8* %148, i8* %149, i64 %150) #12, !dbg !9286
  store i64 %call2.i300, i64* %n.addr.i261, align 8, !dbg !9287
  br label %copy_from_user.exit, !dbg !9288

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i299, %if.then.i301
  %151 = load i64, i64* %n.addr.i261, align 8, !dbg !9289
  %conv147 = trunc i64 %151 to i32, !dbg !9290
  store i32 %conv147, i32* %ret, align 4, !dbg !9291
  br label %if.end148

if.end148:                                        ; preds = %copy_from_user.exit, %copy_to_user.exit
  %152 = load i32, i32* %ret, align 4, !dbg !9292
  %tobool149 = icmp ne i32 %152, 0, !dbg !9292
  br i1 %tobool149, label %if.then150, label %if.end160, !dbg !9294

if.then150:                                       ; preds = %if.end148
  br label %do.body151, !dbg !9295

do.body151:                                       ; preds = %if.then150
  %153 = load i32, i32* @debug, align 4, !dbg !9297
  %cmp152 = icmp sge i32 %153, 3, !dbg !9297
  br i1 %cmp152, label %if.then154, label %if.end158, !dbg !9300

if.then154:                                       ; preds = %do.body151
  %154 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9297
  %name155 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %154, i32 0, i32 31, !dbg !9297
  %arraydecay156 = getelementptr inbounds [32 x i8], [32 x i8]* %name155, i64 0, i64 0, !dbg !9297
  %call157 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.106, i64 0, i64 0), i8* %arraydecay156, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.__vb2_perform_fileio, i64 0, i64 0)) #11, !dbg !9297
  br label %if.end158, !dbg !9297

if.end158:                                        ; preds = %if.then154, %do.body151
  br label %do.end159, !dbg !9300

do.end159:                                        ; preds = %if.end158
  store i64 -14, i64* %retval, align 8, !dbg !9301
  br label %return, !dbg !9301

if.end160:                                        ; preds = %if.end148
  %155 = load i64, i64* %count.addr, align 8, !dbg !9302
  %156 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9303
  %pos161 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %156, i32 0, i32 2, !dbg !9304
  %157 = load i32, i32* %pos161, align 4, !dbg !9305
  %conv162 = zext i32 %157 to i64, !dbg !9305
  %add163 = add i64 %conv162, %155, !dbg !9305
  %conv164 = trunc i64 %add163 to i32, !dbg !9305
  store i32 %conv164, i32* %pos161, align 4, !dbg !9305
  %158 = load i64, i64* %count.addr, align 8, !dbg !9306
  %159 = load i64*, i64** %ppos.addr, align 8, !dbg !9307
  %160 = load i64, i64* %159, align 8, !dbg !9308
  %add165 = add i64 %160, %158, !dbg !9308
  store i64 %add165, i64* %159, align 8, !dbg !9308
  %161 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9309
  %pos166 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %161, i32 0, i32 2, !dbg !9311
  %162 = load i32, i32* %pos166, align 4, !dbg !9311
  %163 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9312
  %size167 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %163, i32 0, i32 1, !dbg !9313
  %164 = load i32, i32* %size167, align 8, !dbg !9313
  %cmp168 = icmp eq i32 %162, %164, !dbg !9314
  br i1 %cmp168, label %if.then177, label %lor.lhs.false, !dbg !9315

lor.lhs.false:                                    ; preds = %if.end160
  %165 = load i32, i32* %read.addr, align 4, !dbg !9316
  %tobool170 = icmp ne i32 %165, 0, !dbg !9316
  br i1 %tobool170, label %if.end245, label %land.lhs.true171, !dbg !9317

land.lhs.true171:                                 ; preds = %lor.lhs.false
  %166 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9318
  %write_immediately = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %166, i32 0, i32 8, !dbg !9319
  %bf.load172 = load i8, i8* %write_immediately, align 8, !dbg !9319
  %bf.lshr173 = lshr i8 %bf.load172, 1, !dbg !9319
  %bf.clear174 = and i8 %bf.lshr173, 1, !dbg !9319
  %bf.cast175 = zext i8 %bf.clear174 to i32, !dbg !9319
  %tobool176 = icmp ne i32 %bf.cast175, 0, !dbg !9318
  br i1 %tobool176, label %if.then177, label %if.end245, !dbg !9320

if.then177:                                       ; preds = %land.lhs.true171, %if.end160
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %b178, metadata !9321, metadata !DIExpression()), !dbg !9323
  %167 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9324
  %bufs179 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %167, i32 0, i32 20, !dbg !9325
  %168 = load i32, i32* %index, align 4, !dbg !9326
  %idxprom180 = zext i32 %168 to i64, !dbg !9324
  %arrayidx181 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs179, i64 0, i64 %idxprom180, !dbg !9324
  %169 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx181, align 8, !dbg !9324
  store %struct.vb2_buffer* %169, %struct.vb2_buffer** %b178, align 8, !dbg !9323
  %170 = load i32, i32* %read.addr, align 4, !dbg !9327
  %tobool182 = icmp ne i32 %170, 0, !dbg !9327
  br i1 %tobool182, label %land.lhs.true183, label %if.end204, !dbg !9329

land.lhs.true183:                                 ; preds = %if.then177
  %171 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9330
  %read_once = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %171, i32 0, i32 8, !dbg !9331
  %bf.load184 = load i8, i8* %read_once, align 8, !dbg !9331
  %bf.clear185 = and i8 %bf.load184, 1, !dbg !9331
  %bf.cast186 = zext i8 %bf.clear185 to i32, !dbg !9331
  %tobool187 = icmp ne i32 %bf.cast186, 0, !dbg !9330
  br i1 %tobool187, label %land.lhs.true188, label %if.end204, !dbg !9332

land.lhs.true188:                                 ; preds = %land.lhs.true183
  %172 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9333
  %dq_count189 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %172, i32 0, i32 7, !dbg !9334
  %173 = load i32, i32* %dq_count189, align 4, !dbg !9334
  %cmp190 = icmp eq i32 %173, 1, !dbg !9335
  br i1 %cmp190, label %if.then192, label %if.end204, !dbg !9336

if.then192:                                       ; preds = %land.lhs.true188
  br label %do.body193, !dbg !9337

do.body193:                                       ; preds = %if.then192
  %174 = load i32, i32* @debug, align 4, !dbg !9339
  %cmp194 = icmp sge i32 %174, 3, !dbg !9339
  br i1 %cmp194, label %if.then196, label %if.end200, !dbg !9342

if.then196:                                       ; preds = %do.body193
  %175 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9339
  %name197 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %175, i32 0, i32 31, !dbg !9339
  %arraydecay198 = getelementptr inbounds [32 x i8], [32 x i8]* %name197, i64 0, i64 0, !dbg !9339
  %call199 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.107, i64 0, i64 0), i8* %arraydecay198, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.__vb2_perform_fileio, i64 0, i64 0)) #11, !dbg !9339
  br label %if.end200, !dbg !9339

if.end200:                                        ; preds = %if.then196, %do.body193
  br label %do.end201, !dbg !9342

do.end201:                                        ; preds = %if.end200
  %176 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9343
  %call202 = call i32 @__vb2_cleanup_fileio(%struct.vb2_queue* %176) #10, !dbg !9344
  %conv203 = sext i32 %call202 to i64, !dbg !9344
  store i64 %conv203, i64* %retval, align 8, !dbg !9345
  br label %return, !dbg !9345

if.end204:                                        ; preds = %land.lhs.true188, %land.lhs.true183, %if.then177
  %177 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9346
  %pos205 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %177, i32 0, i32 2, !dbg !9347
  %178 = load i32, i32* %pos205, align 4, !dbg !9347
  %179 = load %struct.vb2_buffer*, %struct.vb2_buffer** %b178, align 8, !dbg !9348
  %planes206 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %179, i32 0, i32 10, !dbg !9349
  %arrayidx207 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes206, i64 0, i64 0, !dbg !9348
  %bytesused = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx207, i32 0, i32 3, !dbg !9350
  store i32 %178, i32* %bytesused, align 4, !dbg !9351
  %180 = load i8, i8* %copy_timestamp, align 1, !dbg !9352
  %tobool208 = trunc i8 %180 to i1, !dbg !9352
  br i1 %tobool208, label %if.then209, label %if.end211, !dbg !9354

if.then209:                                       ; preds = %if.end204
  %call210 = call i64 @ktime_get_ns() #10, !dbg !9355
  %181 = load %struct.vb2_buffer*, %struct.vb2_buffer** %b178, align 8, !dbg !9356
  %timestamp = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %181, i32 0, i32 5, !dbg !9357
  store i64 %call210, i64* %timestamp, align 8, !dbg !9358
  br label %if.end211, !dbg !9356

if.end211:                                        ; preds = %if.then209, %if.end204
  %182 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9359
  %183 = load i32, i32* %index, align 4, !dbg !9360
  %call212 = call i32 @vb2_core_qbuf(%struct.vb2_queue* %182, i32 %183, i8* null, %struct.media_request* null) #10, !dbg !9361
  store i32 %call212, i32* %ret, align 4, !dbg !9362
  br label %do.body213, !dbg !9363

do.body213:                                       ; preds = %if.end211
  %184 = load i32, i32* @debug, align 4, !dbg !9364
  %cmp214 = icmp sge i32 %184, 5, !dbg !9364
  br i1 %cmp214, label %if.then216, label %if.end220, !dbg !9367

if.then216:                                       ; preds = %do.body213
  %185 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9364
  %name217 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %185, i32 0, i32 31, !dbg !9364
  %arraydecay218 = getelementptr inbounds [32 x i8], [32 x i8]* %name217, i64 0, i64 0, !dbg !9364
  %186 = load i32, i32* %ret, align 4, !dbg !9364
  %call219 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.108, i64 0, i64 0), i8* %arraydecay218, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.__vb2_perform_fileio, i64 0, i64 0), i32 %186) #11, !dbg !9364
  br label %if.end220, !dbg !9364

if.end220:                                        ; preds = %if.then216, %do.body213
  br label %do.end221, !dbg !9367

do.end221:                                        ; preds = %if.end220
  %187 = load i32, i32* %ret, align 4, !dbg !9368
  %tobool222 = icmp ne i32 %187, 0, !dbg !9368
  br i1 %tobool222, label %if.then223, label %if.end225, !dbg !9370

if.then223:                                       ; preds = %do.end221
  %188 = load i32, i32* %ret, align 4, !dbg !9371
  %conv224 = sext i32 %188 to i64, !dbg !9371
  store i64 %conv224, i64* %retval, align 8, !dbg !9372
  br label %return, !dbg !9372

if.end225:                                        ; preds = %do.end221
  %189 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9373
  %pos226 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %189, i32 0, i32 2, !dbg !9374
  store i32 0, i32* %pos226, align 4, !dbg !9375
  %190 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9376
  %queued227 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %190, i32 0, i32 3, !dbg !9377
  %bf.load228 = load i8, i8* %queued227, align 8, !dbg !9378
  %bf.clear229 = and i8 %bf.load228, -2, !dbg !9378
  %bf.set = or i8 %bf.clear229, 1, !dbg !9378
  store i8 %bf.set, i8* %queued227, align 8, !dbg !9378
  %191 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9379
  %bufs230 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %191, i32 0, i32 20, !dbg !9380
  %192 = load i32, i32* %index, align 4, !dbg !9381
  %idxprom231 = zext i32 %192 to i64, !dbg !9379
  %arrayidx232 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs230, i64 0, i64 %idxprom231, !dbg !9379
  %193 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx232, align 8, !dbg !9379
  %call233 = call i64 @vb2_plane_size(%struct.vb2_buffer* %193, i32 0) #10, !dbg !9382
  %conv234 = trunc i64 %call233 to i32, !dbg !9382
  %194 = load %struct.vb2_fileio_buf*, %struct.vb2_fileio_buf** %buf, align 8, !dbg !9383
  %size235 = getelementptr inbounds %struct.vb2_fileio_buf, %struct.vb2_fileio_buf* %194, i32 0, i32 1, !dbg !9384
  store i32 %conv234, i32* %size235, align 8, !dbg !9385
  %195 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9386
  %q_count = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %195, i32 0, i32 6, !dbg !9387
  %196 = load i32, i32* %q_count, align 8, !dbg !9388
  %add236 = add i32 %196, 1, !dbg !9388
  store i32 %add236, i32* %q_count, align 8, !dbg !9388
  %197 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9389
  %initial_index = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %197, i32 0, i32 5, !dbg !9391
  %198 = load i32, i32* %initial_index, align 4, !dbg !9391
  %199 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9392
  %num_buffers237 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %199, i32 0, i32 21, !dbg !9393
  %200 = load i32, i32* %num_buffers237, align 8, !dbg !9393
  %cmp238 = icmp ult i32 %198, %200, !dbg !9394
  br i1 %cmp238, label %if.then240, label %if.end242, !dbg !9395

if.then240:                                       ; preds = %if.end225
  %201 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9396
  %initial_index241 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %201, i32 0, i32 5, !dbg !9397
  %202 = load i32, i32* %initial_index241, align 4, !dbg !9398
  %inc = add i32 %202, 1, !dbg !9398
  store i32 %inc, i32* %initial_index241, align 4, !dbg !9398
  br label %if.end242, !dbg !9396

if.end242:                                        ; preds = %if.then240, %if.end225
  %203 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9399
  %initial_index243 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %203, i32 0, i32 5, !dbg !9400
  %204 = load i32, i32* %initial_index243, align 4, !dbg !9400
  %205 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9401
  %cur_index244 = getelementptr inbounds %struct.vb2_fileio_data, %struct.vb2_fileio_data* %205, i32 0, i32 4, !dbg !9402
  store i32 %204, i32* %cur_index244, align 8, !dbg !9403
  br label %if.end245, !dbg !9404

if.end245:                                        ; preds = %if.end242, %land.lhs.true171, %lor.lhs.false
  %206 = load i32, i32* %ret, align 4, !dbg !9405
  %cmp246 = icmp eq i32 %206, 0, !dbg !9407
  br i1 %cmp246, label %if.then248, label %if.end250, !dbg !9408

if.then248:                                       ; preds = %if.end245
  %207 = load i64, i64* %count.addr, align 8, !dbg !9409
  %conv249 = trunc i64 %207 to i32, !dbg !9409
  store i32 %conv249, i32* %ret, align 4, !dbg !9410
  br label %if.end250, !dbg !9411

if.end250:                                        ; preds = %if.then248, %if.end245
  %208 = load i32, i32* %ret, align 4, !dbg !9412
  %conv251 = sext i32 %208 to i64, !dbg !9412
  store i64 %conv251, i64* %retval, align 8, !dbg !9413
  br label %return, !dbg !9413

return:                                           ; preds = %if.end250, %if.then223, %do.end201, %do.end159, %if.then64, %if.then45, %do.end31, %if.then14
  %209 = load i64, i64* %retval, align 8, !dbg !9414
  ret i64 %209, !dbg !9414
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @vb2_write(%struct.vb2_queue* %q, i8* %data, i64 %count, i64* %ppos, i32 %nonblocking) #0 !dbg !9415 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  %data.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %ppos.addr = alloca i64*, align 8
  %nonblocking.addr = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !9418, metadata !DIExpression()), !dbg !9419
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9420, metadata !DIExpression()), !dbg !9421
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !9422, metadata !DIExpression()), !dbg !9423
  store i64* %ppos, i64** %ppos.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %ppos.addr, metadata !9424, metadata !DIExpression()), !dbg !9425
  store i32 %nonblocking, i32* %nonblocking.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nonblocking.addr, metadata !9426, metadata !DIExpression()), !dbg !9427
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9428
  %1 = load i8*, i8** %data.addr, align 8, !dbg !9429
  %2 = load i64, i64* %count.addr, align 8, !dbg !9430
  %3 = load i64*, i64** %ppos.addr, align 8, !dbg !9431
  %4 = load i32, i32* %nonblocking.addr, align 4, !dbg !9432
  %call = call i64 @__vb2_perform_fileio(%struct.vb2_queue* %0, i8* %1, i64 %2, i64* %3, i32 %4, i32 0) #10, !dbg !9433
  ret i64 %call, !dbg !9434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_thread_start(%struct.vb2_queue* %q, i32 (%struct.vb2_buffer*, i8*)* %fnc, i8* %priv, i8* %thread_name) #0 !dbg !9435 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %fnc.addr = alloca i32 (%struct.vb2_buffer*, i8*)*, align 8
  %priv.addr = alloca i8*, align 8
  %thread_name.addr = alloca i8*, align 8
  %threadio = alloca %struct.vb2_threadio_data*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__k = alloca %struct.task_struct*, align 8
  %tmp55 = alloca %struct.task_struct*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !9438, metadata !DIExpression()), !dbg !9439
  store i32 (%struct.vb2_buffer*, i8*)* %fnc, i32 (%struct.vb2_buffer*, i8*)** %fnc.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.vb2_buffer*, i8*)** %fnc.addr, metadata !9440, metadata !DIExpression()), !dbg !9441
  store i8* %priv, i8** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %priv.addr, metadata !9442, metadata !DIExpression()), !dbg !9443
  store i8* %thread_name, i8** %thread_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %thread_name.addr, metadata !9444, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.declare(metadata %struct.vb2_threadio_data** %threadio, metadata !9446, metadata !DIExpression()), !dbg !9447
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9448, metadata !DIExpression()), !dbg !9449
  store i32 0, i32* %ret, align 4, !dbg !9449
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9450
  %threadio1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 30, !dbg !9452
  %1 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio1, align 8, !dbg !9452
  %tobool = icmp ne %struct.vb2_threadio_data* %1, null, !dbg !9450
  br i1 %tobool, label %if.then, label %if.end, !dbg !9453

if.then:                                          ; preds = %entry
  store i32 -16, i32* %retval, align 4, !dbg !9454
  br label %return, !dbg !9454

if.end:                                           ; preds = %entry
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9455
  %call = call zeroext i1 @vb2_is_busy(%struct.vb2_queue* %2) #10, !dbg !9457
  br i1 %call, label %if.then2, label %if.end3, !dbg !9458

if.then2:                                         ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !9459
  br label %return, !dbg !9459

if.end3:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9460, metadata !DIExpression()), !dbg !9463
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9463
  %fileio = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %3, i32 0, i32 29, !dbg !9463
  %4 = load %struct.vb2_fileio_data*, %struct.vb2_fileio_data** %fileio, align 8, !dbg !9463
  %tobool4 = icmp ne %struct.vb2_fileio_data* %4, null, !dbg !9463
  %lnot = xor i1 %tobool4, true, !dbg !9463
  %lnot5 = xor i1 %lnot, true, !dbg !9463
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !9463
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9463
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !9464
  %tobool6 = icmp ne i32 %5, 0, !dbg !9464
  %lnot7 = xor i1 %tobool6, true, !dbg !9464
  %lnot9 = xor i1 %lnot7, true, !dbg !9464
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !9464
  %conv = sext i32 %lnot.ext10 to i64, !dbg !9464
  %tobool11 = icmp ne i64 %conv, 0, !dbg !9464
  br i1 %tobool11, label %if.then12, label %if.end19, !dbg !9463

if.then12:                                        ; preds = %if.end3
  br label %do.body, !dbg !9464

do.body:                                          ; preds = %if.then12
  br label %do.body13, !dbg !9466

do.body13:                                        ; preds = %do.body
  br label %do.end, !dbg !9468

do.end:                                           ; preds = %do.body13
  br label %do.body14, !dbg !9466

do.body14:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 2911, i32 2305, i64 12) #6, !dbg !9470, !srcloc !9472
  br label %do.end15, !dbg !9470

do.end15:                                         ; preds = %do.body14
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 309) #6, !dbg !9473, !srcloc !9475
  br label %do.body16, !dbg !9466

do.body16:                                        ; preds = %do.end15
  br label %do.end17, !dbg !9476

do.end17:                                         ; preds = %do.body16
  br label %do.end18, !dbg !9466

do.end18:                                         ; preds = %do.end17
  br label %if.end19, !dbg !9466

if.end19:                                         ; preds = %do.end18, %if.end3
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !9463
  %tobool20 = icmp ne i32 %6, 0, !dbg !9463
  %lnot21 = xor i1 %tobool20, true, !dbg !9463
  %lnot23 = xor i1 %lnot21, true, !dbg !9463
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !9463
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !9463
  store i64 %conv25, i64* %tmp, align 8, !dbg !9464
  %7 = load i64, i64* %tmp, align 8, !dbg !9463
  %tobool26 = icmp ne i64 %7, 0, !dbg !9478
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !9479

if.then27:                                        ; preds = %if.end19
  store i32 -16, i32* %retval, align 4, !dbg !9480
  br label %return, !dbg !9480

if.end28:                                         ; preds = %if.end19
  %call29 = call i8* @kzalloc(i64 32, i32 3264) #10, !dbg !9481
  %8 = bitcast i8* %call29 to %struct.vb2_threadio_data*, !dbg !9481
  store %struct.vb2_threadio_data* %8, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9482
  %9 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9483
  %cmp = icmp eq %struct.vb2_threadio_data* %9, null, !dbg !9485
  br i1 %cmp, label %if.then31, label %if.end32, !dbg !9486

if.then31:                                        ; preds = %if.end28
  store i32 -12, i32* %retval, align 4, !dbg !9487
  br label %return, !dbg !9487

if.end32:                                         ; preds = %if.end28
  %10 = load i32 (%struct.vb2_buffer*, i8*)*, i32 (%struct.vb2_buffer*, i8*)** %fnc.addr, align 8, !dbg !9488
  %11 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9489
  %fnc33 = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %11, i32 0, i32 1, !dbg !9490
  store i32 (%struct.vb2_buffer*, i8*)* %10, i32 (%struct.vb2_buffer*, i8*)** %fnc33, align 8, !dbg !9491
  %12 = load i8*, i8** %priv.addr, align 8, !dbg !9492
  %13 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9493
  %priv34 = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %13, i32 0, i32 2, !dbg !9494
  store i8* %12, i8** %priv34, align 8, !dbg !9495
  %14 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9496
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9497
  %is_output = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 28, !dbg !9498
  %bf.load = load i16, i16* %is_output, align 8, !dbg !9498
  %bf.lshr = lshr i16 %bf.load, 6, !dbg !9498
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9498
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9498
  %tobool35 = icmp ne i32 %bf.cast, 0, !dbg !9499
  %lnot36 = xor i1 %tobool35, true, !dbg !9499
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !9499
  %call38 = call i32 @__vb2_init_fileio(%struct.vb2_queue* %14, i32 %lnot.ext37) #10, !dbg !9500
  store i32 %call38, i32* %ret, align 4, !dbg !9501
  br label %do.body39, !dbg !9502

do.body39:                                        ; preds = %if.end32
  %16 = load i32, i32* @debug, align 4, !dbg !9503
  %cmp40 = icmp sge i32 %16, 3, !dbg !9503
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !9506

if.then42:                                        ; preds = %do.body39
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9503
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %17, i32 0, i32 31, !dbg !9503
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !9503
  %18 = load i32, i32* %ret, align 4, !dbg !9503
  %call43 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.55, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.vb2_thread_start, i64 0, i64 0), i32 %18) #11, !dbg !9503
  br label %if.end44, !dbg !9503

if.end44:                                         ; preds = %if.then42, %do.body39
  br label %do.end45, !dbg !9506

do.end45:                                         ; preds = %if.end44
  %19 = load i32, i32* %ret, align 4, !dbg !9507
  %tobool46 = icmp ne i32 %19, 0, !dbg !9507
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !9509

if.then47:                                        ; preds = %do.end45
  br label %nomem, !dbg !9510

if.end48:                                         ; preds = %do.end45
  %20 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9511
  %21 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9512
  %threadio49 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %21, i32 0, i32 30, !dbg !9513
  store %struct.vb2_threadio_data* %20, %struct.vb2_threadio_data** %threadio49, align 8, !dbg !9514
  call void @llvm.dbg.declare(metadata %struct.task_struct** %__k, metadata !9515, metadata !DIExpression()), !dbg !9517
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9517
  %23 = bitcast %struct.vb2_queue* %22 to i8*, !dbg !9517
  %24 = load i8*, i8** %thread_name.addr, align 8, !dbg !9517
  %call50 = call %struct.task_struct* (i32 (i8*)*, i8*, i32, i8*, ...) @kthread_create_on_node(i32 (i8*)* @vb2_thread, i8* %23, i32 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.56, i64 0, i64 0), i8* %24) #10, !dbg !9517
  store %struct.task_struct* %call50, %struct.task_struct** %__k, align 8, !dbg !9517
  %25 = load %struct.task_struct*, %struct.task_struct** %__k, align 8, !dbg !9518
  %26 = bitcast %struct.task_struct* %25 to i8*, !dbg !9518
  %call51 = call zeroext i1 @IS_ERR(i8* %26) #10, !dbg !9518
  br i1 %call51, label %if.end54, label %if.then52, !dbg !9517

if.then52:                                        ; preds = %if.end48
  %27 = load %struct.task_struct*, %struct.task_struct** %__k, align 8, !dbg !9518
  %call53 = call i32 @wake_up_process(%struct.task_struct* %27) #10, !dbg !9518
  br label %if.end54, !dbg !9518

if.end54:                                         ; preds = %if.then52, %if.end48
  %28 = load %struct.task_struct*, %struct.task_struct** %__k, align 8, !dbg !9517
  store %struct.task_struct* %28, %struct.task_struct** %tmp55, align 8, !dbg !9518
  %29 = load %struct.task_struct*, %struct.task_struct** %tmp55, align 8, !dbg !9517
  %30 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9520
  %thread = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %30, i32 0, i32 0, !dbg !9521
  store %struct.task_struct* %29, %struct.task_struct** %thread, align 8, !dbg !9522
  %31 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9523
  %thread56 = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %31, i32 0, i32 0, !dbg !9525
  %32 = load %struct.task_struct*, %struct.task_struct** %thread56, align 8, !dbg !9525
  %33 = bitcast %struct.task_struct* %32 to i8*, !dbg !9523
  %call57 = call zeroext i1 @IS_ERR(i8* %33) #10, !dbg !9526
  br i1 %call57, label %if.then58, label %if.end63, !dbg !9527

if.then58:                                        ; preds = %if.end54
  %34 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9528
  %thread59 = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %34, i32 0, i32 0, !dbg !9530
  %35 = load %struct.task_struct*, %struct.task_struct** %thread59, align 8, !dbg !9530
  %36 = bitcast %struct.task_struct* %35 to i8*, !dbg !9528
  %call60 = call i64 @PTR_ERR(i8* %36) #10, !dbg !9531
  %conv61 = trunc i64 %call60 to i32, !dbg !9531
  store i32 %conv61, i32* %ret, align 4, !dbg !9532
  %37 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9533
  %thread62 = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %37, i32 0, i32 0, !dbg !9534
  store %struct.task_struct* null, %struct.task_struct** %thread62, align 8, !dbg !9535
  br label %nothread, !dbg !9536

if.end63:                                         ; preds = %if.end54
  store i32 0, i32* %retval, align 4, !dbg !9537
  br label %return, !dbg !9537

nothread:                                         ; preds = %if.then58
  call void @llvm.dbg.label(metadata !9538), !dbg !9539
  %38 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9540
  %call64 = call i32 @__vb2_cleanup_fileio(%struct.vb2_queue* %38) #10, !dbg !9541
  br label %nomem, !dbg !9541

nomem:                                            ; preds = %nothread, %if.then47
  call void @llvm.dbg.label(metadata !9542), !dbg !9543
  %39 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9544
  %40 = bitcast %struct.vb2_threadio_data* %39 to i8*, !dbg !9544
  call void @kfree(i8* %40) #10, !dbg !9545
  %41 = load i32, i32* %ret, align 4, !dbg !9546
  store i32 %41, i32* %retval, align 4, !dbg !9547
  br label %return, !dbg !9547

return:                                           ; preds = %nomem, %if.end63, %if.then31, %if.then27, %if.then2, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !9548
  ret i32 %42, !dbg !9548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @vb2_is_busy(%struct.vb2_queue* %q) #0 !dbg !9549 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !9550, metadata !DIExpression()), !dbg !9551
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !9552
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 21, !dbg !9553
  %1 = load i32, i32* %num_buffers, align 8, !dbg !9553
  %cmp = icmp ugt i32 %1, 0, !dbg !9554
  ret i1 %cmp, !dbg !9555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !9556 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !9559, metadata !DIExpression()), !dbg !9563
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !9569, metadata !DIExpression()), !dbg !9570
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !9571, metadata !DIExpression()), !dbg !9572
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !9573, metadata !DIExpression()), !dbg !9574
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !9575, metadata !DIExpression()), !dbg !9579
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !9581, metadata !DIExpression()), !dbg !9585
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !9587, metadata !DIExpression()), !dbg !9591
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !9596, metadata !DIExpression()), !dbg !9597
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !9598, metadata !DIExpression()), !dbg !9599
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !9600, metadata !DIExpression()), !dbg !9601
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !9602, metadata !DIExpression()), !dbg !9603
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !9604, metadata !DIExpression()), !dbg !9605
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !9606, metadata !DIExpression()), !dbg !9607
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !9608, metadata !DIExpression()), !dbg !9609
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !9610, metadata !DIExpression()), !dbg !9611
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9612, metadata !DIExpression()), !dbg !9613
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9614, metadata !DIExpression()), !dbg !9615
  %0 = load i64, i64* %size.addr, align 8, !dbg !9616
  %1 = load i32, i32* %flags.addr, align 4, !dbg !9617
  %or = or i32 %1, 256, !dbg !9618
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !9619
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #6, !dbg !9620
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !9621

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !9622
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !9623
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9624

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !9625
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !9626
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !9627
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !9628
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9605
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !9629
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9630
  %10 = load i32, i32* %order.i.i, align 4, !dbg !9631
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9632
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9633
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9634
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !9635
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9635
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9635
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9635
  call void @llvm.assume(i1 %maskcond.i.i.i) #6, !dbg !9635
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9636
  br label %kmalloc.exit, !dbg !9636

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !9637
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9638
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !9638
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9640

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9641
  br label %kmalloc_index.exit.i, !dbg !9641

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9642
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !9644
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9645

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9646
  br label %kmalloc_index.exit.i, !dbg !9646

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9647
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !9649
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9650

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9651
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !9652
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9653

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9654
  br label %kmalloc_index.exit.i, !dbg !9654

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9655
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !9657
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9658

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9659
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !9660
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9661

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9662
  br label %kmalloc_index.exit.i, !dbg !9662

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9663
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !9665
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9666

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9667
  br label %kmalloc_index.exit.i, !dbg !9667

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9668
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !9670
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9671

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9672
  br label %kmalloc_index.exit.i, !dbg !9672

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9673
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !9675
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9676

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9677
  br label %kmalloc_index.exit.i, !dbg !9677

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9678
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !9680
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9681

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9682
  br label %kmalloc_index.exit.i, !dbg !9682

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9683
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !9685
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9686

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9687
  br label %kmalloc_index.exit.i, !dbg !9687

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9688
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !9690
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9691

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9692
  br label %kmalloc_index.exit.i, !dbg !9692

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9693
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !9695
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9696

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9697
  br label %kmalloc_index.exit.i, !dbg !9697

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9698
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !9700
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9701

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9702
  br label %kmalloc_index.exit.i, !dbg !9702

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9703
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !9705
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9706

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9707
  br label %kmalloc_index.exit.i, !dbg !9707

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9708
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !9710
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9711

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9712
  br label %kmalloc_index.exit.i, !dbg !9712

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9713
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !9715
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9716

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9717
  br label %kmalloc_index.exit.i, !dbg !9717

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9718
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !9720
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9721

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9722
  br label %kmalloc_index.exit.i, !dbg !9722

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9723
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !9725
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9726

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9727
  br label %kmalloc_index.exit.i, !dbg !9727

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9728
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !9730
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9731

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9732
  br label %kmalloc_index.exit.i, !dbg !9732

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9733
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !9735
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9736

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9737
  br label %kmalloc_index.exit.i, !dbg !9737

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9738
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !9740
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9741

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9742
  br label %kmalloc_index.exit.i, !dbg !9742

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9743
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !9745
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9746

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9747
  br label %kmalloc_index.exit.i, !dbg !9747

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9748
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !9750
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9751

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9752
  br label %kmalloc_index.exit.i, !dbg !9752

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9753
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !9755
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9756

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9757
  br label %kmalloc_index.exit.i, !dbg !9757

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9758
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !9760
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9761

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9762
  br label %kmalloc_index.exit.i, !dbg !9762

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9763
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !9765
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9766

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9767
  br label %kmalloc_index.exit.i, !dbg !9767

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9768
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !9770
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9771

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9772
  br label %kmalloc_index.exit.i, !dbg !9772

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9773
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !9775
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9776

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9777
  br label %kmalloc_index.exit.i, !dbg !9777

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9778
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !9780
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9781

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9782
  br label %kmalloc_index.exit.i, !dbg !9782

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.111, i64 0, i64 0), i32 382, i32 0, i64 12) #6, !dbg !9783, !srcloc !9786
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 225) #6, !dbg !9787, !srcloc !9790
  unreachable, !dbg !9791

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !9792
  store i32 %45, i32* %index.i, align 4, !dbg !9793
  %46 = load i32, i32* %index.i, align 4, !dbg !9794
  %tobool.i = icmp ne i32 %46, 0, !dbg !9794
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9796

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9797
  br label %kmalloc.exit, !dbg !9797

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !9798
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9799
  %and.i.i = and i32 %48, 17, !dbg !9799
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9799
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9799
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9799
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9799
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9801

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9802
  br label %kmalloc_type.exit.i, !dbg !9802

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9803
  %and2.i.i = and i32 %49, 1, !dbg !9804
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9803
  %50 = zext i1 %tobool3.i.i to i64, !dbg !9803
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9803
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9805
  br label %kmalloc_type.exit.i, !dbg !9805

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !9806
  %idxprom.i = zext i32 %51 to i64, !dbg !9807
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9807
  %52 = load i32, i32* %index.i, align 4, !dbg !9808
  %idxprom6.i = zext i32 %52 to i64, !dbg !9807
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9807
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9807
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !9809
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !9810
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9811
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9812
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !9813
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9813
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9813
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9813
  call void @llvm.assume(i1 %maskcond.i.i) #6, !dbg !9813
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9574
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9814
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !9815
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9816
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9817
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !9818
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9819
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !9820
  store i8* %62, i8** %retval.i, align 8, !dbg !9821
  br label %kmalloc.exit, !dbg !9821

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !9822
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !9823
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !9824
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9824
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9824
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9824
  call void @llvm.assume(i1 %maskcond.i) #6, !dbg !9824
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9825
  br label %kmalloc.exit, !dbg !9825

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !9826
  ret i8* %65, !dbg !9827
}

; Function Attrs: noredzone
declare dso_local %struct.task_struct* @kthread_create_on_node(i32 (i8*)*, i8*, i32, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vb2_thread(i8* %data) #0 !dbg !9828 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !9829, metadata !DIExpression()), !dbg !9835
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !9841, metadata !DIExpression()), !dbg !9843
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !9844, metadata !DIExpression()), !dbg !9846
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %data.addr = alloca i8*, align 8
  %q = alloca %struct.vb2_queue*, align 8
  %threadio = alloca %struct.vb2_threadio_data*, align 8
  %copy_timestamp = alloca i8, align 1
  %prequeue = alloca i32, align 4
  %index = alloca i32, align 4
  %ret = alloca i32, align 4
  %vb = alloca %struct.vb2_buffer*, align 8
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9847, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q, metadata !9849, metadata !DIExpression()), !dbg !9850
  %0 = load i8*, i8** %data.addr, align 8, !dbg !9851
  %1 = bitcast i8* %0 to %struct.vb2_queue*, !dbg !9851
  store %struct.vb2_queue* %1, %struct.vb2_queue** %q, align 8, !dbg !9850
  call void @llvm.dbg.declare(metadata %struct.vb2_threadio_data** %threadio, metadata !9852, metadata !DIExpression()), !dbg !9853
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9854
  %threadio1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %2, i32 0, i32 30, !dbg !9855
  %3 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio1, align 8, !dbg !9855
  store %struct.vb2_threadio_data* %3, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9853
  call void @llvm.dbg.declare(metadata i8* %copy_timestamp, metadata !9856, metadata !DIExpression()), !dbg !9857
  store i8 0, i8* %copy_timestamp, align 1, !dbg !9857
  call void @llvm.dbg.declare(metadata i32* %prequeue, metadata !9858, metadata !DIExpression()), !dbg !9859
  store i32 0, i32* %prequeue, align 4, !dbg !9859
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9860, metadata !DIExpression()), !dbg !9861
  store i32 0, i32* %index, align 4, !dbg !9861
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9862, metadata !DIExpression()), !dbg !9863
  store i32 0, i32* %ret, align 4, !dbg !9863
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9864
  %is_output = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 28, !dbg !9866
  %bf.load = load i16, i16* %is_output, align 8, !dbg !9866
  %bf.lshr = lshr i16 %bf.load, 6, !dbg !9866
  %bf.clear = and i16 %bf.lshr, 1, !dbg !9866
  %bf.cast = zext i16 %bf.clear to i32, !dbg !9866
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !9864
  br i1 %tobool, label %if.then, label %if.end, !dbg !9867

if.then:                                          ; preds = %entry
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9868
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %5, i32 0, i32 21, !dbg !9870
  %6 = load i32, i32* %num_buffers, align 8, !dbg !9870
  store i32 %6, i32* %prequeue, align 4, !dbg !9871
  %7 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9872
  %copy_timestamp2 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %7, i32 0, i32 28, !dbg !9873
  %bf.load3 = load i16, i16* %copy_timestamp2, align 8, !dbg !9873
  %bf.lshr4 = lshr i16 %bf.load3, 7, !dbg !9873
  %bf.clear5 = and i16 %bf.lshr4, 1, !dbg !9873
  %bf.cast6 = zext i16 %bf.clear5 to i32, !dbg !9873
  %tobool7 = icmp ne i32 %bf.cast6, 0, !dbg !9872
  %frombool = zext i1 %tobool7 to i8, !dbg !9874
  store i8 %frombool, i8* %copy_timestamp, align 1, !dbg !9874
  br label %if.end, !dbg !9875

if.end:                                           ; preds = %if.then, %entry
  %call = call zeroext i1 @set_freezable() #10, !dbg !9876
  br label %for.cond, !dbg !9877

for.cond:                                         ; preds = %if.end85, %if.end
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !9878, metadata !DIExpression()), !dbg !9882
  %8 = load i32, i32* %prequeue, align 4, !dbg !9883
  %tobool8 = icmp ne i32 %8, 0, !dbg !9883
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !9885

if.then9:                                         ; preds = %for.cond
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9886
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %9, i32 0, i32 20, !dbg !9888
  %10 = load i32, i32* %index, align 4, !dbg !9889
  %inc = add i32 %10, 1, !dbg !9889
  store i32 %inc, i32* %index, align 4, !dbg !9889
  %idxprom = zext i32 %10 to i64, !dbg !9886
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !9886
  %11 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !9886
  store %struct.vb2_buffer* %11, %struct.vb2_buffer** %vb, align 8, !dbg !9890
  %12 = load i32, i32* %prequeue, align 4, !dbg !9891
  %dec = add i32 %12, -1, !dbg !9891
  store i32 %dec, i32* %prequeue, align 4, !dbg !9891
  br label %if.end38, !dbg !9892

if.else:                                          ; preds = %for.cond
  br label %do.body, !dbg !9893

do.body:                                          ; preds = %if.else
  %13 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9895
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %13, i32 0, i32 7, !dbg !9895
  %14 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !9895
  %wait_finish = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %14, i32 0, i32 2, !dbg !9895
  %15 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_finish, align 8, !dbg !9895
  %tobool10 = icmp ne void (%struct.vb2_queue*)* %15, null, !dbg !9895
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !9898

if.then11:                                        ; preds = %do.body
  %16 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9895
  %ops12 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %16, i32 0, i32 7, !dbg !9895
  %17 = load %struct.vb2_ops*, %struct.vb2_ops** %ops12, align 8, !dbg !9895
  %wait_finish13 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %17, i32 0, i32 2, !dbg !9895
  %18 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_finish13, align 8, !dbg !9895
  %19 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9895
  call void %18(%struct.vb2_queue* %19) #10, !dbg !9895
  br label %if.end14, !dbg !9895

if.end14:                                         ; preds = %if.then11, %do.body
  br label %do.end, !dbg !9898

do.end:                                           ; preds = %if.end14
  %20 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9899
  %stop = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %20, i32 0, i32 3, !dbg !9901
  %21 = load i8, i8* %stop, align 8, !dbg !9901
  %tobool15 = trunc i8 %21 to i1, !dbg !9901
  br i1 %tobool15, label %if.end18, label %if.then16, !dbg !9902

if.then16:                                        ; preds = %do.end
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9903
  %call17 = call i32 @vb2_core_dqbuf(%struct.vb2_queue* %22, i32* %index, i8* null, i1 zeroext false) #10, !dbg !9904
  store i32 %call17, i32* %ret, align 4, !dbg !9905
  br label %if.end18, !dbg !9906

if.end18:                                         ; preds = %if.then16, %do.end
  br label %do.body19, !dbg !9907

do.body19:                                        ; preds = %if.end18
  %23 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9908
  %ops20 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %23, i32 0, i32 7, !dbg !9908
  %24 = load %struct.vb2_ops*, %struct.vb2_ops** %ops20, align 8, !dbg !9908
  %wait_prepare = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %24, i32 0, i32 1, !dbg !9908
  %25 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_prepare, align 8, !dbg !9908
  %tobool21 = icmp ne void (%struct.vb2_queue*)* %25, null, !dbg !9908
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !9911

if.then22:                                        ; preds = %do.body19
  %26 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9908
  %ops23 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %26, i32 0, i32 7, !dbg !9908
  %27 = load %struct.vb2_ops*, %struct.vb2_ops** %ops23, align 8, !dbg !9908
  %wait_prepare24 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %27, i32 0, i32 1, !dbg !9908
  %28 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_prepare24, align 8, !dbg !9908
  %29 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9908
  call void %28(%struct.vb2_queue* %29) #10, !dbg !9908
  br label %if.end25, !dbg !9908

if.end25:                                         ; preds = %if.then22, %do.body19
  br label %do.end26, !dbg !9911

do.end26:                                         ; preds = %if.end25
  br label %do.body27, !dbg !9912

do.body27:                                        ; preds = %do.end26
  %30 = load i32, i32* @debug, align 4, !dbg !9913
  %cmp = icmp sge i32 %30, 5, !dbg !9913
  br i1 %cmp, label %if.then28, label %if.end30, !dbg !9916

if.then28:                                        ; preds = %do.body27
  %31 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9913
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %31, i32 0, i32 31, !dbg !9913
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !9913
  %32 = load i32, i32* %ret, align 4, !dbg !9913
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.112, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.vb2_thread, i64 0, i64 0), i32 %32) #11, !dbg !9913
  br label %if.end30, !dbg !9913

if.end30:                                         ; preds = %if.then28, %do.body27
  br label %do.end31, !dbg !9916

do.end31:                                         ; preds = %if.end30
  %33 = load i32, i32* %ret, align 4, !dbg !9917
  %tobool32 = icmp ne i32 %33, 0, !dbg !9917
  br i1 %tobool32, label %if.end37, label %if.then33, !dbg !9919

if.then33:                                        ; preds = %do.end31
  %34 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9920
  %bufs34 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %34, i32 0, i32 20, !dbg !9921
  %35 = load i32, i32* %index, align 4, !dbg !9922
  %idxprom35 = zext i32 %35 to i64, !dbg !9920
  %arrayidx36 = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs34, i64 0, i64 %idxprom35, !dbg !9920
  %36 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx36, align 8, !dbg !9920
  store %struct.vb2_buffer* %36, %struct.vb2_buffer** %vb, align 8, !dbg !9923
  br label %if.end37, !dbg !9924

if.end37:                                         ; preds = %if.then33, %do.end31
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then9
  %37 = load i32, i32* %ret, align 4, !dbg !9925
  %tobool39 = icmp ne i32 %37, 0, !dbg !9925
  br i1 %tobool39, label %if.then42, label %lor.lhs.false, !dbg !9927

lor.lhs.false:                                    ; preds = %if.end38
  %38 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9928
  %stop40 = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %38, i32 0, i32 3, !dbg !9929
  %39 = load i8, i8* %stop40, align 8, !dbg !9929
  %tobool41 = trunc i8 %39 to i1, !dbg !9929
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !9930

if.then42:                                        ; preds = %lor.lhs.false, %if.end38
  br label %for.end, !dbg !9931

if.end43:                                         ; preds = %lor.lhs.false
  %call44 = call zeroext i1 @try_to_freeze() #10, !dbg !9932
  %40 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !9933
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %40, i32 0, i32 8, !dbg !9935
  %41 = load i32, i32* %state, align 8, !dbg !9935
  %cmp45 = icmp ne i32 %41, 6, !dbg !9936
  br i1 %cmp45, label %if.then46, label %if.end51, !dbg !9937

if.then46:                                        ; preds = %if.end43
  %42 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9938
  %fnc = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %42, i32 0, i32 1, !dbg !9940
  %43 = load i32 (%struct.vb2_buffer*, i8*)*, i32 (%struct.vb2_buffer*, i8*)** %fnc, align 8, !dbg !9940
  %44 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !9941
  %45 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9942
  %priv = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %45, i32 0, i32 2, !dbg !9943
  %46 = load i8*, i8** %priv, align 8, !dbg !9943
  %call47 = call i32 %43(%struct.vb2_buffer* %44, i8* %46) #10, !dbg !9938
  %tobool48 = icmp ne i32 %call47, 0, !dbg !9938
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !9944

if.then49:                                        ; preds = %if.then46
  br label %for.end, !dbg !9945

if.end50:                                         ; preds = %if.then46
  br label %if.end51, !dbg !9946

if.end51:                                         ; preds = %if.end50, %if.end43
  br label %do.body52, !dbg !9947

do.body52:                                        ; preds = %if.end51
  %47 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9948
  %ops53 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %47, i32 0, i32 7, !dbg !9948
  %48 = load %struct.vb2_ops*, %struct.vb2_ops** %ops53, align 8, !dbg !9948
  %wait_finish54 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %48, i32 0, i32 2, !dbg !9948
  %49 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_finish54, align 8, !dbg !9948
  %tobool55 = icmp ne void (%struct.vb2_queue*)* %49, null, !dbg !9948
  br i1 %tobool55, label %if.then56, label %if.end59, !dbg !9951

if.then56:                                        ; preds = %do.body52
  %50 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9948
  %ops57 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %50, i32 0, i32 7, !dbg !9948
  %51 = load %struct.vb2_ops*, %struct.vb2_ops** %ops57, align 8, !dbg !9948
  %wait_finish58 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %51, i32 0, i32 2, !dbg !9948
  %52 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_finish58, align 8, !dbg !9948
  %53 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9948
  call void %52(%struct.vb2_queue* %53) #10, !dbg !9948
  br label %if.end59, !dbg !9948

if.end59:                                         ; preds = %if.then56, %do.body52
  br label %do.end60, !dbg !9951

do.end60:                                         ; preds = %if.end59
  %54 = load i8, i8* %copy_timestamp, align 1, !dbg !9952
  %tobool61 = trunc i8 %54 to i1, !dbg !9952
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !9954

if.then62:                                        ; preds = %do.end60
  %call63 = call i64 @ktime_get_ns() #10, !dbg !9955
  %55 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !9956
  %timestamp = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %55, i32 0, i32 5, !dbg !9957
  store i64 %call63, i64* %timestamp, align 8, !dbg !9958
  br label %if.end64, !dbg !9956

if.end64:                                         ; preds = %if.then62, %do.end60
  %56 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9959
  %stop65 = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %56, i32 0, i32 3, !dbg !9961
  %57 = load i8, i8* %stop65, align 8, !dbg !9961
  %tobool66 = trunc i8 %57 to i1, !dbg !9961
  br i1 %tobool66, label %if.end70, label %if.then67, !dbg !9962

if.then67:                                        ; preds = %if.end64
  %58 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9963
  %59 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !9964
  %index68 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %59, i32 0, i32 1, !dbg !9965
  %60 = load i32, i32* %index68, align 8, !dbg !9965
  %call69 = call i32 @vb2_core_qbuf(%struct.vb2_queue* %58, i32 %60, i8* null, %struct.media_request* null) #10, !dbg !9966
  store i32 %call69, i32* %ret, align 4, !dbg !9967
  br label %if.end70, !dbg !9968

if.end70:                                         ; preds = %if.then67, %if.end64
  br label %do.body71, !dbg !9969

do.body71:                                        ; preds = %if.end70
  %61 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9970
  %ops72 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %61, i32 0, i32 7, !dbg !9970
  %62 = load %struct.vb2_ops*, %struct.vb2_ops** %ops72, align 8, !dbg !9970
  %wait_prepare73 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %62, i32 0, i32 1, !dbg !9970
  %63 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_prepare73, align 8, !dbg !9970
  %tobool74 = icmp ne void (%struct.vb2_queue*)* %63, null, !dbg !9970
  br i1 %tobool74, label %if.then75, label %if.end78, !dbg !9973

if.then75:                                        ; preds = %do.body71
  %64 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9970
  %ops76 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %64, i32 0, i32 7, !dbg !9970
  %65 = load %struct.vb2_ops*, %struct.vb2_ops** %ops76, align 8, !dbg !9970
  %wait_prepare77 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %65, i32 0, i32 1, !dbg !9970
  %66 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_prepare77, align 8, !dbg !9970
  %67 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !9970
  call void %66(%struct.vb2_queue* %67) #10, !dbg !9970
  br label %if.end78, !dbg !9970

if.end78:                                         ; preds = %if.then75, %do.body71
  br label %do.end79, !dbg !9973

do.end79:                                         ; preds = %if.end78
  %68 = load i32, i32* %ret, align 4, !dbg !9974
  %tobool80 = icmp ne i32 %68, 0, !dbg !9974
  br i1 %tobool80, label %if.then84, label %lor.lhs.false81, !dbg !9976

lor.lhs.false81:                                  ; preds = %do.end79
  %69 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !9977
  %stop82 = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %69, i32 0, i32 3, !dbg !9978
  %70 = load i8, i8* %stop82, align 8, !dbg !9978
  %tobool83 = trunc i8 %70 to i1, !dbg !9978
  br i1 %tobool83, label %if.then84, label %if.end85, !dbg !9979

if.then84:                                        ; preds = %lor.lhs.false81, %do.end79
  br label %for.end, !dbg !9980

if.end85:                                         ; preds = %lor.lhs.false81
  br label %for.cond, !dbg !9981, !llvm.loop !9982

for.end:                                          ; preds = %if.then84, %if.then49, %if.then42
  br label %while.cond, !dbg !9985

while.cond:                                       ; preds = %do.end96, %for.end
  %call86 = call zeroext i1 @kthread_should_stop() #10, !dbg !9986
  %lnot = xor i1 %call86, true, !dbg !9987
  br i1 %lnot, label %while.body, label %while.end, !dbg !9985

while.body:                                       ; preds = %while.cond
  br label %do.body87, !dbg !9988

do.body87:                                        ; preds = %while.body
  br label %do.body88, !dbg !9989

do.body88:                                        ; preds = %do.body87
  br label %do.body89, !dbg !9990

do.body89:                                        ; preds = %do.body88
  br label %do.end90, !dbg !9991

do.end90:                                         ; preds = %do.body89
  br label %do.body91, !dbg !9990

do.body91:                                        ; preds = %do.end90
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !9843
  %71 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !9843
  %72 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !9846, !srcloc !9993
  store i64 %72, i64* %pfo_val__.i, align 8, !dbg !9846
  %73 = load i64, i64* %pfo_val__.i, align 8, !dbg !9846
  %74 = inttoptr i64 %73 to %struct.task_struct*, !dbg !9846
  store %struct.task_struct* %74, %struct.task_struct** %tmp.i, align 8, !dbg !9846
  %75 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !9846
  store %struct.task_struct* %75, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9835
  %76 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !9835
  store %struct.task_struct* %76, %struct.task_struct** %tmp1.i, align 8, !dbg !9835
  %77 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !9835
  %state93 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %77, i32 0, i32 1, !dbg !9994
  store volatile i64 1, i64* %state93, align 16, !dbg !9994
  br label %do.end94, !dbg !9994

do.end94:                                         ; preds = %do.body91
  br label %do.end95, !dbg !9990

do.end95:                                         ; preds = %do.end94
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #6, !dbg !9989, !srcloc !9995
  br label %do.end96, !dbg !9989

do.end96:                                         ; preds = %do.end95
  call void @schedule() #10, !dbg !9996
  br label %while.cond, !dbg !9985, !llvm.loop !9997

while.end:                                        ; preds = %while.cond
  ret i32 0, !dbg !9999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !10000 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10001, metadata !DIExpression()), !dbg !10002
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10003
  %1 = ptrtoint i8* %0 to i64, !dbg !10003
  %2 = inttoptr i64 %1 to i8*, !dbg !10003
  %3 = ptrtoint i8* %2 to i64, !dbg !10003
  %cmp = icmp uge i64 %3, -4095, !dbg !10003
  %lnot = xor i1 %cmp, true, !dbg !10003
  %lnot1 = xor i1 %lnot, true, !dbg !10003
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10003
  %conv = sext i32 %lnot.ext to i64, !dbg !10003
  %tobool = icmp ne i64 %conv, 0, !dbg !10003
  ret i1 %tobool, !dbg !10004
}

; Function Attrs: noredzone
declare dso_local i32 @wake_up_process(%struct.task_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !10005 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10008, metadata !DIExpression()), !dbg !10009
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10010
  %1 = ptrtoint i8* %0 to i64, !dbg !10011
  ret i64 %1, !dbg !10012
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @vb2_thread_stop(%struct.vb2_queue* %q) #0 !dbg !10013 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %threadio = alloca %struct.vb2_threadio_data*, align 8
  %err = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !10014, metadata !DIExpression()), !dbg !10015
  call void @llvm.dbg.declare(metadata %struct.vb2_threadio_data** %threadio, metadata !10016, metadata !DIExpression()), !dbg !10017
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !10018
  %threadio1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 30, !dbg !10019
  %1 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio1, align 8, !dbg !10019
  store %struct.vb2_threadio_data* %1, %struct.vb2_threadio_data** %threadio, align 8, !dbg !10017
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10020, metadata !DIExpression()), !dbg !10021
  %2 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !10022
  %cmp = icmp eq %struct.vb2_threadio_data* %2, null, !dbg !10024
  br i1 %cmp, label %if.then, label %if.end, !dbg !10025

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10026
  br label %return, !dbg !10026

if.end:                                           ; preds = %entry
  %3 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !10027
  %stop = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %3, i32 0, i32 3, !dbg !10028
  store i8 1, i8* %stop, align 8, !dbg !10029
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !10030
  call void @vb2_queue_error(%struct.vb2_queue* %4) #10, !dbg !10031
  %5 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !10032
  %thread = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %5, i32 0, i32 0, !dbg !10033
  %6 = load %struct.task_struct*, %struct.task_struct** %thread, align 8, !dbg !10033
  %call = call i32 @kthread_stop(%struct.task_struct* %6) #10, !dbg !10034
  store i32 %call, i32* %err, align 4, !dbg !10035
  %7 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !10036
  %call2 = call i32 @__vb2_cleanup_fileio(%struct.vb2_queue* %7) #10, !dbg !10037
  %8 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !10038
  %thread3 = getelementptr inbounds %struct.vb2_threadio_data, %struct.vb2_threadio_data* %8, i32 0, i32 0, !dbg !10039
  store %struct.task_struct* null, %struct.task_struct** %thread3, align 8, !dbg !10040
  %9 = load %struct.vb2_threadio_data*, %struct.vb2_threadio_data** %threadio, align 8, !dbg !10041
  %10 = bitcast %struct.vb2_threadio_data* %9 to i8*, !dbg !10041
  call void @kfree(i8* %10) #10, !dbg !10042
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !10043
  %threadio4 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 30, !dbg !10044
  store %struct.vb2_threadio_data* null, %struct.vb2_threadio_data** %threadio4, align 8, !dbg !10045
  %12 = load i32, i32* %err, align 4, !dbg !10046
  store i32 %12, i32* %retval, align 4, !dbg !10047
  br label %return, !dbg !10047

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10048
  ret i32 %13, !dbg !10048
}

; Function Attrs: noredzone
declare dso_local i32 @kthread_stop(%struct.task_struct*) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vb2_free_mem(%struct.vb2_queue* %q, i32 %buffers) #0 !dbg !10049 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  %buffers.addr = alloca i32, align 4
  %buffer = alloca i32, align 4
  %vb = alloca %struct.vb2_buffer*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !10052, metadata !DIExpression()), !dbg !10053
  store i32 %buffers, i32* %buffers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buffers.addr, metadata !10054, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.declare(metadata i32* %buffer, metadata !10056, metadata !DIExpression()), !dbg !10057
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !10058, metadata !DIExpression()), !dbg !10059
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !10060
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 21, !dbg !10062
  %1 = load i32, i32* %num_buffers, align 8, !dbg !10062
  %2 = load i32, i32* %buffers.addr, align 4, !dbg !10063
  %sub = sub i32 %1, %2, !dbg !10064
  store i32 %sub, i32* %buffer, align 4, !dbg !10065
  br label %for.cond, !dbg !10066

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %buffer, align 4, !dbg !10067
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !10069
  %num_buffers1 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 21, !dbg !10070
  %5 = load i32, i32* %num_buffers1, align 8, !dbg !10070
  %cmp = icmp ult i32 %3, %5, !dbg !10071
  br i1 %cmp, label %for.body, label %for.end, !dbg !10072

for.body:                                         ; preds = %for.cond
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !10073
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 20, !dbg !10075
  %7 = load i32, i32* %buffer, align 4, !dbg !10076
  %idxprom = zext i32 %7 to i64, !dbg !10073
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !10073
  %8 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !10073
  store %struct.vb2_buffer* %8, %struct.vb2_buffer** %vb, align 8, !dbg !10077
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10078
  %tobool = icmp ne %struct.vb2_buffer* %9, null, !dbg !10078
  br i1 %tobool, label %if.end, label %if.then, !dbg !10080

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !10081

if.end:                                           ; preds = %for.body
  %10 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !10082
  %memory = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %10, i32 0, i32 18, !dbg !10084
  %11 = load i32, i32* %memory, align 8, !dbg !10084
  %cmp2 = icmp eq i32 %11, 1, !dbg !10085
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !10086

if.then3:                                         ; preds = %if.end
  %12 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10087
  call void @__vb2_buf_mem_free(%struct.vb2_buffer* %12) #10, !dbg !10088
  br label %if.end9, !dbg !10088

if.else:                                          ; preds = %if.end
  %13 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !10089
  %memory4 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %13, i32 0, i32 18, !dbg !10091
  %14 = load i32, i32* %memory4, align 8, !dbg !10091
  %cmp5 = icmp eq i32 %14, 4, !dbg !10092
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !10093

if.then6:                                         ; preds = %if.else
  %15 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10094
  call void @__vb2_buf_dmabuf_put(%struct.vb2_buffer* %15) #10, !dbg !10095
  br label %if.end8, !dbg !10095

if.else7:                                         ; preds = %if.else
  %16 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10096
  call void @__vb2_buf_userptr_put(%struct.vb2_buffer* %16) #10, !dbg !10097
  br label %if.end8

if.end8:                                          ; preds = %if.else7, %if.then6
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.then3
  br label %for.inc, !dbg !10098

for.inc:                                          ; preds = %if.end9, %if.then
  %17 = load i32, i32* %buffer, align 4, !dbg !10099
  %inc = add i32 %17, 1, !dbg !10099
  store i32 %inc, i32* %buffer, align 4, !dbg !10099
  br label %for.cond, !dbg !10100, !llvm.loop !10101

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vb2_buf_mem_free(%struct.vb2_buffer* %vb) #0 !dbg !10104 {
entry:
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %plane = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !10105, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !10107, metadata !DIExpression()), !dbg !10108
  store i32 0, i32* %plane, align 4, !dbg !10109
  br label %for.cond, !dbg !10111

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %plane, align 4, !dbg !10112
  %1 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10114
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %1, i32 0, i32 4, !dbg !10115
  %2 = load i32, i32* %num_planes, align 4, !dbg !10115
  %cmp = icmp ult i32 %0, %2, !dbg !10116
  br i1 %cmp, label %for.body, label %for.end, !dbg !10117

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !10118

do.body:                                          ; preds = %for.body
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10120
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %3, i32 0, i32 0, !dbg !10120
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !10120
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 8, !dbg !10120
  %5 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !10120
  %put = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %5, i32 0, i32 1, !dbg !10120
  %6 = load void (i8*)*, void (i8*)** %put, align 8, !dbg !10120
  %tobool = icmp ne void (i8*)* %6, null, !dbg !10120
  br i1 %tobool, label %if.then, label %if.end, !dbg !10123

if.then:                                          ; preds = %do.body
  %7 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10120
  %vb2_queue1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %7, i32 0, i32 0, !dbg !10120
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue1, align 8, !dbg !10120
  %mem_ops2 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 8, !dbg !10120
  %9 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops2, align 8, !dbg !10120
  %put3 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %9, i32 0, i32 1, !dbg !10120
  %10 = load void (i8*)*, void (i8*)** %put3, align 8, !dbg !10120
  %11 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10120
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %11, i32 0, i32 10, !dbg !10120
  %12 = load i32, i32* %plane, align 4, !dbg !10120
  %idxprom = zext i32 %12 to i64, !dbg !10120
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !10120
  %mem_priv = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 0, !dbg !10120
  %13 = load i8*, i8** %mem_priv, align 8, !dbg !10120
  call void %10(i8* %13) #10, !dbg !10120
  br label %if.end, !dbg !10120

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !10123

do.end:                                           ; preds = %if.end
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10124
  %planes4 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %14, i32 0, i32 10, !dbg !10125
  %15 = load i32, i32* %plane, align 4, !dbg !10126
  %idxprom5 = zext i32 %15 to i64, !dbg !10124
  %arrayidx6 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes4, i64 0, i64 %idxprom5, !dbg !10124
  %mem_priv7 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx6, i32 0, i32 0, !dbg !10127
  store i8* null, i8** %mem_priv7, align 8, !dbg !10128
  br label %do.body8, !dbg !10129

do.body8:                                         ; preds = %do.end
  %16 = load i32, i32* @debug, align 4, !dbg !10130
  %cmp9 = icmp sge i32 %16, 3, !dbg !10130
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !10133

if.then10:                                        ; preds = %do.body8
  %17 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10130
  %vb2_queue11 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %17, i32 0, i32 0, !dbg !10130
  %18 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue11, align 8, !dbg !10130
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %18, i32 0, i32 31, !dbg !10130
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !10130
  %19 = load i32, i32* %plane, align 4, !dbg !10130
  %20 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10130
  %index = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %20, i32 0, i32 1, !dbg !10130
  %21 = load i32, i32* %index, align 8, !dbg !10130
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.58, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.__vb2_buf_mem_free, i64 0, i64 0), i32 %19, i32 %21) #11, !dbg !10130
  br label %if.end12, !dbg !10130

if.end12:                                         ; preds = %if.then10, %do.body8
  br label %do.end13, !dbg !10133

do.end13:                                         ; preds = %if.end12
  br label %for.inc, !dbg !10134

for.inc:                                          ; preds = %do.end13
  %22 = load i32, i32* %plane, align 4, !dbg !10135
  %inc = add i32 %22, 1, !dbg !10135
  store i32 %inc, i32* %plane, align 4, !dbg !10135
  br label %for.cond, !dbg !10136, !llvm.loop !10137

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vb2_buf_dmabuf_put(%struct.vb2_buffer* %vb) #0 !dbg !10140 {
entry:
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %plane = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !10141, metadata !DIExpression()), !dbg !10142
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !10143, metadata !DIExpression()), !dbg !10144
  store i32 0, i32* %plane, align 4, !dbg !10145
  br label %for.cond, !dbg !10147

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %plane, align 4, !dbg !10148
  %1 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10150
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %1, i32 0, i32 4, !dbg !10151
  %2 = load i32, i32* %num_planes, align 4, !dbg !10151
  %cmp = icmp ult i32 %0, %2, !dbg !10152
  br i1 %cmp, label %for.body, label %for.end, !dbg !10153

for.body:                                         ; preds = %for.cond
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10154
  %4 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10155
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %4, i32 0, i32 10, !dbg !10156
  %5 = load i32, i32* %plane, align 4, !dbg !10157
  %idxprom = zext i32 %5 to i64, !dbg !10155
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !10155
  call void @__vb2_plane_dmabuf_put(%struct.vb2_buffer* %3, %struct.vb2_plane* %arrayidx) #10, !dbg !10158
  br label %for.inc, !dbg !10158

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %plane, align 4, !dbg !10159
  %inc = add i32 %6, 1, !dbg !10159
  store i32 %inc, i32* %plane, align 4, !dbg !10159
  br label %for.cond, !dbg !10160, !llvm.loop !10161

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vb2_buf_userptr_put(%struct.vb2_buffer* %vb) #0 !dbg !10164 {
entry:
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %plane = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !10165, metadata !DIExpression()), !dbg !10166
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !10167, metadata !DIExpression()), !dbg !10168
  store i32 0, i32* %plane, align 4, !dbg !10169
  br label %for.cond, !dbg !10171

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %plane, align 4, !dbg !10172
  %1 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10174
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %1, i32 0, i32 4, !dbg !10175
  %2 = load i32, i32* %num_planes, align 4, !dbg !10175
  %cmp = icmp ult i32 %0, %2, !dbg !10176
  br i1 %cmp, label %for.body, label %for.end, !dbg !10177

for.body:                                         ; preds = %for.cond
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10178
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %3, i32 0, i32 10, !dbg !10181
  %4 = load i32, i32* %plane, align 4, !dbg !10182
  %idxprom = zext i32 %4 to i64, !dbg !10178
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !10178
  %mem_priv = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 0, !dbg !10183
  %5 = load i8*, i8** %mem_priv, align 8, !dbg !10183
  %tobool = icmp ne i8* %5, null, !dbg !10178
  br i1 %tobool, label %if.then, label %if.end10, !dbg !10184

if.then:                                          ; preds = %for.body
  br label %do.body, !dbg !10185

do.body:                                          ; preds = %if.then
  %6 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10186
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %6, i32 0, i32 0, !dbg !10186
  %7 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !10186
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %7, i32 0, i32 8, !dbg !10186
  %8 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !10186
  %put_userptr = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %8, i32 0, i32 4, !dbg !10186
  %9 = load void (i8*)*, void (i8*)** %put_userptr, align 8, !dbg !10186
  %tobool1 = icmp ne void (i8*)* %9, null, !dbg !10186
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !10189

if.then2:                                         ; preds = %do.body
  %10 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10186
  %vb2_queue3 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %10, i32 0, i32 0, !dbg !10186
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue3, align 8, !dbg !10186
  %mem_ops4 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 8, !dbg !10186
  %12 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops4, align 8, !dbg !10186
  %put_userptr5 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %12, i32 0, i32 4, !dbg !10186
  %13 = load void (i8*)*, void (i8*)** %put_userptr5, align 8, !dbg !10186
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10186
  %planes6 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %14, i32 0, i32 10, !dbg !10186
  %15 = load i32, i32* %plane, align 4, !dbg !10186
  %idxprom7 = zext i32 %15 to i64, !dbg !10186
  %arrayidx8 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes6, i64 0, i64 %idxprom7, !dbg !10186
  %mem_priv9 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx8, i32 0, i32 0, !dbg !10186
  %16 = load i8*, i8** %mem_priv9, align 8, !dbg !10186
  call void %13(i8* %16) #10, !dbg !10186
  br label %if.end, !dbg !10186

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !10189

do.end:                                           ; preds = %if.end
  br label %if.end10, !dbg !10189

if.end10:                                         ; preds = %do.end, %for.body
  %17 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10190
  %planes11 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %17, i32 0, i32 10, !dbg !10191
  %18 = load i32, i32* %plane, align 4, !dbg !10192
  %idxprom12 = zext i32 %18 to i64, !dbg !10190
  %arrayidx13 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes11, i64 0, i64 %idxprom12, !dbg !10190
  %mem_priv14 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx13, i32 0, i32 0, !dbg !10193
  store i8* null, i8** %mem_priv14, align 8, !dbg !10194
  br label %for.inc, !dbg !10195

for.inc:                                          ; preds = %if.end10
  %19 = load i32, i32* %plane, align 4, !dbg !10196
  %inc = add i32 %19, 1, !dbg !10196
  store i32 %inc, i32* %plane, align 4, !dbg !10196
  br label %for.cond, !dbg !10197, !llvm.loop !10198

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vb2_plane_dmabuf_put(%struct.vb2_buffer* %vb, %struct.vb2_plane* %p) #0 !dbg !10201 {
entry:
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %p.addr = alloca %struct.vb2_plane*, align 8
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !10204, metadata !DIExpression()), !dbg !10205
  store %struct.vb2_plane* %p, %struct.vb2_plane** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_plane** %p.addr, metadata !10206, metadata !DIExpression()), !dbg !10207
  %0 = load %struct.vb2_plane*, %struct.vb2_plane** %p.addr, align 8, !dbg !10208
  %mem_priv = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %0, i32 0, i32 0, !dbg !10210
  %1 = load i8*, i8** %mem_priv, align 8, !dbg !10210
  %tobool = icmp ne i8* %1, null, !dbg !10208
  br i1 %tobool, label %if.end, label %if.then, !dbg !10211

if.then:                                          ; preds = %entry
  br label %return, !dbg !10212

if.end:                                           ; preds = %entry
  %2 = load %struct.vb2_plane*, %struct.vb2_plane** %p.addr, align 8, !dbg !10213
  %dbuf_mapped = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %2, i32 0, i32 2, !dbg !10215
  %3 = load i32, i32* %dbuf_mapped, align 8, !dbg !10215
  %tobool1 = icmp ne i32 %3, 0, !dbg !10213
  br i1 %tobool1, label %if.then2, label %if.end10, !dbg !10216

if.then2:                                         ; preds = %if.end
  br label %do.body, !dbg !10217

do.body:                                          ; preds = %if.then2
  %4 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10218
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %4, i32 0, i32 0, !dbg !10218
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !10218
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %5, i32 0, i32 8, !dbg !10218
  %6 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !10218
  %unmap_dmabuf = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %6, i32 0, i32 10, !dbg !10218
  %7 = load void (i8*)*, void (i8*)** %unmap_dmabuf, align 8, !dbg !10218
  %tobool3 = icmp ne void (i8*)* %7, null, !dbg !10218
  br i1 %tobool3, label %if.then4, label %if.end9, !dbg !10221

if.then4:                                         ; preds = %do.body
  %8 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10218
  %vb2_queue5 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %8, i32 0, i32 0, !dbg !10218
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue5, align 8, !dbg !10218
  %mem_ops6 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %9, i32 0, i32 8, !dbg !10218
  %10 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops6, align 8, !dbg !10218
  %unmap_dmabuf7 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %10, i32 0, i32 10, !dbg !10218
  %11 = load void (i8*)*, void (i8*)** %unmap_dmabuf7, align 8, !dbg !10218
  %12 = load %struct.vb2_plane*, %struct.vb2_plane** %p.addr, align 8, !dbg !10218
  %mem_priv8 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %12, i32 0, i32 0, !dbg !10218
  %13 = load i8*, i8** %mem_priv8, align 8, !dbg !10218
  call void %11(i8* %13) #10, !dbg !10218
  br label %if.end9, !dbg !10218

if.end9:                                          ; preds = %if.then4, %do.body
  br label %do.end, !dbg !10221

do.end:                                           ; preds = %if.end9
  br label %if.end10, !dbg !10221

if.end10:                                         ; preds = %do.end, %if.end
  br label %do.body11, !dbg !10222

do.body11:                                        ; preds = %if.end10
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10223
  %vb2_queue12 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %14, i32 0, i32 0, !dbg !10223
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue12, align 8, !dbg !10223
  %mem_ops13 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 8, !dbg !10223
  %16 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops13, align 8, !dbg !10223
  %detach_dmabuf = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %16, i32 0, i32 8, !dbg !10223
  %17 = load void (i8*)*, void (i8*)** %detach_dmabuf, align 8, !dbg !10223
  %tobool14 = icmp ne void (i8*)* %17, null, !dbg !10223
  br i1 %tobool14, label %if.then15, label %if.end20, !dbg !10226

if.then15:                                        ; preds = %do.body11
  %18 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10223
  %vb2_queue16 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %18, i32 0, i32 0, !dbg !10223
  %19 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue16, align 8, !dbg !10223
  %mem_ops17 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %19, i32 0, i32 8, !dbg !10223
  %20 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops17, align 8, !dbg !10223
  %detach_dmabuf18 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %20, i32 0, i32 8, !dbg !10223
  %21 = load void (i8*)*, void (i8*)** %detach_dmabuf18, align 8, !dbg !10223
  %22 = load %struct.vb2_plane*, %struct.vb2_plane** %p.addr, align 8, !dbg !10223
  %mem_priv19 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %22, i32 0, i32 0, !dbg !10223
  %23 = load i8*, i8** %mem_priv19, align 8, !dbg !10223
  call void %21(i8* %23) #10, !dbg !10223
  br label %if.end20, !dbg !10223

if.end20:                                         ; preds = %if.then15, %do.body11
  br label %do.end21, !dbg !10226

do.end21:                                         ; preds = %if.end20
  %24 = load %struct.vb2_plane*, %struct.vb2_plane** %p.addr, align 8, !dbg !10227
  %dbuf = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %24, i32 0, i32 1, !dbg !10228
  %25 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !10228
  call void @dma_buf_put(%struct.dma_buf* %25) #10, !dbg !10229
  %26 = load %struct.vb2_plane*, %struct.vb2_plane** %p.addr, align 8, !dbg !10230
  %mem_priv22 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %26, i32 0, i32 0, !dbg !10231
  store i8* null, i8** %mem_priv22, align 8, !dbg !10232
  %27 = load %struct.vb2_plane*, %struct.vb2_plane** %p.addr, align 8, !dbg !10233
  %dbuf23 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %27, i32 0, i32 1, !dbg !10234
  store %struct.dma_buf* null, %struct.dma_buf** %dbuf23, align 8, !dbg !10235
  %28 = load %struct.vb2_plane*, %struct.vb2_plane** %p.addr, align 8, !dbg !10236
  %dbuf_mapped24 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %28, i32 0, i32 2, !dbg !10237
  store i32 0, i32* %dbuf_mapped24, align 8, !dbg !10238
  br label %return, !dbg !10239

return:                                           ; preds = %do.end21, %if.then
  ret void, !dbg !10239
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__vb2_buf_mem_alloc(%struct.vb2_buffer* %vb) #0 !dbg !10240 {
entry:
  %retval = alloca i32, align 4
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %q = alloca %struct.vb2_queue*, align 8
  %mem_priv = alloca i8*, align 8
  %plane = alloca i32, align 4
  %ret = alloca i32, align 4
  %size = alloca i64, align 8
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q, metadata !10243, metadata !DIExpression()), !dbg !10244
  %0 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10245
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %0, i32 0, i32 0, !dbg !10246
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !10246
  store %struct.vb2_queue* %1, %struct.vb2_queue** %q, align 8, !dbg !10244
  call void @llvm.dbg.declare(metadata i8** %mem_priv, metadata !10247, metadata !DIExpression()), !dbg !10248
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !10249, metadata !DIExpression()), !dbg !10250
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10251, metadata !DIExpression()), !dbg !10252
  store i32 -12, i32* %ret, align 4, !dbg !10252
  store i32 0, i32* %plane, align 4, !dbg !10253
  br label %for.cond, !dbg !10255

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %plane, align 4, !dbg !10256
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10258
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %3, i32 0, i32 4, !dbg !10259
  %4 = load i32, i32* %num_planes, align 4, !dbg !10259
  %cmp = icmp ult i32 %2, %4, !dbg !10260
  br i1 %cmp, label %for.body, label %for.end, !dbg !10261

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %size, metadata !10262, metadata !DIExpression()), !dbg !10264
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10265
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 10, !dbg !10265
  %6 = load i32, i32* %plane, align 4, !dbg !10265
  %idxprom = sext i32 %6 to i64, !dbg !10265
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !10265
  %length = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 4, !dbg !10265
  %7 = load i32, i32* %length, align 8, !dbg !10265
  %add = add i32 %7, 4095, !dbg !10265
  %and = and i32 %add, -4096, !dbg !10265
  %conv = zext i32 %and to i64, !dbg !10265
  store i64 %conv, i64* %size, align 8, !dbg !10264
  %8 = load i64, i64* %size, align 8, !dbg !10266
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10268
  %planes1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 10, !dbg !10269
  %10 = load i32, i32* %plane, align 4, !dbg !10270
  %idxprom2 = sext i32 %10 to i64, !dbg !10268
  %arrayidx3 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes1, i64 0, i64 %idxprom2, !dbg !10268
  %length4 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx3, i32 0, i32 4, !dbg !10271
  %11 = load i32, i32* %length4, align 8, !dbg !10271
  %conv5 = zext i32 %11 to i64, !dbg !10268
  %cmp6 = icmp ult i64 %8, %conv5, !dbg !10272
  br i1 %cmp6, label %if.then, label %if.end, !dbg !10273

if.then:                                          ; preds = %for.body
  br label %free, !dbg !10274

if.end:                                           ; preds = %for.body
  %12 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10275
  %vb2_queue8 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %12, i32 0, i32 0, !dbg !10275
  %13 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue8, align 8, !dbg !10275
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %13, i32 0, i32 8, !dbg !10275
  %14 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !10275
  %alloc = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %14, i32 0, i32 0, !dbg !10275
  %15 = load i8* (%struct.device*, i64, i64, i32, i32)*, i8* (%struct.device*, i64, i64, i32, i32)** %alloc, align 8, !dbg !10275
  %tobool = icmp ne i8* (%struct.device*, i64, i64, i32, i32)* %15, null, !dbg !10275
  br i1 %tobool, label %cond.true, label %cond.false16, !dbg !10275

cond.true:                                        ; preds = %if.end
  %16 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10275
  %vb2_queue9 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %16, i32 0, i32 0, !dbg !10275
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue9, align 8, !dbg !10275
  %mem_ops10 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %17, i32 0, i32 8, !dbg !10275
  %18 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops10, align 8, !dbg !10275
  %alloc11 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %18, i32 0, i32 0, !dbg !10275
  %19 = load i8* (%struct.device*, i64, i64, i32, i32)*, i8* (%struct.device*, i64, i64, i32, i32)** %alloc11, align 8, !dbg !10275
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10275
  %alloc_devs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %20, i32 0, i32 16, !dbg !10275
  %21 = load i32, i32* %plane, align 4, !dbg !10275
  %idxprom12 = sext i32 %21 to i64, !dbg !10275
  %arrayidx13 = getelementptr [8 x %struct.device*], [8 x %struct.device*]* %alloc_devs, i64 0, i64 %idxprom12, !dbg !10275
  %22 = load %struct.device*, %struct.device** %arrayidx13, align 8, !dbg !10275
  %tobool14 = icmp ne %struct.device* %22, null, !dbg !10275
  br i1 %tobool14, label %cond.true15, label %cond.false, !dbg !10275

cond.true15:                                      ; preds = %cond.true
  br label %cond.end, !dbg !10275

cond.false:                                       ; preds = %cond.true
  %23 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10275
  %dev = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %23, i32 0, i32 2, !dbg !10275
  %24 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10275
  br label %cond.end, !dbg !10275

cond.end:                                         ; preds = %cond.false, %cond.true15
  %cond = phi %struct.device* [ %22, %cond.true15 ], [ %24, %cond.false ], !dbg !10275
  %25 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10275
  %dma_attrs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %25, i32 0, i32 3, !dbg !10275
  %26 = load i64, i64* %dma_attrs, align 8, !dbg !10275
  %27 = load i64, i64* %size, align 8, !dbg !10275
  %28 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10275
  %dma_dir = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %28, i32 0, i32 19, !dbg !10275
  %29 = load i32, i32* %dma_dir, align 4, !dbg !10275
  %30 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10275
  %gfp_flags = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %30, i32 0, i32 14, !dbg !10275
  %31 = load i32, i32* %gfp_flags, align 4, !dbg !10275
  %call = call i8* %19(%struct.device* %cond, i64 %26, i64 %27, i32 %29, i32 %31) #10, !dbg !10275
  br label %cond.end17, !dbg !10275

cond.false16:                                     ; preds = %if.end
  br label %cond.end17, !dbg !10275

cond.end17:                                       ; preds = %cond.false16, %cond.end
  %cond18 = phi i8* [ %call, %cond.end ], [ null, %cond.false16 ], !dbg !10275
  store i8* %cond18, i8** %mem_priv, align 8, !dbg !10276
  %32 = load i8*, i8** %mem_priv, align 8, !dbg !10277
  %call19 = call zeroext i1 @IS_ERR_OR_NULL(i8* %32) #10, !dbg !10279
  br i1 %call19, label %if.then20, label %if.end26, !dbg !10280

if.then20:                                        ; preds = %cond.end17
  %33 = load i8*, i8** %mem_priv, align 8, !dbg !10281
  %tobool21 = icmp ne i8* %33, null, !dbg !10281
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !10284

if.then22:                                        ; preds = %if.then20
  %34 = load i8*, i8** %mem_priv, align 8, !dbg !10285
  %call23 = call i64 @PTR_ERR(i8* %34) #10, !dbg !10286
  %conv24 = trunc i64 %call23 to i32, !dbg !10286
  store i32 %conv24, i32* %ret, align 4, !dbg !10287
  br label %if.end25, !dbg !10288

if.end25:                                         ; preds = %if.then22, %if.then20
  br label %free, !dbg !10289

if.end26:                                         ; preds = %cond.end17
  %35 = load i8*, i8** %mem_priv, align 8, !dbg !10290
  %36 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10291
  %planes27 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %36, i32 0, i32 10, !dbg !10292
  %37 = load i32, i32* %plane, align 4, !dbg !10293
  %idxprom28 = sext i32 %37 to i64, !dbg !10291
  %arrayidx29 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes27, i64 0, i64 %idxprom28, !dbg !10291
  %mem_priv30 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx29, i32 0, i32 0, !dbg !10294
  store i8* %35, i8** %mem_priv30, align 8, !dbg !10295
  br label %for.inc, !dbg !10296

for.inc:                                          ; preds = %if.end26
  %38 = load i32, i32* %plane, align 4, !dbg !10297
  %inc = add i32 %38, 1, !dbg !10297
  store i32 %inc, i32* %plane, align 4, !dbg !10297
  br label %for.cond, !dbg !10298, !llvm.loop !10299

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10301
  br label %return, !dbg !10301

free:                                             ; preds = %if.end25, %if.then
  call void @llvm.dbg.label(metadata !10302), !dbg !10303
  br label %for.cond31, !dbg !10304

for.cond31:                                       ; preds = %for.inc52, %free
  %39 = load i32, i32* %plane, align 4, !dbg !10305
  %cmp32 = icmp sgt i32 %39, 0, !dbg !10308
  br i1 %cmp32, label %for.body34, label %for.end53, !dbg !10309

for.body34:                                       ; preds = %for.cond31
  br label %do.body, !dbg !10310

do.body:                                          ; preds = %for.body34
  %40 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10312
  %vb2_queue35 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %40, i32 0, i32 0, !dbg !10312
  %41 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue35, align 8, !dbg !10312
  %mem_ops36 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %41, i32 0, i32 8, !dbg !10312
  %42 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops36, align 8, !dbg !10312
  %put = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %42, i32 0, i32 1, !dbg !10312
  %43 = load void (i8*)*, void (i8*)** %put, align 8, !dbg !10312
  %tobool37 = icmp ne void (i8*)* %43, null, !dbg !10312
  br i1 %tobool37, label %if.then38, label %if.end46, !dbg !10315

if.then38:                                        ; preds = %do.body
  %44 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10312
  %vb2_queue39 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %44, i32 0, i32 0, !dbg !10312
  %45 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue39, align 8, !dbg !10312
  %mem_ops40 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %45, i32 0, i32 8, !dbg !10312
  %46 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops40, align 8, !dbg !10312
  %put41 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %46, i32 0, i32 1, !dbg !10312
  %47 = load void (i8*)*, void (i8*)** %put41, align 8, !dbg !10312
  %48 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10312
  %planes42 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %48, i32 0, i32 10, !dbg !10312
  %49 = load i32, i32* %plane, align 4, !dbg !10312
  %sub = sub i32 %49, 1, !dbg !10312
  %idxprom43 = sext i32 %sub to i64, !dbg !10312
  %arrayidx44 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes42, i64 0, i64 %idxprom43, !dbg !10312
  %mem_priv45 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx44, i32 0, i32 0, !dbg !10312
  %50 = load i8*, i8** %mem_priv45, align 8, !dbg !10312
  call void %47(i8* %50) #10, !dbg !10312
  br label %if.end46, !dbg !10312

if.end46:                                         ; preds = %if.then38, %do.body
  br label %do.end, !dbg !10315

do.end:                                           ; preds = %if.end46
  %51 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10316
  %planes47 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %51, i32 0, i32 10, !dbg !10317
  %52 = load i32, i32* %plane, align 4, !dbg !10318
  %sub48 = sub i32 %52, 1, !dbg !10319
  %idxprom49 = sext i32 %sub48 to i64, !dbg !10316
  %arrayidx50 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes47, i64 0, i64 %idxprom49, !dbg !10316
  %mem_priv51 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx50, i32 0, i32 0, !dbg !10320
  store i8* null, i8** %mem_priv51, align 8, !dbg !10321
  br label %for.inc52, !dbg !10322

for.inc52:                                        ; preds = %do.end
  %53 = load i32, i32* %plane, align 4, !dbg !10323
  %dec = add i32 %53, -1, !dbg !10323
  store i32 %dec, i32* %plane, align 4, !dbg !10323
  br label %for.cond31, !dbg !10324, !llvm.loop !10325

for.end53:                                        ; preds = %for.cond31
  %54 = load i32, i32* %ret, align 4, !dbg !10327
  store i32 %54, i32* %retval, align 4, !dbg !10328
  br label %return, !dbg !10328

return:                                           ; preds = %for.end53, %for.end
  %55 = load i32, i32* %retval, align 4, !dbg !10329
  ret i32 %55, !dbg !10329
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__setup_offsets(%struct.vb2_buffer* %vb) #0 !dbg !10330 {
entry:
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %q = alloca %struct.vb2_queue*, align 8
  %plane = alloca i32, align 4
  %off = alloca i64, align 8
  %prev = alloca %struct.vb2_buffer*, align 8
  %p = alloca %struct.vb2_plane*, align 8
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !10331, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q, metadata !10333, metadata !DIExpression()), !dbg !10334
  %0 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10335
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %0, i32 0, i32 0, !dbg !10336
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !10336
  store %struct.vb2_queue* %1, %struct.vb2_queue** %q, align 8, !dbg !10334
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !10337, metadata !DIExpression()), !dbg !10338
  call void @llvm.dbg.declare(metadata i64* %off, metadata !10339, metadata !DIExpression()), !dbg !10340
  store i64 0, i64* %off, align 8, !dbg !10340
  %2 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10341
  %index = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %2, i32 0, i32 1, !dbg !10343
  %3 = load i32, i32* %index, align 8, !dbg !10343
  %tobool = icmp ne i32 %3, 0, !dbg !10341
  br i1 %tobool, label %if.then, label %if.end, !dbg !10344

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %prev, metadata !10345, metadata !DIExpression()), !dbg !10347
  %4 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10348
  %bufs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %4, i32 0, i32 20, !dbg !10349
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10350
  %index1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 1, !dbg !10351
  %6 = load i32, i32* %index1, align 8, !dbg !10351
  %sub = sub i32 %6, 1, !dbg !10352
  %idxprom = zext i32 %sub to i64, !dbg !10348
  %arrayidx = getelementptr [32 x %struct.vb2_buffer*], [32 x %struct.vb2_buffer*]* %bufs, i64 0, i64 %idxprom, !dbg !10348
  %7 = load %struct.vb2_buffer*, %struct.vb2_buffer** %arrayidx, align 8, !dbg !10348
  store %struct.vb2_buffer* %7, %struct.vb2_buffer** %prev, align 8, !dbg !10347
  call void @llvm.dbg.declare(metadata %struct.vb2_plane** %p, metadata !10353, metadata !DIExpression()), !dbg !10354
  %8 = load %struct.vb2_buffer*, %struct.vb2_buffer** %prev, align 8, !dbg !10355
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %8, i32 0, i32 10, !dbg !10356
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %prev, align 8, !dbg !10357
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 4, !dbg !10358
  %10 = load i32, i32* %num_planes, align 4, !dbg !10358
  %sub2 = sub i32 %10, 1, !dbg !10359
  %idxprom3 = zext i32 %sub2 to i64, !dbg !10355
  %arrayidx4 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom3, !dbg !10355
  store %struct.vb2_plane* %arrayidx4, %struct.vb2_plane** %p, align 8, !dbg !10354
  %11 = load %struct.vb2_plane*, %struct.vb2_plane** %p, align 8, !dbg !10360
  %m = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %11, i32 0, i32 6, !dbg !10360
  %offset = bitcast %union.anon.72* %m to i32*, !dbg !10360
  %12 = load i32, i32* %offset, align 8, !dbg !10360
  %13 = load %struct.vb2_plane*, %struct.vb2_plane** %p, align 8, !dbg !10360
  %length = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %13, i32 0, i32 4, !dbg !10360
  %14 = load i32, i32* %length, align 8, !dbg !10360
  %add = add i32 %12, %14, !dbg !10360
  %add5 = add i32 %add, 4095, !dbg !10360
  %and = and i32 %add5, -4096, !dbg !10360
  %conv = zext i32 %and to i64, !dbg !10360
  store i64 %conv, i64* %off, align 8, !dbg !10361
  br label %if.end, !dbg !10362

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %plane, align 4, !dbg !10363
  br label %for.cond, !dbg !10365

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %plane, align 4, !dbg !10366
  %16 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10368
  %num_planes6 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %16, i32 0, i32 4, !dbg !10369
  %17 = load i32, i32* %num_planes6, align 4, !dbg !10369
  %cmp = icmp ult i32 %15, %17, !dbg !10370
  br i1 %cmp, label %for.body, label %for.end, !dbg !10371

for.body:                                         ; preds = %for.cond
  %18 = load i64, i64* %off, align 8, !dbg !10372
  %conv8 = trunc i64 %18 to i32, !dbg !10372
  %19 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10374
  %planes9 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %19, i32 0, i32 10, !dbg !10375
  %20 = load i32, i32* %plane, align 4, !dbg !10376
  %idxprom10 = zext i32 %20 to i64, !dbg !10374
  %arrayidx11 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes9, i64 0, i64 %idxprom10, !dbg !10374
  %m12 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx11, i32 0, i32 6, !dbg !10377
  %offset13 = bitcast %union.anon.72* %m12 to i32*, !dbg !10378
  store i32 %conv8, i32* %offset13, align 8, !dbg !10379
  br label %do.body, !dbg !10380

do.body:                                          ; preds = %for.body
  %21 = load i32, i32* @debug, align 4, !dbg !10381
  %cmp14 = icmp sge i32 %21, 3, !dbg !10381
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !10384

if.then16:                                        ; preds = %do.body
  %22 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10381
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %22, i32 0, i32 31, !dbg !10381
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !10381
  %23 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10381
  %index17 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %23, i32 0, i32 1, !dbg !10381
  %24 = load i32, i32* %index17, align 8, !dbg !10381
  %25 = load i32, i32* %plane, align 4, !dbg !10381
  %26 = load i64, i64* %off, align 8, !dbg !10381
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.63, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.__setup_offsets, i64 0, i64 0), i32 %24, i32 %25, i64 %26) #11, !dbg !10381
  br label %if.end18, !dbg !10381

if.end18:                                         ; preds = %if.then16, %do.body
  br label %do.end, !dbg !10384

do.end:                                           ; preds = %if.end18
  %27 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10385
  %planes19 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %27, i32 0, i32 10, !dbg !10386
  %28 = load i32, i32* %plane, align 4, !dbg !10387
  %idxprom20 = zext i32 %28 to i64, !dbg !10385
  %arrayidx21 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes19, i64 0, i64 %idxprom20, !dbg !10385
  %length22 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx21, i32 0, i32 4, !dbg !10388
  %29 = load i32, i32* %length22, align 8, !dbg !10388
  %conv23 = zext i32 %29 to i64, !dbg !10385
  %30 = load i64, i64* %off, align 8, !dbg !10389
  %add24 = add i64 %30, %conv23, !dbg !10389
  store i64 %add24, i64* %off, align 8, !dbg !10389
  %31 = load i64, i64* %off, align 8, !dbg !10390
  %add25 = add i64 %31, 4095, !dbg !10390
  %and26 = and i64 %add25, -4096, !dbg !10390
  store i64 %and26, i64* %off, align 8, !dbg !10391
  br label %for.inc, !dbg !10392

for.inc:                                          ; preds = %do.end
  %32 = load i32, i32* %plane, align 4, !dbg !10393
  %inc = add i32 %32, 1, !dbg !10393
  store i32 %inc, i32* %plane, align 4, !dbg !10393
  br label %for.cond, !dbg !10394, !llvm.loop !10395

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !10398 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !10399, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10402, metadata !DIExpression()), !dbg !10401
  %0 = load i64, i64* %__edi, align 8, !dbg !10401
  store i64 %0, i64* %__edi, align 8, !dbg !10401
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10403, metadata !DIExpression()), !dbg !10401
  %1 = load i64, i64* %__esi, align 8, !dbg !10401
  store i64 %1, i64* %__esi, align 8, !dbg !10401
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10404, metadata !DIExpression()), !dbg !10401
  %2 = load i64, i64* %__edx, align 8, !dbg !10401
  store i64 %2, i64* %__edx, align 8, !dbg !10401
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10405, metadata !DIExpression()), !dbg !10401
  %3 = load i64, i64* %__ecx, align 8, !dbg !10401
  store i64 %3, i64* %__ecx, align 8, !dbg !10401
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10406, metadata !DIExpression()), !dbg !10401
  %4 = load i64, i64* %__eax, align 8, !dbg !10401
  store i64 %4, i64* %__eax, align 8, !dbg !10401
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !10401
  %6 = call i64 @llvm.read_register.i64(metadata !4649), !dbg !10407
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #6, !dbg !10407, !srcloc !10410
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10407
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10407
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10407
  call void @llvm.write_register.i64(metadata !4649, i64 %asmresult1), !dbg !10407
  %8 = load i64, i64* %__eax, align 8, !dbg !10407
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !10411, metadata !DIExpression()), !dbg !10413
  store i64 -1, i64* %__mask, align 8, !dbg !10413
  %9 = load i64, i64* %__mask, align 8, !dbg !10413
  store i64 %9, i64* %tmp, align 8, !dbg !10413
  %10 = load i64, i64* %tmp, align 8, !dbg !10413
  %and = and i64 %8, %10, !dbg !10407
  store i64 %and, i64* %__ret, align 8, !dbg !10407
  %11 = load i64, i64* %__ret, align 8, !dbg !10401
  store i64 %11, i64* %tmp2, align 8, !dbg !10414
  %12 = load i64, i64* %tmp2, align 8, !dbg !10401
  ret i64 %12, !dbg !10415
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !10416 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10417, metadata !DIExpression()), !dbg !10419
  %0 = load i64, i64* %__edi, align 8, !dbg !10419
  store i64 %0, i64* %__edi, align 8, !dbg !10419
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10420, metadata !DIExpression()), !dbg !10419
  %1 = load i64, i64* %__esi, align 8, !dbg !10419
  store i64 %1, i64* %__esi, align 8, !dbg !10419
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10421, metadata !DIExpression()), !dbg !10419
  %2 = load i64, i64* %__edx, align 8, !dbg !10419
  store i64 %2, i64* %__edx, align 8, !dbg !10419
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10422, metadata !DIExpression()), !dbg !10419
  %3 = load i64, i64* %__ecx, align 8, !dbg !10419
  store i64 %3, i64* %__ecx, align 8, !dbg !10419
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10423, metadata !DIExpression()), !dbg !10419
  %4 = load i64, i64* %__eax, align 8, !dbg !10419
  store i64 %4, i64* %__eax, align 8, !dbg !10419
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !10419
  %6 = call i64 @llvm.read_register.i64(metadata !4649), !dbg !10419
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #6, !dbg !10419, !srcloc !10424
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !10419
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !10419
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10419
  call void @llvm.write_register.i64(metadata !4649, i64 %asmresult1), !dbg !10419
  ret void, !dbg !10425
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #5

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10426 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10429, metadata !DIExpression()), !dbg !10430
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10431, metadata !DIExpression()), !dbg !10432
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10433, metadata !DIExpression()), !dbg !10434
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10435
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10437
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10438
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #10, !dbg !10439
  br i1 %call, label %if.end, label %if.then, !dbg !10440

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !10441

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10442
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10443
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !10444
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !10445
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !10446
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10447
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !10448
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !10449
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10450
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10451
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !10452
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !10453
  br label %do.body, !dbg !10454

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !10455

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !10457

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !10455

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10459
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !10459
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !10459
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !10459
  br label %do.end7, !dbg !10459

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !10455

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !10461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !10462 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10465, metadata !DIExpression()), !dbg !10466
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !10467, metadata !DIExpression()), !dbg !10468
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !10469, metadata !DIExpression()), !dbg !10470
  ret i1 true, !dbg !10471
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !10472 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10476, metadata !DIExpression()), !dbg !10477
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10478, metadata !DIExpression()), !dbg !10479
  ret i1 true, !dbg !10480
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !10481 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10485, metadata !DIExpression()), !dbg !10486
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10487, metadata !DIExpression()), !dbg !10488
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10489, metadata !DIExpression()), !dbg !10490
  ret void, !dbg !10491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !10492 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !10495, metadata !DIExpression()), !dbg !10496
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !10497, metadata !DIExpression()), !dbg !10499
  %0 = load i64, i64* %__edi, align 8, !dbg !10499
  store i64 %0, i64* %__edi, align 8, !dbg !10499
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !10500, metadata !DIExpression()), !dbg !10499
  %1 = load i64, i64* %__esi, align 8, !dbg !10499
  store i64 %1, i64* %__esi, align 8, !dbg !10499
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !10501, metadata !DIExpression()), !dbg !10499
  %2 = load i64, i64* %__edx, align 8, !dbg !10499
  store i64 %2, i64* %__edx, align 8, !dbg !10499
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !10502, metadata !DIExpression()), !dbg !10499
  %3 = load i64, i64* %__ecx, align 8, !dbg !10499
  store i64 %3, i64* %__ecx, align 8, !dbg !10499
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !10503, metadata !DIExpression()), !dbg !10499
  %4 = load i64, i64* %__eax, align 8, !dbg !10499
  store i64 %4, i64* %__eax, align 8, !dbg !10499
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !10499
  %6 = call i64 @llvm.read_register.i64(metadata !4649), !dbg !10499
  %7 = load i64, i64* %f.addr, align 8, !dbg !10499
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #6, !dbg !10499, !srcloc !10504
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !10499
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !10499
  store i64 %asmresult, i64* %__eax, align 8, !dbg !10499
  call void @llvm.write_register.i64(metadata !4649, i64 %asmresult1), !dbg !10499
  ret void, !dbg !10505
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vb2_req_prepare(%struct.media_request_object* %obj) #0 !dbg !10506 {
entry:
  %retval = alloca i32, align 4
  %obj.addr = alloca %struct.media_request_object*, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.vb2_buffer*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp15 = alloca i64, align 8
  store %struct.media_request_object* %obj, %struct.media_request_object** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.media_request_object** %obj.addr, metadata !10507, metadata !DIExpression()), !dbg !10508
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !10509, metadata !DIExpression()), !dbg !10510
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10511, metadata !DIExpression()), !dbg !10513
  %0 = load %struct.media_request_object*, %struct.media_request_object** %obj.addr, align 8, !dbg !10513
  %1 = bitcast %struct.media_request_object* %0 to i8*, !dbg !10513
  store i8* %1, i8** %__mptr, align 8, !dbg !10513
  br label %do.body, !dbg !10513

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10514

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10513
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !10513
  %3 = bitcast i8* %add.ptr to %struct.vb2_buffer*, !dbg !10513
  store %struct.vb2_buffer* %3, %struct.vb2_buffer** %tmp, align 8, !dbg !10514
  %4 = load %struct.vb2_buffer*, %struct.vb2_buffer** %tmp, align 8, !dbg !10513
  store %struct.vb2_buffer* %4, %struct.vb2_buffer** %vb, align 8, !dbg !10510
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10516, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10518, metadata !DIExpression()), !dbg !10521
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10521
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 8, !dbg !10521
  %6 = load i32, i32* %state, align 8, !dbg !10521
  %cmp = icmp ne i32 %6, 1, !dbg !10521
  %lnot = xor i1 %cmp, true, !dbg !10521
  %lnot1 = xor i1 %lnot, true, !dbg !10521
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10521
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10521
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !10522
  %tobool = icmp ne i32 %7, 0, !dbg !10522
  %lnot2 = xor i1 %tobool, true, !dbg !10522
  %lnot4 = xor i1 %lnot2, true, !dbg !10522
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !10522
  %conv = sext i32 %lnot.ext5 to i64, !dbg !10522
  %tobool6 = icmp ne i64 %conv, 0, !dbg !10522
  br i1 %tobool6, label %if.then, label %if.end, !dbg !10521

if.then:                                          ; preds = %do.end
  br label %do.body7, !dbg !10522

do.body7:                                         ; preds = %if.then
  br label %do.body8, !dbg !10524

do.body8:                                         ; preds = %do.body7
  br label %do.end9, !dbg !10526

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !10524

do.body10:                                        ; preds = %do.end9
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 1396, i32 2305, i64 12) #6, !dbg !10528, !srcloc !10530
  br label %do.end11, !dbg !10528

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 281) #6, !dbg !10531, !srcloc !10533
  br label %do.body12, !dbg !10524

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !10534

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !10524

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !10524

if.end:                                           ; preds = %do.end14, %do.end
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !10521
  %tobool16 = icmp ne i32 %8, 0, !dbg !10521
  %lnot17 = xor i1 %tobool16, true, !dbg !10521
  %lnot19 = xor i1 %lnot17, true, !dbg !10521
  %lnot.ext20 = zext i1 %lnot19 to i32, !dbg !10521
  %conv21 = sext i32 %lnot.ext20 to i64, !dbg !10521
  store i64 %conv21, i64* %tmp15, align 8, !dbg !10522
  %9 = load i64, i64* %tmp15, align 8, !dbg !10521
  %tobool22 = icmp ne i64 %9, 0, !dbg !10536
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !10537

if.then23:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10538
  br label %return, !dbg !10538

if.end24:                                         ; preds = %if.end
  %10 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10539
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %10, i32 0, i32 0, !dbg !10540
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !10540
  %lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 5, !dbg !10541
  %12 = load %struct.mutex*, %struct.mutex** %lock, align 8, !dbg !10541
  call void @mutex_lock(%struct.mutex* %12) #10, !dbg !10542
  %13 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10543
  %call = call i32 @__buf_prepare(%struct.vb2_buffer* %13) #10, !dbg !10544
  store i32 %call, i32* %ret, align 4, !dbg !10545
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10546
  %vb2_queue25 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %14, i32 0, i32 0, !dbg !10547
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue25, align 8, !dbg !10547
  %lock26 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 5, !dbg !10548
  %16 = load %struct.mutex*, %struct.mutex** %lock26, align 8, !dbg !10548
  call void @mutex_unlock(%struct.mutex* %16) #10, !dbg !10549
  %17 = load i32, i32* %ret, align 4, !dbg !10550
  store i32 %17, i32* %retval, align 4, !dbg !10551
  br label %return, !dbg !10551

return:                                           ; preds = %if.end24, %if.then23
  %18 = load i32, i32* %retval, align 4, !dbg !10552
  ret i32 %18, !dbg !10552
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vb2_req_unprepare(%struct.media_request_object* %obj) #0 !dbg !10553 {
entry:
  %obj.addr = alloca %struct.media_request_object*, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.vb2_buffer*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp19 = alloca i64, align 8
  store %struct.media_request_object* %obj, %struct.media_request_object** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.media_request_object** %obj.addr, metadata !10554, metadata !DIExpression()), !dbg !10555
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !10556, metadata !DIExpression()), !dbg !10557
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10558, metadata !DIExpression()), !dbg !10560
  %0 = load %struct.media_request_object*, %struct.media_request_object** %obj.addr, align 8, !dbg !10560
  %1 = bitcast %struct.media_request_object* %0 to i8*, !dbg !10560
  store i8* %1, i8** %__mptr, align 8, !dbg !10560
  br label %do.body, !dbg !10560

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10561

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10560
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !10560
  %3 = bitcast i8* %add.ptr to %struct.vb2_buffer*, !dbg !10560
  store %struct.vb2_buffer* %3, %struct.vb2_buffer** %tmp, align 8, !dbg !10561
  %4 = load %struct.vb2_buffer*, %struct.vb2_buffer** %tmp, align 8, !dbg !10560
  store %struct.vb2_buffer* %4, %struct.vb2_buffer** %vb, align 8, !dbg !10557
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10563
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 0, !dbg !10564
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !10564
  %lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 5, !dbg !10565
  %7 = load %struct.mutex*, %struct.mutex** %lock, align 8, !dbg !10565
  call void @mutex_lock(%struct.mutex* %7) #10, !dbg !10566
  %8 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10567
  call void @__vb2_dqbuf(%struct.vb2_buffer* %8) #10, !dbg !10568
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10569
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 8, !dbg !10570
  store i32 1, i32* %state, align 8, !dbg !10571
  %10 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10572
  %vb2_queue1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %10, i32 0, i32 0, !dbg !10573
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue1, align 8, !dbg !10573
  %lock2 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 5, !dbg !10574
  %12 = load %struct.mutex*, %struct.mutex** %lock2, align 8, !dbg !10574
  call void @mutex_unlock(%struct.mutex* %12) #10, !dbg !10575
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10576, metadata !DIExpression()), !dbg !10578
  %13 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10578
  %req_obj = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %13, i32 0, i32 7, !dbg !10578
  %req = getelementptr inbounds %struct.media_request_object, %struct.media_request_object* %req_obj, i32 0, i32 2, !dbg !10578
  %14 = load %struct.media_request*, %struct.media_request** %req, align 8, !dbg !10578
  %tobool = icmp ne %struct.media_request* %14, null, !dbg !10578
  %lnot = xor i1 %tobool, true, !dbg !10578
  %lnot3 = xor i1 %lnot, true, !dbg !10578
  %lnot4 = xor i1 %lnot3, true, !dbg !10578
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !10578
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10578
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !10579
  %tobool5 = icmp ne i32 %15, 0, !dbg !10579
  %lnot6 = xor i1 %tobool5, true, !dbg !10579
  %lnot8 = xor i1 %lnot6, true, !dbg !10579
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !10579
  %conv = sext i32 %lnot.ext9 to i64, !dbg !10579
  %tobool10 = icmp ne i64 %conv, 0, !dbg !10579
  br i1 %tobool10, label %if.then, label %if.end, !dbg !10578

if.then:                                          ; preds = %do.end
  br label %do.body11, !dbg !10579

do.body11:                                        ; preds = %if.then
  br label %do.body12, !dbg !10581

do.body12:                                        ; preds = %do.body11
  br label %do.end13, !dbg !10583

do.end13:                                         ; preds = %do.body12
  br label %do.body14, !dbg !10581

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.9, i64 0, i64 0), i32 1415, i32 2305, i64 12) #6, !dbg !10585, !srcloc !10587
  br label %do.end15, !dbg !10585

do.end15:                                         ; preds = %do.body14
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 283) #6, !dbg !10588, !srcloc !10590
  br label %do.body16, !dbg !10581

do.body16:                                        ; preds = %do.end15
  br label %do.end17, !dbg !10591

do.end17:                                         ; preds = %do.body16
  br label %do.end18, !dbg !10581

do.end18:                                         ; preds = %do.end17
  br label %if.end, !dbg !10581

if.end:                                           ; preds = %do.end18, %do.end
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !10578
  %tobool20 = icmp ne i32 %16, 0, !dbg !10578
  %lnot21 = xor i1 %tobool20, true, !dbg !10578
  %lnot23 = xor i1 %lnot21, true, !dbg !10578
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !10578
  %conv25 = sext i32 %lnot.ext24 to i64, !dbg !10578
  store i64 %conv25, i64* %tmp19, align 8, !dbg !10579
  %17 = load i64, i64* %tmp19, align 8, !dbg !10578
  ret void, !dbg !10593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vb2_req_queue(%struct.media_request_object* %obj) #0 !dbg !10594 {
entry:
  %obj.addr = alloca %struct.media_request_object*, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.vb2_buffer*, align 8
  store %struct.media_request_object* %obj, %struct.media_request_object** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.media_request_object** %obj.addr, metadata !10595, metadata !DIExpression()), !dbg !10596
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !10597, metadata !DIExpression()), !dbg !10598
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10599, metadata !DIExpression()), !dbg !10601
  %0 = load %struct.media_request_object*, %struct.media_request_object** %obj.addr, align 8, !dbg !10601
  %1 = bitcast %struct.media_request_object* %0 to i8*, !dbg !10601
  store i8* %1, i8** %__mptr, align 8, !dbg !10601
  br label %do.body, !dbg !10601

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10602

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10601
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !10601
  %3 = bitcast i8* %add.ptr to %struct.vb2_buffer*, !dbg !10601
  store %struct.vb2_buffer* %3, %struct.vb2_buffer** %tmp, align 8, !dbg !10602
  %4 = load %struct.vb2_buffer*, %struct.vb2_buffer** %tmp, align 8, !dbg !10601
  store %struct.vb2_buffer* %4, %struct.vb2_buffer** %vb, align 8, !dbg !10598
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10604
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 0, !dbg !10605
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !10605
  %lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 5, !dbg !10606
  %7 = load %struct.mutex*, %struct.mutex** %lock, align 8, !dbg !10606
  call void @mutex_lock(%struct.mutex* %7) #10, !dbg !10607
  %8 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10608
  %vb2_queue1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %8, i32 0, i32 0, !dbg !10609
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue1, align 8, !dbg !10609
  %10 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10610
  %index = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %10, i32 0, i32 1, !dbg !10611
  %11 = load i32, i32* %index, align 8, !dbg !10611
  %call = call i32 @vb2_core_qbuf(%struct.vb2_queue* %9, i32 %11, i8* null, %struct.media_request* null) #10, !dbg !10612
  %12 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10613
  %vb2_queue2 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %12, i32 0, i32 0, !dbg !10614
  %13 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue2, align 8, !dbg !10614
  %lock3 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %13, i32 0, i32 5, !dbg !10615
  %14 = load %struct.mutex*, %struct.mutex** %lock3, align 8, !dbg !10615
  call void @mutex_unlock(%struct.mutex* %14) #10, !dbg !10616
  ret void, !dbg !10617
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vb2_req_unbind(%struct.media_request_object* %obj) #0 !dbg !10618 {
entry:
  %obj.addr = alloca %struct.media_request_object*, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.vb2_buffer*, align 8
  store %struct.media_request_object* %obj, %struct.media_request_object** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.media_request_object** %obj.addr, metadata !10619, metadata !DIExpression()), !dbg !10620
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !10621, metadata !DIExpression()), !dbg !10622
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10623, metadata !DIExpression()), !dbg !10625
  %0 = load %struct.media_request_object*, %struct.media_request_object** %obj.addr, align 8, !dbg !10625
  %1 = bitcast %struct.media_request_object* %0 to i8*, !dbg !10625
  store i8* %1, i8** %__mptr, align 8, !dbg !10625
  br label %do.body, !dbg !10625

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10626

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10625
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !10625
  %3 = bitcast i8* %add.ptr to %struct.vb2_buffer*, !dbg !10625
  store %struct.vb2_buffer* %3, %struct.vb2_buffer** %tmp, align 8, !dbg !10626
  %4 = load %struct.vb2_buffer*, %struct.vb2_buffer** %tmp, align 8, !dbg !10625
  store %struct.vb2_buffer* %4, %struct.vb2_buffer** %vb, align 8, !dbg !10622
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10628
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 8, !dbg !10630
  %6 = load i32, i32* %state, align 8, !dbg !10630
  %cmp = icmp eq i32 %6, 1, !dbg !10631
  br i1 %cmp, label %if.then, label %if.end11, !dbg !10632

if.then:                                          ; preds = %do.end
  %7 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10633
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %7, i32 0, i32 0, !dbg !10633
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !10633
  %tobool = icmp ne %struct.vb2_queue* %8, null, !dbg !10633
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10633

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10633
  %vb2_queue1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 0, !dbg !10633
  %10 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue1, align 8, !dbg !10633
  %buf_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %10, i32 0, i32 9, !dbg !10633
  %11 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops, align 8, !dbg !10633
  %tobool2 = icmp ne %struct.vb2_buf_ops* %11, null, !dbg !10633
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !10633

land.lhs.true3:                                   ; preds = %land.lhs.true
  %12 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10633
  %vb2_queue4 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %12, i32 0, i32 0, !dbg !10633
  %13 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue4, align 8, !dbg !10633
  %buf_ops5 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %13, i32 0, i32 9, !dbg !10633
  %14 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops5, align 8, !dbg !10633
  %init_buffer = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %14, i32 0, i32 1, !dbg !10633
  %15 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %init_buffer, align 8, !dbg !10633
  %tobool6 = icmp ne void (%struct.vb2_buffer*)* %15, null, !dbg !10633
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !10636

if.then7:                                         ; preds = %land.lhs.true3
  %16 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10633
  %vb2_queue8 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %16, i32 0, i32 0, !dbg !10633
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue8, align 8, !dbg !10633
  %buf_ops9 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %17, i32 0, i32 9, !dbg !10633
  %18 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops9, align 8, !dbg !10633
  %init_buffer10 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %18, i32 0, i32 1, !dbg !10633
  %19 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %init_buffer10, align 8, !dbg !10633
  %20 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10633
  call void %19(%struct.vb2_buffer* %20) #10, !dbg !10633
  br label %if.end, !dbg !10633

if.end:                                           ; preds = %if.then7, %land.lhs.true3, %land.lhs.true, %if.then
  br label %if.end11, !dbg !10637

if.end11:                                         ; preds = %if.end, %do.end
  ret void, !dbg !10638
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vb2_req_release(%struct.media_request_object* %obj) #0 !dbg !10639 {
entry:
  %obj.addr = alloca %struct.media_request_object*, align 8
  %vb = alloca %struct.vb2_buffer*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.vb2_buffer*, align 8
  store %struct.media_request_object* %obj, %struct.media_request_object** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.media_request_object** %obj.addr, metadata !10640, metadata !DIExpression()), !dbg !10641
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb, metadata !10642, metadata !DIExpression()), !dbg !10643
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10644, metadata !DIExpression()), !dbg !10646
  %0 = load %struct.media_request_object*, %struct.media_request_object** %obj.addr, align 8, !dbg !10646
  %1 = bitcast %struct.media_request_object* %0 to i8*, !dbg !10646
  store i8* %1, i8** %__mptr, align 8, !dbg !10646
  br label %do.body, !dbg !10646

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10647

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10646
  %add.ptr = getelementptr i8, i8* %2, i64 -40, !dbg !10646
  %3 = bitcast i8* %add.ptr to %struct.vb2_buffer*, !dbg !10646
  store %struct.vb2_buffer* %3, %struct.vb2_buffer** %tmp, align 8, !dbg !10647
  %4 = load %struct.vb2_buffer*, %struct.vb2_buffer** %tmp, align 8, !dbg !10646
  store %struct.vb2_buffer* %4, %struct.vb2_buffer** %vb, align 8, !dbg !10643
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10649
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 8, !dbg !10651
  %6 = load i32, i32* %state, align 8, !dbg !10651
  %cmp = icmp eq i32 %6, 1, !dbg !10652
  br i1 %cmp, label %if.then, label %if.end5, !dbg !10653

if.then:                                          ; preds = %do.end
  %7 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10654
  %state1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %7, i32 0, i32 8, !dbg !10656
  store i32 0, i32* %state1, align 8, !dbg !10657
  %8 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10658
  %request = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %8, i32 0, i32 6, !dbg !10660
  %9 = load %struct.media_request*, %struct.media_request** %request, align 8, !dbg !10660
  %tobool = icmp ne %struct.media_request* %9, null, !dbg !10658
  br i1 %tobool, label %if.then2, label %if.end, !dbg !10661

if.then2:                                         ; preds = %if.then
  %10 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10662
  %request3 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %10, i32 0, i32 6, !dbg !10663
  %11 = load %struct.media_request*, %struct.media_request** %request3, align 8, !dbg !10663
  call void @media_request_put(%struct.media_request* %11) #10, !dbg !10664
  br label %if.end, !dbg !10664

if.end:                                           ; preds = %if.then2, %if.then
  %12 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb, align 8, !dbg !10665
  %request4 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %12, i32 0, i32 6, !dbg !10666
  store %struct.media_request* null, %struct.media_request** %request4, align 8, !dbg !10667
  br label %if.end5, !dbg !10668

if.end5:                                          ; preds = %if.end, %do.end
  ret void, !dbg !10669
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__prepare_mmap(%struct.vb2_buffer* %vb) #0 !dbg !10670 {
entry:
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %ret = alloca i32, align 4
  %ret1 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !10671, metadata !DIExpression()), !dbg !10672
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10673, metadata !DIExpression()), !dbg !10674
  store i32 0, i32* %ret, align 4, !dbg !10674
  call void @llvm.dbg.declare(metadata i32* %ret1, metadata !10675, metadata !DIExpression()), !dbg !10677
  store i32 0, i32* %ret1, align 4, !dbg !10677
  %0 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10678
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %0, i32 0, i32 0, !dbg !10678
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !10678
  %tobool = icmp ne %struct.vb2_queue* %1, null, !dbg !10678
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10678

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10678
  %vb2_queue2 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %2, i32 0, i32 0, !dbg !10678
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue2, align 8, !dbg !10678
  %buf_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %3, i32 0, i32 9, !dbg !10678
  %4 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops, align 8, !dbg !10678
  %tobool3 = icmp ne %struct.vb2_buf_ops* %4, null, !dbg !10678
  br i1 %tobool3, label %land.lhs.true4, label %if.end, !dbg !10678

land.lhs.true4:                                   ; preds = %land.lhs.true
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10678
  %vb2_queue5 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 0, !dbg !10678
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue5, align 8, !dbg !10678
  %buf_ops6 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 9, !dbg !10678
  %7 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops6, align 8, !dbg !10678
  %fill_vb2_buffer = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %7, i32 0, i32 3, !dbg !10678
  %8 = load i32 (%struct.vb2_buffer*, %struct.vb2_plane*)*, i32 (%struct.vb2_buffer*, %struct.vb2_plane*)** %fill_vb2_buffer, align 8, !dbg !10678
  %tobool7 = icmp ne i32 (%struct.vb2_buffer*, %struct.vb2_plane*)* %8, null, !dbg !10678
  br i1 %tobool7, label %if.then, label %if.end, !dbg !10677

if.then:                                          ; preds = %land.lhs.true4
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10678
  %vb2_queue8 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 0, !dbg !10678
  %10 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue8, align 8, !dbg !10678
  %buf_ops9 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %10, i32 0, i32 9, !dbg !10678
  %11 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops9, align 8, !dbg !10678
  %fill_vb2_buffer10 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %11, i32 0, i32 3, !dbg !10678
  %12 = load i32 (%struct.vb2_buffer*, %struct.vb2_plane*)*, i32 (%struct.vb2_buffer*, %struct.vb2_plane*)** %fill_vb2_buffer10, align 8, !dbg !10678
  %13 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10678
  %14 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10678
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %14, i32 0, i32 10, !dbg !10678
  %arraydecay = getelementptr inbounds [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 0, !dbg !10678
  %call = call i32 %12(%struct.vb2_buffer* %13, %struct.vb2_plane* %arraydecay) #10, !dbg !10678
  store i32 %call, i32* %ret1, align 4, !dbg !10678
  br label %if.end, !dbg !10678

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  %15 = load i32, i32* %ret1, align 4, !dbg !10677
  store i32 %15, i32* %tmp, align 4, !dbg !10678
  %16 = load i32, i32* %tmp, align 4, !dbg !10677
  store i32 %16, i32* %ret, align 4, !dbg !10680
  %17 = load i32, i32* %ret, align 4, !dbg !10681
  %tobool11 = icmp ne i32 %17, 0, !dbg !10681
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !10681

cond.true:                                        ; preds = %if.end
  %18 = load i32, i32* %ret, align 4, !dbg !10682
  br label %cond.end20, !dbg !10681

cond.false:                                       ; preds = %if.end
  %19 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10683
  %vb2_queue12 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %19, i32 0, i32 0, !dbg !10683
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue12, align 8, !dbg !10683
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %20, i32 0, i32 7, !dbg !10683
  %21 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !10683
  %buf_prepare = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %21, i32 0, i32 5, !dbg !10683
  %22 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_prepare, align 8, !dbg !10683
  %tobool13 = icmp ne i32 (%struct.vb2_buffer*)* %22, null, !dbg !10683
  br i1 %tobool13, label %cond.true14, label %cond.false19, !dbg !10683

cond.true14:                                      ; preds = %cond.false
  %23 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10683
  %vb2_queue15 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %23, i32 0, i32 0, !dbg !10683
  %24 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue15, align 8, !dbg !10683
  %ops16 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %24, i32 0, i32 7, !dbg !10683
  %25 = load %struct.vb2_ops*, %struct.vb2_ops** %ops16, align 8, !dbg !10683
  %buf_prepare17 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %25, i32 0, i32 5, !dbg !10683
  %26 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_prepare17, align 8, !dbg !10683
  %27 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10683
  %call18 = call i32 %26(%struct.vb2_buffer* %27) #10, !dbg !10683
  br label %cond.end, !dbg !10683

cond.false19:                                     ; preds = %cond.false
  br label %cond.end, !dbg !10683

cond.end:                                         ; preds = %cond.false19, %cond.true14
  %cond = phi i32 [ %call18, %cond.true14 ], [ 0, %cond.false19 ], !dbg !10683
  br label %cond.end20, !dbg !10681

cond.end20:                                       ; preds = %cond.end, %cond.true
  %cond21 = phi i32 [ %18, %cond.true ], [ %cond, %cond.end ], !dbg !10681
  ret i32 %cond21, !dbg !10684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__prepare_userptr(%struct.vb2_buffer* %vb) #0 !dbg !10685 {
entry:
  %retval = alloca i32, align 4
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %planes = alloca [8 x %struct.vb2_plane], align 16
  %q = alloca %struct.vb2_queue*, align 8
  %mem_priv = alloca i8*, align 8
  %plane = alloca i32, align 4
  %ret = alloca i32, align 4
  %reacquired = alloca i8, align 1
  %ret3 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !10686, metadata !DIExpression()), !dbg !10687
  call void @llvm.dbg.declare(metadata [8 x %struct.vb2_plane]* %planes, metadata !10688, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q, metadata !10690, metadata !DIExpression()), !dbg !10691
  %0 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10692
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %0, i32 0, i32 0, !dbg !10693
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !10693
  store %struct.vb2_queue* %1, %struct.vb2_queue** %q, align 8, !dbg !10691
  call void @llvm.dbg.declare(metadata i8** %mem_priv, metadata !10694, metadata !DIExpression()), !dbg !10695
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !10696, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10698, metadata !DIExpression()), !dbg !10699
  store i32 0, i32* %ret, align 4, !dbg !10699
  call void @llvm.dbg.declare(metadata i8* %reacquired, metadata !10700, metadata !DIExpression()), !dbg !10701
  %2 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10702
  %planes1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %2, i32 0, i32 10, !dbg !10703
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes1, i64 0, i64 0, !dbg !10702
  %mem_priv2 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 0, !dbg !10704
  %3 = load i8*, i8** %mem_priv2, align 8, !dbg !10704
  %cmp = icmp eq i8* %3, null, !dbg !10705
  %frombool = zext i1 %cmp to i8, !dbg !10701
  store i8 %frombool, i8* %reacquired, align 1, !dbg !10701
  %arraydecay = getelementptr inbounds [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 0, !dbg !10706
  %4 = bitcast %struct.vb2_plane* %arraydecay to i8*, !dbg !10706
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10707
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 4, !dbg !10708
  %6 = load i32, i32* %num_planes, align 4, !dbg !10708
  %conv = zext i32 %6 to i64, !dbg !10707
  %mul = mul i64 48, %conv, !dbg !10709
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 %mul, i1 false), !dbg !10706
  call void @llvm.dbg.declare(metadata i32* %ret3, metadata !10710, metadata !DIExpression()), !dbg !10712
  store i32 0, i32* %ret3, align 4, !dbg !10712
  %7 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10713
  %vb2_queue4 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %7, i32 0, i32 0, !dbg !10713
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue4, align 8, !dbg !10713
  %tobool = icmp ne %struct.vb2_queue* %8, null, !dbg !10713
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !10713

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10713
  %vb2_queue5 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 0, !dbg !10713
  %10 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue5, align 8, !dbg !10713
  %buf_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %10, i32 0, i32 9, !dbg !10713
  %11 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops, align 8, !dbg !10713
  %tobool6 = icmp ne %struct.vb2_buf_ops* %11, null, !dbg !10713
  br i1 %tobool6, label %land.lhs.true7, label %if.end, !dbg !10713

land.lhs.true7:                                   ; preds = %land.lhs.true
  %12 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10713
  %vb2_queue8 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %12, i32 0, i32 0, !dbg !10713
  %13 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue8, align 8, !dbg !10713
  %buf_ops9 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %13, i32 0, i32 9, !dbg !10713
  %14 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops9, align 8, !dbg !10713
  %fill_vb2_buffer = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %14, i32 0, i32 3, !dbg !10713
  %15 = load i32 (%struct.vb2_buffer*, %struct.vb2_plane*)*, i32 (%struct.vb2_buffer*, %struct.vb2_plane*)** %fill_vb2_buffer, align 8, !dbg !10713
  %tobool10 = icmp ne i32 (%struct.vb2_buffer*, %struct.vb2_plane*)* %15, null, !dbg !10713
  br i1 %tobool10, label %if.then, label %if.end, !dbg !10712

if.then:                                          ; preds = %land.lhs.true7
  %16 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10713
  %vb2_queue11 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %16, i32 0, i32 0, !dbg !10713
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue11, align 8, !dbg !10713
  %buf_ops12 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %17, i32 0, i32 9, !dbg !10713
  %18 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops12, align 8, !dbg !10713
  %fill_vb2_buffer13 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %18, i32 0, i32 3, !dbg !10713
  %19 = load i32 (%struct.vb2_buffer*, %struct.vb2_plane*)*, i32 (%struct.vb2_buffer*, %struct.vb2_plane*)** %fill_vb2_buffer13, align 8, !dbg !10713
  %20 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10713
  %arraydecay14 = getelementptr inbounds [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 0, !dbg !10713
  %call = call i32 %19(%struct.vb2_buffer* %20, %struct.vb2_plane* %arraydecay14) #10, !dbg !10713
  store i32 %call, i32* %ret3, align 4, !dbg !10713
  br label %if.end, !dbg !10713

if.end:                                           ; preds = %if.then, %land.lhs.true7, %land.lhs.true, %entry
  %21 = load i32, i32* %ret3, align 4, !dbg !10712
  store i32 %21, i32* %tmp, align 4, !dbg !10713
  %22 = load i32, i32* %tmp, align 4, !dbg !10712
  store i32 %22, i32* %ret, align 4, !dbg !10715
  %23 = load i32, i32* %ret, align 4, !dbg !10716
  %tobool15 = icmp ne i32 %23, 0, !dbg !10716
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !10718

if.then16:                                        ; preds = %if.end
  %24 = load i32, i32* %ret, align 4, !dbg !10719
  store i32 %24, i32* %retval, align 4, !dbg !10720
  br label %return, !dbg !10720

if.end17:                                         ; preds = %if.end
  store i32 0, i32* %plane, align 4, !dbg !10721
  br label %for.cond, !dbg !10723

for.cond:                                         ; preds = %for.inc, %if.end17
  %25 = load i32, i32* %plane, align 4, !dbg !10724
  %26 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10726
  %num_planes18 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %26, i32 0, i32 4, !dbg !10727
  %27 = load i32, i32* %num_planes18, align 4, !dbg !10727
  %cmp19 = icmp ult i32 %25, %27, !dbg !10728
  br i1 %cmp19, label %for.body, label %for.end, !dbg !10729

for.body:                                         ; preds = %for.cond
  %28 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10730
  %planes21 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %28, i32 0, i32 10, !dbg !10733
  %29 = load i32, i32* %plane, align 4, !dbg !10734
  %idxprom = zext i32 %29 to i64, !dbg !10730
  %arrayidx22 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes21, i64 0, i64 %idxprom, !dbg !10730
  %m = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx22, i32 0, i32 6, !dbg !10735
  %userptr = bitcast %union.anon.72* %m to i64*, !dbg !10736
  %30 = load i64, i64* %userptr, align 8, !dbg !10736
  %tobool23 = icmp ne i64 %30, 0, !dbg !10730
  br i1 %tobool23, label %land.lhs.true24, label %if.end46, !dbg !10737

land.lhs.true24:                                  ; preds = %for.body
  %31 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10738
  %planes25 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %31, i32 0, i32 10, !dbg !10739
  %32 = load i32, i32* %plane, align 4, !dbg !10740
  %idxprom26 = zext i32 %32 to i64, !dbg !10738
  %arrayidx27 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes25, i64 0, i64 %idxprom26, !dbg !10738
  %m28 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx27, i32 0, i32 6, !dbg !10741
  %userptr29 = bitcast %union.anon.72* %m28 to i64*, !dbg !10742
  %33 = load i64, i64* %userptr29, align 8, !dbg !10742
  %34 = load i32, i32* %plane, align 4, !dbg !10743
  %idxprom30 = zext i32 %34 to i64, !dbg !10744
  %arrayidx31 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom30, !dbg !10744
  %m32 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx31, i32 0, i32 6, !dbg !10745
  %userptr33 = bitcast %union.anon.72* %m32 to i64*, !dbg !10746
  %35 = load i64, i64* %userptr33, align 16, !dbg !10746
  %cmp34 = icmp eq i64 %33, %35, !dbg !10747
  br i1 %cmp34, label %land.lhs.true36, label %if.end46, !dbg !10748

land.lhs.true36:                                  ; preds = %land.lhs.true24
  %36 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10749
  %planes37 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %36, i32 0, i32 10, !dbg !10750
  %37 = load i32, i32* %plane, align 4, !dbg !10751
  %idxprom38 = zext i32 %37 to i64, !dbg !10749
  %arrayidx39 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes37, i64 0, i64 %idxprom38, !dbg !10749
  %length = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx39, i32 0, i32 4, !dbg !10752
  %38 = load i32, i32* %length, align 8, !dbg !10752
  %39 = load i32, i32* %plane, align 4, !dbg !10753
  %idxprom40 = zext i32 %39 to i64, !dbg !10754
  %arrayidx41 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom40, !dbg !10754
  %length42 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx41, i32 0, i32 4, !dbg !10755
  %40 = load i32, i32* %length42, align 8, !dbg !10755
  %cmp43 = icmp eq i32 %38, %40, !dbg !10756
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !10757

if.then45:                                        ; preds = %land.lhs.true36
  br label %for.inc, !dbg !10758

if.end46:                                         ; preds = %land.lhs.true36, %land.lhs.true24, %for.body
  br label %do.body, !dbg !10759

do.body:                                          ; preds = %if.end46
  %41 = load i32, i32* @debug, align 4, !dbg !10760
  %cmp47 = icmp sge i32 %41, 3, !dbg !10760
  br i1 %cmp47, label %if.then49, label %if.end52, !dbg !10763

if.then49:                                        ; preds = %do.body
  %42 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10760
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %42, i32 0, i32 31, !dbg !10760
  %arraydecay50 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !10760
  %43 = load i32, i32* %plane, align 4, !dbg !10760
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.74, i64 0, i64 0), i8* %arraydecay50, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.__prepare_userptr, i64 0, i64 0), i32 %43) #11, !dbg !10760
  br label %if.end52, !dbg !10760

if.end52:                                         ; preds = %if.then49, %do.body
  br label %do.end, !dbg !10763

do.end:                                           ; preds = %if.end52
  %44 = load i32, i32* %plane, align 4, !dbg !10764
  %idxprom53 = zext i32 %44 to i64, !dbg !10766
  %arrayidx54 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom53, !dbg !10766
  %length55 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx54, i32 0, i32 4, !dbg !10767
  %45 = load i32, i32* %length55, align 8, !dbg !10767
  %46 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10768
  %planes56 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %46, i32 0, i32 10, !dbg !10769
  %47 = load i32, i32* %plane, align 4, !dbg !10770
  %idxprom57 = zext i32 %47 to i64, !dbg !10768
  %arrayidx58 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes56, i64 0, i64 %idxprom57, !dbg !10768
  %min_length = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx58, i32 0, i32 5, !dbg !10771
  %48 = load i32, i32* %min_length, align 4, !dbg !10771
  %cmp59 = icmp ult i32 %45, %48, !dbg !10772
  br i1 %cmp59, label %if.then61, label %if.end78, !dbg !10773

if.then61:                                        ; preds = %do.end
  br label %do.body62, !dbg !10774

do.body62:                                        ; preds = %if.then61
  %49 = load i32, i32* @debug, align 4, !dbg !10776
  %cmp63 = icmp sge i32 %49, 1, !dbg !10776
  br i1 %cmp63, label %if.then65, label %if.end76, !dbg !10779

if.then65:                                        ; preds = %do.body62
  %50 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10776
  %name66 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %50, i32 0, i32 31, !dbg !10776
  %arraydecay67 = getelementptr inbounds [32 x i8], [32 x i8]* %name66, i64 0, i64 0, !dbg !10776
  %51 = load i32, i32* %plane, align 4, !dbg !10776
  %idxprom68 = zext i32 %51 to i64, !dbg !10776
  %arrayidx69 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom68, !dbg !10776
  %length70 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx69, i32 0, i32 4, !dbg !10776
  %52 = load i32, i32* %length70, align 8, !dbg !10776
  %53 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10776
  %planes71 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %53, i32 0, i32 10, !dbg !10776
  %54 = load i32, i32* %plane, align 4, !dbg !10776
  %idxprom72 = zext i32 %54 to i64, !dbg !10776
  %arrayidx73 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes71, i64 0, i64 %idxprom72, !dbg !10776
  %min_length74 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx73, i32 0, i32 5, !dbg !10776
  %55 = load i32, i32* %min_length74, align 4, !dbg !10776
  %56 = load i32, i32* %plane, align 4, !dbg !10776
  %call75 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.75, i64 0, i64 0), i8* %arraydecay67, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.__prepare_userptr, i64 0, i64 0), i32 %52, i32 %55, i32 %56) #11, !dbg !10776
  br label %if.end76, !dbg !10776

if.end76:                                         ; preds = %if.then65, %do.body62
  br label %do.end77, !dbg !10779

do.end77:                                         ; preds = %if.end76
  store i32 -22, i32* %ret, align 4, !dbg !10780
  br label %err, !dbg !10781

if.end78:                                         ; preds = %do.end
  %57 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10782
  %planes79 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %57, i32 0, i32 10, !dbg !10784
  %58 = load i32, i32* %plane, align 4, !dbg !10785
  %idxprom80 = zext i32 %58 to i64, !dbg !10782
  %arrayidx81 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes79, i64 0, i64 %idxprom80, !dbg !10782
  %mem_priv82 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx81, i32 0, i32 0, !dbg !10786
  %59 = load i8*, i8** %mem_priv82, align 8, !dbg !10786
  %tobool83 = icmp ne i8* %59, null, !dbg !10782
  br i1 %tobool83, label %if.then84, label %if.end110, !dbg !10787

if.then84:                                        ; preds = %if.end78
  %60 = load i8, i8* %reacquired, align 1, !dbg !10788
  %tobool85 = trunc i8 %60 to i1, !dbg !10788
  br i1 %tobool85, label %if.end96, label %if.then86, !dbg !10791

if.then86:                                        ; preds = %if.then84
  store i8 1, i8* %reacquired, align 1, !dbg !10792
  %61 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10794
  %copied_timestamp = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %61, i32 0, i32 9, !dbg !10795
  %bf.load = load i8, i8* %copied_timestamp, align 4, !dbg !10796
  %bf.clear = and i8 %bf.load, -5, !dbg !10796
  store i8 %bf.clear, i8* %copied_timestamp, align 4, !dbg !10796
  br label %do.body87, !dbg !10797

do.body87:                                        ; preds = %if.then86
  %62 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10798
  %vb2_queue88 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %62, i32 0, i32 0, !dbg !10798
  %63 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue88, align 8, !dbg !10798
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %63, i32 0, i32 7, !dbg !10798
  %64 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !10798
  %buf_cleanup = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %64, i32 0, i32 7, !dbg !10798
  %65 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_cleanup, align 8, !dbg !10798
  %tobool89 = icmp ne void (%struct.vb2_buffer*)* %65, null, !dbg !10798
  br i1 %tobool89, label %if.then90, label %if.end94, !dbg !10801

if.then90:                                        ; preds = %do.body87
  %66 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10798
  %vb2_queue91 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %66, i32 0, i32 0, !dbg !10798
  %67 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue91, align 8, !dbg !10798
  %ops92 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %67, i32 0, i32 7, !dbg !10798
  %68 = load %struct.vb2_ops*, %struct.vb2_ops** %ops92, align 8, !dbg !10798
  %buf_cleanup93 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %68, i32 0, i32 7, !dbg !10798
  %69 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_cleanup93, align 8, !dbg !10798
  %70 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10798
  call void %69(%struct.vb2_buffer* %70) #10, !dbg !10798
  br label %if.end94, !dbg !10798

if.end94:                                         ; preds = %if.then90, %do.body87
  br label %do.end95, !dbg !10801

do.end95:                                         ; preds = %if.end94
  br label %if.end96, !dbg !10802

if.end96:                                         ; preds = %do.end95, %if.then84
  br label %do.body97, !dbg !10803

do.body97:                                        ; preds = %if.end96
  %71 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10804
  %vb2_queue98 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %71, i32 0, i32 0, !dbg !10804
  %72 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue98, align 8, !dbg !10804
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %72, i32 0, i32 8, !dbg !10804
  %73 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !10804
  %put_userptr = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %73, i32 0, i32 4, !dbg !10804
  %74 = load void (i8*)*, void (i8*)** %put_userptr, align 8, !dbg !10804
  %tobool99 = icmp ne void (i8*)* %74, null, !dbg !10804
  br i1 %tobool99, label %if.then100, label %if.end108, !dbg !10807

if.then100:                                       ; preds = %do.body97
  %75 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10804
  %vb2_queue101 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %75, i32 0, i32 0, !dbg !10804
  %76 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue101, align 8, !dbg !10804
  %mem_ops102 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %76, i32 0, i32 8, !dbg !10804
  %77 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops102, align 8, !dbg !10804
  %put_userptr103 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %77, i32 0, i32 4, !dbg !10804
  %78 = load void (i8*)*, void (i8*)** %put_userptr103, align 8, !dbg !10804
  %79 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10804
  %planes104 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %79, i32 0, i32 10, !dbg !10804
  %80 = load i32, i32* %plane, align 4, !dbg !10804
  %idxprom105 = zext i32 %80 to i64, !dbg !10804
  %arrayidx106 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes104, i64 0, i64 %idxprom105, !dbg !10804
  %mem_priv107 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx106, i32 0, i32 0, !dbg !10804
  %81 = load i8*, i8** %mem_priv107, align 8, !dbg !10804
  call void %78(i8* %81) #10, !dbg !10804
  br label %if.end108, !dbg !10804

if.end108:                                        ; preds = %if.then100, %do.body97
  br label %do.end109, !dbg !10807

do.end109:                                        ; preds = %if.end108
  br label %if.end110, !dbg !10808

if.end110:                                        ; preds = %do.end109, %if.end78
  %82 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10809
  %planes111 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %82, i32 0, i32 10, !dbg !10810
  %83 = load i32, i32* %plane, align 4, !dbg !10811
  %idxprom112 = zext i32 %83 to i64, !dbg !10809
  %arrayidx113 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes111, i64 0, i64 %idxprom112, !dbg !10809
  %mem_priv114 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx113, i32 0, i32 0, !dbg !10812
  store i8* null, i8** %mem_priv114, align 8, !dbg !10813
  %84 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10814
  %planes115 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %84, i32 0, i32 10, !dbg !10815
  %85 = load i32, i32* %plane, align 4, !dbg !10816
  %idxprom116 = zext i32 %85 to i64, !dbg !10814
  %arrayidx117 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes115, i64 0, i64 %idxprom116, !dbg !10814
  %bytesused = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx117, i32 0, i32 3, !dbg !10817
  store i32 0, i32* %bytesused, align 4, !dbg !10818
  %86 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10819
  %planes118 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %86, i32 0, i32 10, !dbg !10820
  %87 = load i32, i32* %plane, align 4, !dbg !10821
  %idxprom119 = zext i32 %87 to i64, !dbg !10819
  %arrayidx120 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes118, i64 0, i64 %idxprom119, !dbg !10819
  %length121 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx120, i32 0, i32 4, !dbg !10822
  store i32 0, i32* %length121, align 8, !dbg !10823
  %88 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10824
  %planes122 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %88, i32 0, i32 10, !dbg !10825
  %89 = load i32, i32* %plane, align 4, !dbg !10826
  %idxprom123 = zext i32 %89 to i64, !dbg !10824
  %arrayidx124 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes122, i64 0, i64 %idxprom123, !dbg !10824
  %m125 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx124, i32 0, i32 6, !dbg !10827
  %userptr126 = bitcast %union.anon.72* %m125 to i64*, !dbg !10828
  store i64 0, i64* %userptr126, align 8, !dbg !10829
  %90 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10830
  %planes127 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %90, i32 0, i32 10, !dbg !10831
  %91 = load i32, i32* %plane, align 4, !dbg !10832
  %idxprom128 = zext i32 %91 to i64, !dbg !10830
  %arrayidx129 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes127, i64 0, i64 %idxprom128, !dbg !10830
  %data_offset = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx129, i32 0, i32 7, !dbg !10833
  store i32 0, i32* %data_offset, align 8, !dbg !10834
  %92 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10835
  %vb2_queue130 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %92, i32 0, i32 0, !dbg !10835
  %93 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue130, align 8, !dbg !10835
  %mem_ops131 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %93, i32 0, i32 8, !dbg !10835
  %94 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops131, align 8, !dbg !10835
  %get_userptr = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %94, i32 0, i32 3, !dbg !10835
  %95 = load i8* (%struct.device*, i64, i64, i32)*, i8* (%struct.device*, i64, i64, i32)** %get_userptr, align 8, !dbg !10835
  %tobool132 = icmp ne i8* (%struct.device*, i64, i64, i32)* %95, null, !dbg !10835
  br i1 %tobool132, label %cond.true, label %cond.false149, !dbg !10835

cond.true:                                        ; preds = %if.end110
  %96 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10835
  %vb2_queue133 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %96, i32 0, i32 0, !dbg !10835
  %97 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue133, align 8, !dbg !10835
  %mem_ops134 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %97, i32 0, i32 8, !dbg !10835
  %98 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops134, align 8, !dbg !10835
  %get_userptr135 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %98, i32 0, i32 3, !dbg !10835
  %99 = load i8* (%struct.device*, i64, i64, i32)*, i8* (%struct.device*, i64, i64, i32)** %get_userptr135, align 8, !dbg !10835
  %100 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10835
  %alloc_devs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %100, i32 0, i32 16, !dbg !10835
  %101 = load i32, i32* %plane, align 4, !dbg !10835
  %idxprom136 = zext i32 %101 to i64, !dbg !10835
  %arrayidx137 = getelementptr [8 x %struct.device*], [8 x %struct.device*]* %alloc_devs, i64 0, i64 %idxprom136, !dbg !10835
  %102 = load %struct.device*, %struct.device** %arrayidx137, align 8, !dbg !10835
  %tobool138 = icmp ne %struct.device* %102, null, !dbg !10835
  br i1 %tobool138, label %cond.true139, label %cond.false, !dbg !10835

cond.true139:                                     ; preds = %cond.true
  br label %cond.end, !dbg !10835

cond.false:                                       ; preds = %cond.true
  %103 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10835
  %dev = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %103, i32 0, i32 2, !dbg !10835
  %104 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10835
  br label %cond.end, !dbg !10835

cond.end:                                         ; preds = %cond.false, %cond.true139
  %cond = phi %struct.device* [ %102, %cond.true139 ], [ %104, %cond.false ], !dbg !10835
  %105 = load i32, i32* %plane, align 4, !dbg !10835
  %idxprom140 = zext i32 %105 to i64, !dbg !10835
  %arrayidx141 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom140, !dbg !10835
  %m142 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx141, i32 0, i32 6, !dbg !10835
  %userptr143 = bitcast %union.anon.72* %m142 to i64*, !dbg !10835
  %106 = load i64, i64* %userptr143, align 16, !dbg !10835
  %107 = load i32, i32* %plane, align 4, !dbg !10835
  %idxprom144 = zext i32 %107 to i64, !dbg !10835
  %arrayidx145 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom144, !dbg !10835
  %length146 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx145, i32 0, i32 4, !dbg !10835
  %108 = load i32, i32* %length146, align 8, !dbg !10835
  %conv147 = zext i32 %108 to i64, !dbg !10835
  %109 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10835
  %dma_dir = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %109, i32 0, i32 19, !dbg !10835
  %110 = load i32, i32* %dma_dir, align 4, !dbg !10835
  %call148 = call i8* %99(%struct.device* %cond, i64 %106, i64 %conv147, i32 %110) #10, !dbg !10835
  br label %cond.end150, !dbg !10835

cond.false149:                                    ; preds = %if.end110
  br label %cond.end150, !dbg !10835

cond.end150:                                      ; preds = %cond.false149, %cond.end
  %cond151 = phi i8* [ %call148, %cond.end ], [ null, %cond.false149 ], !dbg !10835
  store i8* %cond151, i8** %mem_priv, align 8, !dbg !10836
  %111 = load i8*, i8** %mem_priv, align 8, !dbg !10837
  %call152 = call zeroext i1 @IS_ERR(i8* %111) #10, !dbg !10839
  br i1 %call152, label %if.then153, label %if.end165, !dbg !10840

if.then153:                                       ; preds = %cond.end150
  br label %do.body154, !dbg !10841

do.body154:                                       ; preds = %if.then153
  %112 = load i32, i32* @debug, align 4, !dbg !10843
  %cmp155 = icmp sge i32 %112, 1, !dbg !10843
  br i1 %cmp155, label %if.then157, label %if.end161, !dbg !10846

if.then157:                                       ; preds = %do.body154
  %113 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10843
  %name158 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %113, i32 0, i32 31, !dbg !10843
  %arraydecay159 = getelementptr inbounds [32 x i8], [32 x i8]* %name158, i64 0, i64 0, !dbg !10843
  %114 = load i32, i32* %plane, align 4, !dbg !10843
  %call160 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.76, i64 0, i64 0), i8* %arraydecay159, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.__prepare_userptr, i64 0, i64 0), i32 %114) #11, !dbg !10843
  br label %if.end161, !dbg !10843

if.end161:                                        ; preds = %if.then157, %do.body154
  br label %do.end162, !dbg !10846

do.end162:                                        ; preds = %if.end161
  %115 = load i8*, i8** %mem_priv, align 8, !dbg !10847
  %call163 = call i64 @PTR_ERR(i8* %115) #10, !dbg !10848
  %conv164 = trunc i64 %call163 to i32, !dbg !10848
  store i32 %conv164, i32* %ret, align 4, !dbg !10849
  br label %err, !dbg !10850

if.end165:                                        ; preds = %cond.end150
  %116 = load i8*, i8** %mem_priv, align 8, !dbg !10851
  %117 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10852
  %planes166 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %117, i32 0, i32 10, !dbg !10853
  %118 = load i32, i32* %plane, align 4, !dbg !10854
  %idxprom167 = zext i32 %118 to i64, !dbg !10852
  %arrayidx168 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes166, i64 0, i64 %idxprom167, !dbg !10852
  %mem_priv169 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx168, i32 0, i32 0, !dbg !10855
  store i8* %116, i8** %mem_priv169, align 8, !dbg !10856
  br label %for.inc, !dbg !10857

for.inc:                                          ; preds = %if.end165, %if.then45
  %119 = load i32, i32* %plane, align 4, !dbg !10858
  %inc = add i32 %119, 1, !dbg !10858
  store i32 %inc, i32* %plane, align 4, !dbg !10858
  br label %for.cond, !dbg !10859, !llvm.loop !10860

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %plane, align 4, !dbg !10862
  br label %for.cond170, !dbg !10864

for.cond170:                                      ; preds = %for.inc205, %for.end
  %120 = load i32, i32* %plane, align 4, !dbg !10865
  %121 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10867
  %num_planes171 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %121, i32 0, i32 4, !dbg !10868
  %122 = load i32, i32* %num_planes171, align 4, !dbg !10868
  %cmp172 = icmp ult i32 %120, %122, !dbg !10869
  br i1 %cmp172, label %for.body174, label %for.end207, !dbg !10870

for.body174:                                      ; preds = %for.cond170
  %123 = load i32, i32* %plane, align 4, !dbg !10871
  %idxprom175 = zext i32 %123 to i64, !dbg !10873
  %arrayidx176 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom175, !dbg !10873
  %bytesused177 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx176, i32 0, i32 3, !dbg !10874
  %124 = load i32, i32* %bytesused177, align 4, !dbg !10874
  %125 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10875
  %planes178 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %125, i32 0, i32 10, !dbg !10876
  %126 = load i32, i32* %plane, align 4, !dbg !10877
  %idxprom179 = zext i32 %126 to i64, !dbg !10875
  %arrayidx180 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes178, i64 0, i64 %idxprom179, !dbg !10875
  %bytesused181 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx180, i32 0, i32 3, !dbg !10878
  store i32 %124, i32* %bytesused181, align 4, !dbg !10879
  %127 = load i32, i32* %plane, align 4, !dbg !10880
  %idxprom182 = zext i32 %127 to i64, !dbg !10881
  %arrayidx183 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom182, !dbg !10881
  %length184 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx183, i32 0, i32 4, !dbg !10882
  %128 = load i32, i32* %length184, align 8, !dbg !10882
  %129 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10883
  %planes185 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %129, i32 0, i32 10, !dbg !10884
  %130 = load i32, i32* %plane, align 4, !dbg !10885
  %idxprom186 = zext i32 %130 to i64, !dbg !10883
  %arrayidx187 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes185, i64 0, i64 %idxprom186, !dbg !10883
  %length188 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx187, i32 0, i32 4, !dbg !10886
  store i32 %128, i32* %length188, align 8, !dbg !10887
  %131 = load i32, i32* %plane, align 4, !dbg !10888
  %idxprom189 = zext i32 %131 to i64, !dbg !10889
  %arrayidx190 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom189, !dbg !10889
  %m191 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx190, i32 0, i32 6, !dbg !10890
  %userptr192 = bitcast %union.anon.72* %m191 to i64*, !dbg !10891
  %132 = load i64, i64* %userptr192, align 16, !dbg !10891
  %133 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10892
  %planes193 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %133, i32 0, i32 10, !dbg !10893
  %134 = load i32, i32* %plane, align 4, !dbg !10894
  %idxprom194 = zext i32 %134 to i64, !dbg !10892
  %arrayidx195 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes193, i64 0, i64 %idxprom194, !dbg !10892
  %m196 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx195, i32 0, i32 6, !dbg !10895
  %userptr197 = bitcast %union.anon.72* %m196 to i64*, !dbg !10896
  store i64 %132, i64* %userptr197, align 8, !dbg !10897
  %135 = load i32, i32* %plane, align 4, !dbg !10898
  %idxprom198 = zext i32 %135 to i64, !dbg !10899
  %arrayidx199 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom198, !dbg !10899
  %data_offset200 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx199, i32 0, i32 7, !dbg !10900
  %136 = load i32, i32* %data_offset200, align 8, !dbg !10900
  %137 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10901
  %planes201 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %137, i32 0, i32 10, !dbg !10902
  %138 = load i32, i32* %plane, align 4, !dbg !10903
  %idxprom202 = zext i32 %138 to i64, !dbg !10901
  %arrayidx203 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes201, i64 0, i64 %idxprom202, !dbg !10901
  %data_offset204 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx203, i32 0, i32 7, !dbg !10904
  store i32 %136, i32* %data_offset204, align 8, !dbg !10905
  br label %for.inc205, !dbg !10906

for.inc205:                                       ; preds = %for.body174
  %139 = load i32, i32* %plane, align 4, !dbg !10907
  %inc206 = add i32 %139, 1, !dbg !10907
  store i32 %inc206, i32* %plane, align 4, !dbg !10907
  br label %for.cond170, !dbg !10908, !llvm.loop !10909

for.end207:                                       ; preds = %for.cond170
  %140 = load i8, i8* %reacquired, align 1, !dbg !10911
  %tobool208 = trunc i8 %140 to i1, !dbg !10911
  br i1 %tobool208, label %if.then209, label %if.end233, !dbg !10913

if.then209:                                       ; preds = %for.end207
  %141 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10914
  %vb2_queue210 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %141, i32 0, i32 0, !dbg !10914
  %142 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue210, align 8, !dbg !10914
  %ops211 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %142, i32 0, i32 7, !dbg !10914
  %143 = load %struct.vb2_ops*, %struct.vb2_ops** %ops211, align 8, !dbg !10914
  %buf_init = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %143, i32 0, i32 4, !dbg !10914
  %144 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_init, align 8, !dbg !10914
  %tobool212 = icmp ne i32 (%struct.vb2_buffer*)* %144, null, !dbg !10914
  br i1 %tobool212, label %cond.true213, label %cond.false218, !dbg !10914

cond.true213:                                     ; preds = %if.then209
  %145 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10914
  %vb2_queue214 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %145, i32 0, i32 0, !dbg !10914
  %146 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue214, align 8, !dbg !10914
  %ops215 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %146, i32 0, i32 7, !dbg !10914
  %147 = load %struct.vb2_ops*, %struct.vb2_ops** %ops215, align 8, !dbg !10914
  %buf_init216 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %147, i32 0, i32 4, !dbg !10914
  %148 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_init216, align 8, !dbg !10914
  %149 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10914
  %call217 = call i32 %148(%struct.vb2_buffer* %149) #10, !dbg !10914
  br label %cond.end219, !dbg !10914

cond.false218:                                    ; preds = %if.then209
  br label %cond.end219, !dbg !10914

cond.end219:                                      ; preds = %cond.false218, %cond.true213
  %cond220 = phi i32 [ %call217, %cond.true213 ], [ 0, %cond.false218 ], !dbg !10914
  store i32 %cond220, i32* %ret, align 4, !dbg !10916
  %150 = load i32, i32* %ret, align 4, !dbg !10917
  %tobool221 = icmp ne i32 %150, 0, !dbg !10917
  br i1 %tobool221, label %if.then222, label %if.end232, !dbg !10919

if.then222:                                       ; preds = %cond.end219
  br label %do.body223, !dbg !10920

do.body223:                                       ; preds = %if.then222
  %151 = load i32, i32* @debug, align 4, !dbg !10922
  %cmp224 = icmp sge i32 %151, 1, !dbg !10922
  br i1 %cmp224, label %if.then226, label %if.end230, !dbg !10925

if.then226:                                       ; preds = %do.body223
  %152 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10922
  %name227 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %152, i32 0, i32 31, !dbg !10922
  %arraydecay228 = getelementptr inbounds [32 x i8], [32 x i8]* %name227, i64 0, i64 0, !dbg !10922
  %call229 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.77, i64 0, i64 0), i8* %arraydecay228, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.__prepare_userptr, i64 0, i64 0)) #11, !dbg !10922
  br label %if.end230, !dbg !10922

if.end230:                                        ; preds = %if.then226, %do.body223
  br label %do.end231, !dbg !10925

do.end231:                                        ; preds = %if.end230
  br label %err, !dbg !10926

if.end232:                                        ; preds = %cond.end219
  br label %if.end233, !dbg !10927

if.end233:                                        ; preds = %if.end232, %for.end207
  %153 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10928
  %vb2_queue234 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %153, i32 0, i32 0, !dbg !10928
  %154 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue234, align 8, !dbg !10928
  %ops235 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %154, i32 0, i32 7, !dbg !10928
  %155 = load %struct.vb2_ops*, %struct.vb2_ops** %ops235, align 8, !dbg !10928
  %buf_prepare = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %155, i32 0, i32 5, !dbg !10928
  %156 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_prepare, align 8, !dbg !10928
  %tobool236 = icmp ne i32 (%struct.vb2_buffer*)* %156, null, !dbg !10928
  br i1 %tobool236, label %cond.true237, label %cond.false242, !dbg !10928

cond.true237:                                     ; preds = %if.end233
  %157 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10928
  %vb2_queue238 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %157, i32 0, i32 0, !dbg !10928
  %158 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue238, align 8, !dbg !10928
  %ops239 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %158, i32 0, i32 7, !dbg !10928
  %159 = load %struct.vb2_ops*, %struct.vb2_ops** %ops239, align 8, !dbg !10928
  %buf_prepare240 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %159, i32 0, i32 5, !dbg !10928
  %160 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_prepare240, align 8, !dbg !10928
  %161 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10928
  %call241 = call i32 %160(%struct.vb2_buffer* %161) #10, !dbg !10928
  br label %cond.end243, !dbg !10928

cond.false242:                                    ; preds = %if.end233
  br label %cond.end243, !dbg !10928

cond.end243:                                      ; preds = %cond.false242, %cond.true237
  %cond244 = phi i32 [ %call241, %cond.true237 ], [ 0, %cond.false242 ], !dbg !10928
  store i32 %cond244, i32* %ret, align 4, !dbg !10929
  %162 = load i32, i32* %ret, align 4, !dbg !10930
  %tobool245 = icmp ne i32 %162, 0, !dbg !10930
  br i1 %tobool245, label %if.then246, label %if.end267, !dbg !10932

if.then246:                                       ; preds = %cond.end243
  br label %do.body247, !dbg !10933

do.body247:                                       ; preds = %if.then246
  %163 = load i32, i32* @debug, align 4, !dbg !10935
  %cmp248 = icmp sge i32 %163, 1, !dbg !10935
  br i1 %cmp248, label %if.then250, label %if.end254, !dbg !10938

if.then250:                                       ; preds = %do.body247
  %164 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !10935
  %name251 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %164, i32 0, i32 31, !dbg !10935
  %arraydecay252 = getelementptr inbounds [32 x i8], [32 x i8]* %name251, i64 0, i64 0, !dbg !10935
  %call253 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.78, i64 0, i64 0), i8* %arraydecay252, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.__prepare_userptr, i64 0, i64 0)) #11, !dbg !10935
  br label %if.end254, !dbg !10935

if.end254:                                        ; preds = %if.then250, %do.body247
  br label %do.end255, !dbg !10938

do.end255:                                        ; preds = %if.end254
  br label %do.body256, !dbg !10939

do.body256:                                       ; preds = %do.end255
  %165 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10940
  %vb2_queue257 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %165, i32 0, i32 0, !dbg !10940
  %166 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue257, align 8, !dbg !10940
  %ops258 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %166, i32 0, i32 7, !dbg !10940
  %167 = load %struct.vb2_ops*, %struct.vb2_ops** %ops258, align 8, !dbg !10940
  %buf_cleanup259 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %167, i32 0, i32 7, !dbg !10940
  %168 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_cleanup259, align 8, !dbg !10940
  %tobool260 = icmp ne void (%struct.vb2_buffer*)* %168, null, !dbg !10940
  br i1 %tobool260, label %if.then261, label %if.end265, !dbg !10943

if.then261:                                       ; preds = %do.body256
  %169 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10940
  %vb2_queue262 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %169, i32 0, i32 0, !dbg !10940
  %170 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue262, align 8, !dbg !10940
  %ops263 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %170, i32 0, i32 7, !dbg !10940
  %171 = load %struct.vb2_ops*, %struct.vb2_ops** %ops263, align 8, !dbg !10940
  %buf_cleanup264 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %171, i32 0, i32 7, !dbg !10940
  %172 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_cleanup264, align 8, !dbg !10940
  %173 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10940
  call void %172(%struct.vb2_buffer* %173) #10, !dbg !10940
  br label %if.end265, !dbg !10940

if.end265:                                        ; preds = %if.then261, %do.body256
  br label %do.end266, !dbg !10943

do.end266:                                        ; preds = %if.end265
  br label %err, !dbg !10944

if.end267:                                        ; preds = %cond.end243
  store i32 0, i32* %retval, align 4, !dbg !10945
  br label %return, !dbg !10945

err:                                              ; preds = %do.end266, %do.end231, %do.end162, %do.end77
  call void @llvm.dbg.label(metadata !10946), !dbg !10947
  store i32 0, i32* %plane, align 4, !dbg !10948
  br label %for.cond268, !dbg !10950

for.cond268:                                      ; preds = %for.inc308, %err
  %174 = load i32, i32* %plane, align 4, !dbg !10951
  %175 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10953
  %num_planes269 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %175, i32 0, i32 4, !dbg !10954
  %176 = load i32, i32* %num_planes269, align 4, !dbg !10954
  %cmp270 = icmp ult i32 %174, %176, !dbg !10955
  br i1 %cmp270, label %for.body272, label %for.end310, !dbg !10956

for.body272:                                      ; preds = %for.cond268
  %177 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10957
  %planes273 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %177, i32 0, i32 10, !dbg !10960
  %178 = load i32, i32* %plane, align 4, !dbg !10961
  %idxprom274 = zext i32 %178 to i64, !dbg !10957
  %arrayidx275 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes273, i64 0, i64 %idxprom274, !dbg !10957
  %mem_priv276 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx275, i32 0, i32 0, !dbg !10962
  %179 = load i8*, i8** %mem_priv276, align 8, !dbg !10962
  %tobool277 = icmp ne i8* %179, null, !dbg !10957
  br i1 %tobool277, label %if.then278, label %if.end294, !dbg !10963

if.then278:                                       ; preds = %for.body272
  br label %do.body279, !dbg !10964

do.body279:                                       ; preds = %if.then278
  %180 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10965
  %vb2_queue280 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %180, i32 0, i32 0, !dbg !10965
  %181 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue280, align 8, !dbg !10965
  %mem_ops281 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %181, i32 0, i32 8, !dbg !10965
  %182 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops281, align 8, !dbg !10965
  %put_userptr282 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %182, i32 0, i32 4, !dbg !10965
  %183 = load void (i8*)*, void (i8*)** %put_userptr282, align 8, !dbg !10965
  %tobool283 = icmp ne void (i8*)* %183, null, !dbg !10965
  br i1 %tobool283, label %if.then284, label %if.end292, !dbg !10968

if.then284:                                       ; preds = %do.body279
  %184 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10965
  %vb2_queue285 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %184, i32 0, i32 0, !dbg !10965
  %185 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue285, align 8, !dbg !10965
  %mem_ops286 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %185, i32 0, i32 8, !dbg !10965
  %186 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops286, align 8, !dbg !10965
  %put_userptr287 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %186, i32 0, i32 4, !dbg !10965
  %187 = load void (i8*)*, void (i8*)** %put_userptr287, align 8, !dbg !10965
  %188 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10965
  %planes288 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %188, i32 0, i32 10, !dbg !10965
  %189 = load i32, i32* %plane, align 4, !dbg !10965
  %idxprom289 = zext i32 %189 to i64, !dbg !10965
  %arrayidx290 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes288, i64 0, i64 %idxprom289, !dbg !10965
  %mem_priv291 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx290, i32 0, i32 0, !dbg !10965
  %190 = load i8*, i8** %mem_priv291, align 8, !dbg !10965
  call void %187(i8* %190) #10, !dbg !10965
  br label %if.end292, !dbg !10965

if.end292:                                        ; preds = %if.then284, %do.body279
  br label %do.end293, !dbg !10968

do.end293:                                        ; preds = %if.end292
  br label %if.end294, !dbg !10968

if.end294:                                        ; preds = %do.end293, %for.body272
  %191 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10969
  %planes295 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %191, i32 0, i32 10, !dbg !10970
  %192 = load i32, i32* %plane, align 4, !dbg !10971
  %idxprom296 = zext i32 %192 to i64, !dbg !10969
  %arrayidx297 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes295, i64 0, i64 %idxprom296, !dbg !10969
  %mem_priv298 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx297, i32 0, i32 0, !dbg !10972
  store i8* null, i8** %mem_priv298, align 8, !dbg !10973
  %193 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10974
  %planes299 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %193, i32 0, i32 10, !dbg !10975
  %194 = load i32, i32* %plane, align 4, !dbg !10976
  %idxprom300 = zext i32 %194 to i64, !dbg !10974
  %arrayidx301 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes299, i64 0, i64 %idxprom300, !dbg !10974
  %m302 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx301, i32 0, i32 6, !dbg !10977
  %userptr303 = bitcast %union.anon.72* %m302 to i64*, !dbg !10978
  store i64 0, i64* %userptr303, align 8, !dbg !10979
  %195 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !10980
  %planes304 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %195, i32 0, i32 10, !dbg !10981
  %196 = load i32, i32* %plane, align 4, !dbg !10982
  %idxprom305 = zext i32 %196 to i64, !dbg !10980
  %arrayidx306 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes304, i64 0, i64 %idxprom305, !dbg !10980
  %length307 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx306, i32 0, i32 4, !dbg !10983
  store i32 0, i32* %length307, align 8, !dbg !10984
  br label %for.inc308, !dbg !10985

for.inc308:                                       ; preds = %if.end294
  %197 = load i32, i32* %plane, align 4, !dbg !10986
  %inc309 = add i32 %197, 1, !dbg !10986
  store i32 %inc309, i32* %plane, align 4, !dbg !10986
  br label %for.cond268, !dbg !10987, !llvm.loop !10988

for.end310:                                       ; preds = %for.cond268
  %198 = load i32, i32* %ret, align 4, !dbg !10990
  store i32 %198, i32* %retval, align 4, !dbg !10991
  br label %return, !dbg !10991

return:                                           ; preds = %for.end310, %if.end267, %if.then16
  %199 = load i32, i32* %retval, align 4, !dbg !10992
  ret i32 %199, !dbg !10992
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__prepare_dmabuf(%struct.vb2_buffer* %vb) #0 !dbg !10993 {
entry:
  %retval = alloca i32, align 4
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %planes = alloca [8 x %struct.vb2_plane], align 16
  %q = alloca %struct.vb2_queue*, align 8
  %mem_priv = alloca i8*, align 8
  %plane = alloca i32, align 4
  %ret = alloca i32, align 4
  %reacquired = alloca i8, align 1
  %ret3 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %dbuf = alloca %struct.dma_buf*, align 8
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !10994, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.declare(metadata [8 x %struct.vb2_plane]* %planes, metadata !10996, metadata !DIExpression()), !dbg !10997
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q, metadata !10998, metadata !DIExpression()), !dbg !10999
  %0 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11000
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %0, i32 0, i32 0, !dbg !11001
  %1 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !11001
  store %struct.vb2_queue* %1, %struct.vb2_queue** %q, align 8, !dbg !10999
  call void @llvm.dbg.declare(metadata i8** %mem_priv, metadata !11002, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !11004, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11006, metadata !DIExpression()), !dbg !11007
  store i32 0, i32* %ret, align 4, !dbg !11007
  call void @llvm.dbg.declare(metadata i8* %reacquired, metadata !11008, metadata !DIExpression()), !dbg !11009
  %2 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11010
  %planes1 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %2, i32 0, i32 10, !dbg !11011
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes1, i64 0, i64 0, !dbg !11010
  %mem_priv2 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 0, !dbg !11012
  %3 = load i8*, i8** %mem_priv2, align 8, !dbg !11012
  %cmp = icmp eq i8* %3, null, !dbg !11013
  %frombool = zext i1 %cmp to i8, !dbg !11009
  store i8 %frombool, i8* %reacquired, align 1, !dbg !11009
  %arraydecay = getelementptr inbounds [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 0, !dbg !11014
  %4 = bitcast %struct.vb2_plane* %arraydecay to i8*, !dbg !11014
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11015
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 4, !dbg !11016
  %6 = load i32, i32* %num_planes, align 4, !dbg !11016
  %conv = zext i32 %6 to i64, !dbg !11015
  %mul = mul i64 48, %conv, !dbg !11017
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 %mul, i1 false), !dbg !11014
  call void @llvm.dbg.declare(metadata i32* %ret3, metadata !11018, metadata !DIExpression()), !dbg !11020
  store i32 0, i32* %ret3, align 4, !dbg !11020
  %7 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11021
  %vb2_queue4 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %7, i32 0, i32 0, !dbg !11021
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue4, align 8, !dbg !11021
  %tobool = icmp ne %struct.vb2_queue* %8, null, !dbg !11021
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11021

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11021
  %vb2_queue5 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 0, !dbg !11021
  %10 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue5, align 8, !dbg !11021
  %buf_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %10, i32 0, i32 9, !dbg !11021
  %11 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops, align 8, !dbg !11021
  %tobool6 = icmp ne %struct.vb2_buf_ops* %11, null, !dbg !11021
  br i1 %tobool6, label %land.lhs.true7, label %if.end, !dbg !11021

land.lhs.true7:                                   ; preds = %land.lhs.true
  %12 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11021
  %vb2_queue8 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %12, i32 0, i32 0, !dbg !11021
  %13 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue8, align 8, !dbg !11021
  %buf_ops9 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %13, i32 0, i32 9, !dbg !11021
  %14 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops9, align 8, !dbg !11021
  %fill_vb2_buffer = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %14, i32 0, i32 3, !dbg !11021
  %15 = load i32 (%struct.vb2_buffer*, %struct.vb2_plane*)*, i32 (%struct.vb2_buffer*, %struct.vb2_plane*)** %fill_vb2_buffer, align 8, !dbg !11021
  %tobool10 = icmp ne i32 (%struct.vb2_buffer*, %struct.vb2_plane*)* %15, null, !dbg !11021
  br i1 %tobool10, label %if.then, label %if.end, !dbg !11020

if.then:                                          ; preds = %land.lhs.true7
  %16 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11021
  %vb2_queue11 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %16, i32 0, i32 0, !dbg !11021
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue11, align 8, !dbg !11021
  %buf_ops12 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %17, i32 0, i32 9, !dbg !11021
  %18 = load %struct.vb2_buf_ops*, %struct.vb2_buf_ops** %buf_ops12, align 8, !dbg !11021
  %fill_vb2_buffer13 = getelementptr inbounds %struct.vb2_buf_ops, %struct.vb2_buf_ops* %18, i32 0, i32 3, !dbg !11021
  %19 = load i32 (%struct.vb2_buffer*, %struct.vb2_plane*)*, i32 (%struct.vb2_buffer*, %struct.vb2_plane*)** %fill_vb2_buffer13, align 8, !dbg !11021
  %20 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11021
  %arraydecay14 = getelementptr inbounds [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 0, !dbg !11021
  %call = call i32 %19(%struct.vb2_buffer* %20, %struct.vb2_plane* %arraydecay14) #10, !dbg !11021
  store i32 %call, i32* %ret3, align 4, !dbg !11021
  br label %if.end, !dbg !11021

if.end:                                           ; preds = %if.then, %land.lhs.true7, %land.lhs.true, %entry
  %21 = load i32, i32* %ret3, align 4, !dbg !11020
  store i32 %21, i32* %tmp, align 4, !dbg !11021
  %22 = load i32, i32* %tmp, align 4, !dbg !11020
  store i32 %22, i32* %ret, align 4, !dbg !11023
  %23 = load i32, i32* %ret, align 4, !dbg !11024
  %tobool15 = icmp ne i32 %23, 0, !dbg !11024
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !11026

if.then16:                                        ; preds = %if.end
  %24 = load i32, i32* %ret, align 4, !dbg !11027
  store i32 %24, i32* %retval, align 4, !dbg !11028
  br label %return, !dbg !11028

if.end17:                                         ; preds = %if.end
  store i32 0, i32* %plane, align 4, !dbg !11029
  br label %for.cond, !dbg !11031

for.cond:                                         ; preds = %for.inc, %if.end17
  %25 = load i32, i32* %plane, align 4, !dbg !11032
  %26 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11034
  %num_planes18 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %26, i32 0, i32 4, !dbg !11035
  %27 = load i32, i32* %num_planes18, align 4, !dbg !11035
  %cmp19 = icmp ult i32 %25, %27, !dbg !11036
  br i1 %cmp19, label %for.body, label %for.end, !dbg !11037

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.dma_buf** %dbuf, metadata !11038, metadata !DIExpression()), !dbg !11040
  %28 = load i32, i32* %plane, align 4, !dbg !11041
  %idxprom = zext i32 %28 to i64, !dbg !11042
  %arrayidx21 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !11042
  %m = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx21, i32 0, i32 6, !dbg !11043
  %fd = bitcast %union.anon.72* %m to i32*, !dbg !11044
  %29 = load i32, i32* %fd, align 16, !dbg !11044
  %call22 = call %struct.dma_buf* @dma_buf_get(i32 %29) #10, !dbg !11045
  store %struct.dma_buf* %call22, %struct.dma_buf** %dbuf, align 8, !dbg !11040
  %30 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !11046
  %31 = bitcast %struct.dma_buf* %30 to i8*, !dbg !11046
  %call23 = call zeroext i1 @IS_ERR_OR_NULL(i8* %31) #10, !dbg !11048
  br i1 %call23, label %if.then24, label %if.end31, !dbg !11049

if.then24:                                        ; preds = %for.body
  br label %do.body, !dbg !11050

do.body:                                          ; preds = %if.then24
  %32 = load i32, i32* @debug, align 4, !dbg !11052
  %cmp25 = icmp sge i32 %32, 1, !dbg !11052
  br i1 %cmp25, label %if.then27, label %if.end30, !dbg !11055

if.then27:                                        ; preds = %do.body
  %33 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !11052
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %33, i32 0, i32 31, !dbg !11052
  %arraydecay28 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !11052
  %34 = load i32, i32* %plane, align 4, !dbg !11052
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.79, i64 0, i64 0), i8* %arraydecay28, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.__prepare_dmabuf, i64 0, i64 0), i32 %34) #11, !dbg !11052
  br label %if.end30, !dbg !11052

if.end30:                                         ; preds = %if.then27, %do.body
  br label %do.end, !dbg !11055

do.end:                                           ; preds = %if.end30
  store i32 -22, i32* %ret, align 4, !dbg !11056
  br label %err, !dbg !11057

if.end31:                                         ; preds = %for.body
  %35 = load i32, i32* %plane, align 4, !dbg !11058
  %idxprom32 = zext i32 %35 to i64, !dbg !11060
  %arrayidx33 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom32, !dbg !11060
  %length = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx33, i32 0, i32 4, !dbg !11061
  %36 = load i32, i32* %length, align 8, !dbg !11061
  %cmp34 = icmp eq i32 %36, 0, !dbg !11062
  br i1 %cmp34, label %if.then36, label %if.end41, !dbg !11063

if.then36:                                        ; preds = %if.end31
  %37 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !11064
  %size = getelementptr inbounds %struct.dma_buf, %struct.dma_buf* %37, i32 0, i32 0, !dbg !11065
  %38 = load i64, i64* %size, align 8, !dbg !11065
  %conv37 = trunc i64 %38 to i32, !dbg !11064
  %39 = load i32, i32* %plane, align 4, !dbg !11066
  %idxprom38 = zext i32 %39 to i64, !dbg !11067
  %arrayidx39 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom38, !dbg !11067
  %length40 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx39, i32 0, i32 4, !dbg !11068
  store i32 %conv37, i32* %length40, align 8, !dbg !11069
  br label %if.end41, !dbg !11067

if.end41:                                         ; preds = %if.then36, %if.end31
  %40 = load i32, i32* %plane, align 4, !dbg !11070
  %idxprom42 = zext i32 %40 to i64, !dbg !11072
  %arrayidx43 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom42, !dbg !11072
  %length44 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx43, i32 0, i32 4, !dbg !11073
  %41 = load i32, i32* %length44, align 8, !dbg !11073
  %42 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11074
  %planes45 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %42, i32 0, i32 10, !dbg !11075
  %43 = load i32, i32* %plane, align 4, !dbg !11076
  %idxprom46 = zext i32 %43 to i64, !dbg !11074
  %arrayidx47 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes45, i64 0, i64 %idxprom46, !dbg !11074
  %min_length = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx47, i32 0, i32 5, !dbg !11077
  %44 = load i32, i32* %min_length, align 4, !dbg !11077
  %cmp48 = icmp ult i32 %41, %44, !dbg !11078
  br i1 %cmp48, label %if.then50, label %if.end67, !dbg !11079

if.then50:                                        ; preds = %if.end41
  br label %do.body51, !dbg !11080

do.body51:                                        ; preds = %if.then50
  %45 = load i32, i32* @debug, align 4, !dbg !11082
  %cmp52 = icmp sge i32 %45, 1, !dbg !11082
  br i1 %cmp52, label %if.then54, label %if.end65, !dbg !11085

if.then54:                                        ; preds = %do.body51
  %46 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !11082
  %name55 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %46, i32 0, i32 31, !dbg !11082
  %arraydecay56 = getelementptr inbounds [32 x i8], [32 x i8]* %name55, i64 0, i64 0, !dbg !11082
  %47 = load i32, i32* %plane, align 4, !dbg !11082
  %idxprom57 = zext i32 %47 to i64, !dbg !11082
  %arrayidx58 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom57, !dbg !11082
  %length59 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx58, i32 0, i32 4, !dbg !11082
  %48 = load i32, i32* %length59, align 8, !dbg !11082
  %49 = load i32, i32* %plane, align 4, !dbg !11082
  %50 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11082
  %planes60 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %50, i32 0, i32 10, !dbg !11082
  %51 = load i32, i32* %plane, align 4, !dbg !11082
  %idxprom61 = zext i32 %51 to i64, !dbg !11082
  %arrayidx62 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes60, i64 0, i64 %idxprom61, !dbg !11082
  %min_length63 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx62, i32 0, i32 5, !dbg !11082
  %52 = load i32, i32* %min_length63, align 4, !dbg !11082
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.80, i64 0, i64 0), i8* %arraydecay56, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.__prepare_dmabuf, i64 0, i64 0), i32 %48, i32 %49, i32 %52) #11, !dbg !11082
  br label %if.end65, !dbg !11082

if.end65:                                         ; preds = %if.then54, %do.body51
  br label %do.end66, !dbg !11085

do.end66:                                         ; preds = %if.end65
  %53 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !11086
  call void @dma_buf_put(%struct.dma_buf* %53) #10, !dbg !11087
  store i32 -22, i32* %ret, align 4, !dbg !11088
  br label %err, !dbg !11089

if.end67:                                         ; preds = %if.end41
  %54 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !11090
  %55 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11092
  %planes68 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %55, i32 0, i32 10, !dbg !11093
  %56 = load i32, i32* %plane, align 4, !dbg !11094
  %idxprom69 = zext i32 %56 to i64, !dbg !11092
  %arrayidx70 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes68, i64 0, i64 %idxprom69, !dbg !11092
  %dbuf71 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx70, i32 0, i32 1, !dbg !11095
  %57 = load %struct.dma_buf*, %struct.dma_buf** %dbuf71, align 8, !dbg !11095
  %cmp72 = icmp eq %struct.dma_buf* %54, %57, !dbg !11096
  br i1 %cmp72, label %land.lhs.true74, label %if.end85, !dbg !11097

land.lhs.true74:                                  ; preds = %if.end67
  %58 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11098
  %planes75 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %58, i32 0, i32 10, !dbg !11099
  %59 = load i32, i32* %plane, align 4, !dbg !11100
  %idxprom76 = zext i32 %59 to i64, !dbg !11098
  %arrayidx77 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes75, i64 0, i64 %idxprom76, !dbg !11098
  %length78 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx77, i32 0, i32 4, !dbg !11101
  %60 = load i32, i32* %length78, align 8, !dbg !11101
  %61 = load i32, i32* %plane, align 4, !dbg !11102
  %idxprom79 = zext i32 %61 to i64, !dbg !11103
  %arrayidx80 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom79, !dbg !11103
  %length81 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx80, i32 0, i32 4, !dbg !11104
  %62 = load i32, i32* %length81, align 8, !dbg !11104
  %cmp82 = icmp eq i32 %60, %62, !dbg !11105
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !11106

if.then84:                                        ; preds = %land.lhs.true74
  %63 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !11107
  call void @dma_buf_put(%struct.dma_buf* %63) #10, !dbg !11109
  br label %for.inc, !dbg !11110

if.end85:                                         ; preds = %land.lhs.true74, %if.end67
  br label %do.body86, !dbg !11111

do.body86:                                        ; preds = %if.end85
  %64 = load i32, i32* @debug, align 4, !dbg !11112
  %cmp87 = icmp sge i32 %64, 3, !dbg !11112
  br i1 %cmp87, label %if.then89, label %if.end93, !dbg !11115

if.then89:                                        ; preds = %do.body86
  %65 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !11112
  %name90 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %65, i32 0, i32 31, !dbg !11112
  %arraydecay91 = getelementptr inbounds [32 x i8], [32 x i8]* %name90, i64 0, i64 0, !dbg !11112
  %66 = load i32, i32* %plane, align 4, !dbg !11112
  %call92 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.81, i64 0, i64 0), i8* %arraydecay91, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.__prepare_dmabuf, i64 0, i64 0), i32 %66) #11, !dbg !11112
  br label %if.end93, !dbg !11112

if.end93:                                         ; preds = %if.then89, %do.body86
  br label %do.end94, !dbg !11115

do.end94:                                         ; preds = %if.end93
  %67 = load i8, i8* %reacquired, align 1, !dbg !11116
  %tobool95 = trunc i8 %67 to i1, !dbg !11116
  br i1 %tobool95, label %if.end106, label %if.then96, !dbg !11118

if.then96:                                        ; preds = %do.end94
  store i8 1, i8* %reacquired, align 1, !dbg !11119
  %68 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11121
  %copied_timestamp = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %68, i32 0, i32 9, !dbg !11122
  %bf.load = load i8, i8* %copied_timestamp, align 4, !dbg !11123
  %bf.clear = and i8 %bf.load, -5, !dbg !11123
  store i8 %bf.clear, i8* %copied_timestamp, align 4, !dbg !11123
  br label %do.body97, !dbg !11124

do.body97:                                        ; preds = %if.then96
  %69 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11125
  %vb2_queue98 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %69, i32 0, i32 0, !dbg !11125
  %70 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue98, align 8, !dbg !11125
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %70, i32 0, i32 7, !dbg !11125
  %71 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !11125
  %buf_cleanup = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %71, i32 0, i32 7, !dbg !11125
  %72 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_cleanup, align 8, !dbg !11125
  %tobool99 = icmp ne void (%struct.vb2_buffer*)* %72, null, !dbg !11125
  br i1 %tobool99, label %if.then100, label %if.end104, !dbg !11128

if.then100:                                       ; preds = %do.body97
  %73 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11125
  %vb2_queue101 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %73, i32 0, i32 0, !dbg !11125
  %74 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue101, align 8, !dbg !11125
  %ops102 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %74, i32 0, i32 7, !dbg !11125
  %75 = load %struct.vb2_ops*, %struct.vb2_ops** %ops102, align 8, !dbg !11125
  %buf_cleanup103 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %75, i32 0, i32 7, !dbg !11125
  %76 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_cleanup103, align 8, !dbg !11125
  %77 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11125
  call void %76(%struct.vb2_buffer* %77) #10, !dbg !11125
  br label %if.end104, !dbg !11125

if.end104:                                        ; preds = %if.then100, %do.body97
  br label %do.end105, !dbg !11128

do.end105:                                        ; preds = %if.end104
  br label %if.end106, !dbg !11129

if.end106:                                        ; preds = %do.end105, %do.end94
  %78 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11130
  %79 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11131
  %planes107 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %79, i32 0, i32 10, !dbg !11132
  %80 = load i32, i32* %plane, align 4, !dbg !11133
  %idxprom108 = zext i32 %80 to i64, !dbg !11131
  %arrayidx109 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes107, i64 0, i64 %idxprom108, !dbg !11131
  call void @__vb2_plane_dmabuf_put(%struct.vb2_buffer* %78, %struct.vb2_plane* %arrayidx109) #10, !dbg !11134
  %81 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11135
  %planes110 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %81, i32 0, i32 10, !dbg !11136
  %82 = load i32, i32* %plane, align 4, !dbg !11137
  %idxprom111 = zext i32 %82 to i64, !dbg !11135
  %arrayidx112 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes110, i64 0, i64 %idxprom111, !dbg !11135
  %bytesused = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx112, i32 0, i32 3, !dbg !11138
  store i32 0, i32* %bytesused, align 4, !dbg !11139
  %83 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11140
  %planes113 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %83, i32 0, i32 10, !dbg !11141
  %84 = load i32, i32* %plane, align 4, !dbg !11142
  %idxprom114 = zext i32 %84 to i64, !dbg !11140
  %arrayidx115 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes113, i64 0, i64 %idxprom114, !dbg !11140
  %length116 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx115, i32 0, i32 4, !dbg !11143
  store i32 0, i32* %length116, align 8, !dbg !11144
  %85 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11145
  %planes117 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %85, i32 0, i32 10, !dbg !11146
  %86 = load i32, i32* %plane, align 4, !dbg !11147
  %idxprom118 = zext i32 %86 to i64, !dbg !11145
  %arrayidx119 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes117, i64 0, i64 %idxprom118, !dbg !11145
  %m120 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx119, i32 0, i32 6, !dbg !11148
  %fd121 = bitcast %union.anon.72* %m120 to i32*, !dbg !11149
  store i32 0, i32* %fd121, align 8, !dbg !11150
  %87 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11151
  %planes122 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %87, i32 0, i32 10, !dbg !11152
  %88 = load i32, i32* %plane, align 4, !dbg !11153
  %idxprom123 = zext i32 %88 to i64, !dbg !11151
  %arrayidx124 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes122, i64 0, i64 %idxprom123, !dbg !11151
  %data_offset = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx124, i32 0, i32 7, !dbg !11154
  store i32 0, i32* %data_offset, align 8, !dbg !11155
  %89 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11156
  %vb2_queue125 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %89, i32 0, i32 0, !dbg !11156
  %90 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue125, align 8, !dbg !11156
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %90, i32 0, i32 8, !dbg !11156
  %91 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !11156
  %attach_dmabuf = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %91, i32 0, i32 7, !dbg !11156
  %92 = load i8* (%struct.device*, %struct.dma_buf*, i64, i32)*, i8* (%struct.device*, %struct.dma_buf*, i64, i32)** %attach_dmabuf, align 8, !dbg !11156
  %tobool126 = icmp ne i8* (%struct.device*, %struct.dma_buf*, i64, i32)* %92, null, !dbg !11156
  br i1 %tobool126, label %cond.true, label %cond.false139, !dbg !11156

cond.true:                                        ; preds = %if.end106
  %93 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11156
  %vb2_queue127 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %93, i32 0, i32 0, !dbg !11156
  %94 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue127, align 8, !dbg !11156
  %mem_ops128 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %94, i32 0, i32 8, !dbg !11156
  %95 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops128, align 8, !dbg !11156
  %attach_dmabuf129 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %95, i32 0, i32 7, !dbg !11156
  %96 = load i8* (%struct.device*, %struct.dma_buf*, i64, i32)*, i8* (%struct.device*, %struct.dma_buf*, i64, i32)** %attach_dmabuf129, align 8, !dbg !11156
  %97 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !11156
  %alloc_devs = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %97, i32 0, i32 16, !dbg !11156
  %98 = load i32, i32* %plane, align 4, !dbg !11156
  %idxprom130 = zext i32 %98 to i64, !dbg !11156
  %arrayidx131 = getelementptr [8 x %struct.device*], [8 x %struct.device*]* %alloc_devs, i64 0, i64 %idxprom130, !dbg !11156
  %99 = load %struct.device*, %struct.device** %arrayidx131, align 8, !dbg !11156
  %tobool132 = icmp ne %struct.device* %99, null, !dbg !11156
  br i1 %tobool132, label %cond.true133, label %cond.false, !dbg !11156

cond.true133:                                     ; preds = %cond.true
  br label %cond.end, !dbg !11156

cond.false:                                       ; preds = %cond.true
  %100 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !11156
  %dev = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %100, i32 0, i32 2, !dbg !11156
  %101 = load %struct.device*, %struct.device** %dev, align 8, !dbg !11156
  br label %cond.end, !dbg !11156

cond.end:                                         ; preds = %cond.false, %cond.true133
  %cond = phi %struct.device* [ %99, %cond.true133 ], [ %101, %cond.false ], !dbg !11156
  %102 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !11156
  %103 = load i32, i32* %plane, align 4, !dbg !11156
  %idxprom134 = zext i32 %103 to i64, !dbg !11156
  %arrayidx135 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom134, !dbg !11156
  %length136 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx135, i32 0, i32 4, !dbg !11156
  %104 = load i32, i32* %length136, align 8, !dbg !11156
  %conv137 = zext i32 %104 to i64, !dbg !11156
  %105 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !11156
  %dma_dir = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %105, i32 0, i32 19, !dbg !11156
  %106 = load i32, i32* %dma_dir, align 4, !dbg !11156
  %call138 = call i8* %96(%struct.device* %cond, %struct.dma_buf* %102, i64 %conv137, i32 %106) #10, !dbg !11156
  br label %cond.end140, !dbg !11156

cond.false139:                                    ; preds = %if.end106
  br label %cond.end140, !dbg !11156

cond.end140:                                      ; preds = %cond.false139, %cond.end
  %cond141 = phi i8* [ %call138, %cond.end ], [ null, %cond.false139 ], !dbg !11156
  store i8* %cond141, i8** %mem_priv, align 8, !dbg !11157
  %107 = load i8*, i8** %mem_priv, align 8, !dbg !11158
  %call142 = call zeroext i1 @IS_ERR(i8* %107) #10, !dbg !11160
  br i1 %call142, label %if.then143, label %if.end155, !dbg !11161

if.then143:                                       ; preds = %cond.end140
  br label %do.body144, !dbg !11162

do.body144:                                       ; preds = %if.then143
  %108 = load i32, i32* @debug, align 4, !dbg !11164
  %cmp145 = icmp sge i32 %108, 1, !dbg !11164
  br i1 %cmp145, label %if.then147, label %if.end151, !dbg !11167

if.then147:                                       ; preds = %do.body144
  %109 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !11164
  %name148 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %109, i32 0, i32 31, !dbg !11164
  %arraydecay149 = getelementptr inbounds [32 x i8], [32 x i8]* %name148, i64 0, i64 0, !dbg !11164
  %call150 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.82, i64 0, i64 0), i8* %arraydecay149, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.__prepare_dmabuf, i64 0, i64 0)) #11, !dbg !11164
  br label %if.end151, !dbg !11164

if.end151:                                        ; preds = %if.then147, %do.body144
  br label %do.end152, !dbg !11167

do.end152:                                        ; preds = %if.end151
  %110 = load i8*, i8** %mem_priv, align 8, !dbg !11168
  %call153 = call i64 @PTR_ERR(i8* %110) #10, !dbg !11169
  %conv154 = trunc i64 %call153 to i32, !dbg !11169
  store i32 %conv154, i32* %ret, align 4, !dbg !11170
  %111 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !11171
  call void @dma_buf_put(%struct.dma_buf* %111) #10, !dbg !11172
  br label %err, !dbg !11173

if.end155:                                        ; preds = %cond.end140
  %112 = load %struct.dma_buf*, %struct.dma_buf** %dbuf, align 8, !dbg !11174
  %113 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11175
  %planes156 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %113, i32 0, i32 10, !dbg !11176
  %114 = load i32, i32* %plane, align 4, !dbg !11177
  %idxprom157 = zext i32 %114 to i64, !dbg !11175
  %arrayidx158 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes156, i64 0, i64 %idxprom157, !dbg !11175
  %dbuf159 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx158, i32 0, i32 1, !dbg !11178
  store %struct.dma_buf* %112, %struct.dma_buf** %dbuf159, align 8, !dbg !11179
  %115 = load i8*, i8** %mem_priv, align 8, !dbg !11180
  %116 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11181
  %planes160 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %116, i32 0, i32 10, !dbg !11182
  %117 = load i32, i32* %plane, align 4, !dbg !11183
  %idxprom161 = zext i32 %117 to i64, !dbg !11181
  %arrayidx162 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes160, i64 0, i64 %idxprom161, !dbg !11181
  %mem_priv163 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx162, i32 0, i32 0, !dbg !11184
  store i8* %115, i8** %mem_priv163, align 8, !dbg !11185
  br label %for.inc, !dbg !11186

for.inc:                                          ; preds = %if.end155, %if.then84
  %118 = load i32, i32* %plane, align 4, !dbg !11187
  %inc = add i32 %118, 1, !dbg !11187
  store i32 %inc, i32* %plane, align 4, !dbg !11187
  br label %for.cond, !dbg !11188, !llvm.loop !11189

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %plane, align 4, !dbg !11191
  br label %for.cond164, !dbg !11193

for.cond164:                                      ; preds = %for.inc206, %for.end
  %119 = load i32, i32* %plane, align 4, !dbg !11194
  %120 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11196
  %num_planes165 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %120, i32 0, i32 4, !dbg !11197
  %121 = load i32, i32* %num_planes165, align 4, !dbg !11197
  %cmp166 = icmp ult i32 %119, %121, !dbg !11198
  br i1 %cmp166, label %for.body168, label %for.end208, !dbg !11199

for.body168:                                      ; preds = %for.cond164
  %122 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11200
  %planes169 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %122, i32 0, i32 10, !dbg !11203
  %123 = load i32, i32* %plane, align 4, !dbg !11204
  %idxprom170 = zext i32 %123 to i64, !dbg !11200
  %arrayidx171 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes169, i64 0, i64 %idxprom170, !dbg !11200
  %dbuf_mapped = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx171, i32 0, i32 2, !dbg !11205
  %124 = load i32, i32* %dbuf_mapped, align 8, !dbg !11205
  %tobool172 = icmp ne i32 %124, 0, !dbg !11200
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !11206

if.then173:                                       ; preds = %for.body168
  br label %for.inc206, !dbg !11207

if.end174:                                        ; preds = %for.body168
  %125 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11208
  %vb2_queue175 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %125, i32 0, i32 0, !dbg !11208
  %126 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue175, align 8, !dbg !11208
  %mem_ops176 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %126, i32 0, i32 8, !dbg !11208
  %127 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops176, align 8, !dbg !11208
  %map_dmabuf = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %127, i32 0, i32 9, !dbg !11208
  %128 = load i32 (i8*)*, i32 (i8*)** %map_dmabuf, align 8, !dbg !11208
  %tobool177 = icmp ne i32 (i8*)* %128, null, !dbg !11208
  br i1 %tobool177, label %cond.true178, label %cond.false187, !dbg !11208

cond.true178:                                     ; preds = %if.end174
  %129 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11208
  %vb2_queue179 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %129, i32 0, i32 0, !dbg !11208
  %130 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue179, align 8, !dbg !11208
  %mem_ops180 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %130, i32 0, i32 8, !dbg !11208
  %131 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops180, align 8, !dbg !11208
  %map_dmabuf181 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %131, i32 0, i32 9, !dbg !11208
  %132 = load i32 (i8*)*, i32 (i8*)** %map_dmabuf181, align 8, !dbg !11208
  %133 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11208
  %planes182 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %133, i32 0, i32 10, !dbg !11208
  %134 = load i32, i32* %plane, align 4, !dbg !11208
  %idxprom183 = zext i32 %134 to i64, !dbg !11208
  %arrayidx184 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes182, i64 0, i64 %idxprom183, !dbg !11208
  %mem_priv185 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx184, i32 0, i32 0, !dbg !11208
  %135 = load i8*, i8** %mem_priv185, align 8, !dbg !11208
  %call186 = call i32 %132(i8* %135) #10, !dbg !11208
  br label %cond.end188, !dbg !11208

cond.false187:                                    ; preds = %if.end174
  br label %cond.end188, !dbg !11208

cond.end188:                                      ; preds = %cond.false187, %cond.true178
  %cond189 = phi i32 [ %call186, %cond.true178 ], [ 0, %cond.false187 ], !dbg !11208
  store i32 %cond189, i32* %ret, align 4, !dbg !11209
  %136 = load i32, i32* %ret, align 4, !dbg !11210
  %tobool190 = icmp ne i32 %136, 0, !dbg !11210
  br i1 %tobool190, label %if.then191, label %if.end201, !dbg !11212

if.then191:                                       ; preds = %cond.end188
  br label %do.body192, !dbg !11213

do.body192:                                       ; preds = %if.then191
  %137 = load i32, i32* @debug, align 4, !dbg !11215
  %cmp193 = icmp sge i32 %137, 1, !dbg !11215
  br i1 %cmp193, label %if.then195, label %if.end199, !dbg !11218

if.then195:                                       ; preds = %do.body192
  %138 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !11215
  %name196 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %138, i32 0, i32 31, !dbg !11215
  %arraydecay197 = getelementptr inbounds [32 x i8], [32 x i8]* %name196, i64 0, i64 0, !dbg !11215
  %139 = load i32, i32* %plane, align 4, !dbg !11215
  %call198 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.83, i64 0, i64 0), i8* %arraydecay197, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.__prepare_dmabuf, i64 0, i64 0), i32 %139) #11, !dbg !11215
  br label %if.end199, !dbg !11215

if.end199:                                        ; preds = %if.then195, %do.body192
  br label %do.end200, !dbg !11218

do.end200:                                        ; preds = %if.end199
  br label %err, !dbg !11219

if.end201:                                        ; preds = %cond.end188
  %140 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11220
  %planes202 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %140, i32 0, i32 10, !dbg !11221
  %141 = load i32, i32* %plane, align 4, !dbg !11222
  %idxprom203 = zext i32 %141 to i64, !dbg !11220
  %arrayidx204 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes202, i64 0, i64 %idxprom203, !dbg !11220
  %dbuf_mapped205 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx204, i32 0, i32 2, !dbg !11223
  store i32 1, i32* %dbuf_mapped205, align 8, !dbg !11224
  br label %for.inc206, !dbg !11225

for.inc206:                                       ; preds = %if.end201, %if.then173
  %142 = load i32, i32* %plane, align 4, !dbg !11226
  %inc207 = add i32 %142, 1, !dbg !11226
  store i32 %inc207, i32* %plane, align 4, !dbg !11226
  br label %for.cond164, !dbg !11227, !llvm.loop !11228

for.end208:                                       ; preds = %for.cond164
  store i32 0, i32* %plane, align 4, !dbg !11230
  br label %for.cond209, !dbg !11232

for.cond209:                                      ; preds = %for.inc244, %for.end208
  %143 = load i32, i32* %plane, align 4, !dbg !11233
  %144 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11235
  %num_planes210 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %144, i32 0, i32 4, !dbg !11236
  %145 = load i32, i32* %num_planes210, align 4, !dbg !11236
  %cmp211 = icmp ult i32 %143, %145, !dbg !11237
  br i1 %cmp211, label %for.body213, label %for.end246, !dbg !11238

for.body213:                                      ; preds = %for.cond209
  %146 = load i32, i32* %plane, align 4, !dbg !11239
  %idxprom214 = zext i32 %146 to i64, !dbg !11241
  %arrayidx215 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom214, !dbg !11241
  %bytesused216 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx215, i32 0, i32 3, !dbg !11242
  %147 = load i32, i32* %bytesused216, align 4, !dbg !11242
  %148 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11243
  %planes217 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %148, i32 0, i32 10, !dbg !11244
  %149 = load i32, i32* %plane, align 4, !dbg !11245
  %idxprom218 = zext i32 %149 to i64, !dbg !11243
  %arrayidx219 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes217, i64 0, i64 %idxprom218, !dbg !11243
  %bytesused220 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx219, i32 0, i32 3, !dbg !11246
  store i32 %147, i32* %bytesused220, align 4, !dbg !11247
  %150 = load i32, i32* %plane, align 4, !dbg !11248
  %idxprom221 = zext i32 %150 to i64, !dbg !11249
  %arrayidx222 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom221, !dbg !11249
  %length223 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx222, i32 0, i32 4, !dbg !11250
  %151 = load i32, i32* %length223, align 8, !dbg !11250
  %152 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11251
  %planes224 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %152, i32 0, i32 10, !dbg !11252
  %153 = load i32, i32* %plane, align 4, !dbg !11253
  %idxprom225 = zext i32 %153 to i64, !dbg !11251
  %arrayidx226 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes224, i64 0, i64 %idxprom225, !dbg !11251
  %length227 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx226, i32 0, i32 4, !dbg !11254
  store i32 %151, i32* %length227, align 8, !dbg !11255
  %154 = load i32, i32* %plane, align 4, !dbg !11256
  %idxprom228 = zext i32 %154 to i64, !dbg !11257
  %arrayidx229 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom228, !dbg !11257
  %m230 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx229, i32 0, i32 6, !dbg !11258
  %fd231 = bitcast %union.anon.72* %m230 to i32*, !dbg !11259
  %155 = load i32, i32* %fd231, align 16, !dbg !11259
  %156 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11260
  %planes232 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %156, i32 0, i32 10, !dbg !11261
  %157 = load i32, i32* %plane, align 4, !dbg !11262
  %idxprom233 = zext i32 %157 to i64, !dbg !11260
  %arrayidx234 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes232, i64 0, i64 %idxprom233, !dbg !11260
  %m235 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx234, i32 0, i32 6, !dbg !11263
  %fd236 = bitcast %union.anon.72* %m235 to i32*, !dbg !11264
  store i32 %155, i32* %fd236, align 8, !dbg !11265
  %158 = load i32, i32* %plane, align 4, !dbg !11266
  %idxprom237 = zext i32 %158 to i64, !dbg !11267
  %arrayidx238 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom237, !dbg !11267
  %data_offset239 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx238, i32 0, i32 7, !dbg !11268
  %159 = load i32, i32* %data_offset239, align 8, !dbg !11268
  %160 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11269
  %planes240 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %160, i32 0, i32 10, !dbg !11270
  %161 = load i32, i32* %plane, align 4, !dbg !11271
  %idxprom241 = zext i32 %161 to i64, !dbg !11269
  %arrayidx242 = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes240, i64 0, i64 %idxprom241, !dbg !11269
  %data_offset243 = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx242, i32 0, i32 7, !dbg !11272
  store i32 %159, i32* %data_offset243, align 8, !dbg !11273
  br label %for.inc244, !dbg !11274

for.inc244:                                       ; preds = %for.body213
  %162 = load i32, i32* %plane, align 4, !dbg !11275
  %inc245 = add i32 %162, 1, !dbg !11275
  store i32 %inc245, i32* %plane, align 4, !dbg !11275
  br label %for.cond209, !dbg !11276, !llvm.loop !11277

for.end246:                                       ; preds = %for.cond209
  %163 = load i8, i8* %reacquired, align 1, !dbg !11279
  %tobool247 = trunc i8 %163 to i1, !dbg !11279
  br i1 %tobool247, label %if.then248, label %if.end272, !dbg !11281

if.then248:                                       ; preds = %for.end246
  %164 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11282
  %vb2_queue249 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %164, i32 0, i32 0, !dbg !11282
  %165 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue249, align 8, !dbg !11282
  %ops250 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %165, i32 0, i32 7, !dbg !11282
  %166 = load %struct.vb2_ops*, %struct.vb2_ops** %ops250, align 8, !dbg !11282
  %buf_init = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %166, i32 0, i32 4, !dbg !11282
  %167 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_init, align 8, !dbg !11282
  %tobool251 = icmp ne i32 (%struct.vb2_buffer*)* %167, null, !dbg !11282
  br i1 %tobool251, label %cond.true252, label %cond.false257, !dbg !11282

cond.true252:                                     ; preds = %if.then248
  %168 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11282
  %vb2_queue253 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %168, i32 0, i32 0, !dbg !11282
  %169 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue253, align 8, !dbg !11282
  %ops254 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %169, i32 0, i32 7, !dbg !11282
  %170 = load %struct.vb2_ops*, %struct.vb2_ops** %ops254, align 8, !dbg !11282
  %buf_init255 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %170, i32 0, i32 4, !dbg !11282
  %171 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_init255, align 8, !dbg !11282
  %172 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11282
  %call256 = call i32 %171(%struct.vb2_buffer* %172) #10, !dbg !11282
  br label %cond.end258, !dbg !11282

cond.false257:                                    ; preds = %if.then248
  br label %cond.end258, !dbg !11282

cond.end258:                                      ; preds = %cond.false257, %cond.true252
  %cond259 = phi i32 [ %call256, %cond.true252 ], [ 0, %cond.false257 ], !dbg !11282
  store i32 %cond259, i32* %ret, align 4, !dbg !11284
  %173 = load i32, i32* %ret, align 4, !dbg !11285
  %tobool260 = icmp ne i32 %173, 0, !dbg !11285
  br i1 %tobool260, label %if.then261, label %if.end271, !dbg !11287

if.then261:                                       ; preds = %cond.end258
  br label %do.body262, !dbg !11288

do.body262:                                       ; preds = %if.then261
  %174 = load i32, i32* @debug, align 4, !dbg !11290
  %cmp263 = icmp sge i32 %174, 1, !dbg !11290
  br i1 %cmp263, label %if.then265, label %if.end269, !dbg !11293

if.then265:                                       ; preds = %do.body262
  %175 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !11290
  %name266 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %175, i32 0, i32 31, !dbg !11290
  %arraydecay267 = getelementptr inbounds [32 x i8], [32 x i8]* %name266, i64 0, i64 0, !dbg !11290
  %call268 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.77, i64 0, i64 0), i8* %arraydecay267, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.__prepare_dmabuf, i64 0, i64 0)) #11, !dbg !11290
  br label %if.end269, !dbg !11290

if.end269:                                        ; preds = %if.then265, %do.body262
  br label %do.end270, !dbg !11293

do.end270:                                        ; preds = %if.end269
  br label %err, !dbg !11294

if.end271:                                        ; preds = %cond.end258
  br label %if.end272, !dbg !11295

if.end272:                                        ; preds = %if.end271, %for.end246
  %176 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11296
  %vb2_queue273 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %176, i32 0, i32 0, !dbg !11296
  %177 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue273, align 8, !dbg !11296
  %ops274 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %177, i32 0, i32 7, !dbg !11296
  %178 = load %struct.vb2_ops*, %struct.vb2_ops** %ops274, align 8, !dbg !11296
  %buf_prepare = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %178, i32 0, i32 5, !dbg !11296
  %179 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_prepare, align 8, !dbg !11296
  %tobool275 = icmp ne i32 (%struct.vb2_buffer*)* %179, null, !dbg !11296
  br i1 %tobool275, label %cond.true276, label %cond.false281, !dbg !11296

cond.true276:                                     ; preds = %if.end272
  %180 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11296
  %vb2_queue277 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %180, i32 0, i32 0, !dbg !11296
  %181 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue277, align 8, !dbg !11296
  %ops278 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %181, i32 0, i32 7, !dbg !11296
  %182 = load %struct.vb2_ops*, %struct.vb2_ops** %ops278, align 8, !dbg !11296
  %buf_prepare279 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %182, i32 0, i32 5, !dbg !11296
  %183 = load i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)** %buf_prepare279, align 8, !dbg !11296
  %184 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11296
  %call280 = call i32 %183(%struct.vb2_buffer* %184) #10, !dbg !11296
  br label %cond.end282, !dbg !11296

cond.false281:                                    ; preds = %if.end272
  br label %cond.end282, !dbg !11296

cond.end282:                                      ; preds = %cond.false281, %cond.true276
  %cond283 = phi i32 [ %call280, %cond.true276 ], [ 0, %cond.false281 ], !dbg !11296
  store i32 %cond283, i32* %ret, align 4, !dbg !11297
  %185 = load i32, i32* %ret, align 4, !dbg !11298
  %tobool284 = icmp ne i32 %185, 0, !dbg !11298
  br i1 %tobool284, label %if.then285, label %if.end306, !dbg !11300

if.then285:                                       ; preds = %cond.end282
  br label %do.body286, !dbg !11301

do.body286:                                       ; preds = %if.then285
  %186 = load i32, i32* @debug, align 4, !dbg !11303
  %cmp287 = icmp sge i32 %186, 1, !dbg !11303
  br i1 %cmp287, label %if.then289, label %if.end293, !dbg !11306

if.then289:                                       ; preds = %do.body286
  %187 = load %struct.vb2_queue*, %struct.vb2_queue** %q, align 8, !dbg !11303
  %name290 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %187, i32 0, i32 31, !dbg !11303
  %arraydecay291 = getelementptr inbounds [32 x i8], [32 x i8]* %name290, i64 0, i64 0, !dbg !11303
  %call292 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.78, i64 0, i64 0), i8* %arraydecay291, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.__prepare_dmabuf, i64 0, i64 0)) #11, !dbg !11303
  br label %if.end293, !dbg !11303

if.end293:                                        ; preds = %if.then289, %do.body286
  br label %do.end294, !dbg !11306

do.end294:                                        ; preds = %if.end293
  br label %do.body295, !dbg !11307

do.body295:                                       ; preds = %do.end294
  %188 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11308
  %vb2_queue296 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %188, i32 0, i32 0, !dbg !11308
  %189 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue296, align 8, !dbg !11308
  %ops297 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %189, i32 0, i32 7, !dbg !11308
  %190 = load %struct.vb2_ops*, %struct.vb2_ops** %ops297, align 8, !dbg !11308
  %buf_cleanup298 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %190, i32 0, i32 7, !dbg !11308
  %191 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_cleanup298, align 8, !dbg !11308
  %tobool299 = icmp ne void (%struct.vb2_buffer*)* %191, null, !dbg !11308
  br i1 %tobool299, label %if.then300, label %if.end304, !dbg !11311

if.then300:                                       ; preds = %do.body295
  %192 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11308
  %vb2_queue301 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %192, i32 0, i32 0, !dbg !11308
  %193 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue301, align 8, !dbg !11308
  %ops302 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %193, i32 0, i32 7, !dbg !11308
  %194 = load %struct.vb2_ops*, %struct.vb2_ops** %ops302, align 8, !dbg !11308
  %buf_cleanup303 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %194, i32 0, i32 7, !dbg !11308
  %195 = load void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)** %buf_cleanup303, align 8, !dbg !11308
  %196 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11308
  call void %195(%struct.vb2_buffer* %196) #10, !dbg !11308
  br label %if.end304, !dbg !11308

if.end304:                                        ; preds = %if.then300, %do.body295
  br label %do.end305, !dbg !11311

do.end305:                                        ; preds = %if.end304
  br label %err, !dbg !11312

if.end306:                                        ; preds = %cond.end282
  store i32 0, i32* %retval, align 4, !dbg !11313
  br label %return, !dbg !11313

err:                                              ; preds = %do.end305, %do.end270, %do.end200, %do.end152, %do.end66, %do.end
  call void @llvm.dbg.label(metadata !11314), !dbg !11315
  %197 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11316
  call void @__vb2_buf_dmabuf_put(%struct.vb2_buffer* %197) #10, !dbg !11317
  %198 = load i32, i32* %ret, align 4, !dbg !11318
  store i32 %198, i32* %retval, align 4, !dbg !11319
  br label %return, !dbg !11319

return:                                           ; preds = %err, %if.end306, %if.then16
  %199 = load i32, i32* %retval, align 4, !dbg !11320
  ret i32 %199, !dbg !11320
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__vb2_buf_mem_prepare(%struct.vb2_buffer* %vb) #0 !dbg !11321 {
entry:
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %plane = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !11322, metadata !DIExpression()), !dbg !11323
  call void @llvm.dbg.declare(metadata i32* %plane, metadata !11324, metadata !DIExpression()), !dbg !11325
  %0 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11326
  %synced = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %0, i32 0, i32 9, !dbg !11328
  %bf.load = load i8, i8* %synced, align 4, !dbg !11328
  %bf.clear = and i8 %bf.load, 1, !dbg !11328
  %bf.cast = zext i8 %bf.clear to i32, !dbg !11328
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !11326
  br i1 %tobool, label %if.then, label %if.end, !dbg !11329

if.then:                                          ; preds = %entry
  br label %return, !dbg !11330

if.end:                                           ; preds = %entry
  %1 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11331
  %need_cache_sync_on_prepare = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %1, i32 0, i32 9, !dbg !11333
  %bf.load1 = load i8, i8* %need_cache_sync_on_prepare, align 4, !dbg !11333
  %bf.lshr = lshr i8 %bf.load1, 3, !dbg !11333
  %bf.clear2 = and i8 %bf.lshr, 1, !dbg !11333
  %bf.cast3 = zext i8 %bf.clear2 to i32, !dbg !11333
  %tobool4 = icmp ne i32 %bf.cast3, 0, !dbg !11331
  br i1 %tobool4, label %if.then5, label %if.end12, !dbg !11334

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %plane, align 4, !dbg !11335
  br label %for.cond, !dbg !11338

for.cond:                                         ; preds = %for.inc, %if.then5
  %2 = load i32, i32* %plane, align 4, !dbg !11339
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11341
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %3, i32 0, i32 4, !dbg !11342
  %4 = load i32, i32* %num_planes, align 4, !dbg !11342
  %cmp = icmp ult i32 %2, %4, !dbg !11343
  br i1 %cmp, label %for.body, label %for.end, !dbg !11344

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !11345

do.body:                                          ; preds = %for.body
  %5 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11346
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %5, i32 0, i32 0, !dbg !11346
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !dbg !11346
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 8, !dbg !11346
  %7 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops, align 8, !dbg !11346
  %prepare = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %7, i32 0, i32 5, !dbg !11346
  %8 = load void (i8*)*, void (i8*)** %prepare, align 8, !dbg !11346
  %tobool6 = icmp ne void (i8*)* %8, null, !dbg !11346
  br i1 %tobool6, label %if.then7, label %if.end11, !dbg !11349

if.then7:                                         ; preds = %do.body
  %9 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11346
  %vb2_queue8 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %9, i32 0, i32 0, !dbg !11346
  %10 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue8, align 8, !dbg !11346
  %mem_ops9 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %10, i32 0, i32 8, !dbg !11346
  %11 = load %struct.vb2_mem_ops*, %struct.vb2_mem_ops** %mem_ops9, align 8, !dbg !11346
  %prepare10 = getelementptr inbounds %struct.vb2_mem_ops, %struct.vb2_mem_ops* %11, i32 0, i32 5, !dbg !11346
  %12 = load void (i8*)*, void (i8*)** %prepare10, align 8, !dbg !11346
  %13 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11346
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %13, i32 0, i32 10, !dbg !11346
  %14 = load i32, i32* %plane, align 4, !dbg !11346
  %idxprom = zext i32 %14 to i64, !dbg !11346
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !11346
  %mem_priv = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 0, !dbg !11346
  %15 = load i8*, i8** %mem_priv, align 8, !dbg !11346
  call void %12(i8* %15) #10, !dbg !11346
  br label %if.end11, !dbg !11346

if.end11:                                         ; preds = %if.then7, %do.body
  br label %do.end, !dbg !11349

do.end:                                           ; preds = %if.end11
  br label %for.inc, !dbg !11349

for.inc:                                          ; preds = %do.end
  %16 = load i32, i32* %plane, align 4, !dbg !11350
  %inc = add i32 %16, 1, !dbg !11350
  store i32 %inc, i32* %plane, align 4, !dbg !11350
  br label %for.cond, !dbg !11351, !llvm.loop !11352

for.end:                                          ; preds = %for.cond
  br label %if.end12, !dbg !11354

if.end12:                                         ; preds = %for.end, %if.end
  %17 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11355
  %synced13 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %17, i32 0, i32 9, !dbg !11356
  %bf.load14 = load i8, i8* %synced13, align 4, !dbg !11357
  %bf.clear15 = and i8 %bf.load14, -2, !dbg !11357
  %bf.set = or i8 %bf.clear15, 1, !dbg !11357
  store i8 %bf.set, i8* %synced13, align 4, !dbg !11357
  br label %return, !dbg !11358

return:                                           ; preds = %if.end12, %if.then
  ret void, !dbg !11358
}

; Function Attrs: noredzone
declare dso_local %struct.dma_buf* @dma_buf_get(i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_get(%struct.kref* %kref) #0 !dbg !11359 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !11363, metadata !DIExpression()), !dbg !11364
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !11365
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !11366
  call void @refcount_inc(%struct.refcount_struct* %refcount) #10, !dbg !11367
  ret void, !dbg !11368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !11369 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !11373, metadata !DIExpression()), !dbg !11374
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11375
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #10, !dbg !11376
  ret void, !dbg !11377
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !11378 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !11381, metadata !DIExpression()), !dbg !11382
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !11383, metadata !DIExpression()), !dbg !11384
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11385
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !11386
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #10, !dbg !11387
  ret void, !dbg !11388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !11389 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !11392, metadata !DIExpression()), !dbg !11396
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !11400, metadata !DIExpression()), !dbg !11401
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !11402, metadata !DIExpression()), !dbg !11404
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !6078, metadata !DIExpression()), !dbg !11405
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6082, metadata !DIExpression()), !dbg !11407
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !11408, metadata !DIExpression()), !dbg !11409
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !11410, metadata !DIExpression()), !dbg !11411
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !11412, metadata !DIExpression()), !dbg !11413
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !11414, metadata !DIExpression()), !dbg !11415
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !11416, metadata !DIExpression()), !dbg !11417
  call void @llvm.dbg.declare(metadata i32* %old, metadata !11418, metadata !DIExpression()), !dbg !11419
  %0 = load i32, i32* %i.addr, align 4, !dbg !11420
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11421
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !11422
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11423
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !11423
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11424
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !11425
  %conv.i.i = trunc i64 %5 to i32, !dbg !11425
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #12, !dbg !11426
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11427
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !11427
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #12, !dbg !11427
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !11428
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11429
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !11404
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !11404
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !11404
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11404
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !11404
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #6, !dbg !11404, !srcloc !11430
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !11404
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !11404
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !11404
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !11404
  store i32 %15, i32* %old, align 4, !dbg !11419
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !11431
  %tobool = icmp ne i32* %16, null, !dbg !11431
  br i1 %tobool, label %if.then, label %if.end, !dbg !11433

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !11434
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !11435
  store i32 %17, i32* %18, align 4, !dbg !11436
  br label %if.end, !dbg !11437

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !11438
  %tobool1 = icmp ne i32 %19, 0, !dbg !11438
  %lnot = xor i1 %tobool1, true, !dbg !11438
  %lnot2 = xor i1 %lnot, true, !dbg !11438
  %lnot3 = xor i1 %lnot2, true, !dbg !11438
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !11438
  %conv = sext i32 %lnot.ext to i64, !dbg !11438
  %tobool4 = icmp ne i64 %conv, 0, !dbg !11438
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !11440

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11441
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #10, !dbg !11442
  br label %if.end17, !dbg !11442

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !11443
  %cmp = icmp slt i32 %21, 0, !dbg !11443
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11443

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !11443
  %23 = load i32, i32* %i.addr, align 4, !dbg !11443
  %add = add i32 %22, %23, !dbg !11443
  %cmp7 = icmp slt i32 %add, 0, !dbg !11443
  br label %lor.end, !dbg !11443

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !11443
  %lnot11 = xor i1 %lnot9, true, !dbg !11443
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !11443
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !11443
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !11443
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !11445

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !11446
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #10, !dbg !11447
  br label %if.end16, !dbg !11447

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !11448
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_vb2_buf_queue(%struct.vb2_queue* %q, %struct.vb2_buffer* %vb) #0 !dbg !11449 {
entry:
  %q.addr = alloca %struct.vb2_queue*, align 8
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !11450, metadata !DIExpression()), !dbg !11451
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !11452, metadata !DIExpression()), !dbg !11451
  ret void, !dbg !11451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !11453 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !11454, metadata !DIExpression()), !dbg !11455
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11456, metadata !DIExpression()), !dbg !11457
  ret i1 true, !dbg !11458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__vb2_wait_for_done_vb(%struct.vb2_queue* %q, i32 %nonblocking) #0 !dbg !11459 {
entry:
  %retval = alloca i32, align 4
  %q.addr = alloca %struct.vb2_queue*, align 8
  %nonblocking.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret100 = alloca i64, align 8
  %__int = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp126 = alloca i32, align 4
  store %struct.vb2_queue* %q, %struct.vb2_queue** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_queue** %q.addr, metadata !11460, metadata !DIExpression()), !dbg !11461
  store i32 %nonblocking, i32* %nonblocking.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nonblocking.addr, metadata !11462, metadata !DIExpression()), !dbg !11463
  br label %for.cond, !dbg !11464

for.cond:                                         ; preds = %if.end149, %entry
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11465, metadata !DIExpression()), !dbg !11469
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11470
  %waiting_in_dqbuf = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %0, i32 0, i32 28, !dbg !11472
  %bf.load = load i16, i16* %waiting_in_dqbuf, align 8, !dbg !11472
  %bf.lshr = lshr i16 %bf.load, 4, !dbg !11472
  %bf.clear = and i16 %bf.lshr, 1, !dbg !11472
  %bf.cast = zext i16 %bf.clear to i32, !dbg !11472
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !11470
  br i1 %tobool, label %if.then, label %if.end2, !dbg !11473

if.then:                                          ; preds = %for.cond
  br label %do.body, !dbg !11474

do.body:                                          ; preds = %if.then
  %1 = load i32, i32* @debug, align 4, !dbg !11476
  %cmp = icmp sge i32 %1, 1, !dbg !11476
  br i1 %cmp, label %if.then1, label %if.end, !dbg !11479

if.then1:                                         ; preds = %do.body
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11476
  %name = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %2, i32 0, i32 31, !dbg !11476
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !11476
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0), i8* %arraydecay, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.__vb2_wait_for_done_vb, i64 0, i64 0)) #11, !dbg !11476
  br label %if.end, !dbg !11476

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !11479

do.end:                                           ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !11480
  br label %return, !dbg !11480

if.end2:                                          ; preds = %for.cond
  %3 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11481
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %3, i32 0, i32 28, !dbg !11483
  %bf.load3 = load i16, i16* %streaming, align 8, !dbg !11483
  %bf.clear4 = and i16 %bf.load3, 1, !dbg !11483
  %bf.cast5 = zext i16 %bf.clear4 to i32, !dbg !11483
  %tobool6 = icmp ne i32 %bf.cast5, 0, !dbg !11481
  br i1 %tobool6, label %if.end16, label %if.then7, !dbg !11484

if.then7:                                         ; preds = %if.end2
  br label %do.body8, !dbg !11485

do.body8:                                         ; preds = %if.then7
  %4 = load i32, i32* @debug, align 4, !dbg !11487
  %cmp9 = icmp sge i32 %4, 1, !dbg !11487
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !11490

if.then10:                                        ; preds = %do.body8
  %5 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11487
  %name11 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %5, i32 0, i32 31, !dbg !11487
  %arraydecay12 = getelementptr inbounds [32 x i8], [32 x i8]* %name11, i64 0, i64 0, !dbg !11487
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.24, i64 0, i64 0), i8* %arraydecay12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.__vb2_wait_for_done_vb, i64 0, i64 0)) #11, !dbg !11487
  br label %if.end14, !dbg !11487

if.end14:                                         ; preds = %if.then10, %do.body8
  br label %do.end15, !dbg !11490

do.end15:                                         ; preds = %if.end14
  store i32 -22, i32* %retval, align 4, !dbg !11491
  br label %return, !dbg !11491

if.end16:                                         ; preds = %if.end2
  %6 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11492
  %error = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %6, i32 0, i32 28, !dbg !11494
  %bf.load17 = load i16, i16* %error, align 8, !dbg !11494
  %bf.lshr18 = lshr i16 %bf.load17, 2, !dbg !11494
  %bf.clear19 = and i16 %bf.lshr18, 1, !dbg !11494
  %bf.cast20 = zext i16 %bf.clear19 to i32, !dbg !11494
  %tobool21 = icmp ne i32 %bf.cast20, 0, !dbg !11492
  br i1 %tobool21, label %if.then22, label %if.end31, !dbg !11495

if.then22:                                        ; preds = %if.end16
  br label %do.body23, !dbg !11496

do.body23:                                        ; preds = %if.then22
  %7 = load i32, i32* @debug, align 4, !dbg !11498
  %cmp24 = icmp sge i32 %7, 1, !dbg !11498
  br i1 %cmp24, label %if.then25, label %if.end29, !dbg !11501

if.then25:                                        ; preds = %do.body23
  %8 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11498
  %name26 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %8, i32 0, i32 31, !dbg !11498
  %arraydecay27 = getelementptr inbounds [32 x i8], [32 x i8]* %name26, i64 0, i64 0, !dbg !11498
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.86, i64 0, i64 0), i8* %arraydecay27, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.__vb2_wait_for_done_vb, i64 0, i64 0)) #11, !dbg !11498
  br label %if.end29, !dbg !11498

if.end29:                                         ; preds = %if.then25, %do.body23
  br label %do.end30, !dbg !11501

do.end30:                                         ; preds = %if.end29
  store i32 -5, i32* %retval, align 4, !dbg !11502
  br label %return, !dbg !11502

if.end31:                                         ; preds = %if.end16
  %9 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11503
  %last_buffer_dequeued = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %9, i32 0, i32 28, !dbg !11505
  %bf.load32 = load i16, i16* %last_buffer_dequeued, align 8, !dbg !11505
  %bf.lshr33 = lshr i16 %bf.load32, 8, !dbg !11505
  %bf.clear34 = and i16 %bf.lshr33, 1, !dbg !11505
  %bf.cast35 = zext i16 %bf.clear34 to i32, !dbg !11505
  %tobool36 = icmp ne i32 %bf.cast35, 0, !dbg !11503
  br i1 %tobool36, label %if.then37, label %if.end46, !dbg !11506

if.then37:                                        ; preds = %if.end31
  br label %do.body38, !dbg !11507

do.body38:                                        ; preds = %if.then37
  %10 = load i32, i32* @debug, align 4, !dbg !11509
  %cmp39 = icmp sge i32 %10, 3, !dbg !11509
  br i1 %cmp39, label %if.then40, label %if.end44, !dbg !11512

if.then40:                                        ; preds = %do.body38
  %11 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11509
  %name41 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %11, i32 0, i32 31, !dbg !11509
  %arraydecay42 = getelementptr inbounds [32 x i8], [32 x i8]* %name41, i64 0, i64 0, !dbg !11509
  %call43 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.87, i64 0, i64 0), i8* %arraydecay42, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.__vb2_wait_for_done_vb, i64 0, i64 0)) #11, !dbg !11509
  br label %if.end44, !dbg !11509

if.end44:                                         ; preds = %if.then40, %do.body38
  br label %do.end45, !dbg !11512

do.end45:                                         ; preds = %if.end44
  store i32 -32, i32* %retval, align 4, !dbg !11513
  br label %return, !dbg !11513

if.end46:                                         ; preds = %if.end31
  %12 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11514
  %done_list = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %12, i32 0, i32 25, !dbg !11516
  %call47 = call i32 @list_empty(%struct.list_head* %done_list) #10, !dbg !11517
  %tobool48 = icmp ne i32 %call47, 0, !dbg !11517
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !11518

if.then49:                                        ; preds = %if.end46
  br label %for.end150, !dbg !11519

if.end50:                                         ; preds = %if.end46
  %13 = load i32, i32* %nonblocking.addr, align 4, !dbg !11521
  %tobool51 = icmp ne i32 %13, 0, !dbg !11521
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !11523

if.then52:                                        ; preds = %if.end50
  br label %do.body53, !dbg !11524

do.body53:                                        ; preds = %if.then52
  %14 = load i32, i32* @debug, align 4, !dbg !11526
  %cmp54 = icmp sge i32 %14, 3, !dbg !11526
  br i1 %cmp54, label %if.then55, label %if.end59, !dbg !11529

if.then55:                                        ; preds = %do.body53
  %15 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11526
  %name56 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %15, i32 0, i32 31, !dbg !11526
  %arraydecay57 = getelementptr inbounds [32 x i8], [32 x i8]* %name56, i64 0, i64 0, !dbg !11526
  %call58 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.88, i64 0, i64 0), i8* %arraydecay57, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.__vb2_wait_for_done_vb, i64 0, i64 0)) #11, !dbg !11526
  br label %if.end59, !dbg !11526

if.end59:                                         ; preds = %if.then55, %do.body53
  br label %do.end60, !dbg !11529

do.end60:                                         ; preds = %if.end59
  store i32 -11, i32* %retval, align 4, !dbg !11530
  br label %return, !dbg !11530

if.end61:                                         ; preds = %if.end50
  %16 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11531
  %waiting_in_dqbuf62 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %16, i32 0, i32 28, !dbg !11532
  %bf.load63 = load i16, i16* %waiting_in_dqbuf62, align 8, !dbg !11533
  %bf.clear64 = and i16 %bf.load63, -17, !dbg !11533
  %bf.set = or i16 %bf.clear64, 16, !dbg !11533
  store i16 %bf.set, i16* %waiting_in_dqbuf62, align 8, !dbg !11533
  br label %do.body65, !dbg !11534

do.body65:                                        ; preds = %if.end61
  %17 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11535
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %17, i32 0, i32 7, !dbg !11535
  %18 = load %struct.vb2_ops*, %struct.vb2_ops** %ops, align 8, !dbg !11535
  %wait_prepare = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %18, i32 0, i32 1, !dbg !11535
  %19 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_prepare, align 8, !dbg !11535
  %tobool66 = icmp ne void (%struct.vb2_queue*)* %19, null, !dbg !11535
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !11538

if.then67:                                        ; preds = %do.body65
  %20 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11535
  %ops68 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %20, i32 0, i32 7, !dbg !11535
  %21 = load %struct.vb2_ops*, %struct.vb2_ops** %ops68, align 8, !dbg !11535
  %wait_prepare69 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %21, i32 0, i32 1, !dbg !11535
  %22 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_prepare69, align 8, !dbg !11535
  %23 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11535
  call void %22(%struct.vb2_queue* %23) #10, !dbg !11535
  br label %if.end70, !dbg !11535

if.end70:                                         ; preds = %if.then67, %do.body65
  br label %do.end71, !dbg !11538

do.end71:                                         ; preds = %if.end70
  br label %do.body72, !dbg !11539

do.body72:                                        ; preds = %do.end71
  %24 = load i32, i32* @debug, align 4, !dbg !11540
  %cmp73 = icmp sge i32 %24, 3, !dbg !11540
  br i1 %cmp73, label %if.then74, label %if.end78, !dbg !11543

if.then74:                                        ; preds = %do.body72
  %25 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11540
  %name75 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %25, i32 0, i32 31, !dbg !11540
  %arraydecay76 = getelementptr inbounds [32 x i8], [32 x i8]* %name75, i64 0, i64 0, !dbg !11540
  %call77 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.89, i64 0, i64 0), i8* %arraydecay76, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.__vb2_wait_for_done_vb, i64 0, i64 0)) #11, !dbg !11540
  br label %if.end78, !dbg !11540

if.end78:                                         ; preds = %if.then74, %do.body72
  br label %do.end79, !dbg !11543

do.end79:                                         ; preds = %if.end78
  call void @llvm.dbg.declare(metadata i32* %__ret, metadata !11544, metadata !DIExpression()), !dbg !11546
  store i32 0, i32* %__ret, align 4, !dbg !11546
  br label %do.body80, !dbg !11546

do.body80:                                        ; preds = %do.end79
  br label %do.body81, !dbg !11547

do.body81:                                        ; preds = %do.body80
  br label %do.end82, !dbg !11549

do.end82:                                         ; preds = %do.body81
  br label %do.end83, !dbg !11547

do.end83:                                         ; preds = %do.end82
  %26 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11551
  %done_list84 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %26, i32 0, i32 25, !dbg !11551
  %call85 = call i32 @list_empty(%struct.list_head* %done_list84) #10, !dbg !11551
  %tobool86 = icmp ne i32 %call85, 0, !dbg !11551
  br i1 %tobool86, label %lor.lhs.false, label %if.end125, !dbg !11551

lor.lhs.false:                                    ; preds = %do.end83
  %27 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11551
  %streaming87 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %27, i32 0, i32 28, !dbg !11551
  %bf.load88 = load i16, i16* %streaming87, align 8, !dbg !11551
  %bf.clear89 = and i16 %bf.load88, 1, !dbg !11551
  %bf.cast90 = zext i16 %bf.clear89 to i32, !dbg !11551
  %tobool91 = icmp ne i32 %bf.cast90, 0, !dbg !11551
  br i1 %tobool91, label %lor.lhs.false92, label %if.end125, !dbg !11551

lor.lhs.false92:                                  ; preds = %lor.lhs.false
  %28 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11551
  %error93 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %28, i32 0, i32 28, !dbg !11551
  %bf.load94 = load i16, i16* %error93, align 8, !dbg !11551
  %bf.lshr95 = lshr i16 %bf.load94, 2, !dbg !11551
  %bf.clear96 = and i16 %bf.lshr95, 1, !dbg !11551
  %bf.cast97 = zext i16 %bf.clear96 to i32, !dbg !11551
  %tobool98 = icmp ne i32 %bf.cast97, 0, !dbg !11551
  br i1 %tobool98, label %if.end125, label %if.then99, !dbg !11546

if.then99:                                        ; preds = %lor.lhs.false92
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !11553, metadata !DIExpression()), !dbg !11555
  call void @llvm.dbg.declare(metadata i64* %__ret100, metadata !11556, metadata !DIExpression()), !dbg !11555
  store i64 0, i64* %__ret100, align 8, !dbg !11555
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #10, !dbg !11555
  br label %for.cond101, !dbg !11555

for.cond101:                                      ; preds = %if.end123, %if.then99
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !11557, metadata !DIExpression()), !dbg !11561
  %29 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11561
  %done_wq = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %29, i32 0, i32 27, !dbg !11561
  %call102 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %done_wq, %struct.wait_queue_entry* %__wq_entry, i32 1) #10, !dbg !11561
  store i64 %call102, i64* %__int, align 8, !dbg !11561
  %30 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11562
  %done_list103 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %30, i32 0, i32 25, !dbg !11562
  %call104 = call i32 @list_empty(%struct.list_head* %done_list103) #10, !dbg !11562
  %tobool105 = icmp ne i32 %call104, 0, !dbg !11562
  br i1 %tobool105, label %lor.lhs.false106, label %if.then119, !dbg !11562

lor.lhs.false106:                                 ; preds = %for.cond101
  %31 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11562
  %streaming107 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %31, i32 0, i32 28, !dbg !11562
  %bf.load108 = load i16, i16* %streaming107, align 8, !dbg !11562
  %bf.clear109 = and i16 %bf.load108, 1, !dbg !11562
  %bf.cast110 = zext i16 %bf.clear109 to i32, !dbg !11562
  %tobool111 = icmp ne i32 %bf.cast110, 0, !dbg !11562
  br i1 %tobool111, label %lor.lhs.false112, label %if.then119, !dbg !11562

lor.lhs.false112:                                 ; preds = %lor.lhs.false106
  %32 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11562
  %error113 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %32, i32 0, i32 28, !dbg !11562
  %bf.load114 = load i16, i16* %error113, align 8, !dbg !11562
  %bf.lshr115 = lshr i16 %bf.load114, 2, !dbg !11562
  %bf.clear116 = and i16 %bf.lshr115, 1, !dbg !11562
  %bf.cast117 = zext i16 %bf.clear116 to i32, !dbg !11562
  %tobool118 = icmp ne i32 %bf.cast117, 0, !dbg !11562
  br i1 %tobool118, label %if.then119, label %if.end120, !dbg !11561

if.then119:                                       ; preds = %lor.lhs.false112, %lor.lhs.false106, %for.cond101
  br label %for.end, !dbg !11562

if.end120:                                        ; preds = %lor.lhs.false112
  %33 = load i64, i64* %__int, align 8, !dbg !11564
  %tobool121 = icmp ne i64 %33, 0, !dbg !11564
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !11561

if.then122:                                       ; preds = %if.end120
  %34 = load i64, i64* %__int, align 8, !dbg !11566
  store i64 %34, i64* %__ret100, align 8, !dbg !11566
  br label %__out, !dbg !11566

if.end123:                                        ; preds = %if.end120
  call void @schedule() #10, !dbg !11561
  br label %for.cond101, !dbg !11568, !llvm.loop !11569

for.end:                                          ; preds = %if.then119
  %35 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11555
  %done_wq124 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %35, i32 0, i32 27, !dbg !11555
  call void @finish_wait(%struct.wait_queue_head* %done_wq124, %struct.wait_queue_entry* %__wq_entry) #10, !dbg !11555
  br label %__out, !dbg !11555

__out:                                            ; preds = %for.end, %if.then122
  call void @llvm.dbg.label(metadata !11571), !dbg !11555
  %36 = load i64, i64* %__ret100, align 8, !dbg !11555
  store i64 %36, i64* %tmp, align 8, !dbg !11555
  %37 = load i64, i64* %tmp, align 8, !dbg !11555
  %conv = trunc i64 %37 to i32, !dbg !11551
  store i32 %conv, i32* %__ret, align 4, !dbg !11551
  br label %if.end125, !dbg !11551

if.end125:                                        ; preds = %__out, %lor.lhs.false92, %lor.lhs.false, %do.end83
  %38 = load i32, i32* %__ret, align 4, !dbg !11546
  store i32 %38, i32* %tmp126, align 4, !dbg !11551
  %39 = load i32, i32* %tmp126, align 4, !dbg !11546
  store i32 %39, i32* %ret, align 4, !dbg !11572
  br label %do.body127, !dbg !11573

do.body127:                                       ; preds = %if.end125
  %40 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11574
  %ops128 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %40, i32 0, i32 7, !dbg !11574
  %41 = load %struct.vb2_ops*, %struct.vb2_ops** %ops128, align 8, !dbg !11574
  %wait_finish = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %41, i32 0, i32 2, !dbg !11574
  %42 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_finish, align 8, !dbg !11574
  %tobool129 = icmp ne void (%struct.vb2_queue*)* %42, null, !dbg !11574
  br i1 %tobool129, label %if.then130, label %if.end133, !dbg !11577

if.then130:                                       ; preds = %do.body127
  %43 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11574
  %ops131 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %43, i32 0, i32 7, !dbg !11574
  %44 = load %struct.vb2_ops*, %struct.vb2_ops** %ops131, align 8, !dbg !11574
  %wait_finish132 = getelementptr inbounds %struct.vb2_ops, %struct.vb2_ops* %44, i32 0, i32 2, !dbg !11574
  %45 = load void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)** %wait_finish132, align 8, !dbg !11574
  %46 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11574
  call void %45(%struct.vb2_queue* %46) #10, !dbg !11574
  br label %if.end133, !dbg !11574

if.end133:                                        ; preds = %if.then130, %do.body127
  br label %do.end134, !dbg !11577

do.end134:                                        ; preds = %if.end133
  %47 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11578
  %waiting_in_dqbuf135 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %47, i32 0, i32 28, !dbg !11579
  %bf.load136 = load i16, i16* %waiting_in_dqbuf135, align 8, !dbg !11580
  %bf.clear137 = and i16 %bf.load136, -17, !dbg !11580
  store i16 %bf.clear137, i16* %waiting_in_dqbuf135, align 8, !dbg !11580
  %48 = load i32, i32* %ret, align 4, !dbg !11581
  %tobool138 = icmp ne i32 %48, 0, !dbg !11581
  br i1 %tobool138, label %if.then139, label %if.end149, !dbg !11583

if.then139:                                       ; preds = %do.end134
  br label %do.body140, !dbg !11584

do.body140:                                       ; preds = %if.then139
  %49 = load i32, i32* @debug, align 4, !dbg !11586
  %cmp141 = icmp sge i32 %49, 1, !dbg !11586
  br i1 %cmp141, label %if.then143, label %if.end147, !dbg !11589

if.then143:                                       ; preds = %do.body140
  %50 = load %struct.vb2_queue*, %struct.vb2_queue** %q.addr, align 8, !dbg !11586
  %name144 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %50, i32 0, i32 31, !dbg !11586
  %arraydecay145 = getelementptr inbounds [32 x i8], [32 x i8]* %name144, i64 0, i64 0, !dbg !11586
  %call146 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.90, i64 0, i64 0), i8* %arraydecay145, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.__vb2_wait_for_done_vb, i64 0, i64 0)) #11, !dbg !11586
  br label %if.end147, !dbg !11586

if.end147:                                        ; preds = %if.then143, %do.body140
  br label %do.end148, !dbg !11589

do.end148:                                        ; preds = %if.end147
  %51 = load i32, i32* %ret, align 4, !dbg !11590
  store i32 %51, i32* %retval, align 4, !dbg !11591
  br label %return, !dbg !11591

if.end149:                                        ; preds = %do.end134
  br label %for.cond, !dbg !11592, !llvm.loop !11593

for.end150:                                       ; preds = %if.then49
  store i32 0, i32* %retval, align 4, !dbg !11596
  br label %return, !dbg !11596

return:                                           ; preds = %for.end150, %do.end148, %do.end60, %do.end45, %do.end30, %do.end15, %do.end
  %52 = load i32, i32* %retval, align 4, !dbg !11597
  ret i32 %52, !dbg !11597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !11598 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11599, metadata !DIExpression()), !dbg !11600
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11601
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #10, !dbg !11603
  br i1 %call, label %if.end, label %if.then, !dbg !11604

if.then:                                          ; preds = %entry
  br label %return, !dbg !11605

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11606
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11607
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !11607
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11608
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11609
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11609
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #10, !dbg !11610
  br label %return, !dbg !11611

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !11611
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !11612 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11615, metadata !DIExpression()), !dbg !11616
  ret i1 true, !dbg !11617
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !11618 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !11619, metadata !DIExpression()), !dbg !11620
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !11621, metadata !DIExpression()), !dbg !11622
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11623
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11624
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !11625
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !11626
  br label %do.body, !dbg !11627

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !11628

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !11630

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !11628

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !11632
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !11632
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !11632
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !11632
  br label %do.end5, !dbg !11632

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !11628

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !11634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @vb2_plane_size(%struct.vb2_buffer* %vb, i32 %plane_no) #0 !dbg !11635 {
entry:
  %retval = alloca i64, align 8
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %plane_no.addr = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !11638, metadata !DIExpression()), !dbg !11639
  store i32 %plane_no, i32* %plane_no.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_no.addr, metadata !11640, metadata !DIExpression()), !dbg !11641
  %0 = load i32, i32* %plane_no.addr, align 4, !dbg !11642
  %1 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11644
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %1, i32 0, i32 4, !dbg !11645
  %2 = load i32, i32* %num_planes, align 4, !dbg !11645
  %cmp = icmp ult i32 %0, %2, !dbg !11646
  br i1 %cmp, label %if.then, label %if.end, !dbg !11647

if.then:                                          ; preds = %entry
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11648
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %3, i32 0, i32 10, !dbg !11649
  %4 = load i32, i32* %plane_no.addr, align 4, !dbg !11650
  %idxprom = zext i32 %4 to i64, !dbg !11648
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !11648
  %length = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 4, !dbg !11651
  %5 = load i32, i32* %length, align 8, !dbg !11651
  %conv = zext i32 %5 to i64, !dbg !11648
  store i64 %conv, i64* %retval, align 8, !dbg !11652
  br label %return, !dbg !11652

if.end:                                           ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !11653
  br label %return, !dbg !11653

return:                                           ; preds = %if.end, %if.then
  %6 = load i64, i64* %retval, align 8, !dbg !11654
  ret i64 %6, !dbg !11654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @vb2_get_plane_payload(%struct.vb2_buffer* %vb, i32 %plane_no) #0 !dbg !11655 {
entry:
  %retval = alloca i64, align 8
  %vb.addr = alloca %struct.vb2_buffer*, align 8
  %plane_no.addr = alloca i32, align 4
  store %struct.vb2_buffer* %vb, %struct.vb2_buffer** %vb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.vb2_buffer** %vb.addr, metadata !11656, metadata !DIExpression()), !dbg !11657
  store i32 %plane_no, i32* %plane_no.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %plane_no.addr, metadata !11658, metadata !DIExpression()), !dbg !11659
  %0 = load i32, i32* %plane_no.addr, align 4, !dbg !11660
  %1 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11662
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %1, i32 0, i32 4, !dbg !11663
  %2 = load i32, i32* %num_planes, align 4, !dbg !11663
  %cmp = icmp ult i32 %0, %2, !dbg !11664
  br i1 %cmp, label %if.then, label %if.end, !dbg !11665

if.then:                                          ; preds = %entry
  %3 = load %struct.vb2_buffer*, %struct.vb2_buffer** %vb.addr, align 8, !dbg !11666
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %3, i32 0, i32 10, !dbg !11667
  %4 = load i32, i32* %plane_no.addr, align 4, !dbg !11668
  %idxprom = zext i32 %4 to i64, !dbg !11666
  %arrayidx = getelementptr [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom, !dbg !11666
  %bytesused = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 3, !dbg !11669
  %5 = load i32, i32* %bytesused, align 4, !dbg !11669
  %conv = zext i32 %5 to i64, !dbg !11666
  store i64 %conv, i64* %retval, align 8, !dbg !11670
  br label %return, !dbg !11670

if.end:                                           ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !11671
  br label %return, !dbg !11671

return:                                           ; preds = %if.end, %if.then
  %6 = load i64, i64* %retval, align 8, !dbg !11672
  ret i64 %6, !dbg !11672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_get_ns() #0 !dbg !11673 {
entry:
  %call = call i64 @ktime_get() #10, !dbg !11677
  %call1 = call i64 @ktime_to_ns(i64 %call) #10, !dbg !11678
  ret i64 %call1, !dbg !11679
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_to_user(i8*, i8*, i64) #4

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #7

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #0 !dbg !11680 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !11683, metadata !DIExpression()), !dbg !11684
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11685, metadata !DIExpression()), !dbg !11686
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11687, metadata !DIExpression()), !dbg !11689
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !11689
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !11690
  %tobool = icmp ne i32 %0, 0, !dbg !11690
  %lnot = xor i1 %tobool, true, !dbg !11690
  %lnot1 = xor i1 %lnot, true, !dbg !11690
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11690
  %conv = sext i32 %lnot.ext to i64, !dbg !11690
  %tobool2 = icmp ne i64 %conv, 0, !dbg !11690
  br i1 %tobool2, label %if.then, label %if.end, !dbg !11689

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !11690

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !11692

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !11694

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !11692
  %2 = load i64, i64* %count.addr, align 8, !dbg !11692
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.110, i64 0, i64 0), i32 %1, i64 %2) #10, !dbg !11692
  br label %do.body4, !dbg !11692

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !11696

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !11698

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !11696

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.109, i64 0, i64 0), i32 134, i32 2313, i64 12) #6, !dbg !11700, !srcloc !11702
  br label %do.end8, !dbg !11700

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #6, !dbg !11703, !srcloc !11705
  br label %do.body9, !dbg !11696

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !11706

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !11696

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !11692

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !11708

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !11692

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !11692

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !11689
  %tobool15 = icmp ne i32 %3, 0, !dbg !11689
  %lnot16 = xor i1 %tobool15, true, !dbg !11689
  %lnot18 = xor i1 %lnot16, true, !dbg !11689
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !11689
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !11689
  store i64 %conv20, i64* %tmp, align 8, !dbg !11690
  %4 = load i64, i64* %tmp, align 8, !dbg !11689
  ret void, !dbg !11710
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #4

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #0 !dbg !11711 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11714, metadata !DIExpression()), !dbg !11715
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11716, metadata !DIExpression()), !dbg !11717
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !11718, metadata !DIExpression()), !dbg !11719
  ret void, !dbg !11720
}

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_to_ns(i64 %kt) #0 !dbg !11721 {
entry:
  %kt.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !11725, metadata !DIExpression()), !dbg !11726
  %0 = load i64, i64* %kt.addr, align 8, !dbg !11727
  ret i64 %0, !dbg !11728
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #4

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #4

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #8

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #9 !dbg !11729 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11733, metadata !DIExpression()), !dbg !11738
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11740, metadata !DIExpression()), !dbg !11741
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11742, metadata !DIExpression()), !dbg !11743
  %0 = load i64, i64* %size.addr, align 8, !dbg !11744
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !11746
  br i1 %1, label %if.then, label %if.end447, !dbg !11747

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !11748
  %tobool = icmp ne i64 %2, 0, !dbg !11748
  br i1 %tobool, label %if.end, label %if.then1, !dbg !11751

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !11752
  br label %return, !dbg !11752

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !11753
  %cmp = icmp ult i64 %3, 4096, !dbg !11755
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !11756

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11757
  br label %return, !dbg !11757

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub = sub i64 %4, 1, !dbg !11758
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !11758
  br i1 %5, label %cond.true, label %cond.false442, !dbg !11758

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub4 = sub i64 %6, 1, !dbg !11758
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !11758
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !11758

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub6 = sub i64 %8, 1, !dbg !11758
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !11758
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !11758

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !11758

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub9 = sub i64 %9, 1, !dbg !11758
  %and = and i64 %sub9, -9223372036854775808, !dbg !11758
  %tobool10 = icmp ne i64 %and, 0, !dbg !11758
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11758

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !11758

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub13 = sub i64 %10, 1, !dbg !11758
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !11758
  %tobool15 = icmp ne i64 %and14, 0, !dbg !11758
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !11758

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !11758

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub18 = sub i64 %11, 1, !dbg !11758
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !11758
  %tobool20 = icmp ne i64 %and19, 0, !dbg !11758
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !11758

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !11758

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub23 = sub i64 %12, 1, !dbg !11758
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !11758
  %tobool25 = icmp ne i64 %and24, 0, !dbg !11758
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !11758

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !11758

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub28 = sub i64 %13, 1, !dbg !11758
  %and29 = and i64 %sub28, 576460752303423488, !dbg !11758
  %tobool30 = icmp ne i64 %and29, 0, !dbg !11758
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !11758

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !11758

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub33 = sub i64 %14, 1, !dbg !11758
  %and34 = and i64 %sub33, 288230376151711744, !dbg !11758
  %tobool35 = icmp ne i64 %and34, 0, !dbg !11758
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !11758

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !11758

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub38 = sub i64 %15, 1, !dbg !11758
  %and39 = and i64 %sub38, 144115188075855872, !dbg !11758
  %tobool40 = icmp ne i64 %and39, 0, !dbg !11758
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !11758

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !11758

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub43 = sub i64 %16, 1, !dbg !11758
  %and44 = and i64 %sub43, 72057594037927936, !dbg !11758
  %tobool45 = icmp ne i64 %and44, 0, !dbg !11758
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11758

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !11758

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub48 = sub i64 %17, 1, !dbg !11758
  %and49 = and i64 %sub48, 36028797018963968, !dbg !11758
  %tobool50 = icmp ne i64 %and49, 0, !dbg !11758
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !11758

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !11758

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub53 = sub i64 %18, 1, !dbg !11758
  %and54 = and i64 %sub53, 18014398509481984, !dbg !11758
  %tobool55 = icmp ne i64 %and54, 0, !dbg !11758
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !11758

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !11758

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub58 = sub i64 %19, 1, !dbg !11758
  %and59 = and i64 %sub58, 9007199254740992, !dbg !11758
  %tobool60 = icmp ne i64 %and59, 0, !dbg !11758
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !11758

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !11758

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub63 = sub i64 %20, 1, !dbg !11758
  %and64 = and i64 %sub63, 4503599627370496, !dbg !11758
  %tobool65 = icmp ne i64 %and64, 0, !dbg !11758
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !11758

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !11758

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub68 = sub i64 %21, 1, !dbg !11758
  %and69 = and i64 %sub68, 2251799813685248, !dbg !11758
  %tobool70 = icmp ne i64 %and69, 0, !dbg !11758
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !11758

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !11758

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub73 = sub i64 %22, 1, !dbg !11758
  %and74 = and i64 %sub73, 1125899906842624, !dbg !11758
  %tobool75 = icmp ne i64 %and74, 0, !dbg !11758
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !11758

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !11758

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub78 = sub i64 %23, 1, !dbg !11758
  %and79 = and i64 %sub78, 562949953421312, !dbg !11758
  %tobool80 = icmp ne i64 %and79, 0, !dbg !11758
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !11758

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !11758

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub83 = sub i64 %24, 1, !dbg !11758
  %and84 = and i64 %sub83, 281474976710656, !dbg !11758
  %tobool85 = icmp ne i64 %and84, 0, !dbg !11758
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !11758

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !11758

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub88 = sub i64 %25, 1, !dbg !11758
  %and89 = and i64 %sub88, 140737488355328, !dbg !11758
  %tobool90 = icmp ne i64 %and89, 0, !dbg !11758
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !11758

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !11758

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub93 = sub i64 %26, 1, !dbg !11758
  %and94 = and i64 %sub93, 70368744177664, !dbg !11758
  %tobool95 = icmp ne i64 %and94, 0, !dbg !11758
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !11758

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !11758

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub98 = sub i64 %27, 1, !dbg !11758
  %and99 = and i64 %sub98, 35184372088832, !dbg !11758
  %tobool100 = icmp ne i64 %and99, 0, !dbg !11758
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !11758

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !11758

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub103 = sub i64 %28, 1, !dbg !11758
  %and104 = and i64 %sub103, 17592186044416, !dbg !11758
  %tobool105 = icmp ne i64 %and104, 0, !dbg !11758
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !11758

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !11758

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub108 = sub i64 %29, 1, !dbg !11758
  %and109 = and i64 %sub108, 8796093022208, !dbg !11758
  %tobool110 = icmp ne i64 %and109, 0, !dbg !11758
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !11758

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !11758

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub113 = sub i64 %30, 1, !dbg !11758
  %and114 = and i64 %sub113, 4398046511104, !dbg !11758
  %tobool115 = icmp ne i64 %and114, 0, !dbg !11758
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !11758

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !11758

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub118 = sub i64 %31, 1, !dbg !11758
  %and119 = and i64 %sub118, 2199023255552, !dbg !11758
  %tobool120 = icmp ne i64 %and119, 0, !dbg !11758
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !11758

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !11758

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub123 = sub i64 %32, 1, !dbg !11758
  %and124 = and i64 %sub123, 1099511627776, !dbg !11758
  %tobool125 = icmp ne i64 %and124, 0, !dbg !11758
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !11758

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !11758

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub128 = sub i64 %33, 1, !dbg !11758
  %and129 = and i64 %sub128, 549755813888, !dbg !11758
  %tobool130 = icmp ne i64 %and129, 0, !dbg !11758
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !11758

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !11758

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub133 = sub i64 %34, 1, !dbg !11758
  %and134 = and i64 %sub133, 274877906944, !dbg !11758
  %tobool135 = icmp ne i64 %and134, 0, !dbg !11758
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !11758

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !11758

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub138 = sub i64 %35, 1, !dbg !11758
  %and139 = and i64 %sub138, 137438953472, !dbg !11758
  %tobool140 = icmp ne i64 %and139, 0, !dbg !11758
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !11758

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !11758

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub143 = sub i64 %36, 1, !dbg !11758
  %and144 = and i64 %sub143, 68719476736, !dbg !11758
  %tobool145 = icmp ne i64 %and144, 0, !dbg !11758
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !11758

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !11758

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub148 = sub i64 %37, 1, !dbg !11758
  %and149 = and i64 %sub148, 34359738368, !dbg !11758
  %tobool150 = icmp ne i64 %and149, 0, !dbg !11758
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !11758

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !11758

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub153 = sub i64 %38, 1, !dbg !11758
  %and154 = and i64 %sub153, 17179869184, !dbg !11758
  %tobool155 = icmp ne i64 %and154, 0, !dbg !11758
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !11758

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !11758

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub158 = sub i64 %39, 1, !dbg !11758
  %and159 = and i64 %sub158, 8589934592, !dbg !11758
  %tobool160 = icmp ne i64 %and159, 0, !dbg !11758
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !11758

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !11758

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub163 = sub i64 %40, 1, !dbg !11758
  %and164 = and i64 %sub163, 4294967296, !dbg !11758
  %tobool165 = icmp ne i64 %and164, 0, !dbg !11758
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !11758

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !11758

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub168 = sub i64 %41, 1, !dbg !11758
  %and169 = and i64 %sub168, 2147483648, !dbg !11758
  %tobool170 = icmp ne i64 %and169, 0, !dbg !11758
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !11758

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !11758

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub173 = sub i64 %42, 1, !dbg !11758
  %and174 = and i64 %sub173, 1073741824, !dbg !11758
  %tobool175 = icmp ne i64 %and174, 0, !dbg !11758
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !11758

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !11758

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub178 = sub i64 %43, 1, !dbg !11758
  %and179 = and i64 %sub178, 536870912, !dbg !11758
  %tobool180 = icmp ne i64 %and179, 0, !dbg !11758
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !11758

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !11758

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub183 = sub i64 %44, 1, !dbg !11758
  %and184 = and i64 %sub183, 268435456, !dbg !11758
  %tobool185 = icmp ne i64 %and184, 0, !dbg !11758
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !11758

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !11758

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub188 = sub i64 %45, 1, !dbg !11758
  %and189 = and i64 %sub188, 134217728, !dbg !11758
  %tobool190 = icmp ne i64 %and189, 0, !dbg !11758
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !11758

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !11758

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub193 = sub i64 %46, 1, !dbg !11758
  %and194 = and i64 %sub193, 67108864, !dbg !11758
  %tobool195 = icmp ne i64 %and194, 0, !dbg !11758
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !11758

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !11758

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub198 = sub i64 %47, 1, !dbg !11758
  %and199 = and i64 %sub198, 33554432, !dbg !11758
  %tobool200 = icmp ne i64 %and199, 0, !dbg !11758
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !11758

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !11758

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub203 = sub i64 %48, 1, !dbg !11758
  %and204 = and i64 %sub203, 16777216, !dbg !11758
  %tobool205 = icmp ne i64 %and204, 0, !dbg !11758
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !11758

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !11758

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub208 = sub i64 %49, 1, !dbg !11758
  %and209 = and i64 %sub208, 8388608, !dbg !11758
  %tobool210 = icmp ne i64 %and209, 0, !dbg !11758
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !11758

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !11758

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub213 = sub i64 %50, 1, !dbg !11758
  %and214 = and i64 %sub213, 4194304, !dbg !11758
  %tobool215 = icmp ne i64 %and214, 0, !dbg !11758
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !11758

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !11758

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub218 = sub i64 %51, 1, !dbg !11758
  %and219 = and i64 %sub218, 2097152, !dbg !11758
  %tobool220 = icmp ne i64 %and219, 0, !dbg !11758
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !11758

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !11758

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub223 = sub i64 %52, 1, !dbg !11758
  %and224 = and i64 %sub223, 1048576, !dbg !11758
  %tobool225 = icmp ne i64 %and224, 0, !dbg !11758
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !11758

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !11758

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub228 = sub i64 %53, 1, !dbg !11758
  %and229 = and i64 %sub228, 524288, !dbg !11758
  %tobool230 = icmp ne i64 %and229, 0, !dbg !11758
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !11758

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !11758

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub233 = sub i64 %54, 1, !dbg !11758
  %and234 = and i64 %sub233, 262144, !dbg !11758
  %tobool235 = icmp ne i64 %and234, 0, !dbg !11758
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !11758

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !11758

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub238 = sub i64 %55, 1, !dbg !11758
  %and239 = and i64 %sub238, 131072, !dbg !11758
  %tobool240 = icmp ne i64 %and239, 0, !dbg !11758
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !11758

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !11758

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub243 = sub i64 %56, 1, !dbg !11758
  %and244 = and i64 %sub243, 65536, !dbg !11758
  %tobool245 = icmp ne i64 %and244, 0, !dbg !11758
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !11758

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !11758

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub248 = sub i64 %57, 1, !dbg !11758
  %and249 = and i64 %sub248, 32768, !dbg !11758
  %tobool250 = icmp ne i64 %and249, 0, !dbg !11758
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !11758

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !11758

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub253 = sub i64 %58, 1, !dbg !11758
  %and254 = and i64 %sub253, 16384, !dbg !11758
  %tobool255 = icmp ne i64 %and254, 0, !dbg !11758
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !11758

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !11758

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub258 = sub i64 %59, 1, !dbg !11758
  %and259 = and i64 %sub258, 8192, !dbg !11758
  %tobool260 = icmp ne i64 %and259, 0, !dbg !11758
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !11758

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !11758

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub263 = sub i64 %60, 1, !dbg !11758
  %and264 = and i64 %sub263, 4096, !dbg !11758
  %tobool265 = icmp ne i64 %and264, 0, !dbg !11758
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !11758

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !11758

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub268 = sub i64 %61, 1, !dbg !11758
  %and269 = and i64 %sub268, 2048, !dbg !11758
  %tobool270 = icmp ne i64 %and269, 0, !dbg !11758
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !11758

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !11758

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub273 = sub i64 %62, 1, !dbg !11758
  %and274 = and i64 %sub273, 1024, !dbg !11758
  %tobool275 = icmp ne i64 %and274, 0, !dbg !11758
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !11758

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !11758

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub278 = sub i64 %63, 1, !dbg !11758
  %and279 = and i64 %sub278, 512, !dbg !11758
  %tobool280 = icmp ne i64 %and279, 0, !dbg !11758
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !11758

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !11758

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub283 = sub i64 %64, 1, !dbg !11758
  %and284 = and i64 %sub283, 256, !dbg !11758
  %tobool285 = icmp ne i64 %and284, 0, !dbg !11758
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !11758

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !11758

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub288 = sub i64 %65, 1, !dbg !11758
  %and289 = and i64 %sub288, 128, !dbg !11758
  %tobool290 = icmp ne i64 %and289, 0, !dbg !11758
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !11758

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !11758

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub293 = sub i64 %66, 1, !dbg !11758
  %and294 = and i64 %sub293, 64, !dbg !11758
  %tobool295 = icmp ne i64 %and294, 0, !dbg !11758
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !11758

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !11758

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub298 = sub i64 %67, 1, !dbg !11758
  %and299 = and i64 %sub298, 32, !dbg !11758
  %tobool300 = icmp ne i64 %and299, 0, !dbg !11758
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !11758

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !11758

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub303 = sub i64 %68, 1, !dbg !11758
  %and304 = and i64 %sub303, 16, !dbg !11758
  %tobool305 = icmp ne i64 %and304, 0, !dbg !11758
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !11758

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !11758

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub308 = sub i64 %69, 1, !dbg !11758
  %and309 = and i64 %sub308, 8, !dbg !11758
  %tobool310 = icmp ne i64 %and309, 0, !dbg !11758
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !11758

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !11758

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub313 = sub i64 %70, 1, !dbg !11758
  %and314 = and i64 %sub313, 4, !dbg !11758
  %tobool315 = icmp ne i64 %and314, 0, !dbg !11758
  %71 = zext i1 %tobool315 to i64, !dbg !11758
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !11758
  br label %cond.end, !dbg !11758

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !11758
  br label %cond.end317, !dbg !11758

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !11758
  br label %cond.end319, !dbg !11758

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !11758
  br label %cond.end321, !dbg !11758

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !11758
  br label %cond.end323, !dbg !11758

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !11758
  br label %cond.end325, !dbg !11758

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !11758
  br label %cond.end327, !dbg !11758

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !11758
  br label %cond.end329, !dbg !11758

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !11758
  br label %cond.end331, !dbg !11758

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !11758
  br label %cond.end333, !dbg !11758

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !11758
  br label %cond.end335, !dbg !11758

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !11758
  br label %cond.end337, !dbg !11758

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !11758
  br label %cond.end339, !dbg !11758

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !11758
  br label %cond.end341, !dbg !11758

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !11758
  br label %cond.end343, !dbg !11758

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !11758
  br label %cond.end345, !dbg !11758

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !11758
  br label %cond.end347, !dbg !11758

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !11758
  br label %cond.end349, !dbg !11758

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !11758
  br label %cond.end351, !dbg !11758

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !11758
  br label %cond.end353, !dbg !11758

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !11758
  br label %cond.end355, !dbg !11758

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !11758
  br label %cond.end357, !dbg !11758

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !11758
  br label %cond.end359, !dbg !11758

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !11758
  br label %cond.end361, !dbg !11758

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !11758
  br label %cond.end363, !dbg !11758

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !11758
  br label %cond.end365, !dbg !11758

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !11758
  br label %cond.end367, !dbg !11758

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !11758
  br label %cond.end369, !dbg !11758

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !11758
  br label %cond.end371, !dbg !11758

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !11758
  br label %cond.end373, !dbg !11758

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !11758
  br label %cond.end375, !dbg !11758

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !11758
  br label %cond.end377, !dbg !11758

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !11758
  br label %cond.end379, !dbg !11758

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !11758
  br label %cond.end381, !dbg !11758

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !11758
  br label %cond.end383, !dbg !11758

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !11758
  br label %cond.end385, !dbg !11758

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !11758
  br label %cond.end387, !dbg !11758

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !11758
  br label %cond.end389, !dbg !11758

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !11758
  br label %cond.end391, !dbg !11758

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !11758
  br label %cond.end393, !dbg !11758

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !11758
  br label %cond.end395, !dbg !11758

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !11758
  br label %cond.end397, !dbg !11758

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !11758
  br label %cond.end399, !dbg !11758

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !11758
  br label %cond.end401, !dbg !11758

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !11758
  br label %cond.end403, !dbg !11758

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !11758
  br label %cond.end405, !dbg !11758

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !11758
  br label %cond.end407, !dbg !11758

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !11758
  br label %cond.end409, !dbg !11758

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !11758
  br label %cond.end411, !dbg !11758

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !11758
  br label %cond.end413, !dbg !11758

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !11758
  br label %cond.end415, !dbg !11758

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !11758
  br label %cond.end417, !dbg !11758

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !11758
  br label %cond.end419, !dbg !11758

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !11758
  br label %cond.end421, !dbg !11758

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !11758
  br label %cond.end423, !dbg !11758

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !11758
  br label %cond.end425, !dbg !11758

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !11758
  br label %cond.end427, !dbg !11758

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !11758
  br label %cond.end429, !dbg !11758

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !11758
  br label %cond.end431, !dbg !11758

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !11758
  br label %cond.end433, !dbg !11758

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !11758
  br label %cond.end435, !dbg !11758

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !11758
  br label %cond.end437, !dbg !11758

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !11758
  br label %cond.end440, !dbg !11758

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !11758

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !11758
  br label %cond.end444, !dbg !11758

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !11758
  %sub443 = sub i64 %72, 1, !dbg !11758
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !11758
  br label %cond.end444, !dbg !11758

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !11758
  %sub446 = sub i32 %cond445, 12, !dbg !11759
  %add = add i32 %sub446, 1, !dbg !11760
  store i32 %add, i32* %retval, align 4, !dbg !11761
  br label %return, !dbg !11761

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !11762
  %dec = add i64 %73, -1, !dbg !11762
  store i64 %dec, i64* %size.addr, align 8, !dbg !11762
  %74 = load i64, i64* %size.addr, align 8, !dbg !11763
  %shr = lshr i64 %74, 12, !dbg !11763
  store i64 %shr, i64* %size.addr, align 8, !dbg !11763
  %75 = load i64, i64* %size.addr, align 8, !dbg !11764
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11741
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !11765
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !11766
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #5, !dbg !11765, !srcloc !11767
  store i32 %78, i32* %bitpos.i, align 4, !dbg !11765
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !11768
  %add.i = add i32 %79, 1, !dbg !11769
  store i32 %add.i, i32* %retval, align 4, !dbg !11770
  br label %return, !dbg !11770

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !11771
  ret i32 %80, !dbg !11771
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #9 !dbg !11772 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !11733, metadata !DIExpression()), !dbg !11776
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !11740, metadata !DIExpression()), !dbg !11778
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11779, metadata !DIExpression()), !dbg !11780
  %0 = load i64, i64* %n.addr, align 8, !dbg !11781
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !11778
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !11782
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !11783
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #5, !dbg !11782, !srcloc !11767
  store i32 %3, i32* %bitpos.i, align 4, !dbg !11782
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !11784
  %add.i = add i32 %4, 1, !dbg !11785
  %sub = sub i32 %add.i, 1, !dbg !11786
  ret i32 %sub, !dbg !11787
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !11788 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !11792, metadata !DIExpression()), !dbg !11793
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !11794, metadata !DIExpression()), !dbg !11795
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11796, metadata !DIExpression()), !dbg !11797
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11798, metadata !DIExpression()), !dbg !11799
  %0 = load i8*, i8** %object.addr, align 8, !dbg !11800
  ret i8* %0, !dbg !11801
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @set_freezable() #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_to_freeze() #0 !dbg !11802 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !9829, metadata !DIExpression()), !dbg !11804
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !9841, metadata !DIExpression()), !dbg !11807
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !9844, metadata !DIExpression()), !dbg !11808
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !11807
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !11807
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !11808, !srcloc !9993
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !11808
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !11808
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !11808
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !11808
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !11808
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11804
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11804
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !11804
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !11804
  %flags = getelementptr inbounds %struct.task_struct, %struct.task_struct* %6, i32 0, i32 4, !dbg !11809
  %7 = load i32, i32* %flags, align 4, !dbg !11809
  %and = and i32 %7, 32768, !dbg !11810
  %tobool = icmp ne i32 %and, 0, !dbg !11810
  br i1 %tobool, label %if.end, label %if.then, !dbg !11811

if.then:                                          ; preds = %entry
  call void @debug_check_no_locks_held() #10, !dbg !11812
  br label %if.end, !dbg !11812

if.end:                                           ; preds = %if.then, %entry
  %call1 = call zeroext i1 @try_to_freeze_unsafe() #10, !dbg !11813
  ret i1 %call1, !dbg !11814
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @kthread_should_stop() #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @debug_check_no_locks_held() #0 !dbg !11815 {
entry:
  ret void, !dbg !11817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_to_freeze_unsafe() #0 !dbg !11818 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !9829, metadata !DIExpression()), !dbg !11819
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !9841, metadata !DIExpression()), !dbg !11822
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !9844, metadata !DIExpression()), !dbg !11823
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i1, align 1
  br label %do.body, !dbg !11824

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11825

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11827

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !11825

do.end2:                                          ; preds = %do.end
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !11822
  %0 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !11822
  %1 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #14, !dbg !11823, !srcloc !9993
  store i64 %1, i64* %pfo_val__.i, align 8, !dbg !11823
  %2 = load i64, i64* %pfo_val__.i, align 8, !dbg !11823
  %3 = inttoptr i64 %2 to %struct.task_struct*, !dbg !11823
  store %struct.task_struct* %3, %struct.task_struct** %tmp.i, align 8, !dbg !11823
  %4 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !11823
  store %struct.task_struct* %4, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11819
  %5 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11819
  store %struct.task_struct* %5, %struct.task_struct** %tmp1.i, align 8, !dbg !11819
  %6 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !11819
  %call3 = call zeroext i1 @freezing(%struct.task_struct* %6) #10, !dbg !11829
  %lnot = xor i1 %call3, true, !dbg !11829
  %lnot4 = xor i1 %lnot, true, !dbg !11829
  %lnot5 = xor i1 %lnot4, true, !dbg !11829
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !11829
  %conv = sext i32 %lnot.ext to i64, !dbg !11829
  %tobool = icmp ne i64 %conv, 0, !dbg !11829
  br i1 %tobool, label %if.then, label %if.end, !dbg !11830

if.then:                                          ; preds = %do.end2
  store i1 false, i1* %retval, align 1, !dbg !11831
  br label %return, !dbg !11831

if.end:                                           ; preds = %do.end2
  %call6 = call zeroext i1 @__refrigerator(i1 zeroext false) #10, !dbg !11832
  store i1 %call6, i1* %retval, align 1, !dbg !11833
  br label %return, !dbg !11833

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !11834
  ret i1 %7, !dbg !11834
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @freezing(%struct.task_struct* %p) #0 !dbg !11835 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !5249, metadata !DIExpression()), !dbg !11838
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !5262, metadata !DIExpression()), !dbg !11842
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5266, metadata !DIExpression()), !dbg !11844
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !5268, metadata !DIExpression()), !dbg !11845
  %retval = alloca i1, align 1
  %p.addr = alloca %struct.task_struct*, align 8
  store %struct.task_struct* %p, %struct.task_struct** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %p.addr, metadata !11846, metadata !DIExpression()), !dbg !11847
  store %struct.atomic_t* @system_freezing_cnt, %struct.atomic_t** %v.addr.i, align 8
  %0 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11848
  %1 = bitcast %struct.atomic_t* %0 to i8*, !dbg !11848
  store i8* %1, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %2 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11849
  %3 = load i64, i64* %size.addr.i.i, align 8, !dbg !11850
  %conv.i.i = trunc i64 %3 to i32, !dbg !11850
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %2, i32 %conv.i.i) #12, !dbg !11851
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !11852
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !11852
  call void @kcsan_check_access(i8* %4, i64 %5, i32 4) #12, !dbg !11852
  %6 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !11853
  store %struct.atomic_t* %6, %struct.atomic_t** %v.addr.i1.i, align 8
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !11854
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %7, i32 0, i32 0, !dbg !11854
  %8 = load volatile i32, i32* %counter.i.i, align 4, !dbg !11854
  %tobool = icmp ne i32 %8, 0, !dbg !11855
  %lnot = xor i1 %tobool, true, !dbg !11855
  %lnot1 = xor i1 %lnot, true, !dbg !11855
  %lnot2 = xor i1 %lnot1, true, !dbg !11855
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !11855
  %conv = sext i32 %lnot.ext to i64, !dbg !11855
  %tobool3 = icmp ne i64 %conv, 0, !dbg !11855
  br i1 %tobool3, label %if.then, label %if.end, !dbg !11856

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11857
  br label %return, !dbg !11857

if.end:                                           ; preds = %entry
  %9 = load %struct.task_struct*, %struct.task_struct** %p.addr, align 8, !dbg !11858
  %call4 = call zeroext i1 @freezing_slow_path(%struct.task_struct* %9) #10, !dbg !11859
  store i1 %call4, i1* %retval, align 1, !dbg !11860
  br label %return, !dbg !11860

return:                                           ; preds = %if.end, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !11861
  ret i1 %10, !dbg !11861
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @__refrigerator(i1 zeroext) #4

; Function Attrs: noredzone
declare dso_local zeroext i1 @freezing_slow_path(%struct.task_struct*) #4

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { nounwind readnone willreturn }
attributes #8 = { nounwind willreturn }
attributes #9 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noredzone }
attributes #11 = { cold noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4649}
!llvm.module.flags = !{!4650, !4651, !4652, !4653}
!llvm.ident = !{!4654}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_debug", scope: !2, file: !3, line: 35, type: !4646, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !179, globals: !4548, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/media/common/videobuf2/videobuf2-core.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !107, !113, !119, !129, !139, !146, !151, !157, !164, !172}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !94, line: 76, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!96 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "media_entity_type", file: !108, line: 244, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/media/media-entity.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112}
!110 = !DIEnumerator(name: "MEDIA_ENTITY_TYPE_BASE", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "MEDIA_ENTITY_TYPE_VIDEO_DEVICE", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "MEDIA_ENTITY_TYPE_V4L2_SUBDEV", value: 2, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "media_pad_signal_type", file: !108, line: 171, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118}
!115 = !DIEnumerator(name: "PAD_SIGNAL_DEFAULT", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "PAD_SIGNAL_ANALOG", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "PAD_SIGNAL_DV", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "PAD_SIGNAL_AUDIO", value: 3, isUnsigned: true)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "media_request_state", file: !120, line: 37, baseType: !7, size: 32, elements: !121)
!120 = !DIFile(filename: "./include/media/media-request.h", directory: "/home/lizy2001/genbc/linux")
!121 = !{!122, !123, !124, !125, !126, !127, !128}
!122 = !DIEnumerator(name: "MEDIA_REQUEST_STATE_IDLE", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "MEDIA_REQUEST_STATE_VALIDATING", value: 1, isUnsigned: true)
!124 = !DIEnumerator(name: "MEDIA_REQUEST_STATE_QUEUED", value: 2, isUnsigned: true)
!125 = !DIEnumerator(name: "MEDIA_REQUEST_STATE_COMPLETE", value: 3, isUnsigned: true)
!126 = !DIEnumerator(name: "MEDIA_REQUEST_STATE_CLEANING", value: 4, isUnsigned: true)
!127 = !DIEnumerator(name: "MEDIA_REQUEST_STATE_UPDATING", value: 5, isUnsigned: true)
!128 = !DIEnumerator(name: "NR_OF_MEDIA_REQUEST_STATE", value: 6, isUnsigned: true)
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vb2_buffer_state", file: !130, line: 219, baseType: !7, size: 32, elements: !131)
!130 = !DIFile(filename: "./include/media/videobuf2-core.h", directory: "/home/lizy2001/genbc/linux")
!131 = !{!132, !133, !134, !135, !136, !137, !138}
!132 = !DIEnumerator(name: "VB2_BUF_STATE_DEQUEUED", value: 0, isUnsigned: true)
!133 = !DIEnumerator(name: "VB2_BUF_STATE_IN_REQUEST", value: 1, isUnsigned: true)
!134 = !DIEnumerator(name: "VB2_BUF_STATE_PREPARING", value: 2, isUnsigned: true)
!135 = !DIEnumerator(name: "VB2_BUF_STATE_QUEUED", value: 3, isUnsigned: true)
!136 = !DIEnumerator(name: "VB2_BUF_STATE_ACTIVE", value: 4, isUnsigned: true)
!137 = !DIEnumerator(name: "VB2_BUF_STATE_DONE", value: 5, isUnsigned: true)
!138 = !DIEnumerator(name: "VB2_BUF_STATE_ERROR", value: 6, isUnsigned: true)
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !140, line: 5, baseType: !7, size: 32, elements: !141)
!140 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!141 = !{!142, !143, !144, !145}
!142 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!145 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 10, baseType: !7, size: 32, elements: !148)
!147 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!148 = !{!149, !150}
!149 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vb2_memory", file: !130, line: 39, baseType: !7, size: 32, elements: !152)
!152 = !{!153, !154, !155, !156}
!153 = !DIEnumerator(name: "VB2_MEMORY_UNKNOWN", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "VB2_MEMORY_MMAP", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "VB2_MEMORY_USERPTR", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "VB2_MEMORY_DMABUF", value: 4, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "vb2_io_modes", file: !130, line: 197, baseType: !7, size: 32, elements: !158)
!158 = !{!159, !160, !161, !162, !163}
!159 = !DIEnumerator(name: "VB2_MMAP", value: 1, isUnsigned: true)
!160 = !DIEnumerator(name: "VB2_USERPTR", value: 2, isUnsigned: true)
!161 = !DIEnumerator(name: "VB2_READ", value: 4, isUnsigned: true)
!162 = !DIEnumerator(name: "VB2_WRITE", value: 8, isUnsigned: true)
!163 = !DIEnumerator(name: "VB2_DMABUF", value: 16, isUnsigned: true)
!164 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !165, line: 119, baseType: !7, size: 32, elements: !166)
!165 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!166 = !{!167, !168, !169, !170, !171}
!167 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!168 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!169 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!170 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!171 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !173, line: 305, baseType: !7, size: 32, elements: !174)
!173 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!174 = !{!175, !176, !177, !178}
!175 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!176 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!177 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!178 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!179 = !{!7, !180, !181, !4515, !2900, !259, !732, !309, !243, !4538, !4540, !4543, !4544, !294, !4546, !4547, !1205}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vb2_buffer", file: !130, line: 245, size: 4096, elements: !183)
!183 = !{!184, !4286, !4287, !4288, !4289, !4290, !4291, !4503, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4536, !4537}
!184 = !DIDerivedType(tag: DW_TAG_member, name: "vb2_queue", scope: !182, file: !130, line: 246, baseType: !185, size: 64)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vb2_queue", file: !130, line: 567, size: 4608, elements: !187)
!187 = !{!188, !189, !190, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3942, !3943, !3976, !4185, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4231, !4232, !4233, !4234, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4273, !4285}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !186, file: !130, line: 568, baseType: !7, size: 32)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "io_modes", scope: !186, file: !130, line: 569, baseType: !7, size: 32, offset: 32)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !186, file: !130, line: 570, baseType: !191, size: 64, offset: 64)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !193)
!193 = !{!194, !3383, !3384, !3387, !3388, !3439, !3530, !3531, !3532, !3533, !3534, !3543, !3648, !3661, !3856, !3857, !3861, !3863, !3864, !3865, !3869, !3875, !3876, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3917, !3918, !3919, !3922, !3925, !3926, !3927, !3928}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !192, file: !73, line: 462, baseType: !195, size: 512)
!195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !196, line: 64, size: 512, elements: !197)
!196 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!197 = !{!198, !202, !209, !211, !272, !3234, !3373, !3378, !3379, !3380, !3381, !3382}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !195, file: !196, line: 65, baseType: !199, size: 64)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !201)
!201 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !195, file: !196, line: 66, baseType: !203, size: 128, offset: 64)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !204, line: 178, size: 128, elements: !205)
!204 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!205 = !{!206, !208}
!206 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !203, file: !204, line: 179, baseType: !207, size: 64)
!207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !203, file: !204, line: 179, baseType: !207, size: 64, offset: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !195, file: !196, line: 67, baseType: !210, size: 64, offset: 192)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !195, file: !196, line: 68, baseType: !212, size: 64, offset: 256)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !196, line: 192, size: 704, elements: !214)
!214 = !{!215, !216, !232, !233}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !213, file: !196, line: 193, baseType: !203, size: 128)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !213, file: !196, line: 194, baseType: !217, offset: 128)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !218, line: 83, baseType: !219)
!218 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !218, line: 71, elements: !220)
!220 = !{!221}
!221 = !DIDerivedType(tag: DW_TAG_member, scope: !219, file: !218, line: 72, baseType: !222)
!222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !219, file: !218, line: 72, elements: !223)
!223 = !{!224}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !222, file: !218, line: 73, baseType: !225)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !218, line: 20, elements: !226)
!226 = !{!227}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !225, file: !218, line: 21, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !229, line: 25, baseType: !230)
!229 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !229, line: 25, elements: !231)
!231 = !{}
!232 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !213, file: !196, line: 195, baseType: !195, size: 512, offset: 128)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !213, file: !196, line: 196, baseType: !234, size: 64, offset: 640)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !236)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !196, line: 156, size: 192, elements: !237)
!237 = !{!238, !244, !249}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !236, file: !196, line: 157, baseType: !239, size: 64)
!239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!241 = !DISubroutineType(types: !242)
!242 = !{!243, !212, !210}
!243 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !236, file: !196, line: 158, baseType: !245, size: 64, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !246)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DISubroutineType(types: !248)
!248 = !{!199, !212, !210}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !236, file: !196, line: 159, baseType: !250, size: 64, offset: 128)
!250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !251)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = !DISubroutineType(types: !253)
!253 = !{!243, !212, !210, !254}
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !196, line: 148, size: 20736, elements: !256)
!256 = !{!257, !262, !266, !267, !271}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !255, file: !196, line: 149, baseType: !258, size: 192)
!258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !259, size: 192, elements: !260)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!260 = !{!261}
!261 = !DISubrange(count: 3)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !255, file: !196, line: 150, baseType: !263, size: 4096, offset: 192)
!263 = !DICompositeType(tag: DW_TAG_array_type, baseType: !259, size: 4096, elements: !264)
!264 = !{!265}
!265 = !DISubrange(count: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !255, file: !196, line: 151, baseType: !243, size: 32, offset: 4288)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !255, file: !196, line: 152, baseType: !268, size: 16384, offset: 4320)
!268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 16384, elements: !269)
!269 = !{!270}
!270 = !DISubrange(count: 2048)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !255, file: !196, line: 153, baseType: !243, size: 32, offset: 20704)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !195, file: !196, line: 69, baseType: !273, size: 64, offset: 320)
!273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 64)
!274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !196, line: 138, size: 448, elements: !275)
!275 = !{!276, !280, !310, !312, !3196, !3224, !3228}
!276 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !274, file: !196, line: 139, baseType: !277, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DISubroutineType(types: !279)
!279 = !{null, !210}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !274, file: !196, line: 140, baseType: !281, size: 64, offset: 64)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !284, line: 230, size: 128, elements: !285)
!284 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!285 = !{!286, !302}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !283, file: !284, line: 231, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DISubroutineType(types: !289)
!289 = !{!290, !210, !295, !259}
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !204, line: 60, baseType: !291)
!291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !292, line: 73, baseType: !293)
!292 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!293 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !292, line: 15, baseType: !294)
!294 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !284, line: 30, size: 128, elements: !297)
!297 = !{!298, !299}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !296, file: !284, line: 31, baseType: !199, size: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !296, file: !284, line: 32, baseType: !300, size: 16, offset: 64)
!300 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !204, line: 19, baseType: !301)
!301 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !283, file: !284, line: 232, baseType: !303, size: 64, offset: 64)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DISubroutineType(types: !305)
!305 = !{!290, !210, !295, !199, !306}
!306 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !204, line: 55, baseType: !307)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !292, line: 72, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !292, line: 16, baseType: !309)
!309 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!310 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !274, file: !196, line: 141, baseType: !311, size: 64, offset: 128)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !274, file: !196, line: 142, baseType: !313, size: 64, offset: 192)
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !284, line: 84, size: 320, elements: !317)
!317 = !{!318, !319, !323, !3193, !3194}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !316, file: !284, line: 85, baseType: !199, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !316, file: !284, line: 86, baseType: !320, size: 64, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!300, !210, !295, !243}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !316, file: !284, line: 88, baseType: !324, size: 64, offset: 128)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = !DISubroutineType(types: !326)
!326 = !{!300, !210, !327, !243}
!327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !284, line: 168, size: 448, elements: !329)
!329 = !{!330, !331, !332, !333, !3188, !3189}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !328, file: !284, line: 169, baseType: !296, size: 128)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !328, file: !284, line: 170, baseType: !306, size: 64, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !328, file: !284, line: 171, baseType: !180, size: 64, offset: 192)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !328, file: !284, line: 172, baseType: !334, size: 64, offset: 256)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = !DISubroutineType(types: !336)
!336 = !{!290, !337, !210, !327, !259, !516, !306}
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !339)
!339 = !{!340, !358, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3171, !3172, !3181, !3182, !3183, !3184, !3185, !3186, !3187}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !338, file: !44, line: 920, baseType: !341, size: 128)
!341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !338, file: !44, line: 917, size: 128, elements: !342)
!342 = !{!343, !349}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !341, file: !44, line: 918, baseType: !344, size: 64)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !345, line: 58, size: 64, elements: !346)
!345 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!346 = !{!347}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !344, file: !345, line: 59, baseType: !348, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !341, file: !44, line: 919, baseType: !350, size: 128, align: 64)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !204, line: 216, size: 128, align: 64, elements: !351)
!351 = !{!352, !354}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !350, file: !204, line: 217, baseType: !353, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !350, file: !204, line: 218, baseType: !355, size: 64, offset: 64)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = !DISubroutineType(types: !357)
!357 = !{null, !353}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !338, file: !44, line: 921, baseType: !359, size: 128, offset: 128)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !360, line: 8, size: 128, elements: !361)
!360 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!361 = !{!362, !366}
!362 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !359, file: !360, line: 9, baseType: !363, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !365, line: 18, flags: DIFlagFwdDecl)
!365 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!366 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !359, file: !360, line: 10, baseType: !367, size: 64, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !365, line: 89, size: 1536, elements: !369)
!369 = !{!370, !371, !381, !389, !390, !413, !3122, !3124, !3136, !3137, !3138, !3139, !3140, !3145, !3146, !3147}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !368, file: !365, line: 91, baseType: !7, size: 32)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !368, file: !365, line: 92, baseType: !372, size: 32, offset: 32)
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !373, line: 277, baseType: !374)
!373 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !373, line: 277, size: 32, elements: !375)
!375 = !{!376}
!376 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !374, file: !373, line: 277, baseType: !377, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !373, line: 70, baseType: !378)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !373, line: 65, size: 32, elements: !379)
!379 = !{!380}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !378, file: !373, line: 66, baseType: !7, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !368, file: !365, line: 93, baseType: !382, size: 128, offset: 64)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !383, line: 38, size: 128, elements: !384)
!383 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!384 = !{!385, !387}
!385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !382, file: !383, line: 39, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !382, file: !383, line: 39, baseType: !388, size: 64, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !368, file: !365, line: 94, baseType: !367, size: 64, offset: 192)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !368, file: !365, line: 95, baseType: !391, size: 128, offset: 256)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !365, line: 47, size: 128, elements: !392)
!392 = !{!393, !409}
!393 = !DIDerivedType(tag: DW_TAG_member, scope: !391, file: !365, line: 48, baseType: !394, size: 64)
!394 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !391, file: !365, line: 48, size: 64, elements: !395)
!395 = !{!396, !405}
!396 = !DIDerivedType(tag: DW_TAG_member, scope: !394, file: !365, line: 49, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !394, file: !365, line: 49, size: 64, elements: !398)
!398 = !{!399, !404}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !397, file: !365, line: 50, baseType: !400, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !401, line: 21, baseType: !402)
!401 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !403, line: 27, baseType: !7)
!403 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!404 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !397, file: !365, line: 50, baseType: !400, size: 32, offset: 32)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !394, file: !365, line: 52, baseType: !406, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !401, line: 23, baseType: !407)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !403, line: 31, baseType: !408)
!408 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !391, file: !365, line: 54, baseType: !410, size: 64, offset: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !412)
!412 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !368, file: !365, line: 96, baseType: !414, size: 64, offset: 384)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !416)
!416 = !{!417, !418, !419, !427, !434, !435, !583, !2816, !2817, !2818, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !3090, !3098, !3099, !3100, !3118, !3119, !3120, !3121}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !415, file: !44, line: 611, baseType: !300, size: 16)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !415, file: !44, line: 612, baseType: !301, size: 16, offset: 16)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !415, file: !44, line: 613, baseType: !420, size: 32, offset: 32)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !421, line: 23, baseType: !422)
!421 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !421, line: 21, size: 32, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !422, file: !421, line: 22, baseType: !425, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !204, line: 32, baseType: !426)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !292, line: 49, baseType: !7)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !415, file: !44, line: 614, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !421, line: 28, baseType: !429)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !421, line: 26, size: 32, elements: !430)
!430 = !{!431}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !429, file: !421, line: 27, baseType: !432, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !204, line: 33, baseType: !433)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !292, line: 50, baseType: !7)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !415, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !415, file: !44, line: 622, baseType: !436, size: 64, offset: 128)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !438)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !439)
!439 = !{!440, !444, !457, !461, !467, !471, !477, !481, !485, !489, !493, !494, !500, !504, !530, !559, !563, !569, !574, !578, !579}
!440 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !438, file: !44, line: 1865, baseType: !441, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DISubroutineType(types: !443)
!443 = !{!367, !414, !367, !7}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !438, file: !44, line: 1866, baseType: !445, size: 64, offset: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DISubroutineType(types: !447)
!447 = !{!199, !367, !414, !448}
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !450, line: 10, size: 128, elements: !451)
!450 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!451 = !{!452, !456}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !449, file: !450, line: 11, baseType: !453, size: 64)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !180}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !449, file: !450, line: 12, baseType: !180, size: 64, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !438, file: !44, line: 1867, baseType: !458, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DISubroutineType(types: !460)
!460 = !{!243, !414, !243}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !438, file: !44, line: 1868, baseType: !462, size: 64, offset: 192)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{!465, !414, !243}
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !438, file: !44, line: 1870, baseType: !468, size: 64, offset: 256)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{!243, !367, !259, !243}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !438, file: !44, line: 1872, baseType: !472, size: 64, offset: 320)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DISubroutineType(types: !474)
!474 = !{!243, !414, !367, !300, !475}
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !204, line: 30, baseType: !476)
!476 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !438, file: !44, line: 1873, baseType: !478, size: 64, offset: 384)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DISubroutineType(types: !480)
!480 = !{!243, !367, !414, !367}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !438, file: !44, line: 1874, baseType: !482, size: 64, offset: 448)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DISubroutineType(types: !484)
!484 = !{!243, !414, !367}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !438, file: !44, line: 1875, baseType: !486, size: 64, offset: 512)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = !DISubroutineType(types: !488)
!488 = !{!243, !414, !367, !199}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !438, file: !44, line: 1876, baseType: !490, size: 64, offset: 576)
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !491, size: 64)
!491 = !DISubroutineType(types: !492)
!492 = !{!243, !414, !367, !300}
!493 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !438, file: !44, line: 1877, baseType: !482, size: 64, offset: 640)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !438, file: !44, line: 1878, baseType: !495, size: 64, offset: 704)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DISubroutineType(types: !497)
!497 = !{!243, !414, !367, !300, !498}
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !204, line: 16, baseType: !499)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !204, line: 13, baseType: !400)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !438, file: !44, line: 1879, baseType: !501, size: 64, offset: 768)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = !DISubroutineType(types: !503)
!503 = !{!243, !414, !367, !414, !367, !7}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !438, file: !44, line: 1881, baseType: !505, size: 64, offset: 832)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = !DISubroutineType(types: !507)
!507 = !{!243, !367, !508}
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !510)
!510 = !{!511, !512, !513, !514, !515, !519, !527, !528, !529}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !509, file: !44, line: 220, baseType: !7, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !509, file: !44, line: 221, baseType: !300, size: 16, offset: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !509, file: !44, line: 222, baseType: !420, size: 32, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !509, file: !44, line: 223, baseType: !428, size: 32, offset: 96)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !509, file: !44, line: 224, baseType: !516, size: 64, offset: 128)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !204, line: 46, baseType: !517)
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !292, line: 88, baseType: !518)
!518 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !509, file: !44, line: 225, baseType: !520, size: 128, offset: 192)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !521, line: 13, size: 128, elements: !522)
!521 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!522 = !{!523, !526}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !520, file: !521, line: 14, baseType: !524, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !521, line: 8, baseType: !525)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !403, line: 30, baseType: !518)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !520, file: !521, line: 15, baseType: !294, size: 64, offset: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !509, file: !44, line: 226, baseType: !520, size: 128, offset: 320)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !509, file: !44, line: 227, baseType: !520, size: 128, offset: 448)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !509, file: !44, line: 234, baseType: !337, size: 64, offset: 576)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !438, file: !44, line: 1882, baseType: !531, size: 64, offset: 896)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DISubroutineType(types: !533)
!533 = !{!243, !534, !536, !400, !7}
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !359)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !538, line: 22, size: 1152, elements: !539)
!538 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!539 = !{!540, !541, !542, !543, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !537, file: !538, line: 23, baseType: !400, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !537, file: !538, line: 24, baseType: !300, size: 16, offset: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !537, file: !538, line: 25, baseType: !7, size: 32, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !537, file: !538, line: 26, baseType: !544, size: 32, offset: 96)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !204, line: 104, baseType: !400)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !537, file: !538, line: 27, baseType: !406, size: 64, offset: 128)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !537, file: !538, line: 28, baseType: !406, size: 64, offset: 192)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !537, file: !538, line: 37, baseType: !406, size: 64, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !537, file: !538, line: 38, baseType: !498, size: 32, offset: 320)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !537, file: !538, line: 39, baseType: !498, size: 32, offset: 352)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !537, file: !538, line: 40, baseType: !420, size: 32, offset: 384)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !537, file: !538, line: 41, baseType: !428, size: 32, offset: 416)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !537, file: !538, line: 42, baseType: !516, size: 64, offset: 448)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !537, file: !538, line: 43, baseType: !520, size: 128, offset: 512)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !537, file: !538, line: 44, baseType: !520, size: 128, offset: 640)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !537, file: !538, line: 45, baseType: !520, size: 128, offset: 768)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !537, file: !538, line: 46, baseType: !520, size: 128, offset: 896)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !537, file: !538, line: 47, baseType: !406, size: 64, offset: 1024)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !537, file: !538, line: 48, baseType: !406, size: 64, offset: 1088)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !438, file: !44, line: 1883, baseType: !560, size: 64, offset: 960)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = !DISubroutineType(types: !562)
!562 = !{!290, !367, !259, !306}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !438, file: !44, line: 1884, baseType: !564, size: 64, offset: 1024)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!565 = !DISubroutineType(types: !566)
!566 = !{!243, !414, !567, !406, !406}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !438, file: !44, line: 1886, baseType: !570, size: 64, offset: 1088)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DISubroutineType(types: !572)
!572 = !{!243, !414, !573, !243}
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !438, file: !44, line: 1887, baseType: !575, size: 64, offset: 1152)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DISubroutineType(types: !577)
!577 = !{!243, !414, !367, !337, !7, !300}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !438, file: !44, line: 1890, baseType: !490, size: 64, offset: 1216)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !438, file: !44, line: 1891, baseType: !580, size: 64, offset: 1280)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!243, !414, !465, !243}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !415, file: !44, line: 623, baseType: !584, size: 64, offset: 192)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !586)
!586 = !{!587, !588, !589, !590, !591, !592, !642, !2423, !2505, !2588, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2604, !2608, !2609, !2612, !2613, !2616, !2617, !2618, !2659, !2686, !2687, !2688, !2689, !2690, !2691, !2694, !2696, !2703, !2704, !2706, !2707, !2708, !2767, !2768, !2783, !2784, !2785, !2786, !2787, !2790, !2791, !2792, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !585, file: !44, line: 1417, baseType: !203, size: 128)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !585, file: !44, line: 1418, baseType: !498, size: 32, offset: 128)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !585, file: !44, line: 1419, baseType: !412, size: 8, offset: 160)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !585, file: !44, line: 1420, baseType: !309, size: 64, offset: 192)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !585, file: !44, line: 1421, baseType: !516, size: 64, offset: 256)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !585, file: !44, line: 1422, baseType: !593, size: 64, offset: 320)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !595)
!595 = !{!596, !597, !598, !605, !609, !613, !617, !621, !622, !632, !635, !636, !637, !639, !640, !641}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !594, file: !44, line: 2229, baseType: !199, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !594, file: !44, line: 2230, baseType: !243, size: 32, offset: 64)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !594, file: !44, line: 2238, baseType: !599, size: 64, offset: 128)
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = !DISubroutineType(types: !601)
!601 = !{!243, !602}
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !604, line: 28, flags: DIFlagFwdDecl)
!604 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!605 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !594, file: !44, line: 2239, baseType: !606, size: 64, offset: 192)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !608)
!608 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !594, file: !44, line: 2240, baseType: !610, size: 64, offset: 256)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DISubroutineType(types: !612)
!612 = !{!367, !593, !243, !199, !180}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !594, file: !44, line: 2242, baseType: !614, size: 64, offset: 320)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DISubroutineType(types: !616)
!616 = !{null, !584}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !594, file: !44, line: 2243, baseType: !618, size: 64, offset: 384)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !620, line: 76, flags: DIFlagFwdDecl)
!620 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!621 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !594, file: !44, line: 2244, baseType: !593, size: 64, offset: 448)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !594, file: !44, line: 2245, baseType: !623, size: 64, offset: 512)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !204, line: 182, size: 64, elements: !624)
!624 = !{!625}
!625 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !623, file: !204, line: 183, baseType: !626, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !204, line: 186, size: 128, elements: !628)
!628 = !{!629, !630}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !627, file: !204, line: 187, baseType: !626, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !627, file: !204, line: 187, baseType: !631, size: 64, offset: 64)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !594, file: !44, line: 2247, baseType: !633, offset: 576)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !634, line: 187, elements: !231)
!634 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!635 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !594, file: !44, line: 2248, baseType: !633, offset: 576)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !594, file: !44, line: 2249, baseType: !633, offset: 576)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !594, file: !44, line: 2250, baseType: !638, offset: 576)
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !633, elements: !260)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !594, file: !44, line: 2252, baseType: !633, offset: 576)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !594, file: !44, line: 2253, baseType: !633, offset: 576)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !594, file: !44, line: 2254, baseType: !633, offset: 576)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !585, file: !44, line: 1423, baseType: !643, size: 64, offset: 384)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !645)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !646)
!646 = !{!647, !651, !655, !656, !660, !666, !670, !671, !672, !676, !680, !681, !682, !683, !689, !694, !695, !702, !703, !704, !705, !2407, !2422}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !645, file: !44, line: 1936, baseType: !648, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DISubroutineType(types: !650)
!650 = !{!414, !584}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !645, file: !44, line: 1937, baseType: !652, size: 64, offset: 64)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DISubroutineType(types: !654)
!654 = !{null, !414}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !645, file: !44, line: 1938, baseType: !652, size: 64, offset: 128)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !645, file: !44, line: 1940, baseType: !657, size: 64, offset: 192)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DISubroutineType(types: !659)
!659 = !{null, !414, !243}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !645, file: !44, line: 1941, baseType: !661, size: 64, offset: 256)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DISubroutineType(types: !663)
!663 = !{!243, !414, !664}
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !645, file: !44, line: 1942, baseType: !667, size: 64, offset: 320)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = !DISubroutineType(types: !669)
!669 = !{!243, !414}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !645, file: !44, line: 1943, baseType: !652, size: 64, offset: 384)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !645, file: !44, line: 1944, baseType: !614, size: 64, offset: 448)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !645, file: !44, line: 1945, baseType: !673, size: 64, offset: 512)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DISubroutineType(types: !675)
!675 = !{!243, !584, !243}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !645, file: !44, line: 1946, baseType: !677, size: 64, offset: 576)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{!243, !584}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !645, file: !44, line: 1947, baseType: !677, size: 64, offset: 640)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !645, file: !44, line: 1948, baseType: !677, size: 64, offset: 704)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !645, file: !44, line: 1949, baseType: !677, size: 64, offset: 768)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !645, file: !44, line: 1950, baseType: !684, size: 64, offset: 832)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DISubroutineType(types: !686)
!686 = !{!243, !367, !687}
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !645, file: !44, line: 1951, baseType: !690, size: 64, offset: 896)
!690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !691, size: 64)
!691 = !DISubroutineType(types: !692)
!692 = !{!243, !584, !693, !259}
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !645, file: !44, line: 1952, baseType: !614, size: 64, offset: 960)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !645, file: !44, line: 1954, baseType: !696, size: 64, offset: 1024)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = !DISubroutineType(types: !698)
!698 = !{!243, !699, !367}
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !701, line: 539, flags: DIFlagFwdDecl)
!701 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!702 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !645, file: !44, line: 1955, baseType: !696, size: 64, offset: 1088)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !645, file: !44, line: 1956, baseType: !696, size: 64, offset: 1152)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !645, file: !44, line: 1957, baseType: !696, size: 64, offset: 1216)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !645, file: !44, line: 1963, baseType: !706, size: 64, offset: 1280)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = !DISubroutineType(types: !708)
!708 = !{!243, !584, !709, !732}
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !711, line: 68, size: 512, align: 128, elements: !712)
!711 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!712 = !{!713, !714, !2399, !2406}
!713 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !710, file: !711, line: 69, baseType: !309, size: 64)
!714 = !DIDerivedType(tag: DW_TAG_member, scope: !710, file: !711, line: 77, baseType: !715, size: 320, offset: 64)
!715 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !710, file: !711, line: 77, size: 320, elements: !716)
!716 = !{!717, !905, !910, !938, !946, !952, !2330, !2398}
!717 = !DIDerivedType(tag: DW_TAG_member, scope: !715, file: !711, line: 78, baseType: !718, size: 320)
!718 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !715, file: !711, line: 78, size: 320, elements: !719)
!719 = !{!720, !721, !903, !904}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !718, file: !711, line: 84, baseType: !203, size: 128)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !718, file: !711, line: 86, baseType: !722, size: 64, offset: 128)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !724)
!724 = !{!725, !726, !734, !735, !740, !755, !771, !772, !773, !774, !896, !897, !900, !901, !902}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !723, file: !44, line: 452, baseType: !414, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !723, file: !44, line: 453, baseType: !727, size: 128, offset: 64)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !728, line: 292, size: 128, elements: !729)
!728 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!729 = !{!730, !731, !733}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !727, file: !728, line: 293, baseType: !217)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !727, file: !728, line: 295, baseType: !732, size: 32)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !204, line: 148, baseType: !7)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !727, file: !728, line: 296, baseType: !180, size: 64, offset: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !723, file: !44, line: 454, baseType: !732, size: 32, offset: 192)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !723, file: !44, line: 455, baseType: !736, size: 32, offset: 224)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !204, line: 168, baseType: !737)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !204, line: 166, size: 32, elements: !738)
!738 = !{!739}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !737, file: !204, line: 167, baseType: !243, size: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !723, file: !44, line: 460, baseType: !741, size: 128, offset: 256)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !742, line: 125, size: 128, elements: !743)
!742 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!743 = !{!744, !754}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !741, file: !742, line: 126, baseType: !745, size: 64)
!745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !742, line: 31, size: 64, elements: !746)
!746 = !{!747}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !745, file: !742, line: 32, baseType: !748, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !742, line: 24, size: 192, align: 64, elements: !750)
!750 = !{!751, !752, !753}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !749, file: !742, line: 25, baseType: !309, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !749, file: !742, line: 26, baseType: !748, size: 64, offset: 64)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !749, file: !742, line: 27, baseType: !748, size: 64, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !741, file: !742, line: 127, baseType: !748, size: 64, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !723, file: !44, line: 461, baseType: !756, size: 256, offset: 384)
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !757, line: 35, size: 256, elements: !758)
!757 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!758 = !{!759, !767, !768, !770}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !756, file: !757, line: 36, baseType: !760, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !761, line: 13, baseType: !762)
!761 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !204, line: 175, baseType: !763)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !204, line: 173, size: 64, elements: !764)
!764 = !{!765}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !763, file: !204, line: 174, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !401, line: 22, baseType: !525)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !756, file: !757, line: 42, baseType: !760, size: 64, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !756, file: !757, line: 46, baseType: !769, offset: 128)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !218, line: 29, baseType: !225)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !756, file: !757, line: 47, baseType: !203, size: 128, offset: 128)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !723, file: !44, line: 462, baseType: !309, size: 64, offset: 640)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !723, file: !44, line: 463, baseType: !309, size: 64, offset: 704)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !723, file: !44, line: 464, baseType: !309, size: 64, offset: 768)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !723, file: !44, line: 465, baseType: !775, size: 64, offset: 832)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !778)
!778 = !{!779, !783, !787, !791, !795, !799, !805, !811, !815, !820, !824, !828, !832, !860, !864, !870, !871, !872, !876, !881, !885, !892}
!779 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !777, file: !44, line: 368, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!243, !709, !664}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !777, file: !44, line: 369, baseType: !784, size: 64, offset: 64)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DISubroutineType(types: !786)
!786 = !{!243, !337, !709}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !777, file: !44, line: 372, baseType: !788, size: 64, offset: 128)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{!243, !722, !664}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !777, file: !44, line: 375, baseType: !792, size: 64, offset: 192)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DISubroutineType(types: !794)
!794 = !{!243, !709}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !777, file: !44, line: 381, baseType: !796, size: 64, offset: 256)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DISubroutineType(types: !798)
!798 = !{!243, !337, !722, !207, !7}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !777, file: !44, line: 383, baseType: !800, size: 64, offset: 320)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DISubroutineType(types: !802)
!802 = !{null, !803}
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !777, file: !44, line: 385, baseType: !806, size: 64, offset: 384)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!243, !337, !722, !516, !7, !7, !809, !810}
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !777, file: !44, line: 388, baseType: !812, size: 64, offset: 448)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DISubroutineType(types: !814)
!814 = !{!243, !337, !722, !516, !7, !7, !709, !180}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !777, file: !44, line: 393, baseType: !816, size: 64, offset: 512)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DISubroutineType(types: !818)
!818 = !{!819, !722, !819}
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !204, line: 125, baseType: !406)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !777, file: !44, line: 394, baseType: !821, size: 64, offset: 576)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DISubroutineType(types: !823)
!823 = !{null, !709, !7, !7}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !777, file: !44, line: 395, baseType: !825, size: 64, offset: 640)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{!243, !709, !732}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !777, file: !44, line: 396, baseType: !829, size: 64, offset: 704)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{null, !709}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !777, file: !44, line: 397, baseType: !833, size: 64, offset: 768)
!833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !834, size: 64)
!834 = !DISubroutineType(types: !835)
!835 = !{!290, !836, !858}
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !838)
!838 = !{!839, !840, !841, !845, !846, !847, !850, !851}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !837, file: !44, line: 321, baseType: !337, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !837, file: !44, line: 326, baseType: !516, size: 64, offset: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !837, file: !44, line: 327, baseType: !842, size: 64, offset: 128)
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DISubroutineType(types: !844)
!844 = !{null, !836, !294, !294}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !837, file: !44, line: 328, baseType: !180, size: 64, offset: 192)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !837, file: !44, line: 329, baseType: !243, size: 32, offset: 256)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !837, file: !44, line: 330, baseType: !848, size: 16, offset: 288)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !401, line: 19, baseType: !849)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !403, line: 24, baseType: !301)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !837, file: !44, line: 331, baseType: !848, size: 16, offset: 304)
!851 = !DIDerivedType(tag: DW_TAG_member, scope: !837, file: !44, line: 332, baseType: !852, size: 64, offset: 320)
!852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !837, file: !44, line: 332, size: 64, elements: !853)
!853 = !{!854, !855}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !852, file: !44, line: 333, baseType: !7, size: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !852, file: !44, line: 334, baseType: !856, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !44, line: 64, flags: DIFlagFwdDecl)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !777, file: !44, line: 402, baseType: !861, size: 64, offset: 832)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DISubroutineType(types: !863)
!863 = !{!243, !722, !709, !709, !5}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !777, file: !44, line: 404, baseType: !865, size: 64, offset: 896)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!475, !709, !868}
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !869, line: 305, baseType: !7)
!869 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!870 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !777, file: !44, line: 405, baseType: !829, size: 64, offset: 960)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !777, file: !44, line: 406, baseType: !792, size: 64, offset: 1024)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !777, file: !44, line: 407, baseType: !873, size: 64, offset: 1088)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DISubroutineType(types: !875)
!875 = !{!243, !709, !309, !309}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !777, file: !44, line: 409, baseType: !877, size: 64, offset: 1152)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = !DISubroutineType(types: !879)
!879 = !{null, !709, !880, !880}
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !777, file: !44, line: 410, baseType: !882, size: 64, offset: 1216)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{!243, !722, !709}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !777, file: !44, line: 413, baseType: !886, size: 64, offset: 1280)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!243, !889, !337, !891}
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !777, file: !44, line: 415, baseType: !893, size: 64, offset: 1344)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{null, !337}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !723, file: !44, line: 466, baseType: !309, size: 64, offset: 896)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !723, file: !44, line: 467, baseType: !898, size: 32, offset: 960)
!898 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !899, line: 8, baseType: !400)
!899 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!900 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !723, file: !44, line: 468, baseType: !217, offset: 992)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !723, file: !44, line: 469, baseType: !203, size: 128, offset: 1024)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !723, file: !44, line: 470, baseType: !180, size: 64, offset: 1152)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !718, file: !711, line: 87, baseType: !309, size: 64, offset: 192)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !718, file: !711, line: 94, baseType: !309, size: 64, offset: 256)
!905 = !DIDerivedType(tag: DW_TAG_member, scope: !715, file: !711, line: 96, baseType: !906, size: 64)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !715, file: !711, line: 96, size: 64, elements: !907)
!907 = !{!908}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !906, file: !711, line: 101, baseType: !909, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !204, line: 143, baseType: !406)
!910 = !DIDerivedType(tag: DW_TAG_member, scope: !715, file: !711, line: 103, baseType: !911, size: 320)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !715, file: !711, line: 103, size: 320, elements: !912)
!912 = !{!913, !923, !926, !927}
!913 = !DIDerivedType(tag: DW_TAG_member, scope: !911, file: !711, line: 104, baseType: !914, size: 128)
!914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !911, file: !711, line: 104, size: 128, elements: !915)
!915 = !{!916, !917}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !914, file: !711, line: 105, baseType: !203, size: 128)
!917 = !DIDerivedType(tag: DW_TAG_member, scope: !914, file: !711, line: 106, baseType: !918, size: 128)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !914, file: !711, line: 106, size: 128, elements: !919)
!919 = !{!920, !921, !922}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !918, file: !711, line: 107, baseType: !709, size: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !918, file: !711, line: 109, baseType: !243, size: 32, offset: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !918, file: !711, line: 110, baseType: !243, size: 32, offset: 96)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !911, file: !711, line: 117, baseType: !924, size: 64, offset: 128)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !711, line: 117, flags: DIFlagFwdDecl)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !911, file: !711, line: 119, baseType: !180, size: 64, offset: 192)
!927 = !DIDerivedType(tag: DW_TAG_member, scope: !911, file: !711, line: 120, baseType: !928, size: 64, offset: 256)
!928 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !911, file: !711, line: 120, size: 64, elements: !929)
!929 = !{!930, !931, !932}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !928, file: !711, line: 121, baseType: !180, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !928, file: !711, line: 122, baseType: !309, size: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, scope: !928, file: !711, line: 123, baseType: !933, size: 32)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !928, file: !711, line: 123, size: 32, elements: !934)
!934 = !{!935, !936, !937}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !933, file: !711, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !933, file: !711, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !933, file: !711, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, scope: !715, file: !711, line: 130, baseType: !939, size: 192)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !715, file: !711, line: 130, size: 192, elements: !940)
!940 = !{!941, !942, !943, !944, !945}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !939, file: !711, line: 131, baseType: !309, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !939, file: !711, line: 134, baseType: !412, size: 8, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !939, file: !711, line: 135, baseType: !412, size: 8, offset: 72)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !939, file: !711, line: 136, baseType: !736, size: 32, offset: 96)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !939, file: !711, line: 137, baseType: !7, size: 32, offset: 128)
!946 = !DIDerivedType(tag: DW_TAG_member, scope: !715, file: !711, line: 139, baseType: !947, size: 256)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !715, file: !711, line: 139, size: 256, elements: !948)
!948 = !{!949, !950, !951}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !947, file: !711, line: 140, baseType: !309, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !947, file: !711, line: 141, baseType: !736, size: 32, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !947, file: !711, line: 143, baseType: !203, size: 128, offset: 128)
!952 = !DIDerivedType(tag: DW_TAG_member, scope: !715, file: !711, line: 145, baseType: !953, size: 256)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !715, file: !711, line: 145, size: 256, elements: !954)
!954 = !{!955, !956, !958, !959, !2329}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !953, file: !711, line: 146, baseType: !309, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !953, file: !711, line: 147, baseType: !957, size: 64, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !701, line: 509, baseType: !709)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !953, file: !711, line: 148, baseType: !309, size: 64, offset: 128)
!959 = !DIDerivedType(tag: DW_TAG_member, scope: !953, file: !711, line: 149, baseType: !960, size: 64, offset: 192)
!960 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !953, file: !711, line: 149, size: 64, elements: !961)
!961 = !{!962, !2328}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !960, file: !711, line: 150, baseType: !963, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !711, line: 388, size: 7296, elements: !965)
!965 = !{!966, !2324}
!966 = !DIDerivedType(tag: DW_TAG_member, scope: !964, file: !711, line: 389, baseType: !967, size: 7296)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !964, file: !711, line: 389, size: 7296, elements: !968)
!968 = !{!969, !1087, !1088, !1089, !1093, !1094, !1095, !1096, !1097, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1138, !1146, !1149, !1195, !1196, !2308, !2309, !2312, !2313, !2314, !2317, !2318, !2319, !2322, !2323}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !967, file: !711, line: 390, baseType: !970, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !711, line: 305, size: 1472, elements: !972)
!972 = !{!973, !974, !975, !976, !977, !978, !979, !980, !987, !988, !993, !994, !997, !1081, !1082, !1083, !1084, !1085}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !971, file: !711, line: 308, baseType: !309, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !971, file: !711, line: 309, baseType: !309, size: 64, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !971, file: !711, line: 313, baseType: !970, size: 64, offset: 128)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !971, file: !711, line: 313, baseType: !970, size: 64, offset: 192)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !971, file: !711, line: 315, baseType: !749, size: 192, align: 64, offset: 256)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !971, file: !711, line: 323, baseType: !309, size: 64, offset: 448)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !971, file: !711, line: 327, baseType: !963, size: 64, offset: 512)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !971, file: !711, line: 333, baseType: !981, size: 64, offset: 576)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !701, line: 284, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !701, line: 284, size: 64, elements: !983)
!983 = !{!984}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !982, file: !701, line: 284, baseType: !985, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !986, line: 19, baseType: !309)
!986 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!987 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !971, file: !711, line: 334, baseType: !309, size: 64, offset: 640)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !971, file: !711, line: 343, baseType: !989, size: 256, offset: 704)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !971, file: !711, line: 340, size: 256, elements: !990)
!990 = !{!991, !992}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !989, file: !711, line: 341, baseType: !749, size: 192, align: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !989, file: !711, line: 342, baseType: !309, size: 64, offset: 192)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !971, file: !711, line: 351, baseType: !203, size: 128, offset: 960)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !971, file: !711, line: 353, baseType: !995, size: 64, offset: 1088)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !711, line: 353, flags: DIFlagFwdDecl)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !971, file: !711, line: 356, baseType: !998, size: 64, offset: 1152)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1000)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1001)
!1001 = !{!1002, !1006, !1007, !1011, !1015, !1055, !1059, !1063, !1067, !1068, !1069, !1073, !1077}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1000, file: !14, line: 558, baseType: !1003, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 64)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{null, !970}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1000, file: !14, line: 559, baseType: !1003, size: 64, offset: 64)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1000, file: !14, line: 560, baseType: !1008, size: 64, offset: 128)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!243, !970, !309}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1000, file: !14, line: 561, baseType: !1012, size: 64, offset: 192)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!243, !970}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1000, file: !14, line: 562, baseType: !1016, size: 64, offset: 256)
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DISubroutineType(types: !1018)
!1018 = !{!1019, !1020}
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !711, line: 682, baseType: !7)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1022)
!1022 = !{!1023, !1024, !1025, !1026, !1027, !1028, !1035, !1042, !1048, !1049, !1050, !1052, !1054}
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1021, file: !14, line: 509, baseType: !970, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1021, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1021, file: !14, line: 511, baseType: !732, size: 32, offset: 96)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1021, file: !14, line: 512, baseType: !309, size: 64, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1021, file: !14, line: 513, baseType: !309, size: 64, offset: 192)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1021, file: !14, line: 514, baseType: !1029, size: 64, offset: 256)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !701, line: 385, baseType: !1031)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !701, line: 385, size: 64, elements: !1032)
!1032 = !{!1033}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1031, file: !701, line: 385, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !986, line: 15, baseType: !309)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1021, file: !14, line: 516, baseType: !1036, size: 64, offset: 320)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !701, line: 359, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !701, line: 359, size: 64, elements: !1039)
!1039 = !{!1040}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1038, file: !701, line: 359, baseType: !1041, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !986, line: 16, baseType: !309)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1021, file: !14, line: 519, baseType: !1043, size: 64, offset: 384)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !986, line: 21, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !986, line: 21, size: 64, elements: !1045)
!1045 = !{!1046}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1044, file: !986, line: 21, baseType: !1047, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !986, line: 14, baseType: !309)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1021, file: !14, line: 521, baseType: !709, size: 64, offset: 448)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1021, file: !14, line: 522, baseType: !709, size: 64, offset: 512)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1021, file: !14, line: 528, baseType: !1051, size: 64, offset: 576)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1043, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1021, file: !14, line: 532, baseType: !1053, size: 64, offset: 640)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1021, file: !14, line: 536, baseType: !957, size: 64, offset: 704)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1000, file: !14, line: 563, baseType: !1056, size: 64, offset: 320)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!1019, !1020, !13}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1000, file: !14, line: 565, baseType: !1060, size: 64, offset: 384)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DISubroutineType(types: !1062)
!1062 = !{null, !1020, !309, !309}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1000, file: !14, line: 567, baseType: !1064, size: 64, offset: 448)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!309, !970}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1000, file: !14, line: 571, baseType: !1016, size: 64, offset: 512)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1000, file: !14, line: 574, baseType: !1016, size: 64, offset: 576)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1000, file: !14, line: 579, baseType: !1070, size: 64, offset: 640)
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{!243, !970, !309, !180, !243, !243}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1000, file: !14, line: 585, baseType: !1074, size: 64, offset: 704)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DISubroutineType(types: !1076)
!1076 = !{!199, !970}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1000, file: !14, line: 615, baseType: !1078, size: 64, offset: 768)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!709, !970, !309}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !971, file: !711, line: 359, baseType: !309, size: 64, offset: 1216)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !971, file: !711, line: 361, baseType: !337, size: 64, offset: 1280)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !971, file: !711, line: 362, baseType: !180, size: 64, offset: 1344)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !971, file: !711, line: 365, baseType: !760, size: 64, offset: 1408)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !971, file: !711, line: 373, baseType: !1086, offset: 1472)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !711, line: 296, elements: !231)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !967, file: !711, line: 391, baseType: !745, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !967, file: !711, line: 392, baseType: !406, size: 64, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !967, file: !711, line: 394, baseType: !1090, size: 64, offset: 192)
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1091, size: 64)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!309, !337, !309, !309, !309, !309}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !967, file: !711, line: 398, baseType: !309, size: 64, offset: 256)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !967, file: !711, line: 399, baseType: !309, size: 64, offset: 320)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !967, file: !711, line: 405, baseType: !309, size: 64, offset: 384)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !967, file: !711, line: 406, baseType: !309, size: 64, offset: 448)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !967, file: !711, line: 407, baseType: !1098, size: 64, offset: 512)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !701, line: 286, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !701, line: 286, size: 64, elements: !1101)
!1101 = !{!1102}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1100, file: !701, line: 286, baseType: !1103, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !986, line: 18, baseType: !309)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !967, file: !711, line: 416, baseType: !736, size: 32, offset: 576)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !967, file: !711, line: 428, baseType: !736, size: 32, offset: 608)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !967, file: !711, line: 437, baseType: !736, size: 32, offset: 640)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !967, file: !711, line: 447, baseType: !736, size: 32, offset: 672)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !967, file: !711, line: 450, baseType: !760, size: 64, offset: 704)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !967, file: !711, line: 452, baseType: !243, size: 32, offset: 768)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !967, file: !711, line: 454, baseType: !217, offset: 800)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !967, file: !711, line: 457, baseType: !756, size: 256, offset: 832)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !967, file: !711, line: 459, baseType: !203, size: 128, offset: 1088)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !967, file: !711, line: 466, baseType: !309, size: 64, offset: 1216)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !967, file: !711, line: 467, baseType: !309, size: 64, offset: 1280)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !967, file: !711, line: 469, baseType: !309, size: 64, offset: 1344)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !967, file: !711, line: 470, baseType: !309, size: 64, offset: 1408)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !967, file: !711, line: 471, baseType: !762, size: 64, offset: 1472)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !967, file: !711, line: 472, baseType: !309, size: 64, offset: 1536)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !967, file: !711, line: 473, baseType: !309, size: 64, offset: 1600)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !967, file: !711, line: 474, baseType: !309, size: 64, offset: 1664)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !967, file: !711, line: 475, baseType: !309, size: 64, offset: 1728)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !967, file: !711, line: 477, baseType: !217, offset: 1792)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !967, file: !711, line: 478, baseType: !309, size: 64, offset: 1792)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !967, file: !711, line: 478, baseType: !309, size: 64, offset: 1856)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !967, file: !711, line: 478, baseType: !309, size: 64, offset: 1920)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !967, file: !711, line: 478, baseType: !309, size: 64, offset: 1984)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !967, file: !711, line: 479, baseType: !309, size: 64, offset: 2048)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !967, file: !711, line: 479, baseType: !309, size: 64, offset: 2112)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !967, file: !711, line: 479, baseType: !309, size: 64, offset: 2176)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !967, file: !711, line: 480, baseType: !309, size: 64, offset: 2240)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !967, file: !711, line: 480, baseType: !309, size: 64, offset: 2304)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !967, file: !711, line: 480, baseType: !309, size: 64, offset: 2368)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !967, file: !711, line: 480, baseType: !309, size: 64, offset: 2432)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !967, file: !711, line: 482, baseType: !1135, size: 2816, offset: 2496)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 2816, elements: !1136)
!1136 = !{!1137}
!1137 = !DISubrange(count: 44)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !967, file: !711, line: 488, baseType: !1139, size: 256, offset: 5312)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1140, line: 60, size: 256, elements: !1141)
!1140 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1141 = !{!1142}
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1139, file: !1140, line: 61, baseType: !1143, size: 256)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !760, size: 256, elements: !1144)
!1144 = !{!1145}
!1145 = !DISubrange(count: 4)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !967, file: !711, line: 490, baseType: !1147, size: 64, offset: 5568)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !711, line: 490, flags: DIFlagFwdDecl)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !967, file: !711, line: 493, baseType: !1150, size: 896, offset: 5632)
!1150 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1151, line: 53, baseType: !1152)
!1151 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1152 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1151, line: 13, size: 896, elements: !1153)
!1153 = !{!1154, !1155, !1156, !1157, !1160, !1161, !1168, !1169, !1189, !1190, !1191}
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1152, file: !1151, line: 18, baseType: !406, size: 64)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1152, file: !1151, line: 28, baseType: !762, size: 64, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1152, file: !1151, line: 31, baseType: !756, size: 256, offset: 128)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1152, file: !1151, line: 32, baseType: !1158, size: 64, offset: 384)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1151, line: 32, flags: DIFlagFwdDecl)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1152, file: !1151, line: 37, baseType: !301, size: 16, offset: 448)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1152, file: !1151, line: 40, baseType: !1162, size: 192, offset: 512)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1163, line: 53, size: 192, elements: !1164)
!1163 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1164 = !{!1165, !1166, !1167}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1162, file: !1163, line: 54, baseType: !760, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1162, file: !1163, line: 55, baseType: !217, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1162, file: !1163, line: 59, baseType: !203, size: 128, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1152, file: !1151, line: 41, baseType: !180, size: 64, offset: 704)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1152, file: !1151, line: 42, baseType: !1170, size: 64, offset: 768)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1173, line: 13, size: 896, elements: !1174)
!1173 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1174 = !{!1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1172, file: !1173, line: 14, baseType: !180, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1172, file: !1173, line: 15, baseType: !309, size: 64, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1172, file: !1173, line: 17, baseType: !309, size: 64, offset: 128)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1172, file: !1173, line: 17, baseType: !309, size: 64, offset: 192)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1172, file: !1173, line: 19, baseType: !294, size: 64, offset: 256)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1172, file: !1173, line: 21, baseType: !294, size: 64, offset: 320)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1172, file: !1173, line: 22, baseType: !294, size: 64, offset: 384)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1172, file: !1173, line: 23, baseType: !294, size: 64, offset: 448)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1172, file: !1173, line: 24, baseType: !294, size: 64, offset: 512)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1172, file: !1173, line: 25, baseType: !294, size: 64, offset: 576)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1172, file: !1173, line: 26, baseType: !294, size: 64, offset: 640)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1172, file: !1173, line: 27, baseType: !294, size: 64, offset: 704)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1172, file: !1173, line: 28, baseType: !294, size: 64, offset: 768)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1172, file: !1173, line: 29, baseType: !294, size: 64, offset: 832)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1152, file: !1151, line: 44, baseType: !736, size: 32, offset: 832)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1152, file: !1151, line: 50, baseType: !848, size: 16, offset: 864)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1152, file: !1151, line: 51, baseType: !1192, size: 16, offset: 880)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !401, line: 18, baseType: !1193)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !403, line: 23, baseType: !1194)
!1194 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !967, file: !711, line: 495, baseType: !309, size: 64, offset: 6528)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !967, file: !711, line: 497, baseType: !1197, size: 64, offset: 6592)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !711, line: 381, size: 384, elements: !1199)
!1199 = !{!1200, !1201, !2307}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1198, file: !711, line: 382, baseType: !736, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1198, file: !711, line: 383, baseType: !1202, size: 128, offset: 64)
!1202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !711, line: 376, size: 128, elements: !1203)
!1203 = !{!1204, !2305}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1202, file: !711, line: 377, baseType: !1205, size: 64)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1207, line: 640, size: 48640, elements: !1208)
!1207 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1208 = !{!1209, !1215, !1217, !1218, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1234, !1252, !1263, !1348, !1349, !1350, !1361, !1362, !1364, !1365, !1366, !1367, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1451, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1489, !1491, !1492, !1493, !1505, !1506, !1507, !1508, !1509, !1510, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1534, !1539, !1723, !1724, !1725, !1726, !1730, !1733, !1736, !1739, !1742, !1746, !1847, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1893, !1894, !1895, !1896, !1897, !1902, !1903, !1904, !1907, !1908, !1911, !1914, !1917, !1920, !1963, !1966, !1967, !2046, !2047, !2050, !2051, !2054, !2055, !2056, !2060, !2061, !2062, !2075, !2076, !2077, !2087, !2092, !2095, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1206, file: !1207, line: 646, baseType: !1210, size: 128)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1211, line: 56, size: 128, elements: !1212)
!1211 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1212 = !{!1213, !1214}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1210, file: !1211, line: 57, baseType: !309, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1210, file: !1211, line: 58, baseType: !400, size: 32, offset: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1206, file: !1207, line: 649, baseType: !1216, size: 64, offset: 128)
!1216 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !294)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1206, file: !1207, line: 657, baseType: !180, size: 64, offset: 192)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1206, file: !1207, line: 658, baseType: !1219, size: 32, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !165, line: 113, baseType: !1220)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !165, line: 111, size: 32, elements: !1221)
!1221 = !{!1222}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1220, file: !165, line: 112, baseType: !736, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1206, file: !1207, line: 660, baseType: !7, size: 32, offset: 288)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1206, file: !1207, line: 661, baseType: !7, size: 32, offset: 320)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1206, file: !1207, line: 684, baseType: !243, size: 32, offset: 352)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1206, file: !1207, line: 686, baseType: !243, size: 32, offset: 384)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1206, file: !1207, line: 687, baseType: !243, size: 32, offset: 416)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1206, file: !1207, line: 688, baseType: !243, size: 32, offset: 448)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1206, file: !1207, line: 689, baseType: !7, size: 32, offset: 480)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1206, file: !1207, line: 691, baseType: !1231, size: 64, offset: 512)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1233)
!1233 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1207, line: 691, flags: DIFlagFwdDecl)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1206, file: !1207, line: 692, baseType: !1235, size: 832, offset: 576)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1207, line: 451, size: 832, elements: !1236)
!1236 = !{!1237, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1235, file: !1207, line: 453, baseType: !1238, size: 128)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1207, line: 325, size: 128, elements: !1239)
!1239 = !{!1240, !1241}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1238, file: !1207, line: 326, baseType: !309, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1238, file: !1207, line: 327, baseType: !400, size: 32, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1235, file: !1207, line: 454, baseType: !749, size: 192, align: 64, offset: 128)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1235, file: !1207, line: 455, baseType: !203, size: 128, offset: 320)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1235, file: !1207, line: 456, baseType: !7, size: 32, offset: 448)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1235, file: !1207, line: 458, baseType: !406, size: 64, offset: 512)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1235, file: !1207, line: 459, baseType: !406, size: 64, offset: 576)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1235, file: !1207, line: 460, baseType: !406, size: 64, offset: 640)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1235, file: !1207, line: 461, baseType: !406, size: 64, offset: 704)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1235, file: !1207, line: 463, baseType: !406, size: 64, offset: 768)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1235, file: !1207, line: 465, baseType: !1251, offset: 832)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1207, line: 415, elements: !231)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1206, file: !1207, line: 693, baseType: !1253, size: 384, offset: 1408)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1207, line: 489, size: 384, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258, !1259, !1260, !1261}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1253, file: !1207, line: 490, baseType: !203, size: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1253, file: !1207, line: 491, baseType: !309, size: 64, offset: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1253, file: !1207, line: 492, baseType: !309, size: 64, offset: 192)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1253, file: !1207, line: 493, baseType: !7, size: 32, offset: 256)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1253, file: !1207, line: 494, baseType: !301, size: 16, offset: 288)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1253, file: !1207, line: 495, baseType: !301, size: 16, offset: 304)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1253, file: !1207, line: 497, baseType: !1262, size: 64, offset: 320)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1206, file: !1207, line: 697, baseType: !1264, size: 1792, offset: 1792)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1207, line: 507, size: 1792, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1345, !1346}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1264, file: !1207, line: 508, baseType: !749, size: 192, align: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1264, file: !1207, line: 515, baseType: !406, size: 64, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1264, file: !1207, line: 516, baseType: !406, size: 64, offset: 256)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1264, file: !1207, line: 517, baseType: !406, size: 64, offset: 320)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1264, file: !1207, line: 518, baseType: !406, size: 64, offset: 384)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1264, file: !1207, line: 519, baseType: !406, size: 64, offset: 448)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1264, file: !1207, line: 526, baseType: !766, size: 64, offset: 512)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1264, file: !1207, line: 527, baseType: !406, size: 64, offset: 576)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1264, file: !1207, line: 528, baseType: !7, size: 32, offset: 640)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1264, file: !1207, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1264, file: !1207, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1264, file: !1207, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1264, file: !1207, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1264, file: !1207, line: 563, baseType: !1280, size: 512, offset: 704)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1281)
!1281 = !{!1282, !1290, !1291, !1296, !1339, !1342, !1343, !1344}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1280, file: !20, line: 119, baseType: !1283, size: 256)
!1283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1284, line: 9, size: 256, elements: !1285)
!1284 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1285 = !{!1286, !1287}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1283, file: !1284, line: 10, baseType: !749, size: 192, align: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1283, file: !1284, line: 11, baseType: !1288, size: 64, offset: 192)
!1288 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1289, line: 29, baseType: !766)
!1289 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1280, file: !20, line: 120, baseType: !1288, size: 64, offset: 256)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1280, file: !20, line: 121, baseType: !1292, size: 64, offset: 320)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DISubroutineType(types: !1294)
!1294 = !{!19, !1295}
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1280, file: !20, line: 122, baseType: !1297, size: 64, offset: 384)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1299)
!1299 = !{!1300, !1320, !1321, !1324, !1329, !1330, !1334, !1338}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1298, file: !20, line: 160, baseType: !1301, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1302, file: !20, line: 215, baseType: !769)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1302, file: !20, line: 216, baseType: !7, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1302, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1302, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1302, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1302, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1302, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1302, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1302, file: !20, line: 233, baseType: !1288, size: 64, offset: 128)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1302, file: !20, line: 234, baseType: !1295, size: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1302, file: !20, line: 235, baseType: !1288, size: 64, offset: 256)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1302, file: !20, line: 236, baseType: !1295, size: 64, offset: 320)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1302, file: !20, line: 237, baseType: !1317, size: 4096, offset: 512)
!1317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1298, size: 4096, elements: !1318)
!1318 = !{!1319}
!1319 = !DISubrange(count: 8)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1298, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1298, file: !20, line: 162, baseType: !1322, size: 32, offset: 96)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !204, line: 27, baseType: !1323)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !292, line: 96, baseType: !243)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1298, file: !20, line: 163, baseType: !1325, size: 32, offset: 128)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !373, line: 276, baseType: !1326)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !373, line: 276, size: 32, elements: !1327)
!1327 = !{!1328}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1326, file: !373, line: 276, baseType: !377, size: 32)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1298, file: !20, line: 164, baseType: !1295, size: 64, offset: 192)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1298, file: !20, line: 165, baseType: !1331, size: 128, offset: 256)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1284, line: 14, size: 128, elements: !1332)
!1332 = !{!1333}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1331, file: !1284, line: 15, baseType: !741, size: 128)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1298, file: !20, line: 166, baseType: !1335, size: 64, offset: 384)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!1288}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1298, file: !20, line: 167, baseType: !1288, size: 64, offset: 448)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1280, file: !20, line: 123, baseType: !1340, size: 8, offset: 448)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !401, line: 17, baseType: !1341)
!1341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !403, line: 21, baseType: !412)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1280, file: !20, line: 124, baseType: !1340, size: 8, offset: 456)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1280, file: !20, line: 125, baseType: !1340, size: 8, offset: 464)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1280, file: !20, line: 126, baseType: !1340, size: 8, offset: 472)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1264, file: !1207, line: 572, baseType: !1280, size: 512, offset: 1216)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1264, file: !1207, line: 580, baseType: !1347, size: 64, offset: 1728)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1206, file: !1207, line: 721, baseType: !7, size: 32, offset: 3584)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1206, file: !1207, line: 722, baseType: !243, size: 32, offset: 3616)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1206, file: !1207, line: 723, baseType: !1351, size: 64, offset: 3648)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1353)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1354, line: 17, baseType: !1355)
!1354 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1354, line: 17, size: 64, elements: !1356)
!1356 = !{!1357}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1355, file: !1354, line: 17, baseType: !1358, size: 64)
!1358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 64, elements: !1359)
!1359 = !{!1360}
!1360 = !DISubrange(count: 1)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1206, file: !1207, line: 724, baseType: !1353, size: 64, offset: 3712)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1206, file: !1207, line: 749, baseType: !1363, offset: 3776)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1207, line: 290, elements: !231)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1206, file: !1207, line: 751, baseType: !203, size: 128, offset: 3776)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1206, file: !1207, line: 757, baseType: !963, size: 64, offset: 3904)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1206, file: !1207, line: 758, baseType: !963, size: 64, offset: 3968)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1206, file: !1207, line: 761, baseType: !1368, size: 320, offset: 4032)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1140, line: 34, size: 320, elements: !1369)
!1369 = !{!1370, !1371}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1368, file: !1140, line: 35, baseType: !406, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1368, file: !1140, line: 36, baseType: !1372, size: 256, offset: 64)
!1372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 256, elements: !1144)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1206, file: !1207, line: 766, baseType: !243, size: 32, offset: 4352)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1206, file: !1207, line: 767, baseType: !243, size: 32, offset: 4384)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1206, file: !1207, line: 768, baseType: !243, size: 32, offset: 4416)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1206, file: !1207, line: 770, baseType: !243, size: 32, offset: 4448)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1206, file: !1207, line: 772, baseType: !309, size: 64, offset: 4480)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1206, file: !1207, line: 775, baseType: !7, size: 32, offset: 4544)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1206, file: !1207, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1206, file: !1207, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1206, file: !1207, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1206, file: !1207, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1206, file: !1207, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1206, file: !1207, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1206, file: !1207, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1206, file: !1207, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1206, file: !1207, line: 831, baseType: !309, size: 64, offset: 4672)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1206, file: !1207, line: 833, baseType: !1389, size: 384, offset: 4736)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1390)
!1390 = !{!1391, !1396}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1389, file: !25, line: 26, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DISubroutineType(types: !1394)
!1394 = !{!294, !1395}
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, scope: !1389, file: !25, line: 27, baseType: !1397, size: 320, offset: 64)
!1397 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1389, file: !25, line: 27, size: 320, elements: !1398)
!1398 = !{!1399, !1409, !1436}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1397, file: !25, line: 36, baseType: !1400, size: 320)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1397, file: !25, line: 29, size: 320, elements: !1401)
!1401 = !{!1402, !1404, !1405, !1406, !1407, !1408}
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1400, file: !25, line: 30, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1400, file: !25, line: 31, baseType: !400, size: 32, offset: 64)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1400, file: !25, line: 32, baseType: !400, size: 32, offset: 96)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1400, file: !25, line: 33, baseType: !400, size: 32, offset: 128)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1400, file: !25, line: 34, baseType: !406, size: 64, offset: 192)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1400, file: !25, line: 35, baseType: !1403, size: 64, offset: 256)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1397, file: !25, line: 46, baseType: !1410, size: 192)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1397, file: !25, line: 38, size: 192, elements: !1411)
!1411 = !{!1412, !1413, !1414, !1435}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1410, file: !25, line: 39, baseType: !1322, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1410, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, scope: !1410, file: !25, line: 41, baseType: !1415, size: 64, offset: 64)
!1415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1410, file: !25, line: 41, size: 64, elements: !1416)
!1416 = !{!1417, !1425}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1415, file: !25, line: 42, baseType: !1418, size: 64)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1420, line: 7, size: 128, elements: !1421)
!1420 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1421 = !{!1422, !1424}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1419, file: !1420, line: 8, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !292, line: 93, baseType: !518)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1419, file: !1420, line: 9, baseType: !518, size: 64, offset: 64)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1415, file: !25, line: 43, baseType: !1426, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 64)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1428, line: 7, size: 64, elements: !1429)
!1428 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1429 = !{!1430, !1434}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1427, file: !1428, line: 8, baseType: !1431, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1428, line: 5, baseType: !1432)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !401, line: 20, baseType: !1433)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !403, line: 26, baseType: !243)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1427, file: !1428, line: 9, baseType: !1432, size: 32, offset: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1410, file: !25, line: 45, baseType: !406, size: 64, offset: 128)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1397, file: !25, line: 54, baseType: !1437, size: 256)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1397, file: !25, line: 48, size: 256, elements: !1438)
!1438 = !{!1439, !1447, !1448, !1449, !1450}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1437, file: !25, line: 49, baseType: !1440, size: 64)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1442, line: 36, size: 64, elements: !1443)
!1442 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1443 = !{!1444, !1445, !1446}
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1441, file: !1442, line: 37, baseType: !243, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1441, file: !1442, line: 38, baseType: !1194, size: 16, offset: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1441, file: !1442, line: 39, baseType: !1194, size: 16, offset: 48)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1437, file: !25, line: 50, baseType: !243, size: 32, offset: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1437, file: !25, line: 51, baseType: !243, size: 32, offset: 96)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1437, file: !25, line: 52, baseType: !309, size: 64, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1437, file: !25, line: 53, baseType: !309, size: 64, offset: 192)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1206, file: !1207, line: 835, baseType: !1452, size: 32, offset: 5120)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !204, line: 22, baseType: !1453)
!1453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !292, line: 28, baseType: !243)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1206, file: !1207, line: 836, baseType: !1452, size: 32, offset: 5152)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1206, file: !1207, line: 840, baseType: !309, size: 64, offset: 5184)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1206, file: !1207, line: 849, baseType: !1205, size: 64, offset: 5248)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1206, file: !1207, line: 852, baseType: !1205, size: 64, offset: 5312)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1206, file: !1207, line: 857, baseType: !203, size: 128, offset: 5376)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1206, file: !1207, line: 858, baseType: !203, size: 128, offset: 5504)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1206, file: !1207, line: 859, baseType: !1205, size: 64, offset: 5632)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1206, file: !1207, line: 867, baseType: !203, size: 128, offset: 5696)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1206, file: !1207, line: 868, baseType: !203, size: 128, offset: 5824)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1206, file: !1207, line: 871, baseType: !1464, size: 64, offset: 5952)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1466)
!1466 = !{!1467, !1468, !1469, !1470, !1472, !1473, !1480, !1481}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1465, file: !53, line: 61, baseType: !1219, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1465, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1465, file: !53, line: 63, baseType: !217, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1465, file: !53, line: 65, baseType: !1471, size: 256, offset: 64)
!1471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !623, size: 256, elements: !1144)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1465, file: !53, line: 66, baseType: !623, size: 64, offset: 320)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1465, file: !53, line: 68, baseType: !1474, size: 128, offset: 384)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1475, line: 40, baseType: !1476)
!1475 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1475, line: 36, size: 128, elements: !1477)
!1477 = !{!1478, !1479}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1476, file: !1475, line: 37, baseType: !217)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1476, file: !1475, line: 38, baseType: !203, size: 128)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1465, file: !53, line: 69, baseType: !350, size: 128, align: 64, offset: 512)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1465, file: !53, line: 70, baseType: !1482, size: 128, offset: 640)
!1482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1483, size: 128, elements: !1359)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1484)
!1484 = !{!1485, !1486}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1483, file: !53, line: 55, baseType: !243, size: 32)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1483, file: !53, line: 56, baseType: !1487, size: 64, offset: 64)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1206, file: !1207, line: 872, baseType: !1490, size: 512, offset: 6016)
!1490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !627, size: 512, elements: !1144)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1206, file: !1207, line: 873, baseType: !203, size: 128, offset: 6528)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1206, file: !1207, line: 874, baseType: !203, size: 128, offset: 6656)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1206, file: !1207, line: 876, baseType: !1494, size: 64, offset: 6784)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1496, line: 26, size: 192, elements: !1497)
!1496 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !{!1498, !1499}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1495, file: !1496, line: 27, baseType: !7, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1495, file: !1496, line: 28, baseType: !1500, size: 128, offset: 64)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1501, line: 43, size: 128, elements: !1502)
!1501 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1502 = !{!1503, !1504}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1500, file: !1501, line: 44, baseType: !769)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1500, file: !1501, line: 45, baseType: !203, size: 128)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1206, file: !1207, line: 879, baseType: !693, size: 64, offset: 6848)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1206, file: !1207, line: 882, baseType: !693, size: 64, offset: 6912)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1206, file: !1207, line: 884, baseType: !406, size: 64, offset: 6976)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1206, file: !1207, line: 885, baseType: !406, size: 64, offset: 7040)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1206, file: !1207, line: 890, baseType: !406, size: 64, offset: 7104)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1206, file: !1207, line: 891, baseType: !1511, size: 128, offset: 7168)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1207, line: 242, size: 128, elements: !1512)
!1512 = !{!1513, !1514, !1515}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1511, file: !1207, line: 244, baseType: !406, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1511, file: !1207, line: 245, baseType: !406, size: 64, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1511, file: !1207, line: 246, baseType: !769, offset: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1206, file: !1207, line: 900, baseType: !309, size: 64, offset: 7296)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1206, file: !1207, line: 901, baseType: !309, size: 64, offset: 7360)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1206, file: !1207, line: 904, baseType: !406, size: 64, offset: 7424)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1206, file: !1207, line: 907, baseType: !406, size: 64, offset: 7488)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1206, file: !1207, line: 910, baseType: !309, size: 64, offset: 7552)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1206, file: !1207, line: 911, baseType: !309, size: 64, offset: 7616)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1206, file: !1207, line: 914, baseType: !1523, size: 640, offset: 7680)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1524, line: 123, size: 640, elements: !1525)
!1524 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1525 = !{!1526, !1532, !1533}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1523, file: !1524, line: 124, baseType: !1527, size: 576)
!1527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1528, size: 576, elements: !260)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1524, line: 108, size: 192, elements: !1529)
!1529 = !{!1530, !1531}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1528, file: !1524, line: 109, baseType: !406, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1528, file: !1524, line: 110, baseType: !1331, size: 128, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1523, file: !1524, line: 125, baseType: !7, size: 32, offset: 576)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1523, file: !1524, line: 126, baseType: !7, size: 32, offset: 608)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1206, file: !1207, line: 917, baseType: !1535, size: 192, offset: 8320)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1524, line: 134, size: 192, elements: !1536)
!1536 = !{!1537, !1538}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1535, file: !1524, line: 135, baseType: !350, size: 128, align: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1535, file: !1524, line: 136, baseType: !7, size: 32, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1206, file: !1207, line: 923, baseType: !1540, size: 64, offset: 8512)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1543, line: 111, size: 1280, elements: !1544)
!1543 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1544 = !{!1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1564, !1565, !1566, !1567, !1568, !1569, !1676, !1677, !1678, !1679, !1705, !1708, !1718}
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1542, file: !1543, line: 112, baseType: !736, size: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1542, file: !1543, line: 120, baseType: !420, size: 32, offset: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1542, file: !1543, line: 121, baseType: !428, size: 32, offset: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1542, file: !1543, line: 122, baseType: !420, size: 32, offset: 96)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1542, file: !1543, line: 123, baseType: !428, size: 32, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1542, file: !1543, line: 124, baseType: !420, size: 32, offset: 160)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1542, file: !1543, line: 125, baseType: !428, size: 32, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1542, file: !1543, line: 126, baseType: !420, size: 32, offset: 224)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1542, file: !1543, line: 127, baseType: !428, size: 32, offset: 256)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1542, file: !1543, line: 128, baseType: !7, size: 32, offset: 288)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1542, file: !1543, line: 129, baseType: !1556, size: 64, offset: 320)
!1556 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1557, line: 26, baseType: !1558)
!1557 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1557, line: 24, size: 64, elements: !1559)
!1559 = !{!1560}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1558, file: !1557, line: 25, baseType: !1561, size: 64)
!1561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !402, size: 64, elements: !1562)
!1562 = !{!1563}
!1563 = !DISubrange(count: 2)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1542, file: !1543, line: 130, baseType: !1556, size: 64, offset: 384)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1542, file: !1543, line: 131, baseType: !1556, size: 64, offset: 448)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1542, file: !1543, line: 132, baseType: !1556, size: 64, offset: 512)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1542, file: !1543, line: 133, baseType: !1556, size: 64, offset: 576)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1542, file: !1543, line: 135, baseType: !412, size: 8, offset: 640)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1542, file: !1543, line: 137, baseType: !1570, size: 64, offset: 704)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1572, line: 189, size: 1664, elements: !1573)
!1572 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1573 = !{!1574, !1575, !1578, !1583, !1584, !1587, !1588, !1593, !1594, !1595, !1596, !1598, !1599, !1600, !1601, !1602, !1640, !1661}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1571, file: !1572, line: 190, baseType: !1219, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1571, file: !1572, line: 191, baseType: !1576, size: 32, offset: 32)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1572, line: 28, baseType: !1577)
!1577 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !204, line: 98, baseType: !1432)
!1578 = !DIDerivedType(tag: DW_TAG_member, scope: !1571, file: !1572, line: 192, baseType: !1579, size: 192, offset: 64)
!1579 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1571, file: !1572, line: 192, size: 192, elements: !1580)
!1580 = !{!1581, !1582}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1579, file: !1572, line: 193, baseType: !203, size: 128)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1579, file: !1572, line: 194, baseType: !749, size: 192, align: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1571, file: !1572, line: 199, baseType: !756, size: 256, offset: 256)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1571, file: !1572, line: 200, baseType: !1585, size: 64, offset: 512)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1572, line: 200, flags: DIFlagFwdDecl)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1571, file: !1572, line: 201, baseType: !180, size: 64, offset: 576)
!1588 = !DIDerivedType(tag: DW_TAG_member, scope: !1571, file: !1572, line: 202, baseType: !1589, size: 64, offset: 640)
!1589 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1571, file: !1572, line: 202, size: 64, elements: !1590)
!1590 = !{!1591, !1592}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1589, file: !1572, line: 203, baseType: !524, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1589, file: !1572, line: 204, baseType: !524, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1571, file: !1572, line: 206, baseType: !524, size: 64, offset: 704)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1571, file: !1572, line: 207, baseType: !420, size: 32, offset: 768)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1571, file: !1572, line: 208, baseType: !428, size: 32, offset: 800)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1571, file: !1572, line: 209, baseType: !1597, size: 32, offset: 832)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1572, line: 31, baseType: !544)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1571, file: !1572, line: 210, baseType: !301, size: 16, offset: 864)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1571, file: !1572, line: 211, baseType: !301, size: 16, offset: 880)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1571, file: !1572, line: 215, baseType: !1194, size: 16, offset: 896)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1571, file: !1572, line: 222, baseType: !309, size: 64, offset: 960)
!1602 = !DIDerivedType(tag: DW_TAG_member, scope: !1571, file: !1572, line: 239, baseType: !1603, size: 320, offset: 1024)
!1603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1571, file: !1572, line: 239, size: 320, elements: !1604)
!1604 = !{!1605, !1632}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1603, file: !1572, line: 240, baseType: !1606, size: 320)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1572, line: 108, size: 320, elements: !1607)
!1607 = !{!1608, !1609, !1621, !1624, !1631}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1606, file: !1572, line: 110, baseType: !309, size: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, scope: !1606, file: !1572, line: 111, baseType: !1610, size: 64, offset: 64)
!1610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1606, file: !1572, line: 111, size: 64, elements: !1611)
!1611 = !{!1612, !1620}
!1612 = !DIDerivedType(tag: DW_TAG_member, scope: !1610, file: !1572, line: 112, baseType: !1613, size: 64)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1610, file: !1572, line: 112, size: 64, elements: !1614)
!1614 = !{!1615, !1616}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1613, file: !1572, line: 114, baseType: !848, size: 16)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1613, file: !1572, line: 115, baseType: !1617, size: 48, offset: 16)
!1617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 48, elements: !1618)
!1618 = !{!1619}
!1619 = !DISubrange(count: 6)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1610, file: !1572, line: 121, baseType: !309, size: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1606, file: !1572, line: 123, baseType: !1622, size: 64, offset: 128)
!1622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1623, size: 64)
!1623 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1572, line: 96, flags: DIFlagFwdDecl)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1606, file: !1572, line: 124, baseType: !1625, size: 64, offset: 192)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1572, line: 102, size: 192, elements: !1627)
!1627 = !{!1628, !1629, !1630}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1626, file: !1572, line: 103, baseType: !350, size: 128, align: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1626, file: !1572, line: 104, baseType: !1219, size: 32, offset: 128)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1626, file: !1572, line: 105, baseType: !475, size: 8, offset: 160)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1606, file: !1572, line: 125, baseType: !199, size: 64, offset: 256)
!1632 = !DIDerivedType(tag: DW_TAG_member, scope: !1603, file: !1572, line: 241, baseType: !1633, size: 320)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1603, file: !1572, line: 241, size: 320, elements: !1634)
!1634 = !{!1635, !1636, !1637, !1638, !1639}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1633, file: !1572, line: 242, baseType: !309, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1633, file: !1572, line: 243, baseType: !309, size: 64, offset: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1633, file: !1572, line: 244, baseType: !1622, size: 64, offset: 128)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1633, file: !1572, line: 245, baseType: !1625, size: 64, offset: 192)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1633, file: !1572, line: 246, baseType: !259, size: 64, offset: 256)
!1640 = !DIDerivedType(tag: DW_TAG_member, scope: !1571, file: !1572, line: 254, baseType: !1641, size: 256, offset: 1344)
!1641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1571, file: !1572, line: 254, size: 256, elements: !1642)
!1642 = !{!1643, !1649}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1641, file: !1572, line: 255, baseType: !1644, size: 256)
!1644 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1572, line: 128, size: 256, elements: !1645)
!1645 = !{!1646, !1647}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1644, file: !1572, line: 129, baseType: !180, size: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1644, file: !1572, line: 130, baseType: !1648, size: 256)
!1648 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 256, elements: !1144)
!1649 = !DIDerivedType(tag: DW_TAG_member, scope: !1641, file: !1572, line: 256, baseType: !1650, size: 256)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1641, file: !1572, line: 256, size: 256, elements: !1651)
!1651 = !{!1652, !1653}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1650, file: !1572, line: 258, baseType: !203, size: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1650, file: !1572, line: 259, baseType: !1654, size: 128, offset: 128)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1655, line: 22, size: 128, elements: !1656)
!1655 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1656 = !{!1657, !1660}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1654, file: !1655, line: 23, baseType: !1658, size: 64)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1655, line: 23, flags: DIFlagFwdDecl)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1654, file: !1655, line: 24, baseType: !309, size: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1571, file: !1572, line: 274, baseType: !1662, size: 64, offset: 1600)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1572, line: 170, size: 192, elements: !1664)
!1664 = !{!1665, !1674, !1675}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1663, file: !1572, line: 171, baseType: !1666, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1572, line: 165, baseType: !1667)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{!243, !1570, !1670, !1672, !1570}
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1623)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1644)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1663, file: !1572, line: 172, baseType: !1570, size: 64, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1663, file: !1572, line: 173, baseType: !1622, size: 64, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1542, file: !1543, line: 138, baseType: !1570, size: 64, offset: 768)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1542, file: !1543, line: 139, baseType: !1570, size: 64, offset: 832)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1542, file: !1543, line: 140, baseType: !1570, size: 64, offset: 896)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1542, file: !1543, line: 145, baseType: !1680, size: 64, offset: 960)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1682, line: 13, size: 896, elements: !1683)
!1682 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1683 = !{!1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1681, file: !1682, line: 14, baseType: !1219, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1681, file: !1682, line: 15, baseType: !736, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1681, file: !1682, line: 16, baseType: !736, size: 32, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1681, file: !1682, line: 21, baseType: !760, size: 64, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1681, file: !1682, line: 27, baseType: !309, size: 64, offset: 192)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1681, file: !1682, line: 28, baseType: !309, size: 64, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1681, file: !1682, line: 29, baseType: !760, size: 64, offset: 320)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1681, file: !1682, line: 32, baseType: !627, size: 128, offset: 384)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1681, file: !1682, line: 33, baseType: !420, size: 32, offset: 512)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1681, file: !1682, line: 37, baseType: !760, size: 64, offset: 576)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1681, file: !1682, line: 44, baseType: !1695, size: 256, offset: 640)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1696, line: 15, size: 256, elements: !1697)
!1696 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1697 = !{!1698, !1699, !1700, !1701, !1702, !1703, !1704}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1695, file: !1696, line: 16, baseType: !769)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1695, file: !1696, line: 18, baseType: !243, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1695, file: !1696, line: 19, baseType: !243, size: 32, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1695, file: !1696, line: 20, baseType: !243, size: 32, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1695, file: !1696, line: 21, baseType: !243, size: 32, offset: 96)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1695, file: !1696, line: 22, baseType: !309, size: 64, offset: 128)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1695, file: !1696, line: 23, baseType: !309, size: 64, offset: 192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1542, file: !1543, line: 146, baseType: !1706, size: 64, offset: 1024)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !421, line: 18, flags: DIFlagFwdDecl)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1542, file: !1543, line: 147, baseType: !1709, size: 64, offset: 1088)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1543, line: 25, size: 64, elements: !1711)
!1711 = !{!1712, !1713, !1714}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1710, file: !1543, line: 26, baseType: !736, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1710, file: !1543, line: 27, baseType: !243, size: 32, offset: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1710, file: !1543, line: 28, baseType: !1715, offset: 64)
!1715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !428, elements: !1716)
!1716 = !{!1717}
!1717 = !DISubrange(count: 0)
!1718 = !DIDerivedType(tag: DW_TAG_member, scope: !1542, file: !1543, line: 149, baseType: !1719, size: 128, offset: 1152)
!1719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1542, file: !1543, line: 149, size: 128, elements: !1720)
!1720 = !{!1721, !1722}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1719, file: !1543, line: 150, baseType: !243, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1719, file: !1543, line: 151, baseType: !350, size: 128, align: 64)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1206, file: !1207, line: 926, baseType: !1540, size: 64, offset: 8576)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1206, file: !1207, line: 929, baseType: !1540, size: 64, offset: 8640)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1206, file: !1207, line: 933, baseType: !1570, size: 64, offset: 8704)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1206, file: !1207, line: 943, baseType: !1727, size: 128, offset: 8768)
!1727 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 128, elements: !1728)
!1728 = !{!1729}
!1729 = !DISubrange(count: 16)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1206, file: !1207, line: 945, baseType: !1731, size: 64, offset: 8896)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1207, line: 49, flags: DIFlagFwdDecl)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1206, file: !1207, line: 956, baseType: !1734, size: 64, offset: 8960)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1207, line: 45, flags: DIFlagFwdDecl)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1206, file: !1207, line: 959, baseType: !1737, size: 64, offset: 9024)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1207, line: 959, flags: DIFlagFwdDecl)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1206, file: !1207, line: 962, baseType: !1740, size: 64, offset: 9088)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64)
!1741 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1207, line: 66, flags: DIFlagFwdDecl)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1206, file: !1207, line: 966, baseType: !1743, size: 64, offset: 9152)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 64)
!1744 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1745, line: 35, flags: DIFlagFwdDecl)
!1745 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1206, file: !1207, line: 969, baseType: !1747, size: 64, offset: 9216)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1749, line: 82, size: 7296, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1752, !1753, !1754, !1755, !1756, !1757, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1786, !1795, !1796, !1798, !1799, !1800, !1803, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1833, !1834, !1841, !1842, !1843, !1844, !1845, !1846}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1748, file: !1749, line: 83, baseType: !1219, size: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1748, file: !1749, line: 84, baseType: !736, size: 32, offset: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1748, file: !1749, line: 85, baseType: !243, size: 32, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1748, file: !1749, line: 86, baseType: !203, size: 128, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1748, file: !1749, line: 88, baseType: !1474, size: 128, offset: 256)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1748, file: !1749, line: 91, baseType: !1205, size: 64, offset: 384)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1748, file: !1749, line: 94, baseType: !1758, size: 192, offset: 448)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1759, line: 30, size: 192, elements: !1760)
!1759 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1760 = !{!1761, !1762}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1758, file: !1759, line: 31, baseType: !203, size: 128)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1758, file: !1759, line: 32, baseType: !1763, size: 64, offset: 128)
!1763 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1764, line: 25, baseType: !1765)
!1764 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1764, line: 23, size: 64, elements: !1766)
!1766 = !{!1767}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1765, file: !1764, line: 24, baseType: !1358, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1748, file: !1749, line: 97, baseType: !623, size: 64, offset: 640)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1748, file: !1749, line: 100, baseType: !243, size: 32, offset: 704)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1748, file: !1749, line: 106, baseType: !243, size: 32, offset: 736)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1748, file: !1749, line: 107, baseType: !1205, size: 64, offset: 768)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1748, file: !1749, line: 110, baseType: !243, size: 32, offset: 832)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1748, file: !1749, line: 111, baseType: !7, size: 32, offset: 864)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1748, file: !1749, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1748, file: !1749, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1748, file: !1749, line: 128, baseType: !243, size: 32, offset: 928)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1748, file: !1749, line: 129, baseType: !203, size: 128, offset: 960)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1748, file: !1749, line: 132, baseType: !1280, size: 512, offset: 1088)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1748, file: !1749, line: 133, baseType: !1288, size: 64, offset: 1600)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1748, file: !1749, line: 140, baseType: !1781, size: 256, offset: 1664)
!1781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1782, size: 256, elements: !1562)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1749, line: 38, size: 128, elements: !1783)
!1783 = !{!1784, !1785}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1782, file: !1749, line: 39, baseType: !406, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1782, file: !1749, line: 40, baseType: !406, size: 64, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1748, file: !1749, line: 146, baseType: !1787, size: 192, offset: 1920)
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1749, line: 66, size: 192, elements: !1788)
!1788 = !{!1789}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1787, file: !1749, line: 67, baseType: !1790, size: 192)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1749, line: 47, size: 192, elements: !1791)
!1791 = !{!1792, !1793, !1794}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1790, file: !1749, line: 48, baseType: !762, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1790, file: !1749, line: 49, baseType: !762, size: 64, offset: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1790, file: !1749, line: 50, baseType: !762, size: 64, offset: 128)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1748, file: !1749, line: 150, baseType: !1523, size: 640, offset: 2112)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1748, file: !1749, line: 153, baseType: !1797, size: 256, offset: 2752)
!1797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1464, size: 256, elements: !1144)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1748, file: !1749, line: 159, baseType: !1464, size: 64, offset: 3008)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1748, file: !1749, line: 162, baseType: !243, size: 32, offset: 3072)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1748, file: !1749, line: 164, baseType: !1801, size: 64, offset: 3136)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1749, line: 164, flags: DIFlagFwdDecl)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1748, file: !1749, line: 175, baseType: !1804, size: 32, offset: 3200)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !373, line: 805, baseType: !1805)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !373, line: 798, size: 32, elements: !1806)
!1806 = !{!1807, !1808}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1805, file: !373, line: 803, baseType: !372, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1805, file: !373, line: 804, baseType: !217, offset: 32)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1748, file: !1749, line: 176, baseType: !406, size: 64, offset: 3264)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1748, file: !1749, line: 176, baseType: !406, size: 64, offset: 3328)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1748, file: !1749, line: 176, baseType: !406, size: 64, offset: 3392)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1748, file: !1749, line: 176, baseType: !406, size: 64, offset: 3456)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1748, file: !1749, line: 177, baseType: !406, size: 64, offset: 3520)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1748, file: !1749, line: 178, baseType: !406, size: 64, offset: 3584)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1748, file: !1749, line: 179, baseType: !1511, size: 128, offset: 3648)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1748, file: !1749, line: 180, baseType: !309, size: 64, offset: 3776)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1748, file: !1749, line: 180, baseType: !309, size: 64, offset: 3840)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1748, file: !1749, line: 180, baseType: !309, size: 64, offset: 3904)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1748, file: !1749, line: 180, baseType: !309, size: 64, offset: 3968)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1748, file: !1749, line: 181, baseType: !309, size: 64, offset: 4032)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1748, file: !1749, line: 181, baseType: !309, size: 64, offset: 4096)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1748, file: !1749, line: 181, baseType: !309, size: 64, offset: 4160)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1748, file: !1749, line: 181, baseType: !309, size: 64, offset: 4224)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1748, file: !1749, line: 182, baseType: !309, size: 64, offset: 4288)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1748, file: !1749, line: 182, baseType: !309, size: 64, offset: 4352)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1748, file: !1749, line: 182, baseType: !309, size: 64, offset: 4416)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1748, file: !1749, line: 182, baseType: !309, size: 64, offset: 4480)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1748, file: !1749, line: 183, baseType: !309, size: 64, offset: 4544)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1748, file: !1749, line: 183, baseType: !309, size: 64, offset: 4608)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1748, file: !1749, line: 184, baseType: !1831, offset: 4672)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1832, line: 12, elements: !231)
!1832 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1748, file: !1749, line: 192, baseType: !408, size: 64, offset: 4672)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1748, file: !1749, line: 203, baseType: !1835, size: 2048, offset: 4736)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1836, size: 2048, elements: !1728)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1837, line: 43, size: 128, elements: !1838)
!1837 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1838 = !{!1839, !1840}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1836, file: !1837, line: 44, baseType: !308, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1836, file: !1837, line: 45, baseType: !308, size: 64, offset: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1748, file: !1749, line: 220, baseType: !475, size: 8, offset: 6784)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1748, file: !1749, line: 221, baseType: !1194, size: 16, offset: 6800)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1748, file: !1749, line: 222, baseType: !1194, size: 16, offset: 6816)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1748, file: !1749, line: 224, baseType: !963, size: 64, offset: 6848)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1748, file: !1749, line: 227, baseType: !1162, size: 192, offset: 6912)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1748, file: !1749, line: 233, baseType: !1162, size: 192, offset: 7104)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1206, file: !1207, line: 970, baseType: !1848, size: 64, offset: 9280)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1749, line: 20, size: 16576, elements: !1850)
!1850 = !{!1851, !1852, !1853, !1854}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1849, file: !1749, line: 21, baseType: !217)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1849, file: !1749, line: 22, baseType: !1219, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1849, file: !1749, line: 23, baseType: !1474, size: 128, offset: 64)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1849, file: !1749, line: 24, baseType: !1855, size: 16384, offset: 192)
!1855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1856, size: 16384, elements: !264)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1759, line: 49, size: 256, elements: !1857)
!1857 = !{!1858}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1856, file: !1759, line: 50, baseType: !1859, size: 256)
!1859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1759, line: 35, size: 256, elements: !1860)
!1860 = !{!1861, !1868, !1869, !1875}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1859, file: !1759, line: 37, baseType: !1862, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1863, line: 19, baseType: !1864)
!1863 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1863, line: 18, baseType: !1866)
!1866 = !DISubroutineType(types: !1867)
!1867 = !{null, !243}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1859, file: !1759, line: 38, baseType: !309, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1859, file: !1759, line: 44, baseType: !1870, size: 64, offset: 128)
!1870 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1863, line: 22, baseType: !1871)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1863, line: 21, baseType: !1873)
!1873 = !DISubroutineType(types: !1874)
!1874 = !{null}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1859, file: !1759, line: 46, baseType: !1763, size: 64, offset: 192)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1206, file: !1207, line: 971, baseType: !1763, size: 64, offset: 9344)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1206, file: !1207, line: 972, baseType: !1763, size: 64, offset: 9408)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1206, file: !1207, line: 974, baseType: !1763, size: 64, offset: 9472)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1206, file: !1207, line: 975, baseType: !1758, size: 192, offset: 9536)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1206, file: !1207, line: 976, baseType: !309, size: 64, offset: 9728)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1206, file: !1207, line: 977, baseType: !306, size: 64, offset: 9792)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1206, file: !1207, line: 978, baseType: !7, size: 32, offset: 9856)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1206, file: !1207, line: 980, baseType: !353, size: 64, offset: 9920)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1206, file: !1207, line: 989, baseType: !1885, size: 128, offset: 9984)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1886, line: 35, size: 128, elements: !1887)
!1886 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1887 = !{!1888, !1889, !1890}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1885, file: !1886, line: 36, baseType: !243, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1885, file: !1886, line: 37, baseType: !736, size: 32, offset: 32)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1885, file: !1886, line: 38, baseType: !1891, size: 64, offset: 64)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1886, line: 23, flags: DIFlagFwdDecl)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1206, file: !1207, line: 992, baseType: !406, size: 64, offset: 10112)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1206, file: !1207, line: 993, baseType: !406, size: 64, offset: 10176)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1206, file: !1207, line: 996, baseType: !217, offset: 10240)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1206, file: !1207, line: 999, baseType: !769, offset: 10240)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1206, file: !1207, line: 1001, baseType: !1898, size: 64, offset: 10240)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1207, line: 636, size: 64, elements: !1899)
!1899 = !{!1900}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1898, file: !1207, line: 637, baseType: !1901, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1206, file: !1207, line: 1005, baseType: !741, size: 128, offset: 10304)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1206, file: !1207, line: 1007, baseType: !1205, size: 64, offset: 10432)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1206, file: !1207, line: 1009, baseType: !1905, size: 64, offset: 10496)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1207, line: 1009, flags: DIFlagFwdDecl)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1206, file: !1207, line: 1043, baseType: !180, size: 64, offset: 10560)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1206, file: !1207, line: 1046, baseType: !1909, size: 64, offset: 10624)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1207, line: 41, flags: DIFlagFwdDecl)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1206, file: !1207, line: 1050, baseType: !1912, size: 64, offset: 10688)
!1912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1913, size: 64)
!1913 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1207, line: 42, flags: DIFlagFwdDecl)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1206, file: !1207, line: 1054, baseType: !1915, size: 64, offset: 10752)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1207, line: 55, flags: DIFlagFwdDecl)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1206, file: !1207, line: 1056, baseType: !1918, size: 64, offset: 10816)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1207, line: 40, flags: DIFlagFwdDecl)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1206, file: !1207, line: 1058, baseType: !1921, size: 64, offset: 10880)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1923, line: 99, size: 704, elements: !1924)
!1923 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1924 = !{!1925, !1926, !1927, !1928, !1929, !1930, !1931, !1950, !1951}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1922, file: !1923, line: 100, baseType: !760, size: 64)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1922, file: !1923, line: 101, baseType: !736, size: 32, offset: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1922, file: !1923, line: 102, baseType: !736, size: 32, offset: 96)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1922, file: !1923, line: 105, baseType: !217, offset: 128)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1922, file: !1923, line: 107, baseType: !301, size: 16, offset: 128)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1922, file: !1923, line: 109, baseType: !727, size: 128, offset: 192)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1922, file: !1923, line: 110, baseType: !1932, size: 64, offset: 320)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1933, size: 64)
!1933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1923, line: 73, size: 448, elements: !1934)
!1934 = !{!1935, !1938, !1939, !1944, !1949}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1933, file: !1923, line: 74, baseType: !1936, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1923, line: 74, flags: DIFlagFwdDecl)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1933, file: !1923, line: 75, baseType: !1921, size: 64, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, scope: !1933, file: !1923, line: 83, baseType: !1940, size: 128, offset: 128)
!1940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1933, file: !1923, line: 83, size: 128, elements: !1941)
!1941 = !{!1942, !1943}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1940, file: !1923, line: 84, baseType: !203, size: 128)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1940, file: !1923, line: 85, baseType: !924, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_member, scope: !1933, file: !1923, line: 87, baseType: !1945, size: 128, offset: 256)
!1945 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1933, file: !1923, line: 87, size: 128, elements: !1946)
!1946 = !{!1947, !1948}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1945, file: !1923, line: 88, baseType: !627, size: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1945, file: !1923, line: 89, baseType: !350, size: 128, align: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1933, file: !1923, line: 92, baseType: !7, size: 32, offset: 384)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1922, file: !1923, line: 111, baseType: !623, size: 64, offset: 384)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1922, file: !1923, line: 113, baseType: !1952, size: 256, offset: 448)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1953, line: 102, size: 256, elements: !1954)
!1953 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1954 = !{!1955, !1956, !1957}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1952, file: !1953, line: 103, baseType: !760, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1952, file: !1953, line: 104, baseType: !203, size: 128, offset: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1952, file: !1953, line: 105, baseType: !1958, size: 64, offset: 192)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1953, line: 21, baseType: !1959)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DISubroutineType(types: !1961)
!1961 = !{null, !1962}
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1206, file: !1207, line: 1061, baseType: !1964, size: 64, offset: 10944)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1207, line: 43, flags: DIFlagFwdDecl)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1206, file: !1207, line: 1064, baseType: !309, size: 64, offset: 11008)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1206, file: !1207, line: 1065, baseType: !1968, size: 64, offset: 11072)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1759, line: 14, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1759, line: 12, size: 384, elements: !1971)
!1971 = !{!1972}
!1972 = !DIDerivedType(tag: DW_TAG_member, scope: !1970, file: !1759, line: 13, baseType: !1973, size: 384)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1970, file: !1759, line: 13, size: 384, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1973, file: !1759, line: 13, baseType: !243, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1973, file: !1759, line: 13, baseType: !243, size: 32, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1973, file: !1759, line: 13, baseType: !243, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1973, file: !1759, line: 13, baseType: !1979, size: 256, offset: 128)
!1979 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1980, line: 32, size: 256, elements: !1981)
!1980 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1981 = !{!1982, !1987, !2000, !2006, !2015, !2035, !2040}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1979, file: !1980, line: 37, baseType: !1983, size: 64)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1980, line: 34, size: 64, elements: !1984)
!1984 = !{!1985, !1986}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1983, file: !1980, line: 35, baseType: !1453, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1983, file: !1980, line: 36, baseType: !426, size: 32, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1979, file: !1980, line: 45, baseType: !1988, size: 192)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1980, line: 40, size: 192, elements: !1989)
!1989 = !{!1990, !1992, !1993, !1999}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1988, file: !1980, line: 41, baseType: !1991, size: 32)
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !292, line: 95, baseType: !243)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1988, file: !1980, line: 42, baseType: !243, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1988, file: !1980, line: 43, baseType: !1994, size: 64, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1980, line: 11, baseType: !1995)
!1995 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1980, line: 8, size: 64, elements: !1996)
!1996 = !{!1997, !1998}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1995, file: !1980, line: 9, baseType: !243, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1995, file: !1980, line: 10, baseType: !180, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1988, file: !1980, line: 44, baseType: !243, size: 32, offset: 128)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1979, file: !1980, line: 52, baseType: !2001, size: 128)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1980, line: 48, size: 128, elements: !2002)
!2002 = !{!2003, !2004, !2005}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2001, file: !1980, line: 49, baseType: !1453, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2001, file: !1980, line: 50, baseType: !426, size: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2001, file: !1980, line: 51, baseType: !1994, size: 64, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1979, file: !1980, line: 61, baseType: !2007, size: 256)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1980, line: 55, size: 256, elements: !2008)
!2008 = !{!2009, !2010, !2011, !2012, !2014}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2007, file: !1980, line: 56, baseType: !1453, size: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2007, file: !1980, line: 57, baseType: !426, size: 32, offset: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2007, file: !1980, line: 58, baseType: !243, size: 32, offset: 64)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2007, file: !1980, line: 59, baseType: !2013, size: 64, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !292, line: 94, baseType: !293)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2007, file: !1980, line: 60, baseType: !2013, size: 64, offset: 192)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1979, file: !1980, line: 95, baseType: !2016, size: 256)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1980, line: 64, size: 256, elements: !2017)
!2017 = !{!2018, !2019}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2016, file: !1980, line: 65, baseType: !180, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, scope: !2016, file: !1980, line: 77, baseType: !2020, size: 192, offset: 64)
!2020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2016, file: !1980, line: 77, size: 192, elements: !2021)
!2021 = !{!2022, !2023, !2030}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2020, file: !1980, line: 82, baseType: !1194, size: 16)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2020, file: !1980, line: 88, baseType: !2024, size: 192)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2020, file: !1980, line: 84, size: 192, elements: !2025)
!2025 = !{!2026, !2028, !2029}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2024, file: !1980, line: 85, baseType: !2027, size: 64)
!2027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 64, elements: !1318)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2024, file: !1980, line: 86, baseType: !180, size: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2024, file: !1980, line: 87, baseType: !180, size: 64, offset: 128)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2020, file: !1980, line: 93, baseType: !2031, size: 96)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2020, file: !1980, line: 90, size: 96, elements: !2032)
!2032 = !{!2033, !2034}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2031, file: !1980, line: 91, baseType: !2027, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2031, file: !1980, line: 92, baseType: !402, size: 32, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1979, file: !1980, line: 101, baseType: !2036, size: 128)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1980, line: 98, size: 128, elements: !2037)
!2037 = !{!2038, !2039}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2036, file: !1980, line: 99, baseType: !294, size: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2036, file: !1980, line: 100, baseType: !243, size: 32, offset: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1979, file: !1980, line: 108, baseType: !2041, size: 128)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1979, file: !1980, line: 104, size: 128, elements: !2042)
!2042 = !{!2043, !2044, !2045}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2041, file: !1980, line: 105, baseType: !180, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2041, file: !1980, line: 106, baseType: !243, size: 32, offset: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2041, file: !1980, line: 107, baseType: !7, size: 32, offset: 96)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1206, file: !1207, line: 1067, baseType: !1831, offset: 11136)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1206, file: !1207, line: 1099, baseType: !2048, size: 64, offset: 11136)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1207, line: 56, flags: DIFlagFwdDecl)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1206, file: !1207, line: 1103, baseType: !203, size: 128, offset: 11200)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1206, file: !1207, line: 1104, baseType: !2052, size: 64, offset: 11328)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1207, line: 46, flags: DIFlagFwdDecl)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1206, file: !1207, line: 1105, baseType: !1162, size: 192, offset: 11392)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1206, file: !1207, line: 1106, baseType: !7, size: 32, offset: 11584)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1206, file: !1207, line: 1109, baseType: !2057, size: 128, offset: 11648)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2058, size: 128, elements: !1562)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1207, line: 51, flags: DIFlagFwdDecl)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1206, file: !1207, line: 1110, baseType: !1162, size: 192, offset: 11776)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1206, file: !1207, line: 1111, baseType: !203, size: 128, offset: 11968)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1206, file: !1207, line: 1173, baseType: !2063, size: 64, offset: 12096)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2065, line: 62, size: 256, align: 256, elements: !2066)
!2065 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2066 = !{!2067, !2068, !2069, !2074}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2064, file: !2065, line: 75, baseType: !402, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2064, file: !2065, line: 90, baseType: !402, size: 32, offset: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2064, file: !2065, line: 124, baseType: !2070, size: 64, offset: 64)
!2070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2064, file: !2065, line: 109, size: 64, elements: !2071)
!2071 = !{!2072, !2073}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2070, file: !2065, line: 110, baseType: !407, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2070, file: !2065, line: 112, baseType: !407, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2064, file: !2065, line: 144, baseType: !402, size: 32, offset: 128)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1206, file: !1207, line: 1174, baseType: !400, size: 32, offset: 12160)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1206, file: !1207, line: 1179, baseType: !309, size: 64, offset: 12224)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1206, file: !1207, line: 1182, baseType: !2078, size: 128, offset: 12288)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1140, line: 76, size: 128, elements: !2079)
!2079 = !{!2080, !2085, !2086}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2078, file: !1140, line: 85, baseType: !2081, size: 64)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2082, line: 7, size: 64, elements: !2083)
!2082 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2083 = !{!2084}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2081, file: !2082, line: 12, baseType: !1355, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2078, file: !1140, line: 88, baseType: !475, size: 8, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2078, file: !1140, line: 95, baseType: !475, size: 8, offset: 72)
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !1206, file: !1207, line: 1184, baseType: !2088, size: 128, offset: 12416)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1206, file: !1207, line: 1184, size: 128, elements: !2089)
!2089 = !{!2090, !2091}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2088, file: !1207, line: 1185, baseType: !1219, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2088, file: !1207, line: 1186, baseType: !350, size: 128, align: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1206, file: !1207, line: 1190, baseType: !2093, size: 64, offset: 12544)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1207, line: 53, flags: DIFlagFwdDecl)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1206, file: !1207, line: 1192, baseType: !2096, size: 128, offset: 12608)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1140, line: 64, size: 128, elements: !2097)
!2097 = !{!2098, !2099, !2100}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2096, file: !1140, line: 65, baseType: !709, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2096, file: !1140, line: 67, baseType: !402, size: 32, offset: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2096, file: !1140, line: 68, baseType: !402, size: 32, offset: 96)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1206, file: !1207, line: 1206, baseType: !243, size: 32, offset: 12736)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1206, file: !1207, line: 1207, baseType: !243, size: 32, offset: 12768)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1206, file: !1207, line: 1209, baseType: !309, size: 64, offset: 12800)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1206, file: !1207, line: 1219, baseType: !406, size: 64, offset: 12864)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1206, file: !1207, line: 1220, baseType: !406, size: 64, offset: 12928)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1206, file: !1207, line: 1317, baseType: !243, size: 32, offset: 12992)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1206, file: !1207, line: 1319, baseType: !1205, size: 64, offset: 13056)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1206, file: !1207, line: 1322, baseType: !2109, size: 64, offset: 13120)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 64)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2111, line: 56, size: 512, elements: !2112)
!2111 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2112 = !{!2113, !2114, !2115, !2116, !2117, !2118, !2119, !2121}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2110, file: !2111, line: 57, baseType: !2109, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2110, file: !2111, line: 58, baseType: !180, size: 64, offset: 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2110, file: !2111, line: 59, baseType: !309, size: 64, offset: 128)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2110, file: !2111, line: 60, baseType: !309, size: 64, offset: 192)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2110, file: !2111, line: 61, baseType: !809, size: 64, offset: 256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2110, file: !2111, line: 62, baseType: !7, size: 32, offset: 320)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2110, file: !2111, line: 63, baseType: !2120, size: 64, offset: 384)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !204, line: 153, baseType: !406)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2110, file: !2111, line: 64, baseType: !2122, size: 64, offset: 448)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1206, file: !1207, line: 1326, baseType: !1219, size: 32, offset: 13184)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1206, file: !1207, line: 1342, baseType: !180, size: 64, offset: 13248)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1206, file: !1207, line: 1343, baseType: !407, size: 64, offset: 13312)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1206, file: !1207, line: 1344, baseType: !406, size: 64, offset: 13376)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1206, file: !1207, line: 1345, baseType: !407, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1206, file: !1207, line: 1346, baseType: !407, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1206, file: !1207, line: 1347, baseType: !407, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1206, file: !1207, line: 1348, baseType: !350, size: 128, align: 64, offset: 13504)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1206, file: !1207, line: 1358, baseType: !2133, size: 34816, offset: 13824)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2134, line: 485, size: 34816, elements: !2135)
!2134 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2135 = !{!2136, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2165, !2166, !2167, !2168, !2169, !2170, !2173, !2174, !2175}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2133, file: !2134, line: 487, baseType: !2137, size: 192)
!2137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2138, size: 192, elements: !260)
!2138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2139, line: 16, size: 64, elements: !2140)
!2139 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2140 = !{!2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2138, file: !2139, line: 17, baseType: !848, size: 16)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2138, file: !2139, line: 18, baseType: !848, size: 16, offset: 16)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2138, file: !2139, line: 19, baseType: !848, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2138, file: !2139, line: 19, baseType: !848, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2138, file: !2139, line: 19, baseType: !848, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2138, file: !2139, line: 19, baseType: !848, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2138, file: !2139, line: 19, baseType: !848, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2138, file: !2139, line: 20, baseType: !848, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2138, file: !2139, line: 20, baseType: !848, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2138, file: !2139, line: 20, baseType: !848, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2138, file: !2139, line: 20, baseType: !848, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2138, file: !2139, line: 20, baseType: !848, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2138, file: !2139, line: 20, baseType: !848, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2133, file: !2134, line: 491, baseType: !309, size: 64, offset: 192)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2133, file: !2134, line: 495, baseType: !301, size: 16, offset: 256)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2133, file: !2134, line: 496, baseType: !301, size: 16, offset: 272)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2133, file: !2134, line: 497, baseType: !301, size: 16, offset: 288)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2133, file: !2134, line: 498, baseType: !301, size: 16, offset: 304)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2133, file: !2134, line: 502, baseType: !309, size: 64, offset: 320)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2133, file: !2134, line: 503, baseType: !309, size: 64, offset: 384)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2133, file: !2134, line: 514, baseType: !2162, size: 256, offset: 448)
!2162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2163, size: 256, elements: !1144)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2134, line: 483, flags: DIFlagFwdDecl)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2133, file: !2134, line: 516, baseType: !309, size: 64, offset: 704)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2133, file: !2134, line: 518, baseType: !309, size: 64, offset: 768)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2133, file: !2134, line: 520, baseType: !309, size: 64, offset: 832)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2133, file: !2134, line: 521, baseType: !309, size: 64, offset: 896)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2133, file: !2134, line: 522, baseType: !309, size: 64, offset: 960)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2133, file: !2134, line: 528, baseType: !2171, size: 64, offset: 1024)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2134, line: 10, flags: DIFlagFwdDecl)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2133, file: !2134, line: 535, baseType: !309, size: 64, offset: 1088)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2133, file: !2134, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2133, file: !2134, line: 540, baseType: !2176, size: 33280, offset: 1536)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2177, line: 317, size: 33280, elements: !2178)
!2177 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2178 = !{!2179, !2180, !2181}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2176, file: !2177, line: 330, baseType: !7, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2176, file: !2177, line: 337, baseType: !309, size: 64, offset: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2176, file: !2177, line: 348, baseType: !2182, size: 32768, offset: 512)
!2182 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2177, line: 304, size: 32768, elements: !2183)
!2183 = !{!2184, !2199, !2238, !2288, !2301}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2182, file: !2177, line: 305, baseType: !2185, size: 896)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2177, line: 12, size: 896, elements: !2186)
!2186 = !{!2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2198}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2185, file: !2177, line: 13, baseType: !400, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2185, file: !2177, line: 14, baseType: !400, size: 32, offset: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2185, file: !2177, line: 15, baseType: !400, size: 32, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2185, file: !2177, line: 16, baseType: !400, size: 32, offset: 96)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2185, file: !2177, line: 17, baseType: !400, size: 32, offset: 128)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2185, file: !2177, line: 18, baseType: !400, size: 32, offset: 160)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2185, file: !2177, line: 19, baseType: !400, size: 32, offset: 192)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2185, file: !2177, line: 22, baseType: !2195, size: 640, offset: 224)
!2195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 640, elements: !2196)
!2196 = !{!2197}
!2197 = !DISubrange(count: 20)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2185, file: !2177, line: 25, baseType: !400, size: 32, offset: 864)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2182, file: !2177, line: 306, baseType: !2200, size: 4096, align: 128)
!2200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2177, line: 34, size: 4096, align: 128, elements: !2201)
!2201 = !{!2202, !2203, !2204, !2205, !2206, !2221, !2222, !2223, !2227, !2229, !2233}
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2200, file: !2177, line: 35, baseType: !848, size: 16)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2200, file: !2177, line: 36, baseType: !848, size: 16, offset: 16)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2200, file: !2177, line: 37, baseType: !848, size: 16, offset: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2200, file: !2177, line: 38, baseType: !848, size: 16, offset: 48)
!2206 = !DIDerivedType(tag: DW_TAG_member, scope: !2200, file: !2177, line: 39, baseType: !2207, size: 128, offset: 64)
!2207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2200, file: !2177, line: 39, size: 128, elements: !2208)
!2208 = !{!2209, !2214}
!2209 = !DIDerivedType(tag: DW_TAG_member, scope: !2207, file: !2177, line: 40, baseType: !2210, size: 128)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2207, file: !2177, line: 40, size: 128, elements: !2211)
!2211 = !{!2212, !2213}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2210, file: !2177, line: 41, baseType: !406, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2210, file: !2177, line: 42, baseType: !406, size: 64, offset: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, scope: !2207, file: !2177, line: 44, baseType: !2215, size: 128)
!2215 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2207, file: !2177, line: 44, size: 128, elements: !2216)
!2216 = !{!2217, !2218, !2219, !2220}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2215, file: !2177, line: 45, baseType: !400, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2215, file: !2177, line: 46, baseType: !400, size: 32, offset: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2215, file: !2177, line: 47, baseType: !400, size: 32, offset: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2215, file: !2177, line: 48, baseType: !400, size: 32, offset: 96)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2200, file: !2177, line: 51, baseType: !400, size: 32, offset: 192)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2200, file: !2177, line: 52, baseType: !400, size: 32, offset: 224)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2200, file: !2177, line: 55, baseType: !2224, size: 1024, offset: 256)
!2224 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 1024, elements: !2225)
!2225 = !{!2226}
!2226 = !DISubrange(count: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2200, file: !2177, line: 58, baseType: !2228, size: 2048, offset: 1280)
!2228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 2048, elements: !264)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2200, file: !2177, line: 60, baseType: !2230, size: 384, offset: 3328)
!2230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 384, elements: !2231)
!2231 = !{!2232}
!2232 = !DISubrange(count: 12)
!2233 = !DIDerivedType(tag: DW_TAG_member, scope: !2200, file: !2177, line: 62, baseType: !2234, size: 384, offset: 3712)
!2234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2200, file: !2177, line: 62, size: 384, elements: !2235)
!2235 = !{!2236, !2237}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2234, file: !2177, line: 63, baseType: !2230, size: 384)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2234, file: !2177, line: 64, baseType: !2230, size: 384)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2182, file: !2177, line: 307, baseType: !2239, size: 1088)
!2239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2177, line: 79, size: 1088, elements: !2240)
!2240 = !{!2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2287}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2239, file: !2177, line: 80, baseType: !400, size: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2239, file: !2177, line: 81, baseType: !400, size: 32, offset: 32)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2239, file: !2177, line: 82, baseType: !400, size: 32, offset: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2239, file: !2177, line: 83, baseType: !400, size: 32, offset: 96)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2239, file: !2177, line: 84, baseType: !400, size: 32, offset: 128)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2239, file: !2177, line: 85, baseType: !400, size: 32, offset: 160)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2239, file: !2177, line: 86, baseType: !400, size: 32, offset: 192)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2239, file: !2177, line: 88, baseType: !2195, size: 640, offset: 224)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2239, file: !2177, line: 89, baseType: !1340, size: 8, offset: 864)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2239, file: !2177, line: 90, baseType: !1340, size: 8, offset: 872)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2239, file: !2177, line: 91, baseType: !1340, size: 8, offset: 880)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2239, file: !2177, line: 92, baseType: !1340, size: 8, offset: 888)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2239, file: !2177, line: 93, baseType: !1340, size: 8, offset: 896)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2239, file: !2177, line: 94, baseType: !1340, size: 8, offset: 904)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2239, file: !2177, line: 95, baseType: !2256, size: 64, offset: 960)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2258, line: 11, size: 128, elements: !2259)
!2258 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2257, file: !2258, line: 12, baseType: !294, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2257, file: !2258, line: 13, baseType: !2262, size: 64, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2264, line: 56, size: 1344, elements: !2265)
!2264 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2265 = !{!2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2263, file: !2264, line: 61, baseType: !309, size: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2263, file: !2264, line: 62, baseType: !309, size: 64, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2263, file: !2264, line: 63, baseType: !309, size: 64, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2263, file: !2264, line: 64, baseType: !309, size: 64, offset: 192)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2263, file: !2264, line: 65, baseType: !309, size: 64, offset: 256)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2263, file: !2264, line: 66, baseType: !309, size: 64, offset: 320)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2263, file: !2264, line: 68, baseType: !309, size: 64, offset: 384)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2263, file: !2264, line: 69, baseType: !309, size: 64, offset: 448)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2263, file: !2264, line: 70, baseType: !309, size: 64, offset: 512)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2263, file: !2264, line: 71, baseType: !309, size: 64, offset: 576)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2263, file: !2264, line: 72, baseType: !309, size: 64, offset: 640)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2263, file: !2264, line: 73, baseType: !309, size: 64, offset: 704)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2263, file: !2264, line: 74, baseType: !309, size: 64, offset: 768)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2263, file: !2264, line: 75, baseType: !309, size: 64, offset: 832)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2263, file: !2264, line: 76, baseType: !309, size: 64, offset: 896)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2263, file: !2264, line: 81, baseType: !309, size: 64, offset: 960)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2263, file: !2264, line: 83, baseType: !309, size: 64, offset: 1024)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2263, file: !2264, line: 84, baseType: !309, size: 64, offset: 1088)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2263, file: !2264, line: 85, baseType: !309, size: 64, offset: 1152)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2263, file: !2264, line: 86, baseType: !309, size: 64, offset: 1216)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2263, file: !2264, line: 87, baseType: !309, size: 64, offset: 1280)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2239, file: !2177, line: 96, baseType: !400, size: 32, offset: 1024)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2182, file: !2177, line: 308, baseType: !2289, size: 4608, align: 512)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2177, line: 289, size: 4608, align: 512, elements: !2290)
!2290 = !{!2291, !2292, !2299}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2289, file: !2177, line: 290, baseType: !2200, size: 4096, align: 128)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2289, file: !2177, line: 291, baseType: !2293, size: 512, offset: 4096)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2177, line: 268, size: 512, elements: !2294)
!2294 = !{!2295, !2296, !2297}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2293, file: !2177, line: 269, baseType: !406, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2293, file: !2177, line: 270, baseType: !406, size: 64, offset: 64)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2293, file: !2177, line: 271, baseType: !2298, size: 384, offset: 128)
!2298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 384, elements: !1618)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2289, file: !2177, line: 292, baseType: !2300, offset: 4608)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1340, elements: !1716)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2182, file: !2177, line: 309, baseType: !2302, size: 32768)
!2302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1340, size: 32768, elements: !2303)
!2303 = !{!2304}
!2304 = !DISubrange(count: 4096)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1202, file: !711, line: 378, baseType: !2306, size: 64, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1198, file: !711, line: 384, baseType: !1495, size: 192, offset: 192)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !967, file: !711, line: 500, baseType: !217, offset: 6656)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !967, file: !711, line: 501, baseType: !2310, size: 64, offset: 6656)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 64)
!2311 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !711, line: 387, flags: DIFlagFwdDecl)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !967, file: !711, line: 516, baseType: !1706, size: 64, offset: 6720)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !967, file: !711, line: 519, baseType: !337, size: 64, offset: 6784)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !967, file: !711, line: 521, baseType: !2315, size: 64, offset: 6848)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !711, line: 521, flags: DIFlagFwdDecl)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !967, file: !711, line: 545, baseType: !736, size: 32, offset: 6912)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !967, file: !711, line: 548, baseType: !475, size: 8, offset: 6944)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !967, file: !711, line: 550, baseType: !2320, offset: 6952)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2321, line: 142, elements: !231)
!2321 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !967, file: !711, line: 554, baseType: !1952, size: 256, offset: 6976)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !967, file: !711, line: 557, baseType: !400, size: 32, offset: 7232)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !964, file: !711, line: 565, baseType: !2325, offset: 7296)
!2325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, elements: !2326)
!2326 = !{!2327}
!2327 = !DISubrange(count: -1)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !960, file: !711, line: 151, baseType: !736, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !953, file: !711, line: 156, baseType: !217, offset: 256)
!2330 = !DIDerivedType(tag: DW_TAG_member, scope: !715, file: !711, line: 159, baseType: !2331, size: 128)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !715, file: !711, line: 159, size: 128, elements: !2332)
!2332 = !{!2333, !2397}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2331, file: !711, line: 161, baseType: !2334, size: 64)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2336)
!2336 = !{!2337, !2347, !2368, !2369, !2370, !2371, !2372, !2384, !2385, !2386}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2335, file: !31, line: 111, baseType: !2338, size: 384)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2339)
!2339 = !{!2340, !2342, !2343, !2344, !2345, !2346}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2338, file: !31, line: 20, baseType: !2341, size: 64)
!2341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !309)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2338, file: !31, line: 21, baseType: !2341, size: 64, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2338, file: !31, line: 22, baseType: !2341, size: 64, offset: 128)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2338, file: !31, line: 23, baseType: !309, size: 64, offset: 192)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2338, file: !31, line: 24, baseType: !309, size: 64, offset: 256)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2338, file: !31, line: 25, baseType: !309, size: 64, offset: 320)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2335, file: !31, line: 112, baseType: !2348, size: 64, offset: 384)
!2348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2349, size: 64)
!2349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2350, line: 105, size: 128, elements: !2351)
!2350 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2351 = !{!2352, !2353}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2349, file: !2350, line: 110, baseType: !309, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2349, file: !2350, line: 118, baseType: !2354, size: 64, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2350, line: 95, size: 448, elements: !2356)
!2356 = !{!2357, !2358, !2363, !2364, !2365, !2366, !2367}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2355, file: !2350, line: 96, baseType: !760, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2355, file: !2350, line: 97, baseType: !2359, size: 64, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2350, line: 60, baseType: !2361)
!2361 = !DISubroutineType(types: !2362)
!2362 = !{null, !2348}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2355, file: !2350, line: 98, baseType: !2359, size: 64, offset: 128)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2355, file: !2350, line: 99, baseType: !475, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2355, file: !2350, line: 100, baseType: !475, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2355, file: !2350, line: 101, baseType: !350, size: 128, align: 64, offset: 256)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2355, file: !2350, line: 102, baseType: !2348, size: 64, offset: 384)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2335, file: !31, line: 113, baseType: !2349, size: 128, offset: 448)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2335, file: !31, line: 114, baseType: !1495, size: 192, offset: 576)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2335, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2335, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2335, file: !31, line: 117, baseType: !2373, size: 64, offset: 832)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2375)
!2375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2376)
!2376 = !{!2377, !2378, !2382, !2383}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2375, file: !31, line: 73, baseType: !829, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2375, file: !31, line: 78, baseType: !2379, size: 64, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{null, !2334}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2375, file: !31, line: 83, baseType: !2379, size: 64, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2375, file: !31, line: 89, baseType: !1016, size: 64, offset: 192)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2335, file: !31, line: 118, baseType: !180, size: 64, offset: 896)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2335, file: !31, line: 119, baseType: !243, size: 32, offset: 960)
!2386 = !DIDerivedType(tag: DW_TAG_member, scope: !2335, file: !31, line: 120, baseType: !2387, size: 128, offset: 1024)
!2387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2335, file: !31, line: 120, size: 128, elements: !2388)
!2388 = !{!2389, !2395}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2387, file: !31, line: 121, baseType: !2390, size: 128)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2391, line: 6, size: 128, elements: !2392)
!2391 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2392 = !{!2393, !2394}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2390, file: !2391, line: 7, baseType: !406, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2390, file: !2391, line: 8, baseType: !406, size: 64, offset: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2387, file: !31, line: 122, baseType: !2396)
!2396 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2390, elements: !1716)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2331, file: !711, line: 162, baseType: !180, size: 64, offset: 64)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !715, file: !711, line: 176, baseType: !350, size: 128, align: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, scope: !710, file: !711, line: 179, baseType: !2400, size: 32, offset: 384)
!2400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !710, file: !711, line: 179, size: 32, elements: !2401)
!2401 = !{!2402, !2403, !2404, !2405}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2400, file: !711, line: 184, baseType: !736, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2400, file: !711, line: 192, baseType: !7, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2400, file: !711, line: 194, baseType: !7, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2400, file: !711, line: 195, baseType: !243, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !710, file: !711, line: 199, baseType: !736, size: 32, offset: 416)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !645, file: !44, line: 1964, baseType: !2408, size: 64, offset: 1344)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = !DISubroutineType(types: !2410)
!2410 = !{!294, !584, !2411}
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 64)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2413, line: 12, size: 256, elements: !2414)
!2413 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2414 = !{!2415, !2416, !2417, !2418, !2419}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2412, file: !2413, line: 13, baseType: !732, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2412, file: !2413, line: 16, baseType: !243, size: 32, offset: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2412, file: !2413, line: 23, baseType: !309, size: 64, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2412, file: !2413, line: 30, baseType: !309, size: 64, offset: 128)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2412, file: !2413, line: 33, baseType: !2420, size: 64, offset: 192)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !711, line: 27, flags: DIFlagFwdDecl)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !645, file: !44, line: 1966, baseType: !2408, size: 64, offset: 1408)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !585, file: !44, line: 1424, baseType: !2424, size: 64, offset: 448)
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2426)
!2426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2427)
!2427 = !{!2428, !2474, !2478, !2482, !2483, !2484, !2485, !2486, !2491, !2496, !2500}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2426, file: !38, line: 323, baseType: !2429, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = !DISubroutineType(types: !2431)
!2431 = !{!243, !2432}
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2434)
!2434 = !{!2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2459, !2460, !2461}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2433, file: !38, line: 295, baseType: !627, size: 128)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2433, file: !38, line: 296, baseType: !203, size: 128, offset: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2433, file: !38, line: 297, baseType: !203, size: 128, offset: 256)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2433, file: !38, line: 298, baseType: !203, size: 128, offset: 384)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2433, file: !38, line: 299, baseType: !1162, size: 192, offset: 512)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2433, file: !38, line: 300, baseType: !217, offset: 704)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2433, file: !38, line: 301, baseType: !736, size: 32, offset: 704)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2433, file: !38, line: 302, baseType: !584, size: 64, offset: 768)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2433, file: !38, line: 303, baseType: !2444, size: 64, offset: 832)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2445)
!2445 = !{!2446, !2458}
!2446 = !DIDerivedType(tag: DW_TAG_member, scope: !2444, file: !38, line: 69, baseType: !2447, size: 32)
!2447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2444, file: !38, line: 69, size: 32, elements: !2448)
!2448 = !{!2449, !2450, !2451}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2447, file: !38, line: 70, baseType: !420, size: 32)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2447, file: !38, line: 71, baseType: !428, size: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2447, file: !38, line: 72, baseType: !2452, size: 32)
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2453, line: 24, baseType: !2454)
!2453 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2453, line: 22, size: 32, elements: !2455)
!2455 = !{!2456}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2454, file: !2453, line: 23, baseType: !2457, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2453, line: 20, baseType: !426)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2444, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2433, file: !38, line: 304, baseType: !516, size: 64, offset: 896)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2433, file: !38, line: 305, baseType: !309, size: 64, offset: 960)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2433, file: !38, line: 306, baseType: !2462, size: 576, offset: 1024)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2463)
!2463 = !{!2464, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2462, file: !38, line: 206, baseType: !2465, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !518)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2462, file: !38, line: 207, baseType: !2465, size: 64, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2462, file: !38, line: 208, baseType: !2465, size: 64, offset: 128)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2462, file: !38, line: 209, baseType: !2465, size: 64, offset: 192)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2462, file: !38, line: 210, baseType: !2465, size: 64, offset: 256)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2462, file: !38, line: 211, baseType: !2465, size: 64, offset: 320)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2462, file: !38, line: 212, baseType: !2465, size: 64, offset: 384)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2462, file: !38, line: 213, baseType: !524, size: 64, offset: 448)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2462, file: !38, line: 214, baseType: !524, size: 64, offset: 512)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2426, file: !38, line: 324, baseType: !2475, size: 64, offset: 64)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!2432, !584, !243}
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2426, file: !38, line: 325, baseType: !2479, size: 64, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = !DISubroutineType(types: !2481)
!2481 = !{null, !2432}
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2426, file: !38, line: 326, baseType: !2429, size: 64, offset: 192)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2426, file: !38, line: 327, baseType: !2429, size: 64, offset: 256)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2426, file: !38, line: 328, baseType: !2429, size: 64, offset: 320)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2426, file: !38, line: 329, baseType: !673, size: 64, offset: 384)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2426, file: !38, line: 332, baseType: !2487, size: 64, offset: 448)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{!2490, !414}
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2426, file: !38, line: 333, baseType: !2492, size: 64, offset: 512)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!243, !414, !2495}
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2426, file: !38, line: 335, baseType: !2497, size: 64, offset: 576)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{!243, !414, !2490}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2426, file: !38, line: 337, baseType: !2501, size: 64, offset: 640)
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2502, size: 64)
!2502 = !DISubroutineType(types: !2503)
!2503 = !{!243, !584, !2504}
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !585, file: !44, line: 1425, baseType: !2506, size: 64, offset: 512)
!2506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2507, size: 64)
!2507 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2508)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2509)
!2509 = !{!2510, !2514, !2515, !2519, !2520, !2521, !2536, !2559, !2563, !2564, !2587}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2508, file: !38, line: 429, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = !DISubroutineType(types: !2513)
!2513 = !{!243, !584, !243, !243, !534}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2508, file: !38, line: 430, baseType: !673, size: 64, offset: 64)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2508, file: !38, line: 431, baseType: !2516, size: 64, offset: 128)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{!243, !584, !7}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2508, file: !38, line: 432, baseType: !2516, size: 64, offset: 192)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2508, file: !38, line: 433, baseType: !673, size: 64, offset: 256)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2508, file: !38, line: 434, baseType: !2522, size: 64, offset: 320)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!243, !584, !243, !2525}
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2527)
!2527 = !{!2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2526, file: !38, line: 416, baseType: !243, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2526, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2526, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2526, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2526, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2526, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2526, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2526, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2508, file: !38, line: 435, baseType: !2537, size: 64, offset: 384)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2538 = !DISubroutineType(types: !2539)
!2539 = !{!243, !584, !2444, !2540}
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2541, file: !38, line: 344, baseType: !243, size: 32)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2541, file: !38, line: 345, baseType: !406, size: 64, offset: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2541, file: !38, line: 346, baseType: !406, size: 64, offset: 128)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2541, file: !38, line: 347, baseType: !406, size: 64, offset: 192)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2541, file: !38, line: 348, baseType: !406, size: 64, offset: 256)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2541, file: !38, line: 349, baseType: !406, size: 64, offset: 320)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2541, file: !38, line: 350, baseType: !406, size: 64, offset: 384)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2541, file: !38, line: 351, baseType: !766, size: 64, offset: 448)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2541, file: !38, line: 353, baseType: !766, size: 64, offset: 512)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2541, file: !38, line: 354, baseType: !243, size: 32, offset: 576)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2541, file: !38, line: 355, baseType: !243, size: 32, offset: 608)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2541, file: !38, line: 356, baseType: !406, size: 64, offset: 640)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2541, file: !38, line: 357, baseType: !406, size: 64, offset: 704)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2541, file: !38, line: 358, baseType: !406, size: 64, offset: 768)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2541, file: !38, line: 359, baseType: !766, size: 64, offset: 832)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2541, file: !38, line: 360, baseType: !243, size: 32, offset: 896)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2508, file: !38, line: 436, baseType: !2560, size: 64, offset: 448)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = !DISubroutineType(types: !2562)
!2562 = !{!243, !584, !2504, !2540}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2508, file: !38, line: 438, baseType: !2537, size: 64, offset: 512)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2508, file: !38, line: 439, baseType: !2565, size: 64, offset: 576)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2566 = !DISubroutineType(types: !2567)
!2567 = !{!243, !584, !2568}
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2570)
!2570 = !{!2571, !2572}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2569, file: !38, line: 410, baseType: !7, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2569, file: !38, line: 411, baseType: !2573, size: 1344, offset: 64)
!2573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2574, size: 1344, elements: !260)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2575)
!2575 = !{!2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2586}
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2574, file: !38, line: 396, baseType: !7, size: 32)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2574, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2574, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2574, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2574, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2574, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2574, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2574, file: !38, line: 404, baseType: !408, size: 64, offset: 256)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2574, file: !38, line: 405, baseType: !2585, size: 64, offset: 320)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !204, line: 126, baseType: !406)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2574, file: !38, line: 406, baseType: !2585, size: 64, offset: 384)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2508, file: !38, line: 440, baseType: !2516, size: 64, offset: 640)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !585, file: !44, line: 1426, baseType: !2589, size: 64, offset: 576)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2591)
!2591 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !585, file: !44, line: 1427, baseType: !309, size: 64, offset: 640)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !585, file: !44, line: 1428, baseType: !309, size: 64, offset: 704)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !585, file: !44, line: 1429, baseType: !309, size: 64, offset: 768)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !585, file: !44, line: 1430, baseType: !367, size: 64, offset: 832)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !585, file: !44, line: 1431, baseType: !756, size: 256, offset: 896)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !585, file: !44, line: 1432, baseType: !243, size: 32, offset: 1152)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !585, file: !44, line: 1433, baseType: !736, size: 32, offset: 1184)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !585, file: !44, line: 1437, baseType: !2600, size: 64, offset: 1216)
!2600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2601, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2603)
!2603 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !585, file: !44, line: 1449, baseType: !2605, size: 64, offset: 1280)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !383, line: 34, size: 64, elements: !2606)
!2606 = !{!2607}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2605, file: !383, line: 35, baseType: !386, size: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !585, file: !44, line: 1450, baseType: !203, size: 128, offset: 1344)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !585, file: !44, line: 1451, baseType: !2610, size: 64, offset: 1472)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !585, file: !44, line: 1452, baseType: !1918, size: 64, offset: 1536)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !585, file: !44, line: 1453, baseType: !2614, size: 64, offset: 1600)
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 64)
!2615 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !585, file: !44, line: 1454, baseType: !627, size: 128, offset: 1664)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !585, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !585, file: !44, line: 1456, baseType: !2619, size: 2432, offset: 1856)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2620)
!2620 = !{!2621, !2622, !2623, !2625, !2657}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2619, file: !38, line: 519, baseType: !7, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2619, file: !38, line: 520, baseType: !756, size: 256, offset: 64)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2619, file: !38, line: 521, baseType: !2624, size: 192, offset: 320)
!2624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !414, size: 192, elements: !260)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2619, file: !38, line: 522, baseType: !2626, size: 1728, offset: 512)
!2626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2627, size: 1728, elements: !260)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2628)
!2628 = !{!2629, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2627, file: !38, line: 223, baseType: !2630, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2632)
!2632 = !{!2633, !2634, !2647, !2648}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2631, file: !38, line: 444, baseType: !243, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2631, file: !38, line: 445, baseType: !2635, size: 64, offset: 64)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2637)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2638)
!2638 = !{!2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2637, file: !38, line: 311, baseType: !673, size: 64)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2637, file: !38, line: 312, baseType: !673, size: 64, offset: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2637, file: !38, line: 313, baseType: !673, size: 64, offset: 128)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2637, file: !38, line: 314, baseType: !673, size: 64, offset: 192)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2637, file: !38, line: 315, baseType: !2429, size: 64, offset: 256)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2637, file: !38, line: 316, baseType: !2429, size: 64, offset: 320)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2637, file: !38, line: 317, baseType: !2429, size: 64, offset: 384)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2637, file: !38, line: 318, baseType: !2501, size: 64, offset: 448)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2631, file: !38, line: 446, baseType: !618, size: 64, offset: 128)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2631, file: !38, line: 447, baseType: !2630, size: 64, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2627, file: !38, line: 224, baseType: !243, size: 32, offset: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2627, file: !38, line: 226, baseType: !203, size: 128, offset: 128)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2627, file: !38, line: 227, baseType: !309, size: 64, offset: 256)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2627, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2627, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2627, file: !38, line: 230, baseType: !2465, size: 64, offset: 384)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2627, file: !38, line: 231, baseType: !2465, size: 64, offset: 448)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2627, file: !38, line: 232, baseType: !180, size: 64, offset: 512)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2619, file: !38, line: 523, baseType: !2658, size: 192, offset: 2240)
!2658 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2635, size: 192, elements: !260)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !585, file: !44, line: 1458, baseType: !2660, size: 2112, offset: 4288)
!2660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2661)
!2661 = !{!2662, !2663, !2664}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2660, file: !44, line: 1411, baseType: !243, size: 32)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2660, file: !44, line: 1412, baseType: !1474, size: 128, offset: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2660, file: !44, line: 1413, baseType: !2665, size: 1920, offset: 192)
!2665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2666, size: 1920, elements: !260)
!2666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2667, line: 12, size: 640, elements: !2668)
!2667 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2668 = !{!2669, !2677, !2679, !2684, !2685}
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2666, file: !2667, line: 13, baseType: !2670, size: 320)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2671, line: 17, size: 320, elements: !2672)
!2671 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2672 = !{!2673, !2674, !2675, !2676}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2670, file: !2671, line: 18, baseType: !243, size: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2670, file: !2671, line: 19, baseType: !243, size: 32, offset: 32)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2670, file: !2671, line: 20, baseType: !1474, size: 128, offset: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2670, file: !2671, line: 22, baseType: !350, size: 128, align: 64, offset: 192)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2666, file: !2667, line: 14, baseType: !2678, size: 64, offset: 320)
!2678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2666, file: !2667, line: 15, baseType: !2680, size: 64, offset: 384)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2681, line: 16, size: 64, elements: !2682)
!2681 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2682 = !{!2683}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2680, file: !2681, line: 17, baseType: !1205, size: 64)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2666, file: !2667, line: 16, baseType: !1474, size: 128, offset: 448)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2666, file: !2667, line: 17, baseType: !736, size: 32, offset: 576)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !585, file: !44, line: 1465, baseType: !180, size: 64, offset: 6400)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !585, file: !44, line: 1468, baseType: !400, size: 32, offset: 6464)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !585, file: !44, line: 1470, baseType: !524, size: 64, offset: 6528)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !585, file: !44, line: 1471, baseType: !524, size: 64, offset: 6592)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !585, file: !44, line: 1473, baseType: !402, size: 32, offset: 6656)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !585, file: !44, line: 1474, baseType: !2692, size: 64, offset: 6720)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !585, file: !44, line: 1477, baseType: !2695, size: 256, offset: 6784)
!2695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 256, elements: !2225)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !585, file: !44, line: 1478, baseType: !2697, size: 128, offset: 7040)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2698, line: 18, baseType: !2699)
!2698 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2698, line: 16, size: 128, elements: !2700)
!2700 = !{!2701}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2699, file: !2698, line: 17, baseType: !2702, size: 128)
!2702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1341, size: 128, elements: !1728)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !585, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !585, file: !44, line: 1481, baseType: !2705, size: 32, offset: 7200)
!2705 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !204, line: 150, baseType: !7)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !585, file: !44, line: 1487, baseType: !1162, size: 192, offset: 7232)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !585, file: !44, line: 1493, baseType: !199, size: 64, offset: 7424)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !585, file: !44, line: 1495, baseType: !2709, size: 64, offset: 7488)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2711)
!2711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !365, line: 135, size: 1024, align: 512, elements: !2712)
!2712 = !{!2713, !2717, !2718, !2725, !2731, !2735, !2739, !2743, !2744, !2748, !2752, !2757, !2761}
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2711, file: !365, line: 136, baseType: !2714, size: 64)
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DISubroutineType(types: !2716)
!2716 = !{!243, !367, !7}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2711, file: !365, line: 137, baseType: !2714, size: 64, offset: 64)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2711, file: !365, line: 138, baseType: !2719, size: 64, offset: 128)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{!243, !2722, !2724}
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !368)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2711, file: !365, line: 139, baseType: !2726, size: 64, offset: 192)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = !DISubroutineType(types: !2728)
!2728 = !{!243, !2722, !7, !199, !2729}
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2711, file: !365, line: 141, baseType: !2732, size: 64, offset: 256)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{!243, !2722}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2711, file: !365, line: 142, baseType: !2736, size: 64, offset: 320)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{!243, !367}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2711, file: !365, line: 143, baseType: !2740, size: 64, offset: 384)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 64)
!2741 = !DISubroutineType(types: !2742)
!2742 = !{null, !367}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2711, file: !365, line: 144, baseType: !2740, size: 64, offset: 448)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2711, file: !365, line: 145, baseType: !2745, size: 64, offset: 512)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{null, !367, !414}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2711, file: !365, line: 146, baseType: !2749, size: 64, offset: 576)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = !DISubroutineType(types: !2751)
!2751 = !{!259, !367, !259, !243}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2711, file: !365, line: 147, baseType: !2753, size: 64, offset: 640)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{!363, !2756}
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2711, file: !365, line: 148, baseType: !2758, size: 64, offset: 704)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DISubroutineType(types: !2760)
!2760 = !{!243, !534, !475}
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2711, file: !365, line: 149, baseType: !2762, size: 64, offset: 768)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{!367, !367, !2765}
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !415)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !585, file: !44, line: 1500, baseType: !243, size: 32, offset: 7552)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !585, file: !44, line: 1502, baseType: !2769, size: 448, offset: 7616)
!2769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2413, line: 60, size: 448, elements: !2770)
!2770 = !{!2771, !2776, !2777, !2778, !2779, !2780, !2781}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2769, file: !2413, line: 61, baseType: !2772, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2773, size: 64)
!2773 = !DISubroutineType(types: !2774)
!2774 = !{!309, !2775, !2411}
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2769, file: !2413, line: 63, baseType: !2772, size: 64, offset: 64)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2769, file: !2413, line: 66, baseType: !294, size: 64, offset: 128)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2769, file: !2413, line: 67, baseType: !243, size: 32, offset: 192)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2769, file: !2413, line: 68, baseType: !7, size: 32, offset: 224)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2769, file: !2413, line: 71, baseType: !203, size: 128, offset: 256)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2769, file: !2413, line: 77, baseType: !2782, size: 64, offset: 384)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !585, file: !44, line: 1505, baseType: !760, size: 64, offset: 8064)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !585, file: !44, line: 1508, baseType: !760, size: 64, offset: 8128)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !585, file: !44, line: 1511, baseType: !243, size: 32, offset: 8192)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !585, file: !44, line: 1514, baseType: !898, size: 32, offset: 8224)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !585, file: !44, line: 1517, baseType: !2788, size: 64, offset: 8256)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1953, line: 18, flags: DIFlagFwdDecl)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !585, file: !44, line: 1518, baseType: !623, size: 64, offset: 8320)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !585, file: !44, line: 1525, baseType: !1706, size: 64, offset: 8384)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !585, file: !44, line: 1532, baseType: !2793, size: 64, offset: 8448)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2794, line: 52, size: 64, elements: !2795)
!2794 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2795 = !{!2796}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2793, file: !2794, line: 53, baseType: !2797, size: 64)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2794, line: 40, size: 256, elements: !2799)
!2799 = !{!2800, !2801, !2806}
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2798, file: !2794, line: 42, baseType: !217)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2798, file: !2794, line: 44, baseType: !2802, size: 192)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2794, line: 28, size: 192, elements: !2803)
!2803 = !{!2804, !2805}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2802, file: !2794, line: 29, baseType: !203, size: 128)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2802, file: !2794, line: 31, baseType: !294, size: 64, offset: 128)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2798, file: !2794, line: 49, baseType: !294, size: 64, offset: 192)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !585, file: !44, line: 1533, baseType: !2793, size: 64, offset: 8512)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !585, file: !44, line: 1534, baseType: !350, size: 128, align: 64, offset: 8576)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !585, file: !44, line: 1535, baseType: !1952, size: 256, offset: 8704)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !585, file: !44, line: 1537, baseType: !1162, size: 192, offset: 8960)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !585, file: !44, line: 1542, baseType: !243, size: 32, offset: 9152)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !585, file: !44, line: 1545, baseType: !217, offset: 9184)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !585, file: !44, line: 1546, baseType: !203, size: 128, offset: 9216)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !585, file: !44, line: 1548, baseType: !217, offset: 9344)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !585, file: !44, line: 1549, baseType: !203, size: 128, offset: 9344)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !415, file: !44, line: 624, baseType: !722, size: 64, offset: 256)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !415, file: !44, line: 631, baseType: !309, size: 64, offset: 320)
!2818 = !DIDerivedType(tag: DW_TAG_member, scope: !415, file: !44, line: 639, baseType: !2819, size: 32, offset: 384)
!2819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !415, file: !44, line: 639, size: 32, elements: !2820)
!2820 = !{!2821, !2823}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2819, file: !44, line: 640, baseType: !2822, size: 32)
!2822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2819, file: !44, line: 641, baseType: !7, size: 32)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !415, file: !44, line: 643, baseType: !498, size: 32, offset: 416)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !415, file: !44, line: 644, baseType: !516, size: 64, offset: 448)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !415, file: !44, line: 645, baseType: !520, size: 128, offset: 512)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !415, file: !44, line: 646, baseType: !520, size: 128, offset: 640)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !415, file: !44, line: 647, baseType: !520, size: 128, offset: 768)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !415, file: !44, line: 648, baseType: !217, offset: 896)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !415, file: !44, line: 649, baseType: !301, size: 16, offset: 896)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !415, file: !44, line: 650, baseType: !1340, size: 8, offset: 912)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !415, file: !44, line: 651, baseType: !1340, size: 8, offset: 920)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !415, file: !44, line: 652, baseType: !2585, size: 64, offset: 960)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !415, file: !44, line: 659, baseType: !309, size: 64, offset: 1024)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !415, file: !44, line: 660, baseType: !756, size: 256, offset: 1088)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !415, file: !44, line: 662, baseType: !309, size: 64, offset: 1344)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !415, file: !44, line: 663, baseType: !309, size: 64, offset: 1408)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !415, file: !44, line: 665, baseType: !627, size: 128, offset: 1472)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !415, file: !44, line: 666, baseType: !203, size: 128, offset: 1600)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !415, file: !44, line: 675, baseType: !203, size: 128, offset: 1728)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !415, file: !44, line: 676, baseType: !203, size: 128, offset: 1856)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !415, file: !44, line: 677, baseType: !203, size: 128, offset: 1984)
!2843 = !DIDerivedType(tag: DW_TAG_member, scope: !415, file: !44, line: 678, baseType: !2844, size: 128, offset: 2112)
!2844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !415, file: !44, line: 678, size: 128, elements: !2845)
!2845 = !{!2846, !2847}
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2844, file: !44, line: 679, baseType: !623, size: 64)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2844, file: !44, line: 680, baseType: !350, size: 128, align: 64)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !415, file: !44, line: 682, baseType: !762, size: 64, offset: 2240)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !415, file: !44, line: 683, baseType: !762, size: 64, offset: 2304)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !415, file: !44, line: 684, baseType: !736, size: 32, offset: 2368)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !415, file: !44, line: 685, baseType: !736, size: 32, offset: 2400)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !415, file: !44, line: 686, baseType: !736, size: 32, offset: 2432)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !415, file: !44, line: 688, baseType: !736, size: 32, offset: 2464)
!2854 = !DIDerivedType(tag: DW_TAG_member, scope: !415, file: !44, line: 690, baseType: !2855, size: 64, offset: 2496)
!2855 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !415, file: !44, line: 690, size: 64, elements: !2856)
!2856 = !{!2857, !3089}
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2855, file: !44, line: 691, baseType: !2858, size: 64)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2860)
!2860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !2861)
!2861 = !{!2862, !2863, !2867, !2872, !2876, !2877, !2878, !2882, !2895, !2896, !2913, !2917, !2918, !2922, !2923, !2927, !2932, !2933, !2937, !2941, !3049, !3053, !3054, !3058, !3059, !3063, !3067, !3072, !3076, !3080, !3084, !3088}
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2860, file: !44, line: 1823, baseType: !618, size: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2860, file: !44, line: 1824, baseType: !2864, size: 64, offset: 64)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!516, !337, !516, !243}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2860, file: !44, line: 1825, baseType: !2868, size: 64, offset: 128)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64)
!2869 = !DISubroutineType(types: !2870)
!2870 = !{!290, !337, !259, !306, !2871}
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2860, file: !44, line: 1826, baseType: !2873, size: 64, offset: 192)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!290, !337, !199, !306, !2871}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2860, file: !44, line: 1827, baseType: !833, size: 64, offset: 256)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2860, file: !44, line: 1828, baseType: !833, size: 64, offset: 320)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2860, file: !44, line: 1829, baseType: !2879, size: 64, offset: 384)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{!243, !836, !475}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2860, file: !44, line: 1830, baseType: !2883, size: 64, offset: 448)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2884 = !DISubroutineType(types: !2885)
!2885 = !{!243, !337, !2886}
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !2888)
!2888 = !{!2889, !2894}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2887, file: !44, line: 1777, baseType: !2890, size: 64)
!2890 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !2891)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!243, !2886, !199, !243, !516, !406, !7}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2887, file: !44, line: 1778, baseType: !516, size: 64, offset: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2860, file: !44, line: 1831, baseType: !2883, size: 64, offset: 512)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2860, file: !44, line: 1832, baseType: !2897, size: 64, offset: 576)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!2900, !337, !2902}
!2900 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2901, line: 52, baseType: !7)
!2901 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 64)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !2904, line: 43, size: 128, elements: !2905)
!2904 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!2905 = !{!2906, !2912}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !2903, file: !2904, line: 44, baseType: !2907, size: 64)
!2907 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !2904, line: 37, baseType: !2908)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!2909 = !DISubroutineType(types: !2910)
!2910 = !{null, !337, !2911, !2902}
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !2903, file: !2904, line: 45, baseType: !2900, size: 32, offset: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2860, file: !44, line: 1833, baseType: !2914, size: 64, offset: 640)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!294, !337, !7, !309}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2860, file: !44, line: 1834, baseType: !2914, size: 64, offset: 704)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2860, file: !44, line: 1835, baseType: !2919, size: 64, offset: 768)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DISubroutineType(types: !2921)
!2921 = !{!243, !337, !970}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2860, file: !44, line: 1836, baseType: !309, size: 64, offset: 832)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2860, file: !44, line: 1837, baseType: !2924, size: 64, offset: 896)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!243, !414, !337}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2860, file: !44, line: 1838, baseType: !2928, size: 64, offset: 960)
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 64)
!2929 = !DISubroutineType(types: !2930)
!2930 = !{!243, !337, !2931}
!2931 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !180)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2860, file: !44, line: 1839, baseType: !2924, size: 64, offset: 1024)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2860, file: !44, line: 1840, baseType: !2934, size: 64, offset: 1088)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DISubroutineType(types: !2936)
!2936 = !{!243, !337, !516, !516, !243}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2860, file: !44, line: 1841, baseType: !2938, size: 64, offset: 1152)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = !DISubroutineType(types: !2940)
!2940 = !{!243, !243, !337, !243}
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2860, file: !44, line: 1842, baseType: !2942, size: 64, offset: 1216)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = !DISubroutineType(types: !2944)
!2944 = !{!243, !337, !243, !2945}
!2945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2946, size: 64)
!2946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !2947)
!2947 = !{!2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2979, !2980, !2981, !2994, !3025}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2946, file: !44, line: 1063, baseType: !2945, size: 64)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2946, file: !44, line: 1064, baseType: !203, size: 128, offset: 64)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2946, file: !44, line: 1065, baseType: !627, size: 128, offset: 192)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2946, file: !44, line: 1066, baseType: !203, size: 128, offset: 320)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2946, file: !44, line: 1069, baseType: !203, size: 128, offset: 448)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2946, file: !44, line: 1072, baseType: !2931, size: 64, offset: 576)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2946, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2946, file: !44, line: 1074, baseType: !412, size: 8, offset: 672)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2946, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2946, file: !44, line: 1076, baseType: !243, size: 32, offset: 736)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2946, file: !44, line: 1077, baseType: !1474, size: 128, offset: 768)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2946, file: !44, line: 1078, baseType: !337, size: 64, offset: 896)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2946, file: !44, line: 1079, baseType: !516, size: 64, offset: 960)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2946, file: !44, line: 1080, baseType: !516, size: 64, offset: 1024)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2946, file: !44, line: 1082, baseType: !2963, size: 64, offset: 1088)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !2965)
!2965 = !{!2966, !2974, !2975, !2976, !2977, !2978}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2964, file: !44, line: 1315, baseType: !2967)
!2967 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2968, line: 20, baseType: !2969)
!2968 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2968, line: 11, elements: !2970)
!2970 = !{!2971}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2969, file: !2968, line: 12, baseType: !2972)
!2972 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !229, line: 33, baseType: !2973)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !229, line: 31, elements: !231)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2964, file: !44, line: 1316, baseType: !243, size: 32)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2964, file: !44, line: 1317, baseType: !243, size: 32, offset: 32)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2964, file: !44, line: 1318, baseType: !2963, size: 64, offset: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2964, file: !44, line: 1319, baseType: !337, size: 64, offset: 128)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2964, file: !44, line: 1320, baseType: !350, size: 128, align: 64, offset: 192)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2946, file: !44, line: 1084, baseType: !309, size: 64, offset: 1152)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2946, file: !44, line: 1085, baseType: !309, size: 64, offset: 1216)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2946, file: !44, line: 1087, baseType: !2982, size: 64, offset: 1280)
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2984)
!2984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !2985)
!2985 = !{!2986, !2990}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2984, file: !44, line: 1012, baseType: !2987, size: 64)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{null, !2945, !2945}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2984, file: !44, line: 1013, baseType: !2991, size: 64, offset: 64)
!2991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!2992 = !DISubroutineType(types: !2993)
!2993 = !{null, !2945}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2946, file: !44, line: 1088, baseType: !2995, size: 64, offset: 1344)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2997)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !2998)
!2998 = !{!2999, !3003, !3007, !3008, !3012, !3016, !3020, !3024}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2997, file: !44, line: 1017, baseType: !3000, size: 64)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!2931, !2931}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2997, file: !44, line: 1018, baseType: !3004, size: 64, offset: 64)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{null, !2931}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2997, file: !44, line: 1019, baseType: !2991, size: 64, offset: 128)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2997, file: !44, line: 1020, baseType: !3009, size: 64, offset: 192)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DISubroutineType(types: !3011)
!3011 = !{!243, !2945, !243}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2997, file: !44, line: 1021, baseType: !3013, size: 64, offset: 256)
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = !DISubroutineType(types: !3015)
!3015 = !{!475, !2945}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2997, file: !44, line: 1022, baseType: !3017, size: 64, offset: 320)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3018 = !DISubroutineType(types: !3019)
!3019 = !{!243, !2945, !243, !207}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2997, file: !44, line: 1023, baseType: !3021, size: 64, offset: 384)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{null, !2945, !810}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2997, file: !44, line: 1024, baseType: !3013, size: 64, offset: 448)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2946, file: !44, line: 1097, baseType: !3026, size: 256, offset: 1408)
!3026 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2946, file: !44, line: 1089, size: 256, elements: !3027)
!3027 = !{!3028, !3037, !3043}
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3026, file: !44, line: 1090, baseType: !3029, size: 256)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3030, line: 10, size: 256, elements: !3031)
!3030 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3031 = !{!3032, !3033, !3036}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3029, file: !3030, line: 11, baseType: !400, size: 32)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3029, file: !3030, line: 12, baseType: !3034, size: 64, offset: 64)
!3034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3035, size: 64)
!3035 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3030, line: 5, flags: DIFlagFwdDecl)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3029, file: !3030, line: 13, baseType: !203, size: 128, offset: 128)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3026, file: !44, line: 1091, baseType: !3038, size: 64)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3030, line: 17, size: 64, elements: !3039)
!3039 = !{!3040}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3038, file: !3030, line: 18, baseType: !3041, size: 64)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3030, line: 16, flags: DIFlagFwdDecl)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3026, file: !44, line: 1096, baseType: !3044, size: 192)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3026, file: !44, line: 1092, size: 192, elements: !3045)
!3045 = !{!3046, !3047, !3048}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3044, file: !44, line: 1093, baseType: !203, size: 128)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3044, file: !44, line: 1094, baseType: !243, size: 32, offset: 128)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3044, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2860, file: !44, line: 1843, baseType: !3050, size: 64, offset: 1280)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DISubroutineType(types: !3052)
!3052 = !{!290, !337, !709, !243, !306, !2871, !243}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2860, file: !44, line: 1844, baseType: !1090, size: 64, offset: 1344)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2860, file: !44, line: 1845, baseType: !3055, size: 64, offset: 1408)
!3055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3056, size: 64)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{!243, !243}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2860, file: !44, line: 1846, baseType: !2942, size: 64, offset: 1472)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2860, file: !44, line: 1847, baseType: !3060, size: 64, offset: 1536)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{!290, !2093, !337, !2871, !306, !7}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2860, file: !44, line: 1848, baseType: !3064, size: 64, offset: 1600)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{!290, !337, !2871, !2093, !306, !7}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2860, file: !44, line: 1849, baseType: !3068, size: 64, offset: 1664)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{!243, !337, !294, !3071, !810}
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2860, file: !44, line: 1850, baseType: !3073, size: 64, offset: 1728)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!294, !337, !243, !516, !516}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2860, file: !44, line: 1852, baseType: !3077, size: 64, offset: 1792)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{null, !699, !337}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2860, file: !44, line: 1856, baseType: !3081, size: 64, offset: 1856)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = !DISubroutineType(types: !3083)
!3083 = !{!290, !337, !516, !337, !516, !306, !7}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2860, file: !44, line: 1858, baseType: !3085, size: 64, offset: 1920)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = !DISubroutineType(types: !3087)
!3087 = !{!516, !337, !516, !337, !516, !516, !7}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2860, file: !44, line: 1861, baseType: !2934, size: 64, offset: 1984)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2855, file: !44, line: 692, baseType: !652, size: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !415, file: !44, line: 694, baseType: !3091, size: 64, offset: 2560)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3093)
!3093 = !{!3094, !3095, !3096, !3097}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3092, file: !44, line: 1101, baseType: !217)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3092, file: !44, line: 1102, baseType: !203, size: 128)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3092, file: !44, line: 1103, baseType: !203, size: 128, offset: 128)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3092, file: !44, line: 1104, baseType: !203, size: 128, offset: 256)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !415, file: !44, line: 695, baseType: !723, size: 1216, align: 64, offset: 2624)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !415, file: !44, line: 696, baseType: !203, size: 128, offset: 3840)
!3100 = !DIDerivedType(tag: DW_TAG_member, scope: !415, file: !44, line: 697, baseType: !3101, size: 64, offset: 3968)
!3101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !415, file: !44, line: 697, size: 64, elements: !3102)
!3102 = !{!3103, !3104, !3105, !3116, !3117}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3101, file: !44, line: 698, baseType: !2093, size: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3101, file: !44, line: 699, baseType: !2610, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3101, file: !44, line: 700, baseType: !3106, size: 64)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 64)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3108, line: 14, size: 832, elements: !3109)
!3108 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3109 = !{!3110, !3111, !3112, !3113, !3114, !3115}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3107, file: !3108, line: 15, baseType: !195, size: 512)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3107, file: !3108, line: 16, baseType: !618, size: 64, offset: 512)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3107, file: !3108, line: 17, baseType: !2858, size: 64, offset: 576)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3107, file: !3108, line: 18, baseType: !203, size: 128, offset: 640)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3107, file: !3108, line: 19, baseType: !498, size: 32, offset: 768)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3107, file: !3108, line: 20, baseType: !7, size: 32, offset: 800)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3101, file: !44, line: 701, baseType: !259, size: 64)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3101, file: !44, line: 702, baseType: !7, size: 32)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !415, file: !44, line: 705, baseType: !402, size: 32, offset: 4032)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !415, file: !44, line: 708, baseType: !402, size: 32, offset: 4064)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !415, file: !44, line: 709, baseType: !2692, size: 64, offset: 4096)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !415, file: !44, line: 720, baseType: !180, size: 64, offset: 4160)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !368, file: !365, line: 98, baseType: !3123, size: 256, offset: 448)
!3123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !412, size: 256, elements: !2225)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !368, file: !365, line: 101, baseType: !3125, size: 32, offset: 704)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3126, line: 25, size: 32, elements: !3127)
!3126 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3127 = !{!3128}
!3128 = !DIDerivedType(tag: DW_TAG_member, scope: !3125, file: !3126, line: 26, baseType: !3129, size: 32)
!3129 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3125, file: !3126, line: 26, size: 32, elements: !3130)
!3130 = !{!3131}
!3131 = !DIDerivedType(tag: DW_TAG_member, scope: !3129, file: !3126, line: 30, baseType: !3132, size: 32)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3129, file: !3126, line: 30, size: 32, elements: !3133)
!3133 = !{!3134, !3135}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3132, file: !3126, line: 31, baseType: !217)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3132, file: !3126, line: 32, baseType: !243, size: 32)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !368, file: !365, line: 102, baseType: !2709, size: 64, offset: 768)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !368, file: !365, line: 103, baseType: !584, size: 64, offset: 832)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !368, file: !365, line: 104, baseType: !309, size: 64, offset: 896)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !368, file: !365, line: 105, baseType: !180, size: 64, offset: 960)
!3140 = !DIDerivedType(tag: DW_TAG_member, scope: !368, file: !365, line: 107, baseType: !3141, size: 128, offset: 1024)
!3141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !365, line: 107, size: 128, elements: !3142)
!3142 = !{!3143, !3144}
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3141, file: !365, line: 108, baseType: !203, size: 128)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3141, file: !365, line: 109, baseType: !2911, size: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !368, file: !365, line: 111, baseType: !203, size: 128, offset: 1152)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !368, file: !365, line: 112, baseType: !203, size: 128, offset: 1280)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !368, file: !365, line: 120, baseType: !3148, size: 128, offset: 1408)
!3148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !368, file: !365, line: 116, size: 128, elements: !3149)
!3149 = !{!3150, !3151, !3152}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3148, file: !365, line: 117, baseType: !627, size: 128)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3148, file: !365, line: 118, baseType: !382, size: 128)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3148, file: !365, line: 119, baseType: !350, size: 128, align: 64)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !338, file: !44, line: 922, baseType: !414, size: 64, offset: 256)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !338, file: !44, line: 923, baseType: !2858, size: 64, offset: 320)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !338, file: !44, line: 929, baseType: !217, offset: 384)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !338, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !338, file: !44, line: 931, baseType: !760, size: 64, offset: 448)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !338, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !338, file: !44, line: 933, baseType: !2705, size: 32, offset: 544)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !338, file: !44, line: 934, baseType: !1162, size: 192, offset: 576)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !338, file: !44, line: 935, baseType: !516, size: 64, offset: 768)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !338, file: !44, line: 936, baseType: !3163, size: 192, offset: 832)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3164)
!3164 = !{!3165, !3166, !3167, !3168, !3169, !3170}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3163, file: !44, line: 886, baseType: !2967)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3163, file: !44, line: 887, baseType: !1464, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3163, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3163, file: !44, line: 889, baseType: !420, size: 32, offset: 96)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3163, file: !44, line: 889, baseType: !420, size: 32, offset: 128)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3163, file: !44, line: 890, baseType: !243, size: 32, offset: 160)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !338, file: !44, line: 937, baseType: !1540, size: 64, offset: 1024)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !338, file: !44, line: 938, baseType: !3173, size: 256, offset: 1088)
!3173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3174)
!3174 = !{!3175, !3176, !3177, !3178, !3179, !3180}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3173, file: !44, line: 897, baseType: !309, size: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3173, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3173, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3173, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3173, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3173, file: !44, line: 904, baseType: !516, size: 64, offset: 192)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !338, file: !44, line: 940, baseType: !406, size: 64, offset: 1344)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !338, file: !44, line: 945, baseType: !180, size: 64, offset: 1408)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !338, file: !44, line: 949, baseType: !203, size: 128, offset: 1472)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !338, file: !44, line: 950, baseType: !203, size: 128, offset: 1600)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !338, file: !44, line: 952, baseType: !722, size: 64, offset: 1728)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !338, file: !44, line: 953, baseType: !898, size: 32, offset: 1792)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !338, file: !44, line: 954, baseType: !898, size: 32, offset: 1824)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !328, file: !284, line: 174, baseType: !334, size: 64, offset: 320)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !328, file: !284, line: 176, baseType: !3190, size: 64, offset: 384)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{!243, !337, !210, !327, !970}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !316, file: !284, line: 90, baseType: !311, size: 64, offset: 192)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !316, file: !284, line: 91, baseType: !3195, size: 64, offset: 256)
!3195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !274, file: !196, line: 143, baseType: !3197, size: 64, offset: 256)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 64)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!3200, !210}
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3202)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3203)
!3203 = !{!3204, !3205, !3209, !3213, !3219, !3223}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3202, file: !61, line: 40, baseType: !60, size: 32)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3202, file: !61, line: 41, baseType: !3206, size: 64, offset: 64)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!475}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3202, file: !61, line: 42, baseType: !3210, size: 64, offset: 128)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{!180}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3202, file: !61, line: 43, baseType: !3214, size: 64, offset: 192)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!2122, !3217}
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 64)
!3218 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3202, file: !61, line: 44, baseType: !3220, size: 64, offset: 256)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!2122}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3202, file: !61, line: 45, baseType: !453, size: 64, offset: 320)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !274, file: !196, line: 144, baseType: !3225, size: 64, offset: 320)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{!2122, !210}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !274, file: !196, line: 145, baseType: !3229, size: 64, offset: 384)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = !DISubroutineType(types: !3231)
!3231 = !{null, !210, !3232, !3233}
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !195, file: !196, line: 70, baseType: !3235, size: 64, offset: 384)
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 64)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !604, line: 123, size: 1024, elements: !3237)
!3237 = !{!3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3366, !3367, !3368, !3369, !3370}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3236, file: !604, line: 124, baseType: !736, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3236, file: !604, line: 125, baseType: !736, size: 32, offset: 32)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3236, file: !604, line: 135, baseType: !3235, size: 64, offset: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3236, file: !604, line: 136, baseType: !199, size: 64, offset: 128)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3236, file: !604, line: 138, baseType: !749, size: 192, align: 64, offset: 192)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3236, file: !604, line: 140, baseType: !2122, size: 64, offset: 384)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3236, file: !604, line: 141, baseType: !7, size: 32, offset: 448)
!3245 = !DIDerivedType(tag: DW_TAG_member, scope: !3236, file: !604, line: 142, baseType: !3246, size: 256, offset: 512)
!3246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3236, file: !604, line: 142, size: 256, elements: !3247)
!3247 = !{!3248, !3294, !3298}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3246, file: !604, line: 143, baseType: !3249, size: 192)
!3249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !604, line: 91, size: 192, elements: !3250)
!3250 = !{!3251, !3252, !3253}
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3249, file: !604, line: 92, baseType: !309, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3249, file: !604, line: 94, baseType: !745, size: 64, offset: 64)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3249, file: !604, line: 100, baseType: !3254, size: 64, offset: 128)
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3255, size: 64)
!3255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !604, line: 180, size: 704, elements: !3256)
!3256 = !{!3257, !3258, !3259, !3266, !3267, !3268, !3292, !3293}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3255, file: !604, line: 182, baseType: !3235, size: 64)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3255, file: !604, line: 183, baseType: !7, size: 32, offset: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3255, file: !604, line: 186, baseType: !3260, size: 192, offset: 128)
!3260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3261, line: 19, size: 192, elements: !3262)
!3261 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3262 = !{!3263, !3264, !3265}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3260, file: !3261, line: 20, baseType: !727, size: 128)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3260, file: !3261, line: 21, baseType: !7, size: 32, offset: 128)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3260, file: !3261, line: 22, baseType: !7, size: 32, offset: 160)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3255, file: !604, line: 187, baseType: !400, size: 32, offset: 320)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3255, file: !604, line: 188, baseType: !400, size: 32, offset: 352)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3255, file: !604, line: 189, baseType: !3269, size: 64, offset: 384)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !604, line: 168, size: 320, elements: !3271)
!3271 = !{!3272, !3276, !3280, !3284, !3288}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3270, file: !604, line: 169, baseType: !3273, size: 64)
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 64)
!3274 = !DISubroutineType(types: !3275)
!3275 = !{!243, !699, !3254}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3270, file: !604, line: 171, baseType: !3277, size: 64, offset: 64)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 64)
!3278 = !DISubroutineType(types: !3279)
!3279 = !{!243, !3235, !199, !300}
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3270, file: !604, line: 173, baseType: !3281, size: 64, offset: 128)
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3282, size: 64)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{!243, !3235}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3270, file: !604, line: 174, baseType: !3285, size: 64, offset: 192)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 64)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{!243, !3235, !3235, !199}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3270, file: !604, line: 176, baseType: !3289, size: 64, offset: 256)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3290, size: 64)
!3290 = !DISubroutineType(types: !3291)
!3291 = !{!243, !699, !3235, !3254}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3255, file: !604, line: 192, baseType: !203, size: 128, offset: 448)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3255, file: !604, line: 194, baseType: !1474, size: 128, offset: 576)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3246, file: !604, line: 144, baseType: !3295, size: 64)
!3295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !604, line: 103, size: 64, elements: !3296)
!3296 = !{!3297}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3295, file: !604, line: 104, baseType: !3235, size: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3246, file: !604, line: 145, baseType: !3299, size: 256)
!3299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !604, line: 107, size: 256, elements: !3300)
!3300 = !{!3301, !3361, !3364, !3365}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3299, file: !604, line: 108, baseType: !3302, size: 64)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3304)
!3304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !604, line: 217, size: 768, elements: !3305)
!3305 = !{!3306, !3326, !3330, !3334, !3338, !3342, !3346, !3350, !3351, !3352, !3353, !3357}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3304, file: !604, line: 222, baseType: !3307, size: 64)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{!243, !3310}
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !604, line: 197, size: 1088, elements: !3312)
!3312 = !{!3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3311, file: !604, line: 199, baseType: !3235, size: 64)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3311, file: !604, line: 200, baseType: !337, size: 64, offset: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3311, file: !604, line: 201, baseType: !699, size: 64, offset: 128)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3311, file: !604, line: 202, baseType: !180, size: 64, offset: 192)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3311, file: !604, line: 205, baseType: !1162, size: 192, offset: 256)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3311, file: !604, line: 206, baseType: !1162, size: 192, offset: 448)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3311, file: !604, line: 207, baseType: !243, size: 32, offset: 640)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3311, file: !604, line: 208, baseType: !203, size: 128, offset: 704)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3311, file: !604, line: 209, baseType: !259, size: 64, offset: 832)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3311, file: !604, line: 211, baseType: !306, size: 64, offset: 896)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3311, file: !604, line: 212, baseType: !475, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3311, file: !604, line: 213, baseType: !475, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3311, file: !604, line: 214, baseType: !998, size: 64, offset: 1024)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3304, file: !604, line: 223, baseType: !3327, size: 64, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !3310}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3304, file: !604, line: 236, baseType: !3331, size: 64, offset: 128)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!243, !699, !180}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3304, file: !604, line: 238, baseType: !3335, size: 64, offset: 192)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!180, !699, !2871}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3304, file: !604, line: 239, baseType: !3339, size: 64, offset: 256)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = !DISubroutineType(types: !3341)
!3341 = !{!180, !699, !180, !2871}
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3304, file: !604, line: 240, baseType: !3343, size: 64, offset: 320)
!3343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3344, size: 64)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{null, !699, !180}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3304, file: !604, line: 242, baseType: !3347, size: 64, offset: 384)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = !DISubroutineType(types: !3349)
!3349 = !{!290, !3310, !259, !306, !516}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3304, file: !604, line: 252, baseType: !306, size: 64, offset: 448)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3304, file: !604, line: 259, baseType: !475, size: 8, offset: 512)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3304, file: !604, line: 260, baseType: !3347, size: 64, offset: 576)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3304, file: !604, line: 263, baseType: !3354, size: 64, offset: 640)
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 64)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!2900, !3310, !2902}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3304, file: !604, line: 266, baseType: !3358, size: 64, offset: 704)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = !DISubroutineType(types: !3360)
!3360 = !{!243, !3310, !970}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3299, file: !604, line: 109, baseType: !3362, size: 64, offset: 64)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !604, line: 31, flags: DIFlagFwdDecl)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3299, file: !604, line: 110, baseType: !516, size: 64, offset: 128)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3299, file: !604, line: 111, baseType: !3235, size: 64, offset: 192)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3236, file: !604, line: 148, baseType: !180, size: 64, offset: 768)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3236, file: !604, line: 154, baseType: !406, size: 64, offset: 832)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3236, file: !604, line: 156, baseType: !301, size: 16, offset: 896)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3236, file: !604, line: 157, baseType: !300, size: 16, offset: 912)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3236, file: !604, line: 158, baseType: !3371, size: 64, offset: 960)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !604, line: 32, flags: DIFlagFwdDecl)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !195, file: !196, line: 71, baseType: !3374, size: 32, offset: 448)
!3374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3375, line: 19, size: 32, elements: !3376)
!3375 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3376 = !{!3377}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3374, file: !3375, line: 20, baseType: !1219, size: 32)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !195, file: !196, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !195, file: !196, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !195, file: !196, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !195, file: !196, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !195, file: !196, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !192, file: !73, line: 463, baseType: !191, size: 64, offset: 512)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !192, file: !73, line: 465, baseType: !3385, size: 64, offset: 576)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3386 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !192, file: !73, line: 467, baseType: !199, size: 64, offset: 640)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !192, file: !73, line: 468, baseType: !3389, size: 64, offset: 704)
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3390, size: 64)
!3390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3391)
!3391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3392)
!3392 = !{!3393, !3394, !3395, !3399, !3404, !3408}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3391, file: !73, line: 88, baseType: !199, size: 64)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3391, file: !73, line: 89, baseType: !313, size: 64, offset: 64)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3391, file: !73, line: 90, baseType: !3396, size: 64, offset: 128)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{!243, !191, !254}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3391, file: !73, line: 91, baseType: !3400, size: 64, offset: 192)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{!259, !191, !3403, !3232, !3233}
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3391, file: !73, line: 93, baseType: !3405, size: 64, offset: 256)
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = !DISubroutineType(types: !3407)
!3407 = !{null, !191}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3391, file: !73, line: 95, baseType: !3409, size: 64, offset: 320)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3411)
!3411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3412)
!3412 = !{!3413, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430, !3431, !3432, !3433, !3434, !3435, !3436, !3437, !3438}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3411, file: !80, line: 279, baseType: !3414, size: 64)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!243, !191}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3411, file: !80, line: 280, baseType: !3405, size: 64, offset: 64)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3411, file: !80, line: 281, baseType: !3414, size: 64, offset: 128)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3411, file: !80, line: 282, baseType: !3414, size: 64, offset: 192)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3411, file: !80, line: 283, baseType: !3414, size: 64, offset: 256)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3411, file: !80, line: 284, baseType: !3414, size: 64, offset: 320)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3411, file: !80, line: 285, baseType: !3414, size: 64, offset: 384)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3411, file: !80, line: 286, baseType: !3414, size: 64, offset: 448)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3411, file: !80, line: 287, baseType: !3414, size: 64, offset: 512)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3411, file: !80, line: 288, baseType: !3414, size: 64, offset: 576)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3411, file: !80, line: 289, baseType: !3414, size: 64, offset: 640)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3411, file: !80, line: 290, baseType: !3414, size: 64, offset: 704)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3411, file: !80, line: 291, baseType: !3414, size: 64, offset: 768)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3411, file: !80, line: 292, baseType: !3414, size: 64, offset: 832)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3411, file: !80, line: 293, baseType: !3414, size: 64, offset: 896)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3411, file: !80, line: 294, baseType: !3414, size: 64, offset: 960)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3411, file: !80, line: 295, baseType: !3414, size: 64, offset: 1024)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3411, file: !80, line: 296, baseType: !3414, size: 64, offset: 1088)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3411, file: !80, line: 297, baseType: !3414, size: 64, offset: 1152)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3411, file: !80, line: 298, baseType: !3414, size: 64, offset: 1216)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3411, file: !80, line: 299, baseType: !3414, size: 64, offset: 1280)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3411, file: !80, line: 300, baseType: !3414, size: 64, offset: 1344)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3411, file: !80, line: 301, baseType: !3414, size: 64, offset: 1408)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !192, file: !73, line: 470, baseType: !3440, size: 64, offset: 768)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3442, line: 82, size: 1408, elements: !3443)
!3442 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3443 = !{!3444, !3445, !3446, !3447, !3448, !3449, !3450, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3525, !3528, !3529}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3441, file: !3442, line: 83, baseType: !199, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3441, file: !3442, line: 84, baseType: !199, size: 64, offset: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3441, file: !3442, line: 85, baseType: !191, size: 64, offset: 128)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3441, file: !3442, line: 86, baseType: !313, size: 64, offset: 192)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3441, file: !3442, line: 87, baseType: !313, size: 64, offset: 256)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3441, file: !3442, line: 88, baseType: !313, size: 64, offset: 320)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3441, file: !3442, line: 90, baseType: !3451, size: 64, offset: 384)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!243, !191, !3454}
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3456)
!3456 = !{!3457, !3458, !3459, !3460, !3461, !3462, !3463, !3476, !3489, !3490, !3491, !3492, !3493, !3501, !3502, !3503, !3504, !3505, !3506}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3455, file: !67, line: 96, baseType: !199, size: 64)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3455, file: !67, line: 97, baseType: !3440, size: 64, offset: 64)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3455, file: !67, line: 99, baseType: !618, size: 64, offset: 128)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3455, file: !67, line: 100, baseType: !199, size: 64, offset: 192)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3455, file: !67, line: 102, baseType: !475, size: 8, offset: 256)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3455, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3455, file: !67, line: 105, baseType: !3464, size: 64, offset: 320)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3466)
!3466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3467, line: 262, size: 1600, elements: !3468)
!3467 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3468 = !{!3469, !3470, !3471, !3475}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3466, file: !3467, line: 263, baseType: !2695, size: 256)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3466, file: !3467, line: 264, baseType: !2695, size: 256, offset: 256)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3466, file: !3467, line: 265, baseType: !3472, size: 1024, offset: 512)
!3472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 1024, elements: !3473)
!3473 = !{!3474}
!3474 = !DISubrange(count: 128)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3466, file: !3467, line: 266, baseType: !2122, size: 64, offset: 1536)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3455, file: !67, line: 106, baseType: !3477, size: 64, offset: 384)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3479)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3467, line: 210, size: 256, elements: !3480)
!3480 = !{!3481, !3485, !3487, !3488}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3479, file: !3467, line: 211, baseType: !3482, size: 72)
!3482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1341, size: 72, elements: !3483)
!3483 = !{!3484}
!3484 = !DISubrange(count: 9)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3479, file: !3467, line: 212, baseType: !3486, size: 64, offset: 128)
!3486 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3467, line: 14, baseType: !309)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3479, file: !3467, line: 213, baseType: !402, size: 32, offset: 192)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3479, file: !3467, line: 214, baseType: !402, size: 32, offset: 224)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3455, file: !67, line: 108, baseType: !3414, size: 64, offset: 448)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3455, file: !67, line: 109, baseType: !3405, size: 64, offset: 512)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3455, file: !67, line: 110, baseType: !3414, size: 64, offset: 576)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3455, file: !67, line: 111, baseType: !3405, size: 64, offset: 640)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3455, file: !67, line: 112, baseType: !3494, size: 64, offset: 704)
!3494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3495, size: 64)
!3495 = !DISubroutineType(types: !3496)
!3496 = !{!243, !191, !3497}
!3497 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3498)
!3498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3499)
!3499 = !{!3500}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3498, file: !80, line: 51, baseType: !243, size: 32)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3455, file: !67, line: 113, baseType: !3414, size: 64, offset: 768)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3455, file: !67, line: 114, baseType: !313, size: 64, offset: 832)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3455, file: !67, line: 115, baseType: !313, size: 64, offset: 896)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3455, file: !67, line: 117, baseType: !3409, size: 64, offset: 960)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3455, file: !67, line: 118, baseType: !3405, size: 64, offset: 1024)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3455, file: !67, line: 120, baseType: !3507, size: 64, offset: 1088)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 64)
!3508 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3441, file: !3442, line: 91, baseType: !3396, size: 64, offset: 448)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3441, file: !3442, line: 92, baseType: !3414, size: 64, offset: 512)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3441, file: !3442, line: 93, baseType: !3405, size: 64, offset: 576)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3441, file: !3442, line: 94, baseType: !3414, size: 64, offset: 640)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3441, file: !3442, line: 95, baseType: !3405, size: 64, offset: 704)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3441, file: !3442, line: 97, baseType: !3414, size: 64, offset: 768)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3441, file: !3442, line: 98, baseType: !3414, size: 64, offset: 832)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3441, file: !3442, line: 100, baseType: !3494, size: 64, offset: 896)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3441, file: !3442, line: 101, baseType: !3414, size: 64, offset: 960)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3441, file: !3442, line: 103, baseType: !3414, size: 64, offset: 1024)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3441, file: !3442, line: 105, baseType: !3414, size: 64, offset: 1088)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3441, file: !3442, line: 107, baseType: !3409, size: 64, offset: 1152)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3441, file: !3442, line: 109, baseType: !3522, size: 64, offset: 1216)
!3522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3523, size: 64)
!3523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3524)
!3524 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3442, line: 109, flags: DIFlagFwdDecl)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3441, file: !3442, line: 111, baseType: !3526, size: 64, offset: 1280)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3442, line: 111, flags: DIFlagFwdDecl)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3441, file: !3442, line: 112, baseType: !633, offset: 1344)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3441, file: !3442, line: 114, baseType: !475, size: 8, offset: 1344)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !192, file: !73, line: 471, baseType: !3454, size: 64, offset: 832)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !192, file: !73, line: 473, baseType: !180, size: 64, offset: 896)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !192, file: !73, line: 475, baseType: !180, size: 64, offset: 960)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !192, file: !73, line: 480, baseType: !1162, size: 192, offset: 1024)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !192, file: !73, line: 484, baseType: !3535, size: 576, offset: 1216)
!3535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3536)
!3536 = !{!3537, !3538, !3539, !3540, !3541, !3542}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3535, file: !73, line: 362, baseType: !203, size: 128)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3535, file: !73, line: 363, baseType: !203, size: 128, offset: 128)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3535, file: !73, line: 364, baseType: !203, size: 128, offset: 256)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3535, file: !73, line: 365, baseType: !203, size: 128, offset: 384)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3535, file: !73, line: 366, baseType: !475, size: 8, offset: 512)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3535, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !192, file: !73, line: 485, baseType: !3544, size: 2304, offset: 1792)
!3544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3545)
!3545 = !{!3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3617, !3618, !3619, !3620, !3621, !3622, !3623, !3624, !3625, !3626, !3627, !3628, !3629, !3630, !3631, !3641, !3645}
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3544, file: !80, line: 566, baseType: !3497, size: 32)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3544, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3544, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3544, file: !80, line: 569, baseType: !475, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3544, file: !80, line: 570, baseType: !475, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3544, file: !80, line: 571, baseType: !475, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3544, file: !80, line: 572, baseType: !475, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3544, file: !80, line: 573, baseType: !475, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3544, file: !80, line: 574, baseType: !475, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3544, file: !80, line: 575, baseType: !475, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3544, file: !80, line: 576, baseType: !475, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3544, file: !80, line: 577, baseType: !400, size: 32, offset: 64)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3544, file: !80, line: 578, baseType: !217, offset: 96)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3544, file: !80, line: 580, baseType: !203, size: 128, offset: 128)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3544, file: !80, line: 581, baseType: !1495, size: 192, offset: 256)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3544, file: !80, line: 582, baseType: !3562, size: 64, offset: 448)
!3562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3563, size: 64)
!3563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3564, line: 43, size: 1472, elements: !3565)
!3564 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3565 = !{!3566, !3567, !3568, !3569, !3570, !3573, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3563, file: !3564, line: 44, baseType: !199, size: 64)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3563, file: !3564, line: 45, baseType: !243, size: 32, offset: 64)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3563, file: !3564, line: 46, baseType: !203, size: 128, offset: 128)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3563, file: !3564, line: 47, baseType: !217, offset: 256)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3563, file: !3564, line: 48, baseType: !3571, size: 64, offset: 256)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3563, file: !3564, line: 49, baseType: !3574, size: 320, offset: 320)
!3574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3575, line: 11, size: 320, elements: !3576)
!3575 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3576 = !{!3577, !3578, !3579, !3584}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3574, file: !3575, line: 16, baseType: !627, size: 128)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3574, file: !3575, line: 17, baseType: !309, size: 64, offset: 128)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3574, file: !3575, line: 18, baseType: !3580, size: 64, offset: 192)
!3580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3581, size: 64)
!3581 = !DISubroutineType(types: !3582)
!3582 = !{null, !3583}
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3574, file: !3575, line: 19, baseType: !400, size: 32, offset: 256)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3563, file: !3564, line: 50, baseType: !309, size: 64, offset: 640)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3563, file: !3564, line: 51, baseType: !1288, size: 64, offset: 704)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3563, file: !3564, line: 52, baseType: !1288, size: 64, offset: 768)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3563, file: !3564, line: 53, baseType: !1288, size: 64, offset: 832)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3563, file: !3564, line: 54, baseType: !1288, size: 64, offset: 896)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3563, file: !3564, line: 55, baseType: !1288, size: 64, offset: 960)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3563, file: !3564, line: 56, baseType: !309, size: 64, offset: 1024)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3563, file: !3564, line: 57, baseType: !309, size: 64, offset: 1088)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3563, file: !3564, line: 58, baseType: !309, size: 64, offset: 1152)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3563, file: !3564, line: 59, baseType: !309, size: 64, offset: 1216)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3563, file: !3564, line: 60, baseType: !309, size: 64, offset: 1280)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3563, file: !3564, line: 61, baseType: !191, size: 64, offset: 1344)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3563, file: !3564, line: 62, baseType: !475, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3563, file: !3564, line: 63, baseType: !475, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3544, file: !80, line: 583, baseType: !475, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3544, file: !80, line: 584, baseType: !475, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3544, file: !80, line: 585, baseType: !475, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3544, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3544, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3544, file: !80, line: 592, baseType: !1280, size: 512, offset: 576)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3544, file: !80, line: 593, baseType: !406, size: 64, offset: 1088)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3544, file: !80, line: 594, baseType: !1952, size: 256, offset: 1152)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3544, file: !80, line: 595, baseType: !1474, size: 128, offset: 1408)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3544, file: !80, line: 596, baseType: !3571, size: 64, offset: 1536)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3544, file: !80, line: 597, baseType: !736, size: 32, offset: 1600)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3544, file: !80, line: 598, baseType: !736, size: 32, offset: 1632)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3544, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3544, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3544, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3544, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3544, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3544, file: !80, line: 604, baseType: !475, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3544, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3544, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3544, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3544, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3544, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3544, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3544, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3544, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3544, file: !80, line: 613, baseType: !243, size: 32, offset: 1792)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3544, file: !80, line: 614, baseType: !243, size: 32, offset: 1824)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3544, file: !80, line: 615, baseType: !406, size: 64, offset: 1856)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3544, file: !80, line: 616, baseType: !406, size: 64, offset: 1920)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3544, file: !80, line: 617, baseType: !406, size: 64, offset: 1984)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3544, file: !80, line: 618, baseType: !406, size: 64, offset: 2048)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3544, file: !80, line: 620, baseType: !3632, size: 64, offset: 2112)
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3634)
!3634 = !{!3635, !3636, !3637, !3638}
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3633, file: !80, line: 537, baseType: !217)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3633, file: !80, line: 538, baseType: !7, size: 32)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3633, file: !80, line: 540, baseType: !203, size: 128, offset: 64)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3633, file: !80, line: 543, baseType: !3639, size: 64, offset: 192)
!3639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3640, size: 64)
!3640 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3544, file: !80, line: 621, baseType: !3642, size: 64, offset: 2176)
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3643, size: 64)
!3643 = !DISubroutineType(types: !3644)
!3644 = !{null, !191, !1432}
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3544, file: !80, line: 622, baseType: !3646, size: 64, offset: 2240)
!3646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!3647 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !192, file: !73, line: 486, baseType: !3649, size: 64, offset: 4096)
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 64)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3651)
!3651 = !{!3652, !3653, !3654, !3658, !3659, !3660}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3650, file: !80, line: 643, baseType: !3411, size: 1472)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3650, file: !80, line: 644, baseType: !3414, size: 64, offset: 1472)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3650, file: !80, line: 645, baseType: !3655, size: 64, offset: 1536)
!3655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3656, size: 64)
!3656 = !DISubroutineType(types: !3657)
!3657 = !{null, !191, !475}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3650, file: !80, line: 646, baseType: !3414, size: 64, offset: 1600)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3650, file: !80, line: 647, baseType: !3405, size: 64, offset: 1664)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3650, file: !80, line: 648, baseType: !3405, size: 64, offset: 1728)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !192, file: !73, line: 493, baseType: !3662, size: 64, offset: 4160)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !94, line: 162, size: 1088, elements: !3664)
!3664 = !{!3665, !3666, !3667, !3840, !3841, !3842, !3843, !3844, !3845, !3848, !3849, !3850, !3851, !3852, !3853, !3854}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3663, file: !94, line: 163, baseType: !203, size: 128)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3663, file: !94, line: 164, baseType: !199, size: 64, offset: 128)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3663, file: !94, line: 165, baseType: !3668, size: 64, offset: 192)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 64)
!3669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3670)
!3670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !94, line: 105, size: 640, elements: !3671)
!3671 = !{!3672, !3790, !3801, !3806, !3810, !3817, !3821, !3825, !3832, !3836}
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3670, file: !94, line: 106, baseType: !3673, size: 64)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 64)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{!243, !3662, !3676, !93}
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3678, line: 51, size: 1344, elements: !3679)
!3678 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3679 = !{!3680, !3681, !3683, !3684, !3774, !3783, !3784, !3785, !3786, !3787, !3788, !3789}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3677, file: !3678, line: 52, baseType: !199, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3677, file: !3678, line: 53, baseType: !3682, size: 32, offset: 64)
!3682 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3678, line: 28, baseType: !400)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3677, file: !3678, line: 54, baseType: !199, size: 64, offset: 128)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3677, file: !3678, line: 55, baseType: !3685, size: 192, offset: 192)
!3685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3686, line: 17, size: 192, elements: !3687)
!3686 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3687 = !{!3688, !3690, !3773}
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3685, file: !3686, line: 18, baseType: !3689, size: 64)
!3689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3685, file: !3686, line: 19, baseType: !3691, size: 64, offset: 64)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3693)
!3693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3686, line: 110, size: 1152, elements: !3694)
!3694 = !{!3695, !3699, !3703, !3709, !3715, !3719, !3723, !3728, !3732, !3733, !3737, !3741, !3745, !3756, !3757, !3758, !3759, !3769}
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3693, file: !3686, line: 111, baseType: !3696, size: 64)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = !DISubroutineType(types: !3698)
!3698 = !{!3689, !3689}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3693, file: !3686, line: 112, baseType: !3700, size: 64, offset: 64)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 64)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{null, !3689}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3693, file: !3686, line: 113, baseType: !3704, size: 64, offset: 128)
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 64)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!475, !3707}
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3708, size: 64)
!3708 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3685)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3693, file: !3686, line: 114, baseType: !3710, size: 64, offset: 192)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 64)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{!2122, !3707, !3713}
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !192)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3693, file: !3686, line: 116, baseType: !3716, size: 64, offset: 256)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!475, !3707, !199}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3693, file: !3686, line: 118, baseType: !3720, size: 64, offset: 320)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 64)
!3721 = !DISubroutineType(types: !3722)
!3722 = !{!243, !3707, !199, !7, !180, !306}
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3693, file: !3686, line: 123, baseType: !3724, size: 64, offset: 384)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DISubroutineType(types: !3726)
!3726 = !{!243, !3707, !199, !3727, !306}
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3693, file: !3686, line: 126, baseType: !3729, size: 64, offset: 448)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!199, !3707}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3693, file: !3686, line: 127, baseType: !3729, size: 64, offset: 512)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3693, file: !3686, line: 128, baseType: !3734, size: 64, offset: 576)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = !DISubroutineType(types: !3736)
!3736 = !{!3689, !3707}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3693, file: !3686, line: 130, baseType: !3738, size: 64, offset: 640)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = !DISubroutineType(types: !3740)
!3740 = !{!3689, !3707, !3689}
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3693, file: !3686, line: 133, baseType: !3742, size: 64, offset: 704)
!3742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3743 = !DISubroutineType(types: !3744)
!3744 = !{!3689, !3707, !199}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3693, file: !3686, line: 135, baseType: !3746, size: 64, offset: 768)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{!243, !3707, !199, !199, !7, !7, !3749}
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3686, line: 43, size: 640, elements: !3751)
!3751 = !{!3752, !3753, !3754}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3750, file: !3686, line: 44, baseType: !3689, size: 64)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3750, file: !3686, line: 45, baseType: !7, size: 32, offset: 64)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3750, file: !3686, line: 46, baseType: !3755, size: 512, offset: 128)
!3755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !406, size: 512, elements: !1318)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3693, file: !3686, line: 140, baseType: !3738, size: 64, offset: 832)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3693, file: !3686, line: 143, baseType: !3734, size: 64, offset: 896)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3693, file: !3686, line: 145, baseType: !3696, size: 64, offset: 960)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3693, file: !3686, line: 146, baseType: !3760, size: 64, offset: 1024)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{!243, !3707, !3763}
!3763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3764, size: 64)
!3764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3686, line: 29, size: 128, elements: !3765)
!3765 = !{!3766, !3767, !3768}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3764, file: !3686, line: 30, baseType: !7, size: 32)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3764, file: !3686, line: 31, baseType: !7, size: 32, offset: 32)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3764, file: !3686, line: 32, baseType: !3707, size: 64, offset: 64)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3693, file: !3686, line: 148, baseType: !3770, size: 64, offset: 1088)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DISubroutineType(types: !3772)
!3772 = !{!243, !3707, !191}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3685, file: !3686, line: 20, baseType: !191, size: 64, offset: 128)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3677, file: !3678, line: 57, baseType: !3775, size: 64, offset: 384)
!3775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3776, size: 64)
!3776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3678, line: 31, size: 704, elements: !3777)
!3777 = !{!3778, !3779, !3780, !3781, !3782}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3776, file: !3678, line: 32, baseType: !259, size: 64)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3776, file: !3678, line: 33, baseType: !243, size: 32, offset: 64)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3776, file: !3678, line: 34, baseType: !180, size: 64, offset: 128)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3776, file: !3678, line: 35, baseType: !3775, size: 64, offset: 192)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3776, file: !3678, line: 43, baseType: !328, size: 448, offset: 256)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3677, file: !3678, line: 58, baseType: !3775, size: 64, offset: 448)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3677, file: !3678, line: 59, baseType: !3676, size: 64, offset: 512)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3677, file: !3678, line: 60, baseType: !3676, size: 64, offset: 576)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3677, file: !3678, line: 61, baseType: !3676, size: 64, offset: 640)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3677, file: !3678, line: 63, baseType: !195, size: 512, offset: 704)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3677, file: !3678, line: 65, baseType: !309, size: 64, offset: 1216)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3677, file: !3678, line: 66, baseType: !180, size: 64, offset: 1280)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3670, file: !94, line: 108, baseType: !3791, size: 64, offset: 64)
!3791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3792, size: 64)
!3792 = !DISubroutineType(types: !3793)
!3793 = !{!243, !3662, !3794, !93}
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !94, line: 63, size: 640, elements: !3796)
!3796 = !{!3797, !3798, !3799}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3795, file: !94, line: 64, baseType: !3689, size: 64)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3795, file: !94, line: 65, baseType: !243, size: 32, offset: 64)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3795, file: !94, line: 66, baseType: !3800, size: 512, offset: 96)
!3800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !400, size: 512, elements: !1728)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3670, file: !94, line: 110, baseType: !3802, size: 64, offset: 128)
!3802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3803, size: 64)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{!243, !3662, !7, !3805}
!3805 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !204, line: 164, baseType: !309)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3670, file: !94, line: 111, baseType: !3807, size: 64, offset: 192)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DISubroutineType(types: !3809)
!3809 = !{null, !3662, !7}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3670, file: !94, line: 112, baseType: !3811, size: 64, offset: 256)
!3811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3812, size: 64)
!3812 = !DISubroutineType(types: !3813)
!3813 = !{!243, !3662, !3676, !3814, !7, !3816, !2678}
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 64)
!3815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !400)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3670, file: !94, line: 117, baseType: !3818, size: 64, offset: 320)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = !DISubroutineType(types: !3820)
!3820 = !{!243, !3662, !7, !7, !180}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3670, file: !94, line: 119, baseType: !3822, size: 64, offset: 384)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3823, size: 64)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{null, !3662, !7, !7}
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3670, file: !94, line: 121, baseType: !3826, size: 64, offset: 448)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DISubroutineType(types: !3828)
!3828 = !{!243, !3662, !3829, !475}
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3831, line: 11, flags: DIFlagFwdDecl)
!3831 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3670, file: !94, line: 122, baseType: !3833, size: 64, offset: 512)
!3833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3834, size: 64)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{null, !3662, !3829}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3670, file: !94, line: 123, baseType: !3837, size: 64, offset: 576)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3838, size: 64)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{!243, !3662, !3794, !3816, !2678}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3663, file: !94, line: 166, baseType: !180, size: 64, offset: 256)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3663, file: !94, line: 167, baseType: !7, size: 32, offset: 320)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3663, file: !94, line: 168, baseType: !7, size: 32, offset: 352)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3663, file: !94, line: 171, baseType: !3689, size: 64, offset: 384)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3663, file: !94, line: 172, baseType: !93, size: 32, offset: 448)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3663, file: !94, line: 173, baseType: !3846, size: 64, offset: 512)
!3846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3847, size: 64)
!3847 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !94, line: 134, flags: DIFlagFwdDecl)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3663, file: !94, line: 175, baseType: !3662, size: 64, offset: 576)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3663, file: !94, line: 182, baseType: !3805, size: 64, offset: 640)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3663, file: !94, line: 183, baseType: !7, size: 32, offset: 704)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3663, file: !94, line: 184, baseType: !7, size: 32, offset: 736)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3663, file: !94, line: 185, baseType: !727, size: 128, offset: 768)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3663, file: !94, line: 186, baseType: !1162, size: 192, offset: 896)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3663, file: !94, line: 187, baseType: !3855, offset: 1088)
!3855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2326)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !192, file: !73, line: 499, baseType: !203, size: 128, offset: 4224)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !192, file: !73, line: 502, baseType: !3858, size: 64, offset: 4352)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3860)
!3860 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !192, file: !73, line: 504, baseType: !3862, size: 64, offset: 4416)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !192, file: !73, line: 505, baseType: !406, size: 64, offset: 4480)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !192, file: !73, line: 510, baseType: !406, size: 64, offset: 4544)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !192, file: !73, line: 511, baseType: !3866, size: 64, offset: 4608)
!3866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3867, size: 64)
!3867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3868)
!3868 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !192, file: !73, line: 513, baseType: !3870, size: 64, offset: 4672)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !3872)
!3872 = !{!3873, !3874}
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3871, file: !73, line: 293, baseType: !7, size: 32)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3871, file: !73, line: 294, baseType: !309, size: 64, offset: 64)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !192, file: !73, line: 515, baseType: !203, size: 128, offset: 4736)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !192, file: !73, line: 526, baseType: !3877, offset: 4864)
!3877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3878, line: 5, elements: !231)
!3878 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !192, file: !73, line: 528, baseType: !3676, size: 64, offset: 4864)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !192, file: !73, line: 529, baseType: !3689, size: 64, offset: 4928)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !192, file: !73, line: 534, baseType: !498, size: 32, offset: 4992)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !192, file: !73, line: 535, baseType: !400, size: 32, offset: 5024)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !192, file: !73, line: 537, baseType: !217, offset: 5056)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !192, file: !73, line: 538, baseType: !203, size: 128, offset: 5056)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !192, file: !73, line: 540, baseType: !3886, size: 64, offset: 5184)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3888, line: 54, size: 960, elements: !3889)
!3888 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3889 = !{!3890, !3891, !3892, !3893, !3894, !3895, !3896, !3900, !3904, !3905, !3906, !3907, !3911, !3915, !3916}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3887, file: !3888, line: 55, baseType: !199, size: 64)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3887, file: !3888, line: 56, baseType: !618, size: 64, offset: 64)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3887, file: !3888, line: 58, baseType: !313, size: 64, offset: 128)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3887, file: !3888, line: 59, baseType: !313, size: 64, offset: 192)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3887, file: !3888, line: 60, baseType: !210, size: 64, offset: 256)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3887, file: !3888, line: 62, baseType: !3396, size: 64, offset: 320)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3887, file: !3888, line: 63, baseType: !3897, size: 64, offset: 384)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{!259, !191, !3403}
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3887, file: !3888, line: 65, baseType: !3901, size: 64, offset: 448)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DISubroutineType(types: !3903)
!3903 = !{null, !3886}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3887, file: !3888, line: 66, baseType: !3405, size: 64, offset: 512)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3887, file: !3888, line: 68, baseType: !3414, size: 64, offset: 576)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3887, file: !3888, line: 70, baseType: !3200, size: 64, offset: 640)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3887, file: !3888, line: 71, baseType: !3908, size: 64, offset: 704)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = !DISubroutineType(types: !3910)
!3910 = !{!2122, !191}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3887, file: !3888, line: 73, baseType: !3912, size: 64, offset: 768)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{null, !191, !3232, !3233}
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3887, file: !3888, line: 75, baseType: !3409, size: 64, offset: 832)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3887, file: !3888, line: 77, baseType: !3526, size: 64, offset: 896)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !192, file: !73, line: 541, baseType: !313, size: 64, offset: 5248)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !192, file: !73, line: 543, baseType: !3405, size: 64, offset: 5312)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !192, file: !73, line: 544, baseType: !3920, size: 64, offset: 5376)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !192, file: !73, line: 545, baseType: !3923, size: 64, offset: 5440)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !192, file: !73, line: 547, baseType: !475, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !192, file: !73, line: 548, baseType: !475, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !192, file: !73, line: 549, baseType: !475, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !192, file: !73, line: 550, baseType: !475, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "dma_attrs", scope: !186, file: !130, line: 571, baseType: !309, size: 64, offset: 128)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "bidirectional", scope: !186, file: !130, line: 572, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "fileio_read_once", scope: !186, file: !130, line: 573, baseType: !7, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "fileio_write_immediately", scope: !186, file: !130, line: 574, baseType: !7, size: 1, offset: 194, flags: DIFlagBitField, extraData: i64 192)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "allow_zero_bytesused", scope: !186, file: !130, line: 575, baseType: !7, size: 1, offset: 195, flags: DIFlagBitField, extraData: i64 192)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_poll_must_check_waiting_for_buffers", scope: !186, file: !130, line: 576, baseType: !7, size: 1, offset: 196, flags: DIFlagBitField, extraData: i64 192)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "supports_requests", scope: !186, file: !130, line: 577, baseType: !7, size: 1, offset: 197, flags: DIFlagBitField, extraData: i64 192)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "requires_requests", scope: !186, file: !130, line: 578, baseType: !7, size: 1, offset: 198, flags: DIFlagBitField, extraData: i64 192)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "uses_qbuf", scope: !186, file: !130, line: 579, baseType: !7, size: 1, offset: 199, flags: DIFlagBitField, extraData: i64 192)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "uses_requests", scope: !186, file: !130, line: 580, baseType: !7, size: 1, offset: 200, flags: DIFlagBitField, extraData: i64 192)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "allow_cache_hints", scope: !186, file: !130, line: 581, baseType: !7, size: 1, offset: 201, flags: DIFlagBitField, extraData: i64 192)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !186, file: !130, line: 583, baseType: !3941, size: 64, offset: 256)
!3941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !186, file: !130, line: 584, baseType: !180, size: 64, offset: 320)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !186, file: !130, line: 586, baseType: !3944, size: 64, offset: 384)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3946)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vb2_ops", file: !130, line: 417, size: 768, elements: !3947)
!3947 = !{!3948, !3953, !3957, !3958, !3962, !3963, !3964, !3968, !3969, !3973, !3974, !3975}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "queue_setup", scope: !3946, file: !130, line: 418, baseType: !3949, size: 64)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!243, !185, !2678, !2678, !2678, !3952}
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !191, size: 64)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "wait_prepare", scope: !3946, file: !130, line: 422, baseType: !3954, size: 64, offset: 64)
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3955, size: 64)
!3955 = !DISubroutineType(types: !3956)
!3956 = !{null, !185}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "wait_finish", scope: !3946, file: !130, line: 423, baseType: !3954, size: 64, offset: 128)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "buf_out_validate", scope: !3946, file: !130, line: 425, baseType: !3959, size: 64, offset: 192)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!243, !181}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "buf_init", scope: !3946, file: !130, line: 426, baseType: !3959, size: 64, offset: 256)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "buf_prepare", scope: !3946, file: !130, line: 427, baseType: !3959, size: 64, offset: 320)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "buf_finish", scope: !3946, file: !130, line: 428, baseType: !3965, size: 64, offset: 384)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{null, !181}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "buf_cleanup", scope: !3946, file: !130, line: 429, baseType: !3965, size: 64, offset: 448)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "start_streaming", scope: !3946, file: !130, line: 431, baseType: !3970, size: 64, offset: 512)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!243, !185, !7}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "stop_streaming", scope: !3946, file: !130, line: 432, baseType: !3954, size: 64, offset: 576)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "buf_queue", scope: !3946, file: !130, line: 434, baseType: !3965, size: 64, offset: 640)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "buf_request_complete", scope: !3946, file: !130, line: 436, baseType: !3965, size: 64, offset: 704)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "mem_ops", scope: !186, file: !130, line: 587, baseType: !3977, size: 64, offset: 448)
!3977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3978, size: 64)
!3978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3979)
!3979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vb2_mem_ops", file: !130, line: 118, size: 960, elements: !3980)
!3980 = !{!3981, !3985, !3986, !4155, !4159, !4160, !4161, !4162, !4166, !4167, !4171, !4172, !4176, !4177, !4181}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3979, file: !130, line: 119, baseType: !3982, size: 64)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!180, !191, !309, !309, !139, !732}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3979, file: !130, line: 123, baseType: !453, size: 64, offset: 64)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "get_dmabuf", scope: !3979, file: !130, line: 124, baseType: !3987, size: 64, offset: 128)
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DISubroutineType(types: !3989)
!3989 = !{!3990, !180, !309}
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf", file: !3992, line: 305, size: 1856, elements: !3993)
!3992 = !DIFile(filename: "./include/linux/dma-buf.h", directory: "/home/lizy2001/genbc/linux")
!3993 = !{!3994, !3995, !3996, !3997, !4081, !4082, !4083, !4084, !4085, !4086, !4087, !4088, !4089, !4090, !4093, !4094, !4154}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3991, file: !3992, line: 306, baseType: !306, size: 64)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3991, file: !3992, line: 307, baseType: !337, size: 64, offset: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "attachments", scope: !3991, file: !3992, line: 308, baseType: !203, size: 128, offset: 128)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3991, file: !3992, line: 309, baseType: !3998, size: 64, offset: 256)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4000)
!4000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_ops", file: !3992, line: 35, size: 832, elements: !4001)
!4001 = !{!4002, !4003, !4043, !4047, !4051, !4052, !4056, !4060, !4064, !4068, !4069, !4073, !4077}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "cache_sgt_mapping", scope: !4000, file: !3992, line: 43, baseType: !475, size: 8)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4000, file: !3992, line: 71, baseType: !4004, size: 64, offset: 64)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{!243, !3990, !4007}
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_attachment", file: !3992, line: 389, size: 576, elements: !4009)
!4009 = !{!4010, !4011, !4012, !4013, !4029, !4030, !4031, !4041, !4042}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "dmabuf", scope: !4008, file: !3992, line: 390, baseType: !3990, size: 64)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4008, file: !3992, line: 391, baseType: !191, size: 64, offset: 64)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4008, file: !3992, line: 392, baseType: !203, size: 128, offset: 128)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "sgt", scope: !4008, file: !3992, line: 393, baseType: !4014, size: 64, offset: 256)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !4016, line: 42, size: 128, elements: !4017)
!4016 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4017 = !{!4018, !4027, !4028}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !4015, file: !4016, line: 43, baseType: !4019, size: 64)
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4020, size: 64)
!4020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4016, line: 11, size: 256, elements: !4021)
!4021 = !{!4022, !4023, !4024, !4025, !4026}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4020, file: !4016, line: 12, baseType: !309, size: 64)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4020, file: !4016, line: 13, baseType: !7, size: 32, offset: 64)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4020, file: !4016, line: 14, baseType: !7, size: 32, offset: 96)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4020, file: !4016, line: 15, baseType: !909, size: 64, offset: 128)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4020, file: !4016, line: 17, baseType: !7, size: 32, offset: 192)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !4015, file: !4016, line: 44, baseType: !7, size: 32, offset: 64)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !4015, file: !4016, line: 45, baseType: !7, size: 32, offset: 96)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4008, file: !3992, line: 394, baseType: !139, size: 32, offset: 320)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "peer2peer", scope: !4008, file: !3992, line: 395, baseType: !475, size: 8, offset: 352)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "importer_ops", scope: !4008, file: !3992, line: 396, baseType: !4032, size: 64, offset: 384)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4034)
!4034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_attach_ops", file: !3992, line: 337, size: 128, elements: !4035)
!4035 = !{!4036, !4037}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "allow_peer2peer", scope: !4034, file: !3992, line: 344, baseType: !475, size: 8)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "move_notify", scope: !4034, file: !3992, line: 364, baseType: !4038, size: 64, offset: 64)
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4039, size: 64)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{null, !4007}
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "importer_priv", scope: !4008, file: !3992, line: 397, baseType: !180, size: 64, offset: 448)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4008, file: !3992, line: 398, baseType: !180, size: 64, offset: 512)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4000, file: !3992, line: 82, baseType: !4044, size: 64, offset: 128)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{null, !3990, !4007}
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4000, file: !3992, line: 100, baseType: !4048, size: 64, offset: 192)
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{!243, !4007}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "unpin", scope: !4000, file: !3992, line: 113, baseType: !4038, size: 64, offset: 256)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "map_dma_buf", scope: !4000, file: !3992, line: 154, baseType: !4053, size: 64, offset: 320)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = !DISubroutineType(types: !4055)
!4055 = !{!4014, !4007, !139}
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_dma_buf", scope: !4000, file: !3992, line: 164, baseType: !4057, size: 64, offset: 384)
!4057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4058, size: 64)
!4058 = !DISubroutineType(types: !4059)
!4059 = !{null, !4007, !4014, !139}
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4000, file: !3992, line: 178, baseType: !4061, size: 64, offset: 448)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{null, !3990}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "begin_cpu_access", scope: !4000, file: !3992, line: 210, baseType: !4065, size: 64, offset: 512)
!4065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{!243, !3990, !139}
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "end_cpu_access", scope: !4000, file: !3992, line: 229, baseType: !4065, size: 64, offset: 576)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4000, file: !3992, line: 266, baseType: !4070, size: 64, offset: 640)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4071 = !DISubroutineType(types: !4072)
!4072 = !{!243, !3990, !970}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "vmap", scope: !4000, file: !3992, line: 268, baseType: !4074, size: 64, offset: 704)
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = !DISubroutineType(types: !4076)
!4076 = !{!180, !3990}
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "vunmap", scope: !4000, file: !3992, line: 269, baseType: !4078, size: 64, offset: 768)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = !DISubroutineType(types: !4080)
!4080 = !{null, !3990, !180}
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3991, file: !3992, line: 310, baseType: !1162, size: 192, offset: 320)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "vmapping_counter", scope: !3991, file: !3992, line: 311, baseType: !7, size: 32, offset: 512)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "vmap_ptr", scope: !3991, file: !3992, line: 312, baseType: !180, size: 64, offset: 576)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "exp_name", scope: !3991, file: !3992, line: 313, baseType: !199, size: 64, offset: 640)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3991, file: !3992, line: 314, baseType: !199, size: 64, offset: 704)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "name_lock", scope: !3991, file: !3992, line: 315, baseType: !217, offset: 768)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3991, file: !3992, line: 316, baseType: !618, size: 64, offset: 768)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !3991, file: !3992, line: 317, baseType: !203, size: 128, offset: 832)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3991, file: !3992, line: 318, baseType: !180, size: 64, offset: 960)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !3991, file: !3992, line: 319, baseType: !4091, size: 64, offset: 1024)
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4092, size: 64)
!4092 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_resv", file: !3992, line: 319, flags: DIFlagFwdDecl)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3991, file: !3992, line: 322, baseType: !1474, size: 128, offset: 1088)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "cb_excl", scope: !3991, file: !3992, line: 329, baseType: !4095, size: 320, offset: 1216)
!4095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_poll_cb_t", file: !3992, line: 324, size: 320, elements: !4096)
!4096 = !{!4097, !4152, !4153}
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !4095, file: !3992, line: 325, baseType: !4098, size: 192)
!4098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_fence_cb", file: !4099, line: 116, size: 192, elements: !4100)
!4099 = !DIFile(filename: "./include/linux/dma-fence.h", directory: "/home/lizy2001/genbc/linux")
!4100 = !{!4101, !4102}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4098, file: !4099, line: 117, baseType: !203, size: 128)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4098, file: !4099, line: 118, baseType: !4103, size: 64, offset: 128)
!4103 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_fence_func_t", file: !4099, line: 105, baseType: !4104)
!4104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4105, size: 64)
!4105 = !DISubroutineType(types: !4106)
!4106 = !{null, !4107, !4151}
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_fence", file: !4099, line: 65, size: 512, elements: !4109)
!4109 = !{!4110, !4111, !4140, !4146, !4147, !4148, !4149, !4150}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4108, file: !4099, line: 66, baseType: !1053, size: 64)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4108, file: !4099, line: 67, baseType: !4112, size: 64, offset: 64)
!4112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4113, size: 64)
!4113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4114)
!4114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_fence_ops", file: !4099, line: 125, size: 576, elements: !4115)
!4115 = !{!4116, !4117, !4121, !4122, !4126, !4127, !4131, !4135, !4139}
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "use_64bit_seqno", scope: !4114, file: !4099, line: 132, baseType: !475, size: 8)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "get_driver_name", scope: !4114, file: !4099, line: 143, baseType: !4118, size: 64, offset: 64)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{!199, !4107}
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "get_timeline_name", scope: !4114, file: !4099, line: 155, baseType: !4118, size: 64, offset: 128)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "enable_signaling", scope: !4114, file: !4099, line: 192, baseType: !4123, size: 64, offset: 192)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!475, !4107}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "signaled", scope: !4114, file: !4099, line: 209, baseType: !4123, size: 64, offset: 256)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4114, file: !4099, line: 231, baseType: !4128, size: 64, offset: 320)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!294, !4107, !475, !294}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4114, file: !4099, line: 242, baseType: !4132, size: 64, offset: 384)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{null, !4107}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "fence_value_str", scope: !4114, file: !4099, line: 252, baseType: !4136, size: 64, offset: 448)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{null, !4107, !259, !243}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "timeline_value_str", scope: !4114, file: !4099, line: 262, baseType: !4136, size: 64, offset: 512)
!4140 = !DIDerivedType(tag: DW_TAG_member, scope: !4108, file: !4099, line: 84, baseType: !4141, size: 128, offset: 128)
!4141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4108, file: !4099, line: 84, size: 128, elements: !4142)
!4142 = !{!4143, !4144, !4145}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !4141, file: !4099, line: 85, baseType: !203, size: 128)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !4141, file: !4099, line: 87, baseType: !1288, size: 64)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4141, file: !4099, line: 89, baseType: !350, size: 128, align: 64)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4108, file: !4099, line: 91, baseType: !406, size: 64, offset: 256)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "seqno", scope: !4108, file: !4099, line: 92, baseType: !406, size: 64, offset: 320)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4108, file: !4099, line: 93, baseType: !309, size: 64, offset: 384)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4108, file: !4099, line: 94, baseType: !3374, size: 32, offset: 448)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !4108, file: !4099, line: 95, baseType: !243, size: 32, offset: 480)
!4151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4098, size: 64)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4095, file: !3992, line: 326, baseType: !2911, size: 64, offset: 192)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4095, file: !3992, line: 328, baseType: !2900, size: 32, offset: 256)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "cb_shared", scope: !3991, file: !3992, line: 329, baseType: !4095, size: 320, offset: 1536)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "get_userptr", scope: !3979, file: !130, line: 126, baseType: !4156, size: 64, offset: 192)
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4157 = !DISubroutineType(types: !4158)
!4158 = !{!180, !191, !309, !309, !139}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "put_userptr", scope: !3979, file: !130, line: 129, baseType: !453, size: 64, offset: 256)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3979, file: !130, line: 131, baseType: !453, size: 64, offset: 320)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !3979, file: !130, line: 132, baseType: !453, size: 64, offset: 384)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "attach_dmabuf", scope: !3979, file: !130, line: 134, baseType: !4163, size: 64, offset: 448)
!4163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4164, size: 64)
!4164 = !DISubroutineType(types: !4165)
!4165 = !{!180, !191, !3990, !309, !139}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "detach_dmabuf", scope: !3979, file: !130, line: 138, baseType: !453, size: 64, offset: 512)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "map_dmabuf", scope: !3979, file: !130, line: 139, baseType: !4168, size: 64, offset: 576)
!4168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4169, size: 64)
!4169 = !DISubroutineType(types: !4170)
!4170 = !{!243, !180}
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "unmap_dmabuf", scope: !3979, file: !130, line: 140, baseType: !453, size: 64, offset: 640)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "vaddr", scope: !3979, file: !130, line: 142, baseType: !4173, size: 64, offset: 704)
!4173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4174, size: 64)
!4174 = !DISubroutineType(types: !4175)
!4175 = !{!180, !180}
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !3979, file: !130, line: 143, baseType: !4173, size: 64, offset: 768)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "num_users", scope: !3979, file: !130, line: 145, baseType: !4178, size: 64, offset: 832)
!4178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4179, size: 64)
!4179 = !DISubroutineType(types: !4180)
!4180 = !{!7, !180}
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3979, file: !130, line: 147, baseType: !4182, size: 64, offset: 896)
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 64)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!243, !180, !970}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "buf_ops", scope: !186, file: !130, line: 588, baseType: !4186, size: 64, offset: 512)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4188)
!4188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vb2_buf_ops", file: !130, line: 456, size: 320, elements: !4189)
!4189 = !{!4190, !4194, !4195, !4199, !4219}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "verify_planes_array", scope: !4188, file: !130, line: 457, baseType: !4191, size: 64)
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{!243, !181, !2122}
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "init_buffer", scope: !4188, file: !130, line: 458, baseType: !3965, size: 64, offset: 64)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "fill_user_buffer", scope: !4188, file: !130, line: 459, baseType: !4196, size: 64, offset: 128)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{null, !181, !180}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "fill_vb2_buffer", scope: !4188, file: !130, line: 460, baseType: !4200, size: 64, offset: 192)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!243, !181, !4203}
!4203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4204, size: 64)
!4204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vb2_plane", file: !130, line: 174, size: 384, elements: !4205)
!4205 = !{!4206, !4207, !4208, !4209, !4210, !4211, !4212, !4218}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "mem_priv", scope: !4204, file: !130, line: 175, baseType: !180, size: 64)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "dbuf", scope: !4204, file: !130, line: 176, baseType: !3990, size: 64, offset: 64)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "dbuf_mapped", scope: !4204, file: !130, line: 177, baseType: !7, size: 32, offset: 128)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "bytesused", scope: !4204, file: !130, line: 178, baseType: !7, size: 32, offset: 160)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4204, file: !130, line: 179, baseType: !7, size: 32, offset: 192)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "min_length", scope: !4204, file: !130, line: 180, baseType: !7, size: 32, offset: 224)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !4204, file: !130, line: 185, baseType: !4213, size: 64, offset: 256)
!4213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4204, file: !130, line: 181, size: 64, elements: !4214)
!4214 = !{!4215, !4216, !4217}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4213, file: !130, line: 182, baseType: !7, size: 32)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "userptr", scope: !4213, file: !130, line: 183, baseType: !309, size: 64)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !4213, file: !130, line: 184, baseType: !243, size: 32)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "data_offset", scope: !4204, file: !130, line: 186, baseType: !7, size: 32, offset: 320)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "copy_timestamp", scope: !4188, file: !130, line: 461, baseType: !4220, size: 64, offset: 256)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = !DISubroutineType(types: !4222)
!4222 = !{null, !181, !2122}
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "drv_priv", scope: !186, file: !130, line: 590, baseType: !180, size: 64, offset: 576)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_flags", scope: !186, file: !130, line: 591, baseType: !400, size: 32, offset: 640)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "buf_struct_size", scope: !186, file: !130, line: 592, baseType: !7, size: 32, offset: 672)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp_flags", scope: !186, file: !130, line: 593, baseType: !400, size: 32, offset: 704)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_flags", scope: !186, file: !130, line: 594, baseType: !732, size: 32, offset: 736)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "min_buffers_needed", scope: !186, file: !130, line: 595, baseType: !400, size: 32, offset: 768)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_devs", scope: !186, file: !130, line: 597, baseType: !4230, size: 512, offset: 832)
!4230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !191, size: 512, elements: !1318)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !186, file: !130, line: 600, baseType: !1162, size: 192, offset: 1344)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !186, file: !130, line: 601, baseType: !7, size: 32, offset: 1536)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "dma_dir", scope: !186, file: !130, line: 602, baseType: !139, size: 32, offset: 1568)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !186, file: !130, line: 603, baseType: !4235, size: 2048, offset: 1600)
!4235 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 2048, elements: !2225)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "num_buffers", scope: !186, file: !130, line: 604, baseType: !7, size: 32, offset: 3648)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "queued_list", scope: !186, file: !130, line: 606, baseType: !203, size: 128, offset: 3712)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "queued_count", scope: !186, file: !130, line: 607, baseType: !7, size: 32, offset: 3840)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "owned_by_drv_count", scope: !186, file: !130, line: 609, baseType: !736, size: 32, offset: 3872)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "done_list", scope: !186, file: !130, line: 610, baseType: !203, size: 128, offset: 3904)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "done_lock", scope: !186, file: !130, line: 611, baseType: !217, offset: 4032)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "done_wq", scope: !186, file: !130, line: 612, baseType: !1474, size: 128, offset: 4032)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "streaming", scope: !186, file: !130, line: 614, baseType: !7, size: 1, offset: 4160, flags: DIFlagBitField, extraData: i64 4160)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "start_streaming_called", scope: !186, file: !130, line: 615, baseType: !7, size: 1, offset: 4161, flags: DIFlagBitField, extraData: i64 4160)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !186, file: !130, line: 616, baseType: !7, size: 1, offset: 4162, flags: DIFlagBitField, extraData: i64 4160)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "waiting_for_buffers", scope: !186, file: !130, line: 617, baseType: !7, size: 1, offset: 4163, flags: DIFlagBitField, extraData: i64 4160)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "waiting_in_dqbuf", scope: !186, file: !130, line: 618, baseType: !7, size: 1, offset: 4164, flags: DIFlagBitField, extraData: i64 4160)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "is_multiplanar", scope: !186, file: !130, line: 619, baseType: !7, size: 1, offset: 4165, flags: DIFlagBitField, extraData: i64 4160)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "is_output", scope: !186, file: !130, line: 620, baseType: !7, size: 1, offset: 4166, flags: DIFlagBitField, extraData: i64 4160)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "copy_timestamp", scope: !186, file: !130, line: 621, baseType: !7, size: 1, offset: 4167, flags: DIFlagBitField, extraData: i64 4160)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "last_buffer_dequeued", scope: !186, file: !130, line: 622, baseType: !7, size: 1, offset: 4168, flags: DIFlagBitField, extraData: i64 4160)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "fileio", scope: !186, file: !130, line: 624, baseType: !4253, size: 64, offset: 4224)
!4253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4254, size: 64)
!4254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vb2_fileio_data", file: !3, line: 2494, size: 6464, elements: !4255)
!4255 = !{!4256, !4257, !4258, !4259, !4267, !4268, !4269, !4270, !4271, !4272}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4254, file: !3, line: 2495, baseType: !7, size: 32)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4254, file: !3, line: 2496, baseType: !7, size: 32, offset: 32)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !4254, file: !3, line: 2497, baseType: !7, size: 32, offset: 64)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !4254, file: !3, line: 2498, baseType: !4260, size: 6144, offset: 128)
!4260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4261, size: 6144, elements: !2225)
!4261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vb2_fileio_buf", file: !3, line: 2463, size: 192, elements: !4262)
!4262 = !{!4263, !4264, !4265, !4266}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "vaddr", scope: !4261, file: !3, line: 2464, baseType: !180, size: 64)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4261, file: !3, line: 2465, baseType: !7, size: 32, offset: 64)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !4261, file: !3, line: 2466, baseType: !7, size: 32, offset: 96)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !4261, file: !3, line: 2467, baseType: !7, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !4254, file: !3, line: 2499, baseType: !7, size: 32, offset: 6272)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "initial_index", scope: !4254, file: !3, line: 2500, baseType: !7, size: 32, offset: 6304)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "q_count", scope: !4254, file: !3, line: 2501, baseType: !7, size: 32, offset: 6336)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !4254, file: !3, line: 2502, baseType: !7, size: 32, offset: 6368)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "read_once", scope: !4254, file: !3, line: 2503, baseType: !7, size: 1, offset: 6400, flags: DIFlagBitField, extraData: i64 6400)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "write_immediately", scope: !4254, file: !3, line: 2504, baseType: !7, size: 1, offset: 6401, flags: DIFlagBitField, extraData: i64 6400)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "threadio", scope: !186, file: !130, line: 625, baseType: !4274, size: 64, offset: 4288)
!4274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64)
!4275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vb2_threadio_data", file: !3, line: 2830, size: 256, elements: !4276)
!4276 = !{!4277, !4278, !4283, !4284}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !4275, file: !3, line: 2831, baseType: !1205, size: 64)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "fnc", scope: !4275, file: !3, line: 2832, baseType: !4279, size: 64, offset: 64)
!4279 = !DIDerivedType(tag: DW_TAG_typedef, name: "vb2_thread_fnc", file: !130, line: 1064, baseType: !4280)
!4280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4281, size: 64)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{!243, !181, !180}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4275, file: !3, line: 2833, baseType: !180, size: 64, offset: 128)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !4275, file: !3, line: 2834, baseType: !475, size: 8, offset: 192)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !186, file: !130, line: 627, baseType: !2695, size: 256, offset: 4352)
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !182, file: !130, line: 247, baseType: !7, size: 32, offset: 64)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !182, file: !130, line: 248, baseType: !7, size: 32, offset: 96)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !182, file: !130, line: 249, baseType: !7, size: 32, offset: 128)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "num_planes", scope: !182, file: !130, line: 250, baseType: !7, size: 32, offset: 160)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !182, file: !130, line: 251, baseType: !406, size: 64, offset: 192)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !182, file: !130, line: 252, baseType: !4292, size: 64, offset: 256)
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_request", file: !120, line: 62, size: 768, elements: !4294)
!4294 = !{!4295, !4491, !4492, !4496, !4497, !4498, !4499, !4500, !4501, !4502}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "mdev", scope: !4293, file: !120, line: 63, baseType: !4296, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_device", file: !4298, line: 144, size: 5184, elements: !4299)
!4298 = !DIFile(filename: "./include/media/media-device.h", directory: "/home/lizy2001/genbc/linux")
!4299 = !{!4300, !4301, !4332, !4333, !4334, !4338, !4339, !4340, !4341, !4342, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4458, !4459, !4463, !4467, !4489, !4490}
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4297, file: !4298, line: 146, baseType: !191, size: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4297, file: !4298, line: 147, baseType: !4302, size: 64, offset: 64)
!4302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4303, size: 64)
!4303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_devnode", file: !4304, line: 75, size: 6784, elements: !4305)
!4304 = !DIFile(filename: "./include/media/media-devnode.h", directory: "/home/lizy2001/genbc/linux")
!4305 = !{!4306, !4307, !4323, !4324, !4325, !4326, !4327, !4328}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "media_dev", scope: !4303, file: !4304, line: 76, baseType: !4296, size: 64)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !4303, file: !4304, line: 79, baseType: !4308, size: 64, offset: 64)
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4309, size: 64)
!4309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4310)
!4310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_file_operations", file: !4304, line: 47, size: 512, elements: !4311)
!4311 = !{!4312, !4313, !4314, !4315, !4316, !4317, !4318, !4322}
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4310, file: !4304, line: 48, baseType: !618, size: 64)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4310, file: !4304, line: 49, baseType: !2868, size: 64, offset: 64)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4310, file: !4304, line: 50, baseType: !2873, size: 64, offset: 128)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4310, file: !4304, line: 51, baseType: !2897, size: 64, offset: 192)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4310, file: !4304, line: 52, baseType: !2914, size: 64, offset: 256)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4310, file: !4304, line: 53, baseType: !2914, size: 64, offset: 320)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4310, file: !4304, line: 54, baseType: !4319, size: 64, offset: 384)
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!243, !337}
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4310, file: !4304, line: 55, baseType: !4319, size: 64, offset: 448)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4303, file: !4304, line: 82, baseType: !192, size: 5568, offset: 128)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "cdev", scope: !4303, file: !4304, line: 83, baseType: !3107, size: 832, offset: 5696)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4303, file: !4304, line: 84, baseType: !191, size: 64, offset: 6528)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4303, file: !4304, line: 87, baseType: !243, size: 32, offset: 6592)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4303, file: !4304, line: 88, baseType: !309, size: 64, offset: 6656)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4303, file: !4304, line: 91, baseType: !4329, size: 64, offset: 6720)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{null, !4302}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !4297, file: !4298, line: 149, baseType: !2695, size: 256, offset: 128)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !4297, file: !4298, line: 150, baseType: !2695, size: 256, offset: 384)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !4297, file: !4298, line: 151, baseType: !4335, size: 320, offset: 640)
!4335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 320, elements: !4336)
!4336 = !{!4337}
!4337 = !DISubrange(count: 40)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !4297, file: !4298, line: 152, baseType: !2695, size: 256, offset: 960)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "hw_revision", scope: !4297, file: !4298, line: 153, baseType: !400, size: 32, offset: 1216)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "topology_version", scope: !4297, file: !4298, line: 155, baseType: !406, size: 64, offset: 1280)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4297, file: !4298, line: 157, baseType: !400, size: 32, offset: 1344)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "entity_internal_idx", scope: !4297, file: !4298, line: 158, baseType: !4343, size: 128, offset: 1408)
!4343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3261, line: 244, size: 128, elements: !4344)
!4344 = !{!4345}
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4343, file: !3261, line: 245, baseType: !727, size: 128)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "entity_internal_idx_max", scope: !4297, file: !4298, line: 159, baseType: !243, size: 32, offset: 1536)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "entities", scope: !4297, file: !4298, line: 161, baseType: !203, size: 128, offset: 1600)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "interfaces", scope: !4297, file: !4298, line: 162, baseType: !203, size: 128, offset: 1728)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "pads", scope: !4297, file: !4298, line: 163, baseType: !203, size: 128, offset: 1856)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !4297, file: !4298, line: 164, baseType: !203, size: 128, offset: 1984)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "entity_notify", scope: !4297, file: !4298, line: 167, baseType: !203, size: 128, offset: 2112)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "graph_mutex", scope: !4297, file: !4298, line: 170, baseType: !1162, size: 192, offset: 2240)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "pm_count_walk", scope: !4297, file: !4298, line: 171, baseType: !4354, size: 2240, offset: 2432)
!4354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_graph", file: !108, line: 88, size: 2240, elements: !4355)
!4355 = !{!4356, !4452, !4457}
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !4354, file: !108, line: 92, baseType: !4357, size: 2048)
!4357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4358, size: 2048, elements: !1728)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4354, file: !108, line: 89, size: 128, elements: !4359)
!4359 = !{!4360, !4451}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "entity", scope: !4358, file: !108, line: 90, baseType: !4361, size: 64)
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 64)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_entity", file: !108, line: 290, size: 1024, elements: !4363)
!4363 = !{!4364, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4387, !4388, !4435, !4436, !4437, !4443}
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "graph_obj", scope: !4362, file: !108, line: 291, baseType: !4365, size: 256)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_gobj", file: !108, line: 57, size: 256, elements: !4366)
!4366 = !{!4367, !4368, !4369}
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "mdev", scope: !4365, file: !108, line: 58, baseType: !4296, size: 64)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4365, file: !108, line: 59, baseType: !400, size: 32, offset: 64)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4365, file: !108, line: 60, baseType: !203, size: 128, offset: 128)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4362, file: !108, line: 292, baseType: !199, size: 64, offset: 256)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "obj_type", scope: !4362, file: !108, line: 293, baseType: !107, size: 32, offset: 320)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !4362, file: !108, line: 294, baseType: !400, size: 32, offset: 352)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4362, file: !108, line: 295, baseType: !309, size: 64, offset: 384)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "num_pads", scope: !4362, file: !108, line: 297, baseType: !848, size: 16, offset: 448)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "num_links", scope: !4362, file: !108, line: 298, baseType: !848, size: 16, offset: 464)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "num_backlinks", scope: !4362, file: !108, line: 299, baseType: !848, size: 16, offset: 480)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "internal_idx", scope: !4362, file: !108, line: 300, baseType: !243, size: 32, offset: 512)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "pads", scope: !4362, file: !108, line: 302, baseType: !4379, size: 64, offset: 576)
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 64)
!4380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_pad", file: !108, line: 189, size: 448, elements: !4381)
!4381 = !{!4382, !4383, !4384, !4385, !4386}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "graph_obj", scope: !4380, file: !108, line: 190, baseType: !4365, size: 256)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "entity", scope: !4380, file: !108, line: 191, baseType: !4361, size: 64, offset: 256)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4380, file: !108, line: 192, baseType: !848, size: 16, offset: 320)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "sig_type", scope: !4380, file: !108, line: 193, baseType: !113, size: 32, offset: 352)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4380, file: !108, line: 194, baseType: !309, size: 64, offset: 384)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !4362, file: !108, line: 303, baseType: !203, size: 128, offset: 640)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4362, file: !108, line: 305, baseType: !4389, size: 64, offset: 768)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4391)
!4391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_entity_operations", file: !108, line: 214, size: 192, elements: !4392)
!4392 = !{!4393, !4397, !4403}
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "get_fwnode_pad", scope: !4391, file: !108, line: 215, baseType: !4394, size: 64)
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4395 = !DISubroutineType(types: !4396)
!4396 = !{!243, !4361, !3763}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "link_setup", scope: !4391, file: !108, line: 217, baseType: !4398, size: 64, offset: 64)
!4398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4399, size: 64)
!4399 = !DISubroutineType(types: !4400)
!4400 = !{!243, !4361, !4401, !4401, !400}
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4380)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "link_validate", scope: !4391, file: !108, line: 220, baseType: !4404, size: 64, offset: 128)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{!243, !4407}
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 64)
!4408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_link", file: !108, line: 132, size: 704, elements: !4409)
!4409 = !{!4410, !4411, !4412, !4426, !4432, !4433, !4434}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "graph_obj", scope: !4408, file: !108, line: 133, baseType: !4365, size: 256)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4408, file: !108, line: 134, baseType: !203, size: 128, offset: 256)
!4412 = !DIDerivedType(tag: DW_TAG_member, scope: !4408, file: !108, line: 135, baseType: !4413, size: 64, offset: 384)
!4413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4408, file: !108, line: 135, size: 64, elements: !4414)
!4414 = !{!4415, !4417, !4418}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "gobj0", scope: !4413, file: !108, line: 136, baseType: !4416, size: 64)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 64)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !4413, file: !108, line: 137, baseType: !4379, size: 64)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "intf", scope: !4413, file: !108, line: 138, baseType: !4419, size: 64)
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4420, size: 64)
!4420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_interface", file: !108, line: 336, size: 448, elements: !4421)
!4421 = !{!4422, !4423, !4424, !4425}
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "graph_obj", scope: !4420, file: !108, line: 337, baseType: !4365, size: 256)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !4420, file: !108, line: 338, baseType: !203, size: 128, offset: 256)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4420, file: !108, line: 339, baseType: !400, size: 32, offset: 384)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4420, file: !108, line: 340, baseType: !400, size: 32, offset: 416)
!4426 = !DIDerivedType(tag: DW_TAG_member, scope: !4408, file: !108, line: 140, baseType: !4427, size: 64, offset: 448)
!4427 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4408, file: !108, line: 140, size: 64, elements: !4428)
!4428 = !{!4429, !4430, !4431}
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "gobj1", scope: !4427, file: !108, line: 141, baseType: !4416, size: 64)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "sink", scope: !4427, file: !108, line: 142, baseType: !4379, size: 64)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "entity", scope: !4427, file: !108, line: 143, baseType: !4361, size: 64)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !4408, file: !108, line: 145, baseType: !4407, size: 64, offset: 512)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4408, file: !108, line: 146, baseType: !309, size: 64, offset: 576)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "is_backlink", scope: !4408, file: !108, line: 147, baseType: !475, size: 8, offset: 640)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "stream_count", scope: !4362, file: !108, line: 307, baseType: !243, size: 32, offset: 832)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "use_count", scope: !4362, file: !108, line: 308, baseType: !243, size: 32, offset: 864)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !4362, file: !108, line: 310, baseType: !4438, size: 64, offset: 896)
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 64)
!4439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_pipeline", file: !108, line: 104, size: 2304, elements: !4440)
!4440 = !{!4441, !4442}
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "streaming_count", scope: !4439, file: !108, line: 105, baseType: !243, size: 32)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "graph", scope: !4439, file: !108, line: 106, baseType: !4354, size: 2240, offset: 64)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4362, file: !108, line: 317, baseType: !4444, size: 64, offset: 960)
!4444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4362, file: !108, line: 312, size: 64, elements: !4445)
!4445 = !{!4446}
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4444, file: !108, line: 316, baseType: !4447, size: 64)
!4447 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4444, file: !108, line: 313, size: 64, elements: !4448)
!4448 = !{!4449, !4450}
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !4447, file: !108, line: 314, baseType: !400, size: 32)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4447, file: !108, line: 315, baseType: !400, size: 32, offset: 32)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4358, file: !108, line: 91, baseType: !207, size: 64, offset: 64)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "ent_enum", scope: !4354, file: !108, line: 94, baseType: !4453, size: 128, offset: 2048)
!4453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_entity_enum", file: !108, line: 72, size: 128, elements: !4454)
!4454 = !{!4455, !4456}
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !4453, file: !108, line: 73, baseType: !3816, size: 64)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "idx_max", scope: !4453, file: !108, line: 74, baseType: !243, size: 32, offset: 64)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !4354, file: !108, line: 95, baseType: !243, size: 32, offset: 2176)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "source_priv", scope: !4297, file: !4298, line: 173, baseType: !180, size: 64, offset: 4672)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "enable_source", scope: !4297, file: !4298, line: 174, baseType: !4460, size: 64, offset: 4736)
!4460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4461, size: 64)
!4461 = !DISubroutineType(types: !4462)
!4462 = !{!243, !4361, !4438}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "disable_source", scope: !4297, file: !4298, line: 176, baseType: !4464, size: 64, offset: 4800)
!4464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4465, size: 64)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{null, !4361}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4297, file: !4298, line: 178, baseType: !4468, size: 64, offset: 4864)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4470)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_device_ops", file: !4298, line: 65, size: 320, elements: !4471)
!4471 = !{!4472, !4476, !4480, !4484, !4488}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "link_notify", scope: !4470, file: !4298, line: 66, baseType: !4473, size: 64)
!4473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4474, size: 64)
!4474 = !DISubroutineType(types: !4475)
!4475 = !{!243, !4407, !400, !7}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "req_alloc", scope: !4470, file: !4298, line: 68, baseType: !4477, size: 64, offset: 64)
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4478, size: 64)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{!4292, !4296}
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "req_free", scope: !4470, file: !4298, line: 69, baseType: !4481, size: 64, offset: 128)
!4481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4482, size: 64)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{null, !4292}
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "req_validate", scope: !4470, file: !4298, line: 70, baseType: !4485, size: 64, offset: 192)
!4485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4486, size: 64)
!4486 = !DISubroutineType(types: !4487)
!4487 = !{!243, !4292}
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "req_queue", scope: !4470, file: !4298, line: 71, baseType: !4481, size: 64, offset: 256)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "req_queue_mutex", scope: !4297, file: !4298, line: 180, baseType: !1162, size: 192, offset: 4928)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "request_id", scope: !4297, file: !4298, line: 181, baseType: !736, size: 32, offset: 5120)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4293, file: !120, line: 64, baseType: !3374, size: 32, offset: 64)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "debug_str", scope: !4293, file: !120, line: 65, baseType: !4493, size: 216, offset: 96)
!4493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !201, size: 216, elements: !4494)
!4494 = !{!4495}
!4495 = !DISubrange(count: 27)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4293, file: !120, line: 66, baseType: !119, size: 32, offset: 320)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "updating_count", scope: !4293, file: !120, line: 67, baseType: !7, size: 32, offset: 352)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "access_count", scope: !4293, file: !120, line: 68, baseType: !7, size: 32, offset: 384)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !4293, file: !120, line: 69, baseType: !203, size: 128, offset: 448)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "num_incomplete_objects", scope: !4293, file: !120, line: 70, baseType: !7, size: 32, offset: 576)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "poll_wait", scope: !4293, file: !120, line: 71, baseType: !1474, size: 128, offset: 640)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4293, file: !120, line: 72, baseType: !217, offset: 768)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "req_obj", scope: !182, file: !130, line: 253, baseType: !4504, size: 384, offset: 320)
!4504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_request_object", file: !120, line: 269, size: 384, elements: !4505)
!4505 = !{!4506, !4523, !4524, !4525, !4526, !4527}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4504, file: !120, line: 270, baseType: !4507, size: 64)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4509)
!4509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "media_request_object_ops", file: !120, line: 247, size: 320, elements: !4510)
!4510 = !{!4511, !4516, !4520, !4521, !4522}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4509, file: !120, line: 248, baseType: !4512, size: 64)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = !DISubroutineType(types: !4514)
!4514 = !{!243, !4515}
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4504, size: 64)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare", scope: !4509, file: !120, line: 249, baseType: !4517, size: 64, offset: 64)
!4517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4518, size: 64)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{null, !4515}
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4509, file: !120, line: 250, baseType: !4517, size: 64, offset: 128)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !4509, file: !120, line: 251, baseType: !4517, size: 64, offset: 192)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4509, file: !120, line: 252, baseType: !4517, size: 64, offset: 256)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4504, file: !120, line: 271, baseType: !180, size: 64, offset: 64)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "req", scope: !4504, file: !120, line: 272, baseType: !4292, size: 64, offset: 128)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4504, file: !120, line: 273, baseType: !203, size: 128, offset: 192)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4504, file: !120, line: 274, baseType: !3374, size: 32, offset: 320)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "completed", scope: !4504, file: !120, line: 275, baseType: !475, size: 8, offset: 352)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !182, file: !130, line: 276, baseType: !129, size: 32, offset: 704)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "synced", scope: !182, file: !130, line: 277, baseType: !7, size: 1, offset: 736, flags: DIFlagBitField, extraData: i64 736)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "prepared", scope: !182, file: !130, line: 278, baseType: !7, size: 1, offset: 737, flags: DIFlagBitField, extraData: i64 736)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "copied_timestamp", scope: !182, file: !130, line: 279, baseType: !7, size: 1, offset: 738, flags: DIFlagBitField, extraData: i64 736)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "need_cache_sync_on_prepare", scope: !182, file: !130, line: 280, baseType: !7, size: 1, offset: 739, flags: DIFlagBitField, extraData: i64 736)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "need_cache_sync_on_finish", scope: !182, file: !130, line: 281, baseType: !7, size: 1, offset: 740, flags: DIFlagBitField, extraData: i64 736)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !182, file: !130, line: 283, baseType: !4535, size: 3072, offset: 768)
!4535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4204, size: 3072, elements: !1318)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "queued_entry", scope: !182, file: !130, line: 284, baseType: !203, size: 128, offset: 3840)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "done_entry", scope: !182, file: !130, line: 285, baseType: !203, size: 128, offset: 3968)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !207)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4542)
!4542 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !243)
!4543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4542, size: 64)
!4544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4545, size: 64)
!4545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4539)
!4546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!4547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1205, size: 64)
!4548 = !{!4549, !4601, !4606, !4611, !4613, !4618, !4623, !4628, !4633, !0, !4635, !4644}
!4549 = !DIGlobalVariableExpression(var: !4550, expr: !DIExpression())
!4550 = distinct !DIGlobalVariable(name: "__param_debug", scope: !2, file: !3, line: 35, type: !4551, isLocal: true, isDefinition: true, align: 64)
!4551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4552)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !4553, line: 69, size: 320, elements: !4554)
!4553 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!4554 = !{!4555, !4556, !4557, !4573, !4575, !4579, !4580}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4552, file: !4553, line: 70, baseType: !199, size: 64)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !4552, file: !4553, line: 71, baseType: !618, size: 64, offset: 64)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4552, file: !4553, line: 72, baseType: !4558, size: 64, offset: 128)
!4558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4559, size: 64)
!4559 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4560)
!4560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !4553, line: 47, size: 256, elements: !4561)
!4561 = !{!4562, !4563, !4568, !4572}
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4560, file: !4553, line: 49, baseType: !7, size: 32)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !4560, file: !4553, line: 51, baseType: !4564, size: 64, offset: 64)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DISubroutineType(types: !4566)
!4566 = !{!243, !199, !4567}
!4567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4551, size: 64)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4560, file: !4553, line: 53, baseType: !4569, size: 64, offset: 128)
!4569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4570, size: 64)
!4570 = !DISubroutineType(types: !4571)
!4571 = !{!243, !259, !4567}
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4560, file: !4553, line: 55, baseType: !453, size: 64, offset: 192)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !4552, file: !4553, line: 73, baseType: !4574, size: 16, offset: 192)
!4574 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !848)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4552, file: !4553, line: 74, baseType: !4576, size: 8, offset: 208)
!4576 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !401, line: 16, baseType: !4577)
!4577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !403, line: 20, baseType: !4578)
!4578 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4552, file: !4553, line: 75, baseType: !1340, size: 8, offset: 216)
!4580 = !DIDerivedType(tag: DW_TAG_member, scope: !4552, file: !4553, line: 76, baseType: !4581, size: 64, offset: 256)
!4581 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4552, file: !4553, line: 76, size: 64, elements: !4582)
!4582 = !{!4583, !4584, !4591}
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !4581, file: !4553, line: 77, baseType: !180, size: 64)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4581, file: !4553, line: 78, baseType: !4585, size: 64)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 64)
!4586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4587)
!4587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !4553, line: 86, size: 128, elements: !4588)
!4588 = !{!4589, !4590}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !4587, file: !4553, line: 87, baseType: !7, size: 32)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4587, file: !4553, line: 88, baseType: !259, size: 64, offset: 64)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !4581, file: !4553, line: 79, baseType: !4592, size: 64)
!4592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4593, size: 64)
!4593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4594)
!4594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !4553, line: 92, size: 256, elements: !4595)
!4595 = !{!4596, !4597, !4598, !4599, !4600}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4594, file: !4553, line: 94, baseType: !7, size: 32)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !4594, file: !4553, line: 95, baseType: !7, size: 32, offset: 32)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4594, file: !4553, line: 96, baseType: !2678, size: 64, offset: 64)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4594, file: !4553, line: 97, baseType: !4558, size: 64, offset: 128)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !4594, file: !4553, line: 98, baseType: !180, size: 64, offset: 192)
!4601 = !DIGlobalVariableExpression(var: !4602, expr: !DIExpression())
!4602 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debugtype262", scope: !2, file: !3, line: 35, type: !4603, isLocal: true, isDefinition: true, align: 8)
!4603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 288, elements: !4604)
!4604 = !{!4605}
!4605 = !DISubrange(count: 36)
!4606 = !DIGlobalVariableExpression(var: !4607, expr: !DIExpression())
!4607 = distinct !DIGlobalVariable(name: "__key", scope: !4608, file: !3, line: 2337, type: !633, isLocal: true, isDefinition: true)
!4608 = distinct !DISubprogram(name: "vb2_core_queue_init", scope: !3, file: !3, line: 2317, type: !4609, scopeLine: 2318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!4609 = !DISubroutineType(types: !4610)
!4610 = !{!243, !185}
!4611 = !DIGlobalVariableExpression(var: !4612, expr: !DIExpression())
!4612 = distinct !DIGlobalVariable(name: "__key", scope: !4608, file: !3, line: 2338, type: !633, isLocal: true, isDefinition: true)
!4613 = !DIGlobalVariableExpression(var: !4614, expr: !DIExpression())
!4614 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description310", scope: !2, file: !3, line: 2960, type: !4615, isLocal: true, isDefinition: true, align: 8)
!4615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 456, elements: !4616)
!4616 = !{!4617}
!4617 = !DISubrange(count: 57)
!4618 = !DIGlobalVariableExpression(var: !4619, expr: !DIExpression())
!4619 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author311", scope: !2, file: !3, line: 2961, type: !4620, isLocal: true, isDefinition: true, align: 8)
!4620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 592, elements: !4621)
!4621 = !{!4622}
!4622 = !DISubrange(count: 74)
!4623 = !DIGlobalVariableExpression(var: !4624, expr: !DIExpression())
!4624 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file312", scope: !2, file: !3, line: 2962, type: !4625, isLocal: true, isDefinition: true, align: 8)
!4625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 560, elements: !4626)
!4626 = !{!4627}
!4627 = !DISubrange(count: 70)
!4628 = !DIGlobalVariableExpression(var: !4629, expr: !DIExpression())
!4629 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license313", scope: !2, file: !3, line: 2962, type: !4630, isLocal: true, isDefinition: true, align: 8)
!4630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 232, elements: !4631)
!4631 = !{!4632}
!4632 = !DISubrange(count: 29)
!4633 = !DIGlobalVariableExpression(var: !4634, expr: !DIExpression())
!4634 = distinct !DIGlobalVariable(name: "debug", scope: !2, file: !3, line: 34, type: !243, isLocal: true, isDefinition: true)
!4635 = !DIGlobalVariableExpression(var: !4636, expr: !DIExpression())
!4636 = distinct !DIGlobalVariable(name: "state_names", scope: !4637, file: !3, line: 196, type: !4640, isLocal: true, isDefinition: true)
!4637 = distinct !DISubprogram(name: "vb2_state_name", scope: !3, file: !3, line: 194, type: !4638, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!4638 = !DISubroutineType(types: !4639)
!4639 = !{!199, !129}
!4640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4641, size: 448, elements: !4642)
!4641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !199)
!4642 = !{!4643}
!4643 = !DISubrange(count: 7)
!4644 = !DIGlobalVariableExpression(var: !4645, expr: !DIExpression())
!4645 = distinct !DIGlobalVariable(name: "vb2_core_req_ops", scope: !2, file: !3, line: 1450, type: !4508, isLocal: true, isDefinition: true)
!4646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !200, size: 184, elements: !4647)
!4647 = !{!4648}
!4648 = !DISubrange(count: 23)
!4649 = !{!"rsp"}
!4650 = !{i32 7, !"Dwarf Version", i32 4}
!4651 = !{i32 2, !"Debug Info Version", i32 3}
!4652 = !{i32 1, !"wchar_size", i32 2}
!4653 = !{i32 1, !"Code Model", i32 2}
!4654 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4655 = distinct !DISubprogram(name: "vb2_buffer_in_use", scope: !3, file: !3, line: 611, type: !4656, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{!475, !185, !181}
!4658 = !DILocalVariable(name: "q", arg: 1, scope: !4655, file: !3, line: 611, type: !185)
!4659 = !DILocation(line: 611, column: 42, scope: !4655)
!4660 = !DILocalVariable(name: "vb", arg: 2, scope: !4655, file: !3, line: 611, type: !181)
!4661 = !DILocation(line: 611, column: 64, scope: !4655)
!4662 = !DILocalVariable(name: "plane", scope: !4655, file: !3, line: 613, type: !7)
!4663 = !DILocation(line: 613, column: 15, scope: !4655)
!4664 = !DILocation(line: 614, column: 13, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 614, column: 2)
!4666 = !DILocation(line: 614, column: 7, scope: !4665)
!4667 = !DILocation(line: 614, column: 18, scope: !4668)
!4668 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 614, column: 2)
!4669 = !DILocation(line: 614, column: 26, scope: !4668)
!4670 = !DILocation(line: 614, column: 30, scope: !4668)
!4671 = !DILocation(line: 614, column: 24, scope: !4668)
!4672 = !DILocation(line: 614, column: 2, scope: !4665)
!4673 = !DILocalVariable(name: "mem_priv", scope: !4674, file: !3, line: 615, type: !180)
!4674 = distinct !DILexicalBlock(scope: !4668, file: !3, line: 614, column: 51)
!4675 = !DILocation(line: 615, column: 9, scope: !4674)
!4676 = !DILocation(line: 615, column: 20, scope: !4674)
!4677 = !DILocation(line: 615, column: 24, scope: !4674)
!4678 = !DILocation(line: 615, column: 31, scope: !4674)
!4679 = !DILocation(line: 615, column: 38, scope: !4674)
!4680 = !DILocation(line: 622, column: 7, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 622, column: 7)
!4682 = !DILocation(line: 622, column: 16, scope: !4681)
!4683 = !DILocation(line: 622, column: 19, scope: !4681)
!4684 = !DILocation(line: 622, column: 55, scope: !4681)
!4685 = !DILocation(line: 622, column: 7, scope: !4674)
!4686 = !DILocation(line: 623, column: 4, scope: !4681)
!4687 = !DILocation(line: 624, column: 2, scope: !4674)
!4688 = !DILocation(line: 614, column: 42, scope: !4668)
!4689 = !DILocation(line: 614, column: 2, scope: !4668)
!4690 = distinct !{!4690, !4672, !4691}
!4691 = !DILocation(line: 624, column: 2, scope: !4665)
!4692 = !DILocation(line: 625, column: 2, scope: !4655)
!4693 = !DILocation(line: 626, column: 1, scope: !4655)
!4694 = distinct !DISubprogram(name: "vb2_core_querybuf", scope: !3, file: !3, line: 643, type: !4695, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!4695 = !DISubroutineType(types: !4696)
!4696 = !{null, !185, !7, !180}
!4697 = !DILocalVariable(name: "q", arg: 1, scope: !4694, file: !3, line: 643, type: !185)
!4698 = !DILocation(line: 643, column: 42, scope: !4694)
!4699 = !DILocalVariable(name: "index", arg: 2, scope: !4694, file: !3, line: 643, type: !7)
!4700 = !DILocation(line: 643, column: 58, scope: !4694)
!4701 = !DILocalVariable(name: "pb", arg: 3, scope: !4694, file: !3, line: 643, type: !180)
!4702 = !DILocation(line: 643, column: 71, scope: !4694)
!4703 = !DILocation(line: 645, column: 2, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 645, column: 2)
!4705 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 645, column: 2)
!4706 = !DILocation(line: 645, column: 2, scope: !4705)
!4707 = !DILocation(line: 646, column: 1, scope: !4694)
!4708 = distinct !DISubprogram(name: "vb2_verify_memory_type", scope: !3, file: !3, line: 689, type: !4709, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!4709 = !DISubroutineType(types: !4710)
!4710 = !{!243, !185, !151, !7}
!4711 = !DILocalVariable(name: "q", arg: 1, scope: !4708, file: !3, line: 689, type: !185)
!4712 = !DILocation(line: 689, column: 46, scope: !4708)
!4713 = !DILocalVariable(name: "memory", arg: 2, scope: !4708, file: !3, line: 690, type: !151)
!4714 = !DILocation(line: 690, column: 19, scope: !4708)
!4715 = !DILocalVariable(name: "type", arg: 3, scope: !4708, file: !3, line: 690, type: !7)
!4716 = !DILocation(line: 690, column: 40, scope: !4708)
!4717 = !DILocation(line: 692, column: 6, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 692, column: 6)
!4719 = !DILocation(line: 692, column: 13, scope: !4718)
!4720 = !DILocation(line: 692, column: 32, scope: !4718)
!4721 = !DILocation(line: 692, column: 35, scope: !4718)
!4722 = !DILocation(line: 692, column: 42, scope: !4718)
!4723 = !DILocation(line: 692, column: 64, scope: !4718)
!4724 = !DILocation(line: 693, column: 6, scope: !4718)
!4725 = !DILocation(line: 693, column: 13, scope: !4718)
!4726 = !DILocation(line: 692, column: 6, scope: !4708)
!4727 = !DILocation(line: 694, column: 3, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4718, file: !3, line: 693, column: 35)
!4729 = !DILocation(line: 694, column: 3, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 694, column: 3)
!4731 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 694, column: 3)
!4732 = !DILocation(line: 694, column: 3, scope: !4731)
!4733 = !DILocation(line: 695, column: 3, scope: !4728)
!4734 = !DILocation(line: 698, column: 6, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 698, column: 6)
!4736 = !DILocation(line: 698, column: 14, scope: !4735)
!4737 = !DILocation(line: 698, column: 17, scope: !4735)
!4738 = !DILocation(line: 698, column: 11, scope: !4735)
!4739 = !DILocation(line: 698, column: 6, scope: !4708)
!4740 = !DILocation(line: 699, column: 3, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4735, file: !3, line: 698, column: 23)
!4742 = !DILocation(line: 699, column: 3, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 699, column: 3)
!4744 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 699, column: 3)
!4745 = !DILocation(line: 699, column: 3, scope: !4744)
!4746 = !DILocation(line: 700, column: 3, scope: !4741)
!4747 = !DILocation(line: 707, column: 6, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 707, column: 6)
!4749 = !DILocation(line: 707, column: 13, scope: !4748)
!4750 = !DILocation(line: 707, column: 32, scope: !4748)
!4751 = !DILocation(line: 707, column: 53, scope: !4748)
!4752 = !DILocation(line: 707, column: 35, scope: !4748)
!4753 = !DILocation(line: 707, column: 6, scope: !4708)
!4754 = !DILocation(line: 708, column: 3, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 707, column: 57)
!4756 = !DILocation(line: 708, column: 3, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 708, column: 3)
!4758 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 708, column: 3)
!4759 = !DILocation(line: 708, column: 3, scope: !4758)
!4760 = !DILocation(line: 709, column: 3, scope: !4755)
!4761 = !DILocation(line: 712, column: 6, scope: !4762)
!4762 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 712, column: 6)
!4763 = !DILocation(line: 712, column: 13, scope: !4762)
!4764 = !DILocation(line: 712, column: 35, scope: !4762)
!4765 = !DILocation(line: 712, column: 59, scope: !4762)
!4766 = !DILocation(line: 712, column: 38, scope: !4762)
!4767 = !DILocation(line: 712, column: 6, scope: !4708)
!4768 = !DILocation(line: 713, column: 3, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 712, column: 63)
!4770 = !DILocation(line: 713, column: 3, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 713, column: 3)
!4772 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 713, column: 3)
!4773 = !DILocation(line: 713, column: 3, scope: !4772)
!4774 = !DILocation(line: 714, column: 3, scope: !4769)
!4775 = !DILocation(line: 717, column: 6, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 717, column: 6)
!4777 = !DILocation(line: 717, column: 13, scope: !4776)
!4778 = !DILocation(line: 717, column: 34, scope: !4776)
!4779 = !DILocation(line: 717, column: 57, scope: !4776)
!4780 = !DILocation(line: 717, column: 37, scope: !4776)
!4781 = !DILocation(line: 717, column: 6, scope: !4708)
!4782 = !DILocation(line: 718, column: 3, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4776, file: !3, line: 717, column: 61)
!4784 = !DILocation(line: 718, column: 3, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4786, file: !3, line: 718, column: 3)
!4786 = distinct !DILexicalBlock(scope: !4783, file: !3, line: 718, column: 3)
!4787 = !DILocation(line: 718, column: 3, scope: !4786)
!4788 = !DILocation(line: 719, column: 3, scope: !4783)
!4789 = !DILocation(line: 727, column: 27, scope: !4790)
!4790 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 727, column: 6)
!4791 = !DILocation(line: 727, column: 6, scope: !4790)
!4792 = !DILocation(line: 727, column: 6, scope: !4708)
!4793 = !DILocation(line: 728, column: 3, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4790, file: !3, line: 727, column: 31)
!4795 = !DILocation(line: 728, column: 3, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !3, line: 728, column: 3)
!4797 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 728, column: 3)
!4798 = !DILocation(line: 728, column: 3, scope: !4797)
!4799 = !DILocation(line: 729, column: 3, scope: !4794)
!4800 = !DILocation(line: 731, column: 2, scope: !4708)
!4801 = !DILocation(line: 732, column: 1, scope: !4708)
!4802 = distinct !DISubprogram(name: "__verify_mmap_ops", scope: !3, file: !3, line: 666, type: !4609, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!4803 = !DILocalVariable(name: "q", arg: 1, scope: !4802, file: !3, line: 666, type: !185)
!4804 = !DILocation(line: 666, column: 48, scope: !4802)
!4805 = !DILocation(line: 668, column: 8, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4802, file: !3, line: 668, column: 6)
!4807 = !DILocation(line: 668, column: 11, scope: !4806)
!4808 = !DILocation(line: 668, column: 20, scope: !4806)
!4809 = !DILocation(line: 668, column: 32, scope: !4806)
!4810 = !DILocation(line: 668, column: 36, scope: !4806)
!4811 = !DILocation(line: 668, column: 39, scope: !4806)
!4812 = !DILocation(line: 668, column: 48, scope: !4806)
!4813 = !DILocation(line: 668, column: 54, scope: !4806)
!4814 = !DILocation(line: 669, column: 7, scope: !4806)
!4815 = !DILocation(line: 669, column: 10, scope: !4806)
!4816 = !DILocation(line: 669, column: 19, scope: !4806)
!4817 = !DILocation(line: 669, column: 23, scope: !4806)
!4818 = !DILocation(line: 669, column: 27, scope: !4806)
!4819 = !DILocation(line: 669, column: 30, scope: !4806)
!4820 = !DILocation(line: 669, column: 39, scope: !4806)
!4821 = !DILocation(line: 668, column: 6, scope: !4802)
!4822 = !DILocation(line: 670, column: 3, scope: !4806)
!4823 = !DILocation(line: 672, column: 2, scope: !4802)
!4824 = !DILocation(line: 673, column: 1, scope: !4802)
!4825 = distinct !DISubprogram(name: "__verify_userptr_ops", scope: !3, file: !3, line: 653, type: !4609, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!4826 = !DILocalVariable(name: "q", arg: 1, scope: !4825, file: !3, line: 653, type: !185)
!4827 = !DILocation(line: 653, column: 51, scope: !4825)
!4828 = !DILocation(line: 655, column: 8, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 655, column: 6)
!4830 = !DILocation(line: 655, column: 11, scope: !4829)
!4831 = !DILocation(line: 655, column: 20, scope: !4829)
!4832 = !DILocation(line: 655, column: 35, scope: !4829)
!4833 = !DILocation(line: 655, column: 39, scope: !4829)
!4834 = !DILocation(line: 655, column: 42, scope: !4829)
!4835 = !DILocation(line: 655, column: 51, scope: !4829)
!4836 = !DILocation(line: 655, column: 63, scope: !4829)
!4837 = !DILocation(line: 656, column: 7, scope: !4829)
!4838 = !DILocation(line: 656, column: 10, scope: !4829)
!4839 = !DILocation(line: 656, column: 19, scope: !4829)
!4840 = !DILocation(line: 655, column: 6, scope: !4825)
!4841 = !DILocation(line: 657, column: 3, scope: !4829)
!4842 = !DILocation(line: 659, column: 2, scope: !4825)
!4843 = !DILocation(line: 660, column: 1, scope: !4825)
!4844 = distinct !DISubprogram(name: "__verify_dmabuf_ops", scope: !3, file: !3, line: 679, type: !4609, scopeLine: 680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!4845 = !DILocalVariable(name: "q", arg: 1, scope: !4844, file: !3, line: 679, type: !185)
!4846 = !DILocation(line: 679, column: 50, scope: !4844)
!4847 = !DILocation(line: 681, column: 8, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 681, column: 6)
!4849 = !DILocation(line: 681, column: 11, scope: !4848)
!4850 = !DILocation(line: 681, column: 20, scope: !4848)
!4851 = !DILocation(line: 681, column: 34, scope: !4848)
!4852 = !DILocation(line: 681, column: 38, scope: !4848)
!4853 = !DILocation(line: 681, column: 41, scope: !4848)
!4854 = !DILocation(line: 681, column: 50, scope: !4848)
!4855 = !DILocation(line: 681, column: 64, scope: !4848)
!4856 = !DILocation(line: 682, column: 7, scope: !4848)
!4857 = !DILocation(line: 682, column: 10, scope: !4848)
!4858 = !DILocation(line: 682, column: 19, scope: !4848)
!4859 = !DILocation(line: 682, column: 34, scope: !4848)
!4860 = !DILocation(line: 682, column: 38, scope: !4848)
!4861 = !DILocation(line: 682, column: 41, scope: !4848)
!4862 = !DILocation(line: 682, column: 50, scope: !4848)
!4863 = !DILocation(line: 682, column: 61, scope: !4848)
!4864 = !DILocation(line: 683, column: 7, scope: !4848)
!4865 = !DILocation(line: 683, column: 10, scope: !4848)
!4866 = !DILocation(line: 683, column: 19, scope: !4848)
!4867 = !DILocation(line: 681, column: 6, scope: !4844)
!4868 = !DILocation(line: 684, column: 3, scope: !4848)
!4869 = !DILocation(line: 686, column: 2, scope: !4844)
!4870 = !DILocation(line: 687, column: 1, scope: !4844)
!4871 = distinct !DISubprogram(name: "vb2_fileio_is_active", scope: !130, file: !130, line: 1113, type: !4872, scopeLine: 1114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!4872 = !DISubroutineType(types: !4873)
!4873 = !{!475, !185}
!4874 = !DILocalVariable(name: "q", arg: 1, scope: !4871, file: !130, line: 1113, type: !185)
!4875 = !DILocation(line: 1113, column: 59, scope: !4871)
!4876 = !DILocation(line: 1115, column: 9, scope: !4871)
!4877 = !DILocation(line: 1115, column: 12, scope: !4871)
!4878 = !DILocation(line: 1115, column: 2, scope: !4871)
!4879 = distinct !DISubprogram(name: "vb2_core_reqbufs", scope: !3, file: !3, line: 735, type: !4880, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!4880 = !DISubroutineType(types: !4881)
!4881 = !{!243, !185, !151, !2678}
!4882 = !DILocalVariable(name: "q", arg: 1, scope: !4879, file: !3, line: 735, type: !185)
!4883 = !DILocation(line: 735, column: 40, scope: !4879)
!4884 = !DILocalVariable(name: "memory", arg: 2, scope: !4879, file: !3, line: 735, type: !151)
!4885 = !DILocation(line: 735, column: 59, scope: !4879)
!4886 = !DILocalVariable(name: "count", arg: 3, scope: !4879, file: !3, line: 736, type: !2678)
!4887 = !DILocation(line: 736, column: 22, scope: !4879)
!4888 = !DILocalVariable(name: "num_buffers", scope: !4879, file: !3, line: 738, type: !7)
!4889 = !DILocation(line: 738, column: 15, scope: !4879)
!4890 = !DILocalVariable(name: "allocated_buffers", scope: !4879, file: !3, line: 738, type: !7)
!4891 = !DILocation(line: 738, column: 28, scope: !4879)
!4892 = !DILocalVariable(name: "num_planes", scope: !4879, file: !3, line: 738, type: !7)
!4893 = !DILocation(line: 738, column: 47, scope: !4879)
!4894 = !DILocalVariable(name: "plane_sizes", scope: !4879, file: !3, line: 739, type: !4895)
!4895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 256, elements: !1318)
!4896 = !DILocation(line: 739, column: 11, scope: !4879)
!4897 = !DILocalVariable(name: "i", scope: !4879, file: !3, line: 740, type: !7)
!4898 = !DILocation(line: 740, column: 15, scope: !4879)
!4899 = !DILocalVariable(name: "ret", scope: !4879, file: !3, line: 741, type: !243)
!4900 = !DILocation(line: 741, column: 6, scope: !4879)
!4901 = !DILocation(line: 743, column: 6, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 743, column: 6)
!4903 = !DILocation(line: 743, column: 9, scope: !4902)
!4904 = !DILocation(line: 743, column: 6, scope: !4879)
!4905 = !DILocation(line: 744, column: 3, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 743, column: 20)
!4907 = !DILocation(line: 744, column: 3, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 744, column: 3)
!4909 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 744, column: 3)
!4910 = !DILocation(line: 744, column: 3, scope: !4909)
!4911 = !DILocation(line: 745, column: 3, scope: !4906)
!4912 = !DILocation(line: 748, column: 6, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 748, column: 6)
!4914 = !DILocation(line: 748, column: 9, scope: !4913)
!4915 = !DILocation(line: 748, column: 26, scope: !4913)
!4916 = !DILocation(line: 748, column: 30, scope: !4913)
!4917 = !DILocation(line: 748, column: 29, scope: !4913)
!4918 = !DILocation(line: 748, column: 6, scope: !4879)
!4919 = !DILocation(line: 749, column: 3, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4913, file: !3, line: 748, column: 37)
!4921 = !DILocation(line: 749, column: 3, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4923, file: !3, line: 749, column: 3)
!4923 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 749, column: 3)
!4924 = !DILocation(line: 749, column: 3, scope: !4923)
!4925 = !DILocation(line: 750, column: 3, scope: !4920)
!4926 = !DILocation(line: 753, column: 7, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 753, column: 6)
!4928 = !DILocation(line: 753, column: 6, scope: !4927)
!4929 = !DILocation(line: 753, column: 13, scope: !4927)
!4930 = !DILocation(line: 753, column: 18, scope: !4927)
!4931 = !DILocation(line: 753, column: 21, scope: !4927)
!4932 = !DILocation(line: 753, column: 24, scope: !4927)
!4933 = !DILocation(line: 753, column: 36, scope: !4927)
!4934 = !DILocation(line: 753, column: 41, scope: !4927)
!4935 = !DILocation(line: 754, column: 7, scope: !4927)
!4936 = !DILocation(line: 754, column: 10, scope: !4927)
!4937 = !DILocation(line: 754, column: 17, scope: !4927)
!4938 = !DILocation(line: 754, column: 39, scope: !4927)
!4939 = !DILocation(line: 754, column: 42, scope: !4927)
!4940 = !DILocation(line: 754, column: 45, scope: !4927)
!4941 = !DILocation(line: 754, column: 55, scope: !4927)
!4942 = !DILocation(line: 754, column: 52, scope: !4927)
!4943 = !DILocation(line: 753, column: 6, scope: !4879)
!4944 = !DILocation(line: 759, column: 15, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 754, column: 64)
!4946 = !DILocation(line: 759, column: 18, scope: !4945)
!4947 = !DILocation(line: 759, column: 3, scope: !4945)
!4948 = !DILocation(line: 760, column: 7, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 760, column: 7)
!4950 = !DILocation(line: 760, column: 13, scope: !4949)
!4951 = !DILocation(line: 760, column: 16, scope: !4949)
!4952 = !DILocation(line: 760, column: 19, scope: !4949)
!4953 = !DILocation(line: 760, column: 26, scope: !4949)
!4954 = !DILocation(line: 760, column: 45, scope: !4949)
!4955 = !DILocation(line: 761, column: 24, scope: !4949)
!4956 = !DILocation(line: 761, column: 7, scope: !4949)
!4957 = !DILocation(line: 760, column: 7, scope: !4945)
!4958 = !DILocation(line: 762, column: 4, scope: !4949)
!4959 = !DILocation(line: 762, column: 4, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 762, column: 4)
!4961 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 762, column: 4)
!4962 = !DILocation(line: 762, column: 4, scope: !4961)
!4963 = !DILocation(line: 769, column: 22, scope: !4945)
!4964 = !DILocation(line: 769, column: 3, scope: !4945)
!4965 = !DILocation(line: 770, column: 26, scope: !4945)
!4966 = !DILocation(line: 770, column: 29, scope: !4945)
!4967 = !DILocation(line: 770, column: 32, scope: !4945)
!4968 = !DILocation(line: 770, column: 9, scope: !4945)
!4969 = !DILocation(line: 770, column: 7, scope: !4945)
!4970 = !DILocation(line: 771, column: 17, scope: !4945)
!4971 = !DILocation(line: 771, column: 20, scope: !4945)
!4972 = !DILocation(line: 771, column: 3, scope: !4945)
!4973 = !DILocation(line: 772, column: 7, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 772, column: 7)
!4975 = !DILocation(line: 772, column: 7, scope: !4945)
!4976 = !DILocation(line: 773, column: 11, scope: !4974)
!4977 = !DILocation(line: 773, column: 4, scope: !4974)
!4978 = !DILocation(line: 779, column: 8, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 779, column: 7)
!4980 = !DILocation(line: 779, column: 7, scope: !4979)
!4981 = !DILocation(line: 779, column: 14, scope: !4979)
!4982 = !DILocation(line: 779, column: 7, scope: !4945)
!4983 = !DILocation(line: 780, column: 4, scope: !4979)
!4984 = !DILocation(line: 781, column: 2, scope: !4945)
!4985 = !DILocalVariable(name: "__ret_warn_on", scope: !4986, file: !3, line: 786, type: !243)
!4986 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 786, column: 2)
!4987 = !DILocation(line: 786, column: 2, scope: !4986)
!4988 = !DILocation(line: 786, column: 2, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 786, column: 2)
!4990 = !DILocation(line: 786, column: 2, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4989, file: !3, line: 786, column: 2)
!4992 = !DILocation(line: 786, column: 2, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 786, column: 2)
!4994 = !DILocation(line: 786, column: 2, scope: !4995)
!4995 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 786, column: 2)
!4996 = !{i32 -2140619123, i32 -2140619094, i32 -2140619048, i32 -2140618990, i32 -2140618936, i32 -2140618882, i32 -2140618827, i32 -2140618796}
!4997 = !DILocation(line: 786, column: 2, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 786, column: 2)
!4999 = !{i32 -2140618367, i32 -2140618360, i32 -2140618308, i32 -2140618277, i32 -2140618247}
!5000 = !DILocation(line: 786, column: 2, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4991, file: !3, line: 786, column: 2)
!5002 = !DILocalVariable(name: "__UNIQUE_ID___x266", scope: !5003, file: !3, line: 787, type: !7)
!5003 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 787, column: 16)
!5004 = !DILocation(line: 787, column: 16, scope: !5003)
!5005 = !DILocalVariable(name: "__UNIQUE_ID___y267", scope: !5003, file: !3, line: 787, type: !7)
!5006 = !DILocation(line: 787, column: 14, scope: !4879)
!5007 = !DILocalVariable(name: "__UNIQUE_ID___x268", scope: !5008, file: !3, line: 788, type: !7)
!5008 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 788, column: 16)
!5009 = !DILocation(line: 788, column: 16, scope: !5008)
!5010 = !DILocalVariable(name: "__UNIQUE_ID___y269", scope: !5008, file: !3, line: 788, type: !7)
!5011 = !DILocation(line: 788, column: 14, scope: !4879)
!5012 = !DILocation(line: 789, column: 9, scope: !4879)
!5013 = !DILocation(line: 789, column: 12, scope: !4879)
!5014 = !DILocation(line: 789, column: 2, scope: !4879)
!5015 = !DILocation(line: 790, column: 14, scope: !4879)
!5016 = !DILocation(line: 790, column: 2, scope: !4879)
!5017 = !DILocation(line: 790, column: 5, scope: !4879)
!5018 = !DILocation(line: 790, column: 12, scope: !4879)
!5019 = !DILocation(line: 796, column: 8, scope: !4879)
!5020 = !DILocation(line: 796, column: 6, scope: !4879)
!5021 = !DILocation(line: 798, column: 6, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 798, column: 6)
!5023 = !DILocation(line: 798, column: 6, scope: !4879)
!5024 = !DILocation(line: 799, column: 10, scope: !5022)
!5025 = !DILocation(line: 799, column: 3, scope: !5022)
!5026 = !DILocalVariable(name: "__ret_warn_on", scope: !5027, file: !3, line: 802, type: !243)
!5027 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 802, column: 6)
!5028 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 802, column: 6)
!5029 = !DILocation(line: 802, column: 6, scope: !5027)
!5030 = !DILocation(line: 802, column: 6, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5027, file: !3, line: 802, column: 6)
!5032 = !DILocation(line: 802, column: 6, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5031, file: !3, line: 802, column: 6)
!5034 = !DILocation(line: 802, column: 6, scope: !5035)
!5035 = distinct !DILexicalBlock(scope: !5033, file: !3, line: 802, column: 6)
!5036 = !DILocation(line: 802, column: 6, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5033, file: !3, line: 802, column: 6)
!5038 = !{i32 -2140613583, i32 -2140613554, i32 -2140613508, i32 -2140613450, i32 -2140613396, i32 -2140613342, i32 -2140613287, i32 -2140613256}
!5039 = !DILocation(line: 802, column: 6, scope: !5040)
!5040 = distinct !DILexicalBlock(scope: !5033, file: !3, line: 802, column: 6)
!5041 = !{i32 -2140612827, i32 -2140612820, i32 -2140612768, i32 -2140612737, i32 -2140612707}
!5042 = !DILocation(line: 802, column: 6, scope: !5043)
!5043 = distinct !DILexicalBlock(scope: !5033, file: !3, line: 802, column: 6)
!5044 = !DILocation(line: 802, column: 6, scope: !5028)
!5045 = !DILocation(line: 802, column: 6, scope: !4879)
!5046 = !DILocation(line: 803, column: 3, scope: !5028)
!5047 = !DILocation(line: 805, column: 9, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 805, column: 2)
!5049 = !DILocation(line: 805, column: 7, scope: !5048)
!5050 = !DILocation(line: 805, column: 14, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 805, column: 2)
!5052 = !DILocation(line: 805, column: 18, scope: !5051)
!5053 = !DILocation(line: 805, column: 16, scope: !5051)
!5054 = !DILocation(line: 805, column: 2, scope: !5048)
!5055 = !DILocalVariable(name: "__ret_warn_on", scope: !5056, file: !3, line: 806, type: !243)
!5056 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 806, column: 7)
!5057 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 806, column: 7)
!5058 = !DILocation(line: 806, column: 7, scope: !5056)
!5059 = !DILocation(line: 806, column: 7, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 806, column: 7)
!5061 = !DILocation(line: 806, column: 7, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5060, file: !3, line: 806, column: 7)
!5063 = !DILocation(line: 806, column: 7, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 806, column: 7)
!5065 = !DILocation(line: 806, column: 7, scope: !5066)
!5066 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 806, column: 7)
!5067 = !{i32 -2140612117, i32 -2140612088, i32 -2140612042, i32 -2140611984, i32 -2140611930, i32 -2140611876, i32 -2140611821, i32 -2140611790}
!5068 = !DILocation(line: 806, column: 7, scope: !5069)
!5069 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 806, column: 7)
!5070 = !{i32 -2140611361, i32 -2140611354, i32 -2140611302, i32 -2140611271, i32 -2140611241}
!5071 = !DILocation(line: 806, column: 7, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 806, column: 7)
!5073 = !DILocation(line: 806, column: 7, scope: !5057)
!5074 = !DILocation(line: 806, column: 7, scope: !5051)
!5075 = !DILocation(line: 807, column: 4, scope: !5057)
!5076 = !DILocation(line: 805, column: 31, scope: !5051)
!5077 = !DILocation(line: 805, column: 2, scope: !5051)
!5078 = distinct !{!5078, !5054, !5079}
!5079 = !DILocation(line: 807, column: 12, scope: !5048)
!5080 = !DILocation(line: 811, column: 21, scope: !4879)
!5081 = !DILocation(line: 811, column: 24, scope: !4879)
!5082 = !DILocation(line: 811, column: 32, scope: !4879)
!5083 = !DILocation(line: 811, column: 45, scope: !4879)
!5084 = !DILocation(line: 811, column: 57, scope: !4879)
!5085 = !DILocation(line: 811, column: 3, scope: !4879)
!5086 = !DILocation(line: 810, column: 20, scope: !4879)
!5087 = !DILocation(line: 812, column: 6, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 812, column: 6)
!5089 = !DILocation(line: 812, column: 24, scope: !5088)
!5090 = !DILocation(line: 812, column: 6, scope: !4879)
!5091 = !DILocation(line: 813, column: 3, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 812, column: 30)
!5093 = !DILocation(line: 813, column: 3, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 813, column: 3)
!5095 = distinct !DILexicalBlock(scope: !5092, file: !3, line: 813, column: 3)
!5096 = !DILocation(line: 813, column: 3, scope: !5095)
!5097 = !DILocation(line: 814, column: 3, scope: !5092)
!5098 = !DILocation(line: 821, column: 6, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 821, column: 6)
!5100 = !DILocation(line: 821, column: 26, scope: !5099)
!5101 = !DILocation(line: 821, column: 29, scope: !5099)
!5102 = !DILocation(line: 821, column: 24, scope: !5099)
!5103 = !DILocation(line: 821, column: 6, scope: !4879)
!5104 = !DILocation(line: 822, column: 7, scope: !5099)
!5105 = !DILocation(line: 822, column: 3, scope: !5099)
!5106 = !DILocation(line: 827, column: 7, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 827, column: 6)
!5108 = !DILocation(line: 827, column: 11, scope: !5107)
!5109 = !DILocation(line: 827, column: 14, scope: !5107)
!5110 = !DILocation(line: 827, column: 34, scope: !5107)
!5111 = !DILocation(line: 827, column: 32, scope: !5107)
!5112 = !DILocation(line: 827, column: 6, scope: !4879)
!5113 = !DILocation(line: 828, column: 17, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 827, column: 47)
!5115 = !DILocation(line: 828, column: 15, scope: !5114)
!5116 = !DILocation(line: 835, column: 14, scope: !5114)
!5117 = !DILocation(line: 837, column: 9, scope: !5114)
!5118 = !DILocation(line: 837, column: 7, scope: !5114)
!5119 = !DILocation(line: 840, column: 8, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 840, column: 7)
!5121 = !DILocation(line: 840, column: 12, scope: !5120)
!5122 = !DILocation(line: 840, column: 15, scope: !5120)
!5123 = !DILocation(line: 840, column: 35, scope: !5120)
!5124 = !DILocation(line: 840, column: 33, scope: !5120)
!5125 = !DILocation(line: 840, column: 7, scope: !5114)
!5126 = !DILocation(line: 841, column: 8, scope: !5120)
!5127 = !DILocation(line: 841, column: 4, scope: !5120)
!5128 = !DILocation(line: 847, column: 2, scope: !5114)
!5129 = !DILocation(line: 849, column: 14, scope: !4879)
!5130 = !DILocation(line: 849, column: 17, scope: !4879)
!5131 = !DILocation(line: 849, column: 2, scope: !4879)
!5132 = !DILocation(line: 850, column: 19, scope: !4879)
!5133 = !DILocation(line: 850, column: 2, scope: !4879)
!5134 = !DILocation(line: 850, column: 5, scope: !4879)
!5135 = !DILocation(line: 850, column: 17, scope: !4879)
!5136 = !DILocation(line: 852, column: 6, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 852, column: 6)
!5138 = !DILocation(line: 852, column: 10, scope: !5137)
!5139 = !DILocation(line: 852, column: 6, scope: !4879)
!5140 = !DILocation(line: 857, column: 20, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 852, column: 15)
!5142 = !DILocation(line: 857, column: 23, scope: !5141)
!5143 = !DILocation(line: 857, column: 3, scope: !5141)
!5144 = !DILocation(line: 858, column: 17, scope: !5141)
!5145 = !DILocation(line: 858, column: 20, scope: !5141)
!5146 = !DILocation(line: 858, column: 3, scope: !5141)
!5147 = !DILocation(line: 859, column: 10, scope: !5141)
!5148 = !DILocation(line: 859, column: 3, scope: !5141)
!5149 = !DILocation(line: 861, column: 16, scope: !4879)
!5150 = !DILocation(line: 861, column: 19, scope: !4879)
!5151 = !DILocation(line: 861, column: 2, scope: !4879)
!5152 = !DILocation(line: 867, column: 11, scope: !4879)
!5153 = !DILocation(line: 867, column: 3, scope: !4879)
!5154 = !DILocation(line: 867, column: 9, scope: !4879)
!5155 = !DILocation(line: 868, column: 28, scope: !4879)
!5156 = !DILocation(line: 868, column: 31, scope: !4879)
!5157 = !DILocation(line: 868, column: 27, scope: !4879)
!5158 = !DILocation(line: 868, column: 2, scope: !4879)
!5159 = !DILocation(line: 868, column: 5, scope: !4879)
!5160 = !DILocation(line: 868, column: 25, scope: !4879)
!5161 = !DILocation(line: 870, column: 2, scope: !4879)
!5162 = !DILocation(line: 871, column: 1, scope: !4879)
!5163 = distinct !DISubprogram(name: "__buffers_in_use", scope: !3, file: !3, line: 633, type: !4872, scopeLine: 634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5164 = !DILocalVariable(name: "q", arg: 1, scope: !5163, file: !3, line: 633, type: !185)
!5165 = !DILocation(line: 633, column: 48, scope: !5163)
!5166 = !DILocalVariable(name: "buffer", scope: !5163, file: !3, line: 635, type: !7)
!5167 = !DILocation(line: 635, column: 15, scope: !5163)
!5168 = !DILocation(line: 636, column: 14, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 636, column: 2)
!5170 = !DILocation(line: 636, column: 7, scope: !5169)
!5171 = !DILocation(line: 636, column: 19, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5169, file: !3, line: 636, column: 2)
!5173 = !DILocation(line: 636, column: 28, scope: !5172)
!5174 = !DILocation(line: 636, column: 31, scope: !5172)
!5175 = !DILocation(line: 636, column: 26, scope: !5172)
!5176 = !DILocation(line: 636, column: 2, scope: !5169)
!5177 = !DILocation(line: 637, column: 25, scope: !5178)
!5178 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 637, column: 7)
!5179 = distinct !DILexicalBlock(scope: !5172, file: !3, line: 636, column: 54)
!5180 = !DILocation(line: 637, column: 28, scope: !5178)
!5181 = !DILocation(line: 637, column: 31, scope: !5178)
!5182 = !DILocation(line: 637, column: 36, scope: !5178)
!5183 = !DILocation(line: 637, column: 7, scope: !5178)
!5184 = !DILocation(line: 637, column: 7, scope: !5179)
!5185 = !DILocation(line: 638, column: 4, scope: !5178)
!5186 = !DILocation(line: 639, column: 2, scope: !5179)
!5187 = !DILocation(line: 636, column: 44, scope: !5172)
!5188 = !DILocation(line: 636, column: 2, scope: !5172)
!5189 = distinct !{!5189, !5176, !5190}
!5190 = !DILocation(line: 639, column: 2, scope: !5169)
!5191 = !DILocation(line: 640, column: 2, scope: !5163)
!5192 = !DILocation(line: 641, column: 1, scope: !5163)
!5193 = distinct !DISubprogram(name: "__vb2_queue_cancel", scope: !3, file: !3, line: 1928, type: !3955, scopeLine: 1929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5194 = !DILocalVariable(name: "lock", arg: 1, scope: !5195, file: !5196, line: 407, type: !1053)
!5195 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5196, file: !5196, line: 407, type: !5197, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5196 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5197 = !DISubroutineType(types: !5198)
!5198 = !{null, !1053, !309}
!5199 = !DILocation(line: 407, column: 64, scope: !5195, inlinedAt: !5200)
!5200 = distinct !DILocation(line: 2000, column: 4, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5202, file: !3, line: 1994, column: 12)
!5202 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 1994, column: 7)
!5203 = distinct !DILexicalBlock(scope: !5204, file: !3, line: 1984, column: 39)
!5204 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 1984, column: 2)
!5205 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 1984, column: 2)
!5206 = !DILocalVariable(name: "flags", arg: 2, scope: !5195, file: !5196, line: 407, type: !309)
!5207 = !DILocation(line: 407, column: 84, scope: !5195, inlinedAt: !5200)
!5208 = !DILocalVariable(name: "lock", arg: 1, scope: !5209, file: !5196, line: 327, type: !1053)
!5209 = distinct !DISubprogram(name: "spinlock_check", scope: !5196, file: !5196, line: 327, type: !5210, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5210 = !DISubroutineType(types: !5211)
!5211 = !{!5212, !1053}
!5212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!5213 = !DILocation(line: 327, column: 67, scope: !5209, inlinedAt: !5214)
!5214 = distinct !DILocation(line: 1998, column: 4, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 1998, column: 4)
!5216 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 1998, column: 4)
!5217 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1998, column: 4)
!5218 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 1998, column: 4)
!5219 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 1998, column: 4)
!5220 = !DILocalVariable(name: "v", arg: 1, scope: !5221, file: !5222, line: 39, type: !5225)
!5221 = distinct !DISubprogram(name: "arch_atomic_set", scope: !5222, file: !5222, line: 39, type: !5223, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5222 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!5223 = !DISubroutineType(types: !5224)
!5224 = !{null, !5225, !243}
!5225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!5226 = !DILocation(line: 39, column: 55, scope: !5221, inlinedAt: !5227)
!5227 = distinct !DILocation(line: 46, column: 2, scope: !5228, inlinedAt: !5230)
!5228 = distinct !DISubprogram(name: "atomic_set", scope: !5229, file: !5229, line: 43, type: !5223, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5229 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5230 = distinct !DILocation(line: 1972, column: 2, scope: !5193)
!5231 = !DILocalVariable(name: "i", arg: 2, scope: !5221, file: !5222, line: 39, type: !243)
!5232 = !DILocation(line: 39, column: 62, scope: !5221, inlinedAt: !5227)
!5233 = !DILocalVariable(name: "v", arg: 1, scope: !5234, file: !5235, line: 84, type: !5238)
!5234 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !5235, file: !5235, line: 84, type: !5236, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5235 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!5236 = !DISubroutineType(types: !5237)
!5237 = !{null, !5238, !306}
!5238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5239, size: 64)
!5239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5240)
!5240 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!5241 = !DILocation(line: 84, column: 74, scope: !5234, inlinedAt: !5242)
!5242 = distinct !DILocation(line: 45, column: 2, scope: !5228, inlinedAt: !5230)
!5243 = !DILocalVariable(name: "size", arg: 2, scope: !5234, file: !5235, line: 84, type: !306)
!5244 = !DILocation(line: 84, column: 84, scope: !5234, inlinedAt: !5242)
!5245 = !DILocalVariable(name: "v", arg: 1, scope: !5228, file: !5229, line: 43, type: !5225)
!5246 = !DILocation(line: 43, column: 22, scope: !5228, inlinedAt: !5230)
!5247 = !DILocalVariable(name: "i", arg: 2, scope: !5228, file: !5229, line: 43, type: !243)
!5248 = !DILocation(line: 43, column: 29, scope: !5228, inlinedAt: !5230)
!5249 = !DILocalVariable(name: "v", arg: 1, scope: !5250, file: !5222, line: 23, type: !5253)
!5250 = distinct !DISubprogram(name: "arch_atomic_read", scope: !5222, file: !5222, line: 23, type: !5251, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5251 = !DISubroutineType(types: !5252)
!5252 = !{!243, !5253}
!5253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5254, size: 64)
!5254 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !736)
!5255 = !DILocation(line: 23, column: 61, scope: !5250, inlinedAt: !5256)
!5256 = distinct !DILocation(line: 28, column: 9, scope: !5257, inlinedAt: !5258)
!5257 = distinct !DISubprogram(name: "atomic_read", scope: !5229, file: !5229, line: 25, type: !5251, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5258 = distinct !DILocation(line: 1953, column: 3, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 1953, column: 3)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 1945, column: 52)
!5261 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 1945, column: 6)
!5262 = !DILocalVariable(name: "v", arg: 1, scope: !5263, file: !5235, line: 69, type: !5238)
!5263 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !5235, file: !5235, line: 69, type: !5236, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5264 = !DILocation(line: 69, column: 73, scope: !5263, inlinedAt: !5265)
!5265 = distinct !DILocation(line: 27, column: 2, scope: !5257, inlinedAt: !5258)
!5266 = !DILocalVariable(name: "size", arg: 2, scope: !5263, file: !5235, line: 69, type: !306)
!5267 = !DILocation(line: 69, column: 83, scope: !5263, inlinedAt: !5265)
!5268 = !DILocalVariable(name: "v", arg: 1, scope: !5257, file: !5229, line: 25, type: !5253)
!5269 = !DILocation(line: 25, column: 29, scope: !5257, inlinedAt: !5258)
!5270 = !DILocation(line: 23, column: 61, scope: !5250, inlinedAt: !5271)
!5271 = distinct !DILocation(line: 28, column: 9, scope: !5257, inlinedAt: !5272)
!5272 = distinct !DILocation(line: 1945, column: 6, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 1945, column: 6)
!5274 = !DILocation(line: 69, column: 73, scope: !5263, inlinedAt: !5275)
!5275 = distinct !DILocation(line: 27, column: 2, scope: !5257, inlinedAt: !5272)
!5276 = !DILocation(line: 69, column: 83, scope: !5263, inlinedAt: !5275)
!5277 = !DILocation(line: 25, column: 29, scope: !5257, inlinedAt: !5272)
!5278 = !DILocalVariable(name: "q", arg: 1, scope: !5193, file: !3, line: 1928, type: !185)
!5279 = !DILocation(line: 1928, column: 50, scope: !5193)
!5280 = !DILocalVariable(name: "i", scope: !5193, file: !3, line: 1930, type: !7)
!5281 = !DILocation(line: 1930, column: 15, scope: !5193)
!5282 = !DILocation(line: 1936, column: 6, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 1936, column: 6)
!5284 = !DILocation(line: 1936, column: 9, scope: !5283)
!5285 = !DILocation(line: 1936, column: 6, scope: !5193)
!5286 = !DILocation(line: 1937, column: 3, scope: !5283)
!5287 = !DILocation(line: 1937, column: 3, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 1937, column: 3)
!5289 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 1937, column: 3)
!5290 = !DILocation(line: 1937, column: 3, scope: !5289)
!5291 = !DILocalVariable(name: "__ret_warn_on", scope: !5273, file: !3, line: 1945, type: !243)
!5292 = !DILocation(line: 1945, column: 6, scope: !5273)
!5293 = !DILocation(line: 27, column: 25, scope: !5257, inlinedAt: !5272)
!5294 = !DILocation(line: 71, column: 19, scope: !5263, inlinedAt: !5275)
!5295 = !DILocation(line: 71, column: 22, scope: !5263, inlinedAt: !5275)
!5296 = !DILocation(line: 71, column: 2, scope: !5263, inlinedAt: !5275)
!5297 = !DILocation(line: 72, column: 2, scope: !5263, inlinedAt: !5275)
!5298 = !DILocation(line: 28, column: 26, scope: !5257, inlinedAt: !5272)
!5299 = !DILocation(line: 29, column: 9, scope: !5250, inlinedAt: !5271)
!5300 = !DILocation(line: 1945, column: 6, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5273, file: !3, line: 1945, column: 6)
!5302 = !DILocation(line: 1945, column: 6, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5301, file: !3, line: 1945, column: 6)
!5304 = !DILocation(line: 1945, column: 6, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 1945, column: 6)
!5306 = !DILocation(line: 1945, column: 6, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 1945, column: 6)
!5308 = !{i32 -2140539976, i32 -2140539947, i32 -2140539901, i32 -2140539843, i32 -2140539789, i32 -2140539735, i32 -2140539680, i32 -2140539649}
!5309 = !DILocation(line: 1945, column: 6, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 1945, column: 6)
!5311 = !{i32 -2140539219, i32 -2140539212, i32 -2140539160, i32 -2140539129, i32 -2140539099}
!5312 = !DILocation(line: 1945, column: 6, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 1945, column: 6)
!5314 = !DILocation(line: 1945, column: 6, scope: !5261)
!5315 = !DILocation(line: 1945, column: 6, scope: !5193)
!5316 = !DILocation(line: 1946, column: 10, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 1946, column: 3)
!5318 = !DILocation(line: 1946, column: 8, scope: !5317)
!5319 = !DILocation(line: 1946, column: 15, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1946, column: 3)
!5321 = !DILocation(line: 1946, column: 19, scope: !5320)
!5322 = !DILocation(line: 1946, column: 22, scope: !5320)
!5323 = !DILocation(line: 1946, column: 17, scope: !5320)
!5324 = !DILocation(line: 1946, column: 3, scope: !5317)
!5325 = !DILocation(line: 1947, column: 8, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 1947, column: 8)
!5327 = !DILocation(line: 1947, column: 11, scope: !5326)
!5328 = !DILocation(line: 1947, column: 16, scope: !5326)
!5329 = !DILocation(line: 1947, column: 20, scope: !5326)
!5330 = !DILocation(line: 1947, column: 26, scope: !5326)
!5331 = !DILocation(line: 1947, column: 8, scope: !5320)
!5332 = !DILocation(line: 1948, column: 5, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5326, file: !3, line: 1947, column: 51)
!5334 = !DILocation(line: 1950, column: 21, scope: !5333)
!5335 = !DILocation(line: 1950, column: 24, scope: !5333)
!5336 = !DILocation(line: 1950, column: 29, scope: !5333)
!5337 = !DILocation(line: 1950, column: 5, scope: !5333)
!5338 = !DILocation(line: 1951, column: 4, scope: !5333)
!5339 = !DILocation(line: 1947, column: 29, scope: !5326)
!5340 = !DILocation(line: 1946, column: 35, scope: !5320)
!5341 = !DILocation(line: 1946, column: 3, scope: !5320)
!5342 = distinct !{!5342, !5324, !5343}
!5343 = !DILocation(line: 1951, column: 4, scope: !5317)
!5344 = !DILocalVariable(name: "__ret_warn_on", scope: !5259, file: !3, line: 1953, type: !243)
!5345 = !DILocation(line: 1953, column: 3, scope: !5259)
!5346 = !DILocation(line: 27, column: 25, scope: !5257, inlinedAt: !5258)
!5347 = !DILocation(line: 71, column: 19, scope: !5263, inlinedAt: !5265)
!5348 = !DILocation(line: 71, column: 22, scope: !5263, inlinedAt: !5265)
!5349 = !DILocation(line: 71, column: 2, scope: !5263, inlinedAt: !5265)
!5350 = !DILocation(line: 72, column: 2, scope: !5263, inlinedAt: !5265)
!5351 = !DILocation(line: 28, column: 26, scope: !5257, inlinedAt: !5258)
!5352 = !DILocation(line: 29, column: 9, scope: !5250, inlinedAt: !5256)
!5353 = !DILocation(line: 1953, column: 3, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 1953, column: 3)
!5355 = !DILocation(line: 1953, column: 3, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 1953, column: 3)
!5357 = !DILocation(line: 1953, column: 3, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 1953, column: 3)
!5359 = !DILocation(line: 1953, column: 3, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 1953, column: 3)
!5361 = !{i32 -2140538207, i32 -2140538178, i32 -2140538132, i32 -2140538074, i32 -2140538020, i32 -2140537966, i32 -2140537911, i32 -2140537880}
!5362 = !DILocation(line: 1953, column: 3, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 1953, column: 3)
!5364 = !{i32 -2140537450, i32 -2140537443, i32 -2140537391, i32 -2140537360, i32 -2140537330}
!5365 = !DILocation(line: 1953, column: 3, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 1953, column: 3)
!5367 = !DILocation(line: 1954, column: 2, scope: !5260)
!5368 = !DILocation(line: 1956, column: 2, scope: !5193)
!5369 = !DILocation(line: 1956, column: 5, scope: !5193)
!5370 = !DILocation(line: 1956, column: 15, scope: !5193)
!5371 = !DILocation(line: 1957, column: 2, scope: !5193)
!5372 = !DILocation(line: 1957, column: 5, scope: !5193)
!5373 = !DILocation(line: 1957, column: 28, scope: !5193)
!5374 = !DILocation(line: 1958, column: 2, scope: !5193)
!5375 = !DILocation(line: 1958, column: 5, scope: !5193)
!5376 = !DILocation(line: 1958, column: 18, scope: !5193)
!5377 = !DILocation(line: 1959, column: 2, scope: !5193)
!5378 = !DILocation(line: 1959, column: 5, scope: !5193)
!5379 = !DILocation(line: 1959, column: 11, scope: !5193)
!5380 = !DILocation(line: 1960, column: 2, scope: !5193)
!5381 = !DILocation(line: 1960, column: 5, scope: !5193)
!5382 = !DILocation(line: 1960, column: 19, scope: !5193)
!5383 = !DILocation(line: 1961, column: 2, scope: !5193)
!5384 = !DILocation(line: 1961, column: 5, scope: !5193)
!5385 = !DILocation(line: 1961, column: 15, scope: !5193)
!5386 = !DILocation(line: 1966, column: 18, scope: !5193)
!5387 = !DILocation(line: 1966, column: 21, scope: !5193)
!5388 = !DILocation(line: 1966, column: 2, scope: !5193)
!5389 = !DILocation(line: 1971, column: 18, scope: !5193)
!5390 = !DILocation(line: 1971, column: 21, scope: !5193)
!5391 = !DILocation(line: 1971, column: 2, scope: !5193)
!5392 = !DILocation(line: 1972, column: 14, scope: !5193)
!5393 = !DILocation(line: 1972, column: 17, scope: !5193)
!5394 = !DILocation(line: 45, column: 26, scope: !5228, inlinedAt: !5230)
!5395 = !DILocation(line: 86, column: 20, scope: !5234, inlinedAt: !5242)
!5396 = !DILocation(line: 86, column: 23, scope: !5234, inlinedAt: !5242)
!5397 = !DILocation(line: 86, column: 2, scope: !5234, inlinedAt: !5242)
!5398 = !DILocation(line: 87, column: 2, scope: !5234, inlinedAt: !5242)
!5399 = !DILocation(line: 46, column: 18, scope: !5228, inlinedAt: !5230)
!5400 = !DILocation(line: 46, column: 21, scope: !5228, inlinedAt: !5230)
!5401 = !DILocation(line: 41, column: 2, scope: !5402, inlinedAt: !5227)
!5402 = distinct !DILexicalBlock(scope: !5221, file: !5222, line: 41, column: 2)
!5403 = !DILocation(line: 1973, column: 2, scope: !5193)
!5404 = !DILocation(line: 1984, column: 9, scope: !5205)
!5405 = !DILocation(line: 1984, column: 7, scope: !5205)
!5406 = !DILocation(line: 1984, column: 14, scope: !5204)
!5407 = !DILocation(line: 1984, column: 18, scope: !5204)
!5408 = !DILocation(line: 1984, column: 21, scope: !5204)
!5409 = !DILocation(line: 1984, column: 16, scope: !5204)
!5410 = !DILocation(line: 1984, column: 2, scope: !5205)
!5411 = !DILocalVariable(name: "vb", scope: !5203, file: !3, line: 1985, type: !181)
!5412 = !DILocation(line: 1985, column: 22, scope: !5203)
!5413 = !DILocation(line: 1985, column: 27, scope: !5203)
!5414 = !DILocation(line: 1985, column: 30, scope: !5203)
!5415 = !DILocation(line: 1985, column: 35, scope: !5203)
!5416 = !DILocalVariable(name: "req", scope: !5203, file: !3, line: 1986, type: !4292)
!5417 = !DILocation(line: 1986, column: 25, scope: !5203)
!5418 = !DILocation(line: 1986, column: 31, scope: !5203)
!5419 = !DILocation(line: 1986, column: 35, scope: !5203)
!5420 = !DILocation(line: 1986, column: 43, scope: !5203)
!5421 = !DILocation(line: 1994, column: 7, scope: !5202)
!5422 = !DILocation(line: 1994, column: 7, scope: !5203)
!5423 = !DILocalVariable(name: "state", scope: !5201, file: !3, line: 1995, type: !119)
!5424 = !DILocation(line: 1995, column: 29, scope: !5201)
!5425 = !DILocalVariable(name: "flags", scope: !5201, file: !3, line: 1996, type: !309)
!5426 = !DILocation(line: 1996, column: 18, scope: !5201)
!5427 = !DILocation(line: 1998, column: 4, scope: !5201)
!5428 = !DILocation(line: 1998, column: 4, scope: !5219)
!5429 = !DILocalVariable(name: "__dummy", scope: !5430, file: !3, line: 1998, type: !309)
!5430 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 1998, column: 4)
!5431 = !DILocation(line: 1998, column: 4, scope: !5430)
!5432 = !DILocalVariable(name: "__dummy2", scope: !5430, file: !3, line: 1998, type: !309)
!5433 = !DILocation(line: 1998, column: 4, scope: !5218)
!5434 = !DILocation(line: 1998, column: 4, scope: !5217)
!5435 = !DILocation(line: 1998, column: 4, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 1998, column: 4)
!5437 = !DILocalVariable(name: "__dummy", scope: !5438, file: !3, line: 1998, type: !309)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 1998, column: 4)
!5439 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 1998, column: 4)
!5440 = !DILocation(line: 1998, column: 4, scope: !5438)
!5441 = !DILocalVariable(name: "__dummy2", scope: !5438, file: !3, line: 1998, type: !309)
!5442 = !DILocation(line: 1998, column: 4, scope: !5439)
!5443 = !DILocation(line: 1998, column: 4, scope: !5216)
!5444 = !{i32 -2140536226}
!5445 = !DILocation(line: 1998, column: 4, scope: !5215)
!5446 = !DILocation(line: 329, column: 10, scope: !5209, inlinedAt: !5214)
!5447 = !DILocation(line: 329, column: 16, scope: !5209, inlinedAt: !5214)
!5448 = !DILocation(line: 1999, column: 12, scope: !5201)
!5449 = !DILocation(line: 1999, column: 17, scope: !5201)
!5450 = !DILocation(line: 1999, column: 10, scope: !5201)
!5451 = !DILocation(line: 2000, column: 28, scope: !5201)
!5452 = !DILocation(line: 2000, column: 33, scope: !5201)
!5453 = !DILocation(line: 2000, column: 39, scope: !5201)
!5454 = !DILocalVariable(name: "__dummy", scope: !5455, file: !5196, line: 409, type: !309)
!5455 = distinct !DILexicalBlock(scope: !5456, file: !5196, line: 409, column: 2)
!5456 = distinct !DILexicalBlock(scope: !5195, file: !5196, line: 409, column: 2)
!5457 = !DILocation(line: 409, column: 2, scope: !5455, inlinedAt: !5200)
!5458 = !DILocalVariable(name: "__dummy2", scope: !5455, file: !5196, line: 409, type: !309)
!5459 = !DILocalVariable(name: "__dummy", scope: !5460, file: !5196, line: 409, type: !309)
!5460 = distinct !DILexicalBlock(scope: !5461, file: !5196, line: 409, column: 2)
!5461 = distinct !DILexicalBlock(scope: !5462, file: !5196, line: 409, column: 2)
!5462 = distinct !DILexicalBlock(scope: !5463, file: !5196, line: 409, column: 2)
!5463 = distinct !DILexicalBlock(scope: !5456, file: !5196, line: 409, column: 2)
!5464 = !DILocation(line: 409, column: 2, scope: !5460, inlinedAt: !5200)
!5465 = !DILocalVariable(name: "__dummy2", scope: !5460, file: !5196, line: 409, type: !309)
!5466 = !DILocation(line: 409, column: 2, scope: !5461, inlinedAt: !5200)
!5467 = !DILocation(line: 409, column: 2, scope: !5468, inlinedAt: !5200)
!5468 = distinct !DILexicalBlock(scope: !5463, file: !5196, line: 409, column: 2)
!5469 = !{i32 -2145401514}
!5470 = !DILocation(line: 409, column: 2, scope: !5471, inlinedAt: !5200)
!5471 = distinct !DILexicalBlock(scope: !5468, file: !5196, line: 409, column: 2)
!5472 = !DILocation(line: 2002, column: 8, scope: !5473)
!5473 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 2002, column: 8)
!5474 = !DILocation(line: 2002, column: 14, scope: !5473)
!5475 = !DILocation(line: 2002, column: 8, scope: !5201)
!5476 = !DILocation(line: 2003, column: 5, scope: !5473)
!5477 = !DILocation(line: 2003, column: 5, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5479, file: !3, line: 2003, column: 5)
!5479 = distinct !DILexicalBlock(scope: !5473, file: !3, line: 2003, column: 5)
!5480 = !DILocation(line: 2003, column: 5, scope: !5479)
!5481 = !DILocation(line: 2004, column: 3, scope: !5201)
!5482 = !DILocation(line: 2006, column: 24, scope: !5203)
!5483 = !DILocation(line: 2006, column: 3, scope: !5203)
!5484 = !DILocation(line: 2008, column: 7, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 2008, column: 7)
!5486 = !DILocation(line: 2008, column: 11, scope: !5485)
!5487 = !DILocation(line: 2008, column: 7, scope: !5203)
!5488 = !DILocation(line: 2009, column: 4, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 2008, column: 21)
!5490 = !DILocation(line: 2009, column: 4, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5492, file: !3, line: 2009, column: 4)
!5492 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 2009, column: 4)
!5493 = !DILocation(line: 2009, column: 4, scope: !5492)
!5494 = !DILocation(line: 2010, column: 4, scope: !5489)
!5495 = !DILocation(line: 2010, column: 8, scope: !5489)
!5496 = !DILocation(line: 2010, column: 17, scope: !5489)
!5497 = !DILocation(line: 2011, column: 3, scope: !5489)
!5498 = !DILocation(line: 2012, column: 15, scope: !5203)
!5499 = !DILocation(line: 2012, column: 3, scope: !5203)
!5500 = !DILocation(line: 2014, column: 7, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 2014, column: 7)
!5502 = !DILocation(line: 2014, column: 11, scope: !5501)
!5503 = !DILocation(line: 2014, column: 19, scope: !5501)
!5504 = !DILocation(line: 2014, column: 7, scope: !5203)
!5505 = !DILocation(line: 2015, column: 33, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5501, file: !3, line: 2014, column: 24)
!5507 = !DILocation(line: 2015, column: 37, scope: !5506)
!5508 = !DILocation(line: 2015, column: 4, scope: !5506)
!5509 = !DILocation(line: 2016, column: 30, scope: !5506)
!5510 = !DILocation(line: 2016, column: 34, scope: !5506)
!5511 = !DILocation(line: 2016, column: 4, scope: !5506)
!5512 = !DILocation(line: 2017, column: 3, scope: !5506)
!5513 = !DILocation(line: 2018, column: 7, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 2018, column: 7)
!5515 = !DILocation(line: 2018, column: 11, scope: !5514)
!5516 = !DILocation(line: 2018, column: 7, scope: !5203)
!5517 = !DILocation(line: 2019, column: 22, scope: !5514)
!5518 = !DILocation(line: 2019, column: 26, scope: !5514)
!5519 = !DILocation(line: 2019, column: 4, scope: !5514)
!5520 = !DILocation(line: 2020, column: 3, scope: !5203)
!5521 = !DILocation(line: 2020, column: 7, scope: !5203)
!5522 = !DILocation(line: 2020, column: 15, scope: !5203)
!5523 = !DILocation(line: 2021, column: 3, scope: !5203)
!5524 = !DILocation(line: 2021, column: 7, scope: !5203)
!5525 = !DILocation(line: 2021, column: 24, scope: !5203)
!5526 = !DILocation(line: 2022, column: 2, scope: !5203)
!5527 = !DILocation(line: 1984, column: 34, scope: !5204)
!5528 = !DILocation(line: 1984, column: 2, scope: !5204)
!5529 = distinct !{!5529, !5410, !5530}
!5530 = !DILocation(line: 2022, column: 2, scope: !5205)
!5531 = !DILocation(line: 2023, column: 1, scope: !5193)
!5532 = distinct !DISubprogram(name: "__vb2_queue_free", scope: !3, file: !3, line: 499, type: !3971, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5533 = !DILocalVariable(name: "q", arg: 1, scope: !5532, file: !3, line: 499, type: !185)
!5534 = !DILocation(line: 499, column: 47, scope: !5532)
!5535 = !DILocalVariable(name: "buffers", arg: 2, scope: !5532, file: !3, line: 499, type: !7)
!5536 = !DILocation(line: 499, column: 63, scope: !5532)
!5537 = !DILocalVariable(name: "buffer", scope: !5532, file: !3, line: 501, type: !7)
!5538 = !DILocation(line: 501, column: 15, scope: !5532)
!5539 = !DILocation(line: 511, column: 16, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 511, column: 2)
!5541 = !DILocation(line: 511, column: 19, scope: !5540)
!5542 = !DILocation(line: 511, column: 33, scope: !5540)
!5543 = !DILocation(line: 511, column: 31, scope: !5540)
!5544 = !DILocation(line: 511, column: 14, scope: !5540)
!5545 = !DILocation(line: 511, column: 7, scope: !5540)
!5546 = !DILocation(line: 511, column: 42, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 511, column: 2)
!5548 = !DILocation(line: 511, column: 51, scope: !5547)
!5549 = !DILocation(line: 511, column: 54, scope: !5547)
!5550 = !DILocation(line: 511, column: 49, scope: !5547)
!5551 = !DILocation(line: 511, column: 2, scope: !5540)
!5552 = !DILocation(line: 513, column: 7, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 513, column: 7)
!5554 = distinct !DILexicalBlock(scope: !5547, file: !3, line: 512, column: 17)
!5555 = !DILocation(line: 513, column: 10, scope: !5553)
!5556 = !DILocation(line: 513, column: 15, scope: !5553)
!5557 = !DILocation(line: 513, column: 23, scope: !5553)
!5558 = !DILocation(line: 513, column: 7, scope: !5554)
!5559 = !DILocation(line: 514, column: 4, scope: !5553)
!5560 = !DILocation(line: 515, column: 7, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5554, file: !3, line: 515, column: 7)
!5562 = !DILocation(line: 515, column: 10, scope: !5561)
!5563 = !DILocation(line: 515, column: 15, scope: !5561)
!5564 = !DILocation(line: 515, column: 24, scope: !5561)
!5565 = !DILocation(line: 515, column: 30, scope: !5561)
!5566 = !DILocation(line: 515, column: 7, scope: !5554)
!5567 = !DILocation(line: 516, column: 4, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5561, file: !3, line: 515, column: 58)
!5569 = !DILocation(line: 516, column: 4, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 516, column: 4)
!5571 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 516, column: 4)
!5572 = !DILocation(line: 516, column: 4, scope: !5571)
!5573 = !DILocation(line: 517, column: 4, scope: !5568)
!5574 = !DILocation(line: 519, column: 2, scope: !5554)
!5575 = !DILocation(line: 512, column: 7, scope: !5547)
!5576 = !DILocation(line: 511, column: 2, scope: !5547)
!5577 = distinct !{!5577, !5551, !5578}
!5578 = !DILocation(line: 519, column: 2, scope: !5540)
!5579 = !DILocation(line: 522, column: 16, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 522, column: 2)
!5581 = !DILocation(line: 522, column: 19, scope: !5580)
!5582 = !DILocation(line: 522, column: 33, scope: !5580)
!5583 = !DILocation(line: 522, column: 31, scope: !5580)
!5584 = !DILocation(line: 522, column: 14, scope: !5580)
!5585 = !DILocation(line: 522, column: 7, scope: !5580)
!5586 = !DILocation(line: 522, column: 42, scope: !5587)
!5587 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 522, column: 2)
!5588 = !DILocation(line: 522, column: 51, scope: !5587)
!5589 = !DILocation(line: 522, column: 54, scope: !5587)
!5590 = !DILocation(line: 522, column: 49, scope: !5587)
!5591 = !DILocation(line: 522, column: 2, scope: !5580)
!5592 = !DILocalVariable(name: "vb", scope: !5593, file: !3, line: 524, type: !181)
!5593 = distinct !DILexicalBlock(scope: !5587, file: !3, line: 523, column: 17)
!5594 = !DILocation(line: 524, column: 22, scope: !5593)
!5595 = !DILocation(line: 524, column: 27, scope: !5593)
!5596 = !DILocation(line: 524, column: 30, scope: !5593)
!5597 = !DILocation(line: 524, column: 35, scope: !5593)
!5598 = !DILocation(line: 526, column: 7, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5593, file: !3, line: 526, column: 7)
!5600 = !DILocation(line: 526, column: 10, scope: !5599)
!5601 = !DILocation(line: 526, column: 13, scope: !5599)
!5602 = !DILocation(line: 526, column: 17, scope: !5599)
!5603 = !DILocation(line: 526, column: 27, scope: !5599)
!5604 = !DILocation(line: 526, column: 7, scope: !5593)
!5605 = !DILocation(line: 527, column: 4, scope: !5599)
!5606 = !DILocation(line: 527, column: 4, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 527, column: 4)
!5608 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 527, column: 4)
!5609 = !DILocation(line: 527, column: 4, scope: !5608)
!5610 = !DILocation(line: 528, column: 2, scope: !5593)
!5611 = !DILocation(line: 523, column: 7, scope: !5587)
!5612 = !DILocation(line: 522, column: 2, scope: !5587)
!5613 = distinct !{!5613, !5591, !5614}
!5614 = !DILocation(line: 528, column: 2, scope: !5580)
!5615 = !DILocation(line: 531, column: 17, scope: !5532)
!5616 = !DILocation(line: 531, column: 20, scope: !5532)
!5617 = !DILocation(line: 531, column: 2, scope: !5532)
!5618 = !DILocation(line: 597, column: 16, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 597, column: 2)
!5620 = !DILocation(line: 597, column: 19, scope: !5619)
!5621 = !DILocation(line: 597, column: 33, scope: !5619)
!5622 = !DILocation(line: 597, column: 31, scope: !5619)
!5623 = !DILocation(line: 597, column: 14, scope: !5619)
!5624 = !DILocation(line: 597, column: 7, scope: !5619)
!5625 = !DILocation(line: 597, column: 42, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5619, file: !3, line: 597, column: 2)
!5627 = !DILocation(line: 597, column: 51, scope: !5626)
!5628 = !DILocation(line: 597, column: 54, scope: !5626)
!5629 = !DILocation(line: 597, column: 49, scope: !5626)
!5630 = !DILocation(line: 597, column: 2, scope: !5619)
!5631 = !DILocation(line: 599, column: 9, scope: !5632)
!5632 = distinct !DILexicalBlock(scope: !5626, file: !3, line: 598, column: 17)
!5633 = !DILocation(line: 599, column: 12, scope: !5632)
!5634 = !DILocation(line: 599, column: 17, scope: !5632)
!5635 = !DILocation(line: 599, column: 3, scope: !5632)
!5636 = !DILocation(line: 600, column: 3, scope: !5632)
!5637 = !DILocation(line: 600, column: 6, scope: !5632)
!5638 = !DILocation(line: 600, column: 11, scope: !5632)
!5639 = !DILocation(line: 600, column: 19, scope: !5632)
!5640 = !DILocation(line: 601, column: 2, scope: !5632)
!5641 = !DILocation(line: 598, column: 7, scope: !5626)
!5642 = !DILocation(line: 597, column: 2, scope: !5626)
!5643 = distinct !{!5643, !5630, !5644}
!5644 = !DILocation(line: 601, column: 2, scope: !5619)
!5645 = !DILocation(line: 603, column: 20, scope: !5532)
!5646 = !DILocation(line: 603, column: 2, scope: !5532)
!5647 = !DILocation(line: 603, column: 5, scope: !5532)
!5648 = !DILocation(line: 603, column: 17, scope: !5532)
!5649 = !DILocation(line: 604, column: 7, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5532, file: !3, line: 604, column: 6)
!5651 = !DILocation(line: 604, column: 10, scope: !5650)
!5652 = !DILocation(line: 604, column: 6, scope: !5532)
!5653 = !DILocation(line: 605, column: 3, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5650, file: !3, line: 604, column: 23)
!5655 = !DILocation(line: 605, column: 6, scope: !5654)
!5656 = !DILocation(line: 605, column: 13, scope: !5654)
!5657 = !DILocation(line: 606, column: 19, scope: !5654)
!5658 = !DILocation(line: 606, column: 22, scope: !5654)
!5659 = !DILocation(line: 606, column: 3, scope: !5654)
!5660 = !DILocation(line: 607, column: 2, scope: !5654)
!5661 = !DILocation(line: 608, column: 2, scope: !5532)
!5662 = !DILocation(line: 609, column: 1, scope: !5532)
!5663 = distinct !DISubprogram(name: "__vb2_queue_alloc", scope: !3, file: !3, line: 391, type: !5664, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5664 = !DISubroutineType(types: !5665)
!5665 = !{!243, !185, !151, !7, !7, !5666}
!5666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!5667 = !DILocalVariable(name: "q", arg: 1, scope: !5663, file: !3, line: 391, type: !185)
!5668 = !DILocation(line: 391, column: 48, scope: !5663)
!5669 = !DILocalVariable(name: "memory", arg: 2, scope: !5663, file: !3, line: 391, type: !151)
!5670 = !DILocation(line: 391, column: 67, scope: !5663)
!5671 = !DILocalVariable(name: "num_buffers", arg: 3, scope: !5663, file: !3, line: 392, type: !7)
!5672 = !DILocation(line: 392, column: 22, scope: !5663)
!5673 = !DILocalVariable(name: "num_planes", arg: 4, scope: !5663, file: !3, line: 392, type: !7)
!5674 = !DILocation(line: 392, column: 48, scope: !5663)
!5675 = !DILocalVariable(name: "plane_sizes", arg: 5, scope: !5663, file: !3, line: 393, type: !5666)
!5676 = !DILocation(line: 393, column: 24, scope: !5663)
!5677 = !DILocalVariable(name: "buffer", scope: !5663, file: !3, line: 395, type: !7)
!5678 = !DILocation(line: 395, column: 15, scope: !5663)
!5679 = !DILocalVariable(name: "plane", scope: !5663, file: !3, line: 395, type: !7)
!5680 = !DILocation(line: 395, column: 23, scope: !5663)
!5681 = !DILocalVariable(name: "vb", scope: !5663, file: !3, line: 396, type: !181)
!5682 = !DILocation(line: 396, column: 21, scope: !5663)
!5683 = !DILocalVariable(name: "ret", scope: !5663, file: !3, line: 397, type: !243)
!5684 = !DILocation(line: 397, column: 6, scope: !5663)
!5685 = !DILocalVariable(name: "__UNIQUE_ID___x263", scope: !5686, file: !3, line: 400, type: !7)
!5686 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 400, column: 16)
!5687 = !DILocation(line: 400, column: 16, scope: !5686)
!5688 = !DILocalVariable(name: "__UNIQUE_ID___y264", scope: !5686, file: !3, line: 400, type: !7)
!5689 = !DILocation(line: 400, column: 14, scope: !5663)
!5690 = !DILocation(line: 403, column: 14, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 403, column: 2)
!5692 = !DILocation(line: 403, column: 7, scope: !5691)
!5693 = !DILocation(line: 403, column: 19, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 403, column: 2)
!5695 = !DILocation(line: 403, column: 28, scope: !5694)
!5696 = !DILocation(line: 403, column: 26, scope: !5694)
!5697 = !DILocation(line: 403, column: 2, scope: !5691)
!5698 = !DILocation(line: 405, column: 16, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5694, file: !3, line: 403, column: 51)
!5700 = !DILocation(line: 405, column: 19, scope: !5699)
!5701 = !DILocation(line: 405, column: 8, scope: !5699)
!5702 = !DILocation(line: 405, column: 6, scope: !5699)
!5703 = !DILocation(line: 406, column: 8, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 406, column: 7)
!5705 = !DILocation(line: 406, column: 7, scope: !5699)
!5706 = !DILocation(line: 407, column: 4, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 406, column: 12)
!5708 = !DILocation(line: 407, column: 4, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 407, column: 4)
!5710 = distinct !DILexicalBlock(scope: !5707, file: !3, line: 407, column: 4)
!5711 = !DILocation(line: 407, column: 4, scope: !5710)
!5712 = !DILocation(line: 408, column: 4, scope: !5707)
!5713 = !DILocation(line: 411, column: 3, scope: !5699)
!5714 = !DILocation(line: 411, column: 7, scope: !5699)
!5715 = !DILocation(line: 411, column: 13, scope: !5699)
!5716 = !DILocation(line: 412, column: 19, scope: !5699)
!5717 = !DILocation(line: 412, column: 3, scope: !5699)
!5718 = !DILocation(line: 412, column: 7, scope: !5699)
!5719 = !DILocation(line: 412, column: 17, scope: !5699)
!5720 = !DILocation(line: 413, column: 20, scope: !5699)
!5721 = !DILocation(line: 413, column: 3, scope: !5699)
!5722 = !DILocation(line: 413, column: 7, scope: !5699)
!5723 = !DILocation(line: 413, column: 18, scope: !5699)
!5724 = !DILocation(line: 414, column: 15, scope: !5699)
!5725 = !DILocation(line: 414, column: 18, scope: !5699)
!5726 = !DILocation(line: 414, column: 32, scope: !5699)
!5727 = !DILocation(line: 414, column: 30, scope: !5699)
!5728 = !DILocation(line: 414, column: 3, scope: !5699)
!5729 = !DILocation(line: 414, column: 7, scope: !5699)
!5730 = !DILocation(line: 414, column: 13, scope: !5699)
!5731 = !DILocation(line: 415, column: 14, scope: !5699)
!5732 = !DILocation(line: 415, column: 17, scope: !5699)
!5733 = !DILocation(line: 415, column: 3, scope: !5699)
!5734 = !DILocation(line: 415, column: 7, scope: !5699)
!5735 = !DILocation(line: 415, column: 12, scope: !5699)
!5736 = !DILocation(line: 416, column: 16, scope: !5699)
!5737 = !DILocation(line: 416, column: 3, scope: !5699)
!5738 = !DILocation(line: 416, column: 7, scope: !5699)
!5739 = !DILocation(line: 416, column: 14, scope: !5699)
!5740 = !DILocation(line: 424, column: 7, scope: !5741)
!5741 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 424, column: 7)
!5742 = !DILocation(line: 424, column: 10, scope: !5741)
!5743 = !DILocation(line: 424, column: 17, scope: !5741)
!5744 = !DILocation(line: 424, column: 7, scope: !5699)
!5745 = !DILocation(line: 425, column: 4, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5741, file: !3, line: 424, column: 39)
!5747 = !DILocation(line: 425, column: 8, scope: !5746)
!5748 = !DILocation(line: 425, column: 35, scope: !5746)
!5749 = !DILocation(line: 426, column: 4, scope: !5746)
!5750 = !DILocation(line: 426, column: 8, scope: !5746)
!5751 = !DILocation(line: 426, column: 34, scope: !5746)
!5752 = !DILocation(line: 427, column: 3, scope: !5746)
!5753 = !DILocation(line: 428, column: 14, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 428, column: 3)
!5755 = !DILocation(line: 428, column: 8, scope: !5754)
!5756 = !DILocation(line: 428, column: 19, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 428, column: 3)
!5758 = !DILocation(line: 428, column: 27, scope: !5757)
!5759 = !DILocation(line: 428, column: 25, scope: !5757)
!5760 = !DILocation(line: 428, column: 3, scope: !5754)
!5761 = !DILocation(line: 429, column: 31, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 428, column: 48)
!5763 = !DILocation(line: 429, column: 43, scope: !5762)
!5764 = !DILocation(line: 429, column: 4, scope: !5762)
!5765 = !DILocation(line: 429, column: 8, scope: !5762)
!5766 = !DILocation(line: 429, column: 15, scope: !5762)
!5767 = !DILocation(line: 429, column: 22, scope: !5762)
!5768 = !DILocation(line: 429, column: 29, scope: !5762)
!5769 = !DILocation(line: 430, column: 35, scope: !5762)
!5770 = !DILocation(line: 430, column: 47, scope: !5762)
!5771 = !DILocation(line: 430, column: 4, scope: !5762)
!5772 = !DILocation(line: 430, column: 8, scope: !5762)
!5773 = !DILocation(line: 430, column: 15, scope: !5762)
!5774 = !DILocation(line: 430, column: 22, scope: !5762)
!5775 = !DILocation(line: 430, column: 33, scope: !5762)
!5776 = !DILocation(line: 431, column: 3, scope: !5762)
!5777 = !DILocation(line: 428, column: 39, scope: !5757)
!5778 = !DILocation(line: 428, column: 3, scope: !5757)
!5779 = distinct !{!5779, !5760, !5780}
!5780 = !DILocation(line: 431, column: 3, scope: !5754)
!5781 = !DILocation(line: 432, column: 3, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 432, column: 3)
!5783 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 432, column: 3)
!5784 = !DILocation(line: 432, column: 3, scope: !5783)
!5785 = !DILocation(line: 434, column: 24, scope: !5699)
!5786 = !DILocation(line: 434, column: 3, scope: !5699)
!5787 = !DILocation(line: 434, column: 6, scope: !5699)
!5788 = !DILocation(line: 434, column: 11, scope: !5699)
!5789 = !DILocation(line: 434, column: 15, scope: !5699)
!5790 = !DILocation(line: 434, column: 22, scope: !5699)
!5791 = !DILocation(line: 437, column: 7, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5699, file: !3, line: 437, column: 7)
!5793 = !DILocation(line: 437, column: 14, scope: !5792)
!5794 = !DILocation(line: 437, column: 7, scope: !5699)
!5795 = !DILocation(line: 438, column: 30, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 437, column: 34)
!5797 = !DILocation(line: 438, column: 10, scope: !5796)
!5798 = !DILocation(line: 438, column: 8, scope: !5796)
!5799 = !DILocation(line: 439, column: 8, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 439, column: 8)
!5801 = !DILocation(line: 439, column: 8, scope: !5796)
!5802 = !DILocation(line: 440, column: 5, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 439, column: 13)
!5804 = !DILocation(line: 440, column: 5, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 440, column: 5)
!5806 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 440, column: 5)
!5807 = !DILocation(line: 440, column: 5, scope: !5806)
!5808 = !DILocation(line: 442, column: 5, scope: !5803)
!5809 = !DILocation(line: 442, column: 8, scope: !5803)
!5810 = !DILocation(line: 442, column: 13, scope: !5803)
!5811 = !DILocation(line: 442, column: 17, scope: !5803)
!5812 = !DILocation(line: 442, column: 24, scope: !5803)
!5813 = !DILocation(line: 443, column: 11, scope: !5803)
!5814 = !DILocation(line: 443, column: 5, scope: !5803)
!5815 = !DILocation(line: 444, column: 5, scope: !5803)
!5816 = !DILocation(line: 446, column: 20, scope: !5796)
!5817 = !DILocation(line: 446, column: 4, scope: !5796)
!5818 = !DILocation(line: 452, column: 10, scope: !5796)
!5819 = !DILocation(line: 452, column: 8, scope: !5796)
!5820 = !DILocation(line: 453, column: 8, scope: !5821)
!5821 = distinct !DILexicalBlock(scope: !5796, file: !3, line: 453, column: 8)
!5822 = !DILocation(line: 453, column: 8, scope: !5796)
!5823 = !DILocation(line: 454, column: 5, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5821, file: !3, line: 453, column: 13)
!5825 = !DILocation(line: 454, column: 5, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5827, file: !3, line: 454, column: 5)
!5827 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 454, column: 5)
!5828 = !DILocation(line: 454, column: 5, scope: !5827)
!5829 = !DILocation(line: 456, column: 24, scope: !5824)
!5830 = !DILocation(line: 456, column: 5, scope: !5824)
!5831 = !DILocation(line: 457, column: 5, scope: !5824)
!5832 = !DILocation(line: 457, column: 8, scope: !5824)
!5833 = !DILocation(line: 457, column: 13, scope: !5824)
!5834 = !DILocation(line: 457, column: 17, scope: !5824)
!5835 = !DILocation(line: 457, column: 24, scope: !5824)
!5836 = !DILocation(line: 458, column: 11, scope: !5824)
!5837 = !DILocation(line: 458, column: 5, scope: !5824)
!5838 = !DILocation(line: 459, column: 5, scope: !5824)
!5839 = !DILocation(line: 461, column: 3, scope: !5796)
!5840 = !DILocation(line: 462, column: 2, scope: !5699)
!5841 = !DILocation(line: 403, column: 41, scope: !5694)
!5842 = !DILocation(line: 403, column: 2, scope: !5694)
!5843 = distinct !{!5843, !5697, !5844}
!5844 = !DILocation(line: 462, column: 2, scope: !5691)
!5845 = !DILocation(line: 464, column: 2, scope: !5663)
!5846 = !DILocation(line: 464, column: 2, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 464, column: 2)
!5848 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 464, column: 2)
!5849 = !DILocation(line: 464, column: 2, scope: !5848)
!5850 = !DILocation(line: 467, column: 9, scope: !5663)
!5851 = !DILocation(line: 467, column: 2, scope: !5663)
!5852 = distinct !DISubprogram(name: "vb2_core_create_bufs", scope: !3, file: !3, line: 874, type: !5853, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!5853 = !DISubroutineType(types: !5854)
!5854 = !{!243, !185, !151, !2678, !7, !5666}
!5855 = !DILocalVariable(name: "q", arg: 1, scope: !5852, file: !3, line: 874, type: !185)
!5856 = !DILocation(line: 874, column: 44, scope: !5852)
!5857 = !DILocalVariable(name: "memory", arg: 2, scope: !5852, file: !3, line: 874, type: !151)
!5858 = !DILocation(line: 874, column: 63, scope: !5852)
!5859 = !DILocalVariable(name: "count", arg: 3, scope: !5852, file: !3, line: 875, type: !2678)
!5860 = !DILocation(line: 875, column: 19, scope: !5852)
!5861 = !DILocalVariable(name: "requested_planes", arg: 4, scope: !5852, file: !3, line: 876, type: !7)
!5862 = !DILocation(line: 876, column: 18, scope: !5852)
!5863 = !DILocalVariable(name: "requested_sizes", arg: 5, scope: !5852, file: !3, line: 877, type: !5666)
!5864 = !DILocation(line: 877, column: 24, scope: !5852)
!5865 = !DILocalVariable(name: "num_planes", scope: !5852, file: !3, line: 879, type: !7)
!5866 = !DILocation(line: 879, column: 15, scope: !5852)
!5867 = !DILocalVariable(name: "num_buffers", scope: !5852, file: !3, line: 879, type: !7)
!5868 = !DILocation(line: 879, column: 31, scope: !5852)
!5869 = !DILocalVariable(name: "allocated_buffers", scope: !5852, file: !3, line: 879, type: !7)
!5870 = !DILocation(line: 879, column: 44, scope: !5852)
!5871 = !DILocalVariable(name: "plane_sizes", scope: !5852, file: !3, line: 880, type: !4895)
!5872 = !DILocation(line: 880, column: 11, scope: !5852)
!5873 = !DILocalVariable(name: "ret", scope: !5852, file: !3, line: 881, type: !243)
!5874 = !DILocation(line: 881, column: 6, scope: !5852)
!5875 = !DILocation(line: 883, column: 6, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 883, column: 6)
!5877 = !DILocation(line: 883, column: 9, scope: !5876)
!5878 = !DILocation(line: 883, column: 21, scope: !5876)
!5879 = !DILocation(line: 883, column: 6, scope: !5852)
!5880 = !DILocation(line: 884, column: 3, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 883, column: 39)
!5882 = !DILocation(line: 884, column: 3, scope: !5883)
!5883 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 884, column: 3)
!5884 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 884, column: 3)
!5885 = !DILocation(line: 884, column: 3, scope: !5884)
!5886 = !DILocation(line: 885, column: 3, scope: !5881)
!5887 = !DILocation(line: 888, column: 7, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 888, column: 6)
!5889 = !DILocation(line: 888, column: 10, scope: !5888)
!5890 = !DILocation(line: 888, column: 6, scope: !5852)
!5891 = !DILocation(line: 889, column: 7, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5893, file: !3, line: 889, column: 7)
!5893 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 888, column: 23)
!5894 = !DILocation(line: 889, column: 10, scope: !5892)
!5895 = !DILocation(line: 889, column: 27, scope: !5892)
!5896 = !DILocation(line: 889, column: 31, scope: !5892)
!5897 = !DILocation(line: 889, column: 30, scope: !5892)
!5898 = !DILocation(line: 889, column: 7, scope: !5893)
!5899 = !DILocation(line: 890, column: 4, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 889, column: 38)
!5901 = !DILocation(line: 890, column: 4, scope: !5902)
!5902 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 890, column: 4)
!5903 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 890, column: 4)
!5904 = !DILocation(line: 890, column: 4, scope: !5903)
!5905 = !DILocation(line: 891, column: 4, scope: !5900)
!5906 = !DILocation(line: 893, column: 10, scope: !5893)
!5907 = !DILocation(line: 893, column: 13, scope: !5893)
!5908 = !DILocation(line: 893, column: 3, scope: !5893)
!5909 = !DILocation(line: 894, column: 15, scope: !5893)
!5910 = !DILocation(line: 894, column: 3, scope: !5893)
!5911 = !DILocation(line: 894, column: 6, scope: !5893)
!5912 = !DILocation(line: 894, column: 13, scope: !5893)
!5913 = !DILocation(line: 895, column: 29, scope: !5893)
!5914 = !DILocation(line: 895, column: 32, scope: !5893)
!5915 = !DILocation(line: 895, column: 28, scope: !5893)
!5916 = !DILocation(line: 895, column: 3, scope: !5893)
!5917 = !DILocation(line: 895, column: 6, scope: !5893)
!5918 = !DILocation(line: 895, column: 26, scope: !5893)
!5919 = !DILocation(line: 896, column: 2, scope: !5893)
!5920 = !DILocation(line: 897, column: 7, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 897, column: 7)
!5922 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 896, column: 9)
!5923 = !DILocation(line: 897, column: 10, scope: !5921)
!5924 = !DILocation(line: 897, column: 20, scope: !5921)
!5925 = !DILocation(line: 897, column: 17, scope: !5921)
!5926 = !DILocation(line: 897, column: 7, scope: !5922)
!5927 = !DILocation(line: 898, column: 4, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 897, column: 28)
!5929 = !DILocation(line: 898, column: 4, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 898, column: 4)
!5931 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 898, column: 4)
!5932 = !DILocation(line: 898, column: 4, scope: !5931)
!5933 = !DILocation(line: 899, column: 4, scope: !5928)
!5934 = !DILocalVariable(name: "__UNIQUE_ID___x272", scope: !5935, file: !3, line: 903, type: !7)
!5935 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 903, column: 16)
!5936 = !DILocation(line: 903, column: 16, scope: !5935)
!5937 = !DILocalVariable(name: "__UNIQUE_ID___y273", scope: !5935, file: !3, line: 903, type: !7)
!5938 = !DILocation(line: 903, column: 14, scope: !5852)
!5939 = !DILocation(line: 905, column: 6, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 905, column: 6)
!5941 = !DILocation(line: 905, column: 23, scope: !5940)
!5942 = !DILocation(line: 905, column: 26, scope: !5940)
!5943 = !DILocation(line: 905, column: 6, scope: !5852)
!5944 = !DILocation(line: 906, column: 16, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 905, column: 43)
!5946 = !DILocation(line: 906, column: 14, scope: !5945)
!5947 = !DILocation(line: 907, column: 3, scope: !5945)
!5948 = !DILocation(line: 907, column: 23, scope: !5945)
!5949 = !DILocation(line: 908, column: 2, scope: !5945)
!5950 = !DILocation(line: 914, column: 8, scope: !5852)
!5951 = !DILocation(line: 914, column: 6, scope: !5852)
!5952 = !DILocation(line: 916, column: 6, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 916, column: 6)
!5954 = !DILocation(line: 916, column: 6, scope: !5852)
!5955 = !DILocation(line: 917, column: 10, scope: !5953)
!5956 = !DILocation(line: 917, column: 3, scope: !5953)
!5957 = !DILocation(line: 920, column: 40, scope: !5852)
!5958 = !DILocation(line: 920, column: 43, scope: !5852)
!5959 = !DILocation(line: 920, column: 51, scope: !5852)
!5960 = !DILocation(line: 921, column: 5, scope: !5852)
!5961 = !DILocation(line: 921, column: 17, scope: !5852)
!5962 = !DILocation(line: 920, column: 22, scope: !5852)
!5963 = !DILocation(line: 920, column: 20, scope: !5852)
!5964 = !DILocation(line: 922, column: 6, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 922, column: 6)
!5966 = !DILocation(line: 922, column: 24, scope: !5965)
!5967 = !DILocation(line: 922, column: 6, scope: !5852)
!5968 = !DILocation(line: 923, column: 3, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 922, column: 30)
!5970 = !DILocation(line: 923, column: 3, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !5972, file: !3, line: 923, column: 3)
!5972 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 923, column: 3)
!5973 = !DILocation(line: 923, column: 3, scope: !5972)
!5974 = !DILocation(line: 924, column: 3, scope: !5969)
!5975 = !DILocation(line: 930, column: 6, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 930, column: 6)
!5977 = !DILocation(line: 930, column: 26, scope: !5976)
!5978 = !DILocation(line: 930, column: 24, scope: !5976)
!5979 = !DILocation(line: 930, column: 6, scope: !5852)
!5980 = !DILocation(line: 931, column: 17, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 930, column: 39)
!5982 = !DILocation(line: 931, column: 15, scope: !5981)
!5983 = !DILocation(line: 937, column: 9, scope: !5981)
!5984 = !DILocation(line: 937, column: 7, scope: !5981)
!5985 = !DILocation(line: 940, column: 8, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 940, column: 7)
!5987 = !DILocation(line: 940, column: 12, scope: !5986)
!5988 = !DILocation(line: 940, column: 15, scope: !5986)
!5989 = !DILocation(line: 940, column: 35, scope: !5986)
!5990 = !DILocation(line: 940, column: 33, scope: !5986)
!5991 = !DILocation(line: 940, column: 7, scope: !5981)
!5992 = !DILocation(line: 941, column: 8, scope: !5986)
!5993 = !DILocation(line: 941, column: 4, scope: !5986)
!5994 = !DILocation(line: 947, column: 2, scope: !5981)
!5995 = !DILocation(line: 949, column: 14, scope: !5852)
!5996 = !DILocation(line: 949, column: 17, scope: !5852)
!5997 = !DILocation(line: 949, column: 2, scope: !5852)
!5998 = !DILocation(line: 950, column: 20, scope: !5852)
!5999 = !DILocation(line: 950, column: 2, scope: !5852)
!6000 = !DILocation(line: 950, column: 5, scope: !5852)
!6001 = !DILocation(line: 950, column: 17, scope: !5852)
!6002 = !DILocation(line: 952, column: 6, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 952, column: 6)
!6004 = !DILocation(line: 952, column: 10, scope: !6003)
!6005 = !DILocation(line: 952, column: 6, scope: !5852)
!6006 = !DILocation(line: 957, column: 20, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 952, column: 15)
!6008 = !DILocation(line: 957, column: 23, scope: !6007)
!6009 = !DILocation(line: 957, column: 3, scope: !6007)
!6010 = !DILocation(line: 958, column: 17, scope: !6007)
!6011 = !DILocation(line: 958, column: 20, scope: !6007)
!6012 = !DILocation(line: 958, column: 3, scope: !6007)
!6013 = !DILocation(line: 959, column: 3, scope: !6007)
!6014 = !DILocation(line: 961, column: 16, scope: !5852)
!6015 = !DILocation(line: 961, column: 19, scope: !5852)
!6016 = !DILocation(line: 961, column: 2, scope: !5852)
!6017 = !DILocation(line: 967, column: 11, scope: !5852)
!6018 = !DILocation(line: 967, column: 3, scope: !5852)
!6019 = !DILocation(line: 967, column: 9, scope: !5852)
!6020 = !DILocation(line: 969, column: 2, scope: !5852)
!6021 = !DILocation(line: 970, column: 1, scope: !5852)
!6022 = distinct !DISubprogram(name: "vb2_plane_vaddr", scope: !3, file: !3, line: 973, type: !6023, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6023 = !DISubroutineType(types: !6024)
!6024 = !{!180, !181, !7}
!6025 = !DILocalVariable(name: "vb", arg: 1, scope: !6022, file: !3, line: 973, type: !181)
!6026 = !DILocation(line: 973, column: 42, scope: !6022)
!6027 = !DILocalVariable(name: "plane_no", arg: 2, scope: !6022, file: !3, line: 973, type: !7)
!6028 = !DILocation(line: 973, column: 59, scope: !6022)
!6029 = !DILocation(line: 975, column: 6, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6022, file: !3, line: 975, column: 6)
!6031 = !DILocation(line: 975, column: 18, scope: !6030)
!6032 = !DILocation(line: 975, column: 22, scope: !6030)
!6033 = !DILocation(line: 975, column: 15, scope: !6030)
!6034 = !DILocation(line: 975, column: 33, scope: !6030)
!6035 = !DILocation(line: 975, column: 37, scope: !6030)
!6036 = !DILocation(line: 975, column: 41, scope: !6030)
!6037 = !DILocation(line: 975, column: 48, scope: !6030)
!6038 = !DILocation(line: 975, column: 58, scope: !6030)
!6039 = !DILocation(line: 975, column: 6, scope: !6022)
!6040 = !DILocation(line: 976, column: 3, scope: !6030)
!6041 = !DILocation(line: 978, column: 9, scope: !6022)
!6042 = !DILocation(line: 978, column: 2, scope: !6022)
!6043 = !DILocation(line: 980, column: 1, scope: !6022)
!6044 = distinct !DISubprogram(name: "vb2_plane_cookie", scope: !3, file: !3, line: 983, type: !6023, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6045 = !DILocalVariable(name: "vb", arg: 1, scope: !6044, file: !3, line: 983, type: !181)
!6046 = !DILocation(line: 983, column: 43, scope: !6044)
!6047 = !DILocalVariable(name: "plane_no", arg: 2, scope: !6044, file: !3, line: 983, type: !7)
!6048 = !DILocation(line: 983, column: 60, scope: !6044)
!6049 = !DILocation(line: 985, column: 6, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 985, column: 6)
!6051 = !DILocation(line: 985, column: 18, scope: !6050)
!6052 = !DILocation(line: 985, column: 22, scope: !6050)
!6053 = !DILocation(line: 985, column: 15, scope: !6050)
!6054 = !DILocation(line: 985, column: 33, scope: !6050)
!6055 = !DILocation(line: 985, column: 37, scope: !6050)
!6056 = !DILocation(line: 985, column: 41, scope: !6050)
!6057 = !DILocation(line: 985, column: 48, scope: !6050)
!6058 = !DILocation(line: 985, column: 58, scope: !6050)
!6059 = !DILocation(line: 985, column: 6, scope: !6044)
!6060 = !DILocation(line: 986, column: 3, scope: !6050)
!6061 = !DILocation(line: 988, column: 9, scope: !6044)
!6062 = !DILocation(line: 988, column: 2, scope: !6044)
!6063 = !DILocation(line: 989, column: 1, scope: !6044)
!6064 = distinct !DISubprogram(name: "vb2_buffer_done", scope: !3, file: !3, line: 992, type: !6065, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6065 = !DISubroutineType(types: !6066)
!6066 = !{null, !181, !129}
!6067 = !DILocation(line: 407, column: 64, scope: !5195, inlinedAt: !6068)
!6068 = distinct !DILocation(line: 1033, column: 2, scope: !6064)
!6069 = !DILocation(line: 407, column: 84, scope: !5195, inlinedAt: !6068)
!6070 = !DILocalVariable(name: "v", arg: 1, scope: !6071, file: !5222, line: 106, type: !5225)
!6071 = distinct !DISubprogram(name: "arch_atomic_dec", scope: !5222, file: !5222, line: 106, type: !6072, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6072 = !DISubroutineType(types: !6073)
!6073 = !{null, !5225}
!6074 = !DILocation(line: 106, column: 55, scope: !6071, inlinedAt: !6075)
!6075 = distinct !DILocation(line: 331, column: 2, scope: !6076, inlinedAt: !6077)
!6076 = distinct !DISubprogram(name: "atomic_dec", scope: !5229, file: !5229, line: 328, type: !6072, scopeLine: 329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6077 = distinct !DILocation(line: 1026, column: 2, scope: !6064)
!6078 = !DILocalVariable(name: "v", arg: 1, scope: !6079, file: !5235, line: 99, type: !5238)
!6079 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !5235, file: !5235, line: 99, type: !5236, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6080 = !DILocation(line: 99, column: 79, scope: !6079, inlinedAt: !6081)
!6081 = distinct !DILocation(line: 330, column: 2, scope: !6076, inlinedAt: !6077)
!6082 = !DILocalVariable(name: "size", arg: 2, scope: !6079, file: !5235, line: 99, type: !306)
!6083 = !DILocation(line: 99, column: 89, scope: !6079, inlinedAt: !6081)
!6084 = !DILocalVariable(name: "v", arg: 1, scope: !6076, file: !5229, line: 328, type: !5225)
!6085 = !DILocation(line: 328, column: 22, scope: !6076, inlinedAt: !6077)
!6086 = !DILocation(line: 327, column: 67, scope: !5209, inlinedAt: !6087)
!6087 = distinct !DILocation(line: 1018, column: 2, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 1018, column: 2)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 1018, column: 2)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 1018, column: 2)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 1018, column: 2)
!6092 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1018, column: 2)
!6093 = !DILocalVariable(name: "vb", arg: 1, scope: !6064, file: !3, line: 992, type: !181)
!6094 = !DILocation(line: 992, column: 41, scope: !6064)
!6095 = !DILocalVariable(name: "state", arg: 2, scope: !6064, file: !3, line: 992, type: !129)
!6096 = !DILocation(line: 992, column: 67, scope: !6064)
!6097 = !DILocalVariable(name: "q", scope: !6064, file: !3, line: 994, type: !185)
!6098 = !DILocation(line: 994, column: 20, scope: !6064)
!6099 = !DILocation(line: 994, column: 24, scope: !6064)
!6100 = !DILocation(line: 994, column: 28, scope: !6064)
!6101 = !DILocalVariable(name: "flags", scope: !6064, file: !3, line: 995, type: !309)
!6102 = !DILocation(line: 995, column: 16, scope: !6064)
!6103 = !DILocalVariable(name: "__ret_warn_on", scope: !6104, file: !3, line: 997, type: !243)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 997, column: 6)
!6105 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 997, column: 6)
!6106 = !DILocation(line: 997, column: 6, scope: !6104)
!6107 = !DILocation(line: 997, column: 6, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 997, column: 6)
!6109 = !DILocation(line: 997, column: 6, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 997, column: 6)
!6111 = !DILocation(line: 997, column: 6, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 997, column: 6)
!6113 = !DILocation(line: 997, column: 6, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 997, column: 6)
!6115 = !{i32 -2140605996, i32 -2140605967, i32 -2140605921, i32 -2140605863, i32 -2140605809, i32 -2140605755, i32 -2140605700, i32 -2140605669}
!6116 = !DILocation(line: 997, column: 6, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 997, column: 6)
!6118 = !{i32 -2140605240, i32 -2140605233, i32 -2140605181, i32 -2140605150, i32 -2140605120}
!6119 = !DILocation(line: 997, column: 6, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 997, column: 6)
!6121 = !DILocation(line: 997, column: 6, scope: !6105)
!6122 = !DILocation(line: 997, column: 6, scope: !6064)
!6123 = !DILocation(line: 998, column: 3, scope: !6105)
!6124 = !DILocalVariable(name: "__ret_warn_on", scope: !6125, file: !3, line: 1000, type: !243)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 1000, column: 6)
!6126 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1000, column: 6)
!6127 = !DILocation(line: 1000, column: 6, scope: !6125)
!6128 = !DILocation(line: 0, scope: !6125)
!6129 = !DILocation(line: 1000, column: 6, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 1000, column: 6)
!6131 = !DILocation(line: 1000, column: 6, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6130, file: !3, line: 1000, column: 6)
!6133 = !DILocation(line: 1000, column: 6, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 1000, column: 6)
!6135 = !DILocation(line: 1000, column: 6, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 1000, column: 6)
!6137 = !{i32 -2140604444, i32 -2140604415, i32 -2140604369, i32 -2140604311, i32 -2140604257, i32 -2140604203, i32 -2140604148, i32 -2140604117}
!6138 = !DILocation(line: 1000, column: 6, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 1000, column: 6)
!6140 = !{i32 -2140603687, i32 -2140603680, i32 -2140603628, i32 -2140603597, i32 -2140603567}
!6141 = !DILocation(line: 1000, column: 6, scope: !6142)
!6142 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 1000, column: 6)
!6143 = !DILocation(line: 1000, column: 6, scope: !6126)
!6144 = !DILocation(line: 1000, column: 6, scope: !6064)
!6145 = !DILocation(line: 1003, column: 9, scope: !6126)
!6146 = !DILocation(line: 1003, column: 3, scope: !6126)
!6147 = !DILocation(line: 1012, column: 2, scope: !6064)
!6148 = !DILocation(line: 1012, column: 2, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 1012, column: 2)
!6150 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1012, column: 2)
!6151 = !DILocation(line: 1012, column: 2, scope: !6150)
!6152 = !DILocation(line: 1015, column: 6, scope: !6153)
!6153 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1015, column: 6)
!6154 = !DILocation(line: 1015, column: 12, scope: !6153)
!6155 = !DILocation(line: 1015, column: 6, scope: !6064)
!6156 = !DILocation(line: 1016, column: 24, scope: !6153)
!6157 = !DILocation(line: 1016, column: 3, scope: !6153)
!6158 = !DILocation(line: 1018, column: 2, scope: !6064)
!6159 = !DILocation(line: 1018, column: 2, scope: !6092)
!6160 = !DILocalVariable(name: "__dummy", scope: !6161, file: !3, line: 1018, type: !309)
!6161 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 1018, column: 2)
!6162 = !DILocation(line: 1018, column: 2, scope: !6161)
!6163 = !DILocalVariable(name: "__dummy2", scope: !6161, file: !3, line: 1018, type: !309)
!6164 = !DILocation(line: 1018, column: 2, scope: !6091)
!6165 = !DILocation(line: 1018, column: 2, scope: !6090)
!6166 = !DILocation(line: 1018, column: 2, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 1018, column: 2)
!6168 = !DILocalVariable(name: "__dummy", scope: !6169, file: !3, line: 1018, type: !309)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !3, line: 1018, column: 2)
!6170 = distinct !DILexicalBlock(scope: !6167, file: !3, line: 1018, column: 2)
!6171 = !DILocation(line: 1018, column: 2, scope: !6169)
!6172 = !DILocalVariable(name: "__dummy2", scope: !6169, file: !3, line: 1018, type: !309)
!6173 = !DILocation(line: 1018, column: 2, scope: !6170)
!6174 = !DILocation(line: 1018, column: 2, scope: !6089)
!6175 = !{i32 -2140602095}
!6176 = !DILocation(line: 1018, column: 2, scope: !6088)
!6177 = !DILocation(line: 329, column: 10, scope: !5209, inlinedAt: !6087)
!6178 = !DILocation(line: 329, column: 16, scope: !5209, inlinedAt: !6087)
!6179 = !DILocation(line: 1019, column: 6, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1019, column: 6)
!6181 = !DILocation(line: 1019, column: 12, scope: !6180)
!6182 = !DILocation(line: 1019, column: 6, scope: !6064)
!6183 = !DILocation(line: 1020, column: 3, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 1019, column: 37)
!6185 = !DILocation(line: 1020, column: 7, scope: !6184)
!6186 = !DILocation(line: 1020, column: 13, scope: !6184)
!6187 = !DILocation(line: 1021, column: 2, scope: !6184)
!6188 = !DILocation(line: 1023, column: 18, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 1021, column: 9)
!6190 = !DILocation(line: 1023, column: 22, scope: !6189)
!6191 = !DILocation(line: 1023, column: 35, scope: !6189)
!6192 = !DILocation(line: 1023, column: 38, scope: !6189)
!6193 = !DILocation(line: 1023, column: 3, scope: !6189)
!6194 = !DILocation(line: 1024, column: 15, scope: !6189)
!6195 = !DILocation(line: 1024, column: 3, scope: !6189)
!6196 = !DILocation(line: 1024, column: 7, scope: !6189)
!6197 = !DILocation(line: 1024, column: 13, scope: !6189)
!6198 = !DILocation(line: 1026, column: 14, scope: !6064)
!6199 = !DILocation(line: 1026, column: 17, scope: !6064)
!6200 = !DILocation(line: 330, column: 31, scope: !6076, inlinedAt: !6077)
!6201 = !DILocation(line: 101, column: 20, scope: !6079, inlinedAt: !6081)
!6202 = !DILocation(line: 101, column: 23, scope: !6079, inlinedAt: !6081)
!6203 = !DILocation(line: 101, column: 2, scope: !6079, inlinedAt: !6081)
!6204 = !DILocation(line: 102, column: 2, scope: !6079, inlinedAt: !6081)
!6205 = !DILocation(line: 331, column: 18, scope: !6076, inlinedAt: !6077)
!6206 = !DILocation(line: 109, column: 16, scope: !6071, inlinedAt: !6075)
!6207 = !DILocation(line: 109, column: 19, scope: !6071, inlinedAt: !6075)
!6208 = !DILocation(line: 108, column: 2, scope: !6071, inlinedAt: !6075)
!6209 = !{i32 -2146544551}
!6210 = !DILocation(line: 1028, column: 6, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1028, column: 6)
!6212 = !DILocation(line: 1028, column: 12, scope: !6211)
!6213 = !DILocation(line: 1028, column: 36, scope: !6211)
!6214 = !DILocation(line: 1028, column: 39, scope: !6211)
!6215 = !DILocation(line: 1028, column: 43, scope: !6211)
!6216 = !DILocation(line: 1028, column: 51, scope: !6211)
!6217 = !DILocation(line: 1028, column: 6, scope: !6064)
!6218 = !DILocation(line: 1029, column: 32, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 1028, column: 56)
!6220 = !DILocation(line: 1029, column: 36, scope: !6219)
!6221 = !DILocation(line: 1029, column: 3, scope: !6219)
!6222 = !DILocation(line: 1030, column: 29, scope: !6219)
!6223 = !DILocation(line: 1030, column: 33, scope: !6219)
!6224 = !DILocation(line: 1030, column: 3, scope: !6219)
!6225 = !DILocation(line: 1031, column: 2, scope: !6219)
!6226 = !DILocation(line: 1033, column: 26, scope: !6064)
!6227 = !DILocation(line: 1033, column: 29, scope: !6064)
!6228 = !DILocation(line: 1033, column: 40, scope: !6064)
!6229 = !DILocation(line: 409, column: 2, scope: !5455, inlinedAt: !6068)
!6230 = !DILocation(line: 409, column: 2, scope: !5460, inlinedAt: !6068)
!6231 = !DILocation(line: 409, column: 2, scope: !5461, inlinedAt: !6068)
!6232 = !DILocation(line: 409, column: 2, scope: !5468, inlinedAt: !6068)
!6233 = !DILocation(line: 409, column: 2, scope: !5471, inlinedAt: !6068)
!6234 = !DILocation(line: 1035, column: 21, scope: !6064)
!6235 = !DILocation(line: 1035, column: 24, scope: !6064)
!6236 = !DILocation(line: 1035, column: 2, scope: !6064)
!6237 = !DILocation(line: 1037, column: 10, scope: !6064)
!6238 = !DILocation(line: 1037, column: 2, scope: !6064)
!6239 = !DILocation(line: 1039, column: 3, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 1037, column: 17)
!6241 = !DILocation(line: 1042, column: 3, scope: !6240)
!6242 = !DILocation(line: 1043, column: 3, scope: !6240)
!6243 = !DILocation(line: 1045, column: 1, scope: !6064)
!6244 = !DILocalVariable(name: "s", arg: 1, scope: !4637, file: !3, line: 194, type: !129)
!6245 = !DILocation(line: 194, column: 57, scope: !4637)
!6246 = !DILocation(line: 206, column: 21, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 206, column: 6)
!6248 = !DILocation(line: 206, column: 6, scope: !6247)
!6249 = !DILocation(line: 206, column: 24, scope: !6247)
!6250 = !DILocation(line: 206, column: 6, scope: !4637)
!6251 = !DILocation(line: 207, column: 22, scope: !6247)
!6252 = !DILocation(line: 207, column: 10, scope: !6247)
!6253 = !DILocation(line: 207, column: 3, scope: !6247)
!6254 = !DILocation(line: 208, column: 2, scope: !4637)
!6255 = !DILocation(line: 209, column: 1, scope: !4637)
!6256 = distinct !DISubprogram(name: "__vb2_buf_mem_finish", scope: !3, file: !3, line: 341, type: !3966, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6257 = !DILocalVariable(name: "vb", arg: 1, scope: !6256, file: !3, line: 341, type: !181)
!6258 = !DILocation(line: 341, column: 53, scope: !6256)
!6259 = !DILocalVariable(name: "plane", scope: !6256, file: !3, line: 343, type: !7)
!6260 = !DILocation(line: 343, column: 15, scope: !6256)
!6261 = !DILocation(line: 345, column: 7, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 345, column: 6)
!6263 = !DILocation(line: 345, column: 11, scope: !6262)
!6264 = !DILocation(line: 345, column: 6, scope: !6256)
!6265 = !DILocation(line: 346, column: 3, scope: !6262)
!6266 = !DILocation(line: 348, column: 6, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 348, column: 6)
!6268 = !DILocation(line: 348, column: 10, scope: !6267)
!6269 = !DILocation(line: 348, column: 6, scope: !6256)
!6270 = !DILocation(line: 349, column: 14, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6272, file: !3, line: 349, column: 3)
!6272 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 348, column: 37)
!6273 = !DILocation(line: 349, column: 8, scope: !6271)
!6274 = !DILocation(line: 349, column: 19, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 349, column: 3)
!6276 = !DILocation(line: 349, column: 27, scope: !6275)
!6277 = !DILocation(line: 349, column: 31, scope: !6275)
!6278 = !DILocation(line: 349, column: 25, scope: !6275)
!6279 = !DILocation(line: 349, column: 3, scope: !6271)
!6280 = !DILocation(line: 350, column: 4, scope: !6275)
!6281 = !DILocation(line: 350, column: 4, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 350, column: 4)
!6283 = distinct !DILexicalBlock(scope: !6275, file: !3, line: 350, column: 4)
!6284 = !DILocation(line: 350, column: 4, scope: !6283)
!6285 = !DILocation(line: 349, column: 43, scope: !6275)
!6286 = !DILocation(line: 349, column: 3, scope: !6275)
!6287 = distinct !{!6287, !6279, !6288}
!6288 = !DILocation(line: 350, column: 4, scope: !6271)
!6289 = !DILocation(line: 352, column: 2, scope: !6272)
!6290 = !DILocation(line: 353, column: 2, scope: !6256)
!6291 = !DILocation(line: 353, column: 6, scope: !6256)
!6292 = !DILocation(line: 353, column: 13, scope: !6256)
!6293 = !DILocation(line: 354, column: 1, scope: !6256)
!6294 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !6295, file: !6295, line: 666, type: !6296, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6295 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!6296 = !DISubroutineType(types: !6297)
!6297 = !{!309}
!6298 = !DILocalVariable(name: "f", scope: !6294, file: !6295, line: 668, type: !309)
!6299 = !DILocation(line: 668, column: 16, scope: !6294)
!6300 = !DILocation(line: 670, column: 6, scope: !6294)
!6301 = !DILocation(line: 670, column: 4, scope: !6294)
!6302 = !DILocation(line: 671, column: 2, scope: !6294)
!6303 = !DILocation(line: 672, column: 9, scope: !6294)
!6304 = !DILocation(line: 672, column: 2, scope: !6294)
!6305 = distinct !DISubprogram(name: "list_add_tail", scope: !6306, file: !6306, line: 98, type: !6307, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6306 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6307 = !DISubroutineType(types: !6308)
!6308 = !{null, !207, !207}
!6309 = !DILocalVariable(name: "new", arg: 1, scope: !6305, file: !6306, line: 98, type: !207)
!6310 = !DILocation(line: 98, column: 52, scope: !6305)
!6311 = !DILocalVariable(name: "head", arg: 2, scope: !6305, file: !6306, line: 98, type: !207)
!6312 = !DILocation(line: 98, column: 75, scope: !6305)
!6313 = !DILocation(line: 100, column: 13, scope: !6305)
!6314 = !DILocation(line: 100, column: 18, scope: !6305)
!6315 = !DILocation(line: 100, column: 24, scope: !6305)
!6316 = !DILocation(line: 100, column: 30, scope: !6305)
!6317 = !DILocation(line: 100, column: 2, scope: !6305)
!6318 = !DILocation(line: 101, column: 1, scope: !6305)
!6319 = distinct !DISubprogram(name: "trace_vb2_buf_done", scope: !6320, file: !6320, line: 46, type: !6321, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6320 = !DIFile(filename: "./include/trace/events/vb2.h", directory: "/home/lizy2001/genbc/linux")
!6321 = !DISubroutineType(types: !6322)
!6322 = !{null, !185, !181}
!6323 = !DILocalVariable(name: "q", arg: 1, scope: !6319, file: !6320, line: 46, type: !185)
!6324 = !DILocation(line: 46, column: 1, scope: !6319)
!6325 = !DILocalVariable(name: "vb", arg: 2, scope: !6319, file: !6320, line: 46, type: !181)
!6326 = distinct !DISubprogram(name: "vb2_discard_done", scope: !3, file: !3, line: 1048, type: !3955, scopeLine: 1049, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6327 = !DILocation(line: 407, column: 64, scope: !5195, inlinedAt: !6328)
!6328 = distinct !DILocation(line: 1056, column: 2, scope: !6326)
!6329 = !DILocation(line: 407, column: 84, scope: !5195, inlinedAt: !6328)
!6330 = !DILocation(line: 327, column: 67, scope: !5209, inlinedAt: !6331)
!6331 = distinct !DILocation(line: 1053, column: 2, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 1053, column: 2)
!6333 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 1053, column: 2)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 1053, column: 2)
!6335 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 1053, column: 2)
!6336 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 1053, column: 2)
!6337 = !DILocalVariable(name: "q", arg: 1, scope: !6326, file: !3, line: 1048, type: !185)
!6338 = !DILocation(line: 1048, column: 41, scope: !6326)
!6339 = !DILocalVariable(name: "vb", scope: !6326, file: !3, line: 1050, type: !181)
!6340 = !DILocation(line: 1050, column: 21, scope: !6326)
!6341 = !DILocalVariable(name: "flags", scope: !6326, file: !3, line: 1051, type: !309)
!6342 = !DILocation(line: 1051, column: 16, scope: !6326)
!6343 = !DILocation(line: 1053, column: 2, scope: !6326)
!6344 = !DILocation(line: 1053, column: 2, scope: !6336)
!6345 = !DILocalVariable(name: "__dummy", scope: !6346, file: !3, line: 1053, type: !309)
!6346 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 1053, column: 2)
!6347 = !DILocation(line: 1053, column: 2, scope: !6346)
!6348 = !DILocalVariable(name: "__dummy2", scope: !6346, file: !3, line: 1053, type: !309)
!6349 = !DILocation(line: 1053, column: 2, scope: !6335)
!6350 = !DILocation(line: 1053, column: 2, scope: !6334)
!6351 = !DILocation(line: 1053, column: 2, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 1053, column: 2)
!6353 = !DILocalVariable(name: "__dummy", scope: !6354, file: !3, line: 1053, type: !309)
!6354 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1053, column: 2)
!6355 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1053, column: 2)
!6356 = !DILocation(line: 1053, column: 2, scope: !6354)
!6357 = !DILocalVariable(name: "__dummy2", scope: !6354, file: !3, line: 1053, type: !309)
!6358 = !DILocation(line: 1053, column: 2, scope: !6355)
!6359 = !DILocation(line: 1053, column: 2, scope: !6333)
!6360 = !{i32 -2140600837}
!6361 = !DILocation(line: 1053, column: 2, scope: !6332)
!6362 = !DILocation(line: 329, column: 10, scope: !5209, inlinedAt: !6331)
!6363 = !DILocation(line: 329, column: 16, scope: !5209, inlinedAt: !6331)
!6364 = !DILocalVariable(name: "__mptr", scope: !6365, file: !3, line: 1054, type: !180)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 1054, column: 2)
!6366 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 1054, column: 2)
!6367 = !DILocation(line: 1054, column: 2, scope: !6365)
!6368 = !DILocation(line: 1054, column: 2, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 1054, column: 2)
!6370 = !DILocation(line: 1054, column: 2, scope: !6366)
!6371 = !DILocation(line: 1054, column: 2, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 1054, column: 2)
!6373 = !DILocation(line: 1055, column: 3, scope: !6372)
!6374 = !DILocation(line: 1055, column: 7, scope: !6372)
!6375 = !DILocation(line: 1055, column: 13, scope: !6372)
!6376 = !DILocalVariable(name: "__mptr", scope: !6377, file: !3, line: 1054, type: !180)
!6377 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 1054, column: 2)
!6378 = !DILocation(line: 1054, column: 2, scope: !6377)
!6379 = !DILocation(line: 1054, column: 2, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6377, file: !3, line: 1054, column: 2)
!6381 = distinct !{!6381, !6370, !6382}
!6382 = !DILocation(line: 1055, column: 15, scope: !6366)
!6383 = !DILocation(line: 1056, column: 26, scope: !6326)
!6384 = !DILocation(line: 1056, column: 29, scope: !6326)
!6385 = !DILocation(line: 1056, column: 40, scope: !6326)
!6386 = !DILocation(line: 409, column: 2, scope: !5455, inlinedAt: !6328)
!6387 = !DILocation(line: 409, column: 2, scope: !5460, inlinedAt: !6328)
!6388 = !DILocation(line: 409, column: 2, scope: !5461, inlinedAt: !6328)
!6389 = !DILocation(line: 409, column: 2, scope: !5468, inlinedAt: !6328)
!6390 = !DILocation(line: 409, column: 2, scope: !5471, inlinedAt: !6328)
!6391 = !DILocation(line: 1057, column: 1, scope: !6326)
!6392 = distinct !DISubprogram(name: "vb2_request_object_is_buffer", scope: !3, file: !3, line: 1458, type: !6393, scopeLine: 1459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6393 = !DISubroutineType(types: !6394)
!6394 = !{!475, !4515}
!6395 = !DILocalVariable(name: "obj", arg: 1, scope: !6392, file: !3, line: 1458, type: !4515)
!6396 = !DILocation(line: 1458, column: 64, scope: !6392)
!6397 = !DILocation(line: 1460, column: 9, scope: !6392)
!6398 = !DILocation(line: 1460, column: 14, scope: !6392)
!6399 = !DILocation(line: 1460, column: 18, scope: !6392)
!6400 = !DILocation(line: 1460, column: 2, scope: !6392)
!6401 = distinct !DISubprogram(name: "vb2_request_buffer_cnt", scope: !3, file: !3, line: 1464, type: !6402, scopeLine: 1465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6402 = !DISubroutineType(types: !6403)
!6403 = !{!7, !4292}
!6404 = !DILocation(line: 407, column: 64, scope: !5195, inlinedAt: !6405)
!6405 = distinct !DILocation(line: 1474, column: 2, scope: !6401)
!6406 = !DILocation(line: 407, column: 84, scope: !5195, inlinedAt: !6405)
!6407 = !DILocation(line: 327, column: 67, scope: !5209, inlinedAt: !6408)
!6408 = distinct !DILocation(line: 1470, column: 2, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1470, column: 2)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1470, column: 2)
!6411 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 1470, column: 2)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 1470, column: 2)
!6413 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 1470, column: 2)
!6414 = !DILocalVariable(name: "req", arg: 1, scope: !6401, file: !3, line: 1464, type: !4292)
!6415 = !DILocation(line: 1464, column: 59, scope: !6401)
!6416 = !DILocalVariable(name: "obj", scope: !6401, file: !3, line: 1466, type: !4515)
!6417 = !DILocation(line: 1466, column: 31, scope: !6401)
!6418 = !DILocalVariable(name: "flags", scope: !6401, file: !3, line: 1467, type: !309)
!6419 = !DILocation(line: 1467, column: 16, scope: !6401)
!6420 = !DILocalVariable(name: "buffer_cnt", scope: !6401, file: !3, line: 1468, type: !7)
!6421 = !DILocation(line: 1468, column: 15, scope: !6401)
!6422 = !DILocation(line: 1470, column: 2, scope: !6401)
!6423 = !DILocation(line: 1470, column: 2, scope: !6413)
!6424 = !DILocalVariable(name: "__dummy", scope: !6425, file: !3, line: 1470, type: !309)
!6425 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 1470, column: 2)
!6426 = !DILocation(line: 1470, column: 2, scope: !6425)
!6427 = !DILocalVariable(name: "__dummy2", scope: !6425, file: !3, line: 1470, type: !309)
!6428 = !DILocation(line: 1470, column: 2, scope: !6412)
!6429 = !DILocation(line: 1470, column: 2, scope: !6411)
!6430 = !DILocation(line: 1470, column: 2, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1470, column: 2)
!6432 = !DILocalVariable(name: "__dummy", scope: !6433, file: !3, line: 1470, type: !309)
!6433 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 1470, column: 2)
!6434 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 1470, column: 2)
!6435 = !DILocation(line: 1470, column: 2, scope: !6433)
!6436 = !DILocalVariable(name: "__dummy2", scope: !6433, file: !3, line: 1470, type: !309)
!6437 = !DILocation(line: 1470, column: 2, scope: !6434)
!6438 = !DILocation(line: 1470, column: 2, scope: !6410)
!6439 = !{i32 -2140572653}
!6440 = !DILocation(line: 1470, column: 2, scope: !6409)
!6441 = !DILocation(line: 329, column: 10, scope: !5209, inlinedAt: !6408)
!6442 = !DILocation(line: 329, column: 16, scope: !5209, inlinedAt: !6408)
!6443 = !DILocalVariable(name: "__mptr", scope: !6444, file: !3, line: 1471, type: !180)
!6444 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 1471, column: 2)
!6445 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 1471, column: 2)
!6446 = !DILocation(line: 1471, column: 2, scope: !6444)
!6447 = !DILocation(line: 1471, column: 2, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 1471, column: 2)
!6449 = !DILocation(line: 1471, column: 2, scope: !6445)
!6450 = !DILocation(line: 1471, column: 2, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6445, file: !3, line: 1471, column: 2)
!6452 = !DILocation(line: 1472, column: 36, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1472, column: 7)
!6454 = !DILocation(line: 1472, column: 7, scope: !6453)
!6455 = !DILocation(line: 1472, column: 7, scope: !6451)
!6456 = !DILocation(line: 1473, column: 14, scope: !6453)
!6457 = !DILocation(line: 1473, column: 4, scope: !6453)
!6458 = !DILocation(line: 1472, column: 39, scope: !6453)
!6459 = !DILocalVariable(name: "__mptr", scope: !6460, file: !3, line: 1471, type: !180)
!6460 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1471, column: 2)
!6461 = !DILocation(line: 1471, column: 2, scope: !6460)
!6462 = !DILocation(line: 1471, column: 2, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6460, file: !3, line: 1471, column: 2)
!6464 = distinct !{!6464, !6449, !6465}
!6465 = !DILocation(line: 1473, column: 14, scope: !6445)
!6466 = !DILocation(line: 1474, column: 26, scope: !6401)
!6467 = !DILocation(line: 1474, column: 31, scope: !6401)
!6468 = !DILocation(line: 1474, column: 37, scope: !6401)
!6469 = !DILocation(line: 409, column: 2, scope: !5455, inlinedAt: !6405)
!6470 = !DILocation(line: 409, column: 2, scope: !5460, inlinedAt: !6405)
!6471 = !DILocation(line: 409, column: 2, scope: !5461, inlinedAt: !6405)
!6472 = !DILocation(line: 409, column: 2, scope: !5468, inlinedAt: !6405)
!6473 = !DILocation(line: 409, column: 2, scope: !5471, inlinedAt: !6405)
!6474 = !DILocation(line: 1476, column: 9, scope: !6401)
!6475 = !DILocation(line: 1476, column: 2, scope: !6401)
!6476 = distinct !DISubprogram(name: "vb2_core_prepare_buf", scope: !3, file: !3, line: 1480, type: !6477, scopeLine: 1481, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{!243, !185, !7, !180}
!6479 = !DILocalVariable(name: "q", arg: 1, scope: !6476, file: !3, line: 1480, type: !185)
!6480 = !DILocation(line: 1480, column: 44, scope: !6476)
!6481 = !DILocalVariable(name: "index", arg: 2, scope: !6476, file: !3, line: 1480, type: !7)
!6482 = !DILocation(line: 1480, column: 60, scope: !6476)
!6483 = !DILocalVariable(name: "pb", arg: 3, scope: !6476, file: !3, line: 1480, type: !180)
!6484 = !DILocation(line: 1480, column: 73, scope: !6476)
!6485 = !DILocalVariable(name: "vb", scope: !6476, file: !3, line: 1482, type: !181)
!6486 = !DILocation(line: 1482, column: 21, scope: !6476)
!6487 = !DILocalVariable(name: "ret", scope: !6476, file: !3, line: 1483, type: !243)
!6488 = !DILocation(line: 1483, column: 6, scope: !6476)
!6489 = !DILocation(line: 1485, column: 7, scope: !6476)
!6490 = !DILocation(line: 1485, column: 10, scope: !6476)
!6491 = !DILocation(line: 1485, column: 15, scope: !6476)
!6492 = !DILocation(line: 1485, column: 5, scope: !6476)
!6493 = !DILocation(line: 1486, column: 6, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 1486, column: 6)
!6495 = !DILocation(line: 1486, column: 10, scope: !6494)
!6496 = !DILocation(line: 1486, column: 16, scope: !6494)
!6497 = !DILocation(line: 1486, column: 6, scope: !6476)
!6498 = !DILocation(line: 1487, column: 3, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 1486, column: 43)
!6500 = !DILocation(line: 1487, column: 3, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6502, file: !3, line: 1487, column: 3)
!6502 = distinct !DILexicalBlock(scope: !6499, file: !3, line: 1487, column: 3)
!6503 = !DILocation(line: 1487, column: 3, scope: !6502)
!6504 = !DILocation(line: 1489, column: 3, scope: !6499)
!6505 = !DILocation(line: 1491, column: 6, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 1491, column: 6)
!6507 = !DILocation(line: 1491, column: 10, scope: !6506)
!6508 = !DILocation(line: 1491, column: 6, scope: !6476)
!6509 = !DILocation(line: 1492, column: 3, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 1491, column: 20)
!6511 = !DILocation(line: 1492, column: 3, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 1492, column: 3)
!6513 = distinct !DILexicalBlock(scope: !6510, file: !3, line: 1492, column: 3)
!6514 = !DILocation(line: 1492, column: 3, scope: !6513)
!6515 = !DILocation(line: 1493, column: 3, scope: !6510)
!6516 = !DILocation(line: 1496, column: 22, scope: !6476)
!6517 = !DILocation(line: 1496, column: 8, scope: !6476)
!6518 = !DILocation(line: 1496, column: 6, scope: !6476)
!6519 = !DILocation(line: 1497, column: 6, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 1497, column: 6)
!6521 = !DILocation(line: 1497, column: 6, scope: !6476)
!6522 = !DILocation(line: 1498, column: 10, scope: !6520)
!6523 = !DILocation(line: 1498, column: 3, scope: !6520)
!6524 = !DILocation(line: 1501, column: 2, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 1501, column: 2)
!6526 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 1501, column: 2)
!6527 = !DILocation(line: 1501, column: 2, scope: !6526)
!6528 = !DILocation(line: 1503, column: 2, scope: !6476)
!6529 = !DILocation(line: 1503, column: 2, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 1503, column: 2)
!6531 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 1503, column: 2)
!6532 = !DILocation(line: 1503, column: 2, scope: !6531)
!6533 = !DILocation(line: 1505, column: 2, scope: !6476)
!6534 = !DILocation(line: 1506, column: 1, scope: !6476)
!6535 = distinct !DISubprogram(name: "__buf_prepare", scope: !3, file: !3, line: 1337, type: !3960, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6536 = !DILocalVariable(name: "vb", arg: 1, scope: !6535, file: !3, line: 1337, type: !181)
!6537 = !DILocation(line: 1337, column: 45, scope: !6535)
!6538 = !DILocalVariable(name: "q", scope: !6535, file: !3, line: 1339, type: !185)
!6539 = !DILocation(line: 1339, column: 20, scope: !6535)
!6540 = !DILocation(line: 1339, column: 24, scope: !6535)
!6541 = !DILocation(line: 1339, column: 28, scope: !6535)
!6542 = !DILocalVariable(name: "orig_state", scope: !6535, file: !3, line: 1340, type: !129)
!6543 = !DILocation(line: 1340, column: 24, scope: !6535)
!6544 = !DILocation(line: 1340, column: 37, scope: !6535)
!6545 = !DILocation(line: 1340, column: 41, scope: !6535)
!6546 = !DILocalVariable(name: "ret", scope: !6535, file: !3, line: 1341, type: !243)
!6547 = !DILocation(line: 1341, column: 6, scope: !6535)
!6548 = !DILocation(line: 1343, column: 6, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 1343, column: 6)
!6550 = !DILocation(line: 1343, column: 9, scope: !6549)
!6551 = !DILocation(line: 1343, column: 6, scope: !6535)
!6552 = !DILocation(line: 1344, column: 3, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 1343, column: 16)
!6554 = !DILocation(line: 1344, column: 3, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 1344, column: 3)
!6556 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 1344, column: 3)
!6557 = !DILocation(line: 1344, column: 3, scope: !6556)
!6558 = !DILocation(line: 1345, column: 3, scope: !6553)
!6559 = !DILocation(line: 1348, column: 6, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 1348, column: 6)
!6561 = !DILocation(line: 1348, column: 10, scope: !6560)
!6562 = !DILocation(line: 1348, column: 6, scope: !6535)
!6563 = !DILocation(line: 1349, column: 3, scope: !6560)
!6564 = !DILocalVariable(name: "__ret_warn_on", scope: !6565, file: !3, line: 1350, type: !243)
!6565 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 1350, column: 2)
!6566 = !DILocation(line: 1350, column: 2, scope: !6565)
!6567 = !DILocation(line: 1350, column: 2, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 1350, column: 2)
!6569 = !DILocation(line: 1350, column: 2, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 1350, column: 2)
!6571 = !DILocation(line: 1350, column: 2, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 1350, column: 2)
!6573 = !DILocation(line: 1350, column: 2, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 1350, column: 2)
!6575 = !{i32 -2140587694, i32 -2140587665, i32 -2140587619, i32 -2140587561, i32 -2140587507, i32 -2140587453, i32 -2140587398, i32 -2140587367}
!6576 = !DILocation(line: 1350, column: 2, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 1350, column: 2)
!6578 = !{i32 -2140586937, i32 -2140586930, i32 -2140586878, i32 -2140586847, i32 -2140586817}
!6579 = !DILocation(line: 1350, column: 2, scope: !6580)
!6580 = distinct !DILexicalBlock(scope: !6570, file: !3, line: 1350, column: 2)
!6581 = !DILocation(line: 1352, column: 6, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 1352, column: 6)
!6583 = !DILocation(line: 1352, column: 9, scope: !6582)
!6584 = !DILocation(line: 1352, column: 6, scope: !6535)
!6585 = !DILocation(line: 1353, column: 9, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6582, file: !3, line: 1352, column: 20)
!6587 = !DILocation(line: 1353, column: 7, scope: !6586)
!6588 = !DILocation(line: 1354, column: 7, scope: !6589)
!6589 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 1354, column: 7)
!6590 = !DILocation(line: 1354, column: 7, scope: !6586)
!6591 = !DILocation(line: 1355, column: 4, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6589, file: !3, line: 1354, column: 12)
!6593 = !DILocation(line: 1355, column: 4, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 1355, column: 4)
!6595 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 1355, column: 4)
!6596 = !DILocation(line: 1355, column: 4, scope: !6595)
!6597 = !DILocation(line: 1356, column: 11, scope: !6592)
!6598 = !DILocation(line: 1356, column: 4, scope: !6592)
!6599 = !DILocation(line: 1358, column: 2, scope: !6586)
!6600 = !DILocation(line: 1360, column: 2, scope: !6535)
!6601 = !DILocation(line: 1360, column: 6, scope: !6535)
!6602 = !DILocation(line: 1360, column: 12, scope: !6535)
!6603 = !DILocation(line: 1362, column: 10, scope: !6535)
!6604 = !DILocation(line: 1362, column: 13, scope: !6535)
!6605 = !DILocation(line: 1362, column: 2, scope: !6535)
!6606 = !DILocation(line: 1364, column: 24, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 1362, column: 21)
!6608 = !DILocation(line: 1364, column: 9, scope: !6607)
!6609 = !DILocation(line: 1364, column: 7, scope: !6607)
!6610 = !DILocation(line: 1365, column: 3, scope: !6607)
!6611 = !DILocation(line: 1367, column: 27, scope: !6607)
!6612 = !DILocation(line: 1367, column: 9, scope: !6607)
!6613 = !DILocation(line: 1367, column: 7, scope: !6607)
!6614 = !DILocation(line: 1368, column: 3, scope: !6607)
!6615 = !DILocation(line: 1370, column: 26, scope: !6607)
!6616 = !DILocation(line: 1370, column: 9, scope: !6607)
!6617 = !DILocation(line: 1370, column: 7, scope: !6607)
!6618 = !DILocation(line: 1371, column: 3, scope: !6607)
!6619 = !DILocalVariable(name: "__ret_warn_on", scope: !6620, file: !3, line: 1373, type: !243)
!6620 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 1373, column: 3)
!6621 = !DILocation(line: 1373, column: 3, scope: !6620)
!6622 = !DILocation(line: 1373, column: 3, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 1373, column: 3)
!6624 = !DILocation(line: 1373, column: 3, scope: !6625)
!6625 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 1373, column: 3)
!6626 = !DILocation(line: 1373, column: 3, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 1373, column: 3)
!6628 = !DILocation(line: 1373, column: 3, scope: !6629)
!6629 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 1373, column: 3)
!6630 = !DILocation(line: 1373, column: 3, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1373, column: 3)
!6632 = !DILocation(line: 1373, column: 3, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1373, column: 3)
!6634 = !{i32 -2140585528, i32 -2140585499, i32 -2140585453, i32 -2140585395, i32 -2140585341, i32 -2140585287, i32 -2140585232, i32 -2140585201}
!6635 = !DILocation(line: 1373, column: 3, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1373, column: 3)
!6637 = !{i32 -2140584760, i32 -2140584753, i32 -2140584701, i32 -2140584670, i32 -2140584640}
!6638 = !DILocation(line: 1373, column: 3, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1373, column: 3)
!6640 = !DILocation(line: 1373, column: 3, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6625, file: !3, line: 1373, column: 3)
!6642 = !DILocation(line: 1374, column: 7, scope: !6607)
!6643 = !DILocation(line: 1375, column: 3, scope: !6607)
!6644 = !DILocation(line: 1378, column: 6, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6535, file: !3, line: 1378, column: 6)
!6646 = !DILocation(line: 1378, column: 6, scope: !6535)
!6647 = !DILocation(line: 1379, column: 3, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 1378, column: 11)
!6649 = !DILocation(line: 1379, column: 3, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1379, column: 3)
!6651 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 1379, column: 3)
!6652 = !DILocation(line: 1379, column: 3, scope: !6651)
!6653 = !DILocation(line: 1380, column: 15, scope: !6648)
!6654 = !DILocation(line: 1380, column: 3, scope: !6648)
!6655 = !DILocation(line: 1380, column: 7, scope: !6648)
!6656 = !DILocation(line: 1380, column: 13, scope: !6648)
!6657 = !DILocation(line: 1381, column: 10, scope: !6648)
!6658 = !DILocation(line: 1381, column: 3, scope: !6648)
!6659 = !DILocation(line: 1384, column: 24, scope: !6535)
!6660 = !DILocation(line: 1384, column: 2, scope: !6535)
!6661 = !DILocation(line: 1385, column: 2, scope: !6535)
!6662 = !DILocation(line: 1385, column: 6, scope: !6535)
!6663 = !DILocation(line: 1385, column: 15, scope: !6535)
!6664 = !DILocation(line: 1386, column: 14, scope: !6535)
!6665 = !DILocation(line: 1386, column: 2, scope: !6535)
!6666 = !DILocation(line: 1386, column: 6, scope: !6535)
!6667 = !DILocation(line: 1386, column: 12, scope: !6535)
!6668 = !DILocation(line: 1388, column: 2, scope: !6535)
!6669 = !DILocation(line: 1389, column: 1, scope: !6535)
!6670 = distinct !DISubprogram(name: "vb2_core_qbuf", scope: !3, file: !3, line: 1572, type: !6671, scopeLine: 1574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6671 = !DISubroutineType(types: !6672)
!6672 = !{!243, !185, !7, !180, !4292}
!6673 = !DILocalVariable(name: "q", arg: 1, scope: !6670, file: !3, line: 1572, type: !185)
!6674 = !DILocation(line: 1572, column: 37, scope: !6670)
!6675 = !DILocalVariable(name: "index", arg: 2, scope: !6670, file: !3, line: 1572, type: !7)
!6676 = !DILocation(line: 1572, column: 53, scope: !6670)
!6677 = !DILocalVariable(name: "pb", arg: 3, scope: !6670, file: !3, line: 1572, type: !180)
!6678 = !DILocation(line: 1572, column: 66, scope: !6670)
!6679 = !DILocalVariable(name: "req", arg: 4, scope: !6670, file: !3, line: 1573, type: !4292)
!6680 = !DILocation(line: 1573, column: 27, scope: !6670)
!6681 = !DILocalVariable(name: "vb", scope: !6670, file: !3, line: 1575, type: !181)
!6682 = !DILocation(line: 1575, column: 21, scope: !6670)
!6683 = !DILocalVariable(name: "ret", scope: !6670, file: !3, line: 1576, type: !243)
!6684 = !DILocation(line: 1576, column: 6, scope: !6670)
!6685 = !DILocation(line: 1578, column: 6, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1578, column: 6)
!6687 = !DILocation(line: 1578, column: 9, scope: !6686)
!6688 = !DILocation(line: 1578, column: 6, scope: !6670)
!6689 = !DILocation(line: 1579, column: 3, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 1578, column: 16)
!6691 = !DILocation(line: 1579, column: 3, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !3, line: 1579, column: 3)
!6693 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 1579, column: 3)
!6694 = !DILocation(line: 1579, column: 3, scope: !6693)
!6695 = !DILocation(line: 1580, column: 3, scope: !6690)
!6696 = !DILocation(line: 1583, column: 7, scope: !6670)
!6697 = !DILocation(line: 1583, column: 10, scope: !6670)
!6698 = !DILocation(line: 1583, column: 15, scope: !6670)
!6699 = !DILocation(line: 1583, column: 5, scope: !6670)
!6700 = !DILocation(line: 1585, column: 7, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1585, column: 6)
!6702 = !DILocation(line: 1585, column: 11, scope: !6701)
!6703 = !DILocation(line: 1585, column: 14, scope: !6701)
!6704 = !DILocation(line: 1585, column: 18, scope: !6701)
!6705 = !DILocation(line: 1585, column: 24, scope: !6701)
!6706 = !DILocation(line: 1585, column: 52, scope: !6701)
!6707 = !DILocation(line: 1586, column: 6, scope: !6701)
!6708 = !DILocation(line: 1586, column: 9, scope: !6701)
!6709 = !DILocation(line: 1585, column: 6, scope: !6670)
!6710 = !DILocation(line: 1587, column: 3, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 1586, column: 28)
!6712 = !DILocation(line: 1587, column: 3, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 1587, column: 3)
!6714 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 1587, column: 3)
!6715 = !DILocation(line: 1587, column: 3, scope: !6714)
!6716 = !DILocation(line: 1588, column: 3, scope: !6711)
!6717 = !DILocation(line: 1591, column: 7, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1591, column: 6)
!6719 = !DILocation(line: 1591, column: 11, scope: !6718)
!6720 = !DILocation(line: 1591, column: 14, scope: !6718)
!6721 = !DILocation(line: 1591, column: 17, scope: !6718)
!6722 = !DILocation(line: 1591, column: 28, scope: !6718)
!6723 = !DILocation(line: 1592, column: 8, scope: !6718)
!6724 = !DILocation(line: 1592, column: 12, scope: !6718)
!6725 = !DILocation(line: 1592, column: 15, scope: !6718)
!6726 = !DILocation(line: 1592, column: 19, scope: !6718)
!6727 = !DILocation(line: 1592, column: 25, scope: !6718)
!6728 = !DILocation(line: 1592, column: 53, scope: !6718)
!6729 = !DILocation(line: 1593, column: 7, scope: !6718)
!6730 = !DILocation(line: 1593, column: 10, scope: !6718)
!6731 = !DILocation(line: 1591, column: 6, scope: !6670)
!6732 = !DILocation(line: 1594, column: 3, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 1593, column: 26)
!6734 = !DILocation(line: 1594, column: 3, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 1594, column: 3)
!6736 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1594, column: 3)
!6737 = !DILocation(line: 1594, column: 3, scope: !6736)
!6738 = !DILocation(line: 1595, column: 3, scope: !6733)
!6739 = !DILocation(line: 1598, column: 6, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1598, column: 6)
!6741 = !DILocation(line: 1598, column: 6, scope: !6670)
!6742 = !DILocalVariable(name: "ret", scope: !6743, file: !3, line: 1599, type: !243)
!6743 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 1598, column: 11)
!6744 = !DILocation(line: 1599, column: 7, scope: !6743)
!6745 = !DILocation(line: 1601, column: 3, scope: !6743)
!6746 = !DILocation(line: 1601, column: 6, scope: !6743)
!6747 = !DILocation(line: 1601, column: 20, scope: !6743)
!6748 = !DILocation(line: 1602, column: 7, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1602, column: 7)
!6750 = !DILocation(line: 1602, column: 11, scope: !6749)
!6751 = !DILocation(line: 1602, column: 17, scope: !6749)
!6752 = !DILocation(line: 1602, column: 7, scope: !6743)
!6753 = !DILocation(line: 1603, column: 4, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 1602, column: 44)
!6755 = !DILocation(line: 1603, column: 4, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 1603, column: 4)
!6757 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 1603, column: 4)
!6758 = !DILocation(line: 1603, column: 4, scope: !6757)
!6759 = !DILocation(line: 1605, column: 4, scope: !6754)
!6760 = !DILocation(line: 1608, column: 7, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1608, column: 7)
!6762 = !DILocation(line: 1608, column: 10, scope: !6761)
!6763 = !DILocation(line: 1608, column: 20, scope: !6761)
!6764 = !DILocation(line: 1608, column: 24, scope: !6761)
!6765 = !DILocation(line: 1608, column: 28, scope: !6761)
!6766 = !DILocation(line: 1608, column: 7, scope: !6743)
!6767 = !DILocation(line: 1609, column: 10, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 1608, column: 38)
!6769 = !DILocation(line: 1609, column: 8, scope: !6768)
!6770 = !DILocation(line: 1610, column: 8, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 1610, column: 8)
!6772 = !DILocation(line: 1610, column: 8, scope: !6768)
!6773 = !DILocation(line: 1611, column: 5, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 1610, column: 13)
!6775 = !DILocation(line: 1611, column: 5, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 1611, column: 5)
!6777 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 1611, column: 5)
!6778 = !DILocation(line: 1611, column: 5, scope: !6777)
!6779 = !DILocation(line: 1612, column: 12, scope: !6774)
!6780 = !DILocation(line: 1612, column: 5, scope: !6774)
!6781 = !DILocation(line: 1614, column: 3, scope: !6768)
!6782 = !DILocation(line: 1616, column: 30, scope: !6743)
!6783 = !DILocation(line: 1616, column: 34, scope: !6743)
!6784 = !DILocation(line: 1616, column: 3, scope: !6743)
!6785 = !DILocation(line: 1619, column: 39, scope: !6743)
!6786 = !DILocation(line: 1619, column: 9, scope: !6743)
!6787 = !DILocation(line: 1619, column: 7, scope: !6743)
!6788 = !DILocation(line: 1620, column: 7, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1620, column: 7)
!6790 = !DILocation(line: 1620, column: 7, scope: !6743)
!6791 = !DILocation(line: 1621, column: 11, scope: !6789)
!6792 = !DILocation(line: 1621, column: 4, scope: !6789)
!6793 = !DILocation(line: 1622, column: 35, scope: !6743)
!6794 = !DILocation(line: 1623, column: 7, scope: !6743)
!6795 = !DILocation(line: 1623, column: 17, scope: !6743)
!6796 = !DILocation(line: 1623, column: 21, scope: !6743)
!6797 = !DILocation(line: 1622, column: 9, scope: !6743)
!6798 = !DILocation(line: 1622, column: 7, scope: !6743)
!6799 = !DILocation(line: 1624, column: 35, scope: !6743)
!6800 = !DILocation(line: 1624, column: 3, scope: !6743)
!6801 = !DILocation(line: 1625, column: 7, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1625, column: 7)
!6803 = !DILocation(line: 1625, column: 7, scope: !6743)
!6804 = !DILocation(line: 1626, column: 11, scope: !6802)
!6805 = !DILocation(line: 1626, column: 4, scope: !6802)
!6806 = !DILocation(line: 1628, column: 3, scope: !6743)
!6807 = !DILocation(line: 1628, column: 7, scope: !6743)
!6808 = !DILocation(line: 1628, column: 13, scope: !6743)
!6809 = !DILocation(line: 1638, column: 21, scope: !6743)
!6810 = !DILocation(line: 1638, column: 3, scope: !6743)
!6811 = !DILocation(line: 1639, column: 17, scope: !6743)
!6812 = !DILocation(line: 1639, column: 3, scope: !6743)
!6813 = !DILocation(line: 1639, column: 7, scope: !6743)
!6814 = !DILocation(line: 1639, column: 15, scope: !6743)
!6815 = !DILocation(line: 1642, column: 7, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1642, column: 7)
!6817 = !DILocation(line: 1642, column: 7, scope: !6743)
!6818 = !DILocation(line: 1643, column: 4, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 1643, column: 4)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 1643, column: 4)
!6821 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 1642, column: 11)
!6822 = !DILocation(line: 1643, column: 4, scope: !6820)
!6823 = !DILocation(line: 1644, column: 4, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 1644, column: 4)
!6825 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 1644, column: 4)
!6826 = !DILocation(line: 1644, column: 4, scope: !6825)
!6827 = !DILocation(line: 1645, column: 3, scope: !6821)
!6828 = !DILocation(line: 1647, column: 3, scope: !6743)
!6829 = !DILocation(line: 1647, column: 3, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 1647, column: 3)
!6831 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 1647, column: 3)
!6832 = !DILocation(line: 1647, column: 3, scope: !6831)
!6833 = !DILocation(line: 1648, column: 3, scope: !6743)
!6834 = !DILocation(line: 1651, column: 6, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1651, column: 6)
!6836 = !DILocation(line: 1651, column: 10, scope: !6835)
!6837 = !DILocation(line: 1651, column: 16, scope: !6835)
!6838 = !DILocation(line: 1651, column: 6, scope: !6670)
!6839 = !DILocation(line: 1652, column: 3, scope: !6835)
!6840 = !DILocation(line: 1652, column: 6, scope: !6835)
!6841 = !DILocation(line: 1652, column: 16, scope: !6835)
!6842 = !DILocation(line: 1654, column: 10, scope: !6670)
!6843 = !DILocation(line: 1654, column: 14, scope: !6670)
!6844 = !DILocation(line: 1654, column: 2, scope: !6670)
!6845 = !DILocation(line: 1657, column: 8, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 1657, column: 7)
!6847 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1654, column: 21)
!6848 = !DILocation(line: 1657, column: 12, scope: !6846)
!6849 = !DILocation(line: 1657, column: 7, scope: !6847)
!6850 = !DILocation(line: 1658, column: 24, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 1657, column: 22)
!6852 = !DILocation(line: 1658, column: 10, scope: !6851)
!6853 = !DILocation(line: 1658, column: 8, scope: !6851)
!6854 = !DILocation(line: 1659, column: 8, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 1659, column: 8)
!6856 = !DILocation(line: 1659, column: 8, scope: !6851)
!6857 = !DILocation(line: 1660, column: 12, scope: !6855)
!6858 = !DILocation(line: 1660, column: 5, scope: !6855)
!6859 = !DILocation(line: 1661, column: 3, scope: !6851)
!6860 = !DILocation(line: 1662, column: 3, scope: !6847)
!6861 = !DILocation(line: 1664, column: 3, scope: !6847)
!6862 = !DILocation(line: 1664, column: 3, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 1664, column: 3)
!6864 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 1664, column: 3)
!6865 = !DILocation(line: 1664, column: 3, scope: !6864)
!6866 = !DILocation(line: 1665, column: 3, scope: !6847)
!6867 = !DILocation(line: 1667, column: 3, scope: !6847)
!6868 = !DILocation(line: 1667, column: 3, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 1667, column: 3)
!6870 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 1667, column: 3)
!6871 = !DILocation(line: 1667, column: 3, scope: !6870)
!6872 = !DILocation(line: 1669, column: 3, scope: !6847)
!6873 = !DILocation(line: 1676, column: 17, scope: !6670)
!6874 = !DILocation(line: 1676, column: 21, scope: !6670)
!6875 = !DILocation(line: 1676, column: 36, scope: !6670)
!6876 = !DILocation(line: 1676, column: 39, scope: !6670)
!6877 = !DILocation(line: 1676, column: 2, scope: !6670)
!6878 = !DILocation(line: 1677, column: 2, scope: !6670)
!6879 = !DILocation(line: 1677, column: 5, scope: !6670)
!6880 = !DILocation(line: 1677, column: 17, scope: !6670)
!6881 = !DILocation(line: 1678, column: 2, scope: !6670)
!6882 = !DILocation(line: 1678, column: 5, scope: !6670)
!6883 = !DILocation(line: 1678, column: 25, scope: !6670)
!6884 = !DILocation(line: 1679, column: 2, scope: !6670)
!6885 = !DILocation(line: 1679, column: 6, scope: !6670)
!6886 = !DILocation(line: 1679, column: 12, scope: !6670)
!6887 = !DILocation(line: 1681, column: 6, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1681, column: 6)
!6889 = !DILocation(line: 1681, column: 6, scope: !6670)
!6890 = !DILocation(line: 1682, column: 3, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !3, line: 1682, column: 3)
!6892 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 1682, column: 3)
!6893 = !DILocation(line: 1682, column: 3, scope: !6892)
!6894 = !DILocation(line: 1682, column: 3, scope: !6888)
!6895 = !DILocation(line: 1684, column: 17, scope: !6670)
!6896 = !DILocation(line: 1684, column: 20, scope: !6670)
!6897 = !DILocation(line: 1684, column: 2, scope: !6670)
!6898 = !DILocation(line: 1690, column: 6, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1690, column: 6)
!6900 = !DILocation(line: 1690, column: 9, scope: !6899)
!6901 = !DILocation(line: 1690, column: 6, scope: !6670)
!6902 = !DILocation(line: 1691, column: 23, scope: !6899)
!6903 = !DILocation(line: 1691, column: 3, scope: !6899)
!6904 = !DILocation(line: 1694, column: 6, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1694, column: 6)
!6906 = !DILocation(line: 1694, column: 6, scope: !6670)
!6907 = !DILocation(line: 1695, column: 3, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 1695, column: 3)
!6909 = distinct !DILexicalBlock(scope: !6905, file: !3, line: 1695, column: 3)
!6910 = !DILocation(line: 1695, column: 3, scope: !6909)
!6911 = !DILocation(line: 1695, column: 3, scope: !6905)
!6912 = !DILocation(line: 1703, column: 6, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1703, column: 6)
!6914 = !DILocation(line: 1703, column: 9, scope: !6913)
!6915 = !DILocation(line: 1703, column: 19, scope: !6913)
!6916 = !DILocation(line: 1703, column: 23, scope: !6913)
!6917 = !DILocation(line: 1703, column: 26, scope: !6913)
!6918 = !DILocation(line: 1703, column: 49, scope: !6913)
!6919 = !DILocation(line: 1704, column: 6, scope: !6913)
!6920 = !DILocation(line: 1704, column: 9, scope: !6913)
!6921 = !DILocation(line: 1704, column: 25, scope: !6913)
!6922 = !DILocation(line: 1704, column: 28, scope: !6913)
!6923 = !DILocation(line: 1704, column: 22, scope: !6913)
!6924 = !DILocation(line: 1703, column: 6, scope: !6670)
!6925 = !DILocation(line: 1705, column: 29, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 1704, column: 48)
!6927 = !DILocation(line: 1705, column: 9, scope: !6926)
!6928 = !DILocation(line: 1705, column: 7, scope: !6926)
!6929 = !DILocation(line: 1706, column: 7, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 1706, column: 7)
!6931 = !DILocation(line: 1706, column: 7, scope: !6926)
!6932 = !DILocation(line: 1707, column: 11, scope: !6930)
!6933 = !DILocation(line: 1707, column: 4, scope: !6930)
!6934 = !DILocation(line: 1708, column: 2, scope: !6926)
!6935 = !DILocation(line: 1710, column: 2, scope: !6670)
!6936 = !DILocation(line: 1710, column: 2, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !3, line: 1710, column: 2)
!6938 = distinct !DILexicalBlock(scope: !6670, file: !3, line: 1710, column: 2)
!6939 = !DILocation(line: 1710, column: 2, scope: !6938)
!6940 = !DILocation(line: 1711, column: 2, scope: !6670)
!6941 = !DILocation(line: 1712, column: 1, scope: !6670)
!6942 = distinct !DISubprogram(name: "media_request_lock_for_update", scope: !120, file: !120, line: 132, type: !4486, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!6943 = !DILocation(line: 407, column: 64, scope: !5195, inlinedAt: !6944)
!6944 = distinct !DILocation(line: 145, column: 2, scope: !6942)
!6945 = !DILocation(line: 407, column: 84, scope: !5195, inlinedAt: !6944)
!6946 = !DILocation(line: 327, column: 67, scope: !5209, inlinedAt: !6947)
!6947 = distinct !DILocation(line: 137, column: 2, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !120, line: 137, column: 2)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !120, line: 137, column: 2)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !120, line: 137, column: 2)
!6951 = distinct !DILexicalBlock(scope: !6952, file: !120, line: 137, column: 2)
!6952 = distinct !DILexicalBlock(scope: !6942, file: !120, line: 137, column: 2)
!6953 = !DILocalVariable(name: "req", arg: 1, scope: !6942, file: !120, line: 132, type: !4292)
!6954 = !DILocation(line: 132, column: 53, scope: !6942)
!6955 = !DILocalVariable(name: "flags", scope: !6942, file: !120, line: 134, type: !309)
!6956 = !DILocation(line: 134, column: 16, scope: !6942)
!6957 = !DILocalVariable(name: "ret", scope: !6942, file: !120, line: 135, type: !243)
!6958 = !DILocation(line: 135, column: 6, scope: !6942)
!6959 = !DILocation(line: 137, column: 2, scope: !6942)
!6960 = !DILocation(line: 137, column: 2, scope: !6952)
!6961 = !DILocalVariable(name: "__dummy", scope: !6962, file: !120, line: 137, type: !309)
!6962 = distinct !DILexicalBlock(scope: !6951, file: !120, line: 137, column: 2)
!6963 = !DILocation(line: 137, column: 2, scope: !6962)
!6964 = !DILocalVariable(name: "__dummy2", scope: !6962, file: !120, line: 137, type: !309)
!6965 = !DILocation(line: 137, column: 2, scope: !6951)
!6966 = !DILocation(line: 137, column: 2, scope: !6950)
!6967 = !DILocation(line: 137, column: 2, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6950, file: !120, line: 137, column: 2)
!6969 = !DILocalVariable(name: "__dummy", scope: !6970, file: !120, line: 137, type: !309)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !120, line: 137, column: 2)
!6971 = distinct !DILexicalBlock(scope: !6968, file: !120, line: 137, column: 2)
!6972 = !DILocation(line: 137, column: 2, scope: !6970)
!6973 = !DILocalVariable(name: "__dummy2", scope: !6970, file: !120, line: 137, type: !309)
!6974 = !DILocation(line: 137, column: 2, scope: !6971)
!6975 = !DILocation(line: 137, column: 2, scope: !6949)
!6976 = !{i32 -2141832508}
!6977 = !DILocation(line: 137, column: 2, scope: !6948)
!6978 = !DILocation(line: 329, column: 10, scope: !5209, inlinedAt: !6947)
!6979 = !DILocation(line: 329, column: 16, scope: !5209, inlinedAt: !6947)
!6980 = !DILocation(line: 138, column: 6, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6942, file: !120, line: 138, column: 6)
!6982 = !DILocation(line: 138, column: 11, scope: !6981)
!6983 = !DILocation(line: 138, column: 17, scope: !6981)
!6984 = !DILocation(line: 138, column: 45, scope: !6981)
!6985 = !DILocation(line: 139, column: 6, scope: !6981)
!6986 = !DILocation(line: 139, column: 11, scope: !6981)
!6987 = !DILocation(line: 139, column: 17, scope: !6981)
!6988 = !DILocation(line: 138, column: 6, scope: !6942)
!6989 = !DILocation(line: 140, column: 3, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6981, file: !120, line: 139, column: 50)
!6991 = !DILocation(line: 140, column: 8, scope: !6990)
!6992 = !DILocation(line: 140, column: 14, scope: !6990)
!6993 = !DILocation(line: 141, column: 3, scope: !6990)
!6994 = !DILocation(line: 141, column: 8, scope: !6990)
!6995 = !DILocation(line: 141, column: 22, scope: !6990)
!6996 = !DILocation(line: 142, column: 2, scope: !6990)
!6997 = !DILocation(line: 143, column: 7, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6981, file: !120, line: 142, column: 9)
!6999 = !DILocation(line: 145, column: 26, scope: !6942)
!7000 = !DILocation(line: 145, column: 31, scope: !6942)
!7001 = !DILocation(line: 145, column: 37, scope: !6942)
!7002 = !DILocation(line: 409, column: 2, scope: !5455, inlinedAt: !6944)
!7003 = !DILocation(line: 409, column: 2, scope: !5460, inlinedAt: !6944)
!7004 = !DILocation(line: 409, column: 2, scope: !5461, inlinedAt: !6944)
!7005 = !DILocation(line: 409, column: 2, scope: !5468, inlinedAt: !6944)
!7006 = !DILocation(line: 409, column: 2, scope: !5471, inlinedAt: !6944)
!7007 = !DILocation(line: 147, column: 9, scope: !6942)
!7008 = !DILocation(line: 147, column: 2, scope: !6942)
!7009 = distinct !DISubprogram(name: "media_request_unlock_for_update", scope: !120, file: !120, line: 159, type: !4482, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7010 = !DILocation(line: 407, column: 64, scope: !5195, inlinedAt: !7011)
!7011 = distinct !DILocation(line: 167, column: 2, scope: !7009)
!7012 = !DILocation(line: 407, column: 84, scope: !5195, inlinedAt: !7011)
!7013 = !DILocation(line: 327, column: 67, scope: !5209, inlinedAt: !7014)
!7014 = distinct !DILocation(line: 163, column: 2, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !120, line: 163, column: 2)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !120, line: 163, column: 2)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !120, line: 163, column: 2)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !120, line: 163, column: 2)
!7019 = distinct !DILexicalBlock(scope: !7009, file: !120, line: 163, column: 2)
!7020 = !DILocalVariable(name: "req", arg: 1, scope: !7009, file: !120, line: 159, type: !4292)
!7021 = !DILocation(line: 159, column: 74, scope: !7009)
!7022 = !DILocalVariable(name: "flags", scope: !7009, file: !120, line: 161, type: !309)
!7023 = !DILocation(line: 161, column: 16, scope: !7009)
!7024 = !DILocation(line: 163, column: 2, scope: !7009)
!7025 = !DILocation(line: 163, column: 2, scope: !7019)
!7026 = !DILocalVariable(name: "__dummy", scope: !7027, file: !120, line: 163, type: !309)
!7027 = distinct !DILexicalBlock(scope: !7018, file: !120, line: 163, column: 2)
!7028 = !DILocation(line: 163, column: 2, scope: !7027)
!7029 = !DILocalVariable(name: "__dummy2", scope: !7027, file: !120, line: 163, type: !309)
!7030 = !DILocation(line: 163, column: 2, scope: !7018)
!7031 = !DILocation(line: 163, column: 2, scope: !7017)
!7032 = !DILocation(line: 163, column: 2, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7017, file: !120, line: 163, column: 2)
!7034 = !DILocalVariable(name: "__dummy", scope: !7035, file: !120, line: 163, type: !309)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !120, line: 163, column: 2)
!7036 = distinct !DILexicalBlock(scope: !7033, file: !120, line: 163, column: 2)
!7037 = !DILocation(line: 163, column: 2, scope: !7035)
!7038 = !DILocalVariable(name: "__dummy2", scope: !7035, file: !120, line: 163, type: !309)
!7039 = !DILocation(line: 163, column: 2, scope: !7036)
!7040 = !DILocation(line: 163, column: 2, scope: !7016)
!7041 = !{i32 -2141831328}
!7042 = !DILocation(line: 163, column: 2, scope: !7015)
!7043 = !DILocation(line: 329, column: 10, scope: !5209, inlinedAt: !7014)
!7044 = !DILocation(line: 329, column: 16, scope: !5209, inlinedAt: !7014)
!7045 = !DILocalVariable(name: "__ret_warn_on", scope: !7046, file: !120, line: 164, type: !243)
!7046 = distinct !DILexicalBlock(scope: !7009, file: !120, line: 164, column: 2)
!7047 = !DILocation(line: 164, column: 2, scope: !7046)
!7048 = !DILocation(line: 164, column: 2, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7046, file: !120, line: 164, column: 2)
!7050 = !DILocation(line: 164, column: 2, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7049, file: !120, line: 164, column: 2)
!7052 = !DILocation(line: 164, column: 2, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7051, file: !120, line: 164, column: 2)
!7054 = !DILocation(line: 164, column: 2, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7051, file: !120, line: 164, column: 2)
!7056 = !{i32 -2141830696, i32 -2141830667, i32 -2141830621, i32 -2141830563, i32 -2141830509, i32 -2141830455, i32 -2141830400, i32 -2141830369}
!7057 = !DILocation(line: 164, column: 2, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7051, file: !120, line: 164, column: 2)
!7059 = !{i32 -2141829958, i32 -2141829951, i32 -2141829899, i32 -2141829868, i32 -2141829838}
!7060 = !DILocation(line: 164, column: 2, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7051, file: !120, line: 164, column: 2)
!7062 = !DILocation(line: 165, column: 9, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7009, file: !120, line: 165, column: 6)
!7064 = !DILocation(line: 165, column: 14, scope: !7063)
!7065 = !DILocation(line: 165, column: 7, scope: !7063)
!7066 = !DILocation(line: 165, column: 6, scope: !7009)
!7067 = !DILocation(line: 166, column: 3, scope: !7063)
!7068 = !DILocation(line: 166, column: 8, scope: !7063)
!7069 = !DILocation(line: 166, column: 14, scope: !7063)
!7070 = !DILocation(line: 167, column: 26, scope: !7009)
!7071 = !DILocation(line: 167, column: 31, scope: !7009)
!7072 = !DILocation(line: 167, column: 37, scope: !7009)
!7073 = !DILocation(line: 409, column: 2, scope: !5455, inlinedAt: !7011)
!7074 = !DILocation(line: 409, column: 2, scope: !5460, inlinedAt: !7011)
!7075 = !DILocation(line: 409, column: 2, scope: !5461, inlinedAt: !7011)
!7076 = !DILocation(line: 409, column: 2, scope: !5468, inlinedAt: !7011)
!7077 = !DILocation(line: 409, column: 2, scope: !5471, inlinedAt: !7011)
!7078 = !DILocation(line: 168, column: 1, scope: !7009)
!7079 = distinct !DISubprogram(name: "media_request_get", scope: !120, file: !120, line: 177, type: !4482, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7080 = !DILocalVariable(name: "req", arg: 1, scope: !7079, file: !120, line: 177, type: !4292)
!7081 = !DILocation(line: 177, column: 60, scope: !7079)
!7082 = !DILocation(line: 179, column: 12, scope: !7079)
!7083 = !DILocation(line: 179, column: 17, scope: !7079)
!7084 = !DILocation(line: 179, column: 2, scope: !7079)
!7085 = !DILocation(line: 180, column: 1, scope: !7079)
!7086 = distinct !DISubprogram(name: "trace_vb2_qbuf", scope: !6320, file: !6320, line: 61, type: !6321, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7087 = !DILocalVariable(name: "q", arg: 1, scope: !7086, file: !6320, line: 61, type: !185)
!7088 = !DILocation(line: 61, column: 1, scope: !7086)
!7089 = !DILocalVariable(name: "vb", arg: 2, scope: !7086, file: !6320, line: 61, type: !181)
!7090 = distinct !DISubprogram(name: "__enqueue_in_driver", scope: !3, file: !3, line: 1325, type: !3966, scopeLine: 1326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7091 = !DILocalVariable(name: "v", arg: 1, scope: !7092, file: !5222, line: 93, type: !5225)
!7092 = distinct !DISubprogram(name: "arch_atomic_inc", scope: !5222, file: !5222, line: 93, type: !6072, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7093 = !DILocation(line: 93, column: 55, scope: !7092, inlinedAt: !7094)
!7094 = distinct !DILocation(line: 241, column: 2, scope: !7095, inlinedAt: !7096)
!7095 = distinct !DISubprogram(name: "atomic_inc", scope: !5229, file: !5229, line: 238, type: !6072, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7096 = distinct !DILocation(line: 1330, column: 2, scope: !7090)
!7097 = !DILocation(line: 99, column: 79, scope: !6079, inlinedAt: !7098)
!7098 = distinct !DILocation(line: 240, column: 2, scope: !7095, inlinedAt: !7096)
!7099 = !DILocation(line: 99, column: 89, scope: !6079, inlinedAt: !7098)
!7100 = !DILocalVariable(name: "v", arg: 1, scope: !7095, file: !5229, line: 238, type: !5225)
!7101 = !DILocation(line: 238, column: 22, scope: !7095, inlinedAt: !7096)
!7102 = !DILocalVariable(name: "vb", arg: 1, scope: !7090, file: !3, line: 1325, type: !181)
!7103 = !DILocation(line: 1325, column: 52, scope: !7090)
!7104 = !DILocalVariable(name: "q", scope: !7090, file: !3, line: 1327, type: !185)
!7105 = !DILocation(line: 1327, column: 20, scope: !7090)
!7106 = !DILocation(line: 1327, column: 24, scope: !7090)
!7107 = !DILocation(line: 1327, column: 28, scope: !7090)
!7108 = !DILocation(line: 1329, column: 2, scope: !7090)
!7109 = !DILocation(line: 1329, column: 6, scope: !7090)
!7110 = !DILocation(line: 1329, column: 12, scope: !7090)
!7111 = !DILocation(line: 1330, column: 14, scope: !7090)
!7112 = !DILocation(line: 1330, column: 17, scope: !7090)
!7113 = !DILocation(line: 240, column: 31, scope: !7095, inlinedAt: !7096)
!7114 = !DILocation(line: 101, column: 20, scope: !6079, inlinedAt: !7098)
!7115 = !DILocation(line: 101, column: 23, scope: !6079, inlinedAt: !7098)
!7116 = !DILocation(line: 101, column: 2, scope: !6079, inlinedAt: !7098)
!7117 = !DILocation(line: 102, column: 2, scope: !6079, inlinedAt: !7098)
!7118 = !DILocation(line: 241, column: 18, scope: !7095, inlinedAt: !7096)
!7119 = !DILocation(line: 96, column: 16, scope: !7092, inlinedAt: !7094)
!7120 = !DILocation(line: 96, column: 19, scope: !7092, inlinedAt: !7094)
!7121 = !DILocation(line: 95, column: 2, scope: !7092, inlinedAt: !7094)
!7122 = !{i32 -2146544761}
!7123 = !DILocation(line: 1332, column: 22, scope: !7090)
!7124 = !DILocation(line: 1332, column: 25, scope: !7090)
!7125 = !DILocation(line: 1332, column: 2, scope: !7090)
!7126 = !DILocation(line: 1334, column: 2, scope: !7090)
!7127 = !DILocation(line: 1334, column: 2, scope: !7128)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 1334, column: 2)
!7129 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 1334, column: 2)
!7130 = !DILocation(line: 1334, column: 2, scope: !7129)
!7131 = !DILocation(line: 1335, column: 1, scope: !7090)
!7132 = distinct !DISubprogram(name: "vb2_start_streaming", scope: !3, file: !3, line: 1520, type: !4609, scopeLine: 1521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7133 = !DILocation(line: 23, column: 61, scope: !5250, inlinedAt: !7134)
!7134 = distinct !DILocation(line: 28, column: 9, scope: !5257, inlinedAt: !7135)
!7135 = distinct !DILocation(line: 1561, column: 3, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 1561, column: 3)
!7137 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1548, column: 52)
!7138 = distinct !DILexicalBlock(scope: !7132, file: !3, line: 1548, column: 6)
!7139 = !DILocation(line: 69, column: 73, scope: !5263, inlinedAt: !7140)
!7140 = distinct !DILocation(line: 27, column: 2, scope: !5257, inlinedAt: !7135)
!7141 = !DILocation(line: 69, column: 83, scope: !5263, inlinedAt: !7140)
!7142 = !DILocation(line: 25, column: 29, scope: !5257, inlinedAt: !7135)
!7143 = !DILocation(line: 23, column: 61, scope: !5250, inlinedAt: !7144)
!7144 = distinct !DILocation(line: 28, column: 9, scope: !5257, inlinedAt: !7145)
!7145 = distinct !DILocation(line: 1548, column: 6, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 1548, column: 6)
!7147 = !DILocation(line: 69, column: 73, scope: !5263, inlinedAt: !7148)
!7148 = distinct !DILocation(line: 27, column: 2, scope: !5257, inlinedAt: !7145)
!7149 = !DILocation(line: 69, column: 83, scope: !5263, inlinedAt: !7148)
!7150 = !DILocation(line: 25, column: 29, scope: !5257, inlinedAt: !7145)
!7151 = !DILocation(line: 23, column: 61, scope: !5250, inlinedAt: !7152)
!7152 = distinct !DILocation(line: 28, column: 9, scope: !5257, inlinedAt: !7153)
!7153 = distinct !DILocation(line: 1534, column: 8, scope: !7132)
!7154 = !DILocation(line: 69, column: 73, scope: !5263, inlinedAt: !7155)
!7155 = distinct !DILocation(line: 27, column: 2, scope: !5257, inlinedAt: !7153)
!7156 = !DILocation(line: 69, column: 83, scope: !5263, inlinedAt: !7155)
!7157 = !DILocation(line: 25, column: 29, scope: !5257, inlinedAt: !7153)
!7158 = !DILocalVariable(name: "q", arg: 1, scope: !7132, file: !3, line: 1520, type: !185)
!7159 = !DILocation(line: 1520, column: 50, scope: !7132)
!7160 = !DILocalVariable(name: "vb", scope: !7132, file: !3, line: 1522, type: !181)
!7161 = !DILocation(line: 1522, column: 21, scope: !7132)
!7162 = !DILocalVariable(name: "ret", scope: !7132, file: !3, line: 1523, type: !243)
!7163 = !DILocation(line: 1523, column: 6, scope: !7132)
!7164 = !DILocalVariable(name: "__mptr", scope: !7165, file: !3, line: 1529, type: !180)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 1529, column: 2)
!7166 = distinct !DILexicalBlock(scope: !7132, file: !3, line: 1529, column: 2)
!7167 = !DILocation(line: 1529, column: 2, scope: !7165)
!7168 = !DILocation(line: 1529, column: 2, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1529, column: 2)
!7170 = !DILocation(line: 1529, column: 2, scope: !7166)
!7171 = !DILocation(line: 1529, column: 2, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 1529, column: 2)
!7173 = !DILocation(line: 1530, column: 23, scope: !7172)
!7174 = !DILocation(line: 1530, column: 3, scope: !7172)
!7175 = !DILocalVariable(name: "__mptr", scope: !7176, file: !3, line: 1529, type: !180)
!7176 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 1529, column: 2)
!7177 = !DILocation(line: 1529, column: 2, scope: !7176)
!7178 = !DILocation(line: 1529, column: 2, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7176, file: !3, line: 1529, column: 2)
!7180 = distinct !{!7180, !7170, !7181}
!7181 = !DILocation(line: 1530, column: 25, scope: !7166)
!7182 = !DILocation(line: 1533, column: 2, scope: !7132)
!7183 = !DILocation(line: 1533, column: 5, scope: !7132)
!7184 = !DILocation(line: 1533, column: 28, scope: !7132)
!7185 = !DILocation(line: 1534, column: 8, scope: !7132)
!7186 = !DILocation(line: 27, column: 25, scope: !5257, inlinedAt: !7153)
!7187 = !DILocation(line: 71, column: 19, scope: !5263, inlinedAt: !7155)
!7188 = !DILocation(line: 71, column: 22, scope: !5263, inlinedAt: !7155)
!7189 = !DILocation(line: 71, column: 2, scope: !5263, inlinedAt: !7155)
!7190 = !DILocation(line: 72, column: 2, scope: !5263, inlinedAt: !7155)
!7191 = !DILocation(line: 28, column: 26, scope: !5257, inlinedAt: !7153)
!7192 = !DILocation(line: 29, column: 9, scope: !5250, inlinedAt: !7152)
!7193 = !DILocation(line: 1534, column: 6, scope: !7132)
!7194 = !DILocation(line: 1536, column: 7, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7132, file: !3, line: 1536, column: 6)
!7196 = !DILocation(line: 1536, column: 6, scope: !7132)
!7197 = !DILocation(line: 1537, column: 3, scope: !7195)
!7198 = !DILocation(line: 1539, column: 2, scope: !7132)
!7199 = !DILocation(line: 1539, column: 5, scope: !7132)
!7200 = !DILocation(line: 1539, column: 28, scope: !7132)
!7201 = !DILocation(line: 1541, column: 2, scope: !7132)
!7202 = !DILocation(line: 1541, column: 2, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 1541, column: 2)
!7204 = distinct !DILexicalBlock(scope: !7132, file: !3, line: 1541, column: 2)
!7205 = !DILocation(line: 1541, column: 2, scope: !7204)
!7206 = !DILocalVariable(name: "__ret_warn_on", scope: !7146, file: !3, line: 1548, type: !243)
!7207 = !DILocation(line: 1548, column: 6, scope: !7146)
!7208 = !DILocation(line: 27, column: 25, scope: !5257, inlinedAt: !7145)
!7209 = !DILocation(line: 71, column: 19, scope: !5263, inlinedAt: !7148)
!7210 = !DILocation(line: 71, column: 22, scope: !5263, inlinedAt: !7148)
!7211 = !DILocation(line: 71, column: 2, scope: !5263, inlinedAt: !7148)
!7212 = !DILocation(line: 72, column: 2, scope: !5263, inlinedAt: !7148)
!7213 = !DILocation(line: 28, column: 26, scope: !5257, inlinedAt: !7145)
!7214 = !DILocation(line: 29, column: 9, scope: !5250, inlinedAt: !7144)
!7215 = !DILocation(line: 1548, column: 6, scope: !7216)
!7216 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 1548, column: 6)
!7217 = !DILocation(line: 1548, column: 6, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 1548, column: 6)
!7219 = !DILocation(line: 1548, column: 6, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 1548, column: 6)
!7221 = !DILocation(line: 1548, column: 6, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 1548, column: 6)
!7223 = !{i32 -2140562017, i32 -2140561988, i32 -2140561942, i32 -2140561884, i32 -2140561830, i32 -2140561776, i32 -2140561721, i32 -2140561690}
!7224 = !DILocation(line: 1548, column: 6, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 1548, column: 6)
!7226 = !{i32 -2140561260, i32 -2140561253, i32 -2140561201, i32 -2140561170, i32 -2140561140}
!7227 = !DILocation(line: 1548, column: 6, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 1548, column: 6)
!7229 = !DILocation(line: 1548, column: 6, scope: !7138)
!7230 = !DILocation(line: 1548, column: 6, scope: !7132)
!7231 = !DILocalVariable(name: "i", scope: !7137, file: !3, line: 1549, type: !7)
!7232 = !DILocation(line: 1549, column: 12, scope: !7137)
!7233 = !DILocation(line: 1555, column: 10, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7137, file: !3, line: 1555, column: 3)
!7235 = !DILocation(line: 1555, column: 8, scope: !7234)
!7236 = !DILocation(line: 1555, column: 15, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 1555, column: 3)
!7238 = !DILocation(line: 1555, column: 19, scope: !7237)
!7239 = !DILocation(line: 1555, column: 22, scope: !7237)
!7240 = !DILocation(line: 1555, column: 17, scope: !7237)
!7241 = !DILocation(line: 1555, column: 3, scope: !7234)
!7242 = !DILocation(line: 1556, column: 9, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 1555, column: 40)
!7244 = !DILocation(line: 1556, column: 12, scope: !7243)
!7245 = !DILocation(line: 1556, column: 17, scope: !7243)
!7246 = !DILocation(line: 1556, column: 7, scope: !7243)
!7247 = !DILocation(line: 1557, column: 8, scope: !7248)
!7248 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 1557, column: 8)
!7249 = !DILocation(line: 1557, column: 12, scope: !7248)
!7250 = !DILocation(line: 1557, column: 18, scope: !7248)
!7251 = !DILocation(line: 1557, column: 8, scope: !7243)
!7252 = !DILocation(line: 1558, column: 21, scope: !7248)
!7253 = !DILocation(line: 1558, column: 5, scope: !7248)
!7254 = !DILocation(line: 1559, column: 3, scope: !7243)
!7255 = !DILocation(line: 1555, column: 35, scope: !7237)
!7256 = !DILocation(line: 1555, column: 3, scope: !7237)
!7257 = distinct !{!7257, !7241, !7258}
!7258 = !DILocation(line: 1559, column: 3, scope: !7234)
!7259 = !DILocalVariable(name: "__ret_warn_on", scope: !7136, file: !3, line: 1561, type: !243)
!7260 = !DILocation(line: 1561, column: 3, scope: !7136)
!7261 = !DILocation(line: 27, column: 25, scope: !5257, inlinedAt: !7135)
!7262 = !DILocation(line: 71, column: 19, scope: !5263, inlinedAt: !7140)
!7263 = !DILocation(line: 71, column: 22, scope: !5263, inlinedAt: !7140)
!7264 = !DILocation(line: 71, column: 2, scope: !5263, inlinedAt: !7140)
!7265 = !DILocation(line: 72, column: 2, scope: !5263, inlinedAt: !7140)
!7266 = !DILocation(line: 28, column: 26, scope: !5257, inlinedAt: !7135)
!7267 = !DILocation(line: 29, column: 9, scope: !5250, inlinedAt: !7134)
!7268 = !DILocation(line: 1561, column: 3, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7136, file: !3, line: 1561, column: 3)
!7270 = !DILocation(line: 1561, column: 3, scope: !7271)
!7271 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 1561, column: 3)
!7272 = !DILocation(line: 1561, column: 3, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 1561, column: 3)
!7274 = !DILocation(line: 1561, column: 3, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 1561, column: 3)
!7276 = !{i32 -2140560520, i32 -2140560491, i32 -2140560445, i32 -2140560387, i32 -2140560333, i32 -2140560279, i32 -2140560224, i32 -2140560193}
!7277 = !DILocation(line: 1561, column: 3, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 1561, column: 3)
!7279 = !{i32 -2140559763, i32 -2140559756, i32 -2140559704, i32 -2140559673, i32 -2140559643}
!7280 = !DILocation(line: 1561, column: 3, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7271, file: !3, line: 1561, column: 3)
!7282 = !DILocation(line: 1562, column: 2, scope: !7137)
!7283 = !DILocalVariable(name: "__ret_warn_on", scope: !7284, file: !3, line: 1568, type: !243)
!7284 = distinct !DILexicalBlock(scope: !7132, file: !3, line: 1568, column: 2)
!7285 = !DILocation(line: 1568, column: 2, scope: !7284)
!7286 = !DILocation(line: 1568, column: 2, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 1568, column: 2)
!7288 = !DILocation(line: 1568, column: 2, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 1568, column: 2)
!7290 = !DILocation(line: 1568, column: 2, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 1568, column: 2)
!7292 = !DILocation(line: 1568, column: 2, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 1568, column: 2)
!7294 = !{i32 -2140559045, i32 -2140559016, i32 -2140558970, i32 -2140558912, i32 -2140558858, i32 -2140558804, i32 -2140558749, i32 -2140558718}
!7295 = !DILocation(line: 1568, column: 2, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 1568, column: 2)
!7297 = !{i32 -2140558288, i32 -2140558281, i32 -2140558229, i32 -2140558198, i32 -2140558168}
!7298 = !DILocation(line: 1568, column: 2, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 1568, column: 2)
!7300 = !DILocation(line: 1569, column: 9, scope: !7132)
!7301 = !DILocation(line: 1569, column: 2, scope: !7132)
!7302 = !DILocation(line: 1570, column: 1, scope: !7132)
!7303 = distinct !DISubprogram(name: "vb2_wait_for_all_buffers", scope: !3, file: !3, line: 1835, type: !4609, scopeLine: 1836, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7304 = !DILocation(line: 23, column: 61, scope: !5250, inlinedAt: !7305)
!7305 = distinct !DILocation(line: 28, column: 9, scope: !5257, inlinedAt: !7306)
!7306 = distinct !DILocation(line: 1843, column: 3, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 1843, column: 3)
!7308 = distinct !DILexicalBlock(scope: !7309, file: !3, line: 1843, column: 3)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 1843, column: 3)
!7310 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 1843, column: 3)
!7311 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 1843, column: 3)
!7312 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1843, column: 3)
!7313 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 1842, column: 6)
!7314 = !DILocation(line: 69, column: 73, scope: !5263, inlinedAt: !7315)
!7315 = distinct !DILocation(line: 27, column: 2, scope: !5257, inlinedAt: !7306)
!7316 = !DILocation(line: 69, column: 83, scope: !5263, inlinedAt: !7315)
!7317 = !DILocation(line: 25, column: 29, scope: !5257, inlinedAt: !7306)
!7318 = !DILocation(line: 23, column: 61, scope: !5250, inlinedAt: !7319)
!7319 = distinct !DILocation(line: 28, column: 9, scope: !5257, inlinedAt: !7320)
!7320 = distinct !DILocation(line: 1843, column: 3, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 1843, column: 3)
!7322 = !DILocation(line: 69, column: 73, scope: !5263, inlinedAt: !7323)
!7323 = distinct !DILocation(line: 27, column: 2, scope: !5257, inlinedAt: !7320)
!7324 = !DILocation(line: 69, column: 83, scope: !5263, inlinedAt: !7323)
!7325 = !DILocation(line: 25, column: 29, scope: !5257, inlinedAt: !7320)
!7326 = !DILocalVariable(name: "q", arg: 1, scope: !7303, file: !3, line: 1835, type: !185)
!7327 = !DILocation(line: 1835, column: 48, scope: !7303)
!7328 = !DILocation(line: 1837, column: 7, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 1837, column: 6)
!7330 = !DILocation(line: 1837, column: 10, scope: !7329)
!7331 = !DILocation(line: 1837, column: 6, scope: !7303)
!7332 = !DILocation(line: 1838, column: 3, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 1837, column: 21)
!7334 = !DILocation(line: 1838, column: 3, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 1838, column: 3)
!7336 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 1838, column: 3)
!7337 = !DILocation(line: 1838, column: 3, scope: !7336)
!7338 = !DILocation(line: 1839, column: 3, scope: !7333)
!7339 = !DILocation(line: 1842, column: 6, scope: !7313)
!7340 = !DILocation(line: 1842, column: 9, scope: !7313)
!7341 = !DILocation(line: 1842, column: 6, scope: !7303)
!7342 = !DILocation(line: 1843, column: 3, scope: !7313)
!7343 = !DILocation(line: 1843, column: 3, scope: !7312)
!7344 = !DILocation(line: 1843, column: 3, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 1843, column: 3)
!7346 = !DILocation(line: 1843, column: 3, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 1843, column: 3)
!7348 = !DILocation(line: 1843, column: 3, scope: !7321)
!7349 = !DILocation(line: 27, column: 25, scope: !5257, inlinedAt: !7320)
!7350 = !DILocation(line: 71, column: 19, scope: !5263, inlinedAt: !7323)
!7351 = !DILocation(line: 71, column: 22, scope: !5263, inlinedAt: !7323)
!7352 = !DILocation(line: 71, column: 2, scope: !5263, inlinedAt: !7323)
!7353 = !DILocation(line: 72, column: 2, scope: !5263, inlinedAt: !7323)
!7354 = !DILocation(line: 28, column: 26, scope: !5257, inlinedAt: !7320)
!7355 = !DILocation(line: 29, column: 9, scope: !5250, inlinedAt: !7319)
!7356 = !DILocalVariable(name: "__wq_entry", scope: !7311, file: !3, line: 1843, type: !7357)
!7357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1475, line: 29, size: 320, elements: !7358)
!7358 = !{!7359, !7360, !7361, !7367}
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7357, file: !1475, line: 30, baseType: !7, size: 32)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !7357, file: !1475, line: 31, baseType: !180, size: 64, offset: 64)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !7357, file: !1475, line: 32, baseType: !7362, size: 64, offset: 128)
!7362 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1475, line: 16, baseType: !7363)
!7363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7364, size: 64)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{!243, !7366, !7, !243, !180}
!7366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7357, size: 64)
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !7357, file: !1475, line: 33, baseType: !203, size: 128, offset: 192)
!7368 = !DILocation(line: 1843, column: 3, scope: !7311)
!7369 = !DILocalVariable(name: "__ret", scope: !7311, file: !3, line: 1843, type: !294)
!7370 = !DILocalVariable(name: "__int", scope: !7308, file: !3, line: 1843, type: !294)
!7371 = !DILocation(line: 1843, column: 3, scope: !7308)
!7372 = !DILocation(line: 1843, column: 3, scope: !7307)
!7373 = !DILocation(line: 27, column: 25, scope: !5257, inlinedAt: !7306)
!7374 = !DILocation(line: 71, column: 19, scope: !5263, inlinedAt: !7315)
!7375 = !DILocation(line: 71, column: 22, scope: !5263, inlinedAt: !7315)
!7376 = !DILocation(line: 71, column: 2, scope: !5263, inlinedAt: !7315)
!7377 = !DILocation(line: 72, column: 2, scope: !5263, inlinedAt: !7315)
!7378 = !DILocation(line: 28, column: 26, scope: !5257, inlinedAt: !7306)
!7379 = !DILocation(line: 29, column: 9, scope: !5250, inlinedAt: !7305)
!7380 = !DILocation(line: 1843, column: 3, scope: !7309)
!7381 = distinct !{!7381, !7382, !7382}
!7382 = !DILocation(line: 1843, column: 3, scope: !7310)
!7383 = !DILabel(scope: !7311, name: "__out", file: !3, line: 1843)
!7384 = !DILocation(line: 1844, column: 2, scope: !7303)
!7385 = !DILocation(line: 1845, column: 1, scope: !7303)
!7386 = distinct !DISubprogram(name: "vb2_core_dqbuf", scope: !3, file: !3, line: 1864, type: !7387, scopeLine: 1866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7387 = !DISubroutineType(types: !7388)
!7388 = !{!243, !185, !2678, !180, !475}
!7389 = !DILocalVariable(name: "q", arg: 1, scope: !7386, file: !3, line: 1864, type: !185)
!7390 = !DILocation(line: 1864, column: 38, scope: !7386)
!7391 = !DILocalVariable(name: "pindex", arg: 2, scope: !7386, file: !3, line: 1864, type: !2678)
!7392 = !DILocation(line: 1864, column: 55, scope: !7386)
!7393 = !DILocalVariable(name: "pb", arg: 3, scope: !7386, file: !3, line: 1864, type: !180)
!7394 = !DILocation(line: 1864, column: 69, scope: !7386)
!7395 = !DILocalVariable(name: "nonblocking", arg: 4, scope: !7386, file: !3, line: 1865, type: !475)
!7396 = !DILocation(line: 1865, column: 11, scope: !7386)
!7397 = !DILocalVariable(name: "vb", scope: !7386, file: !3, line: 1867, type: !181)
!7398 = !DILocation(line: 1867, column: 21, scope: !7386)
!7399 = !DILocalVariable(name: "ret", scope: !7386, file: !3, line: 1868, type: !243)
!7400 = !DILocation(line: 1868, column: 6, scope: !7386)
!7401 = !DILocation(line: 1870, column: 26, scope: !7386)
!7402 = !DILocation(line: 1870, column: 34, scope: !7386)
!7403 = !DILocation(line: 1870, column: 38, scope: !7386)
!7404 = !DILocation(line: 1870, column: 8, scope: !7386)
!7405 = !DILocation(line: 1870, column: 6, scope: !7386)
!7406 = !DILocation(line: 1871, column: 6, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1871, column: 6)
!7408 = !DILocation(line: 1871, column: 10, scope: !7407)
!7409 = !DILocation(line: 1871, column: 6, scope: !7386)
!7410 = !DILocation(line: 1872, column: 10, scope: !7407)
!7411 = !DILocation(line: 1872, column: 3, scope: !7407)
!7412 = !DILocation(line: 1874, column: 10, scope: !7386)
!7413 = !DILocation(line: 1874, column: 14, scope: !7386)
!7414 = !DILocation(line: 1874, column: 2, scope: !7386)
!7415 = !DILocation(line: 1876, column: 3, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1874, column: 21)
!7417 = !DILocation(line: 1876, column: 3, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !3, line: 1876, column: 3)
!7419 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 1876, column: 3)
!7420 = !DILocation(line: 1876, column: 3, scope: !7419)
!7421 = !DILocation(line: 1877, column: 3, scope: !7416)
!7422 = !DILocation(line: 1879, column: 3, scope: !7416)
!7423 = !DILocation(line: 1879, column: 3, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 1879, column: 3)
!7425 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 1879, column: 3)
!7426 = !DILocation(line: 1879, column: 3, scope: !7425)
!7427 = !DILocation(line: 1880, column: 3, scope: !7416)
!7428 = !DILocation(line: 1882, column: 3, scope: !7416)
!7429 = !DILocation(line: 1882, column: 3, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 1882, column: 3)
!7431 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 1882, column: 3)
!7432 = !DILocation(line: 1882, column: 3, scope: !7431)
!7433 = !DILocation(line: 1884, column: 3, scope: !7416)
!7434 = !DILocation(line: 1887, column: 2, scope: !7386)
!7435 = !DILocation(line: 1887, column: 2, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !3, line: 1887, column: 2)
!7437 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1887, column: 2)
!7438 = !DILocation(line: 1887, column: 2, scope: !7437)
!7439 = !DILocation(line: 1888, column: 2, scope: !7386)
!7440 = !DILocation(line: 1888, column: 6, scope: !7386)
!7441 = !DILocation(line: 1888, column: 15, scope: !7386)
!7442 = !DILocation(line: 1890, column: 6, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1890, column: 6)
!7444 = !DILocation(line: 1890, column: 6, scope: !7386)
!7445 = !DILocation(line: 1891, column: 13, scope: !7443)
!7446 = !DILocation(line: 1891, column: 17, scope: !7443)
!7447 = !DILocation(line: 1891, column: 4, scope: !7443)
!7448 = !DILocation(line: 1891, column: 11, scope: !7443)
!7449 = !DILocation(line: 1891, column: 3, scope: !7443)
!7450 = !DILocation(line: 1894, column: 6, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1894, column: 6)
!7452 = !DILocation(line: 1894, column: 6, scope: !7386)
!7453 = !DILocation(line: 1895, column: 3, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 1895, column: 3)
!7455 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 1895, column: 3)
!7456 = !DILocation(line: 1895, column: 3, scope: !7455)
!7457 = !DILocation(line: 1895, column: 3, scope: !7451)
!7458 = !DILocation(line: 1898, column: 12, scope: !7386)
!7459 = !DILocation(line: 1898, column: 16, scope: !7386)
!7460 = !DILocation(line: 1898, column: 2, scope: !7386)
!7461 = !DILocation(line: 1899, column: 2, scope: !7386)
!7462 = !DILocation(line: 1899, column: 5, scope: !7386)
!7463 = !DILocation(line: 1899, column: 17, scope: !7386)
!7464 = !DILocation(line: 1901, column: 18, scope: !7386)
!7465 = !DILocation(line: 1901, column: 21, scope: !7386)
!7466 = !DILocation(line: 1901, column: 2, scope: !7386)
!7467 = !DILocation(line: 1904, column: 14, scope: !7386)
!7468 = !DILocation(line: 1904, column: 2, scope: !7386)
!7469 = !DILocalVariable(name: "__ret_warn_on", scope: !7470, file: !3, line: 1906, type: !243)
!7470 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1906, column: 6)
!7471 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1906, column: 6)
!7472 = !DILocation(line: 1906, column: 6, scope: !7470)
!7473 = !DILocation(line: 1906, column: 6, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7470, file: !3, line: 1906, column: 6)
!7475 = !DILocation(line: 1906, column: 6, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 1906, column: 6)
!7477 = !DILocation(line: 1906, column: 6, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 1906, column: 6)
!7479 = !DILocation(line: 1906, column: 6, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 1906, column: 6)
!7481 = !{i32 -2140542156, i32 -2140542127, i32 -2140542081, i32 -2140542023, i32 -2140541969, i32 -2140541915, i32 -2140541860, i32 -2140541829}
!7482 = !DILocation(line: 1906, column: 6, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 1906, column: 6)
!7484 = !{i32 -2140541399, i32 -2140541392, i32 -2140541340, i32 -2140541309, i32 -2140541279}
!7485 = !DILocation(line: 1906, column: 6, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 1906, column: 6)
!7487 = !DILocation(line: 1906, column: 6, scope: !7471)
!7488 = !DILocation(line: 1906, column: 6, scope: !7386)
!7489 = !DILocation(line: 1907, column: 32, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1906, column: 32)
!7491 = !DILocation(line: 1907, column: 36, scope: !7490)
!7492 = !DILocation(line: 1907, column: 3, scope: !7490)
!7493 = !DILocation(line: 1908, column: 29, scope: !7490)
!7494 = !DILocation(line: 1908, column: 33, scope: !7490)
!7495 = !DILocation(line: 1908, column: 3, scope: !7490)
!7496 = !DILocation(line: 1909, column: 2, scope: !7490)
!7497 = !DILocation(line: 1910, column: 6, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1910, column: 6)
!7499 = !DILocation(line: 1910, column: 10, scope: !7498)
!7500 = !DILocation(line: 1910, column: 6, scope: !7386)
!7501 = !DILocation(line: 1911, column: 21, scope: !7498)
!7502 = !DILocation(line: 1911, column: 25, scope: !7498)
!7503 = !DILocation(line: 1911, column: 3, scope: !7498)
!7504 = !DILocation(line: 1912, column: 2, scope: !7386)
!7505 = !DILocation(line: 1912, column: 6, scope: !7386)
!7506 = !DILocation(line: 1912, column: 14, scope: !7386)
!7507 = !DILocation(line: 1914, column: 2, scope: !7386)
!7508 = !DILocation(line: 1914, column: 2, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7510, file: !3, line: 1914, column: 2)
!7510 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 1914, column: 2)
!7511 = !DILocation(line: 1914, column: 2, scope: !7510)
!7512 = !DILocation(line: 1917, column: 2, scope: !7386)
!7513 = !DILocation(line: 1919, column: 1, scope: !7386)
!7514 = distinct !DISubprogram(name: "__vb2_get_done_vb", scope: !3, file: !3, line: 1802, type: !7515, scopeLine: 1804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7515 = !DISubroutineType(types: !7516)
!7516 = !{!243, !185, !7517, !180, !243}
!7517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!7518 = !DILocation(line: 407, column: 64, scope: !5195, inlinedAt: !7519)
!7519 = distinct !DILocation(line: 1830, column: 2, scope: !7514)
!7520 = !DILocation(line: 407, column: 84, scope: !5195, inlinedAt: !7519)
!7521 = !DILocation(line: 327, column: 67, scope: !5209, inlinedAt: !7522)
!7522 = distinct !DILocation(line: 1819, column: 2, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 1819, column: 2)
!7524 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 1819, column: 2)
!7525 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 1819, column: 2)
!7526 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 1819, column: 2)
!7527 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 1819, column: 2)
!7528 = !DILocalVariable(name: "q", arg: 1, scope: !7514, file: !3, line: 1802, type: !185)
!7529 = !DILocation(line: 1802, column: 48, scope: !7514)
!7530 = !DILocalVariable(name: "vb", arg: 2, scope: !7514, file: !3, line: 1802, type: !7517)
!7531 = !DILocation(line: 1802, column: 71, scope: !7514)
!7532 = !DILocalVariable(name: "pb", arg: 3, scope: !7514, file: !3, line: 1803, type: !180)
!7533 = !DILocation(line: 1803, column: 15, scope: !7514)
!7534 = !DILocalVariable(name: "nonblocking", arg: 4, scope: !7514, file: !3, line: 1803, type: !243)
!7535 = !DILocation(line: 1803, column: 23, scope: !7514)
!7536 = !DILocalVariable(name: "flags", scope: !7514, file: !3, line: 1805, type: !309)
!7537 = !DILocation(line: 1805, column: 16, scope: !7514)
!7538 = !DILocalVariable(name: "ret", scope: !7514, file: !3, line: 1806, type: !243)
!7539 = !DILocation(line: 1806, column: 6, scope: !7514)
!7540 = !DILocation(line: 1811, column: 31, scope: !7514)
!7541 = !DILocation(line: 1811, column: 34, scope: !7514)
!7542 = !DILocation(line: 1811, column: 8, scope: !7514)
!7543 = !DILocation(line: 1811, column: 6, scope: !7514)
!7544 = !DILocation(line: 1812, column: 6, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 1812, column: 6)
!7546 = !DILocation(line: 1812, column: 6, scope: !7514)
!7547 = !DILocation(line: 1813, column: 10, scope: !7545)
!7548 = !DILocation(line: 1813, column: 3, scope: !7545)
!7549 = !DILocation(line: 1819, column: 2, scope: !7514)
!7550 = !DILocation(line: 1819, column: 2, scope: !7527)
!7551 = !DILocalVariable(name: "__dummy", scope: !7552, file: !3, line: 1819, type: !309)
!7552 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 1819, column: 2)
!7553 = !DILocation(line: 1819, column: 2, scope: !7552)
!7554 = !DILocalVariable(name: "__dummy2", scope: !7552, file: !3, line: 1819, type: !309)
!7555 = !DILocation(line: 1819, column: 2, scope: !7526)
!7556 = !DILocation(line: 1819, column: 2, scope: !7525)
!7557 = !DILocation(line: 1819, column: 2, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 1819, column: 2)
!7559 = !DILocalVariable(name: "__dummy", scope: !7560, file: !3, line: 1819, type: !309)
!7560 = distinct !DILexicalBlock(scope: !7561, file: !3, line: 1819, column: 2)
!7561 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 1819, column: 2)
!7562 = !DILocation(line: 1819, column: 2, scope: !7560)
!7563 = !DILocalVariable(name: "__dummy2", scope: !7560, file: !3, line: 1819, type: !309)
!7564 = !DILocation(line: 1819, column: 2, scope: !7561)
!7565 = !DILocation(line: 1819, column: 2, scope: !7524)
!7566 = !{i32 -2140548279}
!7567 = !DILocation(line: 1819, column: 2, scope: !7523)
!7568 = !DILocation(line: 329, column: 10, scope: !5209, inlinedAt: !7522)
!7569 = !DILocation(line: 329, column: 16, scope: !5209, inlinedAt: !7522)
!7570 = !DILocalVariable(name: "__mptr", scope: !7571, file: !3, line: 1820, type: !180)
!7571 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 1820, column: 8)
!7572 = !DILocation(line: 1820, column: 8, scope: !7571)
!7573 = !DILocation(line: 1820, column: 8, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7571, file: !3, line: 1820, column: 8)
!7575 = !DILocation(line: 1820, column: 3, scope: !7514)
!7576 = !DILocation(line: 1820, column: 6, scope: !7514)
!7577 = !DILocation(line: 1826, column: 6, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 1826, column: 6)
!7579 = !DILocation(line: 1826, column: 6, scope: !7514)
!7580 = !DILocalVariable(name: "ret", scope: !7581, file: !3, line: 1827, type: !243)
!7581 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 1827, column: 9)
!7582 = !DILocation(line: 1827, column: 9, scope: !7581)
!7583 = !DILocation(line: 1827, column: 9, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 1827, column: 9)
!7585 = !DILocation(line: 1827, column: 7, scope: !7578)
!7586 = !DILocation(line: 1827, column: 3, scope: !7578)
!7587 = !DILocation(line: 1828, column: 7, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 1828, column: 6)
!7589 = !DILocation(line: 1828, column: 6, scope: !7514)
!7590 = !DILocation(line: 1829, column: 15, scope: !7588)
!7591 = !DILocation(line: 1829, column: 14, scope: !7588)
!7592 = !DILocation(line: 1829, column: 20, scope: !7588)
!7593 = !DILocation(line: 1829, column: 3, scope: !7588)
!7594 = !DILocation(line: 1830, column: 26, scope: !7514)
!7595 = !DILocation(line: 1830, column: 29, scope: !7514)
!7596 = !DILocation(line: 1830, column: 40, scope: !7514)
!7597 = !DILocation(line: 409, column: 2, scope: !5455, inlinedAt: !7519)
!7598 = !DILocation(line: 409, column: 2, scope: !5460, inlinedAt: !7519)
!7599 = !DILocation(line: 409, column: 2, scope: !5461, inlinedAt: !7519)
!7600 = !DILocation(line: 409, column: 2, scope: !5468, inlinedAt: !7519)
!7601 = !DILocation(line: 409, column: 2, scope: !5471, inlinedAt: !7519)
!7602 = !DILocation(line: 1832, column: 9, scope: !7514)
!7603 = !DILocation(line: 1832, column: 2, scope: !7514)
!7604 = !DILocation(line: 1833, column: 1, scope: !7514)
!7605 = distinct !DISubprogram(name: "list_del", scope: !6306, file: !6306, line: 144, type: !7606, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7606 = !DISubroutineType(types: !7607)
!7607 = !{null, !207}
!7608 = !DILocalVariable(name: "entry", arg: 1, scope: !7605, file: !6306, line: 144, type: !207)
!7609 = !DILocation(line: 144, column: 47, scope: !7605)
!7610 = !DILocation(line: 146, column: 19, scope: !7605)
!7611 = !DILocation(line: 146, column: 2, scope: !7605)
!7612 = !DILocation(line: 147, column: 2, scope: !7605)
!7613 = !DILocation(line: 147, column: 9, scope: !7605)
!7614 = !DILocation(line: 147, column: 14, scope: !7605)
!7615 = !DILocation(line: 148, column: 2, scope: !7605)
!7616 = !DILocation(line: 148, column: 9, scope: !7605)
!7617 = !DILocation(line: 148, column: 14, scope: !7605)
!7618 = !DILocation(line: 149, column: 1, scope: !7605)
!7619 = distinct !DISubprogram(name: "trace_vb2_dqbuf", scope: !6320, file: !6320, line: 56, type: !6321, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7620 = !DILocalVariable(name: "q", arg: 1, scope: !7619, file: !6320, line: 56, type: !185)
!7621 = !DILocation(line: 56, column: 1, scope: !7619)
!7622 = !DILocalVariable(name: "vb", arg: 2, scope: !7619, file: !6320, line: 56, type: !181)
!7623 = distinct !DISubprogram(name: "__vb2_dqbuf", scope: !3, file: !3, line: 1851, type: !3966, scopeLine: 1852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7624 = !DILocalVariable(name: "vb", arg: 1, scope: !7623, file: !3, line: 1851, type: !181)
!7625 = !DILocation(line: 1851, column: 44, scope: !7623)
!7626 = !DILocalVariable(name: "q", scope: !7623, file: !3, line: 1853, type: !185)
!7627 = !DILocation(line: 1853, column: 20, scope: !7623)
!7628 = !DILocation(line: 1853, column: 24, scope: !7623)
!7629 = !DILocation(line: 1853, column: 28, scope: !7623)
!7630 = !DILocation(line: 1856, column: 6, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 1856, column: 6)
!7632 = !DILocation(line: 1856, column: 10, scope: !7631)
!7633 = !DILocation(line: 1856, column: 16, scope: !7631)
!7634 = !DILocation(line: 1856, column: 6, scope: !7623)
!7635 = !DILocation(line: 1857, column: 3, scope: !7631)
!7636 = !DILocation(line: 1859, column: 2, scope: !7623)
!7637 = !DILocation(line: 1859, column: 6, scope: !7623)
!7638 = !DILocation(line: 1859, column: 12, scope: !7623)
!7639 = !DILocation(line: 1861, column: 2, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7641, file: !3, line: 1861, column: 2)
!7641 = distinct !DILexicalBlock(scope: !7623, file: !3, line: 1861, column: 2)
!7642 = !DILocation(line: 1861, column: 2, scope: !7641)
!7643 = !DILocation(line: 1862, column: 1, scope: !7623)
!7644 = distinct !DISubprogram(name: "vb2_core_streamon", scope: !3, file: !3, line: 2025, type: !3971, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7645 = !DILocalVariable(name: "q", arg: 1, scope: !7644, file: !3, line: 2025, type: !185)
!7646 = !DILocation(line: 2025, column: 41, scope: !7644)
!7647 = !DILocalVariable(name: "type", arg: 2, scope: !7644, file: !3, line: 2025, type: !7)
!7648 = !DILocation(line: 2025, column: 57, scope: !7644)
!7649 = !DILocalVariable(name: "ret", scope: !7644, file: !3, line: 2027, type: !243)
!7650 = !DILocation(line: 2027, column: 6, scope: !7644)
!7651 = !DILocation(line: 2029, column: 6, scope: !7652)
!7652 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 2029, column: 6)
!7653 = !DILocation(line: 2029, column: 14, scope: !7652)
!7654 = !DILocation(line: 2029, column: 17, scope: !7652)
!7655 = !DILocation(line: 2029, column: 11, scope: !7652)
!7656 = !DILocation(line: 2029, column: 6, scope: !7644)
!7657 = !DILocation(line: 2030, column: 3, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7652, file: !3, line: 2029, column: 23)
!7659 = !DILocation(line: 2030, column: 3, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 2030, column: 3)
!7661 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 2030, column: 3)
!7662 = !DILocation(line: 2030, column: 3, scope: !7661)
!7663 = !DILocation(line: 2031, column: 3, scope: !7658)
!7664 = !DILocation(line: 2034, column: 6, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 2034, column: 6)
!7666 = !DILocation(line: 2034, column: 9, scope: !7665)
!7667 = !DILocation(line: 2034, column: 6, scope: !7644)
!7668 = !DILocation(line: 2035, column: 3, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 2034, column: 20)
!7670 = !DILocation(line: 2035, column: 3, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 2035, column: 3)
!7672 = distinct !DILexicalBlock(scope: !7669, file: !3, line: 2035, column: 3)
!7673 = !DILocation(line: 2035, column: 3, scope: !7672)
!7674 = !DILocation(line: 2036, column: 3, scope: !7669)
!7675 = !DILocation(line: 2039, column: 7, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 2039, column: 6)
!7677 = !DILocation(line: 2039, column: 10, scope: !7676)
!7678 = !DILocation(line: 2039, column: 6, scope: !7644)
!7679 = !DILocation(line: 2040, column: 3, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 2039, column: 23)
!7681 = !DILocation(line: 2040, column: 3, scope: !7682)
!7682 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 2040, column: 3)
!7683 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 2040, column: 3)
!7684 = !DILocation(line: 2040, column: 3, scope: !7683)
!7685 = !DILocation(line: 2041, column: 3, scope: !7680)
!7686 = !DILocation(line: 2044, column: 6, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 2044, column: 6)
!7688 = !DILocation(line: 2044, column: 9, scope: !7687)
!7689 = !DILocation(line: 2044, column: 23, scope: !7687)
!7690 = !DILocation(line: 2044, column: 26, scope: !7687)
!7691 = !DILocation(line: 2044, column: 21, scope: !7687)
!7692 = !DILocation(line: 2044, column: 6, scope: !7644)
!7693 = !DILocation(line: 2045, column: 3, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 2044, column: 46)
!7695 = !DILocation(line: 2045, column: 3, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7697, file: !3, line: 2045, column: 3)
!7697 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2045, column: 3)
!7698 = !DILocation(line: 2045, column: 3, scope: !7697)
!7699 = !DILocation(line: 2047, column: 3, scope: !7694)
!7700 = !DILocation(line: 2054, column: 6, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 2054, column: 6)
!7702 = !DILocation(line: 2054, column: 9, scope: !7701)
!7703 = !DILocation(line: 2054, column: 25, scope: !7701)
!7704 = !DILocation(line: 2054, column: 28, scope: !7701)
!7705 = !DILocation(line: 2054, column: 22, scope: !7701)
!7706 = !DILocation(line: 2054, column: 6, scope: !7644)
!7707 = !DILocation(line: 2055, column: 38, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 2054, column: 48)
!7709 = !DILocation(line: 2055, column: 9, scope: !7708)
!7710 = !DILocation(line: 2055, column: 7, scope: !7708)
!7711 = !DILocation(line: 2056, column: 7, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 2056, column: 7)
!7713 = !DILocation(line: 2056, column: 7, scope: !7708)
!7714 = !DILocation(line: 2057, column: 11, scope: !7712)
!7715 = !DILocation(line: 2057, column: 4, scope: !7712)
!7716 = !DILocation(line: 2058, column: 29, scope: !7708)
!7717 = !DILocation(line: 2058, column: 9, scope: !7708)
!7718 = !DILocation(line: 2058, column: 7, scope: !7708)
!7719 = !DILocation(line: 2059, column: 7, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 2059, column: 7)
!7721 = !DILocation(line: 2059, column: 7, scope: !7708)
!7722 = !DILocation(line: 2060, column: 11, scope: !7720)
!7723 = !DILocation(line: 2060, column: 4, scope: !7720)
!7724 = !DILocation(line: 2061, column: 2, scope: !7708)
!7725 = !DILocation(line: 2063, column: 2, scope: !7644)
!7726 = !DILocation(line: 2063, column: 5, scope: !7644)
!7727 = !DILocation(line: 2063, column: 15, scope: !7644)
!7728 = !DILocation(line: 2065, column: 2, scope: !7644)
!7729 = !DILocation(line: 2065, column: 2, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7731, file: !3, line: 2065, column: 2)
!7731 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 2065, column: 2)
!7732 = !DILocation(line: 2065, column: 2, scope: !7731)
!7733 = !DILocation(line: 2066, column: 2, scope: !7644)
!7734 = !DILocation(line: 2067, column: 1, scope: !7644)
!7735 = distinct !DISubprogram(name: "vb2_queue_error", scope: !3, file: !3, line: 2070, type: !3955, scopeLine: 2071, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7736 = !DILocalVariable(name: "q", arg: 1, scope: !7735, file: !3, line: 2070, type: !185)
!7737 = !DILocation(line: 2070, column: 40, scope: !7735)
!7738 = !DILocation(line: 2072, column: 2, scope: !7735)
!7739 = !DILocation(line: 2072, column: 5, scope: !7735)
!7740 = !DILocation(line: 2072, column: 11, scope: !7735)
!7741 = !DILocation(line: 2074, column: 2, scope: !7735)
!7742 = !DILocation(line: 2075, column: 1, scope: !7735)
!7743 = distinct !DISubprogram(name: "vb2_core_streamoff", scope: !3, file: !3, line: 2078, type: !3971, scopeLine: 2079, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7744 = !DILocalVariable(name: "q", arg: 1, scope: !7743, file: !3, line: 2078, type: !185)
!7745 = !DILocation(line: 2078, column: 42, scope: !7743)
!7746 = !DILocalVariable(name: "type", arg: 2, scope: !7743, file: !3, line: 2078, type: !7)
!7747 = !DILocation(line: 2078, column: 58, scope: !7743)
!7748 = !DILocation(line: 2080, column: 6, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 2080, column: 6)
!7750 = !DILocation(line: 2080, column: 14, scope: !7749)
!7751 = !DILocation(line: 2080, column: 17, scope: !7749)
!7752 = !DILocation(line: 2080, column: 11, scope: !7749)
!7753 = !DILocation(line: 2080, column: 6, scope: !7743)
!7754 = !DILocation(line: 2081, column: 3, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 2080, column: 23)
!7756 = !DILocation(line: 2081, column: 3, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 2081, column: 3)
!7758 = distinct !DILexicalBlock(scope: !7755, file: !3, line: 2081, column: 3)
!7759 = !DILocation(line: 2081, column: 3, scope: !7758)
!7760 = !DILocation(line: 2082, column: 3, scope: !7755)
!7761 = !DILocation(line: 2094, column: 21, scope: !7743)
!7762 = !DILocation(line: 2094, column: 2, scope: !7743)
!7763 = !DILocation(line: 2095, column: 28, scope: !7743)
!7764 = !DILocation(line: 2095, column: 31, scope: !7743)
!7765 = !DILocation(line: 2095, column: 27, scope: !7743)
!7766 = !DILocation(line: 2095, column: 2, scope: !7743)
!7767 = !DILocation(line: 2095, column: 5, scope: !7743)
!7768 = !DILocation(line: 2095, column: 25, scope: !7743)
!7769 = !DILocation(line: 2096, column: 2, scope: !7743)
!7770 = !DILocation(line: 2096, column: 5, scope: !7743)
!7771 = !DILocation(line: 2096, column: 26, scope: !7743)
!7772 = !DILocation(line: 2098, column: 2, scope: !7743)
!7773 = !DILocation(line: 2098, column: 2, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 2098, column: 2)
!7775 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 2098, column: 2)
!7776 = !DILocation(line: 2098, column: 2, scope: !7775)
!7777 = !DILocation(line: 2099, column: 2, scope: !7743)
!7778 = !DILocation(line: 2100, column: 1, scope: !7743)
!7779 = distinct !DISubprogram(name: "vb2_core_expbuf", scope: !3, file: !3, line: 2132, type: !7780, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7780 = !DISubroutineType(types: !7781)
!7781 = !{!243, !185, !693, !7, !7, !7, !7}
!7782 = !DILocalVariable(name: "q", arg: 1, scope: !7779, file: !3, line: 2132, type: !185)
!7783 = !DILocation(line: 2132, column: 39, scope: !7779)
!7784 = !DILocalVariable(name: "fd", arg: 2, scope: !7779, file: !3, line: 2132, type: !693)
!7785 = !DILocation(line: 2132, column: 47, scope: !7779)
!7786 = !DILocalVariable(name: "type", arg: 3, scope: !7779, file: !3, line: 2132, type: !7)
!7787 = !DILocation(line: 2132, column: 64, scope: !7779)
!7788 = !DILocalVariable(name: "index", arg: 4, scope: !7779, file: !3, line: 2133, type: !7)
!7789 = !DILocation(line: 2133, column: 16, scope: !7779)
!7790 = !DILocalVariable(name: "plane", arg: 5, scope: !7779, file: !3, line: 2133, type: !7)
!7791 = !DILocation(line: 2133, column: 36, scope: !7779)
!7792 = !DILocalVariable(name: "flags", arg: 6, scope: !7779, file: !3, line: 2133, type: !7)
!7793 = !DILocation(line: 2133, column: 56, scope: !7779)
!7794 = !DILocalVariable(name: "vb", scope: !7779, file: !3, line: 2135, type: !181)
!7795 = !DILocation(line: 2135, column: 21, scope: !7779)
!7796 = !DILocalVariable(name: "vb_plane", scope: !7779, file: !3, line: 2136, type: !4203)
!7797 = !DILocation(line: 2136, column: 20, scope: !7779)
!7798 = !DILocalVariable(name: "ret", scope: !7779, file: !3, line: 2137, type: !243)
!7799 = !DILocation(line: 2137, column: 6, scope: !7779)
!7800 = !DILocalVariable(name: "dbuf", scope: !7779, file: !3, line: 2138, type: !3990)
!7801 = !DILocation(line: 2138, column: 18, scope: !7779)
!7802 = !DILocation(line: 2140, column: 6, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2140, column: 6)
!7804 = !DILocation(line: 2140, column: 9, scope: !7803)
!7805 = !DILocation(line: 2140, column: 16, scope: !7803)
!7806 = !DILocation(line: 2140, column: 6, scope: !7779)
!7807 = !DILocation(line: 2141, column: 3, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2140, column: 36)
!7809 = !DILocation(line: 2141, column: 3, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 2141, column: 3)
!7811 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 2141, column: 3)
!7812 = !DILocation(line: 2141, column: 3, scope: !7811)
!7813 = !DILocation(line: 2142, column: 3, scope: !7808)
!7814 = !DILocation(line: 2145, column: 7, scope: !7815)
!7815 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2145, column: 6)
!7816 = !DILocation(line: 2145, column: 10, scope: !7815)
!7817 = !DILocation(line: 2145, column: 19, scope: !7815)
!7818 = !DILocation(line: 2145, column: 6, scope: !7779)
!7819 = !DILocation(line: 2146, column: 3, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 2145, column: 31)
!7821 = !DILocation(line: 2146, column: 3, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 2146, column: 3)
!7823 = distinct !DILexicalBlock(scope: !7820, file: !3, line: 2146, column: 3)
!7824 = !DILocation(line: 2146, column: 3, scope: !7823)
!7825 = !DILocation(line: 2147, column: 3, scope: !7820)
!7826 = !DILocation(line: 2150, column: 6, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2150, column: 6)
!7828 = !DILocation(line: 2150, column: 12, scope: !7827)
!7829 = !DILocation(line: 2150, column: 6, scope: !7779)
!7830 = !DILocation(line: 2151, column: 3, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 2150, column: 40)
!7832 = !DILocation(line: 2151, column: 3, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !3, line: 2151, column: 3)
!7834 = distinct !DILexicalBlock(scope: !7831, file: !3, line: 2151, column: 3)
!7835 = !DILocation(line: 2151, column: 3, scope: !7834)
!7836 = !DILocation(line: 2152, column: 3, scope: !7831)
!7837 = !DILocation(line: 2155, column: 6, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2155, column: 6)
!7839 = !DILocation(line: 2155, column: 14, scope: !7838)
!7840 = !DILocation(line: 2155, column: 17, scope: !7838)
!7841 = !DILocation(line: 2155, column: 11, scope: !7838)
!7842 = !DILocation(line: 2155, column: 6, scope: !7779)
!7843 = !DILocation(line: 2156, column: 3, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 2155, column: 23)
!7845 = !DILocation(line: 2156, column: 3, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 2156, column: 3)
!7847 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 2156, column: 3)
!7848 = !DILocation(line: 2156, column: 3, scope: !7847)
!7849 = !DILocation(line: 2157, column: 3, scope: !7844)
!7850 = !DILocation(line: 2160, column: 6, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2160, column: 6)
!7852 = !DILocation(line: 2160, column: 15, scope: !7851)
!7853 = !DILocation(line: 2160, column: 18, scope: !7851)
!7854 = !DILocation(line: 2160, column: 12, scope: !7851)
!7855 = !DILocation(line: 2160, column: 6, scope: !7779)
!7856 = !DILocation(line: 2161, column: 3, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 2160, column: 31)
!7858 = !DILocation(line: 2161, column: 3, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7860, file: !3, line: 2161, column: 3)
!7860 = distinct !DILexicalBlock(scope: !7857, file: !3, line: 2161, column: 3)
!7861 = !DILocation(line: 2161, column: 3, scope: !7860)
!7862 = !DILocation(line: 2162, column: 3, scope: !7857)
!7863 = !DILocation(line: 2165, column: 7, scope: !7779)
!7864 = !DILocation(line: 2165, column: 10, scope: !7779)
!7865 = !DILocation(line: 2165, column: 15, scope: !7779)
!7866 = !DILocation(line: 2165, column: 5, scope: !7779)
!7867 = !DILocation(line: 2167, column: 6, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2167, column: 6)
!7869 = !DILocation(line: 2167, column: 15, scope: !7868)
!7870 = !DILocation(line: 2167, column: 19, scope: !7868)
!7871 = !DILocation(line: 2167, column: 12, scope: !7868)
!7872 = !DILocation(line: 2167, column: 6, scope: !7779)
!7873 = !DILocation(line: 2168, column: 3, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 2167, column: 31)
!7875 = !DILocation(line: 2168, column: 3, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 2168, column: 3)
!7877 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 2168, column: 3)
!7878 = !DILocation(line: 2168, column: 3, scope: !7877)
!7879 = !DILocation(line: 2169, column: 3, scope: !7874)
!7880 = !DILocation(line: 2172, column: 27, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2172, column: 6)
!7882 = !DILocation(line: 2172, column: 6, scope: !7881)
!7883 = !DILocation(line: 2172, column: 6, scope: !7779)
!7884 = !DILocation(line: 2173, column: 3, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7881, file: !3, line: 2172, column: 31)
!7886 = !DILocation(line: 2173, column: 3, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7888, file: !3, line: 2173, column: 3)
!7888 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 2173, column: 3)
!7889 = !DILocation(line: 2173, column: 3, scope: !7888)
!7890 = !DILocation(line: 2174, column: 3, scope: !7885)
!7891 = !DILocation(line: 2177, column: 14, scope: !7779)
!7892 = !DILocation(line: 2177, column: 18, scope: !7779)
!7893 = !DILocation(line: 2177, column: 25, scope: !7779)
!7894 = !DILocation(line: 2177, column: 11, scope: !7779)
!7895 = !DILocation(line: 2179, column: 9, scope: !7779)
!7896 = !DILocation(line: 2179, column: 7, scope: !7779)
!7897 = !DILocation(line: 2181, column: 21, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2181, column: 6)
!7899 = !DILocation(line: 2181, column: 6, scope: !7898)
!7900 = !DILocation(line: 2181, column: 6, scope: !7779)
!7901 = !DILocation(line: 2182, column: 3, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 2181, column: 28)
!7903 = !DILocation(line: 2182, column: 3, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 2182, column: 3)
!7905 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 2182, column: 3)
!7906 = !DILocation(line: 2182, column: 3, scope: !7905)
!7907 = !DILocation(line: 2184, column: 3, scope: !7902)
!7908 = !DILocation(line: 2187, column: 19, scope: !7779)
!7909 = !DILocation(line: 2187, column: 25, scope: !7779)
!7910 = !DILocation(line: 2187, column: 31, scope: !7779)
!7911 = !DILocation(line: 2187, column: 8, scope: !7779)
!7912 = !DILocation(line: 2187, column: 6, scope: !7779)
!7913 = !DILocation(line: 2188, column: 6, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2188, column: 6)
!7915 = !DILocation(line: 2188, column: 10, scope: !7914)
!7916 = !DILocation(line: 2188, column: 6, scope: !7779)
!7917 = !DILocation(line: 2189, column: 3, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 2188, column: 15)
!7919 = !DILocation(line: 2189, column: 3, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 2189, column: 3)
!7921 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 2189, column: 3)
!7922 = !DILocation(line: 2189, column: 3, scope: !7921)
!7923 = !DILocation(line: 2191, column: 15, scope: !7918)
!7924 = !DILocation(line: 2191, column: 3, scope: !7918)
!7925 = !DILocation(line: 2192, column: 10, scope: !7918)
!7926 = !DILocation(line: 2192, column: 3, scope: !7918)
!7927 = !DILocation(line: 2195, column: 2, scope: !7779)
!7928 = !DILocation(line: 2195, column: 2, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7930, file: !3, line: 2195, column: 2)
!7930 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 2195, column: 2)
!7931 = !DILocation(line: 2195, column: 2, scope: !7930)
!7932 = !DILocation(line: 2197, column: 8, scope: !7779)
!7933 = !DILocation(line: 2197, column: 3, scope: !7779)
!7934 = !DILocation(line: 2197, column: 6, scope: !7779)
!7935 = !DILocation(line: 2199, column: 2, scope: !7779)
!7936 = !DILocation(line: 2200, column: 1, scope: !7779)
!7937 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !7938, file: !7938, line: 39, type: !7939, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7938 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!7939 = !DISubroutineType(types: !7940)
!7940 = !{!475, !2122}
!7941 = !DILocalVariable(name: "ptr", arg: 1, scope: !7937, file: !7938, line: 39, type: !2122)
!7942 = !DILocation(line: 39, column: 68, scope: !7937)
!7943 = !DILocation(line: 41, column: 9, scope: !7937)
!7944 = !DILocation(line: 41, column: 24, scope: !7937)
!7945 = !DILocation(line: 41, column: 27, scope: !7937)
!7946 = !DILocation(line: 41, column: 2, scope: !7937)
!7947 = distinct !DISubprogram(name: "vb2_mmap", scope: !3, file: !3, line: 2203, type: !7948, scopeLine: 2204, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{!243, !185, !970}
!7950 = !DILocalVariable(name: "q", arg: 1, scope: !7947, file: !3, line: 2203, type: !185)
!7951 = !DILocation(line: 2203, column: 32, scope: !7947)
!7952 = !DILocalVariable(name: "vma", arg: 2, scope: !7947, file: !3, line: 2203, type: !970)
!7953 = !DILocation(line: 2203, column: 58, scope: !7947)
!7954 = !DILocalVariable(name: "off", scope: !7947, file: !3, line: 2205, type: !309)
!7955 = !DILocation(line: 2205, column: 16, scope: !7947)
!7956 = !DILocation(line: 2205, column: 22, scope: !7947)
!7957 = !DILocation(line: 2205, column: 27, scope: !7947)
!7958 = !DILocation(line: 2205, column: 36, scope: !7947)
!7959 = !DILocalVariable(name: "vb", scope: !7947, file: !3, line: 2206, type: !181)
!7960 = !DILocation(line: 2206, column: 21, scope: !7947)
!7961 = !DILocalVariable(name: "buffer", scope: !7947, file: !3, line: 2207, type: !7)
!7962 = !DILocation(line: 2207, column: 15, scope: !7947)
!7963 = !DILocalVariable(name: "plane", scope: !7947, file: !3, line: 2207, type: !7)
!7964 = !DILocation(line: 2207, column: 27, scope: !7947)
!7965 = !DILocalVariable(name: "ret", scope: !7947, file: !3, line: 2208, type: !243)
!7966 = !DILocation(line: 2208, column: 6, scope: !7947)
!7967 = !DILocalVariable(name: "length", scope: !7947, file: !3, line: 2209, type: !309)
!7968 = !DILocation(line: 2209, column: 16, scope: !7947)
!7969 = !DILocation(line: 2211, column: 6, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2211, column: 6)
!7971 = !DILocation(line: 2211, column: 9, scope: !7970)
!7972 = !DILocation(line: 2211, column: 16, scope: !7970)
!7973 = !DILocation(line: 2211, column: 6, scope: !7947)
!7974 = !DILocation(line: 2212, column: 3, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 2211, column: 36)
!7976 = !DILocation(line: 2212, column: 3, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 2212, column: 3)
!7978 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 2212, column: 3)
!7979 = !DILocation(line: 2212, column: 3, scope: !7978)
!7980 = !DILocation(line: 2213, column: 3, scope: !7975)
!7981 = !DILocation(line: 2219, column: 8, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2219, column: 6)
!7983 = !DILocation(line: 2219, column: 13, scope: !7982)
!7984 = !DILocation(line: 2219, column: 22, scope: !7982)
!7985 = !DILocation(line: 2219, column: 6, scope: !7947)
!7986 = !DILocation(line: 2220, column: 3, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 2219, column: 36)
!7988 = !DILocation(line: 2220, column: 3, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7990, file: !3, line: 2220, column: 3)
!7990 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 2220, column: 3)
!7991 = !DILocation(line: 2220, column: 3, scope: !7990)
!7992 = !DILocation(line: 2221, column: 3, scope: !7987)
!7993 = !DILocation(line: 2223, column: 6, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2223, column: 6)
!7995 = !DILocation(line: 2223, column: 9, scope: !7994)
!7996 = !DILocation(line: 2223, column: 6, scope: !7947)
!7997 = !DILocation(line: 2224, column: 9, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 2224, column: 7)
!7999 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 2223, column: 20)
!8000 = !DILocation(line: 2224, column: 14, scope: !7998)
!8001 = !DILocation(line: 2224, column: 23, scope: !7998)
!8002 = !DILocation(line: 2224, column: 7, scope: !7999)
!8003 = !DILocation(line: 2225, column: 4, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7998, file: !3, line: 2224, column: 36)
!8005 = !DILocation(line: 2225, column: 4, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !3, line: 2225, column: 4)
!8007 = distinct !DILexicalBlock(scope: !8004, file: !3, line: 2225, column: 4)
!8008 = !DILocation(line: 2225, column: 4, scope: !8007)
!8009 = !DILocation(line: 2226, column: 4, scope: !8004)
!8010 = !DILocation(line: 2228, column: 2, scope: !7999)
!8011 = !DILocation(line: 2229, column: 9, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8013, file: !3, line: 2229, column: 7)
!8013 = distinct !DILexicalBlock(scope: !7994, file: !3, line: 2228, column: 9)
!8014 = !DILocation(line: 2229, column: 14, scope: !8012)
!8015 = !DILocation(line: 2229, column: 23, scope: !8012)
!8016 = !DILocation(line: 2229, column: 7, scope: !8013)
!8017 = !DILocation(line: 2230, column: 4, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 2229, column: 35)
!8019 = !DILocation(line: 2230, column: 4, scope: !8020)
!8020 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 2230, column: 4)
!8021 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 2230, column: 4)
!8022 = !DILocation(line: 2230, column: 4, scope: !8021)
!8023 = !DILocation(line: 2231, column: 4, scope: !8018)
!8024 = !DILocation(line: 2235, column: 14, scope: !7947)
!8025 = !DILocation(line: 2235, column: 17, scope: !7947)
!8026 = !DILocation(line: 2235, column: 2, scope: !7947)
!8027 = !DILocation(line: 2237, column: 27, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2237, column: 6)
!8029 = !DILocation(line: 2237, column: 6, scope: !8028)
!8030 = !DILocation(line: 2237, column: 6, scope: !7947)
!8031 = !DILocation(line: 2238, column: 3, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 2237, column: 31)
!8033 = !DILocation(line: 2238, column: 3, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 2238, column: 3)
!8035 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 2238, column: 3)
!8036 = !DILocation(line: 2238, column: 3, scope: !8035)
!8037 = !DILocation(line: 2239, column: 7, scope: !8032)
!8038 = !DILocation(line: 2240, column: 3, scope: !8032)
!8039 = !DILocation(line: 2246, column: 31, scope: !7947)
!8040 = !DILocation(line: 2246, column: 34, scope: !7947)
!8041 = !DILocation(line: 2246, column: 8, scope: !7947)
!8042 = !DILocation(line: 2246, column: 6, scope: !7947)
!8043 = !DILocation(line: 2247, column: 6, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2247, column: 6)
!8045 = !DILocation(line: 2247, column: 6, scope: !7947)
!8046 = !DILocation(line: 2248, column: 3, scope: !8044)
!8047 = !DILocation(line: 2250, column: 7, scope: !7947)
!8048 = !DILocation(line: 2250, column: 10, scope: !7947)
!8049 = !DILocation(line: 2250, column: 15, scope: !7947)
!8050 = !DILocation(line: 2250, column: 5, scope: !7947)
!8051 = !DILocation(line: 2257, column: 11, scope: !7947)
!8052 = !DILocation(line: 2257, column: 9, scope: !7947)
!8053 = !DILocation(line: 2258, column: 6, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2258, column: 6)
!8055 = !DILocation(line: 2258, column: 16, scope: !8054)
!8056 = !DILocation(line: 2258, column: 21, scope: !8054)
!8057 = !DILocation(line: 2258, column: 30, scope: !8054)
!8058 = !DILocation(line: 2258, column: 35, scope: !8054)
!8059 = !DILocation(line: 2258, column: 28, scope: !8054)
!8060 = !DILocation(line: 2258, column: 13, scope: !8054)
!8061 = !DILocation(line: 2258, column: 6, scope: !7947)
!8062 = !DILocation(line: 2259, column: 3, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8054, file: !3, line: 2258, column: 46)
!8064 = !DILocation(line: 2259, column: 3, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 2259, column: 3)
!8066 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 2259, column: 3)
!8067 = !DILocation(line: 2259, column: 3, scope: !8066)
!8068 = !DILocation(line: 2261, column: 7, scope: !8063)
!8069 = !DILocation(line: 2262, column: 3, scope: !8063)
!8070 = !DILocation(line: 2270, column: 2, scope: !7947)
!8071 = !DILocation(line: 2270, column: 7, scope: !7947)
!8072 = !DILocation(line: 2270, column: 16, scope: !7947)
!8073 = !DILocation(line: 2272, column: 8, scope: !7947)
!8074 = !DILocation(line: 2272, column: 6, scope: !7947)
!8075 = !DILocation(line: 2272, column: 2, scope: !7947)
!8076 = !DILabel(scope: !7947, name: "unlock", file: !3, line: 2274)
!8077 = !DILocation(line: 2274, column: 1, scope: !7947)
!8078 = !DILocation(line: 2275, column: 16, scope: !7947)
!8079 = !DILocation(line: 2275, column: 19, scope: !7947)
!8080 = !DILocation(line: 2275, column: 2, scope: !7947)
!8081 = !DILocation(line: 2276, column: 6, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2276, column: 6)
!8083 = !DILocation(line: 2276, column: 6, scope: !7947)
!8084 = !DILocation(line: 2277, column: 10, scope: !8082)
!8085 = !DILocation(line: 2277, column: 3, scope: !8082)
!8086 = !DILocation(line: 2279, column: 2, scope: !7947)
!8087 = !DILocation(line: 2279, column: 2, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 2279, column: 2)
!8089 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 2279, column: 2)
!8090 = !DILocation(line: 2279, column: 2, scope: !8089)
!8091 = !DILocation(line: 2280, column: 2, scope: !7947)
!8092 = !DILocation(line: 2281, column: 1, scope: !7947)
!8093 = distinct !DISubprogram(name: "__find_plane_by_offset", scope: !3, file: !3, line: 2106, type: !8094, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8094 = !DISubroutineType(types: !8095)
!8095 = !{!243, !185, !309, !2678, !2678}
!8096 = !DILocalVariable(name: "q", arg: 1, scope: !8093, file: !3, line: 2106, type: !185)
!8097 = !DILocation(line: 2106, column: 53, scope: !8093)
!8098 = !DILocalVariable(name: "off", arg: 2, scope: !8093, file: !3, line: 2106, type: !309)
!8099 = !DILocation(line: 2106, column: 70, scope: !8093)
!8100 = !DILocalVariable(name: "_buffer", arg: 3, scope: !8093, file: !3, line: 2107, type: !2678)
!8101 = !DILocation(line: 2107, column: 18, scope: !8093)
!8102 = !DILocalVariable(name: "_plane", arg: 4, scope: !8093, file: !3, line: 2107, type: !2678)
!8103 = !DILocation(line: 2107, column: 41, scope: !8093)
!8104 = !DILocalVariable(name: "vb", scope: !8093, file: !3, line: 2109, type: !181)
!8105 = !DILocation(line: 2109, column: 21, scope: !8093)
!8106 = !DILocalVariable(name: "buffer", scope: !8093, file: !3, line: 2110, type: !7)
!8107 = !DILocation(line: 2110, column: 15, scope: !8093)
!8108 = !DILocalVariable(name: "plane", scope: !8093, file: !3, line: 2110, type: !7)
!8109 = !DILocation(line: 2110, column: 23, scope: !8093)
!8110 = !DILocation(line: 2117, column: 14, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 2117, column: 2)
!8112 = !DILocation(line: 2117, column: 7, scope: !8111)
!8113 = !DILocation(line: 2117, column: 19, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 2117, column: 2)
!8115 = !DILocation(line: 2117, column: 28, scope: !8114)
!8116 = !DILocation(line: 2117, column: 31, scope: !8114)
!8117 = !DILocation(line: 2117, column: 26, scope: !8114)
!8118 = !DILocation(line: 2117, column: 2, scope: !8111)
!8119 = !DILocation(line: 2118, column: 8, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 2117, column: 54)
!8121 = !DILocation(line: 2118, column: 11, scope: !8120)
!8122 = !DILocation(line: 2118, column: 16, scope: !8120)
!8123 = !DILocation(line: 2118, column: 6, scope: !8120)
!8124 = !DILocation(line: 2120, column: 14, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 2120, column: 3)
!8126 = !DILocation(line: 2120, column: 8, scope: !8125)
!8127 = !DILocation(line: 2120, column: 19, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8125, file: !3, line: 2120, column: 3)
!8129 = !DILocation(line: 2120, column: 27, scope: !8128)
!8130 = !DILocation(line: 2120, column: 31, scope: !8128)
!8131 = !DILocation(line: 2120, column: 25, scope: !8128)
!8132 = !DILocation(line: 2120, column: 3, scope: !8125)
!8133 = !DILocation(line: 2121, column: 8, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 2121, column: 8)
!8135 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 2120, column: 52)
!8136 = !DILocation(line: 2121, column: 12, scope: !8134)
!8137 = !DILocation(line: 2121, column: 19, scope: !8134)
!8138 = !DILocation(line: 2121, column: 26, scope: !8134)
!8139 = !DILocation(line: 2121, column: 28, scope: !8134)
!8140 = !DILocation(line: 2121, column: 38, scope: !8134)
!8141 = !DILocation(line: 2121, column: 35, scope: !8134)
!8142 = !DILocation(line: 2121, column: 8, scope: !8135)
!8143 = !DILocation(line: 2122, column: 16, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 2121, column: 43)
!8145 = !DILocation(line: 2122, column: 6, scope: !8144)
!8146 = !DILocation(line: 2122, column: 14, scope: !8144)
!8147 = !DILocation(line: 2123, column: 15, scope: !8144)
!8148 = !DILocation(line: 2123, column: 6, scope: !8144)
!8149 = !DILocation(line: 2123, column: 13, scope: !8144)
!8150 = !DILocation(line: 2124, column: 5, scope: !8144)
!8151 = !DILocation(line: 2126, column: 3, scope: !8135)
!8152 = !DILocation(line: 2120, column: 43, scope: !8128)
!8153 = !DILocation(line: 2120, column: 3, scope: !8128)
!8154 = distinct !{!8154, !8132, !8155}
!8155 = !DILocation(line: 2126, column: 3, scope: !8125)
!8156 = !DILocation(line: 2127, column: 2, scope: !8120)
!8157 = !DILocation(line: 2117, column: 44, scope: !8114)
!8158 = !DILocation(line: 2117, column: 2, scope: !8114)
!8159 = distinct !{!8159, !8118, !8160}
!8160 = !DILocation(line: 2127, column: 2, scope: !8111)
!8161 = !DILocation(line: 2129, column: 2, scope: !8093)
!8162 = !DILocation(line: 2130, column: 1, scope: !8093)
!8163 = !DILocation(line: 327, column: 67, scope: !5209, inlinedAt: !8164)
!8164 = distinct !DILocation(line: 2336, column: 2, scope: !8165)
!8165 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2336, column: 2)
!8166 = !DILocalVariable(name: "q", arg: 1, scope: !4608, file: !3, line: 2317, type: !185)
!8167 = !DILocation(line: 2317, column: 43, scope: !4608)
!8168 = !DILocalVariable(name: "__ret_warn_on", scope: !8169, file: !3, line: 2322, type: !243)
!8169 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 2322, column: 6)
!8170 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2322, column: 6)
!8171 = !DILocation(line: 2322, column: 6, scope: !8169)
!8172 = !DILocation(line: 2322, column: 6, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 2322, column: 6)
!8174 = !DILocation(line: 2322, column: 6, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 2322, column: 6)
!8176 = !DILocation(line: 2322, column: 6, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 2322, column: 6)
!8178 = !DILocation(line: 2322, column: 6, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 2322, column: 6)
!8180 = !{i32 -2140524252, i32 -2140524223, i32 -2140524177, i32 -2140524119, i32 -2140524065, i32 -2140524011, i32 -2140523956, i32 -2140523925}
!8181 = !DILocation(line: 2322, column: 6, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 2322, column: 6)
!8183 = !{i32 -2140523495, i32 -2140523488, i32 -2140523436, i32 -2140523405, i32 -2140523375}
!8184 = !DILocation(line: 2322, column: 6, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 2322, column: 6)
!8186 = !DILocation(line: 2322, column: 6, scope: !8170)
!8187 = !DILocation(line: 2322, column: 22, scope: !8170)
!8188 = !DILocalVariable(name: "__ret_warn_on", scope: !8189, file: !3, line: 2323, type: !243)
!8189 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 2323, column: 6)
!8190 = !DILocation(line: 2323, column: 6, scope: !8189)
!8191 = !DILocation(line: 2323, column: 6, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 2323, column: 6)
!8193 = !DILocation(line: 2323, column: 6, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 2323, column: 6)
!8195 = !DILocation(line: 2323, column: 6, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 2323, column: 6)
!8197 = !DILocation(line: 2323, column: 6, scope: !8198)
!8198 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 2323, column: 6)
!8199 = !{i32 -2140522796, i32 -2140522767, i32 -2140522721, i32 -2140522663, i32 -2140522609, i32 -2140522555, i32 -2140522500, i32 -2140522469}
!8200 = !DILocation(line: 2323, column: 6, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 2323, column: 6)
!8202 = !{i32 -2140522039, i32 -2140522032, i32 -2140521980, i32 -2140521949, i32 -2140521919}
!8203 = !DILocation(line: 2323, column: 6, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 2323, column: 6)
!8205 = !DILocation(line: 2323, column: 6, scope: !8170)
!8206 = !DILocation(line: 2323, column: 26, scope: !8170)
!8207 = !DILocalVariable(name: "__ret_warn_on", scope: !8208, file: !3, line: 2324, type: !243)
!8208 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 2324, column: 6)
!8209 = !DILocation(line: 2324, column: 6, scope: !8208)
!8210 = !DILocation(line: 2324, column: 6, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 2324, column: 6)
!8212 = !DILocation(line: 2324, column: 6, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 2324, column: 6)
!8214 = !DILocation(line: 2324, column: 6, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2324, column: 6)
!8216 = !DILocation(line: 2324, column: 6, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2324, column: 6)
!8218 = !{i32 -2140521336, i32 -2140521307, i32 -2140521261, i32 -2140521203, i32 -2140521149, i32 -2140521095, i32 -2140521040, i32 -2140521009}
!8219 = !DILocation(line: 2324, column: 6, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2324, column: 6)
!8221 = !{i32 -2140520579, i32 -2140520572, i32 -2140520520, i32 -2140520489, i32 -2140520459}
!8222 = !DILocation(line: 2324, column: 6, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2324, column: 6)
!8224 = !DILocation(line: 2324, column: 6, scope: !8170)
!8225 = !DILocation(line: 2324, column: 29, scope: !8170)
!8226 = !DILocalVariable(name: "__ret_warn_on", scope: !8227, file: !3, line: 2325, type: !243)
!8227 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 2325, column: 6)
!8228 = !DILocation(line: 2325, column: 6, scope: !8227)
!8229 = !DILocation(line: 2325, column: 6, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 2325, column: 6)
!8231 = !DILocation(line: 2325, column: 6, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8230, file: !3, line: 2325, column: 6)
!8233 = !DILocation(line: 2325, column: 6, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8232, file: !3, line: 2325, column: 6)
!8235 = !DILocation(line: 2325, column: 6, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8232, file: !3, line: 2325, column: 6)
!8237 = !{i32 -2140519879, i32 -2140519850, i32 -2140519804, i32 -2140519746, i32 -2140519692, i32 -2140519638, i32 -2140519583, i32 -2140519552}
!8238 = !DILocation(line: 2325, column: 6, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8232, file: !3, line: 2325, column: 6)
!8240 = !{i32 -2140519122, i32 -2140519115, i32 -2140519063, i32 -2140519032, i32 -2140519002}
!8241 = !DILocation(line: 2325, column: 6, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8232, file: !3, line: 2325, column: 6)
!8243 = !DILocation(line: 2325, column: 6, scope: !8170)
!8244 = !DILocation(line: 2325, column: 27, scope: !8170)
!8245 = !DILocalVariable(name: "__ret_warn_on", scope: !8246, file: !3, line: 2326, type: !243)
!8246 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 2326, column: 6)
!8247 = !DILocation(line: 2326, column: 6, scope: !8246)
!8248 = !DILocation(line: 2326, column: 6, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 2326, column: 6)
!8250 = !DILocation(line: 2326, column: 6, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 2326, column: 6)
!8252 = !DILocation(line: 2326, column: 6, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 2326, column: 6)
!8254 = !DILocation(line: 2326, column: 6, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 2326, column: 6)
!8256 = !{i32 -2140518418, i32 -2140518389, i32 -2140518343, i32 -2140518285, i32 -2140518231, i32 -2140518177, i32 -2140518122, i32 -2140518091}
!8257 = !DILocation(line: 2326, column: 6, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 2326, column: 6)
!8259 = !{i32 -2140517661, i32 -2140517654, i32 -2140517602, i32 -2140517571, i32 -2140517541}
!8260 = !DILocation(line: 2326, column: 6, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 2326, column: 6)
!8262 = !DILocation(line: 2326, column: 6, scope: !8170)
!8263 = !DILocation(line: 2326, column: 30, scope: !8170)
!8264 = !DILocalVariable(name: "__ret_warn_on", scope: !8265, file: !3, line: 2327, type: !243)
!8265 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 2327, column: 6)
!8266 = !DILocation(line: 2327, column: 6, scope: !8265)
!8267 = !DILocation(line: 2327, column: 6, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8265, file: !3, line: 2327, column: 6)
!8269 = !DILocation(line: 2327, column: 6, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !8268, file: !3, line: 2327, column: 6)
!8271 = !DILocation(line: 2327, column: 6, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 2327, column: 6)
!8273 = !DILocation(line: 2327, column: 6, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 2327, column: 6)
!8275 = !{i32 -2140516949, i32 -2140516920, i32 -2140516874, i32 -2140516816, i32 -2140516762, i32 -2140516708, i32 -2140516653, i32 -2140516622}
!8276 = !DILocation(line: 2327, column: 6, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 2327, column: 6)
!8278 = !{i32 -2140516192, i32 -2140516185, i32 -2140516133, i32 -2140516102, i32 -2140516072}
!8279 = !DILocation(line: 2327, column: 6, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8270, file: !3, line: 2327, column: 6)
!8281 = !DILocation(line: 2327, column: 6, scope: !8170)
!8282 = !DILocation(line: 2327, column: 36, scope: !8170)
!8283 = !DILocalVariable(name: "__ret_warn_on", scope: !8284, file: !3, line: 2328, type: !243)
!8284 = distinct !DILexicalBlock(scope: !8170, file: !3, line: 2328, column: 6)
!8285 = !DILocation(line: 2328, column: 6, scope: !8284)
!8286 = !DILocation(line: 2328, column: 6, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 2328, column: 6)
!8288 = !DILocation(line: 2328, column: 6, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 2328, column: 6)
!8290 = !DILocation(line: 2328, column: 6, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8289, file: !3, line: 2328, column: 6)
!8292 = !DILocation(line: 2328, column: 6, scope: !8293)
!8293 = distinct !DILexicalBlock(scope: !8289, file: !3, line: 2328, column: 6)
!8294 = !{i32 -2140515482, i32 -2140515453, i32 -2140515407, i32 -2140515349, i32 -2140515295, i32 -2140515241, i32 -2140515186, i32 -2140515155}
!8295 = !DILocation(line: 2328, column: 6, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8289, file: !3, line: 2328, column: 6)
!8297 = !{i32 -2140514725, i32 -2140514718, i32 -2140514666, i32 -2140514635, i32 -2140514605}
!8298 = !DILocation(line: 2328, column: 6, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8289, file: !3, line: 2328, column: 6)
!8300 = !DILocation(line: 2328, column: 6, scope: !8170)
!8301 = !DILocation(line: 2322, column: 6, scope: !4608)
!8302 = !DILocation(line: 2329, column: 3, scope: !8170)
!8303 = !DILocalVariable(name: "__ret_warn_on", scope: !8304, file: !3, line: 2331, type: !243)
!8304 = distinct !DILexicalBlock(scope: !8305, file: !3, line: 2331, column: 6)
!8305 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2331, column: 6)
!8306 = !DILocation(line: 2331, column: 6, scope: !8304)
!8307 = !DILocation(line: 0, scope: !8304)
!8308 = !DILocation(line: 2331, column: 6, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 2331, column: 6)
!8310 = !DILocation(line: 2331, column: 6, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 2331, column: 6)
!8312 = !DILocation(line: 2331, column: 6, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 2331, column: 6)
!8314 = !DILocation(line: 2331, column: 6, scope: !8315)
!8315 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 2331, column: 6)
!8316 = !{i32 -2140513985, i32 -2140513956, i32 -2140513910, i32 -2140513852, i32 -2140513798, i32 -2140513744, i32 -2140513689, i32 -2140513658}
!8317 = !DILocation(line: 2331, column: 6, scope: !8318)
!8318 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 2331, column: 6)
!8319 = !{i32 -2140513228, i32 -2140513221, i32 -2140513169, i32 -2140513138, i32 -2140513108}
!8320 = !DILocation(line: 2331, column: 6, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 2331, column: 6)
!8322 = !DILocation(line: 2331, column: 6, scope: !8305)
!8323 = !DILocation(line: 2331, column: 6, scope: !4608)
!8324 = !DILocation(line: 2332, column: 3, scope: !8305)
!8325 = !DILocation(line: 2334, column: 18, scope: !4608)
!8326 = !DILocation(line: 2334, column: 21, scope: !4608)
!8327 = !DILocation(line: 2334, column: 2, scope: !4608)
!8328 = !DILocation(line: 2335, column: 18, scope: !4608)
!8329 = !DILocation(line: 2335, column: 21, scope: !4608)
!8330 = !DILocation(line: 2335, column: 2, scope: !4608)
!8331 = !DILocation(line: 2336, column: 2, scope: !4608)
!8332 = !DILocation(line: 2336, column: 2, scope: !8165)
!8333 = !DILocation(line: 329, column: 10, scope: !5209, inlinedAt: !8164)
!8334 = !DILocation(line: 329, column: 16, scope: !5209, inlinedAt: !8164)
!8335 = !DILocation(line: 2337, column: 2, scope: !4608)
!8336 = !DILocation(line: 2337, column: 2, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2337, column: 2)
!8338 = !DILocation(line: 2338, column: 2, scope: !4608)
!8339 = !DILocation(line: 2338, column: 2, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2338, column: 2)
!8341 = !DILocation(line: 2340, column: 2, scope: !4608)
!8342 = !DILocation(line: 2340, column: 5, scope: !4608)
!8343 = !DILocation(line: 2340, column: 12, scope: !4608)
!8344 = !DILocation(line: 2342, column: 6, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2342, column: 6)
!8346 = !DILocation(line: 2342, column: 9, scope: !8345)
!8347 = !DILocation(line: 2342, column: 25, scope: !8345)
!8348 = !DILocation(line: 2342, column: 6, scope: !4608)
!8349 = !DILocation(line: 2343, column: 3, scope: !8345)
!8350 = !DILocation(line: 2343, column: 6, scope: !8345)
!8351 = !DILocation(line: 2343, column: 22, scope: !8345)
!8352 = !DILocation(line: 2345, column: 6, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2345, column: 6)
!8354 = !DILocation(line: 2345, column: 9, scope: !8353)
!8355 = !DILocation(line: 2345, column: 6, scope: !4608)
!8356 = !DILocation(line: 2346, column: 3, scope: !8353)
!8357 = !DILocation(line: 2346, column: 6, scope: !8353)
!8358 = !DILocation(line: 2346, column: 14, scope: !8353)
!8359 = !DILocation(line: 2348, column: 16, scope: !8353)
!8360 = !DILocation(line: 2348, column: 19, scope: !8353)
!8361 = !DILocation(line: 2348, column: 3, scope: !8353)
!8362 = !DILocation(line: 2348, column: 6, scope: !8353)
!8363 = !DILocation(line: 2348, column: 14, scope: !8353)
!8364 = !DILocation(line: 2350, column: 6, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 2350, column: 6)
!8366 = !DILocation(line: 2350, column: 9, scope: !8365)
!8367 = !DILocation(line: 2350, column: 17, scope: !8365)
!8368 = !DILocation(line: 2350, column: 6, scope: !4608)
!8369 = !DILocation(line: 2351, column: 12, scope: !8365)
!8370 = !DILocation(line: 2351, column: 15, scope: !8365)
!8371 = !DILocation(line: 2352, column: 5, scope: !8365)
!8372 = !DILocation(line: 2352, column: 8, scope: !8365)
!8373 = !DILocation(line: 2352, column: 35, scope: !8365)
!8374 = !DILocation(line: 2351, column: 3, scope: !8365)
!8375 = !DILocation(line: 2354, column: 2, scope: !4608)
!8376 = !DILocation(line: 2355, column: 1, scope: !4608)
!8377 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !6306, file: !6306, line: 33, type: !7606, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8378 = !DILocalVariable(name: "list", arg: 1, scope: !8377, file: !6306, line: 33, type: !207)
!8379 = !DILocation(line: 33, column: 53, scope: !8377)
!8380 = !DILocation(line: 35, column: 2, scope: !8377)
!8381 = !DILocation(line: 35, column: 2, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8377, file: !6306, line: 35, column: 2)
!8383 = !DILocation(line: 35, column: 2, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8382, file: !6306, line: 35, column: 2)
!8385 = !DILocation(line: 35, column: 2, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8382, file: !6306, line: 35, column: 2)
!8387 = !DILocation(line: 36, column: 15, scope: !8377)
!8388 = !DILocation(line: 36, column: 2, scope: !8377)
!8389 = !DILocation(line: 36, column: 8, scope: !8377)
!8390 = !DILocation(line: 36, column: 13, scope: !8377)
!8391 = !DILocation(line: 37, column: 1, scope: !8377)
!8392 = distinct !DISubprogram(name: "vb2_core_queue_release", scope: !3, file: !3, line: 2360, type: !3955, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8393 = !DILocalVariable(name: "q", arg: 1, scope: !8392, file: !3, line: 2360, type: !185)
!8394 = !DILocation(line: 2360, column: 47, scope: !8392)
!8395 = !DILocation(line: 2362, column: 23, scope: !8392)
!8396 = !DILocation(line: 2362, column: 2, scope: !8392)
!8397 = !DILocation(line: 2363, column: 21, scope: !8392)
!8398 = !DILocation(line: 2363, column: 2, scope: !8392)
!8399 = !DILocation(line: 2364, column: 14, scope: !8392)
!8400 = !DILocation(line: 2364, column: 17, scope: !8392)
!8401 = !DILocation(line: 2364, column: 2, scope: !8392)
!8402 = !DILocation(line: 2365, column: 19, scope: !8392)
!8403 = !DILocation(line: 2365, column: 22, scope: !8392)
!8404 = !DILocation(line: 2365, column: 25, scope: !8392)
!8405 = !DILocation(line: 2365, column: 2, scope: !8392)
!8406 = !DILocation(line: 2366, column: 16, scope: !8392)
!8407 = !DILocation(line: 2366, column: 19, scope: !8392)
!8408 = !DILocation(line: 2366, column: 2, scope: !8392)
!8409 = !DILocation(line: 2367, column: 1, scope: !8392)
!8410 = distinct !DISubprogram(name: "__vb2_cleanup_fileio", scope: !3, file: !3, line: 2630, type: !4609, scopeLine: 2631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8411 = !DILocalVariable(name: "q", arg: 1, scope: !8410, file: !3, line: 2630, type: !185)
!8412 = !DILocation(line: 2630, column: 51, scope: !8410)
!8413 = !DILocalVariable(name: "fileio", scope: !8410, file: !3, line: 2632, type: !4253)
!8414 = !DILocation(line: 2632, column: 26, scope: !8410)
!8415 = !DILocation(line: 2632, column: 35, scope: !8410)
!8416 = !DILocation(line: 2632, column: 38, scope: !8410)
!8417 = !DILocation(line: 2634, column: 6, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 2634, column: 6)
!8419 = !DILocation(line: 2634, column: 6, scope: !8410)
!8420 = !DILocation(line: 2635, column: 22, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 2634, column: 14)
!8422 = !DILocation(line: 2635, column: 25, scope: !8421)
!8423 = !DILocation(line: 2635, column: 28, scope: !8421)
!8424 = !DILocation(line: 2635, column: 3, scope: !8421)
!8425 = !DILocation(line: 2636, column: 3, scope: !8421)
!8426 = !DILocation(line: 2636, column: 6, scope: !8421)
!8427 = !DILocation(line: 2636, column: 13, scope: !8421)
!8428 = !DILocation(line: 2637, column: 3, scope: !8421)
!8429 = !DILocation(line: 2637, column: 11, scope: !8421)
!8430 = !DILocation(line: 2637, column: 17, scope: !8421)
!8431 = !DILocation(line: 2638, column: 20, scope: !8421)
!8432 = !DILocation(line: 2638, column: 23, scope: !8421)
!8433 = !DILocation(line: 2638, column: 31, scope: !8421)
!8434 = !DILocation(line: 2638, column: 40, scope: !8421)
!8435 = !DILocation(line: 2638, column: 48, scope: !8421)
!8436 = !DILocation(line: 2638, column: 3, scope: !8421)
!8437 = !DILocation(line: 2639, column: 9, scope: !8421)
!8438 = !DILocation(line: 2639, column: 3, scope: !8421)
!8439 = !DILocation(line: 2640, column: 3, scope: !8421)
!8440 = !DILocation(line: 2640, column: 3, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !3, line: 2640, column: 3)
!8442 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 2640, column: 3)
!8443 = !DILocation(line: 2640, column: 3, scope: !8442)
!8444 = !DILocation(line: 2641, column: 2, scope: !8421)
!8445 = !DILocation(line: 2642, column: 2, scope: !8410)
!8446 = distinct !DISubprogram(name: "vb2_core_poll", scope: !3, file: !3, line: 2370, type: !8447, scopeLine: 2372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8447 = !DISubroutineType(types: !8448)
!8448 = !{!2900, !185, !337, !8449}
!8449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8450, size: 64)
!8450 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_table", file: !2904, line: 46, baseType: !2903)
!8451 = !DILocation(line: 407, column: 64, scope: !5195, inlinedAt: !8452)
!8452 = distinct !DILocation(line: 2444, column: 2, scope: !8446)
!8453 = !DILocation(line: 407, column: 84, scope: !5195, inlinedAt: !8452)
!8454 = !DILocation(line: 327, column: 67, scope: !5209, inlinedAt: !8455)
!8455 = distinct !DILocation(line: 2440, column: 2, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 2440, column: 2)
!8457 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 2440, column: 2)
!8458 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 2440, column: 2)
!8459 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 2440, column: 2)
!8460 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2440, column: 2)
!8461 = !DILocalVariable(name: "q", arg: 1, scope: !8446, file: !3, line: 2370, type: !185)
!8462 = !DILocation(line: 2370, column: 42, scope: !8446)
!8463 = !DILocalVariable(name: "file", arg: 2, scope: !8446, file: !3, line: 2370, type: !337)
!8464 = !DILocation(line: 2370, column: 58, scope: !8446)
!8465 = !DILocalVariable(name: "wait", arg: 3, scope: !8446, file: !3, line: 2371, type: !8449)
!8466 = !DILocation(line: 2371, column: 15, scope: !8446)
!8467 = !DILocalVariable(name: "req_events", scope: !8446, file: !3, line: 2373, type: !2900)
!8468 = !DILocation(line: 2373, column: 11, scope: !8446)
!8469 = !DILocation(line: 2373, column: 46, scope: !8446)
!8470 = !DILocation(line: 2373, column: 24, scope: !8446)
!8471 = !DILocalVariable(name: "vb", scope: !8446, file: !3, line: 2374, type: !181)
!8472 = !DILocation(line: 2374, column: 21, scope: !8446)
!8473 = !DILocalVariable(name: "flags", scope: !8446, file: !3, line: 2375, type: !309)
!8474 = !DILocation(line: 2375, column: 16, scope: !8446)
!8475 = !DILocation(line: 2377, column: 7, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2377, column: 6)
!8477 = !DILocation(line: 2377, column: 10, scope: !8476)
!8478 = !DILocation(line: 2377, column: 20, scope: !8476)
!8479 = !DILocation(line: 2377, column: 25, scope: !8476)
!8480 = !DILocation(line: 2377, column: 36, scope: !8476)
!8481 = !DILocation(line: 2377, column: 6, scope: !8446)
!8482 = !DILocation(line: 2378, column: 3, scope: !8476)
!8483 = !DILocation(line: 2379, column: 6, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2379, column: 6)
!8485 = !DILocation(line: 2379, column: 9, scope: !8484)
!8486 = !DILocation(line: 2379, column: 19, scope: !8484)
!8487 = !DILocation(line: 2379, column: 24, scope: !8484)
!8488 = !DILocation(line: 2379, column: 35, scope: !8484)
!8489 = !DILocation(line: 2379, column: 6, scope: !8446)
!8490 = !DILocation(line: 2380, column: 3, scope: !8484)
!8491 = !DILocation(line: 2382, column: 12, scope: !8446)
!8492 = !DILocation(line: 2382, column: 19, scope: !8446)
!8493 = !DILocation(line: 2382, column: 22, scope: !8446)
!8494 = !DILocation(line: 2382, column: 31, scope: !8446)
!8495 = !DILocation(line: 2382, column: 2, scope: !8446)
!8496 = !DILocation(line: 2387, column: 6, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2387, column: 6)
!8498 = !DILocation(line: 2387, column: 9, scope: !8497)
!8499 = !DILocation(line: 2387, column: 21, scope: !8497)
!8500 = !DILocation(line: 2387, column: 26, scope: !8497)
!8501 = !DILocation(line: 2387, column: 51, scope: !8497)
!8502 = !DILocation(line: 2387, column: 30, scope: !8497)
!8503 = !DILocation(line: 2387, column: 6, scope: !8446)
!8504 = !DILocation(line: 2388, column: 8, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 2388, column: 7)
!8506 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 2387, column: 55)
!8507 = !DILocation(line: 2388, column: 11, scope: !8505)
!8508 = !DILocation(line: 2388, column: 21, scope: !8505)
!8509 = !DILocation(line: 2388, column: 25, scope: !8505)
!8510 = !DILocation(line: 2388, column: 28, scope: !8505)
!8511 = !DILocation(line: 2388, column: 37, scope: !8505)
!8512 = !DILocation(line: 2388, column: 49, scope: !8505)
!8513 = !DILocation(line: 2389, column: 6, scope: !8505)
!8514 = !DILocation(line: 2389, column: 17, scope: !8505)
!8515 = !DILocation(line: 2388, column: 7, scope: !8506)
!8516 = !DILocation(line: 2390, column: 26, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8518, file: !3, line: 2390, column: 8)
!8518 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 2389, column: 45)
!8519 = !DILocation(line: 2390, column: 8, scope: !8517)
!8520 = !DILocation(line: 2390, column: 8, scope: !8518)
!8521 = !DILocation(line: 2391, column: 5, scope: !8517)
!8522 = !DILocation(line: 2392, column: 3, scope: !8518)
!8523 = !DILocation(line: 2393, column: 7, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 2393, column: 7)
!8525 = !DILocation(line: 2393, column: 10, scope: !8524)
!8526 = !DILocation(line: 2393, column: 20, scope: !8524)
!8527 = !DILocation(line: 2393, column: 24, scope: !8524)
!8528 = !DILocation(line: 2393, column: 27, scope: !8524)
!8529 = !DILocation(line: 2393, column: 36, scope: !8524)
!8530 = !DILocation(line: 2393, column: 49, scope: !8524)
!8531 = !DILocation(line: 2394, column: 6, scope: !8524)
!8532 = !DILocation(line: 2394, column: 17, scope: !8524)
!8533 = !DILocation(line: 2393, column: 7, scope: !8506)
!8534 = !DILocation(line: 2395, column: 26, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 2395, column: 8)
!8536 = distinct !DILexicalBlock(scope: !8524, file: !3, line: 2394, column: 46)
!8537 = !DILocation(line: 2395, column: 8, scope: !8535)
!8538 = !DILocation(line: 2395, column: 8, scope: !8536)
!8539 = !DILocation(line: 2396, column: 5, scope: !8535)
!8540 = !DILocation(line: 2400, column: 4, scope: !8536)
!8541 = !DILocation(line: 2402, column: 2, scope: !8506)
!8542 = !DILocation(line: 2408, column: 24, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2408, column: 6)
!8544 = !DILocation(line: 2408, column: 7, scope: !8543)
!8545 = !DILocation(line: 2408, column: 27, scope: !8543)
!8546 = !DILocation(line: 2408, column: 30, scope: !8543)
!8547 = !DILocation(line: 2408, column: 33, scope: !8543)
!8548 = !DILocation(line: 2408, column: 6, scope: !8446)
!8549 = !DILocation(line: 2409, column: 3, scope: !8543)
!8550 = !DILocation(line: 2417, column: 6, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2417, column: 6)
!8552 = !DILocation(line: 2417, column: 9, scope: !8551)
!8553 = !DILocation(line: 2417, column: 51, scope: !8551)
!8554 = !DILocation(line: 2418, column: 6, scope: !8551)
!8555 = !DILocation(line: 2418, column: 9, scope: !8551)
!8556 = !DILocation(line: 2418, column: 29, scope: !8551)
!8557 = !DILocation(line: 2418, column: 33, scope: !8551)
!8558 = !DILocation(line: 2418, column: 44, scope: !8551)
!8559 = !DILocation(line: 2417, column: 6, scope: !8446)
!8560 = !DILocation(line: 2419, column: 3, scope: !8551)
!8561 = !DILocation(line: 2425, column: 6, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2425, column: 6)
!8563 = !DILocation(line: 2425, column: 9, scope: !8562)
!8564 = !DILocation(line: 2425, column: 19, scope: !8562)
!8565 = !DILocation(line: 2425, column: 22, scope: !8562)
!8566 = !DILocation(line: 2425, column: 25, scope: !8562)
!8567 = !DILocation(line: 2425, column: 32, scope: !8562)
!8568 = !DILocation(line: 2425, column: 35, scope: !8562)
!8569 = !DILocation(line: 2425, column: 38, scope: !8562)
!8570 = !DILocation(line: 2425, column: 53, scope: !8562)
!8571 = !DILocation(line: 2425, column: 56, scope: !8562)
!8572 = !DILocation(line: 2425, column: 51, scope: !8562)
!8573 = !DILocation(line: 2425, column: 6, scope: !8446)
!8574 = !DILocation(line: 2426, column: 3, scope: !8562)
!8575 = !DILocation(line: 2428, column: 18, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2428, column: 6)
!8577 = !DILocation(line: 2428, column: 21, scope: !8576)
!8578 = !DILocation(line: 2428, column: 6, scope: !8576)
!8579 = !DILocation(line: 2428, column: 6, scope: !8446)
!8580 = !DILocation(line: 2433, column: 7, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 2433, column: 7)
!8582 = distinct !DILexicalBlock(scope: !8576, file: !3, line: 2428, column: 33)
!8583 = !DILocation(line: 2433, column: 10, scope: !8581)
!8584 = !DILocation(line: 2433, column: 7, scope: !8582)
!8585 = !DILocation(line: 2434, column: 4, scope: !8581)
!8586 = !DILocation(line: 2435, column: 2, scope: !8582)
!8587 = !DILocation(line: 2440, column: 2, scope: !8446)
!8588 = !DILocation(line: 2440, column: 2, scope: !8460)
!8589 = !DILocalVariable(name: "__dummy", scope: !8590, file: !3, line: 2440, type: !309)
!8590 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 2440, column: 2)
!8591 = !DILocation(line: 2440, column: 2, scope: !8590)
!8592 = !DILocalVariable(name: "__dummy2", scope: !8590, file: !3, line: 2440, type: !309)
!8593 = !DILocation(line: 2440, column: 2, scope: !8459)
!8594 = !DILocation(line: 2440, column: 2, scope: !8458)
!8595 = !DILocation(line: 2440, column: 2, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8458, file: !3, line: 2440, column: 2)
!8597 = !DILocalVariable(name: "__dummy", scope: !8598, file: !3, line: 2440, type: !309)
!8598 = distinct !DILexicalBlock(scope: !8599, file: !3, line: 2440, column: 2)
!8599 = distinct !DILexicalBlock(scope: !8596, file: !3, line: 2440, column: 2)
!8600 = !DILocation(line: 2440, column: 2, scope: !8598)
!8601 = !DILocalVariable(name: "__dummy2", scope: !8598, file: !3, line: 2440, type: !309)
!8602 = !DILocation(line: 2440, column: 2, scope: !8599)
!8603 = !DILocation(line: 2440, column: 2, scope: !8457)
!8604 = !{i32 -2140510574}
!8605 = !DILocation(line: 2440, column: 2, scope: !8456)
!8606 = !DILocation(line: 329, column: 10, scope: !5209, inlinedAt: !8455)
!8607 = !DILocation(line: 329, column: 16, scope: !5209, inlinedAt: !8455)
!8608 = !DILocation(line: 2441, column: 19, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2441, column: 6)
!8610 = !DILocation(line: 2441, column: 22, scope: !8609)
!8611 = !DILocation(line: 2441, column: 7, scope: !8609)
!8612 = !DILocation(line: 2441, column: 6, scope: !8446)
!8613 = !DILocalVariable(name: "__mptr", scope: !8614, file: !3, line: 2442, type: !180)
!8614 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 2442, column: 8)
!8615 = !DILocation(line: 2442, column: 8, scope: !8614)
!8616 = !DILocation(line: 2442, column: 8, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 2442, column: 8)
!8618 = !DILocation(line: 2442, column: 6, scope: !8609)
!8619 = !DILocation(line: 2442, column: 3, scope: !8609)
!8620 = !DILocation(line: 2444, column: 26, scope: !8446)
!8621 = !DILocation(line: 2444, column: 29, scope: !8446)
!8622 = !DILocation(line: 2444, column: 40, scope: !8446)
!8623 = !DILocation(line: 409, column: 2, scope: !5455, inlinedAt: !8452)
!8624 = !DILocation(line: 409, column: 2, scope: !5460, inlinedAt: !8452)
!8625 = !DILocation(line: 409, column: 2, scope: !5461, inlinedAt: !8452)
!8626 = !DILocation(line: 409, column: 2, scope: !5468, inlinedAt: !8452)
!8627 = !DILocation(line: 409, column: 2, scope: !5471, inlinedAt: !8452)
!8628 = !DILocation(line: 2446, column: 6, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 2446, column: 6)
!8630 = !DILocation(line: 2446, column: 9, scope: !8629)
!8631 = !DILocation(line: 2446, column: 13, scope: !8629)
!8632 = !DILocation(line: 2446, column: 17, scope: !8629)
!8633 = !DILocation(line: 2446, column: 23, scope: !8629)
!8634 = !DILocation(line: 2447, column: 4, scope: !8629)
!8635 = !DILocation(line: 2447, column: 7, scope: !8629)
!8636 = !DILocation(line: 2447, column: 11, scope: !8629)
!8637 = !DILocation(line: 2447, column: 17, scope: !8629)
!8638 = !DILocation(line: 2446, column: 6, scope: !8446)
!8639 = !DILocation(line: 2448, column: 11, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8629, file: !3, line: 2447, column: 42)
!8641 = !DILocation(line: 2448, column: 14, scope: !8640)
!8642 = !DILocation(line: 2448, column: 10, scope: !8640)
!8643 = !DILocation(line: 2448, column: 3, scope: !8640)
!8644 = !DILocation(line: 2452, column: 2, scope: !8446)
!8645 = !DILocation(line: 2453, column: 1, scope: !8446)
!8646 = distinct !DISubprogram(name: "poll_requested_events", scope: !2904, file: !2904, line: 70, type: !8647, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8647 = !DISubroutineType(types: !8648)
!8648 = !{!2900, !8649}
!8649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8650, size: 64)
!8650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8450)
!8651 = !DILocalVariable(name: "p", arg: 1, scope: !8646, file: !2904, line: 70, type: !8649)
!8652 = !DILocation(line: 70, column: 64, scope: !8646)
!8653 = !DILocation(line: 72, column: 9, scope: !8646)
!8654 = !DILocation(line: 72, column: 13, scope: !8646)
!8655 = !DILocation(line: 72, column: 16, scope: !8646)
!8656 = !DILocation(line: 72, column: 2, scope: !8646)
!8657 = distinct !DISubprogram(name: "poll_wait", scope: !2904, file: !2904, line: 48, type: !8658, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8658 = !DISubroutineType(types: !8659)
!8659 = !{null, !337, !2911, !8449}
!8660 = !DILocalVariable(name: "filp", arg: 1, scope: !8657, file: !2904, line: 48, type: !337)
!8661 = !DILocation(line: 48, column: 44, scope: !8657)
!8662 = !DILocalVariable(name: "wait_address", arg: 2, scope: !8657, file: !2904, line: 48, type: !2911)
!8663 = !DILocation(line: 48, column: 70, scope: !8657)
!8664 = !DILocalVariable(name: "p", arg: 3, scope: !8657, file: !2904, line: 48, type: !8449)
!8665 = !DILocation(line: 48, column: 96, scope: !8657)
!8666 = !DILocation(line: 50, column: 6, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8657, file: !2904, line: 50, column: 6)
!8668 = !DILocation(line: 50, column: 8, scope: !8667)
!8669 = !DILocation(line: 50, column: 11, scope: !8667)
!8670 = !DILocation(line: 50, column: 14, scope: !8667)
!8671 = !DILocation(line: 50, column: 21, scope: !8667)
!8672 = !DILocation(line: 50, column: 24, scope: !8667)
!8673 = !DILocation(line: 50, column: 6, scope: !8657)
!8674 = !DILocation(line: 51, column: 3, scope: !8667)
!8675 = !DILocation(line: 51, column: 6, scope: !8667)
!8676 = !DILocation(line: 51, column: 13, scope: !8667)
!8677 = !DILocation(line: 51, column: 19, scope: !8667)
!8678 = !DILocation(line: 51, column: 33, scope: !8667)
!8679 = !DILocation(line: 52, column: 1, scope: !8657)
!8680 = distinct !DISubprogram(name: "__vb2_init_fileio", scope: !3, file: !3, line: 2512, type: !8681, scopeLine: 2513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8681 = !DISubroutineType(types: !8682)
!8682 = !{!243, !185, !243}
!8683 = !DILocalVariable(name: "q", arg: 1, scope: !8680, file: !3, line: 2512, type: !185)
!8684 = !DILocation(line: 2512, column: 48, scope: !8680)
!8685 = !DILocalVariable(name: "read", arg: 2, scope: !8680, file: !3, line: 2512, type: !243)
!8686 = !DILocation(line: 2512, column: 55, scope: !8680)
!8687 = !DILocalVariable(name: "fileio", scope: !8680, file: !3, line: 2514, type: !4253)
!8688 = !DILocation(line: 2514, column: 26, scope: !8680)
!8689 = !DILocalVariable(name: "i", scope: !8680, file: !3, line: 2515, type: !243)
!8690 = !DILocation(line: 2515, column: 6, scope: !8680)
!8691 = !DILocalVariable(name: "ret", scope: !8680, file: !3, line: 2515, type: !243)
!8692 = !DILocation(line: 2515, column: 9, scope: !8680)
!8693 = !DILocalVariable(name: "count", scope: !8680, file: !3, line: 2516, type: !7)
!8694 = !DILocation(line: 2516, column: 15, scope: !8680)
!8695 = !DILocalVariable(name: "__ret_warn_on", scope: !8696, file: !3, line: 2521, type: !243)
!8696 = distinct !DILexicalBlock(scope: !8697, file: !3, line: 2521, column: 6)
!8697 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2521, column: 6)
!8698 = !DILocation(line: 2521, column: 6, scope: !8696)
!8699 = !DILocation(line: 0, scope: !8696)
!8700 = !DILocation(line: 2521, column: 6, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 2521, column: 6)
!8702 = !DILocation(line: 2521, column: 6, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 2521, column: 6)
!8704 = !DILocation(line: 2521, column: 6, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 2521, column: 6)
!8706 = !DILocation(line: 2521, column: 6, scope: !8707)
!8707 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 2521, column: 6)
!8708 = !{i32 -2140507792, i32 -2140507763, i32 -2140507717, i32 -2140507659, i32 -2140507605, i32 -2140507551, i32 -2140507496, i32 -2140507465}
!8709 = !DILocation(line: 2521, column: 6, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 2521, column: 6)
!8711 = !{i32 -2140507035, i32 -2140507028, i32 -2140506976, i32 -2140506945, i32 -2140506915}
!8712 = !DILocation(line: 2521, column: 6, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 2521, column: 6)
!8714 = !DILocation(line: 2521, column: 6, scope: !8697)
!8715 = !DILocation(line: 2521, column: 6, scope: !8680)
!8716 = !DILocation(line: 2523, column: 3, scope: !8697)
!8717 = !DILocation(line: 2528, column: 7, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2528, column: 6)
!8719 = !DILocation(line: 2528, column: 10, scope: !8718)
!8720 = !DILocation(line: 2528, column: 19, scope: !8718)
!8721 = !DILocation(line: 2528, column: 6, scope: !8680)
!8722 = !DILocation(line: 2529, column: 3, scope: !8718)
!8723 = !DILocation(line: 2534, column: 6, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2534, column: 6)
!8725 = !DILocation(line: 2534, column: 9, scope: !8724)
!8726 = !DILocation(line: 2534, column: 19, scope: !8724)
!8727 = !DILocation(line: 2534, column: 22, scope: !8724)
!8728 = !DILocation(line: 2534, column: 25, scope: !8724)
!8729 = !DILocation(line: 2534, column: 37, scope: !8724)
!8730 = !DILocation(line: 2534, column: 6, scope: !8680)
!8731 = !DILocation(line: 2535, column: 3, scope: !8724)
!8732 = !DILocation(line: 2540, column: 8, scope: !8680)
!8733 = !DILocation(line: 2542, column: 2, scope: !8680)
!8734 = !DILocation(line: 2542, column: 2, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 2542, column: 2)
!8736 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2542, column: 2)
!8737 = !DILocation(line: 2542, column: 2, scope: !8736)
!8738 = !DILocation(line: 2546, column: 11, scope: !8680)
!8739 = !DILocation(line: 2546, column: 9, scope: !8680)
!8740 = !DILocation(line: 2547, column: 6, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2547, column: 6)
!8742 = !DILocation(line: 2547, column: 13, scope: !8741)
!8743 = !DILocation(line: 2547, column: 6, scope: !8680)
!8744 = !DILocation(line: 2548, column: 3, scope: !8741)
!8745 = !DILocation(line: 2550, column: 22, scope: !8680)
!8746 = !DILocation(line: 2550, column: 25, scope: !8680)
!8747 = !DILocation(line: 2550, column: 2, scope: !8680)
!8748 = !DILocation(line: 2550, column: 10, scope: !8680)
!8749 = !DILocation(line: 2550, column: 20, scope: !8680)
!8750 = !DILocation(line: 2551, column: 30, scope: !8680)
!8751 = !DILocation(line: 2551, column: 33, scope: !8680)
!8752 = !DILocation(line: 2551, column: 2, scope: !8680)
!8753 = !DILocation(line: 2551, column: 10, scope: !8680)
!8754 = !DILocation(line: 2551, column: 28, scope: !8680)
!8755 = !DILocation(line: 2557, column: 18, scope: !8680)
!8756 = !DILocation(line: 2557, column: 2, scope: !8680)
!8757 = !DILocation(line: 2557, column: 10, scope: !8680)
!8758 = !DILocation(line: 2557, column: 16, scope: !8680)
!8759 = !DILocation(line: 2558, column: 2, scope: !8680)
!8760 = !DILocation(line: 2558, column: 10, scope: !8680)
!8761 = !DILocation(line: 2558, column: 17, scope: !8680)
!8762 = !DILocation(line: 2559, column: 17, scope: !8680)
!8763 = !DILocation(line: 2559, column: 20, scope: !8680)
!8764 = !DILocation(line: 2559, column: 2, scope: !8680)
!8765 = !DILocation(line: 2559, column: 10, scope: !8680)
!8766 = !DILocation(line: 2559, column: 15, scope: !8680)
!8767 = !DILocation(line: 2560, column: 14, scope: !8680)
!8768 = !DILocation(line: 2560, column: 2, scope: !8680)
!8769 = !DILocation(line: 2560, column: 5, scope: !8680)
!8770 = !DILocation(line: 2560, column: 12, scope: !8680)
!8771 = !DILocation(line: 2561, column: 25, scope: !8680)
!8772 = !DILocation(line: 2561, column: 28, scope: !8680)
!8773 = !DILocation(line: 2561, column: 36, scope: !8680)
!8774 = !DILocation(line: 2561, column: 45, scope: !8680)
!8775 = !DILocation(line: 2561, column: 53, scope: !8680)
!8776 = !DILocation(line: 2561, column: 8, scope: !8680)
!8777 = !DILocation(line: 2561, column: 6, scope: !8680)
!8778 = !DILocation(line: 2562, column: 6, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2562, column: 6)
!8780 = !DILocation(line: 2562, column: 6, scope: !8680)
!8781 = !DILocation(line: 2563, column: 3, scope: !8779)
!8782 = !DILocation(line: 2569, column: 6, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2569, column: 6)
!8784 = !DILocation(line: 2569, column: 9, scope: !8783)
!8785 = !DILocation(line: 2569, column: 18, scope: !8783)
!8786 = !DILocation(line: 2569, column: 29, scope: !8783)
!8787 = !DILocation(line: 2569, column: 6, scope: !8680)
!8788 = !DILocation(line: 2570, column: 7, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 2569, column: 35)
!8790 = !DILocation(line: 2571, column: 3, scope: !8789)
!8791 = !DILocation(line: 2577, column: 9, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2577, column: 2)
!8793 = !DILocation(line: 2577, column: 7, scope: !8792)
!8794 = !DILocation(line: 2577, column: 14, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8792, file: !3, line: 2577, column: 2)
!8796 = !DILocation(line: 2577, column: 18, scope: !8795)
!8797 = !DILocation(line: 2577, column: 21, scope: !8795)
!8798 = !DILocation(line: 2577, column: 16, scope: !8795)
!8799 = !DILocation(line: 2577, column: 2, scope: !8792)
!8800 = !DILocation(line: 2578, column: 43, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 2577, column: 39)
!8802 = !DILocation(line: 2578, column: 46, scope: !8801)
!8803 = !DILocation(line: 2578, column: 51, scope: !8801)
!8804 = !DILocation(line: 2578, column: 27, scope: !8801)
!8805 = !DILocation(line: 2578, column: 3, scope: !8801)
!8806 = !DILocation(line: 2578, column: 11, scope: !8801)
!8807 = !DILocation(line: 2578, column: 16, scope: !8801)
!8808 = !DILocation(line: 2578, column: 19, scope: !8801)
!8809 = !DILocation(line: 2578, column: 25, scope: !8801)
!8810 = !DILocation(line: 2579, column: 7, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 2579, column: 7)
!8812 = !DILocation(line: 2579, column: 15, scope: !8811)
!8813 = !DILocation(line: 2579, column: 20, scope: !8811)
!8814 = !DILocation(line: 2579, column: 23, scope: !8811)
!8815 = !DILocation(line: 2579, column: 29, scope: !8811)
!8816 = !DILocation(line: 2579, column: 7, scope: !8801)
!8817 = !DILocation(line: 2580, column: 8, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 2579, column: 38)
!8819 = !DILocation(line: 2581, column: 4, scope: !8818)
!8820 = !DILocation(line: 2583, column: 41, scope: !8801)
!8821 = !DILocation(line: 2583, column: 44, scope: !8801)
!8822 = !DILocation(line: 2583, column: 49, scope: !8801)
!8823 = !DILocation(line: 2583, column: 26, scope: !8801)
!8824 = !DILocation(line: 2583, column: 3, scope: !8801)
!8825 = !DILocation(line: 2583, column: 11, scope: !8801)
!8826 = !DILocation(line: 2583, column: 16, scope: !8801)
!8827 = !DILocation(line: 2583, column: 19, scope: !8801)
!8828 = !DILocation(line: 2583, column: 24, scope: !8801)
!8829 = !DILocation(line: 2584, column: 2, scope: !8801)
!8830 = !DILocation(line: 2577, column: 35, scope: !8795)
!8831 = !DILocation(line: 2577, column: 2, scope: !8795)
!8832 = distinct !{!8832, !8799, !8833}
!8833 = !DILocation(line: 2584, column: 2, scope: !8792)
!8834 = !DILocation(line: 2589, column: 6, scope: !8835)
!8835 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2589, column: 6)
!8836 = !DILocation(line: 2589, column: 6, scope: !8680)
!8837 = !DILocation(line: 2593, column: 10, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2593, column: 3)
!8839 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 2589, column: 12)
!8840 = !DILocation(line: 2593, column: 8, scope: !8838)
!8841 = !DILocation(line: 2593, column: 15, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 2593, column: 3)
!8843 = !DILocation(line: 2593, column: 19, scope: !8842)
!8844 = !DILocation(line: 2593, column: 22, scope: !8842)
!8845 = !DILocation(line: 2593, column: 17, scope: !8842)
!8846 = !DILocation(line: 2593, column: 3, scope: !8838)
!8847 = !DILocation(line: 2594, column: 24, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 2593, column: 40)
!8849 = !DILocation(line: 2594, column: 27, scope: !8848)
!8850 = !DILocation(line: 2594, column: 10, scope: !8848)
!8851 = !DILocation(line: 2594, column: 8, scope: !8848)
!8852 = !DILocation(line: 2595, column: 8, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8848, file: !3, line: 2595, column: 8)
!8854 = !DILocation(line: 2595, column: 8, scope: !8848)
!8855 = !DILocation(line: 2596, column: 5, scope: !8853)
!8856 = !DILocation(line: 2597, column: 4, scope: !8848)
!8857 = !DILocation(line: 2597, column: 12, scope: !8848)
!8858 = !DILocation(line: 2597, column: 17, scope: !8848)
!8859 = !DILocation(line: 2597, column: 20, scope: !8848)
!8860 = !DILocation(line: 2597, column: 27, scope: !8848)
!8861 = !DILocation(line: 2598, column: 3, scope: !8848)
!8862 = !DILocation(line: 2593, column: 36, scope: !8842)
!8863 = !DILocation(line: 2593, column: 3, scope: !8842)
!8864 = distinct !{!8864, !8846, !8865}
!8865 = !DILocation(line: 2598, column: 3, scope: !8838)
!8866 = !DILocation(line: 2603, column: 27, scope: !8839)
!8867 = !DILocation(line: 2603, column: 30, scope: !8839)
!8868 = !DILocation(line: 2603, column: 3, scope: !8839)
!8869 = !DILocation(line: 2603, column: 11, scope: !8839)
!8870 = !DILocation(line: 2603, column: 25, scope: !8839)
!8871 = !DILocation(line: 2604, column: 23, scope: !8839)
!8872 = !DILocation(line: 2604, column: 26, scope: !8839)
!8873 = !DILocation(line: 2604, column: 3, scope: !8839)
!8874 = !DILocation(line: 2604, column: 11, scope: !8839)
!8875 = !DILocation(line: 2604, column: 21, scope: !8839)
!8876 = !DILocation(line: 2605, column: 2, scope: !8839)
!8877 = !DILocation(line: 2610, column: 26, scope: !8680)
!8878 = !DILocation(line: 2610, column: 29, scope: !8680)
!8879 = !DILocation(line: 2610, column: 32, scope: !8680)
!8880 = !DILocation(line: 2610, column: 8, scope: !8680)
!8881 = !DILocation(line: 2610, column: 6, scope: !8680)
!8882 = !DILocation(line: 2611, column: 6, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 2611, column: 6)
!8884 = !DILocation(line: 2611, column: 6, scope: !8680)
!8885 = !DILocation(line: 2612, column: 3, scope: !8883)
!8886 = !DILocation(line: 2614, column: 9, scope: !8680)
!8887 = !DILocation(line: 2614, column: 2, scope: !8680)
!8888 = !DILabel(scope: !8680, name: "err_reqbufs", file: !3, line: 2616)
!8889 = !DILocation(line: 2616, column: 1, scope: !8680)
!8890 = !DILocation(line: 2617, column: 2, scope: !8680)
!8891 = !DILocation(line: 2617, column: 10, scope: !8680)
!8892 = !DILocation(line: 2617, column: 16, scope: !8680)
!8893 = !DILocation(line: 2618, column: 19, scope: !8680)
!8894 = !DILocation(line: 2618, column: 22, scope: !8680)
!8895 = !DILocation(line: 2618, column: 30, scope: !8680)
!8896 = !DILocation(line: 2618, column: 39, scope: !8680)
!8897 = !DILocation(line: 2618, column: 47, scope: !8680)
!8898 = !DILocation(line: 2618, column: 2, scope: !8680)
!8899 = !DILabel(scope: !8680, name: "err_kfree", file: !3, line: 2620)
!8900 = !DILocation(line: 2620, column: 1, scope: !8680)
!8901 = !DILocation(line: 2621, column: 2, scope: !8680)
!8902 = !DILocation(line: 2621, column: 5, scope: !8680)
!8903 = !DILocation(line: 2621, column: 12, scope: !8680)
!8904 = !DILocation(line: 2622, column: 8, scope: !8680)
!8905 = !DILocation(line: 2622, column: 2, scope: !8680)
!8906 = !DILocation(line: 2623, column: 9, scope: !8680)
!8907 = !DILocation(line: 2623, column: 2, scope: !8680)
!8908 = !DILocation(line: 2624, column: 1, scope: !8680)
!8909 = distinct !DISubprogram(name: "vb2_is_streaming", scope: !130, file: !130, line: 1095, type: !4872, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8910 = !DILocalVariable(name: "q", arg: 1, scope: !8909, file: !130, line: 1095, type: !185)
!8911 = !DILocation(line: 1095, column: 55, scope: !8909)
!8912 = !DILocation(line: 1097, column: 9, scope: !8909)
!8913 = !DILocation(line: 1097, column: 12, scope: !8909)
!8914 = !DILocation(line: 1097, column: 2, scope: !8909)
!8915 = distinct !DISubprogram(name: "list_empty", scope: !6306, file: !6306, line: 280, type: !8916, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8916 = !DISubroutineType(types: !8917)
!8917 = !{!243, !8918}
!8918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8919, size: 64)
!8919 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !203)
!8920 = !DILocalVariable(name: "head", arg: 1, scope: !8915, file: !6306, line: 280, type: !8918)
!8921 = !DILocation(line: 280, column: 54, scope: !8915)
!8922 = !DILocation(line: 282, column: 9, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8915, file: !6306, line: 282, column: 9)
!8924 = !DILocation(line: 282, column: 9, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8923, file: !6306, line: 282, column: 9)
!8926 = !DILocation(line: 282, column: 34, scope: !8915)
!8927 = !DILocation(line: 282, column: 31, scope: !8915)
!8928 = !DILocation(line: 282, column: 2, scope: !8915)
!8929 = distinct !DISubprogram(name: "vb2_read", scope: !3, file: !3, line: 2815, type: !8930, scopeLine: 2817, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8930 = !DISubroutineType(types: !8931)
!8931 = !{!306, !185, !259, !306, !2871, !243}
!8932 = !DILocalVariable(name: "q", arg: 1, scope: !8929, file: !3, line: 2815, type: !185)
!8933 = !DILocation(line: 2815, column: 35, scope: !8929)
!8934 = !DILocalVariable(name: "data", arg: 2, scope: !8929, file: !3, line: 2815, type: !259)
!8935 = !DILocation(line: 2815, column: 51, scope: !8929)
!8936 = !DILocalVariable(name: "count", arg: 3, scope: !8929, file: !3, line: 2815, type: !306)
!8937 = !DILocation(line: 2815, column: 64, scope: !8929)
!8938 = !DILocalVariable(name: "ppos", arg: 4, scope: !8929, file: !3, line: 2816, type: !2871)
!8939 = !DILocation(line: 2816, column: 11, scope: !8929)
!8940 = !DILocalVariable(name: "nonblocking", arg: 5, scope: !8929, file: !3, line: 2816, type: !243)
!8941 = !DILocation(line: 2816, column: 21, scope: !8929)
!8942 = !DILocation(line: 2818, column: 30, scope: !8929)
!8943 = !DILocation(line: 2818, column: 33, scope: !8929)
!8944 = !DILocation(line: 2818, column: 39, scope: !8929)
!8945 = !DILocation(line: 2818, column: 46, scope: !8929)
!8946 = !DILocation(line: 2818, column: 52, scope: !8929)
!8947 = !DILocation(line: 2818, column: 9, scope: !8929)
!8948 = !DILocation(line: 2818, column: 2, scope: !8929)
!8949 = distinct !DISubprogram(name: "__vb2_perform_fileio", scope: !3, file: !3, line: 2654, type: !8950, scopeLine: 2656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8950 = !DISubroutineType(types: !8951)
!8951 = !{!306, !185, !259, !306, !2871, !243, !243}
!8952 = !DILocalVariable(name: "addr", arg: 1, scope: !8953, file: !8954, line: 138, type: !2122)
!8953 = distinct !DISubprogram(name: "check_copy_size", scope: !8954, file: !8954, line: 138, type: !8955, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8954 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!8955 = !DISubroutineType(types: !8956)
!8956 = !{!475, !2122, !306, !475}
!8957 = !DILocation(line: 138, column: 29, scope: !8953, inlinedAt: !8958)
!8958 = distinct !DILocation(line: 191, column: 6, scope: !8959, inlinedAt: !8964)
!8959 = distinct !DILexicalBlock(scope: !8961, file: !8960, line: 191, column: 6)
!8960 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!8961 = distinct !DISubprogram(name: "copy_from_user", scope: !8960, file: !8960, line: 189, type: !8962, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8962 = !DISubroutineType(types: !8963)
!8963 = !{!309, !180, !2122, !309}
!8964 = distinct !DILocation(line: 2746, column: 9, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2743, column: 6)
!8966 = !DILocalVariable(name: "bytes", arg: 2, scope: !8953, file: !8954, line: 138, type: !306)
!8967 = !DILocation(line: 138, column: 42, scope: !8953, inlinedAt: !8958)
!8968 = !DILocalVariable(name: "is_source", arg: 3, scope: !8953, file: !8954, line: 138, type: !475)
!8969 = !DILocation(line: 138, column: 54, scope: !8953, inlinedAt: !8958)
!8970 = !DILocalVariable(name: "sz", scope: !8953, file: !8954, line: 140, type: !243)
!8971 = !DILocation(line: 140, column: 6, scope: !8953, inlinedAt: !8958)
!8972 = !DILocalVariable(name: "__ret_warn_on", scope: !8973, file: !8954, line: 150, type: !243)
!8973 = distinct !DILexicalBlock(scope: !8974, file: !8954, line: 150, column: 6)
!8974 = distinct !DILexicalBlock(scope: !8953, file: !8954, line: 150, column: 6)
!8975 = !DILocation(line: 150, column: 6, scope: !8973, inlinedAt: !8958)
!8976 = !DILocalVariable(name: "to", arg: 1, scope: !8961, file: !8960, line: 189, type: !180)
!8977 = !DILocation(line: 189, column: 22, scope: !8961, inlinedAt: !8964)
!8978 = !DILocalVariable(name: "from", arg: 2, scope: !8961, file: !8960, line: 189, type: !2122)
!8979 = !DILocation(line: 189, column: 45, scope: !8961, inlinedAt: !8964)
!8980 = !DILocalVariable(name: "n", arg: 3, scope: !8961, file: !8960, line: 189, type: !309)
!8981 = !DILocation(line: 189, column: 65, scope: !8961, inlinedAt: !8964)
!8982 = !DILocation(line: 138, column: 29, scope: !8953, inlinedAt: !8983)
!8983 = distinct !DILocation(line: 199, column: 6, scope: !8984, inlinedAt: !8986)
!8984 = distinct !DILexicalBlock(scope: !8985, file: !8960, line: 199, column: 6)
!8985 = distinct !DISubprogram(name: "copy_to_user", scope: !8960, file: !8960, line: 197, type: !8962, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!8986 = distinct !DILocation(line: 2744, column: 9, scope: !8965)
!8987 = !DILocation(line: 138, column: 42, scope: !8953, inlinedAt: !8983)
!8988 = !DILocation(line: 138, column: 54, scope: !8953, inlinedAt: !8983)
!8989 = !DILocation(line: 140, column: 6, scope: !8953, inlinedAt: !8983)
!8990 = !DILocation(line: 150, column: 6, scope: !8973, inlinedAt: !8983)
!8991 = !DILocalVariable(name: "to", arg: 1, scope: !8985, file: !8960, line: 197, type: !180)
!8992 = !DILocation(line: 197, column: 27, scope: !8985, inlinedAt: !8986)
!8993 = !DILocalVariable(name: "from", arg: 2, scope: !8985, file: !8960, line: 197, type: !2122)
!8994 = !DILocation(line: 197, column: 43, scope: !8985, inlinedAt: !8986)
!8995 = !DILocalVariable(name: "n", arg: 3, scope: !8985, file: !8960, line: 197, type: !309)
!8996 = !DILocation(line: 197, column: 63, scope: !8985, inlinedAt: !8986)
!8997 = !DILocalVariable(name: "q", arg: 1, scope: !8949, file: !3, line: 2654, type: !185)
!8998 = !DILocation(line: 2654, column: 54, scope: !8949)
!8999 = !DILocalVariable(name: "data", arg: 2, scope: !8949, file: !3, line: 2654, type: !259)
!9000 = !DILocation(line: 2654, column: 70, scope: !8949)
!9001 = !DILocalVariable(name: "count", arg: 3, scope: !8949, file: !3, line: 2654, type: !306)
!9002 = !DILocation(line: 2654, column: 83, scope: !8949)
!9003 = !DILocalVariable(name: "ppos", arg: 4, scope: !8949, file: !3, line: 2655, type: !2871)
!9004 = !DILocation(line: 2655, column: 11, scope: !8949)
!9005 = !DILocalVariable(name: "nonblock", arg: 5, scope: !8949, file: !3, line: 2655, type: !243)
!9006 = !DILocation(line: 2655, column: 21, scope: !8949)
!9007 = !DILocalVariable(name: "read", arg: 6, scope: !8949, file: !3, line: 2655, type: !243)
!9008 = !DILocation(line: 2655, column: 35, scope: !8949)
!9009 = !DILocalVariable(name: "fileio", scope: !8949, file: !3, line: 2657, type: !4253)
!9010 = !DILocation(line: 2657, column: 26, scope: !8949)
!9011 = !DILocalVariable(name: "buf", scope: !8949, file: !3, line: 2658, type: !9012)
!9012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!9013 = !DILocation(line: 2658, column: 25, scope: !8949)
!9014 = !DILocalVariable(name: "is_multiplanar", scope: !8949, file: !3, line: 2659, type: !475)
!9015 = !DILocation(line: 2659, column: 7, scope: !8949)
!9016 = !DILocation(line: 2659, column: 24, scope: !8949)
!9017 = !DILocation(line: 2659, column: 27, scope: !8949)
!9018 = !DILocalVariable(name: "copy_timestamp", scope: !8949, file: !3, line: 2665, type: !475)
!9019 = !DILocation(line: 2665, column: 7, scope: !8949)
!9020 = !DILocation(line: 2665, column: 25, scope: !8949)
!9021 = !DILocation(line: 2665, column: 30, scope: !8949)
!9022 = !DILocation(line: 2665, column: 33, scope: !8949)
!9023 = !DILocation(line: 2665, column: 36, scope: !8949)
!9024 = !DILocation(line: 0, scope: !8949)
!9025 = !DILocalVariable(name: "index", scope: !8949, file: !3, line: 2666, type: !7)
!9026 = !DILocation(line: 2666, column: 11, scope: !8949)
!9027 = !DILocalVariable(name: "ret", scope: !8949, file: !3, line: 2667, type: !243)
!9028 = !DILocation(line: 2667, column: 6, scope: !8949)
!9029 = !DILocation(line: 2669, column: 2, scope: !8949)
!9030 = !DILocation(line: 2669, column: 2, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9032, file: !3, line: 2669, column: 2)
!9032 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2669, column: 2)
!9033 = !DILocation(line: 2669, column: 2, scope: !9032)
!9034 = !DILocation(line: 2673, column: 7, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2673, column: 6)
!9036 = !DILocation(line: 2673, column: 6, scope: !8949)
!9037 = !DILocation(line: 2674, column: 3, scope: !9035)
!9038 = !DILocation(line: 2676, column: 6, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2676, column: 6)
!9040 = !DILocation(line: 2676, column: 9, scope: !9039)
!9041 = !DILocation(line: 2676, column: 6, scope: !8949)
!9042 = !DILocation(line: 2677, column: 3, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9039, file: !3, line: 2676, column: 27)
!9044 = !DILocation(line: 2677, column: 3, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9046, file: !3, line: 2677, column: 3)
!9046 = distinct !DILexicalBlock(scope: !9043, file: !3, line: 2677, column: 3)
!9047 = !DILocation(line: 2677, column: 3, scope: !9046)
!9048 = !DILocation(line: 2679, column: 3, scope: !9043)
!9049 = !DILocation(line: 2685, column: 28, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2685, column: 6)
!9051 = !DILocation(line: 2685, column: 7, scope: !9050)
!9052 = !DILocation(line: 2685, column: 6, scope: !8949)
!9053 = !DILocation(line: 2686, column: 27, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 2685, column: 32)
!9055 = !DILocation(line: 2686, column: 30, scope: !9054)
!9056 = !DILocation(line: 2686, column: 9, scope: !9054)
!9057 = !DILocation(line: 2686, column: 7, scope: !9054)
!9058 = !DILocation(line: 2687, column: 3, scope: !9054)
!9059 = !DILocation(line: 2687, column: 3, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9061, file: !3, line: 2687, column: 3)
!9061 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 2687, column: 3)
!9062 = !DILocation(line: 2687, column: 3, scope: !9061)
!9063 = !DILocation(line: 2688, column: 7, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 2688, column: 7)
!9065 = !DILocation(line: 2688, column: 7, scope: !9054)
!9066 = !DILocation(line: 2689, column: 11, scope: !9064)
!9067 = !DILocation(line: 2689, column: 4, scope: !9064)
!9068 = !DILocation(line: 2690, column: 2, scope: !9054)
!9069 = !DILocation(line: 2691, column: 11, scope: !8949)
!9070 = !DILocation(line: 2691, column: 14, scope: !8949)
!9071 = !DILocation(line: 2691, column: 9, scope: !8949)
!9072 = !DILocation(line: 2696, column: 10, scope: !8949)
!9073 = !DILocation(line: 2696, column: 18, scope: !8949)
!9074 = !DILocation(line: 2696, column: 8, scope: !8949)
!9075 = !DILocation(line: 2697, column: 6, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2697, column: 6)
!9077 = !DILocation(line: 2697, column: 15, scope: !9076)
!9078 = !DILocation(line: 2697, column: 18, scope: !9076)
!9079 = !DILocation(line: 2697, column: 12, scope: !9076)
!9080 = !DILocation(line: 2697, column: 6, scope: !8949)
!9081 = !DILocalVariable(name: "b", scope: !9082, file: !3, line: 2698, type: !181)
!9082 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 2697, column: 31)
!9083 = !DILocation(line: 2698, column: 22, scope: !9082)
!9084 = !DILocation(line: 2703, column: 24, scope: !9082)
!9085 = !DILocation(line: 2703, column: 41, scope: !9082)
!9086 = !DILocation(line: 2703, column: 9, scope: !9082)
!9087 = !DILocation(line: 2703, column: 7, scope: !9082)
!9088 = !DILocation(line: 2704, column: 3, scope: !9082)
!9089 = !DILocation(line: 2704, column: 3, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9091, file: !3, line: 2704, column: 3)
!9091 = distinct !DILexicalBlock(scope: !9082, file: !3, line: 2704, column: 3)
!9092 = !DILocation(line: 2704, column: 3, scope: !9091)
!9093 = !DILocation(line: 2705, column: 7, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9082, file: !3, line: 2705, column: 7)
!9095 = !DILocation(line: 2705, column: 7, scope: !9082)
!9096 = !DILocation(line: 2706, column: 11, scope: !9094)
!9097 = !DILocation(line: 2706, column: 4, scope: !9094)
!9098 = !DILocation(line: 2707, column: 3, scope: !9082)
!9099 = !DILocation(line: 2707, column: 11, scope: !9082)
!9100 = !DILocation(line: 2707, column: 20, scope: !9082)
!9101 = !DILocation(line: 2709, column: 23, scope: !9082)
!9102 = !DILocation(line: 2709, column: 3, scope: !9082)
!9103 = !DILocation(line: 2709, column: 11, scope: !9082)
!9104 = !DILocation(line: 2709, column: 21, scope: !9082)
!9105 = !DILocation(line: 2710, column: 10, scope: !9082)
!9106 = !DILocation(line: 2710, column: 18, scope: !9082)
!9107 = !DILocation(line: 2710, column: 23, scope: !9082)
!9108 = !DILocation(line: 2710, column: 7, scope: !9082)
!9109 = !DILocation(line: 2711, column: 7, scope: !9082)
!9110 = !DILocation(line: 2711, column: 10, scope: !9082)
!9111 = !DILocation(line: 2711, column: 15, scope: !9082)
!9112 = !DILocation(line: 2711, column: 5, scope: !9082)
!9113 = !DILocation(line: 2716, column: 3, scope: !9082)
!9114 = !DILocation(line: 2716, column: 8, scope: !9082)
!9115 = !DILocation(line: 2716, column: 12, scope: !9082)
!9116 = !DILocation(line: 2717, column: 3, scope: !9082)
!9117 = !DILocation(line: 2717, column: 8, scope: !9082)
!9118 = !DILocation(line: 2717, column: 15, scope: !9082)
!9119 = !DILocation(line: 2718, column: 15, scope: !9082)
!9120 = !DILocation(line: 2718, column: 44, scope: !9082)
!9121 = !DILocation(line: 2718, column: 47, scope: !9082)
!9122 = !DILocation(line: 2718, column: 52, scope: !9082)
!9123 = !DILocation(line: 2718, column: 22, scope: !9082)
!9124 = !DILocation(line: 2719, column: 23, scope: !9082)
!9125 = !DILocation(line: 2719, column: 26, scope: !9082)
!9126 = !DILocation(line: 2719, column: 31, scope: !9082)
!9127 = !DILocation(line: 2719, column: 8, scope: !9082)
!9128 = !DILocation(line: 2718, column: 3, scope: !9082)
!9129 = !DILocation(line: 2718, column: 8, scope: !9082)
!9130 = !DILocation(line: 2718, column: 13, scope: !9082)
!9131 = !DILocation(line: 2721, column: 7, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9082, file: !3, line: 2721, column: 7)
!9133 = !DILocation(line: 2721, column: 22, scope: !9132)
!9134 = !DILocation(line: 2721, column: 25, scope: !9132)
!9135 = !DILocation(line: 2721, column: 30, scope: !9132)
!9136 = !DILocation(line: 2722, column: 5, scope: !9132)
!9137 = !DILocation(line: 2722, column: 8, scope: !9132)
!9138 = !DILocation(line: 2722, column: 18, scope: !9132)
!9139 = !DILocation(line: 2722, column: 32, scope: !9132)
!9140 = !DILocation(line: 2722, column: 37, scope: !9132)
!9141 = !DILocation(line: 2722, column: 30, scope: !9132)
!9142 = !DILocation(line: 2721, column: 7, scope: !9082)
!9143 = !DILocation(line: 2723, column: 15, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9132, file: !3, line: 2722, column: 43)
!9145 = !DILocation(line: 2723, column: 18, scope: !9144)
!9146 = !DILocation(line: 2723, column: 28, scope: !9144)
!9147 = !DILocation(line: 2723, column: 4, scope: !9144)
!9148 = !DILocation(line: 2723, column: 9, scope: !9144)
!9149 = !DILocation(line: 2723, column: 13, scope: !9144)
!9150 = !DILocation(line: 2724, column: 17, scope: !9144)
!9151 = !DILocation(line: 2724, column: 22, scope: !9144)
!9152 = !DILocation(line: 2724, column: 4, scope: !9144)
!9153 = !DILocation(line: 2724, column: 9, scope: !9144)
!9154 = !DILocation(line: 2724, column: 14, scope: !9144)
!9155 = !DILocation(line: 2725, column: 3, scope: !9144)
!9156 = !DILocation(line: 2726, column: 2, scope: !9082)
!9157 = !DILocation(line: 2727, column: 10, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 2726, column: 9)
!9159 = !DILocation(line: 2727, column: 18, scope: !9158)
!9160 = !DILocation(line: 2727, column: 23, scope: !9158)
!9161 = !DILocation(line: 2727, column: 7, scope: !9158)
!9162 = !DILocation(line: 2733, column: 6, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2733, column: 6)
!9164 = !DILocation(line: 2733, column: 11, scope: !9163)
!9165 = !DILocation(line: 2733, column: 17, scope: !9163)
!9166 = !DILocation(line: 2733, column: 15, scope: !9163)
!9167 = !DILocation(line: 2733, column: 25, scope: !9163)
!9168 = !DILocation(line: 2733, column: 30, scope: !9163)
!9169 = !DILocation(line: 2733, column: 23, scope: !9163)
!9170 = !DILocation(line: 2733, column: 6, scope: !8949)
!9171 = !DILocation(line: 2734, column: 11, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9163, file: !3, line: 2733, column: 36)
!9173 = !DILocation(line: 2734, column: 16, scope: !9172)
!9174 = !DILocation(line: 2734, column: 23, scope: !9172)
!9175 = !DILocation(line: 2734, column: 28, scope: !9172)
!9176 = !DILocation(line: 2734, column: 21, scope: !9172)
!9177 = !DILocation(line: 2734, column: 9, scope: !9172)
!9178 = !DILocation(line: 2735, column: 3, scope: !9172)
!9179 = !DILocation(line: 2735, column: 3, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 2735, column: 3)
!9181 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 2735, column: 3)
!9182 = !DILocation(line: 2735, column: 3, scope: !9181)
!9183 = !DILocation(line: 2736, column: 2, scope: !9172)
!9184 = !DILocation(line: 2741, column: 2, scope: !8949)
!9185 = !DILocation(line: 2741, column: 2, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 2741, column: 2)
!9187 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2741, column: 2)
!9188 = !DILocation(line: 2741, column: 2, scope: !9187)
!9189 = !DILocation(line: 2743, column: 6, scope: !8965)
!9190 = !DILocation(line: 2743, column: 6, scope: !8949)
!9191 = !DILocation(line: 2744, column: 22, scope: !8965)
!9192 = !DILocation(line: 2744, column: 28, scope: !8965)
!9193 = !DILocation(line: 2744, column: 33, scope: !8965)
!9194 = !DILocation(line: 2744, column: 41, scope: !8965)
!9195 = !DILocation(line: 2744, column: 46, scope: !8965)
!9196 = !DILocation(line: 2744, column: 39, scope: !8965)
!9197 = !DILocation(line: 2744, column: 51, scope: !8965)
!9198 = !DILocation(line: 199, column: 6, scope: !8984, inlinedAt: !8986)
!9199 = !DILocation(line: 141, column: 6, scope: !9200, inlinedAt: !8983)
!9200 = distinct !DILexicalBlock(scope: !8953, file: !8954, line: 141, column: 6)
!9201 = !DILocation(line: 0, scope: !9200, inlinedAt: !8983)
!9202 = !DILocation(line: 141, column: 6, scope: !8953, inlinedAt: !8983)
!9203 = !DILocation(line: 142, column: 29, scope: !9204, inlinedAt: !8983)
!9204 = distinct !DILexicalBlock(scope: !9205, file: !8954, line: 142, column: 7)
!9205 = distinct !DILexicalBlock(scope: !9200, file: !8954, line: 141, column: 39)
!9206 = !DILocation(line: 142, column: 8, scope: !9204, inlinedAt: !8983)
!9207 = !DILocation(line: 142, column: 7, scope: !9205, inlinedAt: !8983)
!9208 = !DILocation(line: 143, column: 18, scope: !9204, inlinedAt: !8983)
!9209 = !DILocation(line: 143, column: 22, scope: !9204, inlinedAt: !8983)
!9210 = !DILocation(line: 143, column: 4, scope: !9204, inlinedAt: !8983)
!9211 = !DILocation(line: 144, column: 12, scope: !9212, inlinedAt: !8983)
!9212 = distinct !DILexicalBlock(scope: !9204, file: !8954, line: 144, column: 12)
!9213 = !DILocation(line: 144, column: 12, scope: !9204, inlinedAt: !8983)
!9214 = !DILocation(line: 145, column: 4, scope: !9212, inlinedAt: !8983)
!9215 = !DILocation(line: 147, column: 4, scope: !9212, inlinedAt: !8983)
!9216 = !DILocation(line: 148, column: 3, scope: !9205, inlinedAt: !8983)
!9217 = !DILocation(line: 150, column: 6, scope: !9218, inlinedAt: !8983)
!9218 = distinct !DILexicalBlock(scope: !8973, file: !8954, line: 150, column: 6)
!9219 = !DILocation(line: 150, column: 6, scope: !9220, inlinedAt: !8983)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !8954, line: 150, column: 6)
!9221 = distinct !DILexicalBlock(scope: !9218, file: !8954, line: 150, column: 6)
!9222 = !{i32 -2145483956, i32 -2145483927, i32 -2145483881, i32 -2145483823, i32 -2145483769, i32 -2145483715, i32 -2145483660, i32 -2145483629}
!9223 = !DILocation(line: 150, column: 6, scope: !9224, inlinedAt: !8983)
!9224 = distinct !DILexicalBlock(scope: !9221, file: !8954, line: 150, column: 6)
!9225 = !{i32 -2145483209, i32 -2145483202, i32 -2145483150, i32 -2145483119, i32 -2145483089}
!9226 = !DILocation(line: 150, column: 6, scope: !9221, inlinedAt: !8983)
!9227 = !DILocation(line: 150, column: 6, scope: !8974, inlinedAt: !8983)
!9228 = !DILocation(line: 150, column: 6, scope: !8953, inlinedAt: !8983)
!9229 = !DILocation(line: 151, column: 3, scope: !8974, inlinedAt: !8983)
!9230 = !DILocation(line: 152, column: 20, scope: !8953, inlinedAt: !8983)
!9231 = !DILocation(line: 152, column: 26, scope: !8953, inlinedAt: !8983)
!9232 = !DILocation(line: 152, column: 33, scope: !8953, inlinedAt: !8983)
!9233 = !DILocation(line: 152, column: 2, scope: !8953, inlinedAt: !8983)
!9234 = !DILocation(line: 153, column: 2, scope: !8953, inlinedAt: !8983)
!9235 = !DILocation(line: 154, column: 1, scope: !8953, inlinedAt: !8983)
!9236 = !DILocation(line: 199, column: 6, scope: !8985, inlinedAt: !8986)
!9237 = !DILocation(line: 200, column: 21, scope: !8984, inlinedAt: !8986)
!9238 = !DILocation(line: 200, column: 25, scope: !8984, inlinedAt: !8986)
!9239 = !DILocation(line: 200, column: 31, scope: !8984, inlinedAt: !8986)
!9240 = !DILocation(line: 200, column: 7, scope: !8984, inlinedAt: !8986)
!9241 = !DILocation(line: 200, column: 5, scope: !8984, inlinedAt: !8986)
!9242 = !DILocation(line: 200, column: 3, scope: !8984, inlinedAt: !8986)
!9243 = !DILocation(line: 201, column: 9, scope: !8985, inlinedAt: !8986)
!9244 = !DILocation(line: 2744, column: 9, scope: !8965)
!9245 = !DILocation(line: 2744, column: 7, scope: !8965)
!9246 = !DILocation(line: 2744, column: 3, scope: !8965)
!9247 = !DILocation(line: 2746, column: 24, scope: !8965)
!9248 = !DILocation(line: 2746, column: 29, scope: !8965)
!9249 = !DILocation(line: 2746, column: 37, scope: !8965)
!9250 = !DILocation(line: 2746, column: 42, scope: !8965)
!9251 = !DILocation(line: 2746, column: 35, scope: !8965)
!9252 = !DILocation(line: 2746, column: 47, scope: !8965)
!9253 = !DILocation(line: 2746, column: 53, scope: !8965)
!9254 = !DILocation(line: 191, column: 6, scope: !8959, inlinedAt: !8964)
!9255 = !DILocation(line: 141, column: 6, scope: !9200, inlinedAt: !8958)
!9256 = !DILocation(line: 0, scope: !9200, inlinedAt: !8958)
!9257 = !DILocation(line: 141, column: 6, scope: !8953, inlinedAt: !8958)
!9258 = !DILocation(line: 142, column: 29, scope: !9204, inlinedAt: !8958)
!9259 = !DILocation(line: 142, column: 8, scope: !9204, inlinedAt: !8958)
!9260 = !DILocation(line: 142, column: 7, scope: !9205, inlinedAt: !8958)
!9261 = !DILocation(line: 143, column: 18, scope: !9204, inlinedAt: !8958)
!9262 = !DILocation(line: 143, column: 22, scope: !9204, inlinedAt: !8958)
!9263 = !DILocation(line: 143, column: 4, scope: !9204, inlinedAt: !8958)
!9264 = !DILocation(line: 144, column: 12, scope: !9212, inlinedAt: !8958)
!9265 = !DILocation(line: 144, column: 12, scope: !9204, inlinedAt: !8958)
!9266 = !DILocation(line: 145, column: 4, scope: !9212, inlinedAt: !8958)
!9267 = !DILocation(line: 147, column: 4, scope: !9212, inlinedAt: !8958)
!9268 = !DILocation(line: 148, column: 3, scope: !9205, inlinedAt: !8958)
!9269 = !DILocation(line: 150, column: 6, scope: !9218, inlinedAt: !8958)
!9270 = !DILocation(line: 150, column: 6, scope: !9220, inlinedAt: !8958)
!9271 = !DILocation(line: 150, column: 6, scope: !9224, inlinedAt: !8958)
!9272 = !DILocation(line: 150, column: 6, scope: !9221, inlinedAt: !8958)
!9273 = !DILocation(line: 150, column: 6, scope: !8974, inlinedAt: !8958)
!9274 = !DILocation(line: 150, column: 6, scope: !8953, inlinedAt: !8958)
!9275 = !DILocation(line: 151, column: 3, scope: !8974, inlinedAt: !8958)
!9276 = !DILocation(line: 152, column: 20, scope: !8953, inlinedAt: !8958)
!9277 = !DILocation(line: 152, column: 26, scope: !8953, inlinedAt: !8958)
!9278 = !DILocation(line: 152, column: 33, scope: !8953, inlinedAt: !8958)
!9279 = !DILocation(line: 152, column: 2, scope: !8953, inlinedAt: !8958)
!9280 = !DILocation(line: 153, column: 2, scope: !8953, inlinedAt: !8958)
!9281 = !DILocation(line: 154, column: 1, scope: !8953, inlinedAt: !8958)
!9282 = !DILocation(line: 191, column: 6, scope: !8961, inlinedAt: !8964)
!9283 = !DILocation(line: 192, column: 23, scope: !8959, inlinedAt: !8964)
!9284 = !DILocation(line: 192, column: 27, scope: !8959, inlinedAt: !8964)
!9285 = !DILocation(line: 192, column: 33, scope: !8959, inlinedAt: !8964)
!9286 = !DILocation(line: 192, column: 7, scope: !8959, inlinedAt: !8964)
!9287 = !DILocation(line: 192, column: 5, scope: !8959, inlinedAt: !8964)
!9288 = !DILocation(line: 192, column: 3, scope: !8959, inlinedAt: !8964)
!9289 = !DILocation(line: 193, column: 9, scope: !8961, inlinedAt: !8964)
!9290 = !DILocation(line: 2746, column: 9, scope: !8965)
!9291 = !DILocation(line: 2746, column: 7, scope: !8965)
!9292 = !DILocation(line: 2747, column: 6, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2747, column: 6)
!9294 = !DILocation(line: 2747, column: 6, scope: !8949)
!9295 = !DILocation(line: 2748, column: 3, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 2747, column: 11)
!9297 = !DILocation(line: 2748, column: 3, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 2748, column: 3)
!9299 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 2748, column: 3)
!9300 = !DILocation(line: 2748, column: 3, scope: !9299)
!9301 = !DILocation(line: 2749, column: 3, scope: !9296)
!9302 = !DILocation(line: 2755, column: 14, scope: !8949)
!9303 = !DILocation(line: 2755, column: 2, scope: !8949)
!9304 = !DILocation(line: 2755, column: 7, scope: !8949)
!9305 = !DILocation(line: 2755, column: 11, scope: !8949)
!9306 = !DILocation(line: 2756, column: 11, scope: !8949)
!9307 = !DILocation(line: 2756, column: 3, scope: !8949)
!9308 = !DILocation(line: 2756, column: 8, scope: !8949)
!9309 = !DILocation(line: 2761, column: 6, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2761, column: 6)
!9311 = !DILocation(line: 2761, column: 11, scope: !9310)
!9312 = !DILocation(line: 2761, column: 18, scope: !9310)
!9313 = !DILocation(line: 2761, column: 23, scope: !9310)
!9314 = !DILocation(line: 2761, column: 15, scope: !9310)
!9315 = !DILocation(line: 2761, column: 28, scope: !9310)
!9316 = !DILocation(line: 2761, column: 33, scope: !9310)
!9317 = !DILocation(line: 2761, column: 38, scope: !9310)
!9318 = !DILocation(line: 2761, column: 41, scope: !9310)
!9319 = !DILocation(line: 2761, column: 49, scope: !9310)
!9320 = !DILocation(line: 2761, column: 6, scope: !8949)
!9321 = !DILocalVariable(name: "b", scope: !9322, file: !3, line: 2762, type: !181)
!9322 = distinct !DILexicalBlock(scope: !9310, file: !3, line: 2761, column: 69)
!9323 = !DILocation(line: 2762, column: 22, scope: !9322)
!9324 = !DILocation(line: 2762, column: 26, scope: !9322)
!9325 = !DILocation(line: 2762, column: 29, scope: !9322)
!9326 = !DILocation(line: 2762, column: 34, scope: !9322)
!9327 = !DILocation(line: 2767, column: 7, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 2767, column: 7)
!9329 = !DILocation(line: 2767, column: 12, scope: !9328)
!9330 = !DILocation(line: 2767, column: 15, scope: !9328)
!9331 = !DILocation(line: 2767, column: 23, scope: !9328)
!9332 = !DILocation(line: 2767, column: 33, scope: !9328)
!9333 = !DILocation(line: 2767, column: 36, scope: !9328)
!9334 = !DILocation(line: 2767, column: 44, scope: !9328)
!9335 = !DILocation(line: 2767, column: 53, scope: !9328)
!9336 = !DILocation(line: 2767, column: 7, scope: !9322)
!9337 = !DILocation(line: 2768, column: 4, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9328, file: !3, line: 2767, column: 59)
!9339 = !DILocation(line: 2768, column: 4, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9341, file: !3, line: 2768, column: 4)
!9341 = distinct !DILexicalBlock(scope: !9338, file: !3, line: 2768, column: 4)
!9342 = !DILocation(line: 2768, column: 4, scope: !9341)
!9343 = !DILocation(line: 2769, column: 32, scope: !9338)
!9344 = !DILocation(line: 2769, column: 11, scope: !9338)
!9345 = !DILocation(line: 2769, column: 4, scope: !9338)
!9346 = !DILocation(line: 2775, column: 28, scope: !9322)
!9347 = !DILocation(line: 2775, column: 33, scope: !9322)
!9348 = !DILocation(line: 2775, column: 3, scope: !9322)
!9349 = !DILocation(line: 2775, column: 6, scope: !9322)
!9350 = !DILocation(line: 2775, column: 16, scope: !9322)
!9351 = !DILocation(line: 2775, column: 26, scope: !9322)
!9352 = !DILocation(line: 2777, column: 7, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 2777, column: 7)
!9354 = !DILocation(line: 2777, column: 7, scope: !9322)
!9355 = !DILocation(line: 2778, column: 19, scope: !9353)
!9356 = !DILocation(line: 2778, column: 4, scope: !9353)
!9357 = !DILocation(line: 2778, column: 7, scope: !9353)
!9358 = !DILocation(line: 2778, column: 17, scope: !9353)
!9359 = !DILocation(line: 2779, column: 23, scope: !9322)
!9360 = !DILocation(line: 2779, column: 26, scope: !9322)
!9361 = !DILocation(line: 2779, column: 9, scope: !9322)
!9362 = !DILocation(line: 2779, column: 7, scope: !9322)
!9363 = !DILocation(line: 2780, column: 3, scope: !9322)
!9364 = !DILocation(line: 2780, column: 3, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2780, column: 3)
!9366 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 2780, column: 3)
!9367 = !DILocation(line: 2780, column: 3, scope: !9366)
!9368 = !DILocation(line: 2781, column: 7, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 2781, column: 7)
!9370 = !DILocation(line: 2781, column: 7, scope: !9322)
!9371 = !DILocation(line: 2782, column: 11, scope: !9369)
!9372 = !DILocation(line: 2782, column: 4, scope: !9369)
!9373 = !DILocation(line: 2787, column: 3, scope: !9322)
!9374 = !DILocation(line: 2787, column: 8, scope: !9322)
!9375 = !DILocation(line: 2787, column: 12, scope: !9322)
!9376 = !DILocation(line: 2788, column: 3, scope: !9322)
!9377 = !DILocation(line: 2788, column: 8, scope: !9322)
!9378 = !DILocation(line: 2788, column: 15, scope: !9322)
!9379 = !DILocation(line: 2789, column: 30, scope: !9322)
!9380 = !DILocation(line: 2789, column: 33, scope: !9322)
!9381 = !DILocation(line: 2789, column: 38, scope: !9322)
!9382 = !DILocation(line: 2789, column: 15, scope: !9322)
!9383 = !DILocation(line: 2789, column: 3, scope: !9322)
!9384 = !DILocation(line: 2789, column: 8, scope: !9322)
!9385 = !DILocation(line: 2789, column: 13, scope: !9322)
!9386 = !DILocation(line: 2790, column: 3, scope: !9322)
!9387 = !DILocation(line: 2790, column: 11, scope: !9322)
!9388 = !DILocation(line: 2790, column: 19, scope: !9322)
!9389 = !DILocation(line: 2795, column: 7, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9322, file: !3, line: 2795, column: 7)
!9391 = !DILocation(line: 2795, column: 15, scope: !9390)
!9392 = !DILocation(line: 2795, column: 31, scope: !9390)
!9393 = !DILocation(line: 2795, column: 34, scope: !9390)
!9394 = !DILocation(line: 2795, column: 29, scope: !9390)
!9395 = !DILocation(line: 2795, column: 7, scope: !9322)
!9396 = !DILocation(line: 2796, column: 4, scope: !9390)
!9397 = !DILocation(line: 2796, column: 12, scope: !9390)
!9398 = !DILocation(line: 2796, column: 25, scope: !9390)
!9399 = !DILocation(line: 2804, column: 23, scope: !9322)
!9400 = !DILocation(line: 2804, column: 31, scope: !9322)
!9401 = !DILocation(line: 2804, column: 3, scope: !9322)
!9402 = !DILocation(line: 2804, column: 11, scope: !9322)
!9403 = !DILocation(line: 2804, column: 21, scope: !9322)
!9404 = !DILocation(line: 2805, column: 2, scope: !9322)
!9405 = !DILocation(line: 2810, column: 6, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !8949, file: !3, line: 2810, column: 6)
!9407 = !DILocation(line: 2810, column: 10, scope: !9406)
!9408 = !DILocation(line: 2810, column: 6, scope: !8949)
!9409 = !DILocation(line: 2811, column: 9, scope: !9406)
!9410 = !DILocation(line: 2811, column: 7, scope: !9406)
!9411 = !DILocation(line: 2811, column: 3, scope: !9406)
!9412 = !DILocation(line: 2812, column: 9, scope: !8949)
!9413 = !DILocation(line: 2812, column: 2, scope: !8949)
!9414 = !DILocation(line: 2813, column: 1, scope: !8949)
!9415 = distinct !DISubprogram(name: "vb2_write", scope: !3, file: !3, line: 2822, type: !9416, scopeLine: 2824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9416 = !DISubroutineType(types: !9417)
!9417 = !{!306, !185, !199, !306, !2871, !243}
!9418 = !DILocalVariable(name: "q", arg: 1, scope: !9415, file: !3, line: 2822, type: !185)
!9419 = !DILocation(line: 2822, column: 36, scope: !9415)
!9420 = !DILocalVariable(name: "data", arg: 2, scope: !9415, file: !3, line: 2822, type: !199)
!9421 = !DILocation(line: 2822, column: 58, scope: !9415)
!9422 = !DILocalVariable(name: "count", arg: 3, scope: !9415, file: !3, line: 2822, type: !306)
!9423 = !DILocation(line: 2822, column: 71, scope: !9415)
!9424 = !DILocalVariable(name: "ppos", arg: 4, scope: !9415, file: !3, line: 2823, type: !2871)
!9425 = !DILocation(line: 2823, column: 11, scope: !9415)
!9426 = !DILocalVariable(name: "nonblocking", arg: 5, scope: !9415, file: !3, line: 2823, type: !243)
!9427 = !DILocation(line: 2823, column: 21, scope: !9415)
!9428 = !DILocation(line: 2825, column: 30, scope: !9415)
!9429 = !DILocation(line: 2825, column: 49, scope: !9415)
!9430 = !DILocation(line: 2825, column: 55, scope: !9415)
!9431 = !DILocation(line: 2826, column: 8, scope: !9415)
!9432 = !DILocation(line: 2826, column: 14, scope: !9415)
!9433 = !DILocation(line: 2825, column: 9, scope: !9415)
!9434 = !DILocation(line: 2825, column: 2, scope: !9415)
!9435 = distinct !DISubprogram(name: "vb2_thread_start", scope: !3, file: !3, line: 2901, type: !9436, scopeLine: 2903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9436 = !DISubroutineType(types: !9437)
!9437 = !{!243, !185, !4279, !180, !199}
!9438 = !DILocalVariable(name: "q", arg: 1, scope: !9435, file: !3, line: 2901, type: !185)
!9439 = !DILocation(line: 2901, column: 40, scope: !9435)
!9440 = !DILocalVariable(name: "fnc", arg: 2, scope: !9435, file: !3, line: 2901, type: !4279)
!9441 = !DILocation(line: 2901, column: 58, scope: !9435)
!9442 = !DILocalVariable(name: "priv", arg: 3, scope: !9435, file: !3, line: 2901, type: !180)
!9443 = !DILocation(line: 2901, column: 69, scope: !9435)
!9444 = !DILocalVariable(name: "thread_name", arg: 4, scope: !9435, file: !3, line: 2902, type: !199)
!9445 = !DILocation(line: 2902, column: 20, scope: !9435)
!9446 = !DILocalVariable(name: "threadio", scope: !9435, file: !3, line: 2904, type: !4274)
!9447 = !DILocation(line: 2904, column: 28, scope: !9435)
!9448 = !DILocalVariable(name: "ret", scope: !9435, file: !3, line: 2905, type: !243)
!9449 = !DILocation(line: 2905, column: 6, scope: !9435)
!9450 = !DILocation(line: 2907, column: 6, scope: !9451)
!9451 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 2907, column: 6)
!9452 = !DILocation(line: 2907, column: 9, scope: !9451)
!9453 = !DILocation(line: 2907, column: 6, scope: !9435)
!9454 = !DILocation(line: 2908, column: 3, scope: !9451)
!9455 = !DILocation(line: 2909, column: 18, scope: !9456)
!9456 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 2909, column: 6)
!9457 = !DILocation(line: 2909, column: 6, scope: !9456)
!9458 = !DILocation(line: 2909, column: 6, scope: !9435)
!9459 = !DILocation(line: 2910, column: 3, scope: !9456)
!9460 = !DILocalVariable(name: "__ret_warn_on", scope: !9461, file: !3, line: 2911, type: !243)
!9461 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2911, column: 6)
!9462 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 2911, column: 6)
!9463 = !DILocation(line: 2911, column: 6, scope: !9461)
!9464 = !DILocation(line: 2911, column: 6, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9461, file: !3, line: 2911, column: 6)
!9466 = !DILocation(line: 2911, column: 6, scope: !9467)
!9467 = distinct !DILexicalBlock(scope: !9465, file: !3, line: 2911, column: 6)
!9468 = !DILocation(line: 2911, column: 6, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 2911, column: 6)
!9470 = !DILocation(line: 2911, column: 6, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 2911, column: 6)
!9472 = !{i32 -2140498605, i32 -2140498576, i32 -2140498530, i32 -2140498472, i32 -2140498418, i32 -2140498364, i32 -2140498309, i32 -2140498278}
!9473 = !DILocation(line: 2911, column: 6, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 2911, column: 6)
!9475 = !{i32 -2140497848, i32 -2140497841, i32 -2140497789, i32 -2140497758, i32 -2140497728}
!9476 = !DILocation(line: 2911, column: 6, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 2911, column: 6)
!9478 = !DILocation(line: 2911, column: 6, scope: !9462)
!9479 = !DILocation(line: 2911, column: 6, scope: !9435)
!9480 = !DILocation(line: 2912, column: 3, scope: !9462)
!9481 = !DILocation(line: 2914, column: 13, scope: !9435)
!9482 = !DILocation(line: 2914, column: 11, scope: !9435)
!9483 = !DILocation(line: 2915, column: 6, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 2915, column: 6)
!9485 = !DILocation(line: 2915, column: 15, scope: !9484)
!9486 = !DILocation(line: 2915, column: 6, scope: !9435)
!9487 = !DILocation(line: 2916, column: 3, scope: !9484)
!9488 = !DILocation(line: 2917, column: 18, scope: !9435)
!9489 = !DILocation(line: 2917, column: 2, scope: !9435)
!9490 = !DILocation(line: 2917, column: 12, scope: !9435)
!9491 = !DILocation(line: 2917, column: 16, scope: !9435)
!9492 = !DILocation(line: 2918, column: 19, scope: !9435)
!9493 = !DILocation(line: 2918, column: 2, scope: !9435)
!9494 = !DILocation(line: 2918, column: 12, scope: !9435)
!9495 = !DILocation(line: 2918, column: 17, scope: !9435)
!9496 = !DILocation(line: 2920, column: 26, scope: !9435)
!9497 = !DILocation(line: 2920, column: 30, scope: !9435)
!9498 = !DILocation(line: 2920, column: 33, scope: !9435)
!9499 = !DILocation(line: 2920, column: 29, scope: !9435)
!9500 = !DILocation(line: 2920, column: 8, scope: !9435)
!9501 = !DILocation(line: 2920, column: 6, scope: !9435)
!9502 = !DILocation(line: 2921, column: 2, scope: !9435)
!9503 = !DILocation(line: 2921, column: 2, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9505, file: !3, line: 2921, column: 2)
!9505 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 2921, column: 2)
!9506 = !DILocation(line: 2921, column: 2, scope: !9505)
!9507 = !DILocation(line: 2922, column: 6, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 2922, column: 6)
!9509 = !DILocation(line: 2922, column: 6, scope: !9435)
!9510 = !DILocation(line: 2923, column: 3, scope: !9508)
!9511 = !DILocation(line: 2924, column: 16, scope: !9435)
!9512 = !DILocation(line: 2924, column: 2, scope: !9435)
!9513 = !DILocation(line: 2924, column: 5, scope: !9435)
!9514 = !DILocation(line: 2924, column: 14, scope: !9435)
!9515 = !DILocalVariable(name: "__k", scope: !9516, file: !3, line: 2925, type: !1205)
!9516 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 2925, column: 21)
!9517 = !DILocation(line: 2925, column: 21, scope: !9516)
!9518 = !DILocation(line: 2925, column: 21, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 2925, column: 21)
!9520 = !DILocation(line: 2925, column: 2, scope: !9435)
!9521 = !DILocation(line: 2925, column: 12, scope: !9435)
!9522 = !DILocation(line: 2925, column: 19, scope: !9435)
!9523 = !DILocation(line: 2926, column: 13, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9435, file: !3, line: 2926, column: 6)
!9525 = !DILocation(line: 2926, column: 23, scope: !9524)
!9526 = !DILocation(line: 2926, column: 6, scope: !9524)
!9527 = !DILocation(line: 2926, column: 6, scope: !9435)
!9528 = !DILocation(line: 2927, column: 17, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 2926, column: 32)
!9530 = !DILocation(line: 2927, column: 27, scope: !9529)
!9531 = !DILocation(line: 2927, column: 9, scope: !9529)
!9532 = !DILocation(line: 2927, column: 7, scope: !9529)
!9533 = !DILocation(line: 2928, column: 3, scope: !9529)
!9534 = !DILocation(line: 2928, column: 13, scope: !9529)
!9535 = !DILocation(line: 2928, column: 20, scope: !9529)
!9536 = !DILocation(line: 2929, column: 3, scope: !9529)
!9537 = !DILocation(line: 2931, column: 2, scope: !9435)
!9538 = !DILabel(scope: !9435, name: "nothread", file: !3, line: 2933)
!9539 = !DILocation(line: 2933, column: 1, scope: !9435)
!9540 = !DILocation(line: 2934, column: 23, scope: !9435)
!9541 = !DILocation(line: 2934, column: 2, scope: !9435)
!9542 = !DILabel(scope: !9435, name: "nomem", file: !3, line: 2935)
!9543 = !DILocation(line: 2935, column: 1, scope: !9435)
!9544 = !DILocation(line: 2936, column: 8, scope: !9435)
!9545 = !DILocation(line: 2936, column: 2, scope: !9435)
!9546 = !DILocation(line: 2937, column: 9, scope: !9435)
!9547 = !DILocation(line: 2937, column: 2, scope: !9435)
!9548 = !DILocation(line: 2938, column: 1, scope: !9435)
!9549 = distinct !DISubprogram(name: "vb2_is_busy", scope: !130, file: !130, line: 1124, type: !4872, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9550 = !DILocalVariable(name: "q", arg: 1, scope: !9549, file: !130, line: 1124, type: !185)
!9551 = !DILocation(line: 1124, column: 50, scope: !9549)
!9552 = !DILocation(line: 1126, column: 10, scope: !9549)
!9553 = !DILocation(line: 1126, column: 13, scope: !9549)
!9554 = !DILocation(line: 1126, column: 25, scope: !9549)
!9555 = !DILocation(line: 1126, column: 2, scope: !9549)
!9556 = distinct !DISubprogram(name: "kzalloc", scope: !173, file: !173, line: 662, type: !9557, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9557 = !DISubroutineType(types: !9558)
!9558 = !{!180, !306, !732}
!9559 = !DILocalVariable(name: "s", arg: 1, scope: !9560, file: !173, line: 445, type: !924)
!9560 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !173, file: !173, line: 445, type: !9561, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9561 = !DISubroutineType(types: !9562)
!9562 = !{!180, !924, !732, !306}
!9563 = !DILocation(line: 445, column: 72, scope: !9560, inlinedAt: !9564)
!9564 = distinct !DILocation(line: 552, column: 10, scope: !9565, inlinedAt: !9568)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !173, line: 540, column: 34)
!9566 = distinct !DILexicalBlock(scope: !9567, file: !173, line: 540, column: 6)
!9567 = distinct !DISubprogram(name: "kmalloc", scope: !173, file: !173, line: 538, type: !9557, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9568 = distinct !DILocation(line: 664, column: 9, scope: !9556)
!9569 = !DILocalVariable(name: "flags", arg: 2, scope: !9560, file: !173, line: 446, type: !732)
!9570 = !DILocation(line: 446, column: 9, scope: !9560, inlinedAt: !9564)
!9571 = !DILocalVariable(name: "size", arg: 3, scope: !9560, file: !173, line: 446, type: !306)
!9572 = !DILocation(line: 446, column: 23, scope: !9560, inlinedAt: !9564)
!9573 = !DILocalVariable(name: "ret", scope: !9560, file: !173, line: 448, type: !180)
!9574 = !DILocation(line: 448, column: 8, scope: !9560, inlinedAt: !9564)
!9575 = !DILocalVariable(name: "flags", arg: 1, scope: !9576, file: !173, line: 318, type: !732)
!9576 = distinct !DISubprogram(name: "kmalloc_type", scope: !173, file: !173, line: 318, type: !9577, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9577 = !DISubroutineType(types: !9578)
!9578 = !{!172, !732}
!9579 = !DILocation(line: 318, column: 67, scope: !9576, inlinedAt: !9580)
!9580 = distinct !DILocation(line: 553, column: 20, scope: !9565, inlinedAt: !9568)
!9581 = !DILocalVariable(name: "size", arg: 1, scope: !9582, file: !173, line: 346, type: !306)
!9582 = distinct !DISubprogram(name: "kmalloc_index", scope: !173, file: !173, line: 346, type: !9583, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9583 = !DISubroutineType(types: !9584)
!9584 = !{!7, !306}
!9585 = !DILocation(line: 346, column: 58, scope: !9582, inlinedAt: !9586)
!9586 = distinct !DILocation(line: 547, column: 11, scope: !9565, inlinedAt: !9568)
!9587 = !DILocalVariable(name: "size", arg: 1, scope: !9588, file: !173, line: 472, type: !306)
!9588 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !173, file: !173, line: 472, type: !9589, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9589 = !DISubroutineType(types: !9590)
!9590 = !{!180, !306, !732, !7}
!9591 = !DILocation(line: 472, column: 28, scope: !9588, inlinedAt: !9592)
!9592 = distinct !DILocation(line: 481, column: 9, scope: !9593, inlinedAt: !9594)
!9593 = distinct !DISubprogram(name: "kmalloc_large", scope: !173, file: !173, line: 478, type: !9557, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9594 = distinct !DILocation(line: 545, column: 11, scope: !9595, inlinedAt: !9568)
!9595 = distinct !DILexicalBlock(scope: !9565, file: !173, line: 544, column: 7)
!9596 = !DILocalVariable(name: "flags", arg: 2, scope: !9588, file: !173, line: 472, type: !732)
!9597 = !DILocation(line: 472, column: 40, scope: !9588, inlinedAt: !9592)
!9598 = !DILocalVariable(name: "order", arg: 3, scope: !9588, file: !173, line: 472, type: !7)
!9599 = !DILocation(line: 472, column: 60, scope: !9588, inlinedAt: !9592)
!9600 = !DILocalVariable(name: "size", arg: 1, scope: !9593, file: !173, line: 478, type: !306)
!9601 = !DILocation(line: 478, column: 51, scope: !9593, inlinedAt: !9594)
!9602 = !DILocalVariable(name: "flags", arg: 2, scope: !9593, file: !173, line: 478, type: !732)
!9603 = !DILocation(line: 478, column: 63, scope: !9593, inlinedAt: !9594)
!9604 = !DILocalVariable(name: "order", scope: !9593, file: !173, line: 480, type: !7)
!9605 = !DILocation(line: 480, column: 15, scope: !9593, inlinedAt: !9594)
!9606 = !DILocalVariable(name: "size", arg: 1, scope: !9567, file: !173, line: 538, type: !306)
!9607 = !DILocation(line: 538, column: 45, scope: !9567, inlinedAt: !9568)
!9608 = !DILocalVariable(name: "flags", arg: 2, scope: !9567, file: !173, line: 538, type: !732)
!9609 = !DILocation(line: 538, column: 57, scope: !9567, inlinedAt: !9568)
!9610 = !DILocalVariable(name: "index", scope: !9565, file: !173, line: 542, type: !7)
!9611 = !DILocation(line: 542, column: 16, scope: !9565, inlinedAt: !9568)
!9612 = !DILocalVariable(name: "size", arg: 1, scope: !9556, file: !173, line: 662, type: !306)
!9613 = !DILocation(line: 662, column: 36, scope: !9556)
!9614 = !DILocalVariable(name: "flags", arg: 2, scope: !9556, file: !173, line: 662, type: !732)
!9615 = !DILocation(line: 662, column: 48, scope: !9556)
!9616 = !DILocation(line: 664, column: 17, scope: !9556)
!9617 = !DILocation(line: 664, column: 23, scope: !9556)
!9618 = !DILocation(line: 664, column: 29, scope: !9556)
!9619 = !DILocation(line: 540, column: 27, scope: !9566, inlinedAt: !9568)
!9620 = !DILocation(line: 540, column: 6, scope: !9566, inlinedAt: !9568)
!9621 = !DILocation(line: 540, column: 6, scope: !9567, inlinedAt: !9568)
!9622 = !DILocation(line: 544, column: 7, scope: !9595, inlinedAt: !9568)
!9623 = !DILocation(line: 544, column: 12, scope: !9595, inlinedAt: !9568)
!9624 = !DILocation(line: 544, column: 7, scope: !9565, inlinedAt: !9568)
!9625 = !DILocation(line: 545, column: 25, scope: !9595, inlinedAt: !9568)
!9626 = !DILocation(line: 545, column: 31, scope: !9595, inlinedAt: !9568)
!9627 = !DILocation(line: 480, column: 33, scope: !9593, inlinedAt: !9594)
!9628 = !DILocation(line: 480, column: 23, scope: !9593, inlinedAt: !9594)
!9629 = !DILocation(line: 481, column: 29, scope: !9593, inlinedAt: !9594)
!9630 = !DILocation(line: 481, column: 35, scope: !9593, inlinedAt: !9594)
!9631 = !DILocation(line: 481, column: 42, scope: !9593, inlinedAt: !9594)
!9632 = !DILocation(line: 474, column: 23, scope: !9588, inlinedAt: !9592)
!9633 = !DILocation(line: 474, column: 29, scope: !9588, inlinedAt: !9592)
!9634 = !DILocation(line: 474, column: 36, scope: !9588, inlinedAt: !9592)
!9635 = !DILocation(line: 474, column: 9, scope: !9588, inlinedAt: !9592)
!9636 = !DILocation(line: 545, column: 4, scope: !9595, inlinedAt: !9568)
!9637 = !DILocation(line: 547, column: 25, scope: !9565, inlinedAt: !9568)
!9638 = !DILocation(line: 348, column: 7, scope: !9639, inlinedAt: !9586)
!9639 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 348, column: 6)
!9640 = !DILocation(line: 348, column: 6, scope: !9582, inlinedAt: !9586)
!9641 = !DILocation(line: 349, column: 3, scope: !9639, inlinedAt: !9586)
!9642 = !DILocation(line: 351, column: 6, scope: !9643, inlinedAt: !9586)
!9643 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 351, column: 6)
!9644 = !DILocation(line: 351, column: 11, scope: !9643, inlinedAt: !9586)
!9645 = !DILocation(line: 351, column: 6, scope: !9582, inlinedAt: !9586)
!9646 = !DILocation(line: 352, column: 3, scope: !9643, inlinedAt: !9586)
!9647 = !DILocation(line: 354, column: 32, scope: !9648, inlinedAt: !9586)
!9648 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 354, column: 6)
!9649 = !DILocation(line: 354, column: 37, scope: !9648, inlinedAt: !9586)
!9650 = !DILocation(line: 354, column: 42, scope: !9648, inlinedAt: !9586)
!9651 = !DILocation(line: 354, column: 45, scope: !9648, inlinedAt: !9586)
!9652 = !DILocation(line: 354, column: 50, scope: !9648, inlinedAt: !9586)
!9653 = !DILocation(line: 354, column: 6, scope: !9582, inlinedAt: !9586)
!9654 = !DILocation(line: 355, column: 3, scope: !9648, inlinedAt: !9586)
!9655 = !DILocation(line: 356, column: 32, scope: !9656, inlinedAt: !9586)
!9656 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 356, column: 6)
!9657 = !DILocation(line: 356, column: 37, scope: !9656, inlinedAt: !9586)
!9658 = !DILocation(line: 356, column: 43, scope: !9656, inlinedAt: !9586)
!9659 = !DILocation(line: 356, column: 46, scope: !9656, inlinedAt: !9586)
!9660 = !DILocation(line: 356, column: 51, scope: !9656, inlinedAt: !9586)
!9661 = !DILocation(line: 356, column: 6, scope: !9582, inlinedAt: !9586)
!9662 = !DILocation(line: 357, column: 3, scope: !9656, inlinedAt: !9586)
!9663 = !DILocation(line: 358, column: 6, scope: !9664, inlinedAt: !9586)
!9664 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 358, column: 6)
!9665 = !DILocation(line: 358, column: 11, scope: !9664, inlinedAt: !9586)
!9666 = !DILocation(line: 358, column: 6, scope: !9582, inlinedAt: !9586)
!9667 = !DILocation(line: 358, column: 26, scope: !9664, inlinedAt: !9586)
!9668 = !DILocation(line: 359, column: 6, scope: !9669, inlinedAt: !9586)
!9669 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 359, column: 6)
!9670 = !DILocation(line: 359, column: 11, scope: !9669, inlinedAt: !9586)
!9671 = !DILocation(line: 359, column: 6, scope: !9582, inlinedAt: !9586)
!9672 = !DILocation(line: 359, column: 26, scope: !9669, inlinedAt: !9586)
!9673 = !DILocation(line: 360, column: 6, scope: !9674, inlinedAt: !9586)
!9674 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 360, column: 6)
!9675 = !DILocation(line: 360, column: 11, scope: !9674, inlinedAt: !9586)
!9676 = !DILocation(line: 360, column: 6, scope: !9582, inlinedAt: !9586)
!9677 = !DILocation(line: 360, column: 26, scope: !9674, inlinedAt: !9586)
!9678 = !DILocation(line: 361, column: 6, scope: !9679, inlinedAt: !9586)
!9679 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 361, column: 6)
!9680 = !DILocation(line: 361, column: 11, scope: !9679, inlinedAt: !9586)
!9681 = !DILocation(line: 361, column: 6, scope: !9582, inlinedAt: !9586)
!9682 = !DILocation(line: 361, column: 26, scope: !9679, inlinedAt: !9586)
!9683 = !DILocation(line: 362, column: 6, scope: !9684, inlinedAt: !9586)
!9684 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 362, column: 6)
!9685 = !DILocation(line: 362, column: 11, scope: !9684, inlinedAt: !9586)
!9686 = !DILocation(line: 362, column: 6, scope: !9582, inlinedAt: !9586)
!9687 = !DILocation(line: 362, column: 26, scope: !9684, inlinedAt: !9586)
!9688 = !DILocation(line: 363, column: 6, scope: !9689, inlinedAt: !9586)
!9689 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 363, column: 6)
!9690 = !DILocation(line: 363, column: 11, scope: !9689, inlinedAt: !9586)
!9691 = !DILocation(line: 363, column: 6, scope: !9582, inlinedAt: !9586)
!9692 = !DILocation(line: 363, column: 26, scope: !9689, inlinedAt: !9586)
!9693 = !DILocation(line: 364, column: 6, scope: !9694, inlinedAt: !9586)
!9694 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 364, column: 6)
!9695 = !DILocation(line: 364, column: 11, scope: !9694, inlinedAt: !9586)
!9696 = !DILocation(line: 364, column: 6, scope: !9582, inlinedAt: !9586)
!9697 = !DILocation(line: 364, column: 26, scope: !9694, inlinedAt: !9586)
!9698 = !DILocation(line: 365, column: 6, scope: !9699, inlinedAt: !9586)
!9699 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 365, column: 6)
!9700 = !DILocation(line: 365, column: 11, scope: !9699, inlinedAt: !9586)
!9701 = !DILocation(line: 365, column: 6, scope: !9582, inlinedAt: !9586)
!9702 = !DILocation(line: 365, column: 26, scope: !9699, inlinedAt: !9586)
!9703 = !DILocation(line: 366, column: 6, scope: !9704, inlinedAt: !9586)
!9704 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 366, column: 6)
!9705 = !DILocation(line: 366, column: 11, scope: !9704, inlinedAt: !9586)
!9706 = !DILocation(line: 366, column: 6, scope: !9582, inlinedAt: !9586)
!9707 = !DILocation(line: 366, column: 26, scope: !9704, inlinedAt: !9586)
!9708 = !DILocation(line: 367, column: 6, scope: !9709, inlinedAt: !9586)
!9709 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 367, column: 6)
!9710 = !DILocation(line: 367, column: 11, scope: !9709, inlinedAt: !9586)
!9711 = !DILocation(line: 367, column: 6, scope: !9582, inlinedAt: !9586)
!9712 = !DILocation(line: 367, column: 26, scope: !9709, inlinedAt: !9586)
!9713 = !DILocation(line: 368, column: 6, scope: !9714, inlinedAt: !9586)
!9714 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 368, column: 6)
!9715 = !DILocation(line: 368, column: 11, scope: !9714, inlinedAt: !9586)
!9716 = !DILocation(line: 368, column: 6, scope: !9582, inlinedAt: !9586)
!9717 = !DILocation(line: 368, column: 26, scope: !9714, inlinedAt: !9586)
!9718 = !DILocation(line: 369, column: 6, scope: !9719, inlinedAt: !9586)
!9719 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 369, column: 6)
!9720 = !DILocation(line: 369, column: 11, scope: !9719, inlinedAt: !9586)
!9721 = !DILocation(line: 369, column: 6, scope: !9582, inlinedAt: !9586)
!9722 = !DILocation(line: 369, column: 26, scope: !9719, inlinedAt: !9586)
!9723 = !DILocation(line: 370, column: 6, scope: !9724, inlinedAt: !9586)
!9724 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 370, column: 6)
!9725 = !DILocation(line: 370, column: 11, scope: !9724, inlinedAt: !9586)
!9726 = !DILocation(line: 370, column: 6, scope: !9582, inlinedAt: !9586)
!9727 = !DILocation(line: 370, column: 26, scope: !9724, inlinedAt: !9586)
!9728 = !DILocation(line: 371, column: 6, scope: !9729, inlinedAt: !9586)
!9729 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 371, column: 6)
!9730 = !DILocation(line: 371, column: 11, scope: !9729, inlinedAt: !9586)
!9731 = !DILocation(line: 371, column: 6, scope: !9582, inlinedAt: !9586)
!9732 = !DILocation(line: 371, column: 26, scope: !9729, inlinedAt: !9586)
!9733 = !DILocation(line: 372, column: 6, scope: !9734, inlinedAt: !9586)
!9734 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 372, column: 6)
!9735 = !DILocation(line: 372, column: 11, scope: !9734, inlinedAt: !9586)
!9736 = !DILocation(line: 372, column: 6, scope: !9582, inlinedAt: !9586)
!9737 = !DILocation(line: 372, column: 26, scope: !9734, inlinedAt: !9586)
!9738 = !DILocation(line: 373, column: 6, scope: !9739, inlinedAt: !9586)
!9739 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 373, column: 6)
!9740 = !DILocation(line: 373, column: 11, scope: !9739, inlinedAt: !9586)
!9741 = !DILocation(line: 373, column: 6, scope: !9582, inlinedAt: !9586)
!9742 = !DILocation(line: 373, column: 26, scope: !9739, inlinedAt: !9586)
!9743 = !DILocation(line: 374, column: 6, scope: !9744, inlinedAt: !9586)
!9744 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 374, column: 6)
!9745 = !DILocation(line: 374, column: 11, scope: !9744, inlinedAt: !9586)
!9746 = !DILocation(line: 374, column: 6, scope: !9582, inlinedAt: !9586)
!9747 = !DILocation(line: 374, column: 26, scope: !9744, inlinedAt: !9586)
!9748 = !DILocation(line: 375, column: 6, scope: !9749, inlinedAt: !9586)
!9749 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 375, column: 6)
!9750 = !DILocation(line: 375, column: 11, scope: !9749, inlinedAt: !9586)
!9751 = !DILocation(line: 375, column: 6, scope: !9582, inlinedAt: !9586)
!9752 = !DILocation(line: 375, column: 27, scope: !9749, inlinedAt: !9586)
!9753 = !DILocation(line: 376, column: 6, scope: !9754, inlinedAt: !9586)
!9754 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 376, column: 6)
!9755 = !DILocation(line: 376, column: 11, scope: !9754, inlinedAt: !9586)
!9756 = !DILocation(line: 376, column: 6, scope: !9582, inlinedAt: !9586)
!9757 = !DILocation(line: 376, column: 32, scope: !9754, inlinedAt: !9586)
!9758 = !DILocation(line: 377, column: 6, scope: !9759, inlinedAt: !9586)
!9759 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 377, column: 6)
!9760 = !DILocation(line: 377, column: 11, scope: !9759, inlinedAt: !9586)
!9761 = !DILocation(line: 377, column: 6, scope: !9582, inlinedAt: !9586)
!9762 = !DILocation(line: 377, column: 32, scope: !9759, inlinedAt: !9586)
!9763 = !DILocation(line: 378, column: 6, scope: !9764, inlinedAt: !9586)
!9764 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 378, column: 6)
!9765 = !DILocation(line: 378, column: 11, scope: !9764, inlinedAt: !9586)
!9766 = !DILocation(line: 378, column: 6, scope: !9582, inlinedAt: !9586)
!9767 = !DILocation(line: 378, column: 32, scope: !9764, inlinedAt: !9586)
!9768 = !DILocation(line: 379, column: 6, scope: !9769, inlinedAt: !9586)
!9769 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 379, column: 6)
!9770 = !DILocation(line: 379, column: 11, scope: !9769, inlinedAt: !9586)
!9771 = !DILocation(line: 379, column: 6, scope: !9582, inlinedAt: !9586)
!9772 = !DILocation(line: 379, column: 33, scope: !9769, inlinedAt: !9586)
!9773 = !DILocation(line: 380, column: 6, scope: !9774, inlinedAt: !9586)
!9774 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 380, column: 6)
!9775 = !DILocation(line: 380, column: 11, scope: !9774, inlinedAt: !9586)
!9776 = !DILocation(line: 380, column: 6, scope: !9582, inlinedAt: !9586)
!9777 = !DILocation(line: 380, column: 33, scope: !9774, inlinedAt: !9586)
!9778 = !DILocation(line: 381, column: 6, scope: !9779, inlinedAt: !9586)
!9779 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 381, column: 6)
!9780 = !DILocation(line: 381, column: 11, scope: !9779, inlinedAt: !9586)
!9781 = !DILocation(line: 381, column: 6, scope: !9582, inlinedAt: !9586)
!9782 = !DILocation(line: 381, column: 33, scope: !9779, inlinedAt: !9586)
!9783 = !DILocation(line: 382, column: 2, scope: !9784, inlinedAt: !9586)
!9784 = distinct !DILexicalBlock(scope: !9785, file: !173, line: 382, column: 2)
!9785 = distinct !DILexicalBlock(scope: !9582, file: !173, line: 382, column: 2)
!9786 = !{i32 -2142380401, i32 -2142380372, i32 -2142380326, i32 -2142380268, i32 -2142380214, i32 -2142380160, i32 -2142380105, i32 -2142380074}
!9787 = !DILocation(line: 382, column: 2, scope: !9788, inlinedAt: !9586)
!9788 = distinct !DILexicalBlock(scope: !9789, file: !173, line: 382, column: 2)
!9789 = distinct !DILexicalBlock(scope: !9785, file: !173, line: 382, column: 2)
!9790 = !{i32 -2142379631, i32 -2142379624, i32 -2142379570, i32 -2142379539, i32 -2142379509}
!9791 = !DILocation(line: 382, column: 2, scope: !9789, inlinedAt: !9586)
!9792 = !DILocation(line: 386, column: 1, scope: !9582, inlinedAt: !9586)
!9793 = !DILocation(line: 547, column: 9, scope: !9565, inlinedAt: !9568)
!9794 = !DILocation(line: 549, column: 8, scope: !9795, inlinedAt: !9568)
!9795 = distinct !DILexicalBlock(scope: !9565, file: !173, line: 549, column: 7)
!9796 = !DILocation(line: 549, column: 7, scope: !9565, inlinedAt: !9568)
!9797 = !DILocation(line: 550, column: 4, scope: !9795, inlinedAt: !9568)
!9798 = !DILocation(line: 553, column: 33, scope: !9565, inlinedAt: !9568)
!9799 = !DILocation(line: 325, column: 6, scope: !9800, inlinedAt: !9580)
!9800 = distinct !DILexicalBlock(scope: !9576, file: !173, line: 325, column: 6)
!9801 = !DILocation(line: 325, column: 6, scope: !9576, inlinedAt: !9580)
!9802 = !DILocation(line: 326, column: 3, scope: !9800, inlinedAt: !9580)
!9803 = !DILocation(line: 332, column: 9, scope: !9576, inlinedAt: !9580)
!9804 = !DILocation(line: 332, column: 15, scope: !9576, inlinedAt: !9580)
!9805 = !DILocation(line: 332, column: 2, scope: !9576, inlinedAt: !9580)
!9806 = !DILocation(line: 336, column: 1, scope: !9576, inlinedAt: !9580)
!9807 = !DILocation(line: 553, column: 5, scope: !9565, inlinedAt: !9568)
!9808 = !DILocation(line: 553, column: 41, scope: !9565, inlinedAt: !9568)
!9809 = !DILocation(line: 554, column: 5, scope: !9565, inlinedAt: !9568)
!9810 = !DILocation(line: 554, column: 12, scope: !9565, inlinedAt: !9568)
!9811 = !DILocation(line: 448, column: 31, scope: !9560, inlinedAt: !9564)
!9812 = !DILocation(line: 448, column: 34, scope: !9560, inlinedAt: !9564)
!9813 = !DILocation(line: 448, column: 14, scope: !9560, inlinedAt: !9564)
!9814 = !DILocation(line: 450, column: 22, scope: !9560, inlinedAt: !9564)
!9815 = !DILocation(line: 450, column: 25, scope: !9560, inlinedAt: !9564)
!9816 = !DILocation(line: 450, column: 30, scope: !9560, inlinedAt: !9564)
!9817 = !DILocation(line: 450, column: 36, scope: !9560, inlinedAt: !9564)
!9818 = !DILocation(line: 450, column: 8, scope: !9560, inlinedAt: !9564)
!9819 = !DILocation(line: 450, column: 6, scope: !9560, inlinedAt: !9564)
!9820 = !DILocation(line: 451, column: 9, scope: !9560, inlinedAt: !9564)
!9821 = !DILocation(line: 552, column: 3, scope: !9565, inlinedAt: !9568)
!9822 = !DILocation(line: 557, column: 19, scope: !9567, inlinedAt: !9568)
!9823 = !DILocation(line: 557, column: 25, scope: !9567, inlinedAt: !9568)
!9824 = !DILocation(line: 557, column: 9, scope: !9567, inlinedAt: !9568)
!9825 = !DILocation(line: 557, column: 2, scope: !9567, inlinedAt: !9568)
!9826 = !DILocation(line: 558, column: 1, scope: !9567, inlinedAt: !9568)
!9827 = !DILocation(line: 664, column: 2, scope: !9556)
!9828 = distinct !DISubprogram(name: "vb2_thread", scope: !3, file: !3, line: 2837, type: !4169, scopeLine: 2838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9829 = !DILocalVariable(name: "pscr_ret__", scope: !9830, file: !9831, line: 15, type: !1205)
!9830 = distinct !DILexicalBlock(scope: !9832, file: !9831, line: 15, column: 9)
!9831 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!9832 = distinct !DISubprogram(name: "get_current", scope: !9831, file: !9831, line: 13, type: !9833, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!9833 = !DISubroutineType(types: !9834)
!9834 = !{!1205}
!9835 = !DILocation(line: 15, column: 9, scope: !9830, inlinedAt: !9836)
!9836 = distinct !DILocation(line: 2890, column: 3, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 2890, column: 3)
!9838 = distinct !DILexicalBlock(scope: !9839, file: !3, line: 2890, column: 3)
!9839 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 2890, column: 3)
!9840 = distinct !DILexicalBlock(scope: !9828, file: !3, line: 2889, column: 33)
!9841 = !DILocalVariable(name: "__vpp_verify", scope: !9842, file: !9831, line: 15, type: !2122)
!9842 = distinct !DILexicalBlock(scope: !9830, file: !9831, line: 15, column: 9)
!9843 = !DILocation(line: 15, column: 9, scope: !9842, inlinedAt: !9836)
!9844 = !DILocalVariable(name: "pfo_val__", scope: !9845, file: !9831, line: 15, type: !406)
!9845 = distinct !DILexicalBlock(scope: !9830, file: !9831, line: 15, column: 9)
!9846 = !DILocation(line: 15, column: 9, scope: !9845, inlinedAt: !9836)
!9847 = !DILocalVariable(name: "data", arg: 1, scope: !9828, file: !3, line: 2837, type: !180)
!9848 = !DILocation(line: 2837, column: 29, scope: !9828)
!9849 = !DILocalVariable(name: "q", scope: !9828, file: !3, line: 2839, type: !185)
!9850 = !DILocation(line: 2839, column: 20, scope: !9828)
!9851 = !DILocation(line: 2839, column: 24, scope: !9828)
!9852 = !DILocalVariable(name: "threadio", scope: !9828, file: !3, line: 2840, type: !4274)
!9853 = !DILocation(line: 2840, column: 28, scope: !9828)
!9854 = !DILocation(line: 2840, column: 39, scope: !9828)
!9855 = !DILocation(line: 2840, column: 42, scope: !9828)
!9856 = !DILocalVariable(name: "copy_timestamp", scope: !9828, file: !3, line: 2841, type: !475)
!9857 = !DILocation(line: 2841, column: 7, scope: !9828)
!9858 = !DILocalVariable(name: "prequeue", scope: !9828, file: !3, line: 2842, type: !7)
!9859 = !DILocation(line: 2842, column: 11, scope: !9828)
!9860 = !DILocalVariable(name: "index", scope: !9828, file: !3, line: 2843, type: !7)
!9861 = !DILocation(line: 2843, column: 11, scope: !9828)
!9862 = !DILocalVariable(name: "ret", scope: !9828, file: !3, line: 2844, type: !243)
!9863 = !DILocation(line: 2844, column: 6, scope: !9828)
!9864 = !DILocation(line: 2846, column: 6, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9828, file: !3, line: 2846, column: 6)
!9866 = !DILocation(line: 2846, column: 9, scope: !9865)
!9867 = !DILocation(line: 2846, column: 6, scope: !9828)
!9868 = !DILocation(line: 2847, column: 14, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 2846, column: 20)
!9870 = !DILocation(line: 2847, column: 17, scope: !9869)
!9871 = !DILocation(line: 2847, column: 12, scope: !9869)
!9872 = !DILocation(line: 2848, column: 20, scope: !9869)
!9873 = !DILocation(line: 2848, column: 23, scope: !9869)
!9874 = !DILocation(line: 2848, column: 18, scope: !9869)
!9875 = !DILocation(line: 2849, column: 2, scope: !9869)
!9876 = !DILocation(line: 2851, column: 2, scope: !9828)
!9877 = !DILocation(line: 2853, column: 2, scope: !9828)
!9878 = !DILocalVariable(name: "vb", scope: !9879, file: !3, line: 2854, type: !181)
!9879 = distinct !DILexicalBlock(scope: !9880, file: !3, line: 2853, column: 11)
!9880 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 2853, column: 2)
!9881 = distinct !DILexicalBlock(scope: !9828, file: !3, line: 2853, column: 2)
!9882 = !DILocation(line: 2854, column: 22, scope: !9879)
!9883 = !DILocation(line: 2859, column: 7, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 2859, column: 7)
!9885 = !DILocation(line: 2859, column: 7, scope: !9879)
!9886 = !DILocation(line: 2860, column: 9, scope: !9887)
!9887 = distinct !DILexicalBlock(scope: !9884, file: !3, line: 2859, column: 17)
!9888 = !DILocation(line: 2860, column: 12, scope: !9887)
!9889 = !DILocation(line: 2860, column: 22, scope: !9887)
!9890 = !DILocation(line: 2860, column: 7, scope: !9887)
!9891 = !DILocation(line: 2861, column: 12, scope: !9887)
!9892 = !DILocation(line: 2862, column: 3, scope: !9887)
!9893 = !DILocation(line: 2863, column: 4, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9884, file: !3, line: 2862, column: 10)
!9895 = !DILocation(line: 2863, column: 4, scope: !9896)
!9896 = distinct !DILexicalBlock(scope: !9897, file: !3, line: 2863, column: 4)
!9897 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 2863, column: 4)
!9898 = !DILocation(line: 2863, column: 4, scope: !9897)
!9899 = !DILocation(line: 2864, column: 9, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 2864, column: 8)
!9901 = !DILocation(line: 2864, column: 19, scope: !9900)
!9902 = !DILocation(line: 2864, column: 8, scope: !9894)
!9903 = !DILocation(line: 2865, column: 26, scope: !9900)
!9904 = !DILocation(line: 2865, column: 11, scope: !9900)
!9905 = !DILocation(line: 2865, column: 9, scope: !9900)
!9906 = !DILocation(line: 2865, column: 5, scope: !9900)
!9907 = !DILocation(line: 2866, column: 4, scope: !9894)
!9908 = !DILocation(line: 2866, column: 4, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 2866, column: 4)
!9910 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 2866, column: 4)
!9911 = !DILocation(line: 2866, column: 4, scope: !9910)
!9912 = !DILocation(line: 2867, column: 4, scope: !9894)
!9913 = !DILocation(line: 2867, column: 4, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 2867, column: 4)
!9915 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 2867, column: 4)
!9916 = !DILocation(line: 2867, column: 4, scope: !9915)
!9917 = !DILocation(line: 2868, column: 9, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 2868, column: 8)
!9919 = !DILocation(line: 2868, column: 8, scope: !9894)
!9920 = !DILocation(line: 2869, column: 10, scope: !9918)
!9921 = !DILocation(line: 2869, column: 13, scope: !9918)
!9922 = !DILocation(line: 2869, column: 18, scope: !9918)
!9923 = !DILocation(line: 2869, column: 8, scope: !9918)
!9924 = !DILocation(line: 2869, column: 5, scope: !9918)
!9925 = !DILocation(line: 2871, column: 7, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 2871, column: 7)
!9927 = !DILocation(line: 2871, column: 11, scope: !9926)
!9928 = !DILocation(line: 2871, column: 14, scope: !9926)
!9929 = !DILocation(line: 2871, column: 24, scope: !9926)
!9930 = !DILocation(line: 2871, column: 7, scope: !9879)
!9931 = !DILocation(line: 2872, column: 4, scope: !9926)
!9932 = !DILocation(line: 2873, column: 3, scope: !9879)
!9933 = !DILocation(line: 2875, column: 7, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 2875, column: 7)
!9935 = !DILocation(line: 2875, column: 11, scope: !9934)
!9936 = !DILocation(line: 2875, column: 17, scope: !9934)
!9937 = !DILocation(line: 2875, column: 7, scope: !9879)
!9938 = !DILocation(line: 2876, column: 8, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 2876, column: 8)
!9940 = !DILocation(line: 2876, column: 18, scope: !9939)
!9941 = !DILocation(line: 2876, column: 22, scope: !9939)
!9942 = !DILocation(line: 2876, column: 26, scope: !9939)
!9943 = !DILocation(line: 2876, column: 36, scope: !9939)
!9944 = !DILocation(line: 2876, column: 8, scope: !9934)
!9945 = !DILocation(line: 2877, column: 5, scope: !9939)
!9946 = !DILocation(line: 2876, column: 40, scope: !9939)
!9947 = !DILocation(line: 2878, column: 3, scope: !9879)
!9948 = !DILocation(line: 2878, column: 3, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !3, line: 2878, column: 3)
!9950 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 2878, column: 3)
!9951 = !DILocation(line: 2878, column: 3, scope: !9950)
!9952 = !DILocation(line: 2879, column: 7, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 2879, column: 7)
!9954 = !DILocation(line: 2879, column: 7, scope: !9879)
!9955 = !DILocation(line: 2880, column: 20, scope: !9953)
!9956 = !DILocation(line: 2880, column: 4, scope: !9953)
!9957 = !DILocation(line: 2880, column: 8, scope: !9953)
!9958 = !DILocation(line: 2880, column: 18, scope: !9953)
!9959 = !DILocation(line: 2881, column: 8, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 2881, column: 7)
!9961 = !DILocation(line: 2881, column: 18, scope: !9960)
!9962 = !DILocation(line: 2881, column: 7, scope: !9879)
!9963 = !DILocation(line: 2882, column: 24, scope: !9960)
!9964 = !DILocation(line: 2882, column: 27, scope: !9960)
!9965 = !DILocation(line: 2882, column: 31, scope: !9960)
!9966 = !DILocation(line: 2882, column: 10, scope: !9960)
!9967 = !DILocation(line: 2882, column: 8, scope: !9960)
!9968 = !DILocation(line: 2882, column: 4, scope: !9960)
!9969 = !DILocation(line: 2883, column: 3, scope: !9879)
!9970 = !DILocation(line: 2883, column: 3, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9972, file: !3, line: 2883, column: 3)
!9972 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 2883, column: 3)
!9973 = !DILocation(line: 2883, column: 3, scope: !9972)
!9974 = !DILocation(line: 2884, column: 7, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9879, file: !3, line: 2884, column: 7)
!9976 = !DILocation(line: 2884, column: 11, scope: !9975)
!9977 = !DILocation(line: 2884, column: 14, scope: !9975)
!9978 = !DILocation(line: 2884, column: 24, scope: !9975)
!9979 = !DILocation(line: 2884, column: 7, scope: !9879)
!9980 = !DILocation(line: 2885, column: 4, scope: !9975)
!9981 = !DILocation(line: 2853, column: 2, scope: !9880)
!9982 = distinct !{!9982, !9983, !9984}
!9983 = !DILocation(line: 2853, column: 2, scope: !9881)
!9984 = !DILocation(line: 2886, column: 2, scope: !9881)
!9985 = !DILocation(line: 2889, column: 2, scope: !9828)
!9986 = !DILocation(line: 2889, column: 10, scope: !9828)
!9987 = !DILocation(line: 2889, column: 9, scope: !9828)
!9988 = !DILocation(line: 2890, column: 3, scope: !9840)
!9989 = !DILocation(line: 2890, column: 3, scope: !9839)
!9990 = !DILocation(line: 2890, column: 3, scope: !9838)
!9991 = !DILocation(line: 2890, column: 3, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 2890, column: 3)
!9993 = !{i32 -2146145475}
!9994 = !DILocation(line: 2890, column: 3, scope: !9837)
!9995 = !{i32 -2140499114}
!9996 = !DILocation(line: 2891, column: 3, scope: !9840)
!9997 = distinct !{!9997, !9985, !9998}
!9998 = !DILocation(line: 2892, column: 2, scope: !9828)
!9999 = !DILocation(line: 2893, column: 2, scope: !9828)
!10000 = distinct !DISubprogram(name: "IS_ERR", scope: !7938, file: !7938, line: 34, type: !7939, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10001 = !DILocalVariable(name: "ptr", arg: 1, scope: !10000, file: !7938, line: 34, type: !2122)
!10002 = !DILocation(line: 34, column: 60, scope: !10000)
!10003 = !DILocation(line: 36, column: 9, scope: !10000)
!10004 = !DILocation(line: 36, column: 2, scope: !10000)
!10005 = distinct !DISubprogram(name: "PTR_ERR", scope: !7938, file: !7938, line: 29, type: !10006, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10006 = !DISubroutineType(types: !10007)
!10007 = !{!294, !2122}
!10008 = !DILocalVariable(name: "ptr", arg: 1, scope: !10005, file: !7938, line: 29, type: !2122)
!10009 = !DILocation(line: 29, column: 61, scope: !10005)
!10010 = !DILocation(line: 31, column: 16, scope: !10005)
!10011 = !DILocation(line: 31, column: 9, scope: !10005)
!10012 = !DILocation(line: 31, column: 2, scope: !10005)
!10013 = distinct !DISubprogram(name: "vb2_thread_stop", scope: !3, file: !3, line: 2941, type: !4609, scopeLine: 2942, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10014 = !DILocalVariable(name: "q", arg: 1, scope: !10013, file: !3, line: 2941, type: !185)
!10015 = !DILocation(line: 2941, column: 39, scope: !10013)
!10016 = !DILocalVariable(name: "threadio", scope: !10013, file: !3, line: 2943, type: !4274)
!10017 = !DILocation(line: 2943, column: 28, scope: !10013)
!10018 = !DILocation(line: 2943, column: 39, scope: !10013)
!10019 = !DILocation(line: 2943, column: 42, scope: !10013)
!10020 = !DILocalVariable(name: "err", scope: !10013, file: !3, line: 2944, type: !243)
!10021 = !DILocation(line: 2944, column: 6, scope: !10013)
!10022 = !DILocation(line: 2946, column: 6, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10013, file: !3, line: 2946, column: 6)
!10024 = !DILocation(line: 2946, column: 15, scope: !10023)
!10025 = !DILocation(line: 2946, column: 6, scope: !10013)
!10026 = !DILocation(line: 2947, column: 3, scope: !10023)
!10027 = !DILocation(line: 2948, column: 2, scope: !10013)
!10028 = !DILocation(line: 2948, column: 12, scope: !10013)
!10029 = !DILocation(line: 2948, column: 17, scope: !10013)
!10030 = !DILocation(line: 2950, column: 18, scope: !10013)
!10031 = !DILocation(line: 2950, column: 2, scope: !10013)
!10032 = !DILocation(line: 2951, column: 21, scope: !10013)
!10033 = !DILocation(line: 2951, column: 31, scope: !10013)
!10034 = !DILocation(line: 2951, column: 8, scope: !10013)
!10035 = !DILocation(line: 2951, column: 6, scope: !10013)
!10036 = !DILocation(line: 2952, column: 23, scope: !10013)
!10037 = !DILocation(line: 2952, column: 2, scope: !10013)
!10038 = !DILocation(line: 2953, column: 2, scope: !10013)
!10039 = !DILocation(line: 2953, column: 12, scope: !10013)
!10040 = !DILocation(line: 2953, column: 19, scope: !10013)
!10041 = !DILocation(line: 2954, column: 8, scope: !10013)
!10042 = !DILocation(line: 2954, column: 2, scope: !10013)
!10043 = !DILocation(line: 2955, column: 2, scope: !10013)
!10044 = !DILocation(line: 2955, column: 5, scope: !10013)
!10045 = !DILocation(line: 2955, column: 14, scope: !10013)
!10046 = !DILocation(line: 2956, column: 9, scope: !10013)
!10047 = !DILocation(line: 2956, column: 2, scope: !10013)
!10048 = !DILocation(line: 2957, column: 1, scope: !10013)
!10049 = distinct !DISubprogram(name: "__vb2_free_mem", scope: !3, file: !3, line: 473, type: !10050, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10050 = !DISubroutineType(types: !10051)
!10051 = !{null, !185, !7}
!10052 = !DILocalVariable(name: "q", arg: 1, scope: !10049, file: !3, line: 473, type: !185)
!10053 = !DILocation(line: 473, column: 46, scope: !10049)
!10054 = !DILocalVariable(name: "buffers", arg: 2, scope: !10049, file: !3, line: 473, type: !7)
!10055 = !DILocation(line: 473, column: 62, scope: !10049)
!10056 = !DILocalVariable(name: "buffer", scope: !10049, file: !3, line: 475, type: !7)
!10057 = !DILocation(line: 475, column: 15, scope: !10049)
!10058 = !DILocalVariable(name: "vb", scope: !10049, file: !3, line: 476, type: !181)
!10059 = !DILocation(line: 476, column: 21, scope: !10049)
!10060 = !DILocation(line: 478, column: 16, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10049, file: !3, line: 478, column: 2)
!10062 = !DILocation(line: 478, column: 19, scope: !10061)
!10063 = !DILocation(line: 478, column: 33, scope: !10061)
!10064 = !DILocation(line: 478, column: 31, scope: !10061)
!10065 = !DILocation(line: 478, column: 14, scope: !10061)
!10066 = !DILocation(line: 478, column: 7, scope: !10061)
!10067 = !DILocation(line: 478, column: 42, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10061, file: !3, line: 478, column: 2)
!10069 = !DILocation(line: 478, column: 51, scope: !10068)
!10070 = !DILocation(line: 478, column: 54, scope: !10068)
!10071 = !DILocation(line: 478, column: 49, scope: !10068)
!10072 = !DILocation(line: 478, column: 2, scope: !10061)
!10073 = !DILocation(line: 480, column: 8, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 479, column: 17)
!10075 = !DILocation(line: 480, column: 11, scope: !10074)
!10076 = !DILocation(line: 480, column: 16, scope: !10074)
!10077 = !DILocation(line: 480, column: 6, scope: !10074)
!10078 = !DILocation(line: 481, column: 8, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 481, column: 7)
!10080 = !DILocation(line: 481, column: 7, scope: !10074)
!10081 = !DILocation(line: 482, column: 4, scope: !10079)
!10082 = !DILocation(line: 485, column: 7, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 485, column: 7)
!10084 = !DILocation(line: 485, column: 10, scope: !10083)
!10085 = !DILocation(line: 485, column: 17, scope: !10083)
!10086 = !DILocation(line: 485, column: 7, scope: !10074)
!10087 = !DILocation(line: 486, column: 23, scope: !10083)
!10088 = !DILocation(line: 486, column: 4, scope: !10083)
!10089 = !DILocation(line: 487, column: 12, scope: !10090)
!10090 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 487, column: 12)
!10091 = !DILocation(line: 487, column: 15, scope: !10090)
!10092 = !DILocation(line: 487, column: 22, scope: !10090)
!10093 = !DILocation(line: 487, column: 12, scope: !10083)
!10094 = !DILocation(line: 488, column: 25, scope: !10090)
!10095 = !DILocation(line: 488, column: 4, scope: !10090)
!10096 = !DILocation(line: 490, column: 26, scope: !10090)
!10097 = !DILocation(line: 490, column: 4, scope: !10090)
!10098 = !DILocation(line: 491, column: 2, scope: !10074)
!10099 = !DILocation(line: 479, column: 7, scope: !10068)
!10100 = !DILocation(line: 478, column: 2, scope: !10068)
!10101 = distinct !{!10101, !10072, !10102}
!10102 = !DILocation(line: 491, column: 2, scope: !10061)
!10103 = !DILocation(line: 492, column: 1, scope: !10049)
!10104 = distinct !DISubprogram(name: "__vb2_buf_mem_free", scope: !3, file: !3, line: 260, type: !3966, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10105 = !DILocalVariable(name: "vb", arg: 1, scope: !10104, file: !3, line: 260, type: !181)
!10106 = !DILocation(line: 260, column: 51, scope: !10104)
!10107 = !DILocalVariable(name: "plane", scope: !10104, file: !3, line: 262, type: !7)
!10108 = !DILocation(line: 262, column: 15, scope: !10104)
!10109 = !DILocation(line: 264, column: 13, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 264, column: 2)
!10111 = !DILocation(line: 264, column: 7, scope: !10110)
!10112 = !DILocation(line: 264, column: 18, scope: !10113)
!10113 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 264, column: 2)
!10114 = !DILocation(line: 264, column: 26, scope: !10113)
!10115 = !DILocation(line: 264, column: 30, scope: !10113)
!10116 = !DILocation(line: 264, column: 24, scope: !10113)
!10117 = !DILocation(line: 264, column: 2, scope: !10110)
!10118 = !DILocation(line: 265, column: 3, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10113, file: !3, line: 264, column: 51)
!10120 = !DILocation(line: 265, column: 3, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 265, column: 3)
!10122 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 265, column: 3)
!10123 = !DILocation(line: 265, column: 3, scope: !10122)
!10124 = !DILocation(line: 266, column: 3, scope: !10119)
!10125 = !DILocation(line: 266, column: 7, scope: !10119)
!10126 = !DILocation(line: 266, column: 14, scope: !10119)
!10127 = !DILocation(line: 266, column: 21, scope: !10119)
!10128 = !DILocation(line: 266, column: 30, scope: !10119)
!10129 = !DILocation(line: 267, column: 3, scope: !10119)
!10130 = !DILocation(line: 267, column: 3, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10132, file: !3, line: 267, column: 3)
!10132 = distinct !DILexicalBlock(scope: !10119, file: !3, line: 267, column: 3)
!10133 = !DILocation(line: 267, column: 3, scope: !10132)
!10134 = !DILocation(line: 269, column: 2, scope: !10119)
!10135 = !DILocation(line: 264, column: 42, scope: !10113)
!10136 = !DILocation(line: 264, column: 2, scope: !10113)
!10137 = distinct !{!10137, !10117, !10138}
!10138 = !DILocation(line: 269, column: 2, scope: !10110)
!10139 = !DILocation(line: 270, column: 1, scope: !10104)
!10140 = distinct !DISubprogram(name: "__vb2_buf_dmabuf_put", scope: !3, file: !3, line: 310, type: !3966, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10141 = !DILocalVariable(name: "vb", arg: 1, scope: !10140, file: !3, line: 310, type: !181)
!10142 = !DILocation(line: 310, column: 53, scope: !10140)
!10143 = !DILocalVariable(name: "plane", scope: !10140, file: !3, line: 312, type: !7)
!10144 = !DILocation(line: 312, column: 15, scope: !10140)
!10145 = !DILocation(line: 314, column: 13, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10140, file: !3, line: 314, column: 2)
!10147 = !DILocation(line: 314, column: 7, scope: !10146)
!10148 = !DILocation(line: 314, column: 18, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 314, column: 2)
!10150 = !DILocation(line: 314, column: 26, scope: !10149)
!10151 = !DILocation(line: 314, column: 30, scope: !10149)
!10152 = !DILocation(line: 314, column: 24, scope: !10149)
!10153 = !DILocation(line: 314, column: 2, scope: !10146)
!10154 = !DILocation(line: 315, column: 26, scope: !10149)
!10155 = !DILocation(line: 315, column: 31, scope: !10149)
!10156 = !DILocation(line: 315, column: 35, scope: !10149)
!10157 = !DILocation(line: 315, column: 42, scope: !10149)
!10158 = !DILocation(line: 315, column: 3, scope: !10149)
!10159 = !DILocation(line: 314, column: 42, scope: !10149)
!10160 = !DILocation(line: 314, column: 2, scope: !10149)
!10161 = distinct !{!10161, !10153, !10162}
!10162 = !DILocation(line: 315, column: 48, scope: !10146)
!10163 = !DILocation(line: 316, column: 1, scope: !10140)
!10164 = distinct !DISubprogram(name: "__vb2_buf_userptr_put", scope: !3, file: !3, line: 276, type: !3966, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10165 = !DILocalVariable(name: "vb", arg: 1, scope: !10164, file: !3, line: 276, type: !181)
!10166 = !DILocation(line: 276, column: 54, scope: !10164)
!10167 = !DILocalVariable(name: "plane", scope: !10164, file: !3, line: 278, type: !7)
!10168 = !DILocation(line: 278, column: 15, scope: !10164)
!10169 = !DILocation(line: 280, column: 13, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10164, file: !3, line: 280, column: 2)
!10171 = !DILocation(line: 280, column: 7, scope: !10170)
!10172 = !DILocation(line: 280, column: 18, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10170, file: !3, line: 280, column: 2)
!10174 = !DILocation(line: 280, column: 26, scope: !10173)
!10175 = !DILocation(line: 280, column: 30, scope: !10173)
!10176 = !DILocation(line: 280, column: 24, scope: !10173)
!10177 = !DILocation(line: 280, column: 2, scope: !10170)
!10178 = !DILocation(line: 281, column: 7, scope: !10179)
!10179 = distinct !DILexicalBlock(scope: !10180, file: !3, line: 281, column: 7)
!10180 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 280, column: 51)
!10181 = !DILocation(line: 281, column: 11, scope: !10179)
!10182 = !DILocation(line: 281, column: 18, scope: !10179)
!10183 = !DILocation(line: 281, column: 25, scope: !10179)
!10184 = !DILocation(line: 281, column: 7, scope: !10180)
!10185 = !DILocation(line: 282, column: 4, scope: !10179)
!10186 = !DILocation(line: 282, column: 4, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 282, column: 4)
!10188 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 282, column: 4)
!10189 = !DILocation(line: 282, column: 4, scope: !10188)
!10190 = !DILocation(line: 283, column: 3, scope: !10180)
!10191 = !DILocation(line: 283, column: 7, scope: !10180)
!10192 = !DILocation(line: 283, column: 14, scope: !10180)
!10193 = !DILocation(line: 283, column: 21, scope: !10180)
!10194 = !DILocation(line: 283, column: 30, scope: !10180)
!10195 = !DILocation(line: 284, column: 2, scope: !10180)
!10196 = !DILocation(line: 280, column: 42, scope: !10173)
!10197 = !DILocation(line: 280, column: 2, scope: !10173)
!10198 = distinct !{!10198, !10177, !10199}
!10199 = !DILocation(line: 284, column: 2, scope: !10170)
!10200 = !DILocation(line: 285, column: 1, scope: !10164)
!10201 = distinct !DISubprogram(name: "__vb2_plane_dmabuf_put", scope: !3, file: !3, line: 291, type: !10202, scopeLine: 292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10202 = !DISubroutineType(types: !10203)
!10203 = !{null, !181, !4203}
!10204 = !DILocalVariable(name: "vb", arg: 1, scope: !10201, file: !3, line: 291, type: !181)
!10205 = !DILocation(line: 291, column: 55, scope: !10201)
!10206 = !DILocalVariable(name: "p", arg: 2, scope: !10201, file: !3, line: 291, type: !4203)
!10207 = !DILocation(line: 291, column: 77, scope: !10201)
!10208 = !DILocation(line: 293, column: 7, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 293, column: 6)
!10210 = !DILocation(line: 293, column: 10, scope: !10209)
!10211 = !DILocation(line: 293, column: 6, scope: !10201)
!10212 = !DILocation(line: 294, column: 3, scope: !10209)
!10213 = !DILocation(line: 296, column: 6, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 296, column: 6)
!10215 = !DILocation(line: 296, column: 9, scope: !10214)
!10216 = !DILocation(line: 296, column: 6, scope: !10201)
!10217 = !DILocation(line: 297, column: 3, scope: !10214)
!10218 = !DILocation(line: 297, column: 3, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 297, column: 3)
!10220 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 297, column: 3)
!10221 = !DILocation(line: 297, column: 3, scope: !10220)
!10222 = !DILocation(line: 299, column: 2, scope: !10201)
!10223 = !DILocation(line: 299, column: 2, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 299, column: 2)
!10225 = distinct !DILexicalBlock(scope: !10201, file: !3, line: 299, column: 2)
!10226 = !DILocation(line: 299, column: 2, scope: !10225)
!10227 = !DILocation(line: 300, column: 14, scope: !10201)
!10228 = !DILocation(line: 300, column: 17, scope: !10201)
!10229 = !DILocation(line: 300, column: 2, scope: !10201)
!10230 = !DILocation(line: 301, column: 2, scope: !10201)
!10231 = !DILocation(line: 301, column: 5, scope: !10201)
!10232 = !DILocation(line: 301, column: 14, scope: !10201)
!10233 = !DILocation(line: 302, column: 2, scope: !10201)
!10234 = !DILocation(line: 302, column: 5, scope: !10201)
!10235 = !DILocation(line: 302, column: 10, scope: !10201)
!10236 = !DILocation(line: 303, column: 2, scope: !10201)
!10237 = !DILocation(line: 303, column: 5, scope: !10201)
!10238 = !DILocation(line: 303, column: 17, scope: !10201)
!10239 = !DILocation(line: 304, column: 1, scope: !10201)
!10240 = distinct !DISubprogram(name: "__vb2_buf_mem_alloc", scope: !3, file: !3, line: 214, type: !3960, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10241 = !DILocalVariable(name: "vb", arg: 1, scope: !10240, file: !3, line: 214, type: !181)
!10242 = !DILocation(line: 214, column: 51, scope: !10240)
!10243 = !DILocalVariable(name: "q", scope: !10240, file: !3, line: 216, type: !185)
!10244 = !DILocation(line: 216, column: 20, scope: !10240)
!10245 = !DILocation(line: 216, column: 24, scope: !10240)
!10246 = !DILocation(line: 216, column: 28, scope: !10240)
!10247 = !DILocalVariable(name: "mem_priv", scope: !10240, file: !3, line: 217, type: !180)
!10248 = !DILocation(line: 217, column: 8, scope: !10240)
!10249 = !DILocalVariable(name: "plane", scope: !10240, file: !3, line: 218, type: !243)
!10250 = !DILocation(line: 218, column: 6, scope: !10240)
!10251 = !DILocalVariable(name: "ret", scope: !10240, file: !3, line: 219, type: !243)
!10252 = !DILocation(line: 219, column: 6, scope: !10240)
!10253 = !DILocation(line: 225, column: 13, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 225, column: 2)
!10255 = !DILocation(line: 225, column: 7, scope: !10254)
!10256 = !DILocation(line: 225, column: 18, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10254, file: !3, line: 225, column: 2)
!10258 = !DILocation(line: 225, column: 26, scope: !10257)
!10259 = !DILocation(line: 225, column: 30, scope: !10257)
!10260 = !DILocation(line: 225, column: 24, scope: !10257)
!10261 = !DILocation(line: 225, column: 2, scope: !10254)
!10262 = !DILocalVariable(name: "size", scope: !10263, file: !3, line: 227, type: !309)
!10263 = distinct !DILexicalBlock(scope: !10257, file: !3, line: 225, column: 51)
!10264 = !DILocation(line: 227, column: 17, scope: !10263)
!10265 = !DILocation(line: 227, column: 24, scope: !10263)
!10266 = !DILocation(line: 230, column: 7, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10263, file: !3, line: 230, column: 7)
!10268 = !DILocation(line: 230, column: 14, scope: !10267)
!10269 = !DILocation(line: 230, column: 18, scope: !10267)
!10270 = !DILocation(line: 230, column: 25, scope: !10267)
!10271 = !DILocation(line: 230, column: 32, scope: !10267)
!10272 = !DILocation(line: 230, column: 12, scope: !10267)
!10273 = !DILocation(line: 230, column: 7, scope: !10263)
!10274 = !DILocation(line: 231, column: 4, scope: !10267)
!10275 = !DILocation(line: 233, column: 14, scope: !10263)
!10276 = !DILocation(line: 233, column: 12, scope: !10263)
!10277 = !DILocation(line: 236, column: 22, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10263, file: !3, line: 236, column: 7)
!10279 = !DILocation(line: 236, column: 7, scope: !10278)
!10280 = !DILocation(line: 236, column: 7, scope: !10263)
!10281 = !DILocation(line: 237, column: 8, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 237, column: 8)
!10283 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 236, column: 33)
!10284 = !DILocation(line: 237, column: 8, scope: !10283)
!10285 = !DILocation(line: 238, column: 19, scope: !10282)
!10286 = !DILocation(line: 238, column: 11, scope: !10282)
!10287 = !DILocation(line: 238, column: 9, scope: !10282)
!10288 = !DILocation(line: 238, column: 5, scope: !10282)
!10289 = !DILocation(line: 239, column: 4, scope: !10283)
!10290 = !DILocation(line: 243, column: 32, scope: !10263)
!10291 = !DILocation(line: 243, column: 3, scope: !10263)
!10292 = !DILocation(line: 243, column: 7, scope: !10263)
!10293 = !DILocation(line: 243, column: 14, scope: !10263)
!10294 = !DILocation(line: 243, column: 21, scope: !10263)
!10295 = !DILocation(line: 243, column: 30, scope: !10263)
!10296 = !DILocation(line: 244, column: 2, scope: !10263)
!10297 = !DILocation(line: 225, column: 42, scope: !10257)
!10298 = !DILocation(line: 225, column: 2, scope: !10257)
!10299 = distinct !{!10299, !10261, !10300}
!10300 = !DILocation(line: 244, column: 2, scope: !10254)
!10301 = !DILocation(line: 246, column: 2, scope: !10240)
!10302 = !DILabel(scope: !10240, name: "free", file: !3, line: 247)
!10303 = !DILocation(line: 247, column: 1, scope: !10240)
!10304 = !DILocation(line: 249, column: 2, scope: !10240)
!10305 = !DILocation(line: 249, column: 9, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 249, column: 2)
!10307 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 249, column: 2)
!10308 = !DILocation(line: 249, column: 15, scope: !10306)
!10309 = !DILocation(line: 249, column: 2, scope: !10307)
!10310 = !DILocation(line: 250, column: 3, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 249, column: 29)
!10312 = !DILocation(line: 250, column: 3, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10314, file: !3, line: 250, column: 3)
!10314 = distinct !DILexicalBlock(scope: !10311, file: !3, line: 250, column: 3)
!10315 = !DILocation(line: 250, column: 3, scope: !10314)
!10316 = !DILocation(line: 251, column: 3, scope: !10311)
!10317 = !DILocation(line: 251, column: 7, scope: !10311)
!10318 = !DILocation(line: 251, column: 14, scope: !10311)
!10319 = !DILocation(line: 251, column: 20, scope: !10311)
!10320 = !DILocation(line: 251, column: 25, scope: !10311)
!10321 = !DILocation(line: 251, column: 34, scope: !10311)
!10322 = !DILocation(line: 252, column: 2, scope: !10311)
!10323 = !DILocation(line: 249, column: 20, scope: !10306)
!10324 = !DILocation(line: 249, column: 2, scope: !10306)
!10325 = distinct !{!10325, !10309, !10326}
!10326 = !DILocation(line: 252, column: 2, scope: !10307)
!10327 = !DILocation(line: 254, column: 9, scope: !10240)
!10328 = !DILocation(line: 254, column: 2, scope: !10240)
!10329 = !DILocation(line: 255, column: 1, scope: !10240)
!10330 = distinct !DISubprogram(name: "__setup_offsets", scope: !3, file: !3, line: 360, type: !3966, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10331 = !DILocalVariable(name: "vb", arg: 1, scope: !10330, file: !3, line: 360, type: !181)
!10332 = !DILocation(line: 360, column: 48, scope: !10330)
!10333 = !DILocalVariable(name: "q", scope: !10330, file: !3, line: 362, type: !185)
!10334 = !DILocation(line: 362, column: 20, scope: !10330)
!10335 = !DILocation(line: 362, column: 24, scope: !10330)
!10336 = !DILocation(line: 362, column: 28, scope: !10330)
!10337 = !DILocalVariable(name: "plane", scope: !10330, file: !3, line: 363, type: !7)
!10338 = !DILocation(line: 363, column: 15, scope: !10330)
!10339 = !DILocalVariable(name: "off", scope: !10330, file: !3, line: 364, type: !309)
!10340 = !DILocation(line: 364, column: 16, scope: !10330)
!10341 = !DILocation(line: 366, column: 6, scope: !10342)
!10342 = distinct !DILexicalBlock(scope: !10330, file: !3, line: 366, column: 6)
!10343 = !DILocation(line: 366, column: 10, scope: !10342)
!10344 = !DILocation(line: 366, column: 6, scope: !10330)
!10345 = !DILocalVariable(name: "prev", scope: !10346, file: !3, line: 367, type: !181)
!10346 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 366, column: 17)
!10347 = !DILocation(line: 367, column: 22, scope: !10346)
!10348 = !DILocation(line: 367, column: 29, scope: !10346)
!10349 = !DILocation(line: 367, column: 32, scope: !10346)
!10350 = !DILocation(line: 367, column: 37, scope: !10346)
!10351 = !DILocation(line: 367, column: 41, scope: !10346)
!10352 = !DILocation(line: 367, column: 47, scope: !10346)
!10353 = !DILocalVariable(name: "p", scope: !10346, file: !3, line: 368, type: !4203)
!10354 = !DILocation(line: 368, column: 21, scope: !10346)
!10355 = !DILocation(line: 368, column: 26, scope: !10346)
!10356 = !DILocation(line: 368, column: 32, scope: !10346)
!10357 = !DILocation(line: 368, column: 39, scope: !10346)
!10358 = !DILocation(line: 368, column: 45, scope: !10346)
!10359 = !DILocation(line: 368, column: 56, scope: !10346)
!10360 = !DILocation(line: 370, column: 9, scope: !10346)
!10361 = !DILocation(line: 370, column: 7, scope: !10346)
!10362 = !DILocation(line: 371, column: 2, scope: !10346)
!10363 = !DILocation(line: 373, column: 13, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10330, file: !3, line: 373, column: 2)
!10365 = !DILocation(line: 373, column: 7, scope: !10364)
!10366 = !DILocation(line: 373, column: 18, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 373, column: 2)
!10368 = !DILocation(line: 373, column: 26, scope: !10367)
!10369 = !DILocation(line: 373, column: 30, scope: !10367)
!10370 = !DILocation(line: 373, column: 24, scope: !10367)
!10371 = !DILocation(line: 373, column: 2, scope: !10364)
!10372 = !DILocation(line: 374, column: 32, scope: !10373)
!10373 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 373, column: 51)
!10374 = !DILocation(line: 374, column: 3, scope: !10373)
!10375 = !DILocation(line: 374, column: 7, scope: !10373)
!10376 = !DILocation(line: 374, column: 14, scope: !10373)
!10377 = !DILocation(line: 374, column: 21, scope: !10373)
!10378 = !DILocation(line: 374, column: 23, scope: !10373)
!10379 = !DILocation(line: 374, column: 30, scope: !10373)
!10380 = !DILocation(line: 376, column: 3, scope: !10373)
!10381 = !DILocation(line: 376, column: 3, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 376, column: 3)
!10383 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 376, column: 3)
!10384 = !DILocation(line: 376, column: 3, scope: !10383)
!10385 = !DILocation(line: 379, column: 10, scope: !10373)
!10386 = !DILocation(line: 379, column: 14, scope: !10373)
!10387 = !DILocation(line: 379, column: 21, scope: !10373)
!10388 = !DILocation(line: 379, column: 28, scope: !10373)
!10389 = !DILocation(line: 379, column: 7, scope: !10373)
!10390 = !DILocation(line: 380, column: 9, scope: !10373)
!10391 = !DILocation(line: 380, column: 7, scope: !10373)
!10392 = !DILocation(line: 381, column: 2, scope: !10373)
!10393 = !DILocation(line: 373, column: 42, scope: !10367)
!10394 = !DILocation(line: 373, column: 2, scope: !10367)
!10395 = distinct !{!10395, !10371, !10396}
!10396 = !DILocation(line: 381, column: 2, scope: !10364)
!10397 = !DILocation(line: 382, column: 1, scope: !10330)
!10398 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !6295, file: !6295, line: 646, type: !6296, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10399 = !DILocalVariable(name: "__ret", scope: !10400, file: !6295, line: 648, type: !309)
!10400 = distinct !DILexicalBlock(scope: !10398, file: !6295, line: 648, column: 9)
!10401 = !DILocation(line: 648, column: 9, scope: !10400)
!10402 = !DILocalVariable(name: "__edi", scope: !10400, file: !6295, line: 648, type: !309)
!10403 = !DILocalVariable(name: "__esi", scope: !10400, file: !6295, line: 648, type: !309)
!10404 = !DILocalVariable(name: "__edx", scope: !10400, file: !6295, line: 648, type: !309)
!10405 = !DILocalVariable(name: "__ecx", scope: !10400, file: !6295, line: 648, type: !309)
!10406 = !DILocalVariable(name: "__eax", scope: !10400, file: !6295, line: 648, type: !309)
!10407 = !DILocation(line: 648, column: 9, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10409, file: !6295, line: 648, column: 9)
!10409 = distinct !DILexicalBlock(scope: !10400, file: !6295, line: 648, column: 9)
!10410 = !{i32 -2145711885, i32 -2145709570, i32 -2145709336, i32 -2145709285, i32 -2145709257, i32 -2145709232, i32 -2145709548, i32 -2145709535, i32 -2145709097, i32 -2145708978, i32 -2145709443, i32 -2145709416, i32 -2145709388, i32 -2145709358}
!10411 = !DILocalVariable(name: "__mask", scope: !10412, file: !6295, line: 648, type: !309)
!10412 = distinct !DILexicalBlock(scope: !10408, file: !6295, line: 648, column: 9)
!10413 = !DILocation(line: 648, column: 9, scope: !10412)
!10414 = !DILocation(line: 648, column: 9, scope: !10409)
!10415 = !DILocation(line: 648, column: 2, scope: !10398)
!10416 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !6295, file: !6295, line: 656, type: !1873, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10417 = !DILocalVariable(name: "__edi", scope: !10418, file: !6295, line: 658, type: !309)
!10418 = distinct !DILexicalBlock(scope: !10416, file: !6295, line: 658, column: 2)
!10419 = !DILocation(line: 658, column: 2, scope: !10418)
!10420 = !DILocalVariable(name: "__esi", scope: !10418, file: !6295, line: 658, type: !309)
!10421 = !DILocalVariable(name: "__edx", scope: !10418, file: !6295, line: 658, type: !309)
!10422 = !DILocalVariable(name: "__ecx", scope: !10418, file: !6295, line: 658, type: !309)
!10423 = !DILocalVariable(name: "__eax", scope: !10418, file: !6295, line: 658, type: !309)
!10424 = !{i32 -2145704791, i32 -2145704059, i32 -2145703825, i32 -2145703774, i32 -2145703746, i32 -2145703721, i32 -2145704037, i32 -2145704024, i32 -2145703586, i32 -2145703467, i32 -2145703932, i32 -2145703905, i32 -2145703877, i32 -2145703847}
!10425 = !DILocation(line: 659, column: 1, scope: !10416)
!10426 = distinct !DISubprogram(name: "__list_add", scope: !6306, file: !6306, line: 63, type: !10427, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10427 = !DISubroutineType(types: !10428)
!10428 = !{null, !207, !207, !207}
!10429 = !DILocalVariable(name: "new", arg: 1, scope: !10426, file: !6306, line: 63, type: !207)
!10430 = !DILocation(line: 63, column: 49, scope: !10426)
!10431 = !DILocalVariable(name: "prev", arg: 2, scope: !10426, file: !6306, line: 64, type: !207)
!10432 = !DILocation(line: 64, column: 28, scope: !10426)
!10433 = !DILocalVariable(name: "next", arg: 3, scope: !10426, file: !6306, line: 65, type: !207)
!10434 = !DILocation(line: 65, column: 28, scope: !10426)
!10435 = !DILocation(line: 67, column: 24, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10426, file: !6306, line: 67, column: 6)
!10437 = !DILocation(line: 67, column: 29, scope: !10436)
!10438 = !DILocation(line: 67, column: 35, scope: !10436)
!10439 = !DILocation(line: 67, column: 7, scope: !10436)
!10440 = !DILocation(line: 67, column: 6, scope: !10426)
!10441 = !DILocation(line: 68, column: 3, scope: !10436)
!10442 = !DILocation(line: 70, column: 15, scope: !10426)
!10443 = !DILocation(line: 70, column: 2, scope: !10426)
!10444 = !DILocation(line: 70, column: 8, scope: !10426)
!10445 = !DILocation(line: 70, column: 13, scope: !10426)
!10446 = !DILocation(line: 71, column: 14, scope: !10426)
!10447 = !DILocation(line: 71, column: 2, scope: !10426)
!10448 = !DILocation(line: 71, column: 7, scope: !10426)
!10449 = !DILocation(line: 71, column: 12, scope: !10426)
!10450 = !DILocation(line: 72, column: 14, scope: !10426)
!10451 = !DILocation(line: 72, column: 2, scope: !10426)
!10452 = !DILocation(line: 72, column: 7, scope: !10426)
!10453 = !DILocation(line: 72, column: 12, scope: !10426)
!10454 = !DILocation(line: 73, column: 2, scope: !10426)
!10455 = !DILocation(line: 73, column: 2, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10426, file: !6306, line: 73, column: 2)
!10457 = !DILocation(line: 73, column: 2, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10456, file: !6306, line: 73, column: 2)
!10459 = !DILocation(line: 73, column: 2, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10456, file: !6306, line: 73, column: 2)
!10461 = !DILocation(line: 74, column: 1, scope: !10426)
!10462 = distinct !DISubprogram(name: "__list_add_valid", scope: !6306, file: !6306, line: 45, type: !10463, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10463 = !DISubroutineType(types: !10464)
!10464 = !{!475, !207, !207, !207}
!10465 = !DILocalVariable(name: "new", arg: 1, scope: !10462, file: !6306, line: 45, type: !207)
!10466 = !DILocation(line: 45, column: 55, scope: !10462)
!10467 = !DILocalVariable(name: "prev", arg: 2, scope: !10462, file: !6306, line: 46, type: !207)
!10468 = !DILocation(line: 46, column: 23, scope: !10462)
!10469 = !DILocalVariable(name: "next", arg: 3, scope: !10462, file: !6306, line: 47, type: !207)
!10470 = !DILocation(line: 47, column: 23, scope: !10462)
!10471 = !DILocation(line: 49, column: 2, scope: !10462)
!10472 = distinct !DISubprogram(name: "kasan_check_write", scope: !10473, file: !10473, line: 38, type: !10474, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10473 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10474 = !DISubroutineType(types: !10475)
!10475 = !{!475, !5238, !7}
!10476 = !DILocalVariable(name: "p", arg: 1, scope: !10472, file: !10473, line: 38, type: !5238)
!10477 = !DILocation(line: 38, column: 59, scope: !10472)
!10478 = !DILocalVariable(name: "size", arg: 2, scope: !10472, file: !10473, line: 38, type: !7)
!10479 = !DILocation(line: 38, column: 75, scope: !10472)
!10480 = !DILocation(line: 40, column: 2, scope: !10472)
!10481 = distinct !DISubprogram(name: "kcsan_check_access", scope: !10482, file: !10482, line: 178, type: !10483, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10482 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10483 = !DISubroutineType(types: !10484)
!10484 = !{null, !5238, !306, !243}
!10485 = !DILocalVariable(name: "ptr", arg: 1, scope: !10481, file: !10482, line: 178, type: !5238)
!10486 = !DILocation(line: 178, column: 60, scope: !10481)
!10487 = !DILocalVariable(name: "size", arg: 2, scope: !10481, file: !10482, line: 178, type: !306)
!10488 = !DILocation(line: 178, column: 72, scope: !10481)
!10489 = !DILocalVariable(name: "type", arg: 3, scope: !10481, file: !10482, line: 179, type: !243)
!10490 = !DILocation(line: 179, column: 15, scope: !10481)
!10491 = !DILocation(line: 179, column: 23, scope: !10481)
!10492 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !6295, file: !6295, line: 651, type: !10493, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10493 = !DISubroutineType(types: !10494)
!10494 = !{null, !309}
!10495 = !DILocalVariable(name: "f", arg: 1, scope: !10492, file: !6295, line: 651, type: !309)
!10496 = !DILocation(line: 651, column: 65, scope: !10492)
!10497 = !DILocalVariable(name: "__edi", scope: !10498, file: !6295, line: 653, type: !309)
!10498 = distinct !DILexicalBlock(scope: !10492, file: !6295, line: 653, column: 2)
!10499 = !DILocation(line: 653, column: 2, scope: !10498)
!10500 = !DILocalVariable(name: "__esi", scope: !10498, file: !6295, line: 653, type: !309)
!10501 = !DILocalVariable(name: "__edx", scope: !10498, file: !6295, line: 653, type: !309)
!10502 = !DILocalVariable(name: "__ecx", scope: !10498, file: !6295, line: 653, type: !309)
!10503 = !DILocalVariable(name: "__eax", scope: !10498, file: !6295, line: 653, type: !309)
!10504 = !{i32 -2145707418, i32 -2145706668, i32 -2145706434, i32 -2145706383, i32 -2145706355, i32 -2145706330, i32 -2145706646, i32 -2145706633, i32 -2145706195, i32 -2145706076, i32 -2145706541, i32 -2145706514, i32 -2145706486, i32 -2145706456}
!10505 = !DILocation(line: 654, column: 1, scope: !10492)
!10506 = distinct !DISubprogram(name: "vb2_req_prepare", scope: !3, file: !3, line: 1391, type: !4513, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10507 = !DILocalVariable(name: "obj", arg: 1, scope: !10506, file: !3, line: 1391, type: !4515)
!10508 = !DILocation(line: 1391, column: 57, scope: !10506)
!10509 = !DILocalVariable(name: "vb", scope: !10506, file: !3, line: 1393, type: !181)
!10510 = !DILocation(line: 1393, column: 21, scope: !10506)
!10511 = !DILocalVariable(name: "__mptr", scope: !10512, file: !3, line: 1393, type: !180)
!10512 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 1393, column: 26)
!10513 = !DILocation(line: 1393, column: 26, scope: !10512)
!10514 = !DILocation(line: 1393, column: 26, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10512, file: !3, line: 1393, column: 26)
!10516 = !DILocalVariable(name: "ret", scope: !10506, file: !3, line: 1394, type: !243)
!10517 = !DILocation(line: 1394, column: 6, scope: !10506)
!10518 = !DILocalVariable(name: "__ret_warn_on", scope: !10519, file: !3, line: 1396, type: !243)
!10519 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 1396, column: 6)
!10520 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 1396, column: 6)
!10521 = !DILocation(line: 1396, column: 6, scope: !10519)
!10522 = !DILocation(line: 1396, column: 6, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 1396, column: 6)
!10524 = !DILocation(line: 1396, column: 6, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 1396, column: 6)
!10526 = !DILocation(line: 1396, column: 6, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 1396, column: 6)
!10528 = !DILocation(line: 1396, column: 6, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 1396, column: 6)
!10530 = !{i32 -2140582157, i32 -2140582128, i32 -2140582082, i32 -2140582024, i32 -2140581970, i32 -2140581916, i32 -2140581861, i32 -2140581830}
!10531 = !DILocation(line: 1396, column: 6, scope: !10532)
!10532 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 1396, column: 6)
!10533 = !{i32 -2140581400, i32 -2140581393, i32 -2140581341, i32 -2140581310, i32 -2140581280}
!10534 = !DILocation(line: 1396, column: 6, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 1396, column: 6)
!10536 = !DILocation(line: 1396, column: 6, scope: !10520)
!10537 = !DILocation(line: 1396, column: 6, scope: !10506)
!10538 = !DILocation(line: 1397, column: 3, scope: !10520)
!10539 = !DILocation(line: 1399, column: 13, scope: !10506)
!10540 = !DILocation(line: 1399, column: 17, scope: !10506)
!10541 = !DILocation(line: 1399, column: 28, scope: !10506)
!10542 = !DILocation(line: 1399, column: 2, scope: !10506)
!10543 = !DILocation(line: 1400, column: 22, scope: !10506)
!10544 = !DILocation(line: 1400, column: 8, scope: !10506)
!10545 = !DILocation(line: 1400, column: 6, scope: !10506)
!10546 = !DILocation(line: 1401, column: 15, scope: !10506)
!10547 = !DILocation(line: 1401, column: 19, scope: !10506)
!10548 = !DILocation(line: 1401, column: 30, scope: !10506)
!10549 = !DILocation(line: 1401, column: 2, scope: !10506)
!10550 = !DILocation(line: 1402, column: 9, scope: !10506)
!10551 = !DILocation(line: 1402, column: 2, scope: !10506)
!10552 = !DILocation(line: 1403, column: 1, scope: !10506)
!10553 = distinct !DISubprogram(name: "vb2_req_unprepare", scope: !3, file: !3, line: 1407, type: !4518, scopeLine: 1408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10554 = !DILocalVariable(name: "obj", arg: 1, scope: !10553, file: !3, line: 1407, type: !4515)
!10555 = !DILocation(line: 1407, column: 60, scope: !10553)
!10556 = !DILocalVariable(name: "vb", scope: !10553, file: !3, line: 1409, type: !181)
!10557 = !DILocation(line: 1409, column: 21, scope: !10553)
!10558 = !DILocalVariable(name: "__mptr", scope: !10559, file: !3, line: 1409, type: !180)
!10559 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 1409, column: 26)
!10560 = !DILocation(line: 1409, column: 26, scope: !10559)
!10561 = !DILocation(line: 1409, column: 26, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10559, file: !3, line: 1409, column: 26)
!10563 = !DILocation(line: 1411, column: 13, scope: !10553)
!10564 = !DILocation(line: 1411, column: 17, scope: !10553)
!10565 = !DILocation(line: 1411, column: 28, scope: !10553)
!10566 = !DILocation(line: 1411, column: 2, scope: !10553)
!10567 = !DILocation(line: 1412, column: 14, scope: !10553)
!10568 = !DILocation(line: 1412, column: 2, scope: !10553)
!10569 = !DILocation(line: 1413, column: 2, scope: !10553)
!10570 = !DILocation(line: 1413, column: 6, scope: !10553)
!10571 = !DILocation(line: 1413, column: 12, scope: !10553)
!10572 = !DILocation(line: 1414, column: 15, scope: !10553)
!10573 = !DILocation(line: 1414, column: 19, scope: !10553)
!10574 = !DILocation(line: 1414, column: 30, scope: !10553)
!10575 = !DILocation(line: 1414, column: 2, scope: !10553)
!10576 = !DILocalVariable(name: "__ret_warn_on", scope: !10577, file: !3, line: 1415, type: !243)
!10577 = distinct !DILexicalBlock(scope: !10553, file: !3, line: 1415, column: 2)
!10578 = !DILocation(line: 1415, column: 2, scope: !10577)
!10579 = !DILocation(line: 1415, column: 2, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 1415, column: 2)
!10581 = !DILocation(line: 1415, column: 2, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 1415, column: 2)
!10583 = !DILocation(line: 1415, column: 2, scope: !10584)
!10584 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 1415, column: 2)
!10585 = !DILocation(line: 1415, column: 2, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 1415, column: 2)
!10587 = !{i32 -2140579227, i32 -2140579198, i32 -2140579152, i32 -2140579094, i32 -2140579040, i32 -2140578986, i32 -2140578931, i32 -2140578900}
!10588 = !DILocation(line: 1415, column: 2, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 1415, column: 2)
!10590 = !{i32 -2140578470, i32 -2140578463, i32 -2140578411, i32 -2140578380, i32 -2140578350}
!10591 = !DILocation(line: 1415, column: 2, scope: !10592)
!10592 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 1415, column: 2)
!10593 = !DILocation(line: 1416, column: 1, scope: !10553)
!10594 = distinct !DISubprogram(name: "vb2_req_queue", scope: !3, file: !3, line: 1421, type: !4518, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10595 = !DILocalVariable(name: "obj", arg: 1, scope: !10594, file: !3, line: 1421, type: !4515)
!10596 = !DILocation(line: 1421, column: 56, scope: !10594)
!10597 = !DILocalVariable(name: "vb", scope: !10594, file: !3, line: 1423, type: !181)
!10598 = !DILocation(line: 1423, column: 21, scope: !10594)
!10599 = !DILocalVariable(name: "__mptr", scope: !10600, file: !3, line: 1423, type: !180)
!10600 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 1423, column: 26)
!10601 = !DILocation(line: 1423, column: 26, scope: !10600)
!10602 = !DILocation(line: 1423, column: 26, scope: !10603)
!10603 = distinct !DILexicalBlock(scope: !10600, file: !3, line: 1423, column: 26)
!10604 = !DILocation(line: 1425, column: 13, scope: !10594)
!10605 = !DILocation(line: 1425, column: 17, scope: !10594)
!10606 = !DILocation(line: 1425, column: 28, scope: !10594)
!10607 = !DILocation(line: 1425, column: 2, scope: !10594)
!10608 = !DILocation(line: 1426, column: 16, scope: !10594)
!10609 = !DILocation(line: 1426, column: 20, scope: !10594)
!10610 = !DILocation(line: 1426, column: 31, scope: !10594)
!10611 = !DILocation(line: 1426, column: 35, scope: !10594)
!10612 = !DILocation(line: 1426, column: 2, scope: !10594)
!10613 = !DILocation(line: 1427, column: 15, scope: !10594)
!10614 = !DILocation(line: 1427, column: 19, scope: !10594)
!10615 = !DILocation(line: 1427, column: 30, scope: !10594)
!10616 = !DILocation(line: 1427, column: 2, scope: !10594)
!10617 = !DILocation(line: 1428, column: 1, scope: !10594)
!10618 = distinct !DISubprogram(name: "vb2_req_unbind", scope: !3, file: !3, line: 1430, type: !4518, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10619 = !DILocalVariable(name: "obj", arg: 1, scope: !10618, file: !3, line: 1430, type: !4515)
!10620 = !DILocation(line: 1430, column: 57, scope: !10618)
!10621 = !DILocalVariable(name: "vb", scope: !10618, file: !3, line: 1432, type: !181)
!10622 = !DILocation(line: 1432, column: 21, scope: !10618)
!10623 = !DILocalVariable(name: "__mptr", scope: !10624, file: !3, line: 1432, type: !180)
!10624 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 1432, column: 26)
!10625 = !DILocation(line: 1432, column: 26, scope: !10624)
!10626 = !DILocation(line: 1432, column: 26, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 1432, column: 26)
!10628 = !DILocation(line: 1434, column: 6, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 1434, column: 6)
!10630 = !DILocation(line: 1434, column: 10, scope: !10629)
!10631 = !DILocation(line: 1434, column: 16, scope: !10629)
!10632 = !DILocation(line: 1434, column: 6, scope: !10618)
!10633 = !DILocation(line: 1435, column: 3, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10635, file: !3, line: 1435, column: 3)
!10635 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 1435, column: 3)
!10636 = !DILocation(line: 1435, column: 3, scope: !10635)
!10637 = !DILocation(line: 1435, column: 3, scope: !10629)
!10638 = !DILocation(line: 1436, column: 1, scope: !10618)
!10639 = distinct !DISubprogram(name: "vb2_req_release", scope: !3, file: !3, line: 1438, type: !4518, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10640 = !DILocalVariable(name: "obj", arg: 1, scope: !10639, file: !3, line: 1438, type: !4515)
!10641 = !DILocation(line: 1438, column: 58, scope: !10639)
!10642 = !DILocalVariable(name: "vb", scope: !10639, file: !3, line: 1440, type: !181)
!10643 = !DILocation(line: 1440, column: 21, scope: !10639)
!10644 = !DILocalVariable(name: "__mptr", scope: !10645, file: !3, line: 1440, type: !180)
!10645 = distinct !DILexicalBlock(scope: !10639, file: !3, line: 1440, column: 26)
!10646 = !DILocation(line: 1440, column: 26, scope: !10645)
!10647 = !DILocation(line: 1440, column: 26, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10645, file: !3, line: 1440, column: 26)
!10649 = !DILocation(line: 1442, column: 6, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10639, file: !3, line: 1442, column: 6)
!10651 = !DILocation(line: 1442, column: 10, scope: !10650)
!10652 = !DILocation(line: 1442, column: 16, scope: !10650)
!10653 = !DILocation(line: 1442, column: 6, scope: !10639)
!10654 = !DILocation(line: 1443, column: 3, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10650, file: !3, line: 1442, column: 45)
!10656 = !DILocation(line: 1443, column: 7, scope: !10655)
!10657 = !DILocation(line: 1443, column: 13, scope: !10655)
!10658 = !DILocation(line: 1444, column: 7, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10655, file: !3, line: 1444, column: 7)
!10660 = !DILocation(line: 1444, column: 11, scope: !10659)
!10661 = !DILocation(line: 1444, column: 7, scope: !10655)
!10662 = !DILocation(line: 1445, column: 22, scope: !10659)
!10663 = !DILocation(line: 1445, column: 26, scope: !10659)
!10664 = !DILocation(line: 1445, column: 4, scope: !10659)
!10665 = !DILocation(line: 1446, column: 3, scope: !10655)
!10666 = !DILocation(line: 1446, column: 7, scope: !10655)
!10667 = !DILocation(line: 1446, column: 15, scope: !10655)
!10668 = !DILocation(line: 1447, column: 2, scope: !10655)
!10669 = !DILocation(line: 1448, column: 1, scope: !10639)
!10670 = distinct !DISubprogram(name: "__prepare_mmap", scope: !3, file: !3, line: 1063, type: !3960, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10671 = !DILocalVariable(name: "vb", arg: 1, scope: !10670, file: !3, line: 1063, type: !181)
!10672 = !DILocation(line: 1063, column: 46, scope: !10670)
!10673 = !DILocalVariable(name: "ret", scope: !10670, file: !3, line: 1065, type: !243)
!10674 = !DILocation(line: 1065, column: 6, scope: !10670)
!10675 = !DILocalVariable(name: "ret", scope: !10676, file: !3, line: 1067, type: !243)
!10676 = distinct !DILexicalBlock(scope: !10670, file: !3, line: 1067, column: 8)
!10677 = !DILocation(line: 1067, column: 8, scope: !10676)
!10678 = !DILocation(line: 1067, column: 8, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 1067, column: 8)
!10680 = !DILocation(line: 1067, column: 6, scope: !10670)
!10681 = !DILocation(line: 1069, column: 9, scope: !10670)
!10682 = !DILocation(line: 1069, column: 15, scope: !10670)
!10683 = !DILocation(line: 1069, column: 21, scope: !10670)
!10684 = !DILocation(line: 1069, column: 2, scope: !10670)
!10685 = distinct !DISubprogram(name: "__prepare_userptr", scope: !3, file: !3, line: 1075, type: !3960, scopeLine: 1076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10686 = !DILocalVariable(name: "vb", arg: 1, scope: !10685, file: !3, line: 1075, type: !181)
!10687 = !DILocation(line: 1075, column: 49, scope: !10685)
!10688 = !DILocalVariable(name: "planes", scope: !10685, file: !3, line: 1077, type: !4535)
!10689 = !DILocation(line: 1077, column: 19, scope: !10685)
!10690 = !DILocalVariable(name: "q", scope: !10685, file: !3, line: 1078, type: !185)
!10691 = !DILocation(line: 1078, column: 20, scope: !10685)
!10692 = !DILocation(line: 1078, column: 24, scope: !10685)
!10693 = !DILocation(line: 1078, column: 28, scope: !10685)
!10694 = !DILocalVariable(name: "mem_priv", scope: !10685, file: !3, line: 1079, type: !180)
!10695 = !DILocation(line: 1079, column: 8, scope: !10685)
!10696 = !DILocalVariable(name: "plane", scope: !10685, file: !3, line: 1080, type: !7)
!10697 = !DILocation(line: 1080, column: 15, scope: !10685)
!10698 = !DILocalVariable(name: "ret", scope: !10685, file: !3, line: 1081, type: !243)
!10699 = !DILocation(line: 1081, column: 6, scope: !10685)
!10700 = !DILocalVariable(name: "reacquired", scope: !10685, file: !3, line: 1082, type: !475)
!10701 = !DILocation(line: 1082, column: 7, scope: !10685)
!10702 = !DILocation(line: 1082, column: 20, scope: !10685)
!10703 = !DILocation(line: 1082, column: 24, scope: !10685)
!10704 = !DILocation(line: 1082, column: 34, scope: !10685)
!10705 = !DILocation(line: 1082, column: 43, scope: !10685)
!10706 = !DILocation(line: 1084, column: 2, scope: !10685)
!10707 = !DILocation(line: 1084, column: 40, scope: !10685)
!10708 = !DILocation(line: 1084, column: 44, scope: !10685)
!10709 = !DILocation(line: 1084, column: 38, scope: !10685)
!10710 = !DILocalVariable(name: "ret", scope: !10711, file: !3, line: 1086, type: !243)
!10711 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 1086, column: 8)
!10712 = !DILocation(line: 1086, column: 8, scope: !10711)
!10713 = !DILocation(line: 1086, column: 8, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10711, file: !3, line: 1086, column: 8)
!10715 = !DILocation(line: 1086, column: 6, scope: !10685)
!10716 = !DILocation(line: 1088, column: 6, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 1088, column: 6)
!10718 = !DILocation(line: 1088, column: 6, scope: !10685)
!10719 = !DILocation(line: 1089, column: 10, scope: !10717)
!10720 = !DILocation(line: 1089, column: 3, scope: !10717)
!10721 = !DILocation(line: 1091, column: 13, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 1091, column: 2)
!10723 = !DILocation(line: 1091, column: 7, scope: !10722)
!10724 = !DILocation(line: 1091, column: 18, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10722, file: !3, line: 1091, column: 2)
!10726 = !DILocation(line: 1091, column: 26, scope: !10725)
!10727 = !DILocation(line: 1091, column: 30, scope: !10725)
!10728 = !DILocation(line: 1091, column: 24, scope: !10725)
!10729 = !DILocation(line: 1091, column: 2, scope: !10722)
!10730 = !DILocation(line: 1093, column: 7, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 1093, column: 7)
!10732 = distinct !DILexicalBlock(scope: !10725, file: !3, line: 1091, column: 51)
!10733 = !DILocation(line: 1093, column: 11, scope: !10731)
!10734 = !DILocation(line: 1093, column: 18, scope: !10731)
!10735 = !DILocation(line: 1093, column: 25, scope: !10731)
!10736 = !DILocation(line: 1093, column: 27, scope: !10731)
!10737 = !DILocation(line: 1093, column: 35, scope: !10731)
!10738 = !DILocation(line: 1094, column: 4, scope: !10731)
!10739 = !DILocation(line: 1094, column: 8, scope: !10731)
!10740 = !DILocation(line: 1094, column: 15, scope: !10731)
!10741 = !DILocation(line: 1094, column: 22, scope: !10731)
!10742 = !DILocation(line: 1094, column: 24, scope: !10731)
!10743 = !DILocation(line: 1094, column: 42, scope: !10731)
!10744 = !DILocation(line: 1094, column: 35, scope: !10731)
!10745 = !DILocation(line: 1094, column: 49, scope: !10731)
!10746 = !DILocation(line: 1094, column: 51, scope: !10731)
!10747 = !DILocation(line: 1094, column: 32, scope: !10731)
!10748 = !DILocation(line: 1095, column: 4, scope: !10731)
!10749 = !DILocation(line: 1095, column: 7, scope: !10731)
!10750 = !DILocation(line: 1095, column: 11, scope: !10731)
!10751 = !DILocation(line: 1095, column: 18, scope: !10731)
!10752 = !DILocation(line: 1095, column: 25, scope: !10731)
!10753 = !DILocation(line: 1095, column: 42, scope: !10731)
!10754 = !DILocation(line: 1095, column: 35, scope: !10731)
!10755 = !DILocation(line: 1095, column: 49, scope: !10731)
!10756 = !DILocation(line: 1095, column: 32, scope: !10731)
!10757 = !DILocation(line: 1093, column: 7, scope: !10732)
!10758 = !DILocation(line: 1096, column: 4, scope: !10731)
!10759 = !DILocation(line: 1098, column: 3, scope: !10732)
!10760 = !DILocation(line: 1098, column: 3, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 1098, column: 3)
!10762 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 1098, column: 3)
!10763 = !DILocation(line: 1098, column: 3, scope: !10762)
!10764 = !DILocation(line: 1102, column: 14, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 1102, column: 7)
!10766 = !DILocation(line: 1102, column: 7, scope: !10765)
!10767 = !DILocation(line: 1102, column: 21, scope: !10765)
!10768 = !DILocation(line: 1102, column: 30, scope: !10765)
!10769 = !DILocation(line: 1102, column: 34, scope: !10765)
!10770 = !DILocation(line: 1102, column: 41, scope: !10765)
!10771 = !DILocation(line: 1102, column: 48, scope: !10765)
!10772 = !DILocation(line: 1102, column: 28, scope: !10765)
!10773 = !DILocation(line: 1102, column: 7, scope: !10732)
!10774 = !DILocation(line: 1103, column: 4, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 1102, column: 60)
!10776 = !DILocation(line: 1103, column: 4, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10778, file: !3, line: 1103, column: 4)
!10778 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 1103, column: 4)
!10779 = !DILocation(line: 1103, column: 4, scope: !10778)
!10780 = !DILocation(line: 1107, column: 8, scope: !10775)
!10781 = !DILocation(line: 1108, column: 4, scope: !10775)
!10782 = !DILocation(line: 1112, column: 7, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 1112, column: 7)
!10784 = !DILocation(line: 1112, column: 11, scope: !10783)
!10785 = !DILocation(line: 1112, column: 18, scope: !10783)
!10786 = !DILocation(line: 1112, column: 25, scope: !10783)
!10787 = !DILocation(line: 1112, column: 7, scope: !10732)
!10788 = !DILocation(line: 1113, column: 9, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 1113, column: 8)
!10790 = distinct !DILexicalBlock(scope: !10783, file: !3, line: 1112, column: 35)
!10791 = !DILocation(line: 1113, column: 8, scope: !10790)
!10792 = !DILocation(line: 1114, column: 16, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 1113, column: 21)
!10794 = !DILocation(line: 1115, column: 5, scope: !10793)
!10795 = !DILocation(line: 1115, column: 9, scope: !10793)
!10796 = !DILocation(line: 1115, column: 26, scope: !10793)
!10797 = !DILocation(line: 1116, column: 5, scope: !10793)
!10798 = !DILocation(line: 1116, column: 5, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 1116, column: 5)
!10800 = distinct !DILexicalBlock(scope: !10793, file: !3, line: 1116, column: 5)
!10801 = !DILocation(line: 1116, column: 5, scope: !10800)
!10802 = !DILocation(line: 1117, column: 4, scope: !10793)
!10803 = !DILocation(line: 1118, column: 4, scope: !10790)
!10804 = !DILocation(line: 1118, column: 4, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 1118, column: 4)
!10806 = distinct !DILexicalBlock(scope: !10790, file: !3, line: 1118, column: 4)
!10807 = !DILocation(line: 1118, column: 4, scope: !10806)
!10808 = !DILocation(line: 1119, column: 3, scope: !10790)
!10809 = !DILocation(line: 1121, column: 3, scope: !10732)
!10810 = !DILocation(line: 1121, column: 7, scope: !10732)
!10811 = !DILocation(line: 1121, column: 14, scope: !10732)
!10812 = !DILocation(line: 1121, column: 21, scope: !10732)
!10813 = !DILocation(line: 1121, column: 30, scope: !10732)
!10814 = !DILocation(line: 1122, column: 3, scope: !10732)
!10815 = !DILocation(line: 1122, column: 7, scope: !10732)
!10816 = !DILocation(line: 1122, column: 14, scope: !10732)
!10817 = !DILocation(line: 1122, column: 21, scope: !10732)
!10818 = !DILocation(line: 1122, column: 31, scope: !10732)
!10819 = !DILocation(line: 1123, column: 3, scope: !10732)
!10820 = !DILocation(line: 1123, column: 7, scope: !10732)
!10821 = !DILocation(line: 1123, column: 14, scope: !10732)
!10822 = !DILocation(line: 1123, column: 21, scope: !10732)
!10823 = !DILocation(line: 1123, column: 28, scope: !10732)
!10824 = !DILocation(line: 1124, column: 3, scope: !10732)
!10825 = !DILocation(line: 1124, column: 7, scope: !10732)
!10826 = !DILocation(line: 1124, column: 14, scope: !10732)
!10827 = !DILocation(line: 1124, column: 21, scope: !10732)
!10828 = !DILocation(line: 1124, column: 23, scope: !10732)
!10829 = !DILocation(line: 1124, column: 31, scope: !10732)
!10830 = !DILocation(line: 1125, column: 3, scope: !10732)
!10831 = !DILocation(line: 1125, column: 7, scope: !10732)
!10832 = !DILocation(line: 1125, column: 14, scope: !10732)
!10833 = !DILocation(line: 1125, column: 21, scope: !10732)
!10834 = !DILocation(line: 1125, column: 33, scope: !10732)
!10835 = !DILocation(line: 1128, column: 14, scope: !10732)
!10836 = !DILocation(line: 1128, column: 12, scope: !10732)
!10837 = !DILocation(line: 1132, column: 14, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 1132, column: 7)
!10839 = !DILocation(line: 1132, column: 7, scope: !10838)
!10840 = !DILocation(line: 1132, column: 7, scope: !10732)
!10841 = !DILocation(line: 1133, column: 4, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10838, file: !3, line: 1132, column: 25)
!10843 = !DILocation(line: 1133, column: 4, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10845, file: !3, line: 1133, column: 4)
!10845 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 1133, column: 4)
!10846 = !DILocation(line: 1133, column: 4, scope: !10845)
!10847 = !DILocation(line: 1135, column: 18, scope: !10842)
!10848 = !DILocation(line: 1135, column: 10, scope: !10842)
!10849 = !DILocation(line: 1135, column: 8, scope: !10842)
!10850 = !DILocation(line: 1136, column: 4, scope: !10842)
!10851 = !DILocation(line: 1138, column: 32, scope: !10732)
!10852 = !DILocation(line: 1138, column: 3, scope: !10732)
!10853 = !DILocation(line: 1138, column: 7, scope: !10732)
!10854 = !DILocation(line: 1138, column: 14, scope: !10732)
!10855 = !DILocation(line: 1138, column: 21, scope: !10732)
!10856 = !DILocation(line: 1138, column: 30, scope: !10732)
!10857 = !DILocation(line: 1139, column: 2, scope: !10732)
!10858 = !DILocation(line: 1091, column: 42, scope: !10725)
!10859 = !DILocation(line: 1091, column: 2, scope: !10725)
!10860 = distinct !{!10860, !10729, !10861}
!10861 = !DILocation(line: 1139, column: 2, scope: !10722)
!10862 = !DILocation(line: 1145, column: 13, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 1145, column: 2)
!10864 = !DILocation(line: 1145, column: 7, scope: !10863)
!10865 = !DILocation(line: 1145, column: 18, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10863, file: !3, line: 1145, column: 2)
!10867 = !DILocation(line: 1145, column: 26, scope: !10866)
!10868 = !DILocation(line: 1145, column: 30, scope: !10866)
!10869 = !DILocation(line: 1145, column: 24, scope: !10866)
!10870 = !DILocation(line: 1145, column: 2, scope: !10863)
!10871 = !DILocation(line: 1146, column: 40, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 1145, column: 51)
!10873 = !DILocation(line: 1146, column: 33, scope: !10872)
!10874 = !DILocation(line: 1146, column: 47, scope: !10872)
!10875 = !DILocation(line: 1146, column: 3, scope: !10872)
!10876 = !DILocation(line: 1146, column: 7, scope: !10872)
!10877 = !DILocation(line: 1146, column: 14, scope: !10872)
!10878 = !DILocation(line: 1146, column: 21, scope: !10872)
!10879 = !DILocation(line: 1146, column: 31, scope: !10872)
!10880 = !DILocation(line: 1147, column: 37, scope: !10872)
!10881 = !DILocation(line: 1147, column: 30, scope: !10872)
!10882 = !DILocation(line: 1147, column: 44, scope: !10872)
!10883 = !DILocation(line: 1147, column: 3, scope: !10872)
!10884 = !DILocation(line: 1147, column: 7, scope: !10872)
!10885 = !DILocation(line: 1147, column: 14, scope: !10872)
!10886 = !DILocation(line: 1147, column: 21, scope: !10872)
!10887 = !DILocation(line: 1147, column: 28, scope: !10872)
!10888 = !DILocation(line: 1148, column: 40, scope: !10872)
!10889 = !DILocation(line: 1148, column: 33, scope: !10872)
!10890 = !DILocation(line: 1148, column: 47, scope: !10872)
!10891 = !DILocation(line: 1148, column: 49, scope: !10872)
!10892 = !DILocation(line: 1148, column: 3, scope: !10872)
!10893 = !DILocation(line: 1148, column: 7, scope: !10872)
!10894 = !DILocation(line: 1148, column: 14, scope: !10872)
!10895 = !DILocation(line: 1148, column: 21, scope: !10872)
!10896 = !DILocation(line: 1148, column: 23, scope: !10872)
!10897 = !DILocation(line: 1148, column: 31, scope: !10872)
!10898 = !DILocation(line: 1149, column: 42, scope: !10872)
!10899 = !DILocation(line: 1149, column: 35, scope: !10872)
!10900 = !DILocation(line: 1149, column: 49, scope: !10872)
!10901 = !DILocation(line: 1149, column: 3, scope: !10872)
!10902 = !DILocation(line: 1149, column: 7, scope: !10872)
!10903 = !DILocation(line: 1149, column: 14, scope: !10872)
!10904 = !DILocation(line: 1149, column: 21, scope: !10872)
!10905 = !DILocation(line: 1149, column: 33, scope: !10872)
!10906 = !DILocation(line: 1150, column: 2, scope: !10872)
!10907 = !DILocation(line: 1145, column: 42, scope: !10866)
!10908 = !DILocation(line: 1145, column: 2, scope: !10866)
!10909 = distinct !{!10909, !10870, !10910}
!10910 = !DILocation(line: 1150, column: 2, scope: !10863)
!10911 = !DILocation(line: 1152, column: 6, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 1152, column: 6)
!10913 = !DILocation(line: 1152, column: 6, scope: !10685)
!10914 = !DILocation(line: 1158, column: 9, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10912, file: !3, line: 1152, column: 18)
!10916 = !DILocation(line: 1158, column: 7, scope: !10915)
!10917 = !DILocation(line: 1159, column: 7, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10915, file: !3, line: 1159, column: 7)
!10919 = !DILocation(line: 1159, column: 7, scope: !10915)
!10920 = !DILocation(line: 1160, column: 4, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10918, file: !3, line: 1159, column: 12)
!10922 = !DILocation(line: 1160, column: 4, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10924, file: !3, line: 1160, column: 4)
!10924 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 1160, column: 4)
!10925 = !DILocation(line: 1160, column: 4, scope: !10924)
!10926 = !DILocation(line: 1161, column: 4, scope: !10921)
!10927 = !DILocation(line: 1163, column: 2, scope: !10915)
!10928 = !DILocation(line: 1165, column: 8, scope: !10685)
!10929 = !DILocation(line: 1165, column: 6, scope: !10685)
!10930 = !DILocation(line: 1166, column: 6, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 1166, column: 6)
!10932 = !DILocation(line: 1166, column: 6, scope: !10685)
!10933 = !DILocation(line: 1167, column: 3, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10931, file: !3, line: 1166, column: 11)
!10935 = !DILocation(line: 1167, column: 3, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10937, file: !3, line: 1167, column: 3)
!10937 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1167, column: 3)
!10938 = !DILocation(line: 1167, column: 3, scope: !10937)
!10939 = !DILocation(line: 1168, column: 3, scope: !10934)
!10940 = !DILocation(line: 1168, column: 3, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10942, file: !3, line: 1168, column: 3)
!10942 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 1168, column: 3)
!10943 = !DILocation(line: 1168, column: 3, scope: !10942)
!10944 = !DILocation(line: 1169, column: 3, scope: !10934)
!10945 = !DILocation(line: 1172, column: 2, scope: !10685)
!10946 = !DILabel(scope: !10685, name: "err", file: !3, line: 1173)
!10947 = !DILocation(line: 1173, column: 1, scope: !10685)
!10948 = !DILocation(line: 1175, column: 13, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 1175, column: 2)
!10950 = !DILocation(line: 1175, column: 7, scope: !10949)
!10951 = !DILocation(line: 1175, column: 18, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10949, file: !3, line: 1175, column: 2)
!10953 = !DILocation(line: 1175, column: 26, scope: !10952)
!10954 = !DILocation(line: 1175, column: 30, scope: !10952)
!10955 = !DILocation(line: 1175, column: 24, scope: !10952)
!10956 = !DILocation(line: 1175, column: 2, scope: !10949)
!10957 = !DILocation(line: 1176, column: 7, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 1176, column: 7)
!10959 = distinct !DILexicalBlock(scope: !10952, file: !3, line: 1175, column: 51)
!10960 = !DILocation(line: 1176, column: 11, scope: !10958)
!10961 = !DILocation(line: 1176, column: 18, scope: !10958)
!10962 = !DILocation(line: 1176, column: 25, scope: !10958)
!10963 = !DILocation(line: 1176, column: 7, scope: !10959)
!10964 = !DILocation(line: 1177, column: 4, scope: !10958)
!10965 = !DILocation(line: 1177, column: 4, scope: !10966)
!10966 = distinct !DILexicalBlock(scope: !10967, file: !3, line: 1177, column: 4)
!10967 = distinct !DILexicalBlock(scope: !10958, file: !3, line: 1177, column: 4)
!10968 = !DILocation(line: 1177, column: 4, scope: !10967)
!10969 = !DILocation(line: 1179, column: 3, scope: !10959)
!10970 = !DILocation(line: 1179, column: 7, scope: !10959)
!10971 = !DILocation(line: 1179, column: 14, scope: !10959)
!10972 = !DILocation(line: 1179, column: 21, scope: !10959)
!10973 = !DILocation(line: 1179, column: 30, scope: !10959)
!10974 = !DILocation(line: 1180, column: 3, scope: !10959)
!10975 = !DILocation(line: 1180, column: 7, scope: !10959)
!10976 = !DILocation(line: 1180, column: 14, scope: !10959)
!10977 = !DILocation(line: 1180, column: 21, scope: !10959)
!10978 = !DILocation(line: 1180, column: 23, scope: !10959)
!10979 = !DILocation(line: 1180, column: 31, scope: !10959)
!10980 = !DILocation(line: 1181, column: 3, scope: !10959)
!10981 = !DILocation(line: 1181, column: 7, scope: !10959)
!10982 = !DILocation(line: 1181, column: 14, scope: !10959)
!10983 = !DILocation(line: 1181, column: 21, scope: !10959)
!10984 = !DILocation(line: 1181, column: 28, scope: !10959)
!10985 = !DILocation(line: 1182, column: 2, scope: !10959)
!10986 = !DILocation(line: 1175, column: 42, scope: !10952)
!10987 = !DILocation(line: 1175, column: 2, scope: !10952)
!10988 = distinct !{!10988, !10956, !10989}
!10989 = !DILocation(line: 1182, column: 2, scope: !10949)
!10990 = !DILocation(line: 1184, column: 9, scope: !10685)
!10991 = !DILocation(line: 1184, column: 2, scope: !10685)
!10992 = !DILocation(line: 1185, column: 1, scope: !10685)
!10993 = distinct !DISubprogram(name: "__prepare_dmabuf", scope: !3, file: !3, line: 1190, type: !3960, scopeLine: 1191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!10994 = !DILocalVariable(name: "vb", arg: 1, scope: !10993, file: !3, line: 1190, type: !181)
!10995 = !DILocation(line: 1190, column: 48, scope: !10993)
!10996 = !DILocalVariable(name: "planes", scope: !10993, file: !3, line: 1192, type: !4535)
!10997 = !DILocation(line: 1192, column: 19, scope: !10993)
!10998 = !DILocalVariable(name: "q", scope: !10993, file: !3, line: 1193, type: !185)
!10999 = !DILocation(line: 1193, column: 20, scope: !10993)
!11000 = !DILocation(line: 1193, column: 24, scope: !10993)
!11001 = !DILocation(line: 1193, column: 28, scope: !10993)
!11002 = !DILocalVariable(name: "mem_priv", scope: !10993, file: !3, line: 1194, type: !180)
!11003 = !DILocation(line: 1194, column: 8, scope: !10993)
!11004 = !DILocalVariable(name: "plane", scope: !10993, file: !3, line: 1195, type: !7)
!11005 = !DILocation(line: 1195, column: 15, scope: !10993)
!11006 = !DILocalVariable(name: "ret", scope: !10993, file: !3, line: 1196, type: !243)
!11007 = !DILocation(line: 1196, column: 6, scope: !10993)
!11008 = !DILocalVariable(name: "reacquired", scope: !10993, file: !3, line: 1197, type: !475)
!11009 = !DILocation(line: 1197, column: 7, scope: !10993)
!11010 = !DILocation(line: 1197, column: 20, scope: !10993)
!11011 = !DILocation(line: 1197, column: 24, scope: !10993)
!11012 = !DILocation(line: 1197, column: 34, scope: !10993)
!11013 = !DILocation(line: 1197, column: 43, scope: !10993)
!11014 = !DILocation(line: 1199, column: 2, scope: !10993)
!11015 = !DILocation(line: 1199, column: 40, scope: !10993)
!11016 = !DILocation(line: 1199, column: 44, scope: !10993)
!11017 = !DILocation(line: 1199, column: 38, scope: !10993)
!11018 = !DILocalVariable(name: "ret", scope: !11019, file: !3, line: 1201, type: !243)
!11019 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1201, column: 8)
!11020 = !DILocation(line: 1201, column: 8, scope: !11019)
!11021 = !DILocation(line: 1201, column: 8, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 1201, column: 8)
!11023 = !DILocation(line: 1201, column: 6, scope: !10993)
!11024 = !DILocation(line: 1203, column: 6, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1203, column: 6)
!11026 = !DILocation(line: 1203, column: 6, scope: !10993)
!11027 = !DILocation(line: 1204, column: 10, scope: !11025)
!11028 = !DILocation(line: 1204, column: 3, scope: !11025)
!11029 = !DILocation(line: 1206, column: 13, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1206, column: 2)
!11031 = !DILocation(line: 1206, column: 7, scope: !11030)
!11032 = !DILocation(line: 1206, column: 18, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11030, file: !3, line: 1206, column: 2)
!11034 = !DILocation(line: 1206, column: 26, scope: !11033)
!11035 = !DILocation(line: 1206, column: 30, scope: !11033)
!11036 = !DILocation(line: 1206, column: 24, scope: !11033)
!11037 = !DILocation(line: 1206, column: 2, scope: !11030)
!11038 = !DILocalVariable(name: "dbuf", scope: !11039, file: !3, line: 1207, type: !3990)
!11039 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 1206, column: 51)
!11040 = !DILocation(line: 1207, column: 19, scope: !11039)
!11041 = !DILocation(line: 1207, column: 45, scope: !11039)
!11042 = !DILocation(line: 1207, column: 38, scope: !11039)
!11043 = !DILocation(line: 1207, column: 52, scope: !11039)
!11044 = !DILocation(line: 1207, column: 54, scope: !11039)
!11045 = !DILocation(line: 1207, column: 26, scope: !11039)
!11046 = !DILocation(line: 1209, column: 22, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 1209, column: 7)
!11048 = !DILocation(line: 1209, column: 7, scope: !11047)
!11049 = !DILocation(line: 1209, column: 7, scope: !11039)
!11050 = !DILocation(line: 1210, column: 4, scope: !11051)
!11051 = distinct !DILexicalBlock(scope: !11047, file: !3, line: 1209, column: 29)
!11052 = !DILocation(line: 1210, column: 4, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11054, file: !3, line: 1210, column: 4)
!11054 = distinct !DILexicalBlock(scope: !11051, file: !3, line: 1210, column: 4)
!11055 = !DILocation(line: 1210, column: 4, scope: !11054)
!11056 = !DILocation(line: 1212, column: 8, scope: !11051)
!11057 = !DILocation(line: 1213, column: 4, scope: !11051)
!11058 = !DILocation(line: 1217, column: 14, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 1217, column: 7)
!11060 = !DILocation(line: 1217, column: 7, scope: !11059)
!11061 = !DILocation(line: 1217, column: 21, scope: !11059)
!11062 = !DILocation(line: 1217, column: 28, scope: !11059)
!11063 = !DILocation(line: 1217, column: 7, scope: !11039)
!11064 = !DILocation(line: 1218, column: 27, scope: !11059)
!11065 = !DILocation(line: 1218, column: 33, scope: !11059)
!11066 = !DILocation(line: 1218, column: 11, scope: !11059)
!11067 = !DILocation(line: 1218, column: 4, scope: !11059)
!11068 = !DILocation(line: 1218, column: 18, scope: !11059)
!11069 = !DILocation(line: 1218, column: 25, scope: !11059)
!11070 = !DILocation(line: 1220, column: 14, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 1220, column: 7)
!11072 = !DILocation(line: 1220, column: 7, scope: !11071)
!11073 = !DILocation(line: 1220, column: 21, scope: !11071)
!11074 = !DILocation(line: 1220, column: 30, scope: !11071)
!11075 = !DILocation(line: 1220, column: 34, scope: !11071)
!11076 = !DILocation(line: 1220, column: 41, scope: !11071)
!11077 = !DILocation(line: 1220, column: 48, scope: !11071)
!11078 = !DILocation(line: 1220, column: 28, scope: !11071)
!11079 = !DILocation(line: 1220, column: 7, scope: !11039)
!11080 = !DILocation(line: 1221, column: 4, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11071, file: !3, line: 1220, column: 60)
!11082 = !DILocation(line: 1221, column: 4, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11084, file: !3, line: 1221, column: 4)
!11084 = distinct !DILexicalBlock(scope: !11081, file: !3, line: 1221, column: 4)
!11085 = !DILocation(line: 1221, column: 4, scope: !11084)
!11086 = !DILocation(line: 1224, column: 16, scope: !11081)
!11087 = !DILocation(line: 1224, column: 4, scope: !11081)
!11088 = !DILocation(line: 1225, column: 8, scope: !11081)
!11089 = !DILocation(line: 1226, column: 4, scope: !11081)
!11090 = !DILocation(line: 1230, column: 7, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 1230, column: 7)
!11092 = !DILocation(line: 1230, column: 15, scope: !11091)
!11093 = !DILocation(line: 1230, column: 19, scope: !11091)
!11094 = !DILocation(line: 1230, column: 26, scope: !11091)
!11095 = !DILocation(line: 1230, column: 33, scope: !11091)
!11096 = !DILocation(line: 1230, column: 12, scope: !11091)
!11097 = !DILocation(line: 1230, column: 38, scope: !11091)
!11098 = !DILocation(line: 1231, column: 4, scope: !11091)
!11099 = !DILocation(line: 1231, column: 8, scope: !11091)
!11100 = !DILocation(line: 1231, column: 15, scope: !11091)
!11101 = !DILocation(line: 1231, column: 22, scope: !11091)
!11102 = !DILocation(line: 1231, column: 39, scope: !11091)
!11103 = !DILocation(line: 1231, column: 32, scope: !11091)
!11104 = !DILocation(line: 1231, column: 46, scope: !11091)
!11105 = !DILocation(line: 1231, column: 29, scope: !11091)
!11106 = !DILocation(line: 1230, column: 7, scope: !11039)
!11107 = !DILocation(line: 1232, column: 16, scope: !11108)
!11108 = distinct !DILexicalBlock(scope: !11091, file: !3, line: 1231, column: 54)
!11109 = !DILocation(line: 1232, column: 4, scope: !11108)
!11110 = !DILocation(line: 1233, column: 4, scope: !11108)
!11111 = !DILocation(line: 1236, column: 3, scope: !11039)
!11112 = !DILocation(line: 1236, column: 3, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 1236, column: 3)
!11114 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 1236, column: 3)
!11115 = !DILocation(line: 1236, column: 3, scope: !11114)
!11116 = !DILocation(line: 1238, column: 8, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 1238, column: 7)
!11118 = !DILocation(line: 1238, column: 7, scope: !11039)
!11119 = !DILocation(line: 1239, column: 15, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 1238, column: 20)
!11121 = !DILocation(line: 1240, column: 4, scope: !11120)
!11122 = !DILocation(line: 1240, column: 8, scope: !11120)
!11123 = !DILocation(line: 1240, column: 25, scope: !11120)
!11124 = !DILocation(line: 1241, column: 4, scope: !11120)
!11125 = !DILocation(line: 1241, column: 4, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 1241, column: 4)
!11127 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 1241, column: 4)
!11128 = !DILocation(line: 1241, column: 4, scope: !11127)
!11129 = !DILocation(line: 1242, column: 3, scope: !11120)
!11130 = !DILocation(line: 1245, column: 26, scope: !11039)
!11131 = !DILocation(line: 1245, column: 31, scope: !11039)
!11132 = !DILocation(line: 1245, column: 35, scope: !11039)
!11133 = !DILocation(line: 1245, column: 42, scope: !11039)
!11134 = !DILocation(line: 1245, column: 3, scope: !11039)
!11135 = !DILocation(line: 1246, column: 3, scope: !11039)
!11136 = !DILocation(line: 1246, column: 7, scope: !11039)
!11137 = !DILocation(line: 1246, column: 14, scope: !11039)
!11138 = !DILocation(line: 1246, column: 21, scope: !11039)
!11139 = !DILocation(line: 1246, column: 31, scope: !11039)
!11140 = !DILocation(line: 1247, column: 3, scope: !11039)
!11141 = !DILocation(line: 1247, column: 7, scope: !11039)
!11142 = !DILocation(line: 1247, column: 14, scope: !11039)
!11143 = !DILocation(line: 1247, column: 21, scope: !11039)
!11144 = !DILocation(line: 1247, column: 28, scope: !11039)
!11145 = !DILocation(line: 1248, column: 3, scope: !11039)
!11146 = !DILocation(line: 1248, column: 7, scope: !11039)
!11147 = !DILocation(line: 1248, column: 14, scope: !11039)
!11148 = !DILocation(line: 1248, column: 21, scope: !11039)
!11149 = !DILocation(line: 1248, column: 23, scope: !11039)
!11150 = !DILocation(line: 1248, column: 26, scope: !11039)
!11151 = !DILocation(line: 1249, column: 3, scope: !11039)
!11152 = !DILocation(line: 1249, column: 7, scope: !11039)
!11153 = !DILocation(line: 1249, column: 14, scope: !11039)
!11154 = !DILocation(line: 1249, column: 21, scope: !11039)
!11155 = !DILocation(line: 1249, column: 33, scope: !11039)
!11156 = !DILocation(line: 1252, column: 14, scope: !11039)
!11157 = !DILocation(line: 1252, column: 12, scope: !11039)
!11158 = !DILocation(line: 1255, column: 14, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 1255, column: 7)
!11160 = !DILocation(line: 1255, column: 7, scope: !11159)
!11161 = !DILocation(line: 1255, column: 7, scope: !11039)
!11162 = !DILocation(line: 1256, column: 4, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 1255, column: 25)
!11164 = !DILocation(line: 1256, column: 4, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11166, file: !3, line: 1256, column: 4)
!11166 = distinct !DILexicalBlock(scope: !11163, file: !3, line: 1256, column: 4)
!11167 = !DILocation(line: 1256, column: 4, scope: !11166)
!11168 = !DILocation(line: 1257, column: 18, scope: !11163)
!11169 = !DILocation(line: 1257, column: 10, scope: !11163)
!11170 = !DILocation(line: 1257, column: 8, scope: !11163)
!11171 = !DILocation(line: 1258, column: 16, scope: !11163)
!11172 = !DILocation(line: 1258, column: 4, scope: !11163)
!11173 = !DILocation(line: 1259, column: 4, scope: !11163)
!11174 = !DILocation(line: 1262, column: 28, scope: !11039)
!11175 = !DILocation(line: 1262, column: 3, scope: !11039)
!11176 = !DILocation(line: 1262, column: 7, scope: !11039)
!11177 = !DILocation(line: 1262, column: 14, scope: !11039)
!11178 = !DILocation(line: 1262, column: 21, scope: !11039)
!11179 = !DILocation(line: 1262, column: 26, scope: !11039)
!11180 = !DILocation(line: 1263, column: 32, scope: !11039)
!11181 = !DILocation(line: 1263, column: 3, scope: !11039)
!11182 = !DILocation(line: 1263, column: 7, scope: !11039)
!11183 = !DILocation(line: 1263, column: 14, scope: !11039)
!11184 = !DILocation(line: 1263, column: 21, scope: !11039)
!11185 = !DILocation(line: 1263, column: 30, scope: !11039)
!11186 = !DILocation(line: 1264, column: 2, scope: !11039)
!11187 = !DILocation(line: 1206, column: 42, scope: !11033)
!11188 = !DILocation(line: 1206, column: 2, scope: !11033)
!11189 = distinct !{!11189, !11037, !11190}
!11190 = !DILocation(line: 1264, column: 2, scope: !11030)
!11191 = !DILocation(line: 1271, column: 13, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1271, column: 2)
!11193 = !DILocation(line: 1271, column: 7, scope: !11192)
!11194 = !DILocation(line: 1271, column: 18, scope: !11195)
!11195 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 1271, column: 2)
!11196 = !DILocation(line: 1271, column: 26, scope: !11195)
!11197 = !DILocation(line: 1271, column: 30, scope: !11195)
!11198 = !DILocation(line: 1271, column: 24, scope: !11195)
!11199 = !DILocation(line: 1271, column: 2, scope: !11192)
!11200 = !DILocation(line: 1272, column: 7, scope: !11201)
!11201 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 1272, column: 7)
!11202 = distinct !DILexicalBlock(scope: !11195, file: !3, line: 1271, column: 51)
!11203 = !DILocation(line: 1272, column: 11, scope: !11201)
!11204 = !DILocation(line: 1272, column: 18, scope: !11201)
!11205 = !DILocation(line: 1272, column: 25, scope: !11201)
!11206 = !DILocation(line: 1272, column: 7, scope: !11202)
!11207 = !DILocation(line: 1273, column: 4, scope: !11201)
!11208 = !DILocation(line: 1275, column: 9, scope: !11202)
!11209 = !DILocation(line: 1275, column: 7, scope: !11202)
!11210 = !DILocation(line: 1276, column: 7, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 1276, column: 7)
!11212 = !DILocation(line: 1276, column: 7, scope: !11202)
!11213 = !DILocation(line: 1277, column: 4, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 1276, column: 12)
!11215 = !DILocation(line: 1277, column: 4, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11217, file: !3, line: 1277, column: 4)
!11217 = distinct !DILexicalBlock(scope: !11214, file: !3, line: 1277, column: 4)
!11218 = !DILocation(line: 1277, column: 4, scope: !11217)
!11219 = !DILocation(line: 1279, column: 4, scope: !11214)
!11220 = !DILocation(line: 1281, column: 3, scope: !11202)
!11221 = !DILocation(line: 1281, column: 7, scope: !11202)
!11222 = !DILocation(line: 1281, column: 14, scope: !11202)
!11223 = !DILocation(line: 1281, column: 21, scope: !11202)
!11224 = !DILocation(line: 1281, column: 33, scope: !11202)
!11225 = !DILocation(line: 1282, column: 2, scope: !11202)
!11226 = !DILocation(line: 1271, column: 42, scope: !11195)
!11227 = !DILocation(line: 1271, column: 2, scope: !11195)
!11228 = distinct !{!11228, !11199, !11229}
!11229 = !DILocation(line: 1282, column: 2, scope: !11192)
!11230 = !DILocation(line: 1288, column: 13, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1288, column: 2)
!11232 = !DILocation(line: 1288, column: 7, scope: !11231)
!11233 = !DILocation(line: 1288, column: 18, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11231, file: !3, line: 1288, column: 2)
!11235 = !DILocation(line: 1288, column: 26, scope: !11234)
!11236 = !DILocation(line: 1288, column: 30, scope: !11234)
!11237 = !DILocation(line: 1288, column: 24, scope: !11234)
!11238 = !DILocation(line: 1288, column: 2, scope: !11231)
!11239 = !DILocation(line: 1289, column: 40, scope: !11240)
!11240 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 1288, column: 51)
!11241 = !DILocation(line: 1289, column: 33, scope: !11240)
!11242 = !DILocation(line: 1289, column: 47, scope: !11240)
!11243 = !DILocation(line: 1289, column: 3, scope: !11240)
!11244 = !DILocation(line: 1289, column: 7, scope: !11240)
!11245 = !DILocation(line: 1289, column: 14, scope: !11240)
!11246 = !DILocation(line: 1289, column: 21, scope: !11240)
!11247 = !DILocation(line: 1289, column: 31, scope: !11240)
!11248 = !DILocation(line: 1290, column: 37, scope: !11240)
!11249 = !DILocation(line: 1290, column: 30, scope: !11240)
!11250 = !DILocation(line: 1290, column: 44, scope: !11240)
!11251 = !DILocation(line: 1290, column: 3, scope: !11240)
!11252 = !DILocation(line: 1290, column: 7, scope: !11240)
!11253 = !DILocation(line: 1290, column: 14, scope: !11240)
!11254 = !DILocation(line: 1290, column: 21, scope: !11240)
!11255 = !DILocation(line: 1290, column: 28, scope: !11240)
!11256 = !DILocation(line: 1291, column: 35, scope: !11240)
!11257 = !DILocation(line: 1291, column: 28, scope: !11240)
!11258 = !DILocation(line: 1291, column: 42, scope: !11240)
!11259 = !DILocation(line: 1291, column: 44, scope: !11240)
!11260 = !DILocation(line: 1291, column: 3, scope: !11240)
!11261 = !DILocation(line: 1291, column: 7, scope: !11240)
!11262 = !DILocation(line: 1291, column: 14, scope: !11240)
!11263 = !DILocation(line: 1291, column: 21, scope: !11240)
!11264 = !DILocation(line: 1291, column: 23, scope: !11240)
!11265 = !DILocation(line: 1291, column: 26, scope: !11240)
!11266 = !DILocation(line: 1292, column: 42, scope: !11240)
!11267 = !DILocation(line: 1292, column: 35, scope: !11240)
!11268 = !DILocation(line: 1292, column: 49, scope: !11240)
!11269 = !DILocation(line: 1292, column: 3, scope: !11240)
!11270 = !DILocation(line: 1292, column: 7, scope: !11240)
!11271 = !DILocation(line: 1292, column: 14, scope: !11240)
!11272 = !DILocation(line: 1292, column: 21, scope: !11240)
!11273 = !DILocation(line: 1292, column: 33, scope: !11240)
!11274 = !DILocation(line: 1293, column: 2, scope: !11240)
!11275 = !DILocation(line: 1288, column: 42, scope: !11234)
!11276 = !DILocation(line: 1288, column: 2, scope: !11234)
!11277 = distinct !{!11277, !11238, !11278}
!11278 = !DILocation(line: 1293, column: 2, scope: !11231)
!11279 = !DILocation(line: 1295, column: 6, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1295, column: 6)
!11281 = !DILocation(line: 1295, column: 6, scope: !10993)
!11282 = !DILocation(line: 1300, column: 9, scope: !11283)
!11283 = distinct !DILexicalBlock(scope: !11280, file: !3, line: 1295, column: 18)
!11284 = !DILocation(line: 1300, column: 7, scope: !11283)
!11285 = !DILocation(line: 1301, column: 7, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11283, file: !3, line: 1301, column: 7)
!11287 = !DILocation(line: 1301, column: 7, scope: !11283)
!11288 = !DILocation(line: 1302, column: 4, scope: !11289)
!11289 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 1301, column: 12)
!11290 = !DILocation(line: 1302, column: 4, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 1302, column: 4)
!11292 = distinct !DILexicalBlock(scope: !11289, file: !3, line: 1302, column: 4)
!11293 = !DILocation(line: 1302, column: 4, scope: !11292)
!11294 = !DILocation(line: 1303, column: 4, scope: !11289)
!11295 = !DILocation(line: 1305, column: 2, scope: !11283)
!11296 = !DILocation(line: 1307, column: 8, scope: !10993)
!11297 = !DILocation(line: 1307, column: 6, scope: !10993)
!11298 = !DILocation(line: 1308, column: 6, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 1308, column: 6)
!11300 = !DILocation(line: 1308, column: 6, scope: !10993)
!11301 = !DILocation(line: 1309, column: 3, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11299, file: !3, line: 1308, column: 11)
!11303 = !DILocation(line: 1309, column: 3, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 1309, column: 3)
!11305 = distinct !DILexicalBlock(scope: !11302, file: !3, line: 1309, column: 3)
!11306 = !DILocation(line: 1309, column: 3, scope: !11305)
!11307 = !DILocation(line: 1310, column: 3, scope: !11302)
!11308 = !DILocation(line: 1310, column: 3, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11310, file: !3, line: 1310, column: 3)
!11310 = distinct !DILexicalBlock(scope: !11302, file: !3, line: 1310, column: 3)
!11311 = !DILocation(line: 1310, column: 3, scope: !11310)
!11312 = !DILocation(line: 1311, column: 3, scope: !11302)
!11313 = !DILocation(line: 1314, column: 2, scope: !10993)
!11314 = !DILabel(scope: !10993, name: "err", file: !3, line: 1315)
!11315 = !DILocation(line: 1315, column: 1, scope: !10993)
!11316 = !DILocation(line: 1317, column: 23, scope: !10993)
!11317 = !DILocation(line: 1317, column: 2, scope: !10993)
!11318 = !DILocation(line: 1319, column: 9, scope: !10993)
!11319 = !DILocation(line: 1319, column: 2, scope: !10993)
!11320 = !DILocation(line: 1320, column: 1, scope: !10993)
!11321 = distinct !DISubprogram(name: "__vb2_buf_mem_prepare", scope: !3, file: !3, line: 322, type: !3966, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11322 = !DILocalVariable(name: "vb", arg: 1, scope: !11321, file: !3, line: 322, type: !181)
!11323 = !DILocation(line: 322, column: 54, scope: !11321)
!11324 = !DILocalVariable(name: "plane", scope: !11321, file: !3, line: 324, type: !7)
!11325 = !DILocation(line: 324, column: 15, scope: !11321)
!11326 = !DILocation(line: 326, column: 6, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11321, file: !3, line: 326, column: 6)
!11328 = !DILocation(line: 326, column: 10, scope: !11327)
!11329 = !DILocation(line: 326, column: 6, scope: !11321)
!11330 = !DILocation(line: 327, column: 3, scope: !11327)
!11331 = !DILocation(line: 329, column: 6, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11321, file: !3, line: 329, column: 6)
!11333 = !DILocation(line: 329, column: 10, scope: !11332)
!11334 = !DILocation(line: 329, column: 6, scope: !11321)
!11335 = !DILocation(line: 330, column: 14, scope: !11336)
!11336 = distinct !DILexicalBlock(scope: !11337, file: !3, line: 330, column: 3)
!11337 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 329, column: 38)
!11338 = !DILocation(line: 330, column: 8, scope: !11336)
!11339 = !DILocation(line: 330, column: 19, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 330, column: 3)
!11341 = !DILocation(line: 330, column: 27, scope: !11340)
!11342 = !DILocation(line: 330, column: 31, scope: !11340)
!11343 = !DILocation(line: 330, column: 25, scope: !11340)
!11344 = !DILocation(line: 330, column: 3, scope: !11336)
!11345 = !DILocation(line: 331, column: 4, scope: !11340)
!11346 = !DILocation(line: 331, column: 4, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11348, file: !3, line: 331, column: 4)
!11348 = distinct !DILexicalBlock(scope: !11340, file: !3, line: 331, column: 4)
!11349 = !DILocation(line: 331, column: 4, scope: !11348)
!11350 = !DILocation(line: 330, column: 43, scope: !11340)
!11351 = !DILocation(line: 330, column: 3, scope: !11340)
!11352 = distinct !{!11352, !11344, !11353}
!11353 = !DILocation(line: 331, column: 4, scope: !11336)
!11354 = !DILocation(line: 333, column: 2, scope: !11337)
!11355 = !DILocation(line: 334, column: 2, scope: !11321)
!11356 = !DILocation(line: 334, column: 6, scope: !11321)
!11357 = !DILocation(line: 334, column: 13, scope: !11321)
!11358 = !DILocation(line: 335, column: 1, scope: !11321)
!11359 = distinct !DISubprogram(name: "kref_get", scope: !3375, file: !3375, line: 43, type: !11360, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11360 = !DISubroutineType(types: !11361)
!11361 = !{null, !11362}
!11362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3374, size: 64)
!11363 = !DILocalVariable(name: "kref", arg: 1, scope: !11359, file: !3375, line: 43, type: !11362)
!11364 = !DILocation(line: 43, column: 42, scope: !11359)
!11365 = !DILocation(line: 45, column: 16, scope: !11359)
!11366 = !DILocation(line: 45, column: 22, scope: !11359)
!11367 = !DILocation(line: 45, column: 2, scope: !11359)
!11368 = !DILocation(line: 46, column: 1, scope: !11359)
!11369 = distinct !DISubprogram(name: "refcount_inc", scope: !165, file: !165, line: 265, type: !11370, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11370 = !DISubroutineType(types: !11371)
!11371 = !{null, !11372}
!11372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!11373 = !DILocalVariable(name: "r", arg: 1, scope: !11369, file: !165, line: 265, type: !11372)
!11374 = !DILocation(line: 265, column: 45, scope: !11369)
!11375 = !DILocation(line: 267, column: 17, scope: !11369)
!11376 = !DILocation(line: 267, column: 2, scope: !11369)
!11377 = !DILocation(line: 268, column: 1, scope: !11369)
!11378 = distinct !DISubprogram(name: "__refcount_inc", scope: !165, file: !165, line: 248, type: !11379, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11379 = !DISubroutineType(types: !11380)
!11380 = !{null, !11372, !693}
!11381 = !DILocalVariable(name: "r", arg: 1, scope: !11378, file: !165, line: 248, type: !11372)
!11382 = !DILocation(line: 248, column: 47, scope: !11378)
!11383 = !DILocalVariable(name: "oldp", arg: 2, scope: !11378, file: !165, line: 248, type: !693)
!11384 = !DILocation(line: 248, column: 55, scope: !11378)
!11385 = !DILocation(line: 250, column: 20, scope: !11378)
!11386 = !DILocation(line: 250, column: 23, scope: !11378)
!11387 = !DILocation(line: 250, column: 2, scope: !11378)
!11388 = !DILocation(line: 251, column: 1, scope: !11378)
!11389 = distinct !DISubprogram(name: "__refcount_add", scope: !165, file: !165, line: 191, type: !11390, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11390 = !DISubroutineType(types: !11391)
!11391 = !{null, !243, !11372, !693}
!11392 = !DILocalVariable(name: "i", arg: 1, scope: !11393, file: !5222, line: 182, type: !243)
!11393 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !5222, file: !5222, line: 182, type: !11394, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11394 = !DISubroutineType(types: !11395)
!11395 = !{!243, !243, !5225}
!11396 = !DILocation(line: 182, column: 54, scope: !11393, inlinedAt: !11397)
!11397 = distinct !DILocation(line: 143, column: 9, scope: !11398, inlinedAt: !11399)
!11398 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !5229, file: !5229, line: 140, type: !11394, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11399 = distinct !DILocation(line: 193, column: 12, scope: !11389)
!11400 = !DILocalVariable(name: "v", arg: 2, scope: !11393, file: !5222, line: 182, type: !5225)
!11401 = !DILocation(line: 182, column: 67, scope: !11393, inlinedAt: !11397)
!11402 = !DILocalVariable(name: "__ret", scope: !11403, file: !5222, line: 184, type: !243)
!11403 = distinct !DILexicalBlock(scope: !11393, file: !5222, line: 184, column: 9)
!11404 = !DILocation(line: 184, column: 9, scope: !11403, inlinedAt: !11397)
!11405 = !DILocation(line: 99, column: 79, scope: !6079, inlinedAt: !11406)
!11406 = distinct !DILocation(line: 142, column: 2, scope: !11398, inlinedAt: !11399)
!11407 = !DILocation(line: 99, column: 89, scope: !6079, inlinedAt: !11406)
!11408 = !DILocalVariable(name: "i", arg: 1, scope: !11398, file: !5229, line: 140, type: !243)
!11409 = !DILocation(line: 140, column: 30, scope: !11398, inlinedAt: !11399)
!11410 = !DILocalVariable(name: "v", arg: 2, scope: !11398, file: !5229, line: 140, type: !5225)
!11411 = !DILocation(line: 140, column: 43, scope: !11398, inlinedAt: !11399)
!11412 = !DILocalVariable(name: "i", arg: 1, scope: !11389, file: !165, line: 191, type: !243)
!11413 = !DILocation(line: 191, column: 39, scope: !11389)
!11414 = !DILocalVariable(name: "r", arg: 2, scope: !11389, file: !165, line: 191, type: !11372)
!11415 = !DILocation(line: 191, column: 54, scope: !11389)
!11416 = !DILocalVariable(name: "oldp", arg: 3, scope: !11389, file: !165, line: 191, type: !693)
!11417 = !DILocation(line: 191, column: 62, scope: !11389)
!11418 = !DILocalVariable(name: "old", scope: !11389, file: !165, line: 193, type: !243)
!11419 = !DILocation(line: 193, column: 6, scope: !11389)
!11420 = !DILocation(line: 193, column: 37, scope: !11389)
!11421 = !DILocation(line: 193, column: 41, scope: !11389)
!11422 = !DILocation(line: 193, column: 44, scope: !11389)
!11423 = !DILocation(line: 142, column: 31, scope: !11398, inlinedAt: !11399)
!11424 = !DILocation(line: 101, column: 20, scope: !6079, inlinedAt: !11406)
!11425 = !DILocation(line: 101, column: 23, scope: !6079, inlinedAt: !11406)
!11426 = !DILocation(line: 101, column: 2, scope: !6079, inlinedAt: !11406)
!11427 = !DILocation(line: 102, column: 2, scope: !6079, inlinedAt: !11406)
!11428 = !DILocation(line: 143, column: 39, scope: !11398, inlinedAt: !11399)
!11429 = !DILocation(line: 143, column: 42, scope: !11398, inlinedAt: !11399)
!11430 = !{i32 -2146538829}
!11431 = !DILocation(line: 195, column: 6, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11389, file: !165, line: 195, column: 6)
!11433 = !DILocation(line: 195, column: 6, scope: !11389)
!11434 = !DILocation(line: 196, column: 11, scope: !11432)
!11435 = !DILocation(line: 196, column: 4, scope: !11432)
!11436 = !DILocation(line: 196, column: 9, scope: !11432)
!11437 = !DILocation(line: 196, column: 3, scope: !11432)
!11438 = !DILocation(line: 198, column: 6, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11389, file: !165, line: 198, column: 6)
!11440 = !DILocation(line: 198, column: 6, scope: !11389)
!11441 = !DILocation(line: 199, column: 26, scope: !11439)
!11442 = !DILocation(line: 199, column: 3, scope: !11439)
!11443 = !DILocation(line: 200, column: 11, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11439, file: !165, line: 200, column: 11)
!11445 = !DILocation(line: 200, column: 11, scope: !11439)
!11446 = !DILocation(line: 201, column: 26, scope: !11444)
!11447 = !DILocation(line: 201, column: 3, scope: !11444)
!11448 = !DILocation(line: 202, column: 1, scope: !11389)
!11449 = distinct !DISubprogram(name: "trace_vb2_buf_queue", scope: !6320, file: !6320, line: 51, type: !6321, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11450 = !DILocalVariable(name: "q", arg: 1, scope: !11449, file: !6320, line: 51, type: !185)
!11451 = !DILocation(line: 51, column: 1, scope: !11449)
!11452 = !DILocalVariable(name: "vb", arg: 2, scope: !11449, file: !6320, line: 51, type: !181)
!11453 = distinct !DISubprogram(name: "kasan_check_read", scope: !10473, file: !10473, line: 34, type: !10474, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11454 = !DILocalVariable(name: "p", arg: 1, scope: !11453, file: !10473, line: 34, type: !5238)
!11455 = !DILocation(line: 34, column: 58, scope: !11453)
!11456 = !DILocalVariable(name: "size", arg: 2, scope: !11453, file: !10473, line: 34, type: !7)
!11457 = !DILocation(line: 34, column: 74, scope: !11453)
!11458 = !DILocation(line: 36, column: 2, scope: !11453)
!11459 = distinct !DISubprogram(name: "__vb2_wait_for_done_vb", scope: !3, file: !3, line: 1721, type: !8681, scopeLine: 1722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11460 = !DILocalVariable(name: "q", arg: 1, scope: !11459, file: !3, line: 1721, type: !185)
!11461 = !DILocation(line: 1721, column: 53, scope: !11459)
!11462 = !DILocalVariable(name: "nonblocking", arg: 2, scope: !11459, file: !3, line: 1721, type: !243)
!11463 = !DILocation(line: 1721, column: 60, scope: !11459)
!11464 = !DILocation(line: 1732, column: 2, scope: !11459)
!11465 = !DILocalVariable(name: "ret", scope: !11466, file: !3, line: 1733, type: !243)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !3, line: 1732, column: 11)
!11467 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 1732, column: 2)
!11468 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 1732, column: 2)
!11469 = !DILocation(line: 1733, column: 7, scope: !11466)
!11470 = !DILocation(line: 1735, column: 7, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1735, column: 7)
!11472 = !DILocation(line: 1735, column: 10, scope: !11471)
!11473 = !DILocation(line: 1735, column: 7, scope: !11466)
!11474 = !DILocation(line: 1736, column: 4, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 1735, column: 28)
!11476 = !DILocation(line: 1736, column: 4, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11478, file: !3, line: 1736, column: 4)
!11478 = distinct !DILexicalBlock(scope: !11475, file: !3, line: 1736, column: 4)
!11479 = !DILocation(line: 1736, column: 4, scope: !11478)
!11480 = !DILocation(line: 1737, column: 4, scope: !11475)
!11481 = !DILocation(line: 1740, column: 8, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1740, column: 7)
!11483 = !DILocation(line: 1740, column: 11, scope: !11482)
!11484 = !DILocation(line: 1740, column: 7, scope: !11466)
!11485 = !DILocation(line: 1741, column: 4, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11482, file: !3, line: 1740, column: 22)
!11487 = !DILocation(line: 1741, column: 4, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11489, file: !3, line: 1741, column: 4)
!11489 = distinct !DILexicalBlock(scope: !11486, file: !3, line: 1741, column: 4)
!11490 = !DILocation(line: 1741, column: 4, scope: !11489)
!11491 = !DILocation(line: 1742, column: 4, scope: !11486)
!11492 = !DILocation(line: 1745, column: 7, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1745, column: 7)
!11494 = !DILocation(line: 1745, column: 10, scope: !11493)
!11495 = !DILocation(line: 1745, column: 7, scope: !11466)
!11496 = !DILocation(line: 1746, column: 4, scope: !11497)
!11497 = distinct !DILexicalBlock(scope: !11493, file: !3, line: 1745, column: 17)
!11498 = !DILocation(line: 1746, column: 4, scope: !11499)
!11499 = distinct !DILexicalBlock(scope: !11500, file: !3, line: 1746, column: 4)
!11500 = distinct !DILexicalBlock(scope: !11497, file: !3, line: 1746, column: 4)
!11501 = !DILocation(line: 1746, column: 4, scope: !11500)
!11502 = !DILocation(line: 1747, column: 4, scope: !11497)
!11503 = !DILocation(line: 1750, column: 7, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1750, column: 7)
!11505 = !DILocation(line: 1750, column: 10, scope: !11504)
!11506 = !DILocation(line: 1750, column: 7, scope: !11466)
!11507 = !DILocation(line: 1751, column: 4, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 1750, column: 32)
!11509 = !DILocation(line: 1751, column: 4, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 1751, column: 4)
!11511 = distinct !DILexicalBlock(scope: !11508, file: !3, line: 1751, column: 4)
!11512 = !DILocation(line: 1751, column: 4, scope: !11511)
!11513 = !DILocation(line: 1752, column: 4, scope: !11508)
!11514 = !DILocation(line: 1755, column: 20, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1755, column: 7)
!11516 = !DILocation(line: 1755, column: 23, scope: !11515)
!11517 = !DILocation(line: 1755, column: 8, scope: !11515)
!11518 = !DILocation(line: 1755, column: 7, scope: !11466)
!11519 = !DILocation(line: 1759, column: 4, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11515, file: !3, line: 1755, column: 35)
!11521 = !DILocation(line: 1762, column: 7, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1762, column: 7)
!11523 = !DILocation(line: 1762, column: 7, scope: !11466)
!11524 = !DILocation(line: 1763, column: 4, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11522, file: !3, line: 1762, column: 20)
!11526 = !DILocation(line: 1763, column: 4, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 1763, column: 4)
!11528 = distinct !DILexicalBlock(scope: !11525, file: !3, line: 1763, column: 4)
!11529 = !DILocation(line: 1763, column: 4, scope: !11528)
!11530 = !DILocation(line: 1764, column: 4, scope: !11525)
!11531 = !DILocation(line: 1767, column: 3, scope: !11466)
!11532 = !DILocation(line: 1767, column: 6, scope: !11466)
!11533 = !DILocation(line: 1767, column: 23, scope: !11466)
!11534 = !DILocation(line: 1773, column: 3, scope: !11466)
!11535 = !DILocation(line: 1773, column: 3, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 1773, column: 3)
!11537 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1773, column: 3)
!11538 = !DILocation(line: 1773, column: 3, scope: !11537)
!11539 = !DILocation(line: 1778, column: 3, scope: !11466)
!11540 = !DILocation(line: 1778, column: 3, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11542, file: !3, line: 1778, column: 3)
!11542 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1778, column: 3)
!11543 = !DILocation(line: 1778, column: 3, scope: !11542)
!11544 = !DILocalVariable(name: "__ret", scope: !11545, file: !3, line: 1779, type: !243)
!11545 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1779, column: 9)
!11546 = !DILocation(line: 1779, column: 9, scope: !11545)
!11547 = !DILocation(line: 1779, column: 9, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 1779, column: 9)
!11549 = !DILocation(line: 1779, column: 9, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11548, file: !3, line: 1779, column: 9)
!11551 = !DILocation(line: 1779, column: 9, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 1779, column: 9)
!11553 = !DILocalVariable(name: "__wq_entry", scope: !11554, file: !3, line: 1779, type: !7357)
!11554 = distinct !DILexicalBlock(scope: !11552, file: !3, line: 1779, column: 9)
!11555 = !DILocation(line: 1779, column: 9, scope: !11554)
!11556 = !DILocalVariable(name: "__ret", scope: !11554, file: !3, line: 1779, type: !294)
!11557 = !DILocalVariable(name: "__int", scope: !11558, file: !3, line: 1779, type: !294)
!11558 = distinct !DILexicalBlock(scope: !11559, file: !3, line: 1779, column: 9)
!11559 = distinct !DILexicalBlock(scope: !11560, file: !3, line: 1779, column: 9)
!11560 = distinct !DILexicalBlock(scope: !11554, file: !3, line: 1779, column: 9)
!11561 = !DILocation(line: 1779, column: 9, scope: !11558)
!11562 = !DILocation(line: 1779, column: 9, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11558, file: !3, line: 1779, column: 9)
!11564 = !DILocation(line: 1779, column: 9, scope: !11565)
!11565 = distinct !DILexicalBlock(scope: !11558, file: !3, line: 1779, column: 9)
!11566 = !DILocation(line: 1779, column: 9, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11565, file: !3, line: 1779, column: 9)
!11568 = !DILocation(line: 1779, column: 9, scope: !11559)
!11569 = distinct !{!11569, !11570, !11570}
!11570 = !DILocation(line: 1779, column: 9, scope: !11560)
!11571 = !DILabel(scope: !11554, name: "__out", file: !3, line: 1779)
!11572 = !DILocation(line: 1779, column: 7, scope: !11466)
!11573 = !DILocation(line: 1787, column: 3, scope: !11466)
!11574 = !DILocation(line: 1787, column: 3, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11576, file: !3, line: 1787, column: 3)
!11576 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1787, column: 3)
!11577 = !DILocation(line: 1787, column: 3, scope: !11576)
!11578 = !DILocation(line: 1788, column: 3, scope: !11466)
!11579 = !DILocation(line: 1788, column: 6, scope: !11466)
!11580 = !DILocation(line: 1788, column: 23, scope: !11466)
!11581 = !DILocation(line: 1789, column: 7, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1789, column: 7)
!11583 = !DILocation(line: 1789, column: 7, scope: !11466)
!11584 = !DILocation(line: 1790, column: 4, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 1789, column: 12)
!11586 = !DILocation(line: 1790, column: 4, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11588, file: !3, line: 1790, column: 4)
!11588 = distinct !DILexicalBlock(scope: !11585, file: !3, line: 1790, column: 4)
!11589 = !DILocation(line: 1790, column: 4, scope: !11588)
!11590 = !DILocation(line: 1791, column: 11, scope: !11585)
!11591 = !DILocation(line: 1791, column: 4, scope: !11585)
!11592 = !DILocation(line: 1732, column: 2, scope: !11467)
!11593 = distinct !{!11593, !11594, !11595}
!11594 = !DILocation(line: 1732, column: 2, scope: !11468)
!11595 = !DILocation(line: 1793, column: 2, scope: !11468)
!11596 = !DILocation(line: 1794, column: 2, scope: !11459)
!11597 = !DILocation(line: 1795, column: 1, scope: !11459)
!11598 = distinct !DISubprogram(name: "__list_del_entry", scope: !6306, file: !6306, line: 130, type: !7606, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11599 = !DILocalVariable(name: "entry", arg: 1, scope: !11598, file: !6306, line: 130, type: !207)
!11600 = !DILocation(line: 130, column: 55, scope: !11598)
!11601 = !DILocation(line: 132, column: 30, scope: !11602)
!11602 = distinct !DILexicalBlock(scope: !11598, file: !6306, line: 132, column: 6)
!11603 = !DILocation(line: 132, column: 7, scope: !11602)
!11604 = !DILocation(line: 132, column: 6, scope: !11598)
!11605 = !DILocation(line: 133, column: 3, scope: !11602)
!11606 = !DILocation(line: 135, column: 13, scope: !11598)
!11607 = !DILocation(line: 135, column: 20, scope: !11598)
!11608 = !DILocation(line: 135, column: 26, scope: !11598)
!11609 = !DILocation(line: 135, column: 33, scope: !11598)
!11610 = !DILocation(line: 135, column: 2, scope: !11598)
!11611 = !DILocation(line: 136, column: 1, scope: !11598)
!11612 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6306, file: !6306, line: 51, type: !11613, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11613 = !DISubroutineType(types: !11614)
!11614 = !{!475, !207}
!11615 = !DILocalVariable(name: "entry", arg: 1, scope: !11612, file: !6306, line: 51, type: !207)
!11616 = !DILocation(line: 51, column: 61, scope: !11612)
!11617 = !DILocation(line: 53, column: 2, scope: !11612)
!11618 = distinct !DISubprogram(name: "__list_del", scope: !6306, file: !6306, line: 110, type: !6307, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11619 = !DILocalVariable(name: "prev", arg: 1, scope: !11618, file: !6306, line: 110, type: !207)
!11620 = !DILocation(line: 110, column: 50, scope: !11618)
!11621 = !DILocalVariable(name: "next", arg: 2, scope: !11618, file: !6306, line: 110, type: !207)
!11622 = !DILocation(line: 110, column: 75, scope: !11618)
!11623 = !DILocation(line: 112, column: 15, scope: !11618)
!11624 = !DILocation(line: 112, column: 2, scope: !11618)
!11625 = !DILocation(line: 112, column: 8, scope: !11618)
!11626 = !DILocation(line: 112, column: 13, scope: !11618)
!11627 = !DILocation(line: 113, column: 2, scope: !11618)
!11628 = !DILocation(line: 113, column: 2, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11618, file: !6306, line: 113, column: 2)
!11630 = !DILocation(line: 113, column: 2, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11629, file: !6306, line: 113, column: 2)
!11632 = !DILocation(line: 113, column: 2, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11629, file: !6306, line: 113, column: 2)
!11634 = !DILocation(line: 114, column: 1, scope: !11618)
!11635 = distinct !DISubprogram(name: "vb2_plane_size", scope: !130, file: !130, line: 1173, type: !11636, scopeLine: 1174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11636 = !DISubroutineType(types: !11637)
!11637 = !{!309, !181, !7}
!11638 = !DILocalVariable(name: "vb", arg: 1, scope: !11635, file: !130, line: 1173, type: !181)
!11639 = !DILocation(line: 1173, column: 35, scope: !11635)
!11640 = !DILocalVariable(name: "plane_no", arg: 2, scope: !11635, file: !130, line: 1173, type: !7)
!11641 = !DILocation(line: 1173, column: 52, scope: !11635)
!11642 = !DILocation(line: 1175, column: 6, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11635, file: !130, line: 1175, column: 6)
!11644 = !DILocation(line: 1175, column: 17, scope: !11643)
!11645 = !DILocation(line: 1175, column: 21, scope: !11643)
!11646 = !DILocation(line: 1175, column: 15, scope: !11643)
!11647 = !DILocation(line: 1175, column: 6, scope: !11635)
!11648 = !DILocation(line: 1176, column: 10, scope: !11643)
!11649 = !DILocation(line: 1176, column: 14, scope: !11643)
!11650 = !DILocation(line: 1176, column: 21, scope: !11643)
!11651 = !DILocation(line: 1176, column: 31, scope: !11643)
!11652 = !DILocation(line: 1176, column: 3, scope: !11643)
!11653 = !DILocation(line: 1177, column: 2, scope: !11635)
!11654 = !DILocation(line: 1178, column: 1, scope: !11635)
!11655 = distinct !DISubprogram(name: "vb2_get_plane_payload", scope: !130, file: !130, line: 1158, type: !11636, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11656 = !DILocalVariable(name: "vb", arg: 1, scope: !11655, file: !130, line: 1158, type: !181)
!11657 = !DILocation(line: 1158, column: 70, scope: !11655)
!11658 = !DILocalVariable(name: "plane_no", arg: 2, scope: !11655, file: !130, line: 1159, type: !7)
!11659 = !DILocation(line: 1159, column: 19, scope: !11655)
!11660 = !DILocation(line: 1161, column: 6, scope: !11661)
!11661 = distinct !DILexicalBlock(scope: !11655, file: !130, line: 1161, column: 6)
!11662 = !DILocation(line: 1161, column: 17, scope: !11661)
!11663 = !DILocation(line: 1161, column: 21, scope: !11661)
!11664 = !DILocation(line: 1161, column: 15, scope: !11661)
!11665 = !DILocation(line: 1161, column: 6, scope: !11655)
!11666 = !DILocation(line: 1162, column: 10, scope: !11661)
!11667 = !DILocation(line: 1162, column: 14, scope: !11661)
!11668 = !DILocation(line: 1162, column: 21, scope: !11661)
!11669 = !DILocation(line: 1162, column: 31, scope: !11661)
!11670 = !DILocation(line: 1162, column: 3, scope: !11661)
!11671 = !DILocation(line: 1163, column: 2, scope: !11655)
!11672 = !DILocation(line: 1164, column: 1, scope: !11655)
!11673 = distinct !DISubprogram(name: "ktime_get_ns", scope: !11674, file: !11674, line: 152, type: !11675, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11674 = !DIFile(filename: "./include/linux/timekeeping.h", directory: "/home/lizy2001/genbc/linux")
!11675 = !DISubroutineType(types: !11676)
!11676 = !{!406}
!11677 = !DILocation(line: 154, column: 21, scope: !11673)
!11678 = !DILocation(line: 154, column: 9, scope: !11673)
!11679 = !DILocation(line: 154, column: 2, scope: !11673)
!11680 = distinct !DISubprogram(name: "copy_overflow", scope: !8954, file: !8954, line: 132, type: !11681, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11681 = !DISubroutineType(types: !11682)
!11682 = !{null, !243, !309}
!11683 = !DILocalVariable(name: "size", arg: 1, scope: !11680, file: !8954, line: 132, type: !243)
!11684 = !DILocation(line: 132, column: 38, scope: !11680)
!11685 = !DILocalVariable(name: "count", arg: 2, scope: !11680, file: !8954, line: 132, type: !309)
!11686 = !DILocation(line: 132, column: 58, scope: !11680)
!11687 = !DILocalVariable(name: "__ret_warn_on", scope: !11688, file: !8954, line: 134, type: !243)
!11688 = distinct !DILexicalBlock(scope: !11680, file: !8954, line: 134, column: 2)
!11689 = !DILocation(line: 134, column: 2, scope: !11688)
!11690 = !DILocation(line: 134, column: 2, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11688, file: !8954, line: 134, column: 2)
!11692 = !DILocation(line: 134, column: 2, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11691, file: !8954, line: 134, column: 2)
!11694 = !DILocation(line: 134, column: 2, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11693, file: !8954, line: 134, column: 2)
!11696 = !DILocation(line: 134, column: 2, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11693, file: !8954, line: 134, column: 2)
!11698 = !DILocation(line: 134, column: 2, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11697, file: !8954, line: 134, column: 2)
!11700 = !DILocation(line: 134, column: 2, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11697, file: !8954, line: 134, column: 2)
!11702 = !{i32 -2145485780, i32 -2145485751, i32 -2145485705, i32 -2145485647, i32 -2145485593, i32 -2145485539, i32 -2145485484, i32 -2145485453}
!11703 = !DILocation(line: 134, column: 2, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11697, file: !8954, line: 134, column: 2)
!11705 = !{i32 -2145485033, i32 -2145485026, i32 -2145484974, i32 -2145484943, i32 -2145484913}
!11706 = !DILocation(line: 134, column: 2, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11697, file: !8954, line: 134, column: 2)
!11708 = !DILocation(line: 134, column: 2, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11693, file: !8954, line: 134, column: 2)
!11710 = !DILocation(line: 135, column: 1, scope: !11680)
!11711 = distinct !DISubprogram(name: "check_object_size", scope: !8954, file: !8954, line: 122, type: !11712, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11712 = !DISubroutineType(types: !11713)
!11713 = !{null, !2122, !309, !475}
!11714 = !DILocalVariable(name: "ptr", arg: 1, scope: !11711, file: !8954, line: 122, type: !2122)
!11715 = !DILocation(line: 122, column: 50, scope: !11711)
!11716 = !DILocalVariable(name: "n", arg: 2, scope: !11711, file: !8954, line: 122, type: !309)
!11717 = !DILocation(line: 122, column: 69, scope: !11711)
!11718 = !DILocalVariable(name: "to_user", arg: 3, scope: !11711, file: !8954, line: 123, type: !475)
!11719 = !DILocation(line: 123, column: 15, scope: !11711)
!11720 = !DILocation(line: 124, column: 3, scope: !11711)
!11721 = distinct !DISubprogram(name: "ktime_to_ns", scope: !1289, file: !1289, line: 80, type: !11722, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11722 = !DISubroutineType(types: !11723)
!11723 = !{!766, !11724}
!11724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1288)
!11725 = !DILocalVariable(name: "kt", arg: 1, scope: !11721, file: !1289, line: 80, type: !11724)
!11726 = !DILocation(line: 80, column: 45, scope: !11721)
!11727 = !DILocation(line: 82, column: 9, scope: !11721)
!11728 = !DILocation(line: 82, column: 2, scope: !11721)
!11729 = distinct !DISubprogram(name: "get_order", scope: !11730, file: !11730, line: 29, type: !11731, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11730 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!11731 = !DISubroutineType(types: !11732)
!11732 = !{!243, !309}
!11733 = !DILocalVariable(name: "x", arg: 1, scope: !11734, file: !11735, line: 366, type: !407)
!11734 = distinct !DISubprogram(name: "fls64", scope: !11735, file: !11735, line: 366, type: !11736, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11735 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!11736 = !DISubroutineType(types: !11737)
!11737 = !{!243, !407}
!11738 = !DILocation(line: 366, column: 40, scope: !11734, inlinedAt: !11739)
!11739 = distinct !DILocation(line: 46, column: 9, scope: !11729)
!11740 = !DILocalVariable(name: "bitpos", scope: !11734, file: !11735, line: 368, type: !243)
!11741 = !DILocation(line: 368, column: 6, scope: !11734, inlinedAt: !11739)
!11742 = !DILocalVariable(name: "size", arg: 1, scope: !11729, file: !11730, line: 29, type: !309)
!11743 = !DILocation(line: 29, column: 63, scope: !11729)
!11744 = !DILocation(line: 31, column: 27, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11729, file: !11730, line: 31, column: 6)
!11746 = !DILocation(line: 31, column: 6, scope: !11745)
!11747 = !DILocation(line: 31, column: 6, scope: !11729)
!11748 = !DILocation(line: 32, column: 8, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11750, file: !11730, line: 32, column: 7)
!11750 = distinct !DILexicalBlock(scope: !11745, file: !11730, line: 31, column: 34)
!11751 = !DILocation(line: 32, column: 7, scope: !11750)
!11752 = !DILocation(line: 33, column: 4, scope: !11749)
!11753 = !DILocation(line: 35, column: 7, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11750, file: !11730, line: 35, column: 7)
!11755 = !DILocation(line: 35, column: 12, scope: !11754)
!11756 = !DILocation(line: 35, column: 7, scope: !11750)
!11757 = !DILocation(line: 36, column: 4, scope: !11754)
!11758 = !DILocation(line: 38, column: 10, scope: !11750)
!11759 = !DILocation(line: 38, column: 28, scope: !11750)
!11760 = !DILocation(line: 38, column: 41, scope: !11750)
!11761 = !DILocation(line: 38, column: 3, scope: !11750)
!11762 = !DILocation(line: 41, column: 6, scope: !11729)
!11763 = !DILocation(line: 42, column: 7, scope: !11729)
!11764 = !DILocation(line: 46, column: 15, scope: !11729)
!11765 = !DILocation(line: 374, column: 2, scope: !11734, inlinedAt: !11739)
!11766 = !DILocation(line: 376, column: 14, scope: !11734, inlinedAt: !11739)
!11767 = !{i32 325767}
!11768 = !DILocation(line: 377, column: 9, scope: !11734, inlinedAt: !11739)
!11769 = !DILocation(line: 377, column: 16, scope: !11734, inlinedAt: !11739)
!11770 = !DILocation(line: 46, column: 2, scope: !11729)
!11771 = !DILocation(line: 48, column: 1, scope: !11729)
!11772 = distinct !DISubprogram(name: "__ilog2_u64", scope: !11773, file: !11773, line: 30, type: !11774, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11773 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!11774 = !DISubroutineType(types: !11775)
!11775 = !{!243, !406}
!11776 = !DILocation(line: 366, column: 40, scope: !11734, inlinedAt: !11777)
!11777 = distinct !DILocation(line: 32, column: 9, scope: !11772)
!11778 = !DILocation(line: 368, column: 6, scope: !11734, inlinedAt: !11777)
!11779 = !DILocalVariable(name: "n", arg: 1, scope: !11772, file: !11773, line: 30, type: !406)
!11780 = !DILocation(line: 30, column: 21, scope: !11772)
!11781 = !DILocation(line: 32, column: 15, scope: !11772)
!11782 = !DILocation(line: 374, column: 2, scope: !11734, inlinedAt: !11777)
!11783 = !DILocation(line: 376, column: 14, scope: !11734, inlinedAt: !11777)
!11784 = !DILocation(line: 377, column: 9, scope: !11734, inlinedAt: !11777)
!11785 = !DILocation(line: 377, column: 16, scope: !11734, inlinedAt: !11777)
!11786 = !DILocation(line: 32, column: 18, scope: !11772)
!11787 = !DILocation(line: 32, column: 2, scope: !11772)
!11788 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !11789, file: !11789, line: 137, type: !11790, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11789 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!11790 = !DISubroutineType(types: !11791)
!11791 = !{!180, !924, !2122, !306, !732}
!11792 = !DILocalVariable(name: "s", arg: 1, scope: !11788, file: !11789, line: 137, type: !924)
!11793 = !DILocation(line: 137, column: 54, scope: !11788)
!11794 = !DILocalVariable(name: "object", arg: 2, scope: !11788, file: !11789, line: 137, type: !2122)
!11795 = !DILocation(line: 137, column: 69, scope: !11788)
!11796 = !DILocalVariable(name: "size", arg: 3, scope: !11788, file: !11789, line: 138, type: !306)
!11797 = !DILocation(line: 138, column: 12, scope: !11788)
!11798 = !DILocalVariable(name: "flags", arg: 4, scope: !11788, file: !11789, line: 138, type: !732)
!11799 = !DILocation(line: 138, column: 24, scope: !11788)
!11800 = !DILocation(line: 140, column: 17, scope: !11788)
!11801 = !DILocation(line: 140, column: 2, scope: !11788)
!11802 = distinct !DISubprogram(name: "try_to_freeze", scope: !11803, file: !11803, line: 63, type: !3207, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11803 = !DIFile(filename: "./include/linux/freezer.h", directory: "/home/lizy2001/genbc/linux")
!11804 = !DILocation(line: 15, column: 9, scope: !9830, inlinedAt: !11805)
!11805 = distinct !DILocation(line: 65, column: 8, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11802, file: !11803, line: 65, column: 6)
!11807 = !DILocation(line: 15, column: 9, scope: !9842, inlinedAt: !11805)
!11808 = !DILocation(line: 15, column: 9, scope: !9845, inlinedAt: !11805)
!11809 = !DILocation(line: 65, column: 17, scope: !11806)
!11810 = !DILocation(line: 65, column: 23, scope: !11806)
!11811 = !DILocation(line: 65, column: 6, scope: !11802)
!11812 = !DILocation(line: 66, column: 3, scope: !11806)
!11813 = !DILocation(line: 67, column: 9, scope: !11802)
!11814 = !DILocation(line: 67, column: 2, scope: !11802)
!11815 = distinct !DISubprogram(name: "debug_check_no_locks_held", scope: !11816, file: !11816, line: 71, type: !1873, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11816 = !DIFile(filename: "./include/linux/debug_locks.h", directory: "/home/lizy2001/genbc/linux")
!11817 = !DILocation(line: 73, column: 1, scope: !11815)
!11818 = distinct !DISubprogram(name: "try_to_freeze_unsafe", scope: !11803, file: !11803, line: 55, type: !3207, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11819 = !DILocation(line: 15, column: 9, scope: !9830, inlinedAt: !11820)
!11820 = distinct !DILocation(line: 58, column: 6, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11818, file: !11803, line: 58, column: 6)
!11822 = !DILocation(line: 15, column: 9, scope: !9842, inlinedAt: !11820)
!11823 = !DILocation(line: 15, column: 9, scope: !9845, inlinedAt: !11820)
!11824 = !DILocation(line: 57, column: 2, scope: !11818)
!11825 = !DILocation(line: 57, column: 2, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11818, file: !11803, line: 57, column: 2)
!11827 = !DILocation(line: 57, column: 2, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11826, file: !11803, line: 57, column: 2)
!11829 = !DILocation(line: 58, column: 6, scope: !11821)
!11830 = !DILocation(line: 58, column: 6, scope: !11818)
!11831 = !DILocation(line: 59, column: 3, scope: !11821)
!11832 = !DILocation(line: 60, column: 9, scope: !11818)
!11833 = !DILocation(line: 60, column: 2, scope: !11818)
!11834 = !DILocation(line: 61, column: 1, scope: !11818)
!11835 = distinct !DISubprogram(name: "freezing", scope: !11803, file: !11803, line: 35, type: !11836, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !231)
!11836 = !DISubroutineType(types: !11837)
!11837 = !{!475, !1205}
!11838 = !DILocation(line: 23, column: 61, scope: !5250, inlinedAt: !11839)
!11839 = distinct !DILocation(line: 28, column: 9, scope: !5257, inlinedAt: !11840)
!11840 = distinct !DILocation(line: 37, column: 6, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11835, file: !11803, line: 37, column: 6)
!11842 = !DILocation(line: 69, column: 73, scope: !5263, inlinedAt: !11843)
!11843 = distinct !DILocation(line: 27, column: 2, scope: !5257, inlinedAt: !11840)
!11844 = !DILocation(line: 69, column: 83, scope: !5263, inlinedAt: !11843)
!11845 = !DILocation(line: 25, column: 29, scope: !5257, inlinedAt: !11840)
!11846 = !DILocalVariable(name: "p", arg: 1, scope: !11835, file: !11803, line: 35, type: !1205)
!11847 = !DILocation(line: 35, column: 49, scope: !11835)
!11848 = !DILocation(line: 27, column: 25, scope: !5257, inlinedAt: !11840)
!11849 = !DILocation(line: 71, column: 19, scope: !5263, inlinedAt: !11843)
!11850 = !DILocation(line: 71, column: 22, scope: !5263, inlinedAt: !11843)
!11851 = !DILocation(line: 71, column: 2, scope: !5263, inlinedAt: !11843)
!11852 = !DILocation(line: 72, column: 2, scope: !5263, inlinedAt: !11843)
!11853 = !DILocation(line: 28, column: 26, scope: !5257, inlinedAt: !11840)
!11854 = !DILocation(line: 29, column: 9, scope: !5250, inlinedAt: !11839)
!11855 = !DILocation(line: 37, column: 6, scope: !11841)
!11856 = !DILocation(line: 37, column: 6, scope: !11835)
!11857 = !DILocation(line: 38, column: 3, scope: !11841)
!11858 = !DILocation(line: 39, column: 28, scope: !11835)
!11859 = !DILocation(line: 39, column: 9, scope: !11835)
!11860 = !DILocation(line: 39, column: 2, scope: !11835)
!11861 = !DILocation(line: 40, column: 1, scope: !11835)
