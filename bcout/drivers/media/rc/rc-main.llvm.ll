; ModuleID = '../bcout/drivers/media/rc/rc-main.llvm.bc'
source_filename = "drivers/media/rc/rc-main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall4.init\22, \22a\22\09"
module asm "__initcall_rc_core_init4:\09\09\09"
module asm ".long\09rc_core_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.anon.69 = type { i64, i8*, i8* }
%struct.lock_class_key = type {}
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.attribute = type { i8*, i16 }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.ida = type { %struct.xarray }
%struct.led_trigger = type {}
%struct.rc_map_list = type { %struct.list_head, %struct.rc_map }
%struct.rc_map = type { %struct.rc_map_table*, i32, i32, i32, i32, i8*, %struct.spinlock }
%struct.rc_map_table = type { i64, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.anon.70 = type { i8*, i32, i32 }
%struct.kmem_cache = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.rc_filter_attribute = type { %struct.device_attribute, i32, i8 }
%struct.rc_dev = type { %struct.device, i8, [5 x %struct.attribute_group*], i8*, i8*, %struct.input_id, i8*, i8*, %struct.rc_map, %struct.mutex, i32, %struct.ir_raw_event_ctrl*, %struct.input_dev*, i32, i8, i8, i64, i64, i64, i32, %struct.rc_scancode_filter, %struct.rc_scancode_filter, i32, i32, i8*, %struct.spinlock, i8, i64, %struct.timer_list, %struct.timer_list, i32, i32, i64, i8, i32, i32, i32, i32, i32, i8, i32 (%struct.rc_dev*, i64*)*, i32 (%struct.rc_dev*)*, void (%struct.rc_dev*)*, i32 (%struct.rc_dev*, i32)*, i32 (%struct.rc_dev*, i32)*, i32 (%struct.rc_dev*, i32)*, i32 (%struct.rc_dev*, i32, i32)*, i32 (%struct.rc_dev*, i32*, i32)*, void (%struct.rc_dev*, i1)*, i32 (%struct.rc_dev*, i32)*, i32 (%struct.rc_dev*, i32)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, i32)* }
%struct.input_id = type { i16, i16, i16, i16 }
%struct.ir_raw_event_ctrl = type { %struct.list_head, %struct.task_struct*, %struct.anon.65, i64, %struct.rc_dev*, %struct.spinlock, %struct.timer_list, %struct.ir_raw_event, %struct.ir_raw_event }
%struct.anon.65 = type { %union.anon.66, [512 x %struct.ir_raw_event] }
%union.anon.66 = type { %struct.__kfifo }
%struct.__kfifo = type { i32, i32, i32, i32, i8* }
%struct.ir_raw_event = type { %union.anon.67, i8, i8 }
%union.anon.67 = type { i32 }
%struct.input_dev = type { i8*, i8*, i8*, %struct.input_id, [1 x i64], [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i32, i32, i32, i8*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, %struct.ff_device*, %struct.input_dev_poller*, i32, %struct.timer_list, [2 x i32], %struct.input_mt*, %struct.input_absinfo*, [12 x i64], [1 x i64], [1 x i64], [1 x i64], i32 (%struct.input_dev*)*, void (%struct.input_dev*)*, i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, i32, i32, i32)*, %struct.input_handle*, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, %struct.input_value*, i8, [3 x i64] }
%struct.input_keymap_entry = type { i8, i8, i16, i32, [32 x i8] }
%struct.ff_device = type { i32 (%struct.input_dev*, %struct.ff_effect*, %struct.ff_effect*)*, i32 (%struct.input_dev*, i32)*, i32 (%struct.input_dev*, i32, i32)*, void (%struct.input_dev*, i16)*, void (%struct.input_dev*, i16)*, void (%struct.ff_device*)*, i8*, [2 x i64], %struct.mutex, i32, %struct.ff_effect*, [0 x %struct.file*] }
%struct.ff_effect = type { i16, i16, i16, %struct.ff_trigger, %struct.ff_replay, %union.anon.68 }
%struct.ff_trigger = type { i16, i16 }
%struct.ff_replay = type { i16, i16 }
%union.anon.68 = type { %struct.ff_periodic_effect }
%struct.ff_periodic_effect = type { i16, i16, i16, i16, i16, %struct.ff_envelope, i32, i16* }
%struct.ff_envelope = type { i16, i16, i16, i16 }
%struct.input_dev_poller = type opaque
%struct.input_mt = type opaque
%struct.input_absinfo = type { i32, i32, i32, i32, i32, i32 }
%struct.input_handle = type { i8*, i32, i8*, %struct.input_dev*, %struct.input_handler*, %struct.list_head, %struct.list_head }
%struct.input_handler = type { i8*, void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)*, i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handler*, %struct.input_dev*)*, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)*, void (%struct.input_handle*)*, void (%struct.input_handle*)*, i8, i32, i8*, %struct.input_device_id*, %struct.list_head, %struct.list_head }
%struct.input_device_id = type { i64, i16, i16, i16, i16, [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], [1 x i64], i64 }
%struct.input_value = type { i16, i16, i32 }
%struct.rc_scancode_filter = type { i32, i32 }
%struct.lirc_scancode = type { i64, i16, i16, i32, i64 }

@.str = private unnamed_addr constant [35 x i8] c"\013rc_core: IR keymap %s not found\0A\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"\016Registered IR keymap %s\0A\00", align 1
@rc_map_lock = internal global %struct.spinlock undef, align 1, !dbg !0
@rc_map_list = internal global %struct.list_head { %struct.list_head* @rc_map_list, %struct.list_head* @rc_map_list }, align 8, !dbg !4287
@jiffies = external dso_local global i64, align 8
@proto_names = internal constant [17 x %struct.anon.69] [%struct.anon.69 { i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), i8* null }, %struct.anon.69 { i64 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i8* null }, %struct.anon.69 { i64 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i8* null }, %struct.anon.69 { i64 12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i32 0, i32 0) }, %struct.anon.69 { i64 3584, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i32 0, i32 0) }, %struct.anon.69 { i64 1015808, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i32 0, i32 0) }, %struct.anon.69 { i64 32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i32 0, i32 0) }, %struct.anon.69 { i64 448, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.46, i32 0, i32 0) }, %struct.anon.69 { i64 16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i32 0, i32 0) }, %struct.anon.69 { i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.47, i32 0, i32 0) }, %struct.anon.69 { i64 1048576, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i32 0, i32 0) }, %struct.anon.69 { i64 24576, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i32 0, i32 0) }, %struct.anon.69 { i64 2097152, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i32 0, i32 0) }, %struct.anon.69 { i64 4194304, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i32 0, i32 0), i8* null }, %struct.anon.69 { i64 8388608, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i32 0, i32 0) }, %struct.anon.69 { i64 117440512, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.54, i32 0, i32 0) }, %struct.anon.69 { i64 134217728, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i8* null }], align 16, !dbg !4300
@.str.2 = private unnamed_addr constant [40 x i8] c"\013rc_core: Can't enable IR protocol %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"\013rc_core: Couldn't load IR protocol module %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"\013rc_core: Loaded IR protocol module %s, but protocol %s still not available\0A\00", align 1
@rc_allocate_device.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4256
@.str.6 = private unnamed_addr constant [11 x i8] c"&dev->lock\00", align 1
@rc_dev_type = internal constant %struct.device_type { i8* null, %struct.attribute_group** null, i32 (%struct.device*, %struct.kobj_uevent_env*)* @rc_dev_uevent, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)* null, void (%struct.device*)* @rc_dev_release, %struct.dev_pm_ops* null }, align 8, !dbg !4311
@rc_class = internal global %struct.class { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.59, i32 0, i32 0), %struct.module* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.kobject* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*)* @rc_devnode, void (%struct.class*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, %struct.kobj_ns_type_operations* null, i8* (%struct.device*)* null, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)* null, %struct.dev_pm_ops* null, %struct.subsys_private* null }, align 8, !dbg !4313
@rc_ida = internal global %struct.ida { %struct.xarray { %struct.spinlock undef, i32 8388613, i8* null } }, align 8, !dbg !4315
@.str.7 = private unnamed_addr constant [5 x i8] c"rc%u\00", align 1
@rc_dev_ro_protocol_attr_grp = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([2 x %struct.attribute*], [2 x %struct.attribute*]* @rc_dev_ro_protocol_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4320
@rc_dev_rw_protocol_attr_grp = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([2 x %struct.attribute*], [2 x %struct.attribute*]* @rc_dev_rw_protocol_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4327
@rc_dev_filter_attr_grp = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([3 x %struct.attribute*], [3 x %struct.attribute*]* @rc_dev_filter_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4333
@rc_dev_wakeup_filter_attr_grp = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([4 x %struct.attribute*], [4 x %struct.attribute*]* @rc_dev_wakeup_filter_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !4342
@.str.8 = private unnamed_addr constant [10 x i8] c"%s as %s\0A\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"Unspecified device\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"N/A\00", align 1
@led_feedback = internal global %struct.led_trigger* null, align 8, !dbg !4283
@empty_map = internal global %struct.rc_map_list { %struct.list_head zeroinitializer, %struct.rc_map { %struct.rc_map_table* getelementptr inbounds ([1 x %struct.rc_map_table], [1 x %struct.rc_map_table]* @empty, i32 0, i32 0), i32 1, i32 0, i32 0, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.72, i32 0, i32 0), %struct.spinlock zeroinitializer } }, align 8, !dbg !4353
@__UNIQUE_ID___addressable_rc_core_init243 = internal global i8* bitcast (i32 ()* @rc_core_init to i8*), section ".discard.addressable", align 8, !dbg !4261
@__exitcall_rc_core_exit = internal global void ()* @rc_core_exit, section ".exitcall.exit", align 8, !dbg !4263
@__UNIQUE_ID_author244 = internal constant [37 x i8] c"rc_core.author=Mauro Carvalho Chehab\00", section ".modinfo", align 1, !dbg !4268
@__UNIQUE_ID_file245 = internal constant [38 x i8] c"rc_core.file=drivers/media/rc/rc-core\00", section ".modinfo", align 1, !dbg !4273
@__UNIQUE_ID_license246 = internal constant [23 x i8] c"rc_core.license=GPL v2\00", section ".modinfo", align 1, !dbg !4278
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@protocols = internal constant [28 x %struct.anon.70] [%struct.anon.70 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i32 125, i32 0 }, %struct.anon.70 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i32 125, i32 0 }, %struct.anon.70 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i32 114, i32 8063 }, %struct.anon.70 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), i32 114, i32 2064191 }, %struct.anon.70 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i32 0, i32 0), i32 114, i32 12287 }, %struct.anon.70 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i32 0, i32 0), i32 125, i32 65535 }, %struct.anon.70 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i32 100, i32 2031743 }, %struct.anon.70 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i32 100, i32 16711807 }, %struct.anon.70 { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i32 100, i32 2097023 }, %struct.anon.70 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i32 110, i32 65535 }, %struct.anon.70 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0), i32 110, i32 16777215 }, %struct.anon.70 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i32 110, i32 -1 }, %struct.anon.70 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.23, i32 0, i32 0), i32 125, i32 2097151 }, %struct.anon.70 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 100, i32 16777215 }, %struct.anon.70 { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i32 0, i32 0), i32 100, i32 2097151 }, %struct.anon.70 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), i32 114, i32 65535 }, %struct.anon.70 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), i32 114, i32 1048575 }, %struct.anon.70 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i32 114, i32 16777215 }, %struct.anon.70 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), i32 114, i32 -1 }, %struct.anon.70 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i32 114, i32 -32769 }, %struct.anon.70 { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i32 0, i32 0), i32 125, i32 8191 }, %struct.anon.70 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i32 0, i32 0), i32 125, i32 0 }, %struct.anon.70 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i32 0, i32 0), i32 0, i32 0 }, %struct.anon.70 { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), i32 114, i32 2147483647 }, %struct.anon.70 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i32 114, i32 4095 }, %struct.anon.70 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i32 0, i32 0), i32 114, i32 16777215 }, %struct.anon.70 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), i32 114, i32 -1 }, %struct.anon.70 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), i32 64, i32 0 }], align 16, !dbg !4289
@.str.11 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"other\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"rc-5\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"rc-5x-20\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"rc-5-sz\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"jvc\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"sony-12\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"sony-15\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"sony-20\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"nec\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"nec-x\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"nec-32\00", align 1
@.str.23 = private unnamed_addr constant [6 x i8] c"sanyo\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"mcir2-kbd\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"mcir2-mse\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"rc-6-0\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"rc-6-6a-20\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"rc-6-6a-24\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"rc-6-6a-32\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"rc-6-mce\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"sharp\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"xmp\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"cec\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"imon\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"rc-mm-12\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"rc-mm-24\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"rc-mm-32\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"xbox-dvd\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"ir-rc5-decoder\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"ir-nec-decoder\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"rc-6\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"ir-rc6-decoder\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"ir-jvc-decoder\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"sony\00", align 1
@.str.46 = private unnamed_addr constant [16 x i8] c"ir-sony-decoder\00", align 1
@.str.47 = private unnamed_addr constant [17 x i8] c"ir-sanyo-decoder\00", align 1
@.str.48 = private unnamed_addr constant [17 x i8] c"ir-sharp-decoder\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"mce_kbd\00", align 1
@.str.50 = private unnamed_addr constant [19 x i8] c"ir-mce_kbd-decoder\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"ir-xmp-decoder\00", align 1
@.str.52 = private unnamed_addr constant [16 x i8] c"ir-imon-decoder\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"rc-mm\00", align 1
@.str.54 = private unnamed_addr constant [16 x i8] c"ir-rcmm-decoder\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.55 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"NAME=%s\00", align 1
@.str.57 = private unnamed_addr constant [12 x i8] c"DRV_NAME=%s\00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"DEV_NAME=%s\00", align 1
@.str.59 = private unnamed_addr constant [3 x i8] c"rc\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"rc/%s\00", align 1
@rc_dev_ro_protocol_attrs = internal global [2 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_ro_protocols, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4322
@dev_attr_ro_protocols = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_protocols, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !4325
@.str.61 = private unnamed_addr constant [10 x i8] c"protocols\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"[%s] \00", align 1
@.str.63 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@rc_dev_rw_protocol_attrs = internal global [2 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_rw_protocols, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4329
@dev_attr_rw_protocols = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_protocols, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_protocols }, align 8, !dbg !4331
@.str.64 = private unnamed_addr constant [3 x i8] c" \0A\00", align 1
@.str.65 = private unnamed_addr constant [5 x i8] c"lirc\00", align 1
@rc_dev_filter_attrs = internal global [3 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.rc_filter_attribute, %struct.rc_filter_attribute* @dev_attr_filter, i32 0, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.rc_filter_attribute, %struct.rc_filter_attribute* @dev_attr_filter_mask, i32 0, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4335
@dev_attr_filter = internal global %struct.rc_filter_attribute { %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.66, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_filter, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_filter }, i32 0, i8 0 }, align 8, !dbg !4338
@dev_attr_filter_mask = internal global %struct.rc_filter_attribute { %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.68, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_filter, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_filter }, i32 0, i8 1 }, align 8, !dbg !4340
@.str.66 = private unnamed_addr constant [7 x i8] c"filter\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"%#x\0A\00", align 1
@.str.68 = private unnamed_addr constant [12 x i8] c"filter_mask\00", align 1
@rc_dev_wakeup_filter_attrs = internal global [4 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.rc_filter_attribute, %struct.rc_filter_attribute* @dev_attr_wakeup_filter, i32 0, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.rc_filter_attribute, %struct.rc_filter_attribute* @dev_attr_wakeup_filter_mask, i32 0, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_wakeup_protocols, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !4344
@dev_attr_wakeup_filter = internal global %struct.rc_filter_attribute { %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.69, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_filter, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_filter }, i32 1, i8 0 }, align 8, !dbg !4347
@dev_attr_wakeup_filter_mask = internal global %struct.rc_filter_attribute { %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.70, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_filter, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_filter }, i32 1, i8 1 }, align 8, !dbg !4349
@dev_attr_wakeup_protocols = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @show_wakeup_protocols, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @store_wakeup_protocols }, align 8, !dbg !4351
@.str.69 = private unnamed_addr constant [14 x i8] c"wakeup_filter\00", align 1
@.str.70 = private unnamed_addr constant [19 x i8] c"wakeup_filter_mask\00", align 1
@.str.71 = private unnamed_addr constant [17 x i8] c"wakeup_protocols\00", align 1
@.str.72 = private unnamed_addr constant [9 x i8] c"rc-empty\00", align 1
@empty = internal global [1 x %struct.rc_map_table] [%struct.rc_map_table { i64 42, i32 152 }], align 16, !dbg !4355
@rc_core_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4358
@.str.73 = private unnamed_addr constant [49 x i8] c"\013rc_core: rc_core: unable to register rc class\0A\00", align 1
@.str.74 = private unnamed_addr constant [41 x i8] c"\013rc_core: rc_core: unable to init lirc\0A\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"rc-feedback\00", align 1
@llvm.used = appending global [6 x i8*] [i8* bitcast (void ()* @rc_core_exit to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_rc_core_init243 to i8*), i8* bitcast (void ()** @__exitcall_rc_core_exit to i8*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__UNIQUE_ID_author244, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_file245, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_license246, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.rc_map* @rc_map_get(i8* %name) #0 !dbg !4369 {
entry:
  %retval = alloca %struct.rc_map*, align 8
  %name.addr = alloca i8*, align 8
  %map = alloca %struct.rc_map_list*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4373, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.declare(metadata %struct.rc_map_list** %map, metadata !4375, metadata !DIExpression()), !dbg !4376
  %0 = load i8*, i8** %name.addr, align 8, !dbg !4377
  %call = call %struct.rc_map_list* @seek_rc_map(i8* %0) #11, !dbg !4378
  store %struct.rc_map_list* %call, %struct.rc_map_list** %map, align 8, !dbg !4379
  %1 = load %struct.rc_map_list*, %struct.rc_map_list** %map, align 8, !dbg !4380
  %tobool = icmp ne %struct.rc_map_list* %1, null, !dbg !4380
  br i1 %tobool, label %if.end, label %if.then, !dbg !4382

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %name.addr, align 8, !dbg !4383
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* %2) #12, !dbg !4383
  store %struct.rc_map* null, %struct.rc_map** %retval, align 8, !dbg !4385
  br label %return, !dbg !4385

if.end:                                           ; preds = %entry
  %3 = load %struct.rc_map_list*, %struct.rc_map_list** %map, align 8, !dbg !4386
  %map2 = getelementptr inbounds %struct.rc_map_list, %struct.rc_map_list* %3, i32 0, i32 1, !dbg !4387
  %name3 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %map2, i32 0, i32 5, !dbg !4388
  %4 = load i8*, i8** %name3, align 8, !dbg !4388
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* %4) #12, !dbg !4389
  %5 = load %struct.rc_map_list*, %struct.rc_map_list** %map, align 8, !dbg !4390
  %map5 = getelementptr inbounds %struct.rc_map_list, %struct.rc_map_list* %5, i32 0, i32 1, !dbg !4391
  store %struct.rc_map* %map5, %struct.rc_map** %retval, align 8, !dbg !4392
  br label %return, !dbg !4392

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.rc_map*, %struct.rc_map** %retval, align 8, !dbg !4393
  ret %struct.rc_map* %6, !dbg !4393
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.rc_map_list* @seek_rc_map(i8* %name) #0 !dbg !4394 {
entry:
  %lock.addr.i11 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i11, metadata !4397, metadata !DIExpression()), !dbg !4402
  %lock.addr.i9 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i9, metadata !4397, metadata !DIExpression()), !dbg !4404
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4411, metadata !DIExpression()), !dbg !4413
  %retval = alloca %struct.rc_map_list*, align 8
  %name.addr = alloca i8*, align 8
  %map = alloca %struct.rc_map_list*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.rc_map_list*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp7 = alloca %struct.rc_map_list*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !4415, metadata !DIExpression()), !dbg !4416
  call void @llvm.dbg.declare(metadata %struct.rc_map_list** %map, metadata !4417, metadata !DIExpression()), !dbg !4418
  store %struct.rc_map_list* null, %struct.rc_map_list** %map, align 8, !dbg !4418
  store %struct.spinlock* @rc_map_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4419, !srcloc !4421
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4422
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !4422
  %rlock.i = bitcast %union.anon* %1 to %struct.raw_spinlock*, !dbg !4422
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4424, metadata !DIExpression()), !dbg !4426
  %2 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @rc_map_list, i32 0, i32 0), align 8, !dbg !4426
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !4426
  store i8* %3, i8** %__mptr, align 8, !dbg !4426
  br label %do.body, !dbg !4426

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !4427

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !4426
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !4426
  %5 = bitcast i8* %add.ptr to %struct.rc_map_list*, !dbg !4426
  store %struct.rc_map_list* %5, %struct.rc_map_list** %tmp, align 8, !dbg !4427
  %6 = load %struct.rc_map_list*, %struct.rc_map_list** %tmp, align 8, !dbg !4426
  store %struct.rc_map_list* %6, %struct.rc_map_list** %map, align 8, !dbg !4429
  br label %for.cond, !dbg !4429

for.cond:                                         ; preds = %do.end6, %do.end
  %7 = load %struct.rc_map_list*, %struct.rc_map_list** %map, align 8, !dbg !4430
  %list = getelementptr inbounds %struct.rc_map_list, %struct.rc_map_list* %7, i32 0, i32 0, !dbg !4430
  %cmp = icmp eq %struct.list_head* %list, @rc_map_list, !dbg !4430
  %lnot = xor i1 %cmp, true, !dbg !4430
  br i1 %lnot, label %for.body, label %for.end, !dbg !4429

for.body:                                         ; preds = %for.cond
  %8 = load i8*, i8** %name.addr, align 8, !dbg !4431
  %9 = load %struct.rc_map_list*, %struct.rc_map_list** %map, align 8, !dbg !4432
  %map1 = getelementptr inbounds %struct.rc_map_list, %struct.rc_map_list* %9, i32 0, i32 1, !dbg !4433
  %name2 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %map1, i32 0, i32 5, !dbg !4434
  %10 = load i8*, i8** %name2, align 8, !dbg !4434
  %call = call i32 @strcmp(i8* %8, i8* %10) #11, !dbg !4435
  %tobool = icmp ne i32 %call, 0, !dbg !4435
  br i1 %tobool, label %if.end, label %if.then, !dbg !4436

if.then:                                          ; preds = %for.body
  store %struct.spinlock* @rc_map_lock, %struct.spinlock** %lock.addr.i9, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4437, !srcloc !4439
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i9, align 8, !dbg !4440
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !4440
  %rlock.i10 = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !4440
  %13 = load %struct.rc_map_list*, %struct.rc_map_list** %map, align 8, !dbg !4442
  store %struct.rc_map_list* %13, %struct.rc_map_list** %retval, align 8, !dbg !4443
  br label %return, !dbg !4443

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4444

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !4445, metadata !DIExpression()), !dbg !4447
  %14 = load %struct.rc_map_list*, %struct.rc_map_list** %map, align 8, !dbg !4447
  %list4 = getelementptr inbounds %struct.rc_map_list, %struct.rc_map_list* %14, i32 0, i32 0, !dbg !4447
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !4447
  %15 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4447
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !4447
  store i8* %16, i8** %__mptr3, align 8, !dbg !4447
  br label %do.body5, !dbg !4447

do.body5:                                         ; preds = %for.inc
  br label %do.end6, !dbg !4448

do.end6:                                          ; preds = %do.body5
  %17 = load i8*, i8** %__mptr3, align 8, !dbg !4447
  %add.ptr8 = getelementptr i8, i8* %17, i64 0, !dbg !4447
  %18 = bitcast i8* %add.ptr8 to %struct.rc_map_list*, !dbg !4447
  store %struct.rc_map_list* %18, %struct.rc_map_list** %tmp7, align 8, !dbg !4448
  %19 = load %struct.rc_map_list*, %struct.rc_map_list** %tmp7, align 8, !dbg !4447
  store %struct.rc_map_list* %19, %struct.rc_map_list** %map, align 8, !dbg !4430
  br label %for.cond, !dbg !4430, !llvm.loop !4450

for.end:                                          ; preds = %for.cond
  store %struct.spinlock* @rc_map_lock, %struct.spinlock** %lock.addr.i11, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4452, !srcloc !4439
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i11, align 8, !dbg !4453
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !4453
  %rlock.i12 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !4453
  store %struct.rc_map_list* null, %struct.rc_map_list** %retval, align 8, !dbg !4454
  br label %return, !dbg !4454

return:                                           ; preds = %for.end, %if.then
  %22 = load %struct.rc_map_list*, %struct.rc_map_list** %retval, align 8, !dbg !4455
  ret %struct.rc_map_list* %22, !dbg !4455
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @rc_map_register(%struct.rc_map_list* %map) #0 !dbg !4456 {
entry:
  %lock.addr.i1 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i1, metadata !4397, metadata !DIExpression()), !dbg !4459
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4411, metadata !DIExpression()), !dbg !4461
  %map.addr = alloca %struct.rc_map_list*, align 8
  store %struct.rc_map_list* %map, %struct.rc_map_list** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_map_list** %map.addr, metadata !4463, metadata !DIExpression()), !dbg !4464
  store %struct.spinlock* @rc_map_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4465, !srcloc !4421
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4466
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !4466
  %rlock.i = bitcast %union.anon* %1 to %struct.raw_spinlock*, !dbg !4466
  %2 = load %struct.rc_map_list*, %struct.rc_map_list** %map.addr, align 8, !dbg !4467
  %list = getelementptr inbounds %struct.rc_map_list, %struct.rc_map_list* %2, i32 0, i32 0, !dbg !4468
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @rc_map_list) #11, !dbg !4469
  store %struct.spinlock* @rc_map_lock, %struct.spinlock** %lock.addr.i1, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4470, !srcloc !4439
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i1, align 8, !dbg !4471
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !4471
  %rlock.i2 = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !4471
  ret i32 0, !dbg !4472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !4473 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !4477, metadata !DIExpression()), !dbg !4478
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !4479, metadata !DIExpression()), !dbg !4480
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !4481
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4482
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !4483
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !4483
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4484
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !4485
  ret void, !dbg !4486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @rc_map_unregister(%struct.rc_map_list* %map) #0 !dbg !4487 {
entry:
  %lock.addr.i1 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i1, metadata !4397, metadata !DIExpression()), !dbg !4490
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4411, metadata !DIExpression()), !dbg !4492
  %map.addr = alloca %struct.rc_map_list*, align 8
  store %struct.rc_map_list* %map, %struct.rc_map_list** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_map_list** %map.addr, metadata !4494, metadata !DIExpression()), !dbg !4495
  store %struct.spinlock* @rc_map_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4496, !srcloc !4421
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4497
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !4497
  %rlock.i = bitcast %union.anon* %1 to %struct.raw_spinlock*, !dbg !4497
  %2 = load %struct.rc_map_list*, %struct.rc_map_list** %map.addr, align 8, !dbg !4498
  %list = getelementptr inbounds %struct.rc_map_list, %struct.rc_map_list* %2, i32 0, i32 0, !dbg !4499
  call void @list_del(%struct.list_head* %list) #11, !dbg !4500
  store %struct.spinlock* @rc_map_lock, %struct.spinlock** %lock.addr.i1, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4501, !srcloc !4439
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i1, align 8, !dbg !4502
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !4502
  %rlock.i2 = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !4502
  ret void, !dbg !4503
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !4504 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !4507, metadata !DIExpression()), !dbg !4508
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !4509
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !4510
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !4511
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !4512
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !4513
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !4514
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !4515
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !4516
  ret void, !dbg !4517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @rc_g_keycode_from_table(%struct.rc_dev* %dev, i64 %scancode) #0 !dbg !4518 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !4521, metadata !DIExpression()), !dbg !4525
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4527, metadata !DIExpression()), !dbg !4528
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4529, metadata !DIExpression()), !dbg !4534
  %dev.addr = alloca %struct.rc_dev*, align 8
  %scancode.addr = alloca i64, align 8
  %rc_map = alloca %struct.rc_map*, align 8
  %keycode = alloca i32, align 4
  %index = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !4541, metadata !DIExpression()), !dbg !4542
  store i64 %scancode, i64* %scancode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %scancode.addr, metadata !4543, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.declare(metadata %struct.rc_map** %rc_map, metadata !4545, metadata !DIExpression()), !dbg !4546
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4547
  %rc_map1 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %0, i32 0, i32 8, !dbg !4548
  store %struct.rc_map* %rc_map1, %struct.rc_map** %rc_map, align 8, !dbg !4546
  call void @llvm.dbg.declare(metadata i32* %keycode, metadata !4549, metadata !DIExpression()), !dbg !4550
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4551, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4553, metadata !DIExpression()), !dbg !4554
  br label %do.body, !dbg !4555

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !4556

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4557, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4560, metadata !DIExpression()), !dbg !4559
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4559
  %conv = zext i1 %cmp to i32, !dbg !4559
  store i32 1, i32* %tmp, align 4, !dbg !4559
  %1 = load i32, i32* %tmp, align 4, !dbg !4559
  br label %do.body3, !dbg !4561

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4562

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !4563

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !4565, metadata !DIExpression()), !dbg !4568
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !4569, metadata !DIExpression()), !dbg !4568
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !4568
  %conv9 = zext i1 %cmp8 to i32, !dbg !4568
  store i32 1, i32* %tmp10, align 4, !dbg !4568
  %2 = load i32, i32* %tmp10, align 4, !dbg !4568
  %call = call i64 @arch_local_irq_save() #11, !dbg !4570
  store i64 %call, i64* %flags, align 8, !dbg !4570
  br label %do.end, !dbg !4570

do.end:                                           ; preds = %do.body5
  br label %do.end11, !dbg !4563

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !4562

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4571, !srcloc !4572
  br label %do.body13, !dbg !4571

do.body13:                                        ; preds = %do.body12
  %3 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !4573
  %lock = getelementptr inbounds %struct.rc_map, %struct.rc_map* %3, i32 0, i32 6, !dbg !4573
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4574
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !4575
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !4575
  br label %do.end15, !dbg !4573

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !4571

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !4562

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4561

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !4556

do.end19:                                         ; preds = %do.end18
  %6 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !4576
  %7 = load i64, i64* %scancode.addr, align 8, !dbg !4577
  %call20 = call i32 @ir_lookup_by_scancode(%struct.rc_map* %6, i64 %7) #11, !dbg !4578
  store i32 %call20, i32* %index, align 4, !dbg !4579
  %8 = load i32, i32* %index, align 4, !dbg !4580
  %9 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !4581
  %len = getelementptr inbounds %struct.rc_map, %struct.rc_map* %9, i32 0, i32 2, !dbg !4582
  %10 = load i32, i32* %len, align 4, !dbg !4582
  %cmp21 = icmp ult i32 %8, %10, !dbg !4583
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !4580

cond.true:                                        ; preds = %do.end19
  %11 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !4584
  %scan = getelementptr inbounds %struct.rc_map, %struct.rc_map* %11, i32 0, i32 0, !dbg !4585
  %12 = load %struct.rc_map_table*, %struct.rc_map_table** %scan, align 8, !dbg !4585
  %13 = load i32, i32* %index, align 4, !dbg !4586
  %idxprom = zext i32 %13 to i64, !dbg !4584
  %arrayidx = getelementptr %struct.rc_map_table, %struct.rc_map_table* %12, i64 %idxprom, !dbg !4584
  %keycode23 = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %arrayidx, i32 0, i32 1, !dbg !4587
  %14 = load i32, i32* %keycode23, align 8, !dbg !4587
  br label %cond.end, !dbg !4580

cond.false:                                       ; preds = %do.end19
  br label %cond.end, !dbg !4580

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %14, %cond.true ], [ 0, %cond.false ], !dbg !4580
  store i32 %cond, i32* %keycode, align 4, !dbg !4588
  %15 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !4589
  %lock24 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %15, i32 0, i32 6, !dbg !4590
  %16 = load i64, i64* %flags, align 8, !dbg !4591
  store %struct.spinlock* %lock24, %struct.spinlock** %lock.addr.i27, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !211, metadata !4592, metadata !DIExpression()) #7, !dbg !4595
  call void @llvm.dbg.declare(metadata !211, metadata !4596, metadata !DIExpression()) #7, !dbg !4595
  store i32 1, i32* %tmp.i, align 4, !dbg !4595
  %17 = load i32, i32* %tmp.i, align 4, !dbg !4595
  call void @llvm.dbg.declare(metadata !211, metadata !4597, metadata !DIExpression()) #7, !dbg !4602
  call void @llvm.dbg.declare(metadata !211, metadata !4603, metadata !DIExpression()) #7, !dbg !4602
  store i32 1, i32* %tmp8.i, align 4, !dbg !4602
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !4602
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !4604
  call void @arch_local_irq_restore(i64 %19) #13, !dbg !4604
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4605, !srcloc !4607
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !4608
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !4608
  %rlock.i28 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !4608
  %22 = load i32, i32* %keycode, align 4, !dbg !4610
  %cmp25 = icmp ne i32 %22, 0, !dbg !4612
  br i1 %cmp25, label %if.then, label %if.end, !dbg !4613

if.then:                                          ; preds = %cond.end
  br label %if.end, !dbg !4614

if.end:                                           ; preds = %if.then, %cond.end
  %23 = load i32, i32* %keycode, align 4, !dbg !4615
  ret i32 %23, !dbg !4616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !4617 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !4621, metadata !DIExpression()), !dbg !4622
  %call = call i64 @arch_local_save_flags() #11, !dbg !4623
  store i64 %call, i64* %f, align 8, !dbg !4624
  call void @arch_local_irq_disable() #11, !dbg !4625
  %0 = load i64, i64* %f, align 8, !dbg !4626
  ret i64 %0, !dbg !4627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ir_lookup_by_scancode(%struct.rc_map* %rc_map, i64 %scancode) #0 !dbg !4628 {
entry:
  %retval = alloca i32, align 4
  %rc_map.addr = alloca %struct.rc_map*, align 8
  %scancode.addr = alloca i64, align 8
  %res = alloca %struct.rc_map_table*, align 8
  store %struct.rc_map* %rc_map, %struct.rc_map** %rc_map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_map** %rc_map.addr, metadata !4633, metadata !DIExpression()), !dbg !4634
  store i64 %scancode, i64* %scancode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %scancode.addr, metadata !4635, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.declare(metadata %struct.rc_map_table** %res, metadata !4637, metadata !DIExpression()), !dbg !4638
  %0 = bitcast i64* %scancode.addr to i8*, !dbg !4639
  %1 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !4640
  %scan = getelementptr inbounds %struct.rc_map, %struct.rc_map* %1, i32 0, i32 0, !dbg !4641
  %2 = load %struct.rc_map_table*, %struct.rc_map_table** %scan, align 8, !dbg !4641
  %3 = bitcast %struct.rc_map_table* %2 to i8*, !dbg !4640
  %4 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !4642
  %len = getelementptr inbounds %struct.rc_map, %struct.rc_map* %4, i32 0, i32 2, !dbg !4643
  %5 = load i32, i32* %len, align 4, !dbg !4643
  %conv = zext i32 %5 to i64, !dbg !4642
  %call = call i8* @bsearch(i8* %0, i8* %3, i64 %conv, i64 16, i32 (i8*, i8*)* @rc_map_cmp) #11, !dbg !4644
  %6 = bitcast i8* %call to %struct.rc_map_table*, !dbg !4644
  store %struct.rc_map_table* %6, %struct.rc_map_table** %res, align 8, !dbg !4645
  %7 = load %struct.rc_map_table*, %struct.rc_map_table** %res, align 8, !dbg !4646
  %tobool = icmp ne %struct.rc_map_table* %7, null, !dbg !4646
  br i1 %tobool, label %if.else, label %if.then, !dbg !4648

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !4649
  br label %return, !dbg !4649

if.else:                                          ; preds = %entry
  %8 = load %struct.rc_map_table*, %struct.rc_map_table** %res, align 8, !dbg !4650
  %9 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !4651
  %scan1 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %9, i32 0, i32 0, !dbg !4652
  %10 = load %struct.rc_map_table*, %struct.rc_map_table** %scan1, align 8, !dbg !4652
  %sub.ptr.lhs.cast = ptrtoint %struct.rc_map_table* %8 to i64, !dbg !4653
  %sub.ptr.rhs.cast = ptrtoint %struct.rc_map_table* %10 to i64, !dbg !4653
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4653
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 16, !dbg !4653
  %conv2 = trunc i64 %sub.ptr.div to i32, !dbg !4650
  store i32 %conv2, i32* %retval, align 4, !dbg !4654
  br label %return, !dbg !4654

return:                                           ; preds = %if.else, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !4655
  ret i32 %11, !dbg !4655
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @rc_keyup(%struct.rc_dev* %dev) #0 !dbg !4656 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !4521, metadata !DIExpression()), !dbg !4657
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4527, metadata !DIExpression()), !dbg !4659
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4529, metadata !DIExpression()), !dbg !4660
  %dev.addr = alloca %struct.rc_dev*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !4667, metadata !DIExpression()), !dbg !4668
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4669, metadata !DIExpression()), !dbg !4670
  br label %do.body, !dbg !4671

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !4672

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4673, metadata !DIExpression()), !dbg !4675
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4676, metadata !DIExpression()), !dbg !4675
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4675
  %conv = zext i1 %cmp to i32, !dbg !4675
  store i32 1, i32* %tmp, align 4, !dbg !4675
  %0 = load i32, i32* %tmp, align 4, !dbg !4675
  br label %do.body2, !dbg !4677

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4678

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4679

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !4681, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !4685, metadata !DIExpression()), !dbg !4684
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !4684
  %conv8 = zext i1 %cmp7 to i32, !dbg !4684
  store i32 1, i32* %tmp9, align 4, !dbg !4684
  %1 = load i32, i32* %tmp9, align 4, !dbg !4684
  %call = call i64 @arch_local_irq_save() #11, !dbg !4686
  store i64 %call, i64* %flags, align 8, !dbg !4686
  br label %do.end, !dbg !4686

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !4679

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !4678

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4687, !srcloc !4688
  br label %do.body12, !dbg !4687

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4689
  %keylock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %2, i32 0, i32 25, !dbg !4689
  store %struct.spinlock* %keylock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4690
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !4691
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !4691
  br label %do.end14, !dbg !4689

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !4687

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !4678

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !4677

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4672

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4692
  call void @ir_do_keyup(%struct.rc_dev* %5, i1 zeroext true) #11, !dbg !4693
  %6 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4694
  %keylock19 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 25, !dbg !4695
  %7 = load i64, i64* %flags, align 8, !dbg !4696
  store %struct.spinlock* %keylock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %7, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !211, metadata !4592, metadata !DIExpression()) #7, !dbg !4697
  call void @llvm.dbg.declare(metadata !211, metadata !4596, metadata !DIExpression()) #7, !dbg !4697
  store i32 1, i32* %tmp.i, align 4, !dbg !4697
  %8 = load i32, i32* %tmp.i, align 4, !dbg !4697
  call void @llvm.dbg.declare(metadata !211, metadata !4597, metadata !DIExpression()) #7, !dbg !4698
  call void @llvm.dbg.declare(metadata !211, metadata !4603, metadata !DIExpression()) #7, !dbg !4698
  store i32 1, i32* %tmp8.i, align 4, !dbg !4698
  %9 = load i32, i32* %tmp8.i, align 4, !dbg !4698
  %10 = load i64, i64* %flags.addr.i, align 8, !dbg !4699
  call void @arch_local_irq_restore(i64 %10) #13, !dbg !4699
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4700, !srcloc !4607
  %11 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !4701
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0, !dbg !4701
  %rlock.i21 = bitcast %union.anon* %12 to %struct.raw_spinlock*, !dbg !4701
  ret void, !dbg !4702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ir_do_keyup(%struct.rc_dev* %dev, i1 zeroext %sync) #0 !dbg !4703 {
entry:
  %dev.addr = alloca %struct.rc_dev*, align 8
  %sync.addr = alloca i8, align 1
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !4704, metadata !DIExpression()), !dbg !4705
  %frombool = zext i1 %sync to i8
  store i8 %frombool, i8* %sync.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sync.addr, metadata !4706, metadata !DIExpression()), !dbg !4707
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4708
  %keypressed = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %0, i32 0, i32 26, !dbg !4710
  %1 = load i8, i8* %keypressed, align 8, !dbg !4710
  %tobool = trunc i8 %1 to i1, !dbg !4710
  br i1 %tobool, label %if.end, label %if.then, !dbg !4711

if.then:                                          ; preds = %entry
  br label %return, !dbg !4712

if.end:                                           ; preds = %entry
  %2 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4713
  %timer_repeat = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %2, i32 0, i32 29, !dbg !4714
  %call = call i32 @del_timer(%struct.timer_list* %timer_repeat) #11, !dbg !4715
  %3 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4716
  %input_dev = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %3, i32 0, i32 12, !dbg !4717
  %4 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !4717
  %5 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4718
  %last_keycode = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %5, i32 0, i32 30, !dbg !4719
  %6 = load i32, i32* %last_keycode, align 8, !dbg !4719
  call void @input_report_key(%struct.input_dev* %4, i32 %6, i32 0) #11, !dbg !4720
  %7 = load %struct.led_trigger*, %struct.led_trigger** @led_feedback, align 8, !dbg !4721
  call void @led_trigger_event(%struct.led_trigger* %7, i32 0) #11, !dbg !4722
  %8 = load i8, i8* %sync.addr, align 1, !dbg !4723
  %tobool1 = trunc i8 %8 to i1, !dbg !4723
  br i1 %tobool1, label %if.then2, label %if.end4, !dbg !4725

if.then2:                                         ; preds = %if.end
  %9 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4726
  %input_dev3 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %9, i32 0, i32 12, !dbg !4727
  %10 = load %struct.input_dev*, %struct.input_dev** %input_dev3, align 8, !dbg !4727
  call void @input_sync(%struct.input_dev* %10) #11, !dbg !4728
  br label %if.end4, !dbg !4728

if.end4:                                          ; preds = %if.then2, %if.end
  %11 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4729
  %keypressed5 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %11, i32 0, i32 26, !dbg !4730
  store i8 0, i8* %keypressed5, align 8, !dbg !4731
  br label %return, !dbg !4732

return:                                           ; preds = %if.end4, %if.then
  ret void, !dbg !4732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @rc_repeat(%struct.rc_dev* %dev) #0 !dbg !4733 {
entry:
  %lock.addr.i52 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i52, metadata !4521, metadata !DIExpression()), !dbg !4734
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4527, metadata !DIExpression()), !dbg !4736
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4529, metadata !DIExpression()), !dbg !4737
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4744, metadata !DIExpression()), !dbg !4749
  %dev.addr = alloca %struct.rc_dev*, align 8
  %flags = alloca i64, align 8
  %timeout = alloca i32, align 4
  %sc = alloca %struct.lirc_scancode, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy20 = alloca i64, align 8
  %__dummy221 = alloca i64, align 8
  %tmp24 = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !4751, metadata !DIExpression()), !dbg !4752
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4753, metadata !DIExpression()), !dbg !4754
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !4755, metadata !DIExpression()), !dbg !4756
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4757
  %timeout1 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %0, i32 0, i32 34, !dbg !4758
  %1 = load i32, i32* %timeout1, align 4, !dbg !4758
  %conv = zext i32 %1 to i64, !dbg !4757
  %call = call i64 @nsecs_to_jiffies(i64 %conv) #11, !dbg !4759
  %2 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4760
  %last_protocol = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %2, i32 0, i32 31, !dbg !4761
  %3 = load i32, i32* %last_protocol, align 4, !dbg !4761
  %call2 = call i32 @repeat_period(i32 %3) #11, !dbg !4762
  store i32 %call2, i32* %m.addr.i, align 4
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !4763
  %5 = call i1 @llvm.is.constant.i32(i32 %4) #7, !dbg !4765
  br i1 %5, label %if.then.i, label %if.else.i, !dbg !4766

if.then.i:                                        ; preds = %entry
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !4767
  %cmp.i = icmp slt i32 %6, 0, !dbg !4770
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4771

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !4772
  br label %msecs_to_jiffies.exit, !dbg !4772

if.end.i:                                         ; preds = %if.then.i
  %7 = load i32, i32* %m.addr.i, align 4, !dbg !4773
  %call.i = call i64 @_msecs_to_jiffies(i32 %7) #13, !dbg !4774
  store i64 %call.i, i64* %retval.i, align 8, !dbg !4775
  br label %msecs_to_jiffies.exit, !dbg !4775

if.else.i:                                        ; preds = %entry
  %8 = load i32, i32* %m.addr.i, align 4, !dbg !4776
  %call2.i = call i64 @__msecs_to_jiffies(i32 %8) #13, !dbg !4778
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !4779
  br label %msecs_to_jiffies.exit, !dbg !4779

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %9 = load i64, i64* %retval.i, align 8, !dbg !4780
  %add = add i64 %call, %9, !dbg !4781
  %conv4 = trunc i64 %add to i32, !dbg !4759
  store i32 %conv4, i32* %timeout, align 4, !dbg !4756
  call void @llvm.dbg.declare(metadata %struct.lirc_scancode* %sc, metadata !4782, metadata !DIExpression()), !dbg !4790
  %timestamp = getelementptr inbounds %struct.lirc_scancode, %struct.lirc_scancode* %sc, i32 0, i32 0, !dbg !4791
  store i64 0, i64* %timestamp, align 8, !dbg !4791
  %flags5 = getelementptr inbounds %struct.lirc_scancode, %struct.lirc_scancode* %sc, i32 0, i32 1, !dbg !4791
  %10 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4792
  %last_toggle = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %10, i32 0, i32 33, !dbg !4793
  %11 = load i8, i8* %last_toggle, align 8, !dbg !4793
  %conv6 = zext i8 %11 to i32, !dbg !4792
  %tobool = icmp ne i32 %conv6, 0, !dbg !4792
  %12 = zext i1 %tobool to i64, !dbg !4792
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !4792
  %or = or i32 2, %cond, !dbg !4794
  %conv7 = trunc i32 %or to i16, !dbg !4795
  store i16 %conv7, i16* %flags5, align 8, !dbg !4791
  %rc_proto = getelementptr inbounds %struct.lirc_scancode, %struct.lirc_scancode* %sc, i32 0, i32 2, !dbg !4791
  %13 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4796
  %last_protocol8 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %13, i32 0, i32 31, !dbg !4797
  %14 = load i32, i32* %last_protocol8, align 4, !dbg !4797
  %conv9 = trunc i32 %14 to i16, !dbg !4796
  store i16 %conv9, i16* %rc_proto, align 2, !dbg !4791
  %keycode = getelementptr inbounds %struct.lirc_scancode, %struct.lirc_scancode* %sc, i32 0, i32 3, !dbg !4791
  %15 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4798
  %keypressed = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %15, i32 0, i32 26, !dbg !4799
  %16 = load i8, i8* %keypressed, align 8, !dbg !4799
  %tobool10 = trunc i8 %16 to i1, !dbg !4799
  br i1 %tobool10, label %cond.true, label %cond.false, !dbg !4798

cond.true:                                        ; preds = %msecs_to_jiffies.exit
  %17 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4800
  %last_keycode = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %17, i32 0, i32 30, !dbg !4801
  %18 = load i32, i32* %last_keycode, align 8, !dbg !4801
  br label %cond.end, !dbg !4798

cond.false:                                       ; preds = %msecs_to_jiffies.exit
  br label %cond.end, !dbg !4798

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond12 = phi i32 [ %18, %cond.true ], [ 0, %cond.false ], !dbg !4798
  store i32 %cond12, i32* %keycode, align 4, !dbg !4791
  %scancode = getelementptr inbounds %struct.lirc_scancode, %struct.lirc_scancode* %sc, i32 0, i32 4, !dbg !4791
  %19 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4802
  %last_scancode = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %19, i32 0, i32 32, !dbg !4803
  %20 = load i64, i64* %last_scancode, align 8, !dbg !4803
  store i64 %20, i64* %scancode, align 8, !dbg !4791
  %21 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4804
  %allowed_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %21, i32 0, i32 16, !dbg !4806
  %22 = load i64, i64* %allowed_protocols, align 8, !dbg !4806
  %cmp = icmp ne i64 %22, 4194304, !dbg !4807
  br i1 %cmp, label %if.then, label %if.end, !dbg !4808

if.then:                                          ; preds = %cond.end
  %23 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4809
  call void @lirc_scancode_event(%struct.rc_dev* %23, %struct.lirc_scancode* %sc) #11, !dbg !4810
  br label %if.end, !dbg !4810

if.end:                                           ; preds = %if.then, %cond.end
  br label %do.body, !dbg !4811

do.body:                                          ; preds = %if.end
  br label %do.body14, !dbg !4812

do.body14:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4813, metadata !DIExpression()), !dbg !4815
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4816, metadata !DIExpression()), !dbg !4815
  %cmp15 = icmp eq i64* %__dummy, %__dummy2, !dbg !4815
  %conv16 = zext i1 %cmp15 to i32, !dbg !4815
  store i32 1, i32* %tmp, align 4, !dbg !4815
  %24 = load i32, i32* %tmp, align 4, !dbg !4815
  br label %do.body17, !dbg !4817

do.body17:                                        ; preds = %do.body14
  br label %do.body18, !dbg !4818

do.body18:                                        ; preds = %do.body17
  br label %do.body19, !dbg !4819

do.body19:                                        ; preds = %do.body18
  call void @llvm.dbg.declare(metadata i64* %__dummy20, metadata !4821, metadata !DIExpression()), !dbg !4824
  call void @llvm.dbg.declare(metadata i64* %__dummy221, metadata !4825, metadata !DIExpression()), !dbg !4824
  %cmp22 = icmp eq i64* %__dummy20, %__dummy221, !dbg !4824
  %conv23 = zext i1 %cmp22 to i32, !dbg !4824
  store i32 1, i32* %tmp24, align 4, !dbg !4824
  %25 = load i32, i32* %tmp24, align 4, !dbg !4824
  %call25 = call i64 @arch_local_irq_save() #11, !dbg !4826
  store i64 %call25, i64* %flags, align 8, !dbg !4826
  br label %do.end, !dbg !4826

do.end:                                           ; preds = %do.body19
  br label %do.end26, !dbg !4819

do.end26:                                         ; preds = %do.end
  br label %do.body27, !dbg !4818

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4827, !srcloc !4828
  br label %do.body28, !dbg !4827

do.body28:                                        ; preds = %do.body27
  %26 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4829
  %keylock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %26, i32 0, i32 25, !dbg !4829
  store %struct.spinlock* %keylock, %struct.spinlock** %lock.addr.i, align 8
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4830
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !4831
  %rlock.i = bitcast %union.anon* %28 to %struct.raw_spinlock*, !dbg !4831
  br label %do.end30, !dbg !4829

do.end30:                                         ; preds = %do.body28
  br label %do.end31, !dbg !4827

do.end31:                                         ; preds = %do.end30
  br label %do.end32, !dbg !4818

do.end32:                                         ; preds = %do.end31
  br label %do.end33, !dbg !4817

do.end33:                                         ; preds = %do.end32
  br label %do.end34, !dbg !4812

do.end34:                                         ; preds = %do.end33
  %29 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4832
  %last_scancode35 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %29, i32 0, i32 32, !dbg !4834
  %30 = load i64, i64* %last_scancode35, align 8, !dbg !4834
  %cmp36 = icmp ule i64 %30, 4294967295, !dbg !4835
  br i1 %cmp36, label %if.then38, label %if.end42, !dbg !4836

if.then38:                                        ; preds = %do.end34
  %31 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4837
  %input_dev = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %31, i32 0, i32 12, !dbg !4839
  %32 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !4839
  %33 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4840
  %last_scancode39 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %33, i32 0, i32 32, !dbg !4841
  %34 = load i64, i64* %last_scancode39, align 8, !dbg !4841
  %conv40 = trunc i64 %34 to i32, !dbg !4840
  call void @input_event(%struct.input_dev* %32, i32 4, i32 4, i32 %conv40) #11, !dbg !4842
  %35 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4843
  %input_dev41 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %35, i32 0, i32 12, !dbg !4844
  %36 = load %struct.input_dev*, %struct.input_dev** %input_dev41, align 8, !dbg !4844
  call void @input_sync(%struct.input_dev* %36) #11, !dbg !4845
  br label %if.end42, !dbg !4846

if.end42:                                         ; preds = %if.then38, %do.end34
  %37 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4847
  %keypressed43 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %37, i32 0, i32 26, !dbg !4849
  %38 = load i8, i8* %keypressed43, align 8, !dbg !4849
  %tobool44 = trunc i8 %38 to i1, !dbg !4849
  br i1 %tobool44, label %if.then45, label %if.end50, !dbg !4850

if.then45:                                        ; preds = %if.end42
  %39 = load volatile i64, i64* @jiffies, align 8, !dbg !4851
  %40 = load i32, i32* %timeout, align 4, !dbg !4853
  %conv46 = zext i32 %40 to i64, !dbg !4853
  %add47 = add i64 %39, %conv46, !dbg !4854
  %41 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4855
  %keyup_jiffies = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %41, i32 0, i32 27, !dbg !4856
  store i64 %add47, i64* %keyup_jiffies, align 8, !dbg !4857
  %42 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4858
  %timer_keyup = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %42, i32 0, i32 28, !dbg !4859
  %43 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4860
  %keyup_jiffies48 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %43, i32 0, i32 27, !dbg !4861
  %44 = load i64, i64* %keyup_jiffies48, align 8, !dbg !4861
  %call49 = call i32 @mod_timer(%struct.timer_list* %timer_keyup, i64 %44) #11, !dbg !4862
  br label %if.end50, !dbg !4863

if.end50:                                         ; preds = %if.then45, %if.end42
  %45 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4864
  %keylock51 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %45, i32 0, i32 25, !dbg !4865
  %46 = load i64, i64* %flags, align 8, !dbg !4866
  store %struct.spinlock* %keylock51, %struct.spinlock** %lock.addr.i52, align 8
  store i64 %46, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !211, metadata !4592, metadata !DIExpression()) #7, !dbg !4867
  call void @llvm.dbg.declare(metadata !211, metadata !4596, metadata !DIExpression()) #7, !dbg !4867
  store i32 1, i32* %tmp.i, align 4, !dbg !4867
  %47 = load i32, i32* %tmp.i, align 4, !dbg !4867
  call void @llvm.dbg.declare(metadata !211, metadata !4597, metadata !DIExpression()) #7, !dbg !4868
  call void @llvm.dbg.declare(metadata !211, metadata !4603, metadata !DIExpression()) #7, !dbg !4868
  store i32 1, i32* %tmp8.i, align 4, !dbg !4868
  %48 = load i32, i32* %tmp8.i, align 4, !dbg !4868
  %49 = load i64, i64* %flags.addr.i, align 8, !dbg !4869
  call void @arch_local_irq_restore(i64 %49) #13, !dbg !4869
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4870, !srcloc !4607
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i52, align 8, !dbg !4871
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !4871
  %rlock.i53 = bitcast %union.anon* %51 to %struct.raw_spinlock*, !dbg !4871
  ret void, !dbg !4872
}

; Function Attrs: noredzone
declare dso_local i64 @nsecs_to_jiffies(i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @repeat_period(i32 %protocol) #0 !dbg !4873 {
entry:
  %retval = alloca i32, align 4
  %protocol.addr = alloca i32, align 4
  store i32 %protocol, i32* %protocol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %protocol.addr, metadata !4876, metadata !DIExpression()), !dbg !4877
  %0 = load i32, i32* %protocol.addr, align 4, !dbg !4878
  %conv = sext i32 %0 to i64, !dbg !4878
  %cmp = icmp uge i64 %conv, 28, !dbg !4880
  br i1 %cmp, label %if.then, label %if.end, !dbg !4881

if.then:                                          ; preds = %entry
  store i32 100, i32* %retval, align 4, !dbg !4882
  br label %return, !dbg !4882

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %protocol.addr, align 4, !dbg !4883
  %idxprom = sext i32 %1 to i64, !dbg !4884
  %arrayidx = getelementptr [28 x %struct.anon.70], [28 x %struct.anon.70]* @protocols, i64 0, i64 %idxprom, !dbg !4884
  %repeat_period = getelementptr inbounds %struct.anon.70, %struct.anon.70* %arrayidx, i32 0, i32 1, !dbg !4885
  %2 = load i32, i32* %repeat_period, align 8, !dbg !4885
  store i32 %2, i32* %retval, align 4, !dbg !4886
  br label %return, !dbg !4886

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !4887
  ret i32 %3, !dbg !4887
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @lirc_scancode_event(%struct.rc_dev* %dev, %struct.lirc_scancode* %lsc) #0 !dbg !4888 {
entry:
  %dev.addr = alloca %struct.rc_dev*, align 8
  %lsc.addr = alloca %struct.lirc_scancode*, align 8
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !4892, metadata !DIExpression()), !dbg !4893
  store %struct.lirc_scancode* %lsc, %struct.lirc_scancode** %lsc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.lirc_scancode** %lsc.addr, metadata !4894, metadata !DIExpression()), !dbg !4895
  ret void, !dbg !4896
}

; Function Attrs: noredzone
declare dso_local void @input_event(%struct.input_dev*, i32, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_sync(%struct.input_dev* %dev) #0 !dbg !4897 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !4898, metadata !DIExpression()), !dbg !4899
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !4900
  call void @input_event(%struct.input_dev* %0, i32 0, i32 0, i32 0) #11, !dbg !4901
  ret void, !dbg !4902
}

; Function Attrs: noredzone
declare dso_local i32 @mod_timer(%struct.timer_list*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @rc_keydown(%struct.rc_dev* %dev, i32 %protocol, i64 %scancode, i8 zeroext %toggle) #0 !dbg !4903 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4744, metadata !DIExpression()), !dbg !4906
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !4521, metadata !DIExpression()), !dbg !4910
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4527, metadata !DIExpression()), !dbg !4912
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4529, metadata !DIExpression()), !dbg !4913
  %dev.addr = alloca %struct.rc_dev*, align 8
  %protocol.addr = alloca i32, align 4
  %scancode.addr = alloca i64, align 8
  %toggle.addr = alloca i8, align 1
  %flags = alloca i64, align 8
  %keycode = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !4920, metadata !DIExpression()), !dbg !4921
  store i32 %protocol, i32* %protocol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %protocol.addr, metadata !4922, metadata !DIExpression()), !dbg !4923
  store i64 %scancode, i64* %scancode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %scancode.addr, metadata !4924, metadata !DIExpression()), !dbg !4925
  store i8 %toggle, i8* %toggle.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %toggle.addr, metadata !4926, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !4928, metadata !DIExpression()), !dbg !4929
  call void @llvm.dbg.declare(metadata i32* %keycode, metadata !4930, metadata !DIExpression()), !dbg !4931
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4932
  %1 = load i64, i64* %scancode.addr, align 8, !dbg !4933
  %call = call i32 @rc_g_keycode_from_table(%struct.rc_dev* %0, i64 %1) #11, !dbg !4934
  store i32 %call, i32* %keycode, align 4, !dbg !4931
  br label %do.body, !dbg !4935

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !4936

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !4937, metadata !DIExpression()), !dbg !4939
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !4940, metadata !DIExpression()), !dbg !4939
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !4939
  %conv = zext i1 %cmp to i32, !dbg !4939
  store i32 1, i32* %tmp, align 4, !dbg !4939
  %2 = load i32, i32* %tmp, align 4, !dbg !4939
  br label %do.body2, !dbg !4941

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !4942

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !4943

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !4945, metadata !DIExpression()), !dbg !4948
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !4949, metadata !DIExpression()), !dbg !4948
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !4948
  %conv8 = zext i1 %cmp7 to i32, !dbg !4948
  store i32 1, i32* %tmp9, align 4, !dbg !4948
  %3 = load i32, i32* %tmp9, align 4, !dbg !4948
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !4950
  store i64 %call10, i64* %flags, align 8, !dbg !4950
  br label %do.end, !dbg !4950

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !4943

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !4942

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !4951, !srcloc !4952
  br label %do.body13, !dbg !4951

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4953
  %keylock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %4, i32 0, i32 25, !dbg !4953
  store %struct.spinlock* %keylock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4954
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !4955
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !4955
  br label %do.end15, !dbg !4953

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !4951

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !4942

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !4941

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !4936

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4956
  %8 = load i32, i32* %protocol.addr, align 4, !dbg !4957
  %9 = load i64, i64* %scancode.addr, align 8, !dbg !4958
  %10 = load i32, i32* %keycode, align 4, !dbg !4959
  %11 = load i8, i8* %toggle.addr, align 1, !dbg !4960
  call void @ir_do_keydown(%struct.rc_dev* %7, i32 %8, i64 %9, i32 %10, i8 zeroext %11) #11, !dbg !4961
  %12 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4962
  %keypressed = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %12, i32 0, i32 26, !dbg !4963
  %13 = load i8, i8* %keypressed, align 8, !dbg !4963
  %tobool = trunc i8 %13 to i1, !dbg !4963
  br i1 %tobool, label %if.then, label %if.end, !dbg !4964

if.then:                                          ; preds = %do.end19
  %14 = load volatile i64, i64* @jiffies, align 8, !dbg !4965
  %15 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4966
  %timeout = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %15, i32 0, i32 34, !dbg !4967
  %16 = load i32, i32* %timeout, align 4, !dbg !4967
  %conv20 = zext i32 %16 to i64, !dbg !4966
  %call21 = call i64 @nsecs_to_jiffies(i64 %conv20) #11, !dbg !4968
  %add = add i64 %14, %call21, !dbg !4969
  %17 = load i32, i32* %protocol.addr, align 4, !dbg !4970
  %call22 = call i32 @repeat_period(i32 %17) #11, !dbg !4971
  store i32 %call22, i32* %m.addr.i, align 4
  %18 = load i32, i32* %m.addr.i, align 4, !dbg !4972
  %19 = call i1 @llvm.is.constant.i32(i32 %18) #7, !dbg !4973
  br i1 %19, label %if.then.i, label %if.else.i, !dbg !4974

if.then.i:                                        ; preds = %if.then
  %20 = load i32, i32* %m.addr.i, align 4, !dbg !4975
  %cmp.i = icmp slt i32 %20, 0, !dbg !4976
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4977

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !4978
  br label %msecs_to_jiffies.exit, !dbg !4978

if.end.i:                                         ; preds = %if.then.i
  %21 = load i32, i32* %m.addr.i, align 4, !dbg !4979
  %call.i = call i64 @_msecs_to_jiffies(i32 %21) #13, !dbg !4980
  store i64 %call.i, i64* %retval.i, align 8, !dbg !4981
  br label %msecs_to_jiffies.exit, !dbg !4981

if.else.i:                                        ; preds = %if.then
  %22 = load i32, i32* %m.addr.i, align 4, !dbg !4982
  %call2.i = call i64 @__msecs_to_jiffies(i32 %22) #13, !dbg !4983
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !4984
  br label %msecs_to_jiffies.exit, !dbg !4984

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %23 = load i64, i64* %retval.i, align 8, !dbg !4985
  %add24 = add i64 %add, %23, !dbg !4986
  %24 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4987
  %keyup_jiffies = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %24, i32 0, i32 27, !dbg !4988
  store i64 %add24, i64* %keyup_jiffies, align 8, !dbg !4989
  %25 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4990
  %timer_keyup = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %25, i32 0, i32 28, !dbg !4991
  %26 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4992
  %keyup_jiffies25 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %26, i32 0, i32 27, !dbg !4993
  %27 = load i64, i64* %keyup_jiffies25, align 8, !dbg !4993
  %call26 = call i32 @mod_timer(%struct.timer_list* %timer_keyup, i64 %27) #11, !dbg !4994
  br label %if.end, !dbg !4995

if.end:                                           ; preds = %msecs_to_jiffies.exit, %do.end19
  %28 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !4996
  %keylock27 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %28, i32 0, i32 25, !dbg !4997
  %29 = load i64, i64* %flags, align 8, !dbg !4998
  store %struct.spinlock* %keylock27, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %29, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !211, metadata !4592, metadata !DIExpression()) #7, !dbg !4999
  call void @llvm.dbg.declare(metadata !211, metadata !4596, metadata !DIExpression()) #7, !dbg !4999
  store i32 1, i32* %tmp.i, align 4, !dbg !4999
  %30 = load i32, i32* %tmp.i, align 4, !dbg !4999
  call void @llvm.dbg.declare(metadata !211, metadata !4597, metadata !DIExpression()) #7, !dbg !5000
  call void @llvm.dbg.declare(metadata !211, metadata !4603, metadata !DIExpression()) #7, !dbg !5000
  store i32 1, i32* %tmp8.i, align 4, !dbg !5000
  %31 = load i32, i32* %tmp8.i, align 4, !dbg !5000
  %32 = load i64, i64* %flags.addr.i, align 8, !dbg !5001
  call void @arch_local_irq_restore(i64 %32) #13, !dbg !5001
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5002, !srcloc !4607
  %33 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !5003
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0, !dbg !5003
  %rlock.i29 = bitcast %union.anon* %34 to %struct.raw_spinlock*, !dbg !5003
  ret void, !dbg !5004
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ir_do_keydown(%struct.rc_dev* %dev, i32 %protocol, i64 %scancode, i32 %keycode, i8 zeroext %toggle) #0 !dbg !5005 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4744, metadata !DIExpression()), !dbg !5008
  %dev.addr = alloca %struct.rc_dev*, align 8
  %protocol.addr = alloca i32, align 4
  %scancode.addr = alloca i64, align 8
  %keycode.addr = alloca i32, align 4
  %toggle.addr = alloca i8, align 1
  %new_event = alloca i8, align 1
  %sc = alloca %struct.lirc_scancode, align 8
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !5012, metadata !DIExpression()), !dbg !5013
  store i32 %protocol, i32* %protocol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %protocol.addr, metadata !5014, metadata !DIExpression()), !dbg !5015
  store i64 %scancode, i64* %scancode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %scancode.addr, metadata !5016, metadata !DIExpression()), !dbg !5017
  store i32 %keycode, i32* %keycode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %keycode.addr, metadata !5018, metadata !DIExpression()), !dbg !5019
  store i8 %toggle, i8* %toggle.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %toggle.addr, metadata !5020, metadata !DIExpression()), !dbg !5021
  call void @llvm.dbg.declare(metadata i8* %new_event, metadata !5022, metadata !DIExpression()), !dbg !5023
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5024
  %keypressed = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %0, i32 0, i32 26, !dbg !5025
  %1 = load i8, i8* %keypressed, align 8, !dbg !5025
  %tobool = trunc i8 %1 to i1, !dbg !5025
  br i1 %tobool, label %lor.lhs.false, label %lor.end, !dbg !5026

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5027
  %last_protocol = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %2, i32 0, i32 31, !dbg !5028
  %3 = load i32, i32* %last_protocol, align 4, !dbg !5028
  %4 = load i32, i32* %protocol.addr, align 4, !dbg !5029
  %cmp = icmp ne i32 %3, %4, !dbg !5030
  br i1 %cmp, label %lor.end, label %lor.lhs.false1, !dbg !5031

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %5 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5032
  %last_scancode = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %5, i32 0, i32 32, !dbg !5033
  %6 = load i64, i64* %last_scancode, align 8, !dbg !5033
  %7 = load i64, i64* %scancode.addr, align 8, !dbg !5034
  %cmp2 = icmp ne i64 %6, %7, !dbg !5035
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !5036

lor.rhs:                                          ; preds = %lor.lhs.false1
  %8 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5037
  %last_toggle = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %8, i32 0, i32 33, !dbg !5038
  %9 = load i8, i8* %last_toggle, align 8, !dbg !5038
  %conv = zext i8 %9 to i32, !dbg !5037
  %10 = load i8, i8* %toggle.addr, align 1, !dbg !5039
  %conv3 = zext i8 %10 to i32, !dbg !5039
  %cmp4 = icmp ne i32 %conv, %conv3, !dbg !5040
  br label %lor.end, !dbg !5036

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false1, %lor.lhs.false, %entry
  %11 = phi i1 [ true, %lor.lhs.false1 ], [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp4, %lor.rhs ]
  %frombool = zext i1 %11 to i8, !dbg !5023
  store i8 %frombool, i8* %new_event, align 1, !dbg !5023
  call void @llvm.dbg.declare(metadata %struct.lirc_scancode* %sc, metadata !5041, metadata !DIExpression()), !dbg !5042
  %timestamp = getelementptr inbounds %struct.lirc_scancode, %struct.lirc_scancode* %sc, i32 0, i32 0, !dbg !5043
  store i64 0, i64* %timestamp, align 8, !dbg !5043
  %flags = getelementptr inbounds %struct.lirc_scancode, %struct.lirc_scancode* %sc, i32 0, i32 1, !dbg !5043
  %12 = load i8, i8* %toggle.addr, align 1, !dbg !5044
  %conv6 = zext i8 %12 to i32, !dbg !5044
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !5044
  %13 = zext i1 %tobool7 to i64, !dbg !5044
  %cond = select i1 %tobool7, i32 1, i32 0, !dbg !5044
  %conv8 = trunc i32 %cond to i16, !dbg !5044
  store i16 %conv8, i16* %flags, align 8, !dbg !5043
  %rc_proto = getelementptr inbounds %struct.lirc_scancode, %struct.lirc_scancode* %sc, i32 0, i32 2, !dbg !5043
  %14 = load i32, i32* %protocol.addr, align 4, !dbg !5045
  %conv9 = trunc i32 %14 to i16, !dbg !5045
  store i16 %conv9, i16* %rc_proto, align 2, !dbg !5043
  %keycode10 = getelementptr inbounds %struct.lirc_scancode, %struct.lirc_scancode* %sc, i32 0, i32 3, !dbg !5043
  %15 = load i32, i32* %keycode.addr, align 4, !dbg !5046
  store i32 %15, i32* %keycode10, align 4, !dbg !5043
  %scancode11 = getelementptr inbounds %struct.lirc_scancode, %struct.lirc_scancode* %sc, i32 0, i32 4, !dbg !5043
  %16 = load i64, i64* %scancode.addr, align 8, !dbg !5047
  store i64 %16, i64* %scancode11, align 8, !dbg !5043
  %17 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5048
  %allowed_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %17, i32 0, i32 16, !dbg !5050
  %18 = load i64, i64* %allowed_protocols, align 8, !dbg !5050
  %cmp12 = icmp ne i64 %18, 4194304, !dbg !5051
  br i1 %cmp12, label %if.then, label %if.end, !dbg !5052

if.then:                                          ; preds = %lor.end
  %19 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5053
  call void @lirc_scancode_event(%struct.rc_dev* %19, %struct.lirc_scancode* %sc) #11, !dbg !5054
  br label %if.end, !dbg !5054

if.end:                                           ; preds = %if.then, %lor.end
  %20 = load i8, i8* %new_event, align 1, !dbg !5055
  %tobool14 = trunc i8 %20 to i1, !dbg !5055
  br i1 %tobool14, label %land.lhs.true, label %if.end20, !dbg !5057

land.lhs.true:                                    ; preds = %if.end
  %21 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5058
  %keypressed16 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %21, i32 0, i32 26, !dbg !5059
  %22 = load i8, i8* %keypressed16, align 8, !dbg !5059
  %tobool17 = trunc i8 %22 to i1, !dbg !5059
  br i1 %tobool17, label %if.then19, label %if.end20, !dbg !5060

if.then19:                                        ; preds = %land.lhs.true
  %23 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5061
  call void @ir_do_keyup(%struct.rc_dev* %23, i1 zeroext false) #11, !dbg !5062
  br label %if.end20, !dbg !5062

if.end20:                                         ; preds = %if.then19, %land.lhs.true, %if.end
  %24 = load i64, i64* %scancode.addr, align 8, !dbg !5063
  %cmp21 = icmp ule i64 %24, 4294967295, !dbg !5065
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !5066

if.then23:                                        ; preds = %if.end20
  %25 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5067
  %input_dev = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %25, i32 0, i32 12, !dbg !5068
  %26 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !5068
  %27 = load i64, i64* %scancode.addr, align 8, !dbg !5069
  %conv24 = trunc i64 %27 to i32, !dbg !5069
  call void @input_event(%struct.input_dev* %26, i32 4, i32 4, i32 %conv24) #11, !dbg !5070
  br label %if.end25, !dbg !5070

if.end25:                                         ; preds = %if.then23, %if.end20
  %28 = load i32, i32* %protocol.addr, align 4, !dbg !5071
  %29 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5072
  %last_protocol26 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %29, i32 0, i32 31, !dbg !5073
  store i32 %28, i32* %last_protocol26, align 4, !dbg !5074
  %30 = load i64, i64* %scancode.addr, align 8, !dbg !5075
  %31 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5076
  %last_scancode27 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %31, i32 0, i32 32, !dbg !5077
  store i64 %30, i64* %last_scancode27, align 8, !dbg !5078
  %32 = load i8, i8* %toggle.addr, align 1, !dbg !5079
  %33 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5080
  %last_toggle28 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %33, i32 0, i32 33, !dbg !5081
  store i8 %32, i8* %last_toggle28, align 8, !dbg !5082
  %34 = load i32, i32* %keycode.addr, align 4, !dbg !5083
  %35 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5084
  %last_keycode = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %35, i32 0, i32 30, !dbg !5085
  store i32 %34, i32* %last_keycode, align 8, !dbg !5086
  %36 = load i8, i8* %new_event, align 1, !dbg !5087
  %tobool29 = trunc i8 %36 to i1, !dbg !5087
  br i1 %tobool29, label %land.lhs.true31, label %if.end37, !dbg !5089

land.lhs.true31:                                  ; preds = %if.end25
  %37 = load i32, i32* %keycode.addr, align 4, !dbg !5090
  %cmp32 = icmp ne i32 %37, 0, !dbg !5091
  br i1 %cmp32, label %if.then34, label %if.end37, !dbg !5092

if.then34:                                        ; preds = %land.lhs.true31
  %38 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5093
  %keypressed35 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %38, i32 0, i32 26, !dbg !5095
  store i8 1, i8* %keypressed35, align 8, !dbg !5096
  %39 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5097
  %input_dev36 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %39, i32 0, i32 12, !dbg !5098
  %40 = load %struct.input_dev*, %struct.input_dev** %input_dev36, align 8, !dbg !5098
  %41 = load i32, i32* %keycode.addr, align 4, !dbg !5099
  call void @input_report_key(%struct.input_dev* %40, i32 %41, i32 1) #11, !dbg !5100
  %42 = load %struct.led_trigger*, %struct.led_trigger** @led_feedback, align 8, !dbg !5101
  call void @led_trigger_event(%struct.led_trigger* %42, i32 255) #11, !dbg !5102
  br label %if.end37, !dbg !5103

if.end37:                                         ; preds = %if.then34, %land.lhs.true31, %if.end25
  %43 = load i8, i8* %new_event, align 1, !dbg !5104
  %tobool38 = trunc i8 %43 to i1, !dbg !5104
  br i1 %tobool38, label %if.end64, label %land.lhs.true39, !dbg !5105

land.lhs.true39:                                  ; preds = %if.end37
  %44 = load i32, i32* %keycode.addr, align 4, !dbg !5106
  %cmp40 = icmp ne i32 %44, 0, !dbg !5107
  br i1 %cmp40, label %land.lhs.true42, label %if.end64, !dbg !5108

land.lhs.true42:                                  ; preds = %land.lhs.true39
  %45 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5109
  %allowed_protocols43 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %45, i32 0, i32 16, !dbg !5110
  %46 = load i64, i64* %allowed_protocols43, align 8, !dbg !5110
  %cmp44 = icmp eq i64 %46, 4194304, !dbg !5111
  br i1 %cmp44, label %land.lhs.true46, label %if.end64, !dbg !5112

land.lhs.true46:                                  ; preds = %land.lhs.true42
  %47 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5113
  %timer_repeat = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %47, i32 0, i32 29, !dbg !5114
  %call = call i32 @timer_pending(%struct.timer_list* %timer_repeat) #11, !dbg !5115
  %tobool47 = icmp ne i32 %call, 0, !dbg !5115
  br i1 %tobool47, label %if.end64, label %land.lhs.true48, !dbg !5116

land.lhs.true48:                                  ; preds = %land.lhs.true46
  %48 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5117
  %input_dev49 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %48, i32 0, i32 12, !dbg !5118
  %49 = load %struct.input_dev*, %struct.input_dev** %input_dev49, align 8, !dbg !5118
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %49, i32 0, i32 24, !dbg !5119
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 1, !dbg !5117
  %50 = load i32, i32* %arrayidx, align 4, !dbg !5117
  %tobool50 = icmp ne i32 %50, 0, !dbg !5117
  br i1 %tobool50, label %land.lhs.true51, label %if.end64, !dbg !5120

land.lhs.true51:                                  ; preds = %land.lhs.true48
  %51 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5121
  %input_dev52 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %51, i32 0, i32 12, !dbg !5122
  %52 = load %struct.input_dev*, %struct.input_dev** %input_dev52, align 8, !dbg !5122
  %rep53 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %52, i32 0, i32 24, !dbg !5123
  %arrayidx54 = getelementptr [2 x i32], [2 x i32]* %rep53, i64 0, i64 0, !dbg !5121
  %53 = load i32, i32* %arrayidx54, align 8, !dbg !5121
  %tobool55 = icmp ne i32 %53, 0, !dbg !5121
  br i1 %tobool55, label %if.end64, label %if.then56, !dbg !5124

if.then56:                                        ; preds = %land.lhs.true51
  %54 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5125
  %input_dev57 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %54, i32 0, i32 12, !dbg !5126
  %55 = load %struct.input_dev*, %struct.input_dev** %input_dev57, align 8, !dbg !5126
  %56 = load i32, i32* %keycode.addr, align 4, !dbg !5127
  call void @input_event(%struct.input_dev* %55, i32 1, i32 %56, i32 2) #11, !dbg !5128
  %57 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5129
  %timer_repeat58 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %57, i32 0, i32 29, !dbg !5130
  %58 = load volatile i64, i64* @jiffies, align 8, !dbg !5131
  %59 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5132
  %input_dev59 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %59, i32 0, i32 12, !dbg !5133
  %60 = load %struct.input_dev*, %struct.input_dev** %input_dev59, align 8, !dbg !5133
  %rep60 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %60, i32 0, i32 24, !dbg !5134
  %arrayidx61 = getelementptr [2 x i32], [2 x i32]* %rep60, i64 0, i64 1, !dbg !5132
  %61 = load i32, i32* %arrayidx61, align 4, !dbg !5132
  store i32 %61, i32* %m.addr.i, align 4
  %62 = load i32, i32* %m.addr.i, align 4, !dbg !5135
  %63 = call i1 @llvm.is.constant.i32(i32 %62) #7, !dbg !5136
  br i1 %63, label %if.then.i, label %if.else.i, !dbg !5137

if.then.i:                                        ; preds = %if.then56
  %64 = load i32, i32* %m.addr.i, align 4, !dbg !5138
  %cmp.i = icmp slt i32 %64, 0, !dbg !5139
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5140

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !5141
  br label %msecs_to_jiffies.exit, !dbg !5141

if.end.i:                                         ; preds = %if.then.i
  %65 = load i32, i32* %m.addr.i, align 4, !dbg !5142
  %call.i = call i64 @_msecs_to_jiffies(i32 %65) #13, !dbg !5143
  store i64 %call.i, i64* %retval.i, align 8, !dbg !5144
  br label %msecs_to_jiffies.exit, !dbg !5144

if.else.i:                                        ; preds = %if.then56
  %66 = load i32, i32* %m.addr.i, align 4, !dbg !5145
  %call2.i = call i64 @__msecs_to_jiffies(i32 %66) #13, !dbg !5146
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !5147
  br label %msecs_to_jiffies.exit, !dbg !5147

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %67 = load i64, i64* %retval.i, align 8, !dbg !5148
  %add = add i64 %58, %67, !dbg !5149
  %call63 = call i32 @mod_timer(%struct.timer_list* %timer_repeat58, i64 %add) #11, !dbg !5150
  br label %if.end64, !dbg !5151

if.end64:                                         ; preds = %msecs_to_jiffies.exit, %land.lhs.true51, %land.lhs.true48, %land.lhs.true46, %land.lhs.true42, %land.lhs.true39, %if.end37
  %68 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5152
  %input_dev65 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %68, i32 0, i32 12, !dbg !5153
  %69 = load %struct.input_dev*, %struct.input_dev** %input_dev65, align 8, !dbg !5153
  call void @input_sync(%struct.input_dev* %69) #11, !dbg !5154
  ret void, !dbg !5155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @rc_keydown_notimeout(%struct.rc_dev* %dev, i32 %protocol, i64 %scancode, i8 zeroext %toggle) #0 !dbg !5156 {
entry:
  %lock.addr.i21 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i21, metadata !4521, metadata !DIExpression()), !dbg !5157
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4527, metadata !DIExpression()), !dbg !5159
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4529, metadata !DIExpression()), !dbg !5160
  %dev.addr = alloca %struct.rc_dev*, align 8
  %protocol.addr = alloca i32, align 4
  %scancode.addr = alloca i64, align 8
  %toggle.addr = alloca i8, align 1
  %flags = alloca i64, align 8
  %keycode = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !5167, metadata !DIExpression()), !dbg !5168
  store i32 %protocol, i32* %protocol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %protocol.addr, metadata !5169, metadata !DIExpression()), !dbg !5170
  store i64 %scancode, i64* %scancode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %scancode.addr, metadata !5171, metadata !DIExpression()), !dbg !5172
  store i8 %toggle, i8* %toggle.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %toggle.addr, metadata !5173, metadata !DIExpression()), !dbg !5174
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5175, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.declare(metadata i32* %keycode, metadata !5177, metadata !DIExpression()), !dbg !5178
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5179
  %1 = load i64, i64* %scancode.addr, align 8, !dbg !5180
  %call = call i32 @rc_g_keycode_from_table(%struct.rc_dev* %0, i64 %1) #11, !dbg !5181
  store i32 %call, i32* %keycode, align 4, !dbg !5178
  br label %do.body, !dbg !5182

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5183

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5184, metadata !DIExpression()), !dbg !5186
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5187, metadata !DIExpression()), !dbg !5186
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5186
  %conv = zext i1 %cmp to i32, !dbg !5186
  store i32 1, i32* %tmp, align 4, !dbg !5186
  %2 = load i32, i32* %tmp, align 4, !dbg !5186
  br label %do.body2, !dbg !5188

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !5189

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !5190

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !5192, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !5196, metadata !DIExpression()), !dbg !5195
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !5195
  %conv8 = zext i1 %cmp7 to i32, !dbg !5195
  store i32 1, i32* %tmp9, align 4, !dbg !5195
  %3 = load i32, i32* %tmp9, align 4, !dbg !5195
  %call10 = call i64 @arch_local_irq_save() #11, !dbg !5197
  store i64 %call10, i64* %flags, align 8, !dbg !5197
  br label %do.end, !dbg !5197

do.end:                                           ; preds = %do.body4
  br label %do.end11, !dbg !5190

do.end11:                                         ; preds = %do.end
  br label %do.body12, !dbg !5189

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5198, !srcloc !5199
  br label %do.body13, !dbg !5198

do.body13:                                        ; preds = %do.body12
  %4 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5200
  %keylock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %4, i32 0, i32 25, !dbg !5200
  store %struct.spinlock* %keylock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5201
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !5202
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !5202
  br label %do.end15, !dbg !5200

do.end15:                                         ; preds = %do.body13
  br label %do.end16, !dbg !5198

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !5189

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !5188

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !5183

do.end19:                                         ; preds = %do.end18
  %7 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5203
  %8 = load i32, i32* %protocol.addr, align 4, !dbg !5204
  %9 = load i64, i64* %scancode.addr, align 8, !dbg !5205
  %10 = load i32, i32* %keycode, align 4, !dbg !5206
  %11 = load i8, i8* %toggle.addr, align 1, !dbg !5207
  call void @ir_do_keydown(%struct.rc_dev* %7, i32 %8, i64 %9, i32 %10, i8 zeroext %11) #11, !dbg !5208
  %12 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !5209
  %keylock20 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %12, i32 0, i32 25, !dbg !5210
  %13 = load i64, i64* %flags, align 8, !dbg !5211
  store %struct.spinlock* %keylock20, %struct.spinlock** %lock.addr.i21, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !211, metadata !4592, metadata !DIExpression()) #7, !dbg !5212
  call void @llvm.dbg.declare(metadata !211, metadata !4596, metadata !DIExpression()) #7, !dbg !5212
  store i32 1, i32* %tmp.i, align 4, !dbg !5212
  %14 = load i32, i32* %tmp.i, align 4, !dbg !5212
  call void @llvm.dbg.declare(metadata !211, metadata !4597, metadata !DIExpression()) #7, !dbg !5213
  call void @llvm.dbg.declare(metadata !211, metadata !4603, metadata !DIExpression()) #7, !dbg !5213
  store i32 1, i32* %tmp8.i, align 4, !dbg !5213
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !5213
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !5214
  call void @arch_local_irq_restore(i64 %16) #13, !dbg !5214
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5215, !srcloc !4607
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i21, align 8, !dbg !5216
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !5216
  %rlock.i22 = bitcast %union.anon* %18 to %struct.raw_spinlock*, !dbg !5216
  ret void, !dbg !5217
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @rc_validate_scancode(i32 %proto, i32 %scancode) #0 !dbg !5218 {
entry:
  %retval = alloca i1, align 1
  %proto.addr = alloca i32, align 4
  %scancode.addr = alloca i32, align 4
  store i32 %proto, i32* %proto.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %proto.addr, metadata !5221, metadata !DIExpression()), !dbg !5222
  store i32 %scancode, i32* %scancode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %scancode.addr, metadata !5223, metadata !DIExpression()), !dbg !5224
  %0 = load i32, i32* %proto.addr, align 4, !dbg !5225
  switch i32 %0, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb2
    i32 19, label %sw.bb10
    i32 18, label %sw.bb15
  ], !dbg !5226

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* %scancode.addr, align 4, !dbg !5227
  %shr = lshr i32 %1, 16, !dbg !5230
  %2 = load i32, i32* %scancode.addr, align 4, !dbg !5231
  %shr1 = lshr i32 %2, 8, !dbg !5232
  %neg = xor i32 %shr1, -1, !dbg !5233
  %xor = xor i32 %shr, %neg, !dbg !5234
  %and = and i32 %xor, 255, !dbg !5235
  %cmp = icmp eq i32 %and, 0, !dbg !5236
  br i1 %cmp, label %if.then, label %if.end, !dbg !5237

if.then:                                          ; preds = %sw.bb
  store i1 false, i1* %retval, align 1, !dbg !5238
  br label %return, !dbg !5238

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !5239

sw.bb2:                                           ; preds = %entry
  %3 = load i32, i32* %scancode.addr, align 4, !dbg !5240
  %shr3 = lshr i32 %3, 8, !dbg !5242
  %4 = load i32, i32* %scancode.addr, align 4, !dbg !5243
  %neg4 = xor i32 %4, -1, !dbg !5244
  %xor5 = xor i32 %shr3, %neg4, !dbg !5245
  %and6 = and i32 %xor5, 255, !dbg !5246
  %cmp7 = icmp eq i32 %and6, 0, !dbg !5247
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5248

if.then8:                                         ; preds = %sw.bb2
  store i1 false, i1* %retval, align 1, !dbg !5249
  br label %return, !dbg !5249

if.end9:                                          ; preds = %sw.bb2
  br label %sw.epilog, !dbg !5250

sw.bb10:                                          ; preds = %entry
  %5 = load i32, i32* %scancode.addr, align 4, !dbg !5251
  %and11 = and i32 %5, -65536, !dbg !5253
  %cmp12 = icmp ne i32 %and11, -2146500608, !dbg !5254
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !5255

if.then13:                                        ; preds = %sw.bb10
  store i1 false, i1* %retval, align 1, !dbg !5256
  br label %return, !dbg !5256

if.end14:                                         ; preds = %sw.bb10
  br label %sw.epilog, !dbg !5257

sw.bb15:                                          ; preds = %entry
  %6 = load i32, i32* %scancode.addr, align 4, !dbg !5258
  %and16 = and i32 %6, -65536, !dbg !5260
  %cmp17 = icmp eq i32 %and16, -2146500608, !dbg !5261
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !5262

if.then18:                                        ; preds = %sw.bb15
  store i1 false, i1* %retval, align 1, !dbg !5263
  br label %return, !dbg !5263

if.end19:                                         ; preds = %sw.bb15
  br label %sw.epilog, !dbg !5264

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !5265

sw.epilog:                                        ; preds = %sw.default, %if.end19, %if.end14, %if.end9, %if.end
  store i1 true, i1* %retval, align 1, !dbg !5266
  br label %return, !dbg !5266

return:                                           ; preds = %sw.epilog, %if.then18, %if.then13, %if.then8, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !5267
  ret i1 %7, !dbg !5267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @rc_open(%struct.rc_dev* %rdev) #0 !dbg !5268 {
entry:
  %retval = alloca i32, align 4
  %rdev.addr = alloca %struct.rc_dev*, align 8
  %rval = alloca i32, align 4
  store %struct.rc_dev* %rdev, %struct.rc_dev** %rdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %rdev.addr, metadata !5269, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.declare(metadata i32* %rval, metadata !5271, metadata !DIExpression()), !dbg !5272
  store i32 0, i32* %rval, align 4, !dbg !5272
  %0 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5273
  %tobool = icmp ne %struct.rc_dev* %0, null, !dbg !5273
  br i1 %tobool, label %if.end, label %if.then, !dbg !5275

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5276
  br label %return, !dbg !5276

if.end:                                           ; preds = %entry
  %1 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5277
  %lock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %1, i32 0, i32 9, !dbg !5278
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !5279
  %2 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5280
  %registered = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %2, i32 0, i32 39, !dbg !5282
  %3 = load i8, i8* %registered, align 8, !dbg !5282
  %tobool1 = trunc i8 %3 to i1, !dbg !5282
  br i1 %tobool1, label %if.else, label %if.then2, !dbg !5283

if.then2:                                         ; preds = %if.end
  store i32 -19, i32* %rval, align 4, !dbg !5284
  br label %if.end12, !dbg !5286

if.else:                                          ; preds = %if.end
  %4 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5287
  %users = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %4, i32 0, i32 23, !dbg !5290
  %5 = load i32, i32* %users, align 8, !dbg !5291
  %inc = add i32 %5, 1, !dbg !5291
  store i32 %inc, i32* %users, align 8, !dbg !5291
  %tobool3 = icmp ne i32 %5, 0, !dbg !5291
  br i1 %tobool3, label %if.end7, label %land.lhs.true, !dbg !5292

land.lhs.true:                                    ; preds = %if.else
  %6 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5293
  %open = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 41, !dbg !5294
  %7 = load i32 (%struct.rc_dev*)*, i32 (%struct.rc_dev*)** %open, align 8, !dbg !5294
  %tobool4 = icmp ne i32 (%struct.rc_dev*)* %7, null, !dbg !5293
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !5295

if.then5:                                         ; preds = %land.lhs.true
  %8 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5296
  %open6 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %8, i32 0, i32 41, !dbg !5297
  %9 = load i32 (%struct.rc_dev*)*, i32 (%struct.rc_dev*)** %open6, align 8, !dbg !5297
  %10 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5298
  %call = call i32 %9(%struct.rc_dev* %10) #11, !dbg !5296
  store i32 %call, i32* %rval, align 4, !dbg !5299
  br label %if.end7, !dbg !5300

if.end7:                                          ; preds = %if.then5, %land.lhs.true, %if.else
  %11 = load i32, i32* %rval, align 4, !dbg !5301
  %tobool8 = icmp ne i32 %11, 0, !dbg !5301
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !5303

if.then9:                                         ; preds = %if.end7
  %12 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5304
  %users10 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %12, i32 0, i32 23, !dbg !5305
  %13 = load i32, i32* %users10, align 8, !dbg !5306
  %dec = add i32 %13, -1, !dbg !5306
  store i32 %dec, i32* %users10, align 8, !dbg !5306
  br label %if.end11, !dbg !5304

if.end11:                                         ; preds = %if.then9, %if.end7
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then2
  %14 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5307
  %lock13 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %14, i32 0, i32 9, !dbg !5308
  call void @mutex_unlock(%struct.mutex* %lock13) #11, !dbg !5309
  %15 = load i32, i32* %rval, align 4, !dbg !5310
  store i32 %15, i32* %retval, align 4, !dbg !5311
  br label %return, !dbg !5311

return:                                           ; preds = %if.end12, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !5312
  ret i32 %16, !dbg !5312
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @rc_close(%struct.rc_dev* %rdev) #0 !dbg !5313 {
entry:
  %rdev.addr = alloca %struct.rc_dev*, align 8
  store %struct.rc_dev* %rdev, %struct.rc_dev** %rdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %rdev.addr, metadata !5314, metadata !DIExpression()), !dbg !5315
  %0 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5316
  %tobool = icmp ne %struct.rc_dev* %0, null, !dbg !5316
  br i1 %tobool, label %if.then, label %if.end8, !dbg !5318

if.then:                                          ; preds = %entry
  %1 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5319
  %lock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %1, i32 0, i32 9, !dbg !5321
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !5322
  %2 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5323
  %users = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %2, i32 0, i32 23, !dbg !5325
  %3 = load i32, i32* %users, align 8, !dbg !5326
  %dec = add i32 %3, -1, !dbg !5326
  store i32 %dec, i32* %users, align 8, !dbg !5326
  %tobool1 = icmp ne i32 %dec, 0, !dbg !5326
  br i1 %tobool1, label %if.end, label %land.lhs.true, !dbg !5327

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5328
  %close = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %4, i32 0, i32 42, !dbg !5329
  %5 = load void (%struct.rc_dev*)*, void (%struct.rc_dev*)** %close, align 8, !dbg !5329
  %tobool2 = icmp ne void (%struct.rc_dev*)* %5, null, !dbg !5328
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !5330

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5331
  %registered = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 39, !dbg !5332
  %7 = load i8, i8* %registered, align 8, !dbg !5332
  %tobool4 = trunc i8 %7 to i1, !dbg !5332
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !5333

if.then5:                                         ; preds = %land.lhs.true3
  %8 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5334
  %close6 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %8, i32 0, i32 42, !dbg !5335
  %9 = load void (%struct.rc_dev*)*, void (%struct.rc_dev*)** %close6, align 8, !dbg !5335
  %10 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5336
  call void %9(%struct.rc_dev* %10) #11, !dbg !5334
  br label %if.end, !dbg !5334

if.end:                                           ; preds = %if.then5, %land.lhs.true3, %land.lhs.true, %if.then
  %11 = load %struct.rc_dev*, %struct.rc_dev** %rdev.addr, align 8, !dbg !5337
  %lock7 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %11, i32 0, i32 9, !dbg !5338
  call void @mutex_unlock(%struct.mutex* %lock7) #11, !dbg !5339
  br label %if.end8, !dbg !5340

if.end8:                                          ; preds = %if.end, %entry
  ret void, !dbg !5341
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @ir_raw_load_modules(i64* %protocols) #0 !dbg !5342 {
entry:
  %protocols.addr = alloca i64*, align 8
  %available = alloca i64, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store i64* %protocols, i64** %protocols.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %protocols.addr, metadata !5345, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.declare(metadata i64* %available, metadata !5347, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5349, metadata !DIExpression()), !dbg !5350
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5351, metadata !DIExpression()), !dbg !5352
  store i32 0, i32* %i, align 4, !dbg !5353
  br label %for.cond, !dbg !5355

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5356
  %conv = sext i32 %0 to i64, !dbg !5356
  %cmp = icmp ult i64 %conv, 17, !dbg !5358
  br i1 %cmp, label %for.body, label %for.end, !dbg !5359

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !5360
  %idxprom = sext i32 %1 to i64, !dbg !5363
  %arrayidx = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom, !dbg !5363
  %type = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx, i32 0, i32 0, !dbg !5364
  %2 = load i64, i64* %type, align 8, !dbg !5364
  %cmp2 = icmp eq i64 %2, 0, !dbg !5365
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !5366

lor.lhs.false:                                    ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !5367
  %idxprom4 = sext i32 %3 to i64, !dbg !5368
  %arrayidx5 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom4, !dbg !5368
  %type6 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx5, i32 0, i32 0, !dbg !5369
  %4 = load i64, i64* %type6, align 8, !dbg !5369
  %and = and i64 %4, 3, !dbg !5370
  %tobool = icmp ne i64 %and, 0, !dbg !5370
  br i1 %tobool, label %if.then, label %if.end, !dbg !5371

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !5372

if.end:                                           ; preds = %lor.lhs.false
  %call = call i64 @ir_raw_get_allowed_protocols() #11, !dbg !5373
  store i64 %call, i64* %available, align 8, !dbg !5374
  %5 = load i64*, i64** %protocols.addr, align 8, !dbg !5375
  %6 = load i64, i64* %5, align 8, !dbg !5377
  %7 = load i32, i32* %i, align 4, !dbg !5378
  %idxprom7 = sext i32 %7 to i64, !dbg !5379
  %arrayidx8 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom7, !dbg !5379
  %type9 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx8, i32 0, i32 0, !dbg !5380
  %8 = load i64, i64* %type9, align 8, !dbg !5380
  %and10 = and i64 %6, %8, !dbg !5381
  %9 = load i64, i64* %available, align 8, !dbg !5382
  %neg = xor i64 %9, -1, !dbg !5383
  %and11 = and i64 %and10, %neg, !dbg !5384
  %tobool12 = icmp ne i64 %and11, 0, !dbg !5384
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !5385

if.then13:                                        ; preds = %if.end
  br label %for.inc, !dbg !5386

if.end14:                                         ; preds = %if.end
  %10 = load i32, i32* %i, align 4, !dbg !5387
  %idxprom15 = sext i32 %10 to i64, !dbg !5389
  %arrayidx16 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom15, !dbg !5389
  %module_name = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx16, i32 0, i32 2, !dbg !5390
  %11 = load i8*, i8** %module_name, align 8, !dbg !5390
  %tobool17 = icmp ne i8* %11, null, !dbg !5389
  br i1 %tobool17, label %if.end27, label %if.then18, !dbg !5391

if.then18:                                        ; preds = %if.end14
  %12 = load i32, i32* %i, align 4, !dbg !5392
  %idxprom19 = sext i32 %12 to i64, !dbg !5392
  %arrayidx20 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom19, !dbg !5392
  %name = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx20, i32 0, i32 1, !dbg !5392
  %13 = load i8*, i8** %name, align 8, !dbg !5392
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i8* %13) #12, !dbg !5392
  %14 = load i32, i32* %i, align 4, !dbg !5394
  %idxprom22 = sext i32 %14 to i64, !dbg !5395
  %arrayidx23 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom22, !dbg !5395
  %type24 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx23, i32 0, i32 0, !dbg !5396
  %15 = load i64, i64* %type24, align 8, !dbg !5396
  %neg25 = xor i64 %15, -1, !dbg !5397
  %16 = load i64*, i64** %protocols.addr, align 8, !dbg !5398
  %17 = load i64, i64* %16, align 8, !dbg !5399
  %and26 = and i64 %17, %neg25, !dbg !5399
  store i64 %and26, i64* %16, align 8, !dbg !5399
  br label %for.inc, !dbg !5400

if.end27:                                         ; preds = %if.end14
  %18 = load i32, i32* %i, align 4, !dbg !5401
  %idxprom28 = sext i32 %18 to i64, !dbg !5402
  %arrayidx29 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom28, !dbg !5402
  %module_name30 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx29, i32 0, i32 2, !dbg !5403
  %19 = load i8*, i8** %module_name30, align 8, !dbg !5403
  %call31 = call i32 (i8*, ...) @request_module(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %19) #11, !dbg !5404
  store i32 %call31, i32* %ret, align 4, !dbg !5405
  %20 = load i32, i32* %ret, align 4, !dbg !5406
  %cmp32 = icmp slt i32 %20, 0, !dbg !5408
  br i1 %cmp32, label %if.then34, label %if.end44, !dbg !5409

if.then34:                                        ; preds = %if.end27
  %21 = load i32, i32* %i, align 4, !dbg !5410
  %idxprom35 = sext i32 %21 to i64, !dbg !5410
  %arrayidx36 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom35, !dbg !5410
  %module_name37 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx36, i32 0, i32 2, !dbg !5410
  %22 = load i8*, i8** %module_name37, align 8, !dbg !5410
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0), i8* %22) #12, !dbg !5410
  %23 = load i32, i32* %i, align 4, !dbg !5412
  %idxprom39 = sext i32 %23 to i64, !dbg !5413
  %arrayidx40 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom39, !dbg !5413
  %type41 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx40, i32 0, i32 0, !dbg !5414
  %24 = load i64, i64* %type41, align 8, !dbg !5414
  %neg42 = xor i64 %24, -1, !dbg !5415
  %25 = load i64*, i64** %protocols.addr, align 8, !dbg !5416
  %26 = load i64, i64* %25, align 8, !dbg !5417
  %and43 = and i64 %26, %neg42, !dbg !5417
  store i64 %and43, i64* %25, align 8, !dbg !5417
  br label %for.inc, !dbg !5418

if.end44:                                         ; preds = %if.end27
  call void @msleep(i32 20) #11, !dbg !5419
  %call45 = call i64 @ir_raw_get_allowed_protocols() #11, !dbg !5420
  store i64 %call45, i64* %available, align 8, !dbg !5421
  %27 = load i64*, i64** %protocols.addr, align 8, !dbg !5422
  %28 = load i64, i64* %27, align 8, !dbg !5424
  %29 = load i32, i32* %i, align 4, !dbg !5425
  %idxprom46 = sext i32 %29 to i64, !dbg !5426
  %arrayidx47 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom46, !dbg !5426
  %type48 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx47, i32 0, i32 0, !dbg !5427
  %30 = load i64, i64* %type48, align 8, !dbg !5427
  %and49 = and i64 %28, %30, !dbg !5428
  %31 = load i64, i64* %available, align 8, !dbg !5429
  %neg50 = xor i64 %31, -1, !dbg !5430
  %and51 = and i64 %and49, %neg50, !dbg !5431
  %tobool52 = icmp ne i64 %and51, 0, !dbg !5431
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !5432

if.then53:                                        ; preds = %if.end44
  br label %for.inc, !dbg !5433

if.end54:                                         ; preds = %if.end44
  %32 = load i32, i32* %i, align 4, !dbg !5434
  %idxprom55 = sext i32 %32 to i64, !dbg !5434
  %arrayidx56 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom55, !dbg !5434
  %module_name57 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx56, i32 0, i32 2, !dbg !5434
  %33 = load i8*, i8** %module_name57, align 8, !dbg !5434
  %34 = load i32, i32* %i, align 4, !dbg !5434
  %idxprom58 = sext i32 %34 to i64, !dbg !5434
  %arrayidx59 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom58, !dbg !5434
  %name60 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx59, i32 0, i32 1, !dbg !5434
  %35 = load i8*, i8** %name60, align 8, !dbg !5434
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i8* %33, i8* %35) #12, !dbg !5434
  %36 = load i32, i32* %i, align 4, !dbg !5435
  %idxprom62 = sext i32 %36 to i64, !dbg !5436
  %arrayidx63 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom62, !dbg !5436
  %type64 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx63, i32 0, i32 0, !dbg !5437
  %37 = load i64, i64* %type64, align 8, !dbg !5437
  %neg65 = xor i64 %37, -1, !dbg !5438
  %38 = load i64*, i64** %protocols.addr, align 8, !dbg !5439
  %39 = load i64, i64* %38, align 8, !dbg !5440
  %and66 = and i64 %39, %neg65, !dbg !5440
  store i64 %and66, i64* %38, align 8, !dbg !5440
  br label %for.inc, !dbg !5441

for.inc:                                          ; preds = %if.end54, %if.then53, %if.then34, %if.then18, %if.then13, %if.then
  %40 = load i32, i32* %i, align 4, !dbg !5442
  %inc = add i32 %40, 1, !dbg !5442
  store i32 %inc, i32* %i, align 4, !dbg !5442
  br label %for.cond, !dbg !5443, !llvm.loop !5444

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5446
}

; Function Attrs: noredzone
declare dso_local i64 @ir_raw_get_allowed_protocols() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @request_module(i8* %name, ...) #0 !dbg !5447 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5451, metadata !DIExpression()), !dbg !5452
  ret i32 -38, !dbg !5453
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.rc_dev* @rc_allocate_device(i32 %type) #0 !dbg !4258 {
entry:
  %lock.addr.i27 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i27, metadata !4529, metadata !DIExpression()), !dbg !5454
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4529, metadata !DIExpression()), !dbg !5459
  %retval = alloca %struct.rc_dev*, align 8
  %type.addr = alloca i32, align 4
  %dev = alloca %struct.rc_dev*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral16 = alloca %struct.spinlock, align 1
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !5462, metadata !DIExpression()), !dbg !5463
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev, metadata !5464, metadata !DIExpression()), !dbg !5465
  %call = call i8* @kzalloc(i64 1192, i32 3264) #11, !dbg !5466
  %0 = bitcast i8* %call to %struct.rc_dev*, !dbg !5466
  store %struct.rc_dev* %0, %struct.rc_dev** %dev, align 8, !dbg !5467
  %1 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5468
  %tobool = icmp ne %struct.rc_dev* %1, null, !dbg !5468
  br i1 %tobool, label %if.end, label %if.then, !dbg !5470

if.then:                                          ; preds = %entry
  store %struct.rc_dev* null, %struct.rc_dev** %retval, align 8, !dbg !5471
  br label %return, !dbg !5471

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %type.addr, align 4, !dbg !5472
  %cmp = icmp ne i32 %2, 2, !dbg !5473
  br i1 %cmp, label %if.then1, label %if.end19, !dbg !5474

if.then1:                                         ; preds = %if.end
  %call2 = call %struct.input_dev* @input_allocate_device() #11, !dbg !5475
  %3 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5476
  %input_dev = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %3, i32 0, i32 12, !dbg !5477
  store %struct.input_dev* %call2, %struct.input_dev** %input_dev, align 8, !dbg !5478
  %4 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5479
  %input_dev3 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %4, i32 0, i32 12, !dbg !5481
  %5 = load %struct.input_dev*, %struct.input_dev** %input_dev3, align 8, !dbg !5481
  %tobool4 = icmp ne %struct.input_dev* %5, null, !dbg !5479
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !5482

if.then5:                                         ; preds = %if.then1
  %6 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5483
  %7 = bitcast %struct.rc_dev* %6 to i8*, !dbg !5483
  call void @kfree(i8* %7) #11, !dbg !5485
  store %struct.rc_dev* null, %struct.rc_dev** %retval, align 8, !dbg !5486
  br label %return, !dbg !5486

if.end6:                                          ; preds = %if.then1
  %8 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5487
  %input_dev7 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %8, i32 0, i32 12, !dbg !5488
  %9 = load %struct.input_dev*, %struct.input_dev** %input_dev7, align 8, !dbg !5488
  %getkeycode = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 19, !dbg !5489
  store i32 (%struct.input_dev*, %struct.input_keymap_entry*)* @ir_getkeycode, i32 (%struct.input_dev*, %struct.input_keymap_entry*)** %getkeycode, align 8, !dbg !5490
  %10 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5491
  %input_dev8 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %10, i32 0, i32 12, !dbg !5492
  %11 = load %struct.input_dev*, %struct.input_dev** %input_dev8, align 8, !dbg !5492
  %setkeycode = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 18, !dbg !5493
  store i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)* @ir_setkeycode, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)** %setkeycode, align 8, !dbg !5494
  %12 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5495
  %input_dev9 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %12, i32 0, i32 12, !dbg !5496
  %13 = load %struct.input_dev*, %struct.input_dev** %input_dev9, align 8, !dbg !5496
  %14 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5497
  %15 = bitcast %struct.rc_dev* %14 to i8*, !dbg !5497
  call void @input_set_drvdata(%struct.input_dev* %13, i8* %15) #11, !dbg !5498
  %16 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5499
  %timeout = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %16, i32 0, i32 34, !dbg !5500
  store i32 125000, i32* %timeout, align 4, !dbg !5501
  %17 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5502
  %timer_keyup = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %17, i32 0, i32 28, !dbg !5502
  call void @init_timer_key(%struct.timer_list* %timer_keyup, void (%struct.timer_list*)* @ir_timer_keyup, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !5502
  %18 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5503
  %timer_repeat = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %18, i32 0, i32 29, !dbg !5503
  call void @init_timer_key(%struct.timer_list* %timer_repeat, void (%struct.timer_list*)* @ir_timer_repeat, i32 0, i8* null, %struct.lock_class_key* null) #11, !dbg !5503
  br label %do.body, !dbg !5504

do.body:                                          ; preds = %if.end6
  %19 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5505
  %rc_map = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %19, i32 0, i32 8, !dbg !5505
  %lock = getelementptr inbounds %struct.rc_map, %struct.rc_map* %rc_map, i32 0, i32 6, !dbg !5505
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5506
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !5507
  %rlock.i = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !5507
  %22 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5505
  %rc_map11 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %22, i32 0, i32 8, !dbg !5505
  %lock12 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %rc_map11, i32 0, i32 6, !dbg !5505
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !5505
  %rlock = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !5505
  %24 = bitcast %struct.spinlock* %lock12 to i8*, !dbg !5505
  %25 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !5505
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 1 %25, i64 0, i1 false), !dbg !5505
  br label %do.end, !dbg !5505

do.end:                                           ; preds = %do.body
  br label %do.body13, !dbg !5508

do.body13:                                        ; preds = %do.end
  %26 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5509
  %keylock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %26, i32 0, i32 25, !dbg !5509
  store %struct.spinlock* %keylock, %struct.spinlock** %lock.addr.i27, align 8
  %27 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i27, align 8, !dbg !5510
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0, !dbg !5511
  %rlock.i28 = bitcast %union.anon* %28 to %struct.raw_spinlock*, !dbg !5511
  %29 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5509
  %keylock15 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %29, i32 0, i32 25, !dbg !5509
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral16, i32 0, i32 0, !dbg !5509
  %rlock17 = bitcast %union.anon* %30 to %struct.raw_spinlock*, !dbg !5509
  %31 = bitcast %struct.spinlock* %keylock15 to i8*, !dbg !5509
  %32 = bitcast %struct.spinlock* %.compoundliteral16 to i8*, !dbg !5509
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 1 %32, i64 0, i1 false), !dbg !5509
  br label %do.end18, !dbg !5509

do.end18:                                         ; preds = %do.body13
  br label %if.end19, !dbg !5512

if.end19:                                         ; preds = %do.end18, %if.end
  br label %do.body20, !dbg !5513

do.body20:                                        ; preds = %if.end19
  %33 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5514
  %lock21 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %33, i32 0, i32 9, !dbg !5514
  call void @__mutex_init(%struct.mutex* %lock21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), %struct.lock_class_key* @rc_allocate_device.__key) #11, !dbg !5514
  br label %do.end22, !dbg !5514

do.end22:                                         ; preds = %do.body20
  %34 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5516
  %dev23 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %34, i32 0, i32 0, !dbg !5517
  %type24 = getelementptr inbounds %struct.device, %struct.device* %dev23, i32 0, i32 4, !dbg !5518
  store %struct.device_type* @rc_dev_type, %struct.device_type** %type24, align 8, !dbg !5519
  %35 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5520
  %dev25 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %35, i32 0, i32 0, !dbg !5521
  %class = getelementptr inbounds %struct.device, %struct.device* %dev25, i32 0, i32 29, !dbg !5522
  store %struct.class* @rc_class, %struct.class** %class, align 8, !dbg !5523
  %36 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5524
  %dev26 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %36, i32 0, i32 0, !dbg !5525
  call void @device_initialize(%struct.device* %dev26) #11, !dbg !5526
  %37 = load i32, i32* %type.addr, align 4, !dbg !5527
  %38 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5528
  %driver_type = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %38, i32 0, i32 13, !dbg !5529
  store i32 %37, i32* %driver_type, align 8, !dbg !5530
  call void @__module_get(%struct.module* null) #11, !dbg !5531
  %39 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !5532
  store %struct.rc_dev* %39, %struct.rc_dev** %retval, align 8, !dbg !5533
  br label %return, !dbg !5533

return:                                           ; preds = %do.end22, %if.then5, %if.then
  %40 = load %struct.rc_dev*, %struct.rc_dev** %retval, align 8, !dbg !5534
  ret %struct.rc_dev* %40, !dbg !5534
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !5535 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5538, metadata !DIExpression()), !dbg !5542
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5548, metadata !DIExpression()), !dbg !5549
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5550, metadata !DIExpression()), !dbg !5551
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5552, metadata !DIExpression()), !dbg !5553
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5554, metadata !DIExpression()), !dbg !5558
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5560, metadata !DIExpression()), !dbg !5564
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5566, metadata !DIExpression()), !dbg !5570
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5575, metadata !DIExpression()), !dbg !5576
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5577, metadata !DIExpression()), !dbg !5578
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5579, metadata !DIExpression()), !dbg !5580
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5581, metadata !DIExpression()), !dbg !5582
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5583, metadata !DIExpression()), !dbg !5584
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5585, metadata !DIExpression()), !dbg !5586
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5587, metadata !DIExpression()), !dbg !5588
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5589, metadata !DIExpression()), !dbg !5590
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5591, metadata !DIExpression()), !dbg !5592
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5593, metadata !DIExpression()), !dbg !5594
  %0 = load i64, i64* %size.addr, align 8, !dbg !5595
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5596
  %or = or i32 %1, 256, !dbg !5597
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5598
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !5599
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5600

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5601
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5602
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5603

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5604
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5605
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5606
  %call.i.i = call i32 @get_order(i64 %7) #14, !dbg !5607
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5584
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5608
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5609
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5610
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5611
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5612
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5613
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !5614
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5614
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5614
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5614
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !5614
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5615
  br label %kmalloc.exit, !dbg !5615

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5616
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5617
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5617
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5619

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5620
  br label %kmalloc_index.exit.i, !dbg !5620

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5621
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5623
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5624

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5625
  br label %kmalloc_index.exit.i, !dbg !5625

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5626
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5628
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5629

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5630
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5631
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5632

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5633
  br label %kmalloc_index.exit.i, !dbg !5633

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5634
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5636
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5637

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5638
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5639
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5640

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5641
  br label %kmalloc_index.exit.i, !dbg !5641

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5642
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5644
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5645

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5646
  br label %kmalloc_index.exit.i, !dbg !5646

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5647
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5649
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5650

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5651
  br label %kmalloc_index.exit.i, !dbg !5651

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5652
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5654
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5655

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5656
  br label %kmalloc_index.exit.i, !dbg !5656

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5657
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5659
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5660

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5661
  br label %kmalloc_index.exit.i, !dbg !5661

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5662
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5664
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5665

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5666
  br label %kmalloc_index.exit.i, !dbg !5666

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5667
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5669
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5670

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5671
  br label %kmalloc_index.exit.i, !dbg !5671

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5672
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5674
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5675

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5676
  br label %kmalloc_index.exit.i, !dbg !5676

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5677
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5679
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5680

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5681
  br label %kmalloc_index.exit.i, !dbg !5681

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5682
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5684
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5685

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5686
  br label %kmalloc_index.exit.i, !dbg !5686

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5687
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5689
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5690

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5691
  br label %kmalloc_index.exit.i, !dbg !5691

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5692
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5694
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5695

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5696
  br label %kmalloc_index.exit.i, !dbg !5696

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5697
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5699
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5700

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5701
  br label %kmalloc_index.exit.i, !dbg !5701

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5702
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5704
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5705

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5706
  br label %kmalloc_index.exit.i, !dbg !5706

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5707
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5709
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5710

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5711
  br label %kmalloc_index.exit.i, !dbg !5711

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5712
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5714
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5715

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5716
  br label %kmalloc_index.exit.i, !dbg !5716

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5717
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5719
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5720

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5721
  br label %kmalloc_index.exit.i, !dbg !5721

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5722
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5724
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5725

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5726
  br label %kmalloc_index.exit.i, !dbg !5726

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5727
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5729
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5730

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5731
  br label %kmalloc_index.exit.i, !dbg !5731

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5732
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5734
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5735

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5736
  br label %kmalloc_index.exit.i, !dbg !5736

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5737
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5739
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5740

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5741
  br label %kmalloc_index.exit.i, !dbg !5741

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5742
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5744
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5745

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5746
  br label %kmalloc_index.exit.i, !dbg !5746

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5747
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5749
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5750

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5751
  br label %kmalloc_index.exit.i, !dbg !5751

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5752
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5754
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5755

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5756
  br label %kmalloc_index.exit.i, !dbg !5756

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5757
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5759
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5760

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5761
  br label %kmalloc_index.exit.i, !dbg !5761

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !5762, !srcloc !5765
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #7, !dbg !5766, !srcloc !5769
  unreachable, !dbg !5770

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5771
  store i32 %45, i32* %index.i, align 4, !dbg !5772
  %46 = load i32, i32* %index.i, align 4, !dbg !5773
  %tobool.i = icmp ne i32 %46, 0, !dbg !5773
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5775

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5776
  br label %kmalloc.exit, !dbg !5776

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5777
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5778
  %and.i.i = and i32 %48, 17, !dbg !5778
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5778
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5778
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5778
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5778
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5780

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5781
  br label %kmalloc_type.exit.i, !dbg !5781

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5782
  %and2.i.i = and i32 %49, 1, !dbg !5783
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5782
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5782
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5782
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5784
  br label %kmalloc_type.exit.i, !dbg !5784

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5785
  %idxprom.i = zext i32 %51 to i64, !dbg !5786
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5786
  %52 = load i32, i32* %index.i, align 4, !dbg !5787
  %idxprom6.i = zext i32 %52 to i64, !dbg !5786
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5786
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5786
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5788
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5789
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5790
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5791
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !5792
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5792
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5792
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5792
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !5792
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5553
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5793
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5794
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5795
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5796
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !5797
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5798
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5799
  store i8* %62, i8** %retval.i, align 8, !dbg !5800
  br label %kmalloc.exit, !dbg !5800

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5801
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5802
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !5803
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5803
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5803
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5803
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !5803
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5804
  br label %kmalloc.exit, !dbg !5804

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5805
  ret i8* %65, !dbg !5806
}

; Function Attrs: noredzone
declare dso_local %struct.input_dev* @input_allocate_device() #3

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ir_getkeycode(%struct.input_dev* %idev, %struct.input_keymap_entry* %ke) #0 !dbg !5807 {
entry:
  %lock.addr.i54 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i54, metadata !4521, metadata !DIExpression()), !dbg !5808
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4527, metadata !DIExpression()), !dbg !5810
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4529, metadata !DIExpression()), !dbg !5811
  %idev.addr = alloca %struct.input_dev*, align 8
  %ke.addr = alloca %struct.input_keymap_entry*, align 8
  %rdev = alloca %struct.rc_dev*, align 8
  %rc_map = alloca %struct.rc_map*, align 8
  %entry2 = alloca %struct.rc_map_table*, align 8
  %flags = alloca i64, align 8
  %index = alloca i32, align 4
  %scancode = alloca i64, align 8
  %retval3 = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.input_dev* %idev, %struct.input_dev** %idev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %idev.addr, metadata !5818, metadata !DIExpression()), !dbg !5819
  store %struct.input_keymap_entry* %ke, %struct.input_keymap_entry** %ke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_keymap_entry** %ke.addr, metadata !5820, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %rdev, metadata !5822, metadata !DIExpression()), !dbg !5823
  %0 = load %struct.input_dev*, %struct.input_dev** %idev.addr, align 8, !dbg !5824
  %call = call i8* @input_get_drvdata(%struct.input_dev* %0) #11, !dbg !5825
  %1 = bitcast i8* %call to %struct.rc_dev*, !dbg !5825
  store %struct.rc_dev* %1, %struct.rc_dev** %rdev, align 8, !dbg !5823
  call void @llvm.dbg.declare(metadata %struct.rc_map** %rc_map, metadata !5826, metadata !DIExpression()), !dbg !5827
  %2 = load %struct.rc_dev*, %struct.rc_dev** %rdev, align 8, !dbg !5828
  %rc_map1 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %2, i32 0, i32 8, !dbg !5829
  store %struct.rc_map* %rc_map1, %struct.rc_map** %rc_map, align 8, !dbg !5827
  call void @llvm.dbg.declare(metadata %struct.rc_map_table** %entry2, metadata !5830, metadata !DIExpression()), !dbg !5831
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5832, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5834, metadata !DIExpression()), !dbg !5835
  call void @llvm.dbg.declare(metadata i64* %scancode, metadata !5836, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.declare(metadata i32* %retval3, metadata !5838, metadata !DIExpression()), !dbg !5839
  br label %do.body, !dbg !5840

do.body:                                          ; preds = %entry
  br label %do.body4, !dbg !5841

do.body4:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5842, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5845, metadata !DIExpression()), !dbg !5844
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5844
  %conv = zext i1 %cmp to i32, !dbg !5844
  store i32 1, i32* %tmp, align 4, !dbg !5844
  %3 = load i32, i32* %tmp, align 4, !dbg !5844
  br label %do.body5, !dbg !5846

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !5847

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !5848

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !5850, metadata !DIExpression()), !dbg !5853
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !5854, metadata !DIExpression()), !dbg !5853
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !5853
  %conv11 = zext i1 %cmp10 to i32, !dbg !5853
  store i32 1, i32* %tmp12, align 4, !dbg !5853
  %4 = load i32, i32* %tmp12, align 4, !dbg !5853
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !5855
  store i64 %call13, i64* %flags, align 8, !dbg !5855
  br label %do.end, !dbg !5855

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !5848

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !5847

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5856, !srcloc !5857
  br label %do.body16, !dbg !5856

do.body16:                                        ; preds = %do.body15
  %5 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !5858
  %lock = getelementptr inbounds %struct.rc_map, %struct.rc_map* %5, i32 0, i32 6, !dbg !5858
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5859
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !5860
  %rlock.i = bitcast %union.anon* %7 to %struct.raw_spinlock*, !dbg !5860
  br label %do.end18, !dbg !5858

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !5856

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !5847

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !5846

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !5841

do.end22:                                         ; preds = %do.end21
  %8 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !5861
  %flags23 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %8, i32 0, i32 0, !dbg !5863
  %9 = load i8, i8* %flags23, align 4, !dbg !5863
  %conv24 = zext i8 %9 to i32, !dbg !5861
  %and = and i32 %conv24, 1, !dbg !5864
  %tobool = icmp ne i32 %and, 0, !dbg !5864
  br i1 %tobool, label %if.then, label %if.else, !dbg !5865

if.then:                                          ; preds = %do.end22
  %10 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !5866
  %index25 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %10, i32 0, i32 2, !dbg !5868
  %11 = load i16, i16* %index25, align 2, !dbg !5868
  %conv26 = zext i16 %11 to i32, !dbg !5866
  store i32 %conv26, i32* %index, align 4, !dbg !5869
  br label %if.end31, !dbg !5870

if.else:                                          ; preds = %do.end22
  %12 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !5871
  %call27 = call i32 @scancode_to_u64(%struct.input_keymap_entry* %12, i64* %scancode) #11, !dbg !5873
  store i32 %call27, i32* %retval3, align 4, !dbg !5874
  %13 = load i32, i32* %retval3, align 4, !dbg !5875
  %tobool28 = icmp ne i32 %13, 0, !dbg !5875
  br i1 %tobool28, label %if.then29, label %if.end, !dbg !5877

if.then29:                                        ; preds = %if.else
  br label %out, !dbg !5878

if.end:                                           ; preds = %if.else
  %14 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !5879
  %15 = load i64, i64* %scancode, align 8, !dbg !5880
  %call30 = call i32 @ir_lookup_by_scancode(%struct.rc_map* %14, i64 %15) #11, !dbg !5881
  store i32 %call30, i32* %index, align 4, !dbg !5882
  br label %if.end31

if.end31:                                         ; preds = %if.end, %if.then
  %16 = load i32, i32* %index, align 4, !dbg !5883
  %17 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !5885
  %len = getelementptr inbounds %struct.rc_map, %struct.rc_map* %17, i32 0, i32 2, !dbg !5886
  %18 = load i32, i32* %len, align 4, !dbg !5886
  %cmp32 = icmp ult i32 %16, %18, !dbg !5887
  br i1 %cmp32, label %if.then34, label %if.else41, !dbg !5888

if.then34:                                        ; preds = %if.end31
  %19 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !5889
  %scan = getelementptr inbounds %struct.rc_map, %struct.rc_map* %19, i32 0, i32 0, !dbg !5891
  %20 = load %struct.rc_map_table*, %struct.rc_map_table** %scan, align 8, !dbg !5891
  %21 = load i32, i32* %index, align 4, !dbg !5892
  %idxprom = zext i32 %21 to i64, !dbg !5889
  %arrayidx = getelementptr %struct.rc_map_table, %struct.rc_map_table* %20, i64 %idxprom, !dbg !5889
  store %struct.rc_map_table* %arrayidx, %struct.rc_map_table** %entry2, align 8, !dbg !5893
  %22 = load i32, i32* %index, align 4, !dbg !5894
  %conv35 = trunc i32 %22 to i16, !dbg !5894
  %23 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !5895
  %index36 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %23, i32 0, i32 2, !dbg !5896
  store i16 %conv35, i16* %index36, align 2, !dbg !5897
  %24 = load %struct.rc_map_table*, %struct.rc_map_table** %entry2, align 8, !dbg !5898
  %keycode = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %24, i32 0, i32 1, !dbg !5899
  %25 = load i32, i32* %keycode, align 8, !dbg !5899
  %26 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !5900
  %keycode37 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %26, i32 0, i32 3, !dbg !5901
  store i32 %25, i32* %keycode37, align 4, !dbg !5902
  %27 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !5903
  %len38 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %27, i32 0, i32 1, !dbg !5904
  store i8 8, i8* %len38, align 1, !dbg !5905
  %28 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !5906
  %scancode39 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %28, i32 0, i32 4, !dbg !5907
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %scancode39, i64 0, i64 0, !dbg !5908
  %29 = load %struct.rc_map_table*, %struct.rc_map_table** %entry2, align 8, !dbg !5909
  %scancode40 = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %29, i32 0, i32 0, !dbg !5910
  %30 = bitcast i64* %scancode40 to i8*, !dbg !5908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 8 %30, i64 8, i1 false), !dbg !5908
  br label %if.end52, !dbg !5911

if.else41:                                        ; preds = %if.end31
  %31 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !5912
  %flags42 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %31, i32 0, i32 0, !dbg !5914
  %32 = load i8, i8* %flags42, align 4, !dbg !5914
  %conv43 = zext i8 %32 to i32, !dbg !5912
  %and44 = and i32 %conv43, 1, !dbg !5915
  %tobool45 = icmp ne i32 %and44, 0, !dbg !5915
  br i1 %tobool45, label %if.else50, label %if.then46, !dbg !5916

if.then46:                                        ; preds = %if.else41
  %33 = load i32, i32* %index, align 4, !dbg !5917
  %conv47 = trunc i32 %33 to i16, !dbg !5917
  %34 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !5919
  %index48 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %34, i32 0, i32 2, !dbg !5920
  store i16 %conv47, i16* %index48, align 2, !dbg !5921
  %35 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !5922
  %keycode49 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %35, i32 0, i32 3, !dbg !5923
  store i32 0, i32* %keycode49, align 4, !dbg !5924
  br label %if.end51, !dbg !5925

if.else50:                                        ; preds = %if.else41
  store i32 -22, i32* %retval3, align 4, !dbg !5926
  br label %out, !dbg !5928

if.end51:                                         ; preds = %if.then46
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then34
  store i32 0, i32* %retval3, align 4, !dbg !5929
  br label %out, !dbg !5930

out:                                              ; preds = %if.end52, %if.else50, %if.then29
  call void @llvm.dbg.label(metadata !5931), !dbg !5932
  %36 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !5933
  %lock53 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %36, i32 0, i32 6, !dbg !5934
  %37 = load i64, i64* %flags, align 8, !dbg !5935
  store %struct.spinlock* %lock53, %struct.spinlock** %lock.addr.i54, align 8
  store i64 %37, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !211, metadata !4592, metadata !DIExpression()) #7, !dbg !5936
  call void @llvm.dbg.declare(metadata !211, metadata !4596, metadata !DIExpression()) #7, !dbg !5936
  store i32 1, i32* %tmp.i, align 4, !dbg !5936
  %38 = load i32, i32* %tmp.i, align 4, !dbg !5936
  call void @llvm.dbg.declare(metadata !211, metadata !4597, metadata !DIExpression()) #7, !dbg !5937
  call void @llvm.dbg.declare(metadata !211, metadata !4603, metadata !DIExpression()) #7, !dbg !5937
  store i32 1, i32* %tmp8.i, align 4, !dbg !5937
  %39 = load i32, i32* %tmp8.i, align 4, !dbg !5937
  %40 = load i64, i64* %flags.addr.i, align 8, !dbg !5938
  call void @arch_local_irq_restore(i64 %40) #13, !dbg !5938
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5939, !srcloc !4607
  %41 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i54, align 8, !dbg !5940
  %42 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %41, i32 0, i32 0, !dbg !5940
  %rlock.i55 = bitcast %union.anon* %42 to %struct.raw_spinlock*, !dbg !5940
  %43 = load i32, i32* %retval3, align 4, !dbg !5941
  ret i32 %43, !dbg !5942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ir_setkeycode(%struct.input_dev* %idev, %struct.input_keymap_entry* %ke, i32* %old_keycode) #0 !dbg !5943 {
entry:
  %lock.addr.i42 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i42, metadata !4521, metadata !DIExpression()), !dbg !5944
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4527, metadata !DIExpression()), !dbg !5946
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4529, metadata !DIExpression()), !dbg !5947
  %idev.addr = alloca %struct.input_dev*, align 8
  %ke.addr = alloca %struct.input_keymap_entry*, align 8
  %old_keycode.addr = alloca i32*, align 8
  %rdev = alloca %struct.rc_dev*, align 8
  %rc_map = alloca %struct.rc_map*, align 8
  %index = alloca i32, align 4
  %scancode = alloca i64, align 8
  %retval2 = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.input_dev* %idev, %struct.input_dev** %idev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %idev.addr, metadata !5954, metadata !DIExpression()), !dbg !5955
  store %struct.input_keymap_entry* %ke, %struct.input_keymap_entry** %ke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_keymap_entry** %ke.addr, metadata !5956, metadata !DIExpression()), !dbg !5957
  store i32* %old_keycode, i32** %old_keycode.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %old_keycode.addr, metadata !5958, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %rdev, metadata !5960, metadata !DIExpression()), !dbg !5961
  %0 = load %struct.input_dev*, %struct.input_dev** %idev.addr, align 8, !dbg !5962
  %call = call i8* @input_get_drvdata(%struct.input_dev* %0) #11, !dbg !5963
  %1 = bitcast i8* %call to %struct.rc_dev*, !dbg !5963
  store %struct.rc_dev* %1, %struct.rc_dev** %rdev, align 8, !dbg !5961
  call void @llvm.dbg.declare(metadata %struct.rc_map** %rc_map, metadata !5964, metadata !DIExpression()), !dbg !5965
  %2 = load %struct.rc_dev*, %struct.rc_dev** %rdev, align 8, !dbg !5966
  %rc_map1 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %2, i32 0, i32 8, !dbg !5967
  store %struct.rc_map* %rc_map1, %struct.rc_map** %rc_map, align 8, !dbg !5965
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5968, metadata !DIExpression()), !dbg !5969
  call void @llvm.dbg.declare(metadata i64* %scancode, metadata !5970, metadata !DIExpression()), !dbg !5971
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !5972, metadata !DIExpression()), !dbg !5973
  store i32 0, i32* %retval2, align 4, !dbg !5973
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5974, metadata !DIExpression()), !dbg !5975
  br label %do.body, !dbg !5976

do.body:                                          ; preds = %entry
  br label %do.body3, !dbg !5977

do.body3:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5978, metadata !DIExpression()), !dbg !5980
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5981, metadata !DIExpression()), !dbg !5980
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !5980
  %conv = zext i1 %cmp to i32, !dbg !5980
  store i32 1, i32* %tmp, align 4, !dbg !5980
  %3 = load i32, i32* %tmp, align 4, !dbg !5980
  br label %do.body4, !dbg !5982

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !5983

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !5984

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !5986, metadata !DIExpression()), !dbg !5989
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !5990, metadata !DIExpression()), !dbg !5989
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !5989
  %conv10 = zext i1 %cmp9 to i32, !dbg !5989
  store i32 1, i32* %tmp11, align 4, !dbg !5989
  %4 = load i32, i32* %tmp11, align 4, !dbg !5989
  %call12 = call i64 @arch_local_irq_save() #11, !dbg !5991
  store i64 %call12, i64* %flags, align 8, !dbg !5991
  br label %do.end, !dbg !5991

do.end:                                           ; preds = %do.body6
  br label %do.end13, !dbg !5984

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !5983

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5992, !srcloc !5993
  br label %do.body15, !dbg !5992

do.body15:                                        ; preds = %do.body14
  %5 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !5994
  %lock = getelementptr inbounds %struct.rc_map, %struct.rc_map* %5, i32 0, i32 6, !dbg !5994
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %6 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5995
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0, !dbg !5996
  %rlock.i = bitcast %union.anon* %7 to %struct.raw_spinlock*, !dbg !5996
  br label %do.end17, !dbg !5994

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !5992

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !5983

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !5982

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !5977

do.end21:                                         ; preds = %do.end20
  %8 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !5997
  %flags22 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %8, i32 0, i32 0, !dbg !5999
  %9 = load i8, i8* %flags22, align 4, !dbg !5999
  %conv23 = zext i8 %9 to i32, !dbg !5997
  %and = and i32 %conv23, 1, !dbg !6000
  %tobool = icmp ne i32 %and, 0, !dbg !6000
  br i1 %tobool, label %if.then, label %if.else, !dbg !6001

if.then:                                          ; preds = %do.end21
  %10 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6002
  %index24 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %10, i32 0, i32 2, !dbg !6004
  %11 = load i16, i16* %index24, align 2, !dbg !6004
  %conv25 = zext i16 %11 to i32, !dbg !6002
  store i32 %conv25, i32* %index, align 4, !dbg !6005
  %12 = load i32, i32* %index, align 4, !dbg !6006
  %13 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !6008
  %len = getelementptr inbounds %struct.rc_map, %struct.rc_map* %13, i32 0, i32 2, !dbg !6009
  %14 = load i32, i32* %len, align 4, !dbg !6009
  %cmp26 = icmp uge i32 %12, %14, !dbg !6010
  br i1 %cmp26, label %if.then28, label %if.end, !dbg !6011

if.then28:                                        ; preds = %if.then
  store i32 -22, i32* %retval2, align 4, !dbg !6012
  br label %out, !dbg !6014

if.end:                                           ; preds = %if.then
  br label %if.end39, !dbg !6015

if.else:                                          ; preds = %do.end21
  %15 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6016
  %call29 = call i32 @scancode_to_u64(%struct.input_keymap_entry* %15, i64* %scancode) #11, !dbg !6018
  store i32 %call29, i32* %retval2, align 4, !dbg !6019
  %16 = load i32, i32* %retval2, align 4, !dbg !6020
  %tobool30 = icmp ne i32 %16, 0, !dbg !6020
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !6022

if.then31:                                        ; preds = %if.else
  br label %out, !dbg !6023

if.end32:                                         ; preds = %if.else
  %17 = load %struct.rc_dev*, %struct.rc_dev** %rdev, align 8, !dbg !6024
  %18 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !6025
  %19 = load i64, i64* %scancode, align 8, !dbg !6026
  %call33 = call i32 @ir_establish_scancode(%struct.rc_dev* %17, %struct.rc_map* %18, i64 %19, i1 zeroext true) #11, !dbg !6027
  store i32 %call33, i32* %index, align 4, !dbg !6028
  %20 = load i32, i32* %index, align 4, !dbg !6029
  %21 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !6031
  %len34 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %21, i32 0, i32 2, !dbg !6032
  %22 = load i32, i32* %len34, align 4, !dbg !6032
  %cmp35 = icmp uge i32 %20, %22, !dbg !6033
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !6034

if.then37:                                        ; preds = %if.end32
  store i32 -12, i32* %retval2, align 4, !dbg !6035
  br label %out, !dbg !6037

if.end38:                                         ; preds = %if.end32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end
  %23 = load %struct.rc_dev*, %struct.rc_dev** %rdev, align 8, !dbg !6038
  %24 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !6039
  %25 = load i32, i32* %index, align 4, !dbg !6040
  %26 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !6041
  %keycode = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %26, i32 0, i32 3, !dbg !6042
  %27 = load i32, i32* %keycode, align 4, !dbg !6042
  %call40 = call i32 @ir_update_mapping(%struct.rc_dev* %23, %struct.rc_map* %24, i32 %25, i32 %27) #11, !dbg !6043
  %28 = load i32*, i32** %old_keycode.addr, align 8, !dbg !6044
  store i32 %call40, i32* %28, align 4, !dbg !6045
  br label %out, !dbg !6046

out:                                              ; preds = %if.end39, %if.then37, %if.then31, %if.then28
  call void @llvm.dbg.label(metadata !6047), !dbg !6048
  %29 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !6049
  %lock41 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %29, i32 0, i32 6, !dbg !6050
  %30 = load i64, i64* %flags, align 8, !dbg !6051
  store %struct.spinlock* %lock41, %struct.spinlock** %lock.addr.i42, align 8
  store i64 %30, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !211, metadata !4592, metadata !DIExpression()) #7, !dbg !6052
  call void @llvm.dbg.declare(metadata !211, metadata !4596, metadata !DIExpression()) #7, !dbg !6052
  store i32 1, i32* %tmp.i, align 4, !dbg !6052
  %31 = load i32, i32* %tmp.i, align 4, !dbg !6052
  call void @llvm.dbg.declare(metadata !211, metadata !4597, metadata !DIExpression()) #7, !dbg !6053
  call void @llvm.dbg.declare(metadata !211, metadata !4603, metadata !DIExpression()) #7, !dbg !6053
  store i32 1, i32* %tmp8.i, align 4, !dbg !6053
  %32 = load i32, i32* %tmp8.i, align 4, !dbg !6053
  %33 = load i64, i64* %flags.addr.i, align 8, !dbg !6054
  call void @arch_local_irq_restore(i64 %33) #13, !dbg !6054
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6055, !srcloc !4607
  %34 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i42, align 8, !dbg !6056
  %35 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %34, i32 0, i32 0, !dbg !6056
  %rlock.i43 = bitcast %union.anon* %35 to %struct.raw_spinlock*, !dbg !6056
  %36 = load i32, i32* %retval2, align 4, !dbg !6057
  ret i32 %36, !dbg !6058
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_set_drvdata(%struct.input_dev* %dev, i8* %data) #0 !dbg !6059 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !6062, metadata !DIExpression()), !dbg !6063
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6064, metadata !DIExpression()), !dbg !6065
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !6066
  %dev1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 40, !dbg !6067
  %1 = load i8*, i8** %data.addr, align 8, !dbg !6068
  call void @dev_set_drvdata(%struct.device* %dev1, i8* %1) #11, !dbg !6069
  ret void, !dbg !6070
}

; Function Attrs: noredzone
declare dso_local void @init_timer_key(%struct.timer_list*, void (%struct.timer_list*)*, i32, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ir_timer_keyup(%struct.timer_list* %t) #0 !dbg !6071 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !4521, metadata !DIExpression()), !dbg !6072
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4527, metadata !DIExpression()), !dbg !6074
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4529, metadata !DIExpression()), !dbg !6075
  %t.addr = alloca %struct.timer_list*, align 8
  %dev = alloca %struct.rc_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.rc_dev*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !6082, metadata !DIExpression()), !dbg !6083
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev, metadata !6084, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6086, metadata !DIExpression()), !dbg !6088
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !6088
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !6088
  store i8* %1, i8** %__mptr, align 8, !dbg !6088
  br label %do.body, !dbg !6088

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6089

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6088
  %add.ptr = getelementptr i8, i8* %2, i64 -952, !dbg !6088
  %3 = bitcast i8* %add.ptr to %struct.rc_dev*, !dbg !6088
  store %struct.rc_dev* %3, %struct.rc_dev** %tmp, align 8, !dbg !6089
  %4 = load %struct.rc_dev*, %struct.rc_dev** %tmp, align 8, !dbg !6088
  store %struct.rc_dev* %4, %struct.rc_dev** %dev, align 8, !dbg !6085
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6091, metadata !DIExpression()), !dbg !6092
  br label %do.body1, !dbg !6093

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !6094

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6095, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6098, metadata !DIExpression()), !dbg !6097
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6097
  %conv = zext i1 %cmp to i32, !dbg !6097
  store i32 1, i32* %tmp3, align 4, !dbg !6097
  %5 = load i32, i32* %tmp3, align 4, !dbg !6097
  br label %do.body4, !dbg !6099

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !6100

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !6101

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !6103, metadata !DIExpression()), !dbg !6106
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6107, metadata !DIExpression()), !dbg !6106
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !6106
  %conv10 = zext i1 %cmp9 to i32, !dbg !6106
  store i32 1, i32* %tmp11, align 4, !dbg !6106
  %6 = load i32, i32* %tmp11, align 4, !dbg !6106
  %call = call i64 @arch_local_irq_save() #11, !dbg !6108
  store i64 %call, i64* %flags, align 8, !dbg !6108
  br label %do.end12, !dbg !6108

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !6101

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !6100

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6109, !srcloc !6110
  br label %do.body15, !dbg !6109

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !6111
  %keylock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %7, i32 0, i32 25, !dbg !6111
  store %struct.spinlock* %keylock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6112
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !6113
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !6113
  br label %do.end17, !dbg !6111

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !6109

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6100

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6099

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6094

do.end21:                                         ; preds = %do.end20
  %10 = load volatile i64, i64* @jiffies, align 8, !dbg !6114
  %11 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !6114
  %keyup_jiffies = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %11, i32 0, i32 27, !dbg !6114
  %12 = load i64, i64* %keyup_jiffies, align 8, !dbg !6114
  %sub = sub i64 %10, %12, !dbg !6114
  %cmp22 = icmp sge i64 %sub, 0, !dbg !6114
  br i1 %cmp22, label %if.then, label %if.end, !dbg !6116

if.then:                                          ; preds = %do.end21
  %13 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !6117
  call void @ir_do_keyup(%struct.rc_dev* %13, i1 zeroext true) #11, !dbg !6118
  br label %if.end, !dbg !6118

if.end:                                           ; preds = %if.then, %do.end21
  %14 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !6119
  %keylock24 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %14, i32 0, i32 25, !dbg !6120
  %15 = load i64, i64* %flags, align 8, !dbg !6121
  store %struct.spinlock* %keylock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %15, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !211, metadata !4592, metadata !DIExpression()) #7, !dbg !6122
  call void @llvm.dbg.declare(metadata !211, metadata !4596, metadata !DIExpression()) #7, !dbg !6122
  store i32 1, i32* %tmp.i, align 4, !dbg !6122
  %16 = load i32, i32* %tmp.i, align 4, !dbg !6122
  call void @llvm.dbg.declare(metadata !211, metadata !4597, metadata !DIExpression()) #7, !dbg !6123
  call void @llvm.dbg.declare(metadata !211, metadata !4603, metadata !DIExpression()) #7, !dbg !6123
  store i32 1, i32* %tmp8.i, align 4, !dbg !6123
  %17 = load i32, i32* %tmp8.i, align 4, !dbg !6123
  %18 = load i64, i64* %flags.addr.i, align 8, !dbg !6124
  call void @arch_local_irq_restore(i64 %18) #13, !dbg !6124
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6125, !srcloc !4607
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !6126
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !6126
  %rlock.i26 = bitcast %union.anon* %20 to %struct.raw_spinlock*, !dbg !6126
  ret void, !dbg !6127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ir_timer_repeat(%struct.timer_list* %t) #0 !dbg !6128 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !4744, metadata !DIExpression()), !dbg !6129
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !4521, metadata !DIExpression()), !dbg !6134
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !4527, metadata !DIExpression()), !dbg !6136
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4529, metadata !DIExpression()), !dbg !6137
  %t.addr = alloca %struct.timer_list*, align 8
  %dev = alloca %struct.rc_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.rc_dev*, align 8
  %input = alloca %struct.input_dev*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp3 = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  store %struct.timer_list* %t, %struct.timer_list** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %t.addr, metadata !6144, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev, metadata !6146, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6148, metadata !DIExpression()), !dbg !6150
  %0 = load %struct.timer_list*, %struct.timer_list** %t.addr, align 8, !dbg !6150
  %1 = bitcast %struct.timer_list* %0 to i8*, !dbg !6150
  store i8* %1, i8** %__mptr, align 8, !dbg !6150
  br label %do.body, !dbg !6150

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6151

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6150
  %add.ptr = getelementptr i8, i8* %2, i64 -992, !dbg !6150
  %3 = bitcast i8* %add.ptr to %struct.rc_dev*, !dbg !6150
  store %struct.rc_dev* %3, %struct.rc_dev** %tmp, align 8, !dbg !6151
  %4 = load %struct.rc_dev*, %struct.rc_dev** %tmp, align 8, !dbg !6150
  store %struct.rc_dev* %4, %struct.rc_dev** %dev, align 8, !dbg !6147
  call void @llvm.dbg.declare(metadata %struct.input_dev** %input, metadata !6153, metadata !DIExpression()), !dbg !6154
  %5 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !6155
  %input_dev = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %5, i32 0, i32 12, !dbg !6156
  %6 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6156
  store %struct.input_dev* %6, %struct.input_dev** %input, align 8, !dbg !6154
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !6157, metadata !DIExpression()), !dbg !6158
  br label %do.body1, !dbg !6159

do.body1:                                         ; preds = %do.end
  br label %do.body2, !dbg !6160

do.body2:                                         ; preds = %do.body1
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !6161, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !6164, metadata !DIExpression()), !dbg !6163
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !6163
  %conv = zext i1 %cmp to i32, !dbg !6163
  store i32 1, i32* %tmp3, align 4, !dbg !6163
  %7 = load i32, i32* %tmp3, align 4, !dbg !6163
  br label %do.body4, !dbg !6165

do.body4:                                         ; preds = %do.body2
  br label %do.body5, !dbg !6166

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !6167

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !6169, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !6173, metadata !DIExpression()), !dbg !6172
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !6172
  %conv10 = zext i1 %cmp9 to i32, !dbg !6172
  store i32 1, i32* %tmp11, align 4, !dbg !6172
  %8 = load i32, i32* %tmp11, align 4, !dbg !6172
  %call = call i64 @arch_local_irq_save() #11, !dbg !6174
  store i64 %call, i64* %flags, align 8, !dbg !6174
  br label %do.end12, !dbg !6174

do.end12:                                         ; preds = %do.body6
  br label %do.end13, !dbg !6167

do.end13:                                         ; preds = %do.end12
  br label %do.body14, !dbg !6166

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6175, !srcloc !6176
  br label %do.body15, !dbg !6175

do.body15:                                        ; preds = %do.body14
  %9 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !6177
  %keylock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %9, i32 0, i32 25, !dbg !6177
  store %struct.spinlock* %keylock, %struct.spinlock** %lock.addr.i, align 8
  %10 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !6178
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0, !dbg !6179
  %rlock.i = bitcast %union.anon* %11 to %struct.raw_spinlock*, !dbg !6179
  br label %do.end17, !dbg !6177

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !6175

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !6166

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !6165

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !6160

do.end21:                                         ; preds = %do.end20
  %12 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !6180
  %keypressed = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %12, i32 0, i32 26, !dbg !6181
  %13 = load i8, i8* %keypressed, align 8, !dbg !6181
  %tobool = trunc i8 %13 to i1, !dbg !6181
  br i1 %tobool, label %if.then, label %if.end28, !dbg !6182

if.then:                                          ; preds = %do.end21
  %14 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !6183
  %15 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !6184
  %last_keycode = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %15, i32 0, i32 30, !dbg !6185
  %16 = load i32, i32* %last_keycode, align 8, !dbg !6185
  call void @input_event(%struct.input_dev* %14, i32 1, i32 %16, i32 2) #11, !dbg !6186
  %17 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !6187
  call void @input_sync(%struct.input_dev* %17) #11, !dbg !6188
  %18 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !6189
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %18, i32 0, i32 24, !dbg !6190
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 1, !dbg !6189
  %19 = load i32, i32* %arrayidx, align 4, !dbg !6189
  %tobool22 = icmp ne i32 %19, 0, !dbg !6189
  br i1 %tobool22, label %if.then23, label %if.end, !dbg !6191

if.then23:                                        ; preds = %if.then
  %20 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !6192
  %timer_repeat = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %20, i32 0, i32 29, !dbg !6193
  %21 = load volatile i64, i64* @jiffies, align 8, !dbg !6194
  %22 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !dbg !6195
  %rep24 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %22, i32 0, i32 24, !dbg !6196
  %arrayidx25 = getelementptr [2 x i32], [2 x i32]* %rep24, i64 0, i64 1, !dbg !6195
  %23 = load i32, i32* %arrayidx25, align 4, !dbg !6195
  store i32 %23, i32* %m.addr.i, align 4
  %24 = load i32, i32* %m.addr.i, align 4, !dbg !6197
  %25 = call i1 @llvm.is.constant.i32(i32 %24) #7, !dbg !6198
  br i1 %25, label %if.then.i, label %if.else.i, !dbg !6199

if.then.i:                                        ; preds = %if.then23
  %26 = load i32, i32* %m.addr.i, align 4, !dbg !6200
  %cmp.i = icmp slt i32 %26, 0, !dbg !6201
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6202

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !6203
  br label %msecs_to_jiffies.exit, !dbg !6203

if.end.i:                                         ; preds = %if.then.i
  %27 = load i32, i32* %m.addr.i, align 4, !dbg !6204
  %call.i = call i64 @_msecs_to_jiffies(i32 %27) #13, !dbg !6205
  store i64 %call.i, i64* %retval.i, align 8, !dbg !6206
  br label %msecs_to_jiffies.exit, !dbg !6206

if.else.i:                                        ; preds = %if.then23
  %28 = load i32, i32* %m.addr.i, align 4, !dbg !6207
  %call2.i = call i64 @__msecs_to_jiffies(i32 %28) #13, !dbg !6208
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !6209
  br label %msecs_to_jiffies.exit, !dbg !6209

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %29 = load i64, i64* %retval.i, align 8, !dbg !6210
  %add = add i64 %21, %29, !dbg !6211
  %call27 = call i32 @mod_timer(%struct.timer_list* %timer_repeat, i64 %add) #11, !dbg !6212
  br label %if.end, !dbg !6212

if.end:                                           ; preds = %msecs_to_jiffies.exit, %if.then
  br label %if.end28, !dbg !6213

if.end28:                                         ; preds = %if.end, %do.end21
  %30 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !6214
  %keylock29 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %30, i32 0, i32 25, !dbg !6215
  %31 = load i64, i64* %flags, align 8, !dbg !6216
  store %struct.spinlock* %keylock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %31, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !211, metadata !4592, metadata !DIExpression()) #7, !dbg !6217
  call void @llvm.dbg.declare(metadata !211, metadata !4596, metadata !DIExpression()) #7, !dbg !6217
  store i32 1, i32* %tmp.i, align 4, !dbg !6217
  %32 = load i32, i32* %tmp.i, align 4, !dbg !6217
  call void @llvm.dbg.declare(metadata !211, metadata !4597, metadata !DIExpression()) #7, !dbg !6218
  call void @llvm.dbg.declare(metadata !211, metadata !4603, metadata !DIExpression()) #7, !dbg !6218
  store i32 1, i32* %tmp8.i, align 4, !dbg !6218
  %33 = load i32, i32* %tmp8.i, align 4, !dbg !6218
  %34 = load i64, i64* %flags.addr.i, align 8, !dbg !6219
  call void @arch_local_irq_restore(i64 %34) #13, !dbg !6219
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !6220, !srcloc !4607
  %35 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !6221
  %36 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %35, i32 0, i32 0, !dbg !6221
  %rlock.i31 = bitcast %union.anon* %36 to %struct.raw_spinlock*, !dbg !6221
  ret void, !dbg !6222
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__module_get(%struct.module* %module) #0 !dbg !6223 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !6227, metadata !DIExpression()), !dbg !6228
  ret void, !dbg !6229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @rc_free_device(%struct.rc_dev* %dev) #0 !dbg !6230 {
entry:
  %dev.addr = alloca %struct.rc_dev*, align 8
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !6231, metadata !DIExpression()), !dbg !6232
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6233
  %tobool = icmp ne %struct.rc_dev* %0, null, !dbg !6233
  br i1 %tobool, label %if.end, label %if.then, !dbg !6235

if.then:                                          ; preds = %entry
  br label %return, !dbg !6236

if.end:                                           ; preds = %entry
  %1 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6237
  %input_dev = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %1, i32 0, i32 12, !dbg !6238
  %2 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6238
  call void @input_free_device(%struct.input_dev* %2) #11, !dbg !6239
  %3 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6240
  %dev1 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %3, i32 0, i32 0, !dbg !6241
  call void @put_device(%struct.device* %dev1) #11, !dbg !6242
  call void @module_put(%struct.module* null) #11, !dbg !6243
  br label %return, !dbg !6244

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6244
}

; Function Attrs: noredzone
declare dso_local void @input_free_device(%struct.input_dev*) #3

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #0 !dbg !6245 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !6246, metadata !DIExpression()), !dbg !6247
  ret void, !dbg !6248
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.rc_dev* @devm_rc_allocate_device(%struct.device* %dev, i32 %type) #0 !dbg !6249 {
entry:
  %retval = alloca %struct.rc_dev*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %type.addr = alloca i32, align 4
  %dr = alloca %struct.rc_dev**, align 8
  %rc = alloca %struct.rc_dev*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6252, metadata !DIExpression()), !dbg !6253
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6254, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.declare(metadata %struct.rc_dev*** %dr, metadata !6256, metadata !DIExpression()), !dbg !6257
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %rc, metadata !6258, metadata !DIExpression()), !dbg !6259
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_rc_alloc_release, i64 8, i32 3264) #11, !dbg !6260
  %0 = bitcast i8* %call to %struct.rc_dev**, !dbg !6260
  store %struct.rc_dev** %0, %struct.rc_dev*** %dr, align 8, !dbg !6261
  %1 = load %struct.rc_dev**, %struct.rc_dev*** %dr, align 8, !dbg !6262
  %tobool = icmp ne %struct.rc_dev** %1, null, !dbg !6262
  br i1 %tobool, label %if.end, label %if.then, !dbg !6264

if.then:                                          ; preds = %entry
  store %struct.rc_dev* null, %struct.rc_dev** %retval, align 8, !dbg !6265
  br label %return, !dbg !6265

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %type.addr, align 4, !dbg !6266
  %call1 = call %struct.rc_dev* @rc_allocate_device(i32 %2) #11, !dbg !6267
  store %struct.rc_dev* %call1, %struct.rc_dev** %rc, align 8, !dbg !6268
  %3 = load %struct.rc_dev*, %struct.rc_dev** %rc, align 8, !dbg !6269
  %tobool2 = icmp ne %struct.rc_dev* %3, null, !dbg !6269
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !6271

if.then3:                                         ; preds = %if.end
  %4 = load %struct.rc_dev**, %struct.rc_dev*** %dr, align 8, !dbg !6272
  %5 = bitcast %struct.rc_dev** %4 to i8*, !dbg !6272
  call void @devres_free(i8* %5) #11, !dbg !6274
  store %struct.rc_dev* null, %struct.rc_dev** %retval, align 8, !dbg !6275
  br label %return, !dbg !6275

if.end4:                                          ; preds = %if.end
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6276
  %7 = load %struct.rc_dev*, %struct.rc_dev** %rc, align 8, !dbg !6277
  %dev5 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %7, i32 0, i32 0, !dbg !6278
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 1, !dbg !6279
  store %struct.device* %6, %struct.device** %parent, align 8, !dbg !6280
  %8 = load %struct.rc_dev*, %struct.rc_dev** %rc, align 8, !dbg !6281
  %managed_alloc = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %8, i32 0, i32 1, !dbg !6282
  store i8 1, i8* %managed_alloc, align 8, !dbg !6283
  %9 = load %struct.rc_dev*, %struct.rc_dev** %rc, align 8, !dbg !6284
  %10 = load %struct.rc_dev**, %struct.rc_dev*** %dr, align 8, !dbg !6285
  store %struct.rc_dev* %9, %struct.rc_dev** %10, align 8, !dbg !6286
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6287
  %12 = load %struct.rc_dev**, %struct.rc_dev*** %dr, align 8, !dbg !6288
  %13 = bitcast %struct.rc_dev** %12 to i8*, !dbg !6288
  call void @devres_add(%struct.device* %11, i8* %13) #11, !dbg !6289
  %14 = load %struct.rc_dev*, %struct.rc_dev** %rc, align 8, !dbg !6290
  store %struct.rc_dev* %14, %struct.rc_dev** %retval, align 8, !dbg !6291
  br label %return, !dbg !6291

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %15 = load %struct.rc_dev*, %struct.rc_dev** %retval, align 8, !dbg !6292
  ret %struct.rc_dev* %15, !dbg !6292
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devres_alloc(void (%struct.device*, i8*)* %release, i64 %size, i32 %gfp) #0 !dbg !6293 {
entry:
  %release.addr = alloca void (%struct.device*, i8*)*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store void (%struct.device*, i8*)* %release, void (%struct.device*, i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*, i8*)** %release.addr, metadata !6300, metadata !DIExpression()), !dbg !6301
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6302, metadata !DIExpression()), !dbg !6303
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !6304, metadata !DIExpression()), !dbg !6305
  %0 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %release.addr, align 8, !dbg !6306
  %1 = load i64, i64* %size.addr, align 8, !dbg !6307
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !6308
  %call = call noalias i8* @devres_alloc_node(void (%struct.device*, i8*)* %0, i64 %1, i32 %2, i32 -1) #11, !dbg !6309
  ret i8* %call, !dbg !6310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_rc_alloc_release(%struct.device* %dev, i8* %res) #0 !dbg !6311 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6312, metadata !DIExpression()), !dbg !6313
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6314, metadata !DIExpression()), !dbg !6315
  %0 = load i8*, i8** %res.addr, align 8, !dbg !6316
  %1 = bitcast i8* %0 to %struct.rc_dev**, !dbg !6317
  %2 = load %struct.rc_dev*, %struct.rc_dev** %1, align 8, !dbg !6318
  call void @rc_free_device(%struct.rc_dev* %2) #11, !dbg !6319
  ret void, !dbg !6320
}

; Function Attrs: noredzone
declare dso_local void @devres_free(i8*) #3

; Function Attrs: noredzone
declare dso_local void @devres_add(%struct.device*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @rc_register_device(%struct.rc_dev* %dev) #0 !dbg !6321 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.rc_dev*, align 8
  %path = alloca i8*, align 8
  %attr = alloca i32, align 4
  %minor = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !6322, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.declare(metadata i8** %path, metadata !6324, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.declare(metadata i32* %attr, metadata !6326, metadata !DIExpression()), !dbg !6327
  store i32 0, i32* %attr, align 4, !dbg !6327
  call void @llvm.dbg.declare(metadata i32* %minor, metadata !6328, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6330, metadata !DIExpression()), !dbg !6331
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6332
  %tobool = icmp ne %struct.rc_dev* %0, null, !dbg !6332
  br i1 %tobool, label %if.end, label %if.then, !dbg !6334

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6335
  br label %return, !dbg !6335

if.end:                                           ; preds = %entry
  %call = call i32 @ida_alloc_range(%struct.ida* @rc_ida, i32 0, i32 255, i32 3264) #11, !dbg !6336
  store i32 %call, i32* %minor, align 4, !dbg !6337
  %1 = load i32, i32* %minor, align 4, !dbg !6338
  %cmp = icmp slt i32 %1, 0, !dbg !6340
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !6341

if.then1:                                         ; preds = %if.end
  %2 = load i32, i32* %minor, align 4, !dbg !6342
  store i32 %2, i32* %retval, align 4, !dbg !6343
  br label %return, !dbg !6343

if.end2:                                          ; preds = %if.end
  %3 = load i32, i32* %minor, align 4, !dbg !6344
  %4 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6345
  %minor3 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %4, i32 0, i32 10, !dbg !6346
  store i32 %3, i32* %minor3, align 8, !dbg !6347
  %5 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6348
  %dev4 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %5, i32 0, i32 0, !dbg !6349
  %6 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6350
  %minor5 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 10, !dbg !6351
  %7 = load i32, i32* %minor5, align 8, !dbg !6351
  %call6 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i32 %7) #11, !dbg !6352
  %8 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6353
  %dev7 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %8, i32 0, i32 0, !dbg !6354
  %9 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6355
  %10 = bitcast %struct.rc_dev* %9 to i8*, !dbg !6355
  call void @dev_set_drvdata(%struct.device* %dev7, i8* %10) #11, !dbg !6356
  %11 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6357
  %sysfs_groups = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %11, i32 0, i32 2, !dbg !6358
  %arraydecay = getelementptr inbounds [5 x %struct.attribute_group*], [5 x %struct.attribute_group*]* %sysfs_groups, i64 0, i64 0, !dbg !6357
  %12 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6359
  %dev8 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %12, i32 0, i32 0, !dbg !6360
  %groups = getelementptr inbounds %struct.device, %struct.device* %dev8, i32 0, i32 30, !dbg !6361
  store %struct.attribute_group** %arraydecay, %struct.attribute_group*** %groups, align 8, !dbg !6362
  %13 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6363
  %driver_type = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %13, i32 0, i32 13, !dbg !6365
  %14 = load i32, i32* %driver_type, align 8, !dbg !6365
  %cmp9 = icmp eq i32 %14, 0, !dbg !6366
  br i1 %cmp9, label %land.lhs.true, label %if.else, !dbg !6367

land.lhs.true:                                    ; preds = %if.end2
  %15 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6368
  %change_protocol = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %15, i32 0, i32 40, !dbg !6369
  %16 = load i32 (%struct.rc_dev*, i64*)*, i32 (%struct.rc_dev*, i64*)** %change_protocol, align 8, !dbg !6369
  %tobool10 = icmp ne i32 (%struct.rc_dev*, i64*)* %16, null, !dbg !6368
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !6370

if.then11:                                        ; preds = %land.lhs.true
  %17 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6371
  %sysfs_groups12 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %17, i32 0, i32 2, !dbg !6372
  %18 = load i32, i32* %attr, align 4, !dbg !6373
  %inc = add i32 %18, 1, !dbg !6373
  store i32 %inc, i32* %attr, align 4, !dbg !6373
  %idxprom = sext i32 %18 to i64, !dbg !6371
  %arrayidx = getelementptr [5 x %struct.attribute_group*], [5 x %struct.attribute_group*]* %sysfs_groups12, i64 0, i64 %idxprom, !dbg !6371
  store %struct.attribute_group* @rc_dev_ro_protocol_attr_grp, %struct.attribute_group** %arrayidx, align 8, !dbg !6374
  br label %if.end21, !dbg !6371

if.else:                                          ; preds = %land.lhs.true, %if.end2
  %19 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6375
  %driver_type13 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %19, i32 0, i32 13, !dbg !6377
  %20 = load i32, i32* %driver_type13, align 8, !dbg !6377
  %cmp14 = icmp ne i32 %20, 2, !dbg !6378
  br i1 %cmp14, label %if.then15, label %if.end20, !dbg !6379

if.then15:                                        ; preds = %if.else
  %21 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6380
  %sysfs_groups16 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %21, i32 0, i32 2, !dbg !6381
  %22 = load i32, i32* %attr, align 4, !dbg !6382
  %inc17 = add i32 %22, 1, !dbg !6382
  store i32 %inc17, i32* %attr, align 4, !dbg !6382
  %idxprom18 = sext i32 %22 to i64, !dbg !6380
  %arrayidx19 = getelementptr [5 x %struct.attribute_group*], [5 x %struct.attribute_group*]* %sysfs_groups16, i64 0, i64 %idxprom18, !dbg !6380
  store %struct.attribute_group* @rc_dev_rw_protocol_attr_grp, %struct.attribute_group** %arrayidx19, align 8, !dbg !6383
  br label %if.end20, !dbg !6380

if.end20:                                         ; preds = %if.then15, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then11
  %23 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6384
  %s_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %23, i32 0, i32 51, !dbg !6386
  %24 = load i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %s_filter, align 8, !dbg !6386
  %tobool22 = icmp ne i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)* %24, null, !dbg !6384
  br i1 %tobool22, label %if.then23, label %if.end28, !dbg !6387

if.then23:                                        ; preds = %if.end21
  %25 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6388
  %sysfs_groups24 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %25, i32 0, i32 2, !dbg !6389
  %26 = load i32, i32* %attr, align 4, !dbg !6390
  %inc25 = add i32 %26, 1, !dbg !6390
  store i32 %inc25, i32* %attr, align 4, !dbg !6390
  %idxprom26 = sext i32 %26 to i64, !dbg !6388
  %arrayidx27 = getelementptr [5 x %struct.attribute_group*], [5 x %struct.attribute_group*]* %sysfs_groups24, i64 0, i64 %idxprom26, !dbg !6388
  store %struct.attribute_group* @rc_dev_filter_attr_grp, %struct.attribute_group** %arrayidx27, align 8, !dbg !6391
  br label %if.end28, !dbg !6388

if.end28:                                         ; preds = %if.then23, %if.end21
  %27 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6392
  %s_wakeup_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %27, i32 0, i32 52, !dbg !6394
  %28 = load i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %s_wakeup_filter, align 8, !dbg !6394
  %tobool29 = icmp ne i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)* %28, null, !dbg !6392
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !6395

if.then30:                                        ; preds = %if.end28
  %29 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6396
  %sysfs_groups31 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %29, i32 0, i32 2, !dbg !6397
  %30 = load i32, i32* %attr, align 4, !dbg !6398
  %inc32 = add i32 %30, 1, !dbg !6398
  store i32 %inc32, i32* %attr, align 4, !dbg !6398
  %idxprom33 = sext i32 %30 to i64, !dbg !6396
  %arrayidx34 = getelementptr [5 x %struct.attribute_group*], [5 x %struct.attribute_group*]* %sysfs_groups31, i64 0, i64 %idxprom33, !dbg !6396
  store %struct.attribute_group* @rc_dev_wakeup_filter_attr_grp, %struct.attribute_group** %arrayidx34, align 8, !dbg !6399
  br label %if.end35, !dbg !6396

if.end35:                                         ; preds = %if.then30, %if.end28
  %31 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6400
  %sysfs_groups36 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %31, i32 0, i32 2, !dbg !6401
  %32 = load i32, i32* %attr, align 4, !dbg !6402
  %inc37 = add i32 %32, 1, !dbg !6402
  store i32 %inc37, i32* %attr, align 4, !dbg !6402
  %idxprom38 = sext i32 %32 to i64, !dbg !6400
  %arrayidx39 = getelementptr [5 x %struct.attribute_group*], [5 x %struct.attribute_group*]* %sysfs_groups36, i64 0, i64 %idxprom38, !dbg !6400
  store %struct.attribute_group* null, %struct.attribute_group** %arrayidx39, align 8, !dbg !6403
  %33 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6404
  %driver_type40 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %33, i32 0, i32 13, !dbg !6406
  %34 = load i32, i32* %driver_type40, align 8, !dbg !6406
  %cmp41 = icmp eq i32 %34, 1, !dbg !6407
  br i1 %cmp41, label %if.then42, label %if.end47, !dbg !6408

if.then42:                                        ; preds = %if.end35
  %35 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6409
  %call43 = call i32 @ir_raw_event_prepare(%struct.rc_dev* %35) #11, !dbg !6411
  store i32 %call43, i32* %rc, align 4, !dbg !6412
  %36 = load i32, i32* %rc, align 4, !dbg !6413
  %cmp44 = icmp slt i32 %36, 0, !dbg !6415
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !6416

if.then45:                                        ; preds = %if.then42
  br label %out_minor, !dbg !6417

if.end46:                                         ; preds = %if.then42
  br label %if.end47, !dbg !6418

if.end47:                                         ; preds = %if.end46, %if.end35
  %37 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6419
  %driver_type48 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %37, i32 0, i32 13, !dbg !6421
  %38 = load i32, i32* %driver_type48, align 8, !dbg !6421
  %cmp49 = icmp ne i32 %38, 2, !dbg !6422
  br i1 %cmp49, label %if.then50, label %if.end55, !dbg !6423

if.then50:                                        ; preds = %if.end47
  %39 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6424
  %call51 = call i32 @rc_prepare_rx_device(%struct.rc_dev* %39) #11, !dbg !6426
  store i32 %call51, i32* %rc, align 4, !dbg !6427
  %40 = load i32, i32* %rc, align 4, !dbg !6428
  %tobool52 = icmp ne i32 %40, 0, !dbg !6428
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !6430

if.then53:                                        ; preds = %if.then50
  br label %out_raw, !dbg !6431

if.end54:                                         ; preds = %if.then50
  br label %if.end55, !dbg !6432

if.end55:                                         ; preds = %if.end54, %if.end47
  %41 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6433
  %dev56 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %41, i32 0, i32 0, !dbg !6434
  %call57 = call i32 @device_add(%struct.device* %dev56) #11, !dbg !6435
  store i32 %call57, i32* %rc, align 4, !dbg !6436
  %42 = load i32, i32* %rc, align 4, !dbg !6437
  %tobool58 = icmp ne i32 %42, 0, !dbg !6437
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !6439

if.then59:                                        ; preds = %if.end55
  br label %out_rx_free, !dbg !6440

if.end60:                                         ; preds = %if.end55
  %43 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6441
  %dev61 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %43, i32 0, i32 0, !dbg !6442
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev61, i32 0, i32 0, !dbg !6443
  %call62 = call i8* @kobject_get_path(%struct.kobject* %kobj, i32 3264) #11, !dbg !6444
  store i8* %call62, i8** %path, align 8, !dbg !6445
  %44 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6446
  %dev63 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %44, i32 0, i32 0, !dbg !6446
  %45 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6446
  %device_name = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %45, i32 0, i32 3, !dbg !6446
  %46 = load i8*, i8** %device_name, align 8, !dbg !6446
  %tobool64 = icmp ne i8* %46, null, !dbg !6446
  br i1 %tobool64, label %cond.true, label %cond.false, !dbg !6446

cond.true:                                        ; preds = %if.end60
  br label %cond.end, !dbg !6446

cond.false:                                       ; preds = %if.end60
  br label %cond.end, !dbg !6446

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %46, %cond.true ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), %cond.false ], !dbg !6446
  %47 = load i8*, i8** %path, align 8, !dbg !6446
  %tobool65 = icmp ne i8* %47, null, !dbg !6446
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !6446

cond.true66:                                      ; preds = %cond.end
  br label %cond.end68, !dbg !6446

cond.false67:                                     ; preds = %cond.end
  br label %cond.end68, !dbg !6446

cond.end68:                                       ; preds = %cond.false67, %cond.true66
  %cond69 = phi i8* [ %47, %cond.true66 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), %cond.false67 ], !dbg !6446
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev63, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8* %cond, i8* %cond69) #12, !dbg !6446
  %48 = load i8*, i8** %path, align 8, !dbg !6447
  call void @kfree(i8* %48) #11, !dbg !6448
  %49 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6449
  %registered = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %49, i32 0, i32 39, !dbg !6450
  store i8 1, i8* %registered, align 8, !dbg !6451
  %50 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6452
  %allowed_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %50, i32 0, i32 16, !dbg !6454
  %51 = load i64, i64* %allowed_protocols, align 8, !dbg !6454
  %cmp70 = icmp ne i64 %51, 4194304, !dbg !6455
  br i1 %cmp70, label %if.then71, label %if.end76, !dbg !6456

if.then71:                                        ; preds = %cond.end68
  %52 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6457
  %call72 = call i32 @lirc_register(%struct.rc_dev* %52) #11, !dbg !6459
  store i32 %call72, i32* %rc, align 4, !dbg !6460
  %53 = load i32, i32* %rc, align 4, !dbg !6461
  %cmp73 = icmp slt i32 %53, 0, !dbg !6463
  br i1 %cmp73, label %if.then74, label %if.end75, !dbg !6464

if.then74:                                        ; preds = %if.then71
  br label %out_dev, !dbg !6465

if.end75:                                         ; preds = %if.then71
  br label %if.end76, !dbg !6466

if.end76:                                         ; preds = %if.end75, %cond.end68
  %54 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6467
  %driver_type77 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %54, i32 0, i32 13, !dbg !6469
  %55 = load i32, i32* %driver_type77, align 8, !dbg !6469
  %cmp78 = icmp ne i32 %55, 2, !dbg !6470
  br i1 %cmp78, label %if.then79, label %if.end84, !dbg !6471

if.then79:                                        ; preds = %if.end76
  %56 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6472
  %call80 = call i32 @rc_setup_rx_device(%struct.rc_dev* %56) #11, !dbg !6474
  store i32 %call80, i32* %rc, align 4, !dbg !6475
  %57 = load i32, i32* %rc, align 4, !dbg !6476
  %tobool81 = icmp ne i32 %57, 0, !dbg !6476
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !6478

if.then82:                                        ; preds = %if.then79
  br label %out_lirc, !dbg !6479

if.end83:                                         ; preds = %if.then79
  br label %if.end84, !dbg !6480

if.end84:                                         ; preds = %if.end83, %if.end76
  %58 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6481
  %driver_type85 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %58, i32 0, i32 13, !dbg !6483
  %59 = load i32, i32* %driver_type85, align 8, !dbg !6483
  %cmp86 = icmp eq i32 %59, 1, !dbg !6484
  br i1 %cmp86, label %if.then87, label %if.end92, !dbg !6485

if.then87:                                        ; preds = %if.end84
  %60 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6486
  %call88 = call i32 @ir_raw_event_register(%struct.rc_dev* %60) #11, !dbg !6488
  store i32 %call88, i32* %rc, align 4, !dbg !6489
  %61 = load i32, i32* %rc, align 4, !dbg !6490
  %cmp89 = icmp slt i32 %61, 0, !dbg !6492
  br i1 %cmp89, label %if.then90, label %if.end91, !dbg !6493

if.then90:                                        ; preds = %if.then87
  br label %out_rx, !dbg !6494

if.end91:                                         ; preds = %if.then87
  br label %if.end92, !dbg !6495

if.end92:                                         ; preds = %if.end91, %if.end84
  store i32 0, i32* %retval, align 4, !dbg !6496
  br label %return, !dbg !6496

out_rx:                                           ; preds = %if.then90
  call void @llvm.dbg.label(metadata !6497), !dbg !6498
  %62 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6499
  call void @rc_free_rx_device(%struct.rc_dev* %62) #11, !dbg !6500
  br label %out_lirc, !dbg !6500

out_lirc:                                         ; preds = %out_rx, %if.then82
  call void @llvm.dbg.label(metadata !6501), !dbg !6502
  %63 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6503
  %allowed_protocols93 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %63, i32 0, i32 16, !dbg !6505
  %64 = load i64, i64* %allowed_protocols93, align 8, !dbg !6505
  %cmp94 = icmp ne i64 %64, 4194304, !dbg !6506
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !6507

if.then95:                                        ; preds = %out_lirc
  %65 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6508
  call void @lirc_unregister(%struct.rc_dev* %65) #11, !dbg !6509
  br label %if.end96, !dbg !6509

if.end96:                                         ; preds = %if.then95, %out_lirc
  br label %out_dev, !dbg !6510

out_dev:                                          ; preds = %if.end96, %if.then74
  call void @llvm.dbg.label(metadata !6511), !dbg !6512
  %66 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6513
  %dev97 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %66, i32 0, i32 0, !dbg !6514
  call void @device_del(%struct.device* %dev97) #11, !dbg !6515
  br label %out_rx_free, !dbg !6515

out_rx_free:                                      ; preds = %out_dev, %if.then59
  call void @llvm.dbg.label(metadata !6516), !dbg !6517
  %67 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6518
  %rc_map = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %67, i32 0, i32 8, !dbg !6519
  call void @ir_free_table(%struct.rc_map* %rc_map) #11, !dbg !6520
  br label %out_raw, !dbg !6520

out_raw:                                          ; preds = %out_rx_free, %if.then53
  call void @llvm.dbg.label(metadata !6521), !dbg !6522
  %68 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6523
  call void @ir_raw_event_free(%struct.rc_dev* %68) #11, !dbg !6524
  br label %out_minor, !dbg !6524

out_minor:                                        ; preds = %out_raw, %if.then45
  call void @llvm.dbg.label(metadata !6525), !dbg !6526
  %69 = load i32, i32* %minor, align 4, !dbg !6527
  call void @ida_free(%struct.ida* @rc_ida, i32 %69) #11, !dbg !6527
  %70 = load i32, i32* %rc, align 4, !dbg !6528
  store i32 %70, i32* %retval, align 4, !dbg !6529
  br label %return, !dbg !6529

return:                                           ; preds = %out_minor, %if.end92, %if.then1, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !6530
  ret i32 %71, !dbg !6530
}

; Function Attrs: noredzone
declare dso_local i32 @ida_alloc_range(%struct.ida*, i32, i32, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !6531 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6532, metadata !DIExpression()), !dbg !6533
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6534, metadata !DIExpression()), !dbg !6535
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6536
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6537
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !6538
  store i8* %0, i8** %driver_data, align 8, !dbg !6539
  ret void, !dbg !6540
}

; Function Attrs: noredzone
declare dso_local i32 @ir_raw_event_prepare(%struct.rc_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rc_prepare_rx_device(%struct.rc_dev* %dev) #0 !dbg !6541 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.rc_dev*, align 8
  %rc = alloca i32, align 4
  %rc_map = alloca %struct.rc_map*, align 8
  %rc_proto = alloca i64, align 8
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !6542, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6544, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.declare(metadata %struct.rc_map** %rc_map, metadata !6546, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.declare(metadata i64* %rc_proto, metadata !6548, metadata !DIExpression()), !dbg !6549
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6550
  %map_name = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %0, i32 0, i32 7, !dbg !6552
  %1 = load i8*, i8** %map_name, align 8, !dbg !6552
  %tobool = icmp ne i8* %1, null, !dbg !6550
  br i1 %tobool, label %if.end, label %if.then, !dbg !6553

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6554
  br label %return, !dbg !6554

if.end:                                           ; preds = %entry
  %2 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6555
  %map_name1 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %2, i32 0, i32 7, !dbg !6556
  %3 = load i8*, i8** %map_name1, align 8, !dbg !6556
  %call = call %struct.rc_map* @rc_map_get(i8* %3) #11, !dbg !6557
  store %struct.rc_map* %call, %struct.rc_map** %rc_map, align 8, !dbg !6558
  %4 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !6559
  %tobool2 = icmp ne %struct.rc_map* %4, null, !dbg !6559
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !6561

if.then3:                                         ; preds = %if.end
  %call4 = call %struct.rc_map* @rc_map_get(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.72, i64 0, i64 0)) #11, !dbg !6562
  store %struct.rc_map* %call4, %struct.rc_map** %rc_map, align 8, !dbg !6563
  br label %if.end5, !dbg !6564

if.end5:                                          ; preds = %if.then3, %if.end
  %5 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !6565
  %tobool6 = icmp ne %struct.rc_map* %5, null, !dbg !6565
  br i1 %tobool6, label %lor.lhs.false, label %if.then9, !dbg !6567

lor.lhs.false:                                    ; preds = %if.end5
  %6 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !6568
  %scan = getelementptr inbounds %struct.rc_map, %struct.rc_map* %6, i32 0, i32 0, !dbg !6569
  %7 = load %struct.rc_map_table*, %struct.rc_map_table** %scan, align 8, !dbg !6569
  %tobool7 = icmp ne %struct.rc_map_table* %7, null, !dbg !6568
  br i1 %tobool7, label %lor.lhs.false8, label %if.then9, !dbg !6570

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %8 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !6571
  %size = getelementptr inbounds %struct.rc_map, %struct.rc_map* %8, i32 0, i32 1, !dbg !6572
  %9 = load i32, i32* %size, align 8, !dbg !6572
  %cmp = icmp eq i32 %9, 0, !dbg !6573
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !6574

if.then9:                                         ; preds = %lor.lhs.false8, %lor.lhs.false, %if.end5
  store i32 -22, i32* %retval, align 4, !dbg !6575
  br label %return, !dbg !6575

if.end10:                                         ; preds = %lor.lhs.false8
  %10 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6576
  %11 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !6577
  %call11 = call i32 @ir_setkeytable(%struct.rc_dev* %10, %struct.rc_map* %11) #11, !dbg !6578
  store i32 %call11, i32* %rc, align 4, !dbg !6579
  %12 = load i32, i32* %rc, align 4, !dbg !6580
  %tobool12 = icmp ne i32 %12, 0, !dbg !6580
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !6582

if.then13:                                        ; preds = %if.end10
  %13 = load i32, i32* %rc, align 4, !dbg !6583
  store i32 %13, i32* %retval, align 4, !dbg !6584
  br label %return, !dbg !6584

if.end14:                                         ; preds = %if.end10
  %14 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !6585
  %rc_proto15 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %14, i32 0, i32 4, !dbg !6585
  %15 = load i32, i32* %rc_proto15, align 4, !dbg !6585
  %sh_prom = zext i32 %15 to i64, !dbg !6585
  %shl = shl i64 1, %sh_prom, !dbg !6585
  store i64 %shl, i64* %rc_proto, align 8, !dbg !6586
  %16 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6587
  %driver_type = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %16, i32 0, i32 13, !dbg !6589
  %17 = load i32, i32* %driver_type, align 8, !dbg !6589
  %cmp16 = icmp eq i32 %17, 0, !dbg !6590
  br i1 %cmp16, label %land.lhs.true, label %if.end19, !dbg !6591

land.lhs.true:                                    ; preds = %if.end14
  %18 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6592
  %change_protocol = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %18, i32 0, i32 40, !dbg !6593
  %19 = load i32 (%struct.rc_dev*, i64*)*, i32 (%struct.rc_dev*, i64*)** %change_protocol, align 8, !dbg !6593
  %tobool17 = icmp ne i32 (%struct.rc_dev*, i64*)* %19, null, !dbg !6592
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !6594

if.then18:                                        ; preds = %land.lhs.true
  %20 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6595
  %allowed_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %20, i32 0, i32 16, !dbg !6596
  %21 = load i64, i64* %allowed_protocols, align 8, !dbg !6596
  %22 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6597
  %enabled_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %22, i32 0, i32 17, !dbg !6598
  store i64 %21, i64* %enabled_protocols, align 8, !dbg !6599
  br label %if.end19, !dbg !6597

if.end19:                                         ; preds = %if.then18, %land.lhs.true, %if.end14
  %23 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6600
  %driver_type20 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %23, i32 0, i32 13, !dbg !6602
  %24 = load i32, i32* %driver_type20, align 8, !dbg !6602
  %cmp21 = icmp eq i32 %24, 1, !dbg !6603
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !6604

if.then22:                                        ; preds = %if.end19
  call void @ir_raw_load_modules(i64* %rc_proto) #11, !dbg !6605
  br label %if.end23, !dbg !6605

if.end23:                                         ; preds = %if.then22, %if.end19
  %25 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6606
  %change_protocol24 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %25, i32 0, i32 40, !dbg !6608
  %26 = load i32 (%struct.rc_dev*, i64*)*, i32 (%struct.rc_dev*, i64*)** %change_protocol24, align 8, !dbg !6608
  %tobool25 = icmp ne i32 (%struct.rc_dev*, i64*)* %26, null, !dbg !6606
  br i1 %tobool25, label %if.then26, label %if.end33, !dbg !6609

if.then26:                                        ; preds = %if.end23
  %27 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6610
  %change_protocol27 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %27, i32 0, i32 40, !dbg !6612
  %28 = load i32 (%struct.rc_dev*, i64*)*, i32 (%struct.rc_dev*, i64*)** %change_protocol27, align 8, !dbg !6612
  %29 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6613
  %call28 = call i32 %28(%struct.rc_dev* %29, i64* %rc_proto) #11, !dbg !6610
  store i32 %call28, i32* %rc, align 4, !dbg !6614
  %30 = load i32, i32* %rc, align 4, !dbg !6615
  %cmp29 = icmp slt i32 %30, 0, !dbg !6617
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !6618

if.then30:                                        ; preds = %if.then26
  br label %out_table, !dbg !6619

if.end31:                                         ; preds = %if.then26
  %31 = load i64, i64* %rc_proto, align 8, !dbg !6620
  %32 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6621
  %enabled_protocols32 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %32, i32 0, i32 17, !dbg !6622
  store i64 %31, i64* %enabled_protocols32, align 8, !dbg !6623
  br label %if.end33, !dbg !6624

if.end33:                                         ; preds = %if.end31, %if.end23
  %33 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6625
  %input_dev = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %33, i32 0, i32 12, !dbg !6626
  %34 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6626
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %34, i32 0, i32 5, !dbg !6627
  %arraydecay = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i64 0, i64 0, !dbg !6625
  call void @set_bit(i64 1, i64* %arraydecay) #11, !dbg !6628
  %35 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6629
  %input_dev34 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %35, i32 0, i32 12, !dbg !6630
  %36 = load %struct.input_dev*, %struct.input_dev** %input_dev34, align 8, !dbg !6630
  %evbit35 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %36, i32 0, i32 5, !dbg !6631
  %arraydecay36 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit35, i64 0, i64 0, !dbg !6629
  call void @set_bit(i64 20, i64* %arraydecay36) #11, !dbg !6632
  %37 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6633
  %input_dev37 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %37, i32 0, i32 12, !dbg !6634
  %38 = load %struct.input_dev*, %struct.input_dev** %input_dev37, align 8, !dbg !6634
  %evbit38 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %38, i32 0, i32 5, !dbg !6635
  %arraydecay39 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit38, i64 0, i64 0, !dbg !6633
  call void @set_bit(i64 4, i64* %arraydecay39) #11, !dbg !6636
  %39 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6637
  %input_dev40 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %39, i32 0, i32 12, !dbg !6638
  %40 = load %struct.input_dev*, %struct.input_dev** %input_dev40, align 8, !dbg !6638
  %mscbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %40, i32 0, i32 9, !dbg !6639
  %arraydecay41 = getelementptr inbounds [1 x i64], [1 x i64]* %mscbit, i64 0, i64 0, !dbg !6637
  call void @set_bit(i64 4, i64* %arraydecay41) #11, !dbg !6640
  %41 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6641
  %input_dev42 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %41, i32 0, i32 12, !dbg !6642
  %42 = load %struct.input_dev*, %struct.input_dev** %input_dev42, align 8, !dbg !6642
  %propbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %42, i32 0, i32 4, !dbg !6643
  %arraydecay43 = getelementptr inbounds [1 x i64], [1 x i64]* %propbit, i64 0, i64 0, !dbg !6641
  call void @set_bit(i64 5, i64* %arraydecay43) #11, !dbg !6644
  %43 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6645
  %input_dev44 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %43, i32 0, i32 12, !dbg !6646
  %44 = load %struct.input_dev*, %struct.input_dev** %input_dev44, align 8, !dbg !6646
  %evbit45 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %44, i32 0, i32 5, !dbg !6647
  %arraydecay46 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit45, i64 0, i64 0, !dbg !6645
  call void @set_bit(i64 2, i64* %arraydecay46) #11, !dbg !6648
  %45 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6649
  %input_dev47 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %45, i32 0, i32 12, !dbg !6650
  %46 = load %struct.input_dev*, %struct.input_dev** %input_dev47, align 8, !dbg !6650
  %relbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %46, i32 0, i32 7, !dbg !6651
  %arraydecay48 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit, i64 0, i64 0, !dbg !6649
  call void @set_bit(i64 0, i64* %arraydecay48) #11, !dbg !6652
  %47 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6653
  %input_dev49 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %47, i32 0, i32 12, !dbg !6654
  %48 = load %struct.input_dev*, %struct.input_dev** %input_dev49, align 8, !dbg !6654
  %relbit50 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %48, i32 0, i32 7, !dbg !6655
  %arraydecay51 = getelementptr inbounds [1 x i64], [1 x i64]* %relbit50, i64 0, i64 0, !dbg !6653
  call void @set_bit(i64 1, i64* %arraydecay51) #11, !dbg !6656
  %49 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6657
  %open = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %49, i32 0, i32 41, !dbg !6659
  %50 = load i32 (%struct.rc_dev*)*, i32 (%struct.rc_dev*)** %open, align 8, !dbg !6659
  %tobool52 = icmp ne i32 (%struct.rc_dev*)* %50, null, !dbg !6657
  br i1 %tobool52, label %if.then53, label %if.end56, !dbg !6660

if.then53:                                        ; preds = %if.end33
  %51 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6661
  %input_dev54 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %51, i32 0, i32 12, !dbg !6662
  %52 = load %struct.input_dev*, %struct.input_dev** %input_dev54, align 8, !dbg !6662
  %open55 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %52, i32 0, i32 31, !dbg !6663
  store i32 (%struct.input_dev*)* @ir_open, i32 (%struct.input_dev*)** %open55, align 8, !dbg !6664
  br label %if.end56, !dbg !6661

if.end56:                                         ; preds = %if.then53, %if.end33
  %53 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6665
  %close = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %53, i32 0, i32 42, !dbg !6667
  %54 = load void (%struct.rc_dev*)*, void (%struct.rc_dev*)** %close, align 8, !dbg !6667
  %tobool57 = icmp ne void (%struct.rc_dev*)* %54, null, !dbg !6665
  br i1 %tobool57, label %if.then58, label %if.end61, !dbg !6668

if.then58:                                        ; preds = %if.end56
  %55 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6669
  %input_dev59 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %55, i32 0, i32 12, !dbg !6670
  %56 = load %struct.input_dev*, %struct.input_dev** %input_dev59, align 8, !dbg !6670
  %close60 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %56, i32 0, i32 32, !dbg !6671
  store void (%struct.input_dev*)* @ir_close, void (%struct.input_dev*)** %close60, align 8, !dbg !6672
  br label %if.end61, !dbg !6669

if.end61:                                         ; preds = %if.then58, %if.end56
  %57 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6673
  %dev62 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %57, i32 0, i32 0, !dbg !6674
  %58 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6675
  %input_dev63 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %58, i32 0, i32 12, !dbg !6676
  %59 = load %struct.input_dev*, %struct.input_dev** %input_dev63, align 8, !dbg !6676
  %dev64 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %59, i32 0, i32 40, !dbg !6677
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev64, i32 0, i32 1, !dbg !6678
  store %struct.device* %dev62, %struct.device** %parent, align 8, !dbg !6679
  %60 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6680
  %input_dev65 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %60, i32 0, i32 12, !dbg !6681
  %61 = load %struct.input_dev*, %struct.input_dev** %input_dev65, align 8, !dbg !6681
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %61, i32 0, i32 3, !dbg !6682
  %62 = bitcast %struct.input_id* %id to i8*, !dbg !6683
  %63 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6684
  %input_id = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %63, i32 0, i32 5, !dbg !6685
  %64 = bitcast %struct.input_id* %input_id to i8*, !dbg !6683
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %64, i64 8, i1 false), !dbg !6683
  %65 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6686
  %input_phys = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %65, i32 0, i32 4, !dbg !6687
  %66 = load i8*, i8** %input_phys, align 8, !dbg !6687
  %67 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6688
  %input_dev66 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %67, i32 0, i32 12, !dbg !6689
  %68 = load %struct.input_dev*, %struct.input_dev** %input_dev66, align 8, !dbg !6689
  %phys = getelementptr inbounds %struct.input_dev, %struct.input_dev* %68, i32 0, i32 1, !dbg !6690
  store i8* %66, i8** %phys, align 8, !dbg !6691
  %69 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6692
  %device_name = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %69, i32 0, i32 3, !dbg !6693
  %70 = load i8*, i8** %device_name, align 8, !dbg !6693
  %71 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6694
  %input_dev67 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %71, i32 0, i32 12, !dbg !6695
  %72 = load %struct.input_dev*, %struct.input_dev** %input_dev67, align 8, !dbg !6695
  %name = getelementptr inbounds %struct.input_dev, %struct.input_dev* %72, i32 0, i32 0, !dbg !6696
  store i8* %70, i8** %name, align 8, !dbg !6697
  store i32 0, i32* %retval, align 4, !dbg !6698
  br label %return, !dbg !6698

out_table:                                        ; preds = %if.then30
  call void @llvm.dbg.label(metadata !6699), !dbg !6700
  %73 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6701
  %rc_map68 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %73, i32 0, i32 8, !dbg !6702
  call void @ir_free_table(%struct.rc_map* %rc_map68) #11, !dbg !6703
  %74 = load i32, i32* %rc, align 4, !dbg !6704
  store i32 %74, i32* %retval, align 4, !dbg !6705
  br label %return, !dbg !6705

return:                                           ; preds = %out_table, %if.end61, %if.then13, %if.then9, %if.then
  %75 = load i32, i32* %retval, align 4, !dbg !6706
  ret i32 %75, !dbg !6706
}

; Function Attrs: noredzone
declare dso_local i32 @device_add(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local i8* @kobject_get_path(%struct.kobject*, i32) #3

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lirc_register(%struct.rc_dev* %dev) #0 !dbg !6707 {
entry:
  %dev.addr = alloca %struct.rc_dev*, align 8
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !6708, metadata !DIExpression()), !dbg !6709
  ret i32 0, !dbg !6710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rc_setup_rx_device(%struct.rc_dev* %dev) #0 !dbg !6711 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.rc_dev*, align 8
  %rc = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !6712, metadata !DIExpression()), !dbg !6713
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6714, metadata !DIExpression()), !dbg !6715
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6716
  %input_dev = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %0, i32 0, i32 12, !dbg !6717
  %1 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6717
  %call = call i32 @input_register_device(%struct.input_dev* %1) #11, !dbg !6718
  store i32 %call, i32* %rc, align 4, !dbg !6719
  %2 = load i32, i32* %rc, align 4, !dbg !6720
  %tobool = icmp ne i32 %2, 0, !dbg !6720
  br i1 %tobool, label %if.then, label %if.end, !dbg !6722

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %rc, align 4, !dbg !6723
  store i32 %3, i32* %retval, align 4, !dbg !6724
  br label %return, !dbg !6724

if.end:                                           ; preds = %entry
  %4 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6725
  %allowed_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %4, i32 0, i32 16, !dbg !6727
  %5 = load i64, i64* %allowed_protocols, align 8, !dbg !6727
  %cmp = icmp eq i64 %5, 4194304, !dbg !6728
  br i1 %cmp, label %if.then1, label %if.else, !dbg !6729

if.then1:                                         ; preds = %if.end
  %6 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6730
  %input_dev2 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 12, !dbg !6731
  %7 = load %struct.input_dev*, %struct.input_dev** %input_dev2, align 8, !dbg !6731
  %rep = getelementptr inbounds %struct.input_dev, %struct.input_dev* %7, i32 0, i32 24, !dbg !6732
  %arrayidx = getelementptr [2 x i32], [2 x i32]* %rep, i64 0, i64 0, !dbg !6730
  store i32 0, i32* %arrayidx, align 8, !dbg !6733
  br label %if.end6, !dbg !6730

if.else:                                          ; preds = %if.end
  %8 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6734
  %input_dev3 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %8, i32 0, i32 12, !dbg !6735
  %9 = load %struct.input_dev*, %struct.input_dev** %input_dev3, align 8, !dbg !6735
  %rep4 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %9, i32 0, i32 24, !dbg !6736
  %arrayidx5 = getelementptr [2 x i32], [2 x i32]* %rep4, i64 0, i64 0, !dbg !6734
  store i32 500, i32* %arrayidx5, align 8, !dbg !6737
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then1
  %10 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6738
  %input_dev7 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %10, i32 0, i32 12, !dbg !6739
  %11 = load %struct.input_dev*, %struct.input_dev** %input_dev7, align 8, !dbg !6739
  %rep8 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %11, i32 0, i32 24, !dbg !6740
  %arrayidx9 = getelementptr [2 x i32], [2 x i32]* %rep8, i64 0, i64 1, !dbg !6738
  store i32 125, i32* %arrayidx9, align 4, !dbg !6741
  store i32 0, i32* %retval, align 4, !dbg !6742
  br label %return, !dbg !6742

return:                                           ; preds = %if.end6, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !6743
  ret i32 %12, !dbg !6743
}

; Function Attrs: noredzone
declare dso_local i32 @ir_raw_event_register(%struct.rc_dev*) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rc_free_rx_device(%struct.rc_dev* %dev) #0 !dbg !6744 {
entry:
  %dev.addr = alloca %struct.rc_dev*, align 8
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !6745, metadata !DIExpression()), !dbg !6746
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6747
  %tobool = icmp ne %struct.rc_dev* %0, null, !dbg !6747
  br i1 %tobool, label %if.end, label %if.then, !dbg !6749

if.then:                                          ; preds = %entry
  br label %return, !dbg !6750

if.end:                                           ; preds = %entry
  %1 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6751
  %input_dev = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %1, i32 0, i32 12, !dbg !6753
  %2 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !6753
  %tobool1 = icmp ne %struct.input_dev* %2, null, !dbg !6751
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !6754

if.then2:                                         ; preds = %if.end
  %3 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6755
  %input_dev3 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %3, i32 0, i32 12, !dbg !6757
  %4 = load %struct.input_dev*, %struct.input_dev** %input_dev3, align 8, !dbg !6757
  call void @input_unregister_device(%struct.input_dev* %4) #11, !dbg !6758
  %5 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6759
  %input_dev4 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %5, i32 0, i32 12, !dbg !6760
  store %struct.input_dev* null, %struct.input_dev** %input_dev4, align 8, !dbg !6761
  br label %if.end5, !dbg !6762

if.end5:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6763
  %rc_map = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 8, !dbg !6764
  call void @ir_free_table(%struct.rc_map* %rc_map) #11, !dbg !6765
  br label %return, !dbg !6766

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !6766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @lirc_unregister(%struct.rc_dev* %dev) #0 !dbg !6767 {
entry:
  %dev.addr = alloca %struct.rc_dev*, align 8
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !6768, metadata !DIExpression()), !dbg !6769
  ret void, !dbg !6770
}

; Function Attrs: noredzone
declare dso_local void @device_del(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ir_free_table(%struct.rc_map* %rc_map) #0 !dbg !6771 {
entry:
  %rc_map.addr = alloca %struct.rc_map*, align 8
  store %struct.rc_map* %rc_map, %struct.rc_map** %rc_map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_map** %rc_map.addr, metadata !6774, metadata !DIExpression()), !dbg !6775
  %0 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !6776
  %size = getelementptr inbounds %struct.rc_map, %struct.rc_map* %0, i32 0, i32 1, !dbg !6777
  store i32 0, i32* %size, align 8, !dbg !6778
  %1 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !6779
  %name = getelementptr inbounds %struct.rc_map, %struct.rc_map* %1, i32 0, i32 5, !dbg !6780
  %2 = load i8*, i8** %name, align 8, !dbg !6780
  call void @kfree(i8* %2) #11, !dbg !6781
  %3 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !6782
  %name1 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %3, i32 0, i32 5, !dbg !6783
  store i8* null, i8** %name1, align 8, !dbg !6784
  %4 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !6785
  %scan = getelementptr inbounds %struct.rc_map, %struct.rc_map* %4, i32 0, i32 0, !dbg !6786
  %5 = load %struct.rc_map_table*, %struct.rc_map_table** %scan, align 8, !dbg !6786
  %6 = bitcast %struct.rc_map_table* %5 to i8*, !dbg !6785
  call void @kfree(i8* %6) #11, !dbg !6787
  %7 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !6788
  %scan2 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %7, i32 0, i32 0, !dbg !6789
  store %struct.rc_map_table* null, %struct.rc_map_table** %scan2, align 8, !dbg !6790
  ret void, !dbg !6791
}

; Function Attrs: noredzone
declare dso_local void @ir_raw_event_free(%struct.rc_dev*) #3

; Function Attrs: noredzone
declare dso_local void @ida_free(%struct.ida*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devm_rc_register_device(%struct.device* %parent, %struct.rc_dev* %dev) #0 !dbg !6792 {
entry:
  %retval = alloca i32, align 4
  %parent.addr = alloca %struct.device*, align 8
  %dev.addr = alloca %struct.rc_dev*, align 8
  %dr = alloca %struct.rc_dev**, align 8
  %ret = alloca i32, align 4
  store %struct.device* %parent, %struct.device** %parent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %parent.addr, metadata !6795, metadata !DIExpression()), !dbg !6796
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !6797, metadata !DIExpression()), !dbg !6798
  call void @llvm.dbg.declare(metadata %struct.rc_dev*** %dr, metadata !6799, metadata !DIExpression()), !dbg !6800
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6801, metadata !DIExpression()), !dbg !6802
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_rc_release, i64 8, i32 3264) #11, !dbg !6803
  %0 = bitcast i8* %call to %struct.rc_dev**, !dbg !6803
  store %struct.rc_dev** %0, %struct.rc_dev*** %dr, align 8, !dbg !6804
  %1 = load %struct.rc_dev**, %struct.rc_dev*** %dr, align 8, !dbg !6805
  %tobool = icmp ne %struct.rc_dev** %1, null, !dbg !6805
  br i1 %tobool, label %if.end, label %if.then, !dbg !6807

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !6808
  br label %return, !dbg !6808

if.end:                                           ; preds = %entry
  %2 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6809
  %call1 = call i32 @rc_register_device(%struct.rc_dev* %2) #11, !dbg !6810
  store i32 %call1, i32* %ret, align 4, !dbg !6811
  %3 = load i32, i32* %ret, align 4, !dbg !6812
  %tobool2 = icmp ne i32 %3, 0, !dbg !6812
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !6814

if.then3:                                         ; preds = %if.end
  %4 = load %struct.rc_dev**, %struct.rc_dev*** %dr, align 8, !dbg !6815
  %5 = bitcast %struct.rc_dev** %4 to i8*, !dbg !6815
  call void @devres_free(i8* %5) #11, !dbg !6817
  %6 = load i32, i32* %ret, align 4, !dbg !6818
  store i32 %6, i32* %retval, align 4, !dbg !6819
  br label %return, !dbg !6819

if.end4:                                          ; preds = %if.end
  %7 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6820
  %8 = load %struct.rc_dev**, %struct.rc_dev*** %dr, align 8, !dbg !6821
  store %struct.rc_dev* %7, %struct.rc_dev** %8, align 8, !dbg !6822
  %9 = load %struct.device*, %struct.device** %parent.addr, align 8, !dbg !6823
  %10 = load %struct.rc_dev**, %struct.rc_dev*** %dr, align 8, !dbg !6824
  %11 = bitcast %struct.rc_dev** %10 to i8*, !dbg !6824
  call void @devres_add(%struct.device* %9, i8* %11) #11, !dbg !6825
  store i32 0, i32* %retval, align 4, !dbg !6826
  br label %return, !dbg !6826

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !6827
  ret i32 %12, !dbg !6827
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_rc_release(%struct.device* %dev, i8* %res) #0 !dbg !6828 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6829, metadata !DIExpression()), !dbg !6830
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !6831, metadata !DIExpression()), !dbg !6832
  %0 = load i8*, i8** %res.addr, align 8, !dbg !6833
  %1 = bitcast i8* %0 to %struct.rc_dev**, !dbg !6834
  %2 = load %struct.rc_dev*, %struct.rc_dev** %1, align 8, !dbg !6835
  call void @rc_unregister_device(%struct.rc_dev* %2) #11, !dbg !6836
  ret void, !dbg !6837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @rc_unregister_device(%struct.rc_dev* %dev) #0 !dbg !6838 {
entry:
  %dev.addr = alloca %struct.rc_dev*, align 8
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !6839, metadata !DIExpression()), !dbg !6840
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6841
  %tobool = icmp ne %struct.rc_dev* %0, null, !dbg !6841
  br i1 %tobool, label %if.end, label %if.then, !dbg !6843

if.then:                                          ; preds = %entry
  br label %if.end16, !dbg !6844

if.end:                                           ; preds = %entry
  %1 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6845
  %driver_type = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %1, i32 0, i32 13, !dbg !6847
  %2 = load i32, i32* %driver_type, align 8, !dbg !6847
  %cmp = icmp eq i32 %2, 1, !dbg !6848
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !6849

if.then1:                                         ; preds = %if.end
  %3 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6850
  call void @ir_raw_event_unregister(%struct.rc_dev* %3) #11, !dbg !6851
  br label %if.end2, !dbg !6851

if.end2:                                          ; preds = %if.then1, %if.end
  %4 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6852
  %timer_keyup = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %4, i32 0, i32 28, !dbg !6852
  %call = call i32 @del_timer(%struct.timer_list* %timer_keyup) #11, !dbg !6852
  %5 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6853
  %timer_repeat = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %5, i32 0, i32 29, !dbg !6853
  %call3 = call i32 @del_timer(%struct.timer_list* %timer_repeat) #11, !dbg !6853
  %6 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6854
  %lock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 9, !dbg !6855
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !6856
  %7 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6857
  %users = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %7, i32 0, i32 23, !dbg !6859
  %8 = load i32, i32* %users, align 8, !dbg !6859
  %tobool4 = icmp ne i32 %8, 0, !dbg !6857
  br i1 %tobool4, label %land.lhs.true, label %if.end8, !dbg !6860

land.lhs.true:                                    ; preds = %if.end2
  %9 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6861
  %close = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %9, i32 0, i32 42, !dbg !6862
  %10 = load void (%struct.rc_dev*)*, void (%struct.rc_dev*)** %close, align 8, !dbg !6862
  %tobool5 = icmp ne void (%struct.rc_dev*)* %10, null, !dbg !6861
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !6863

if.then6:                                         ; preds = %land.lhs.true
  %11 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6864
  %close7 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %11, i32 0, i32 42, !dbg !6865
  %12 = load void (%struct.rc_dev*)*, void (%struct.rc_dev*)** %close7, align 8, !dbg !6865
  %13 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6866
  call void %12(%struct.rc_dev* %13) #11, !dbg !6864
  br label %if.end8, !dbg !6864

if.end8:                                          ; preds = %if.then6, %land.lhs.true, %if.end2
  %14 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6867
  %registered = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %14, i32 0, i32 39, !dbg !6868
  store i8 0, i8* %registered, align 8, !dbg !6869
  %15 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6870
  %lock9 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %15, i32 0, i32 9, !dbg !6871
  call void @mutex_unlock(%struct.mutex* %lock9) #11, !dbg !6872
  %16 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6873
  call void @rc_free_rx_device(%struct.rc_dev* %16) #11, !dbg !6874
  %17 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6875
  %allowed_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %17, i32 0, i32 16, !dbg !6877
  %18 = load i64, i64* %allowed_protocols, align 8, !dbg !6877
  %cmp10 = icmp ne i64 %18, 4194304, !dbg !6878
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !6879

if.then11:                                        ; preds = %if.end8
  %19 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6880
  call void @lirc_unregister(%struct.rc_dev* %19) #11, !dbg !6881
  br label %if.end12, !dbg !6881

if.end12:                                         ; preds = %if.then11, %if.end8
  %20 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6882
  %dev13 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %20, i32 0, i32 0, !dbg !6883
  call void @device_del(%struct.device* %dev13) #11, !dbg !6884
  %21 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6885
  %minor = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %21, i32 0, i32 10, !dbg !6885
  %22 = load i32, i32* %minor, align 8, !dbg !6885
  call void @ida_free(%struct.ida* @rc_ida, i32 %22) #11, !dbg !6885
  %23 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6886
  %managed_alloc = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %23, i32 0, i32 1, !dbg !6888
  %24 = load i8, i8* %managed_alloc, align 8, !dbg !6888
  %tobool14 = trunc i8 %24 to i1, !dbg !6888
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !6889

if.then15:                                        ; preds = %if.end12
  %25 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !6890
  call void @rc_free_device(%struct.rc_dev* %25) #11, !dbg !6891
  br label %if.end16, !dbg !6891

if.end16:                                         ; preds = %if.then, %if.then15, %if.end12
  ret void, !dbg !6892
}

; Function Attrs: noredzone
declare dso_local void @ir_raw_event_unregister(%struct.rc_dev*) #3

; Function Attrs: noredzone
declare dso_local i32 @del_timer(%struct.timer_list*) #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @rc_core_exit() #5 section ".exit.text" !dbg !6893 {
entry:
  call void @lirc_dev_exit() #11, !dbg !6894
  call void @class_unregister(%struct.class* @rc_class) #11, !dbg !6895
  %0 = load %struct.led_trigger*, %struct.led_trigger** @led_feedback, align 8, !dbg !6896
  call void @led_trigger_unregister_simple(%struct.led_trigger* %0) #11, !dbg !6897
  call void @rc_map_unregister(%struct.rc_map_list* @empty_map) #11, !dbg !6898
  ret void, !dbg !6899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @lirc_dev_exit() #0 !dbg !6900 {
entry:
  ret void, !dbg !6901
}

; Function Attrs: noredzone
declare dso_local void @class_unregister(%struct.class*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @led_trigger_unregister_simple(%struct.led_trigger* %trigger) #0 !dbg !6902 {
entry:
  %trigger.addr = alloca %struct.led_trigger*, align 8
  store %struct.led_trigger* %trigger, %struct.led_trigger** %trigger.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.led_trigger** %trigger.addr, metadata !6905, metadata !DIExpression()), !dbg !6906
  ret void, !dbg !6907
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @rc_core_init() #5 section ".init.text" !dbg !4360 {
entry:
  %retval = alloca i32, align 4
  %rc = alloca i32, align 4
  %tmp = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6908, metadata !DIExpression()), !dbg !6909
  %call = call i32 @__class_register(%struct.class* @rc_class, %struct.lock_class_key* @rc_core_init.__key) #11, !dbg !6910
  store i32 %call, i32* %tmp, align 4, !dbg !6910
  %0 = load i32, i32* %tmp, align 4, !dbg !6910
  store i32 %0, i32* %rc, align 4, !dbg !6909
  %1 = load i32, i32* %rc, align 4, !dbg !6912
  %tobool = icmp ne i32 %1, 0, !dbg !6912
  br i1 %tobool, label %if.then, label %if.end, !dbg !6914

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.73, i64 0, i64 0)) #12, !dbg !6915
  %2 = load i32, i32* %rc, align 4, !dbg !6917
  store i32 %2, i32* %retval, align 4, !dbg !6918
  br label %return, !dbg !6918

if.end:                                           ; preds = %entry
  %call2 = call i32 @lirc_dev_init() #11, !dbg !6919
  store i32 %call2, i32* %rc, align 4, !dbg !6920
  %3 = load i32, i32* %rc, align 4, !dbg !6921
  %tobool3 = icmp ne i32 %3, 0, !dbg !6921
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !6923

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.74, i64 0, i64 0)) #12, !dbg !6924
  call void @class_unregister(%struct.class* @rc_class) #11, !dbg !6926
  %4 = load i32, i32* %rc, align 4, !dbg !6927
  store i32 %4, i32* %retval, align 4, !dbg !6928
  br label %return, !dbg !6928

if.end6:                                          ; preds = %if.end
  call void @led_trigger_register_simple(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), %struct.led_trigger** @led_feedback) #11, !dbg !6929
  %call7 = call i32 @rc_map_register(%struct.rc_map_list* @empty_map) #11, !dbg !6930
  store i32 0, i32* %retval, align 4, !dbg !6931
  br label %return, !dbg !6931

return:                                           ; preds = %if.end6, %if.then4, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6932
  ret i32 %5, !dbg !6932
}

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6933 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6936, metadata !DIExpression()), !dbg !6937
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6938, metadata !DIExpression()), !dbg !6939
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6940, metadata !DIExpression()), !dbg !6941
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6942
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6944
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6945
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !6946
  br i1 %call, label %if.end, label %if.then, !dbg !6947

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !6948

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6949
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6950
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !6951
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !6952
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !6953
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6954
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !6955
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !6956
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6957
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6958
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !6959
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !6960
  br label %do.body, !dbg !6961

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !6962

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !6964

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !6962

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6966
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !6966
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !6966
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !6966
  br label %do.end7, !dbg !6966

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !6962

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !6968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6969 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6972, metadata !DIExpression()), !dbg !6973
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !6974, metadata !DIExpression()), !dbg !6975
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !6976, metadata !DIExpression()), !dbg !6977
  ret i1 true, !dbg !6978
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !6979 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6980, metadata !DIExpression()), !dbg !6981
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6982
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !6984
  br i1 %call, label %if.end, label %if.then, !dbg !6985

if.then:                                          ; preds = %entry
  br label %return, !dbg !6986

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6987
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6988
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6988
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !6989
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !6990
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6990
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !6991
  br label %return, !dbg !6992

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6992
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !6993 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !6996, metadata !DIExpression()), !dbg !6997
  ret i1 true, !dbg !6998
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !6999 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !7000, metadata !DIExpression()), !dbg !7001
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !7002, metadata !DIExpression()), !dbg !7003
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7004
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7005
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !7006
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !7007
  br label %do.body, !dbg !7008

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !7009

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !7011

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !7009

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !7013
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !7013
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !7013
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !7013
  br label %do.end5, !dbg !7013

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !7009

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !7015
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !7016 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !7017, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7020, metadata !DIExpression()), !dbg !7019
  %0 = load i64, i64* %__edi, align 8, !dbg !7019
  store i64 %0, i64* %__edi, align 8, !dbg !7019
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7021, metadata !DIExpression()), !dbg !7019
  %1 = load i64, i64* %__esi, align 8, !dbg !7019
  store i64 %1, i64* %__esi, align 8, !dbg !7019
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7022, metadata !DIExpression()), !dbg !7019
  %2 = load i64, i64* %__edx, align 8, !dbg !7019
  store i64 %2, i64* %__edx, align 8, !dbg !7019
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7023, metadata !DIExpression()), !dbg !7019
  %3 = load i64, i64* %__ecx, align 8, !dbg !7019
  store i64 %3, i64* %__ecx, align 8, !dbg !7019
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7024, metadata !DIExpression()), !dbg !7019
  %4 = load i64, i64* %__eax, align 8, !dbg !7019
  store i64 %4, i64* %__eax, align 8, !dbg !7019
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !7019
  %6 = call i64 @llvm.read_register.i64(metadata !4363), !dbg !7025
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !7025, !srcloc !7028
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7025
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7025
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7025
  call void @llvm.write_register.i64(metadata !4363, i64 %asmresult1), !dbg !7025
  %8 = load i64, i64* %__eax, align 8, !dbg !7025
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !7029, metadata !DIExpression()), !dbg !7031
  store i64 -1, i64* %__mask, align 8, !dbg !7031
  %9 = load i64, i64* %__mask, align 8, !dbg !7031
  store i64 %9, i64* %tmp, align 8, !dbg !7031
  %10 = load i64, i64* %tmp, align 8, !dbg !7031
  %and = and i64 %8, %10, !dbg !7025
  store i64 %and, i64* %__ret, align 8, !dbg !7025
  %11 = load i64, i64* %__ret, align 8, !dbg !7019
  store i64 %11, i64* %tmp2, align 8, !dbg !7032
  %12 = load i64, i64* %tmp2, align 8, !dbg !7019
  ret i64 %12, !dbg !7033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !7034 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7035, metadata !DIExpression()), !dbg !7037
  %0 = load i64, i64* %__edi, align 8, !dbg !7037
  store i64 %0, i64* %__edi, align 8, !dbg !7037
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7038, metadata !DIExpression()), !dbg !7037
  %1 = load i64, i64* %__esi, align 8, !dbg !7037
  store i64 %1, i64* %__esi, align 8, !dbg !7037
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7039, metadata !DIExpression()), !dbg !7037
  %2 = load i64, i64* %__edx, align 8, !dbg !7037
  store i64 %2, i64* %__edx, align 8, !dbg !7037
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7040, metadata !DIExpression()), !dbg !7037
  %3 = load i64, i64* %__ecx, align 8, !dbg !7037
  store i64 %3, i64* %__ecx, align 8, !dbg !7037
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7041, metadata !DIExpression()), !dbg !7037
  %4 = load i64, i64* %__eax, align 8, !dbg !7037
  store i64 %4, i64* %__eax, align 8, !dbg !7037
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !7037
  %6 = call i64 @llvm.read_register.i64(metadata !4363), !dbg !7037
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !7037, !srcloc !7042
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !7037
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !7037
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7037
  call void @llvm.write_register.i64(metadata !4363, i64 %asmresult1), !dbg !7037
  ret void, !dbg !7043
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noredzone
declare dso_local i8* @bsearch(i8*, i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rc_map_cmp(i8* %key, i8* %elt) #0 !dbg !7044 {
entry:
  %retval = alloca i32, align 4
  %key.addr = alloca i8*, align 8
  %elt.addr = alloca i8*, align 8
  %scancode = alloca i64*, align 8
  %e = alloca %struct.rc_map_table*, align 8
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !7047, metadata !DIExpression()), !dbg !7048
  store i8* %elt, i8** %elt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %elt.addr, metadata !7049, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.declare(metadata i64** %scancode, metadata !7051, metadata !DIExpression()), !dbg !7054
  %0 = load i8*, i8** %key.addr, align 8, !dbg !7055
  %1 = bitcast i8* %0 to i64*, !dbg !7055
  store i64* %1, i64** %scancode, align 8, !dbg !7054
  call void @llvm.dbg.declare(metadata %struct.rc_map_table** %e, metadata !7056, metadata !DIExpression()), !dbg !7059
  %2 = load i8*, i8** %elt.addr, align 8, !dbg !7060
  %3 = bitcast i8* %2 to %struct.rc_map_table*, !dbg !7060
  store %struct.rc_map_table* %3, %struct.rc_map_table** %e, align 8, !dbg !7059
  %4 = load i64*, i64** %scancode, align 8, !dbg !7061
  %5 = load i64, i64* %4, align 8, !dbg !7063
  %6 = load %struct.rc_map_table*, %struct.rc_map_table** %e, align 8, !dbg !7064
  %scancode1 = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %6, i32 0, i32 0, !dbg !7065
  %7 = load i64, i64* %scancode1, align 8, !dbg !7065
  %cmp = icmp ult i64 %5, %7, !dbg !7066
  br i1 %cmp, label %if.then, label %if.else, !dbg !7067

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !7068
  br label %return, !dbg !7068

if.else:                                          ; preds = %entry
  %8 = load i64*, i64** %scancode, align 8, !dbg !7069
  %9 = load i64, i64* %8, align 8, !dbg !7071
  %10 = load %struct.rc_map_table*, %struct.rc_map_table** %e, align 8, !dbg !7072
  %scancode2 = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %10, i32 0, i32 0, !dbg !7073
  %11 = load i64, i64* %scancode2, align 8, !dbg !7073
  %cmp3 = icmp ugt i64 %9, %11, !dbg !7074
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !7075

if.then4:                                         ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !7076
  br label %return, !dbg !7076

if.end:                                           ; preds = %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7077
  br label %return, !dbg !7077

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7078
  ret i32 %12, !dbg !7078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !7079 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !7082, metadata !DIExpression()), !dbg !7083
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7084, metadata !DIExpression()), !dbg !7086
  %0 = load i64, i64* %__edi, align 8, !dbg !7086
  store i64 %0, i64* %__edi, align 8, !dbg !7086
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7087, metadata !DIExpression()), !dbg !7086
  %1 = load i64, i64* %__esi, align 8, !dbg !7086
  store i64 %1, i64* %__esi, align 8, !dbg !7086
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7088, metadata !DIExpression()), !dbg !7086
  %2 = load i64, i64* %__edx, align 8, !dbg !7086
  store i64 %2, i64* %__edx, align 8, !dbg !7086
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7089, metadata !DIExpression()), !dbg !7086
  %3 = load i64, i64* %__ecx, align 8, !dbg !7086
  store i64 %3, i64* %__ecx, align 8, !dbg !7086
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7090, metadata !DIExpression()), !dbg !7086
  %4 = load i64, i64* %__eax, align 8, !dbg !7086
  store i64 %4, i64* %__eax, align 8, !dbg !7086
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !7086
  %6 = call i64 @llvm.read_register.i64(metadata !4363), !dbg !7086
  %7 = load i64, i64* %f.addr, align 8, !dbg !7086
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !7086, !srcloc !7091
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !7086
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !7086
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7086
  call void @llvm.write_register.i64(metadata !4363, i64 %asmresult1), !dbg !7086
  ret void, !dbg !7092
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @input_report_key(%struct.input_dev* %dev, i32 %code, i32 %value) #0 !dbg !7093 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  %code.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !7096, metadata !DIExpression()), !dbg !7097
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !7098, metadata !DIExpression()), !dbg !7099
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !7100, metadata !DIExpression()), !dbg !7101
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7102
  %1 = load i32, i32* %code.addr, align 4, !dbg !7103
  %2 = load i32, i32* %value.addr, align 4, !dbg !7104
  %tobool = icmp ne i32 %2, 0, !dbg !7105
  %lnot = xor i1 %tobool, true, !dbg !7105
  %lnot1 = xor i1 %lnot, true, !dbg !7106
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !7106
  call void @input_event(%struct.input_dev* %0, i32 1, i32 %1, i32 %lnot.ext) #11, !dbg !7107
  ret void, !dbg !7108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @led_trigger_event(%struct.led_trigger* %trigger, i32 %event) #0 !dbg !7109 {
entry:
  %trigger.addr = alloca %struct.led_trigger*, align 8
  %event.addr = alloca i32, align 4
  store %struct.led_trigger* %trigger, %struct.led_trigger** %trigger.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.led_trigger** %trigger.addr, metadata !7112, metadata !DIExpression()), !dbg !7113
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !7114, metadata !DIExpression()), !dbg !7115
  ret void, !dbg !7116
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !7117 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !7118, metadata !DIExpression()), !dbg !7119
  %0 = load i32, i32* %m.addr, align 4, !dbg !7120
  %conv = zext i32 %0 to i64, !dbg !7120
  %add = add i64 %conv, 4, !dbg !7121
  %sub = sub i64 %add, 1, !dbg !7122
  %div = sdiv i64 %sub, 4, !dbg !7123
  ret i64 %div, !dbg !7124
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @timer_pending(%struct.timer_list* %timer) #0 !dbg !7125 {
entry:
  %timer.addr = alloca %struct.timer_list*, align 8
  store %struct.timer_list* %timer, %struct.timer_list** %timer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.timer_list** %timer.addr, metadata !7130, metadata !DIExpression()), !dbg !7131
  %0 = load %struct.timer_list*, %struct.timer_list** %timer.addr, align 8, !dbg !7132
  %entry1 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %0, i32 0, i32 0, !dbg !7133
  %call = call i32 @hlist_unhashed_lockless(%struct.hlist_node* %entry1) #11, !dbg !7134
  %tobool = icmp ne i32 %call, 0, !dbg !7135
  %lnot = xor i1 %tobool, true, !dbg !7135
  %lnot.ext = zext i1 %lnot to i32, !dbg !7135
  ret i32 %lnot.ext, !dbg !7136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hlist_unhashed_lockless(%struct.hlist_node* %h) #0 !dbg !7137 {
entry:
  %h.addr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.hlist_node**, align 8
  store %struct.hlist_node* %h, %struct.hlist_node** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %h.addr, metadata !7142, metadata !DIExpression()), !dbg !7143
  br label %do.body, !dbg !7144

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7146

do.end:                                           ; preds = %do.body
  %0 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !7144
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 1, !dbg !7144
  %1 = load volatile %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !7144
  store %struct.hlist_node** %1, %struct.hlist_node*** %tmp, align 8, !dbg !7146
  %2 = load %struct.hlist_node**, %struct.hlist_node*** %tmp, align 8, !dbg !7144
  %tobool = icmp ne %struct.hlist_node** %2, null, !dbg !7148
  %lnot = xor i1 %tobool, true, !dbg !7148
  %lnot.ext = zext i1 %lnot to i32, !dbg !7148
  ret i32 %lnot.ext, !dbg !7149
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !7150 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7154, metadata !DIExpression()), !dbg !7159
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7161, metadata !DIExpression()), !dbg !7162
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7163, metadata !DIExpression()), !dbg !7164
  %0 = load i64, i64* %size.addr, align 8, !dbg !7165
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !7167
  br i1 %1, label %if.then, label %if.end447, !dbg !7168

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !7169
  %tobool = icmp ne i64 %2, 0, !dbg !7169
  br i1 %tobool, label %if.end, label %if.then1, !dbg !7172

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !7173
  br label %return, !dbg !7173

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !7174
  %cmp = icmp ult i64 %3, 4096, !dbg !7176
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7177

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7178
  br label %return, !dbg !7178

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub = sub i64 %4, 1, !dbg !7179
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !7179
  br i1 %5, label %cond.true, label %cond.false442, !dbg !7179

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub4 = sub i64 %6, 1, !dbg !7179
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !7179
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !7179

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub6 = sub i64 %8, 1, !dbg !7179
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !7179
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !7179

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !7179

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub9 = sub i64 %9, 1, !dbg !7179
  %and = and i64 %sub9, -9223372036854775808, !dbg !7179
  %tobool10 = icmp ne i64 %and, 0, !dbg !7179
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !7179

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !7179

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub13 = sub i64 %10, 1, !dbg !7179
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !7179
  %tobool15 = icmp ne i64 %and14, 0, !dbg !7179
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !7179

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !7179

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub18 = sub i64 %11, 1, !dbg !7179
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !7179
  %tobool20 = icmp ne i64 %and19, 0, !dbg !7179
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !7179

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !7179

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub23 = sub i64 %12, 1, !dbg !7179
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !7179
  %tobool25 = icmp ne i64 %and24, 0, !dbg !7179
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !7179

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !7179

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub28 = sub i64 %13, 1, !dbg !7179
  %and29 = and i64 %sub28, 576460752303423488, !dbg !7179
  %tobool30 = icmp ne i64 %and29, 0, !dbg !7179
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !7179

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !7179

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub33 = sub i64 %14, 1, !dbg !7179
  %and34 = and i64 %sub33, 288230376151711744, !dbg !7179
  %tobool35 = icmp ne i64 %and34, 0, !dbg !7179
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !7179

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !7179

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub38 = sub i64 %15, 1, !dbg !7179
  %and39 = and i64 %sub38, 144115188075855872, !dbg !7179
  %tobool40 = icmp ne i64 %and39, 0, !dbg !7179
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !7179

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !7179

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub43 = sub i64 %16, 1, !dbg !7179
  %and44 = and i64 %sub43, 72057594037927936, !dbg !7179
  %tobool45 = icmp ne i64 %and44, 0, !dbg !7179
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !7179

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !7179

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub48 = sub i64 %17, 1, !dbg !7179
  %and49 = and i64 %sub48, 36028797018963968, !dbg !7179
  %tobool50 = icmp ne i64 %and49, 0, !dbg !7179
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !7179

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !7179

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub53 = sub i64 %18, 1, !dbg !7179
  %and54 = and i64 %sub53, 18014398509481984, !dbg !7179
  %tobool55 = icmp ne i64 %and54, 0, !dbg !7179
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !7179

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !7179

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub58 = sub i64 %19, 1, !dbg !7179
  %and59 = and i64 %sub58, 9007199254740992, !dbg !7179
  %tobool60 = icmp ne i64 %and59, 0, !dbg !7179
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !7179

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !7179

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub63 = sub i64 %20, 1, !dbg !7179
  %and64 = and i64 %sub63, 4503599627370496, !dbg !7179
  %tobool65 = icmp ne i64 %and64, 0, !dbg !7179
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !7179

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !7179

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub68 = sub i64 %21, 1, !dbg !7179
  %and69 = and i64 %sub68, 2251799813685248, !dbg !7179
  %tobool70 = icmp ne i64 %and69, 0, !dbg !7179
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !7179

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !7179

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub73 = sub i64 %22, 1, !dbg !7179
  %and74 = and i64 %sub73, 1125899906842624, !dbg !7179
  %tobool75 = icmp ne i64 %and74, 0, !dbg !7179
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !7179

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !7179

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub78 = sub i64 %23, 1, !dbg !7179
  %and79 = and i64 %sub78, 562949953421312, !dbg !7179
  %tobool80 = icmp ne i64 %and79, 0, !dbg !7179
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !7179

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !7179

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub83 = sub i64 %24, 1, !dbg !7179
  %and84 = and i64 %sub83, 281474976710656, !dbg !7179
  %tobool85 = icmp ne i64 %and84, 0, !dbg !7179
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !7179

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !7179

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub88 = sub i64 %25, 1, !dbg !7179
  %and89 = and i64 %sub88, 140737488355328, !dbg !7179
  %tobool90 = icmp ne i64 %and89, 0, !dbg !7179
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !7179

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !7179

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub93 = sub i64 %26, 1, !dbg !7179
  %and94 = and i64 %sub93, 70368744177664, !dbg !7179
  %tobool95 = icmp ne i64 %and94, 0, !dbg !7179
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !7179

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !7179

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub98 = sub i64 %27, 1, !dbg !7179
  %and99 = and i64 %sub98, 35184372088832, !dbg !7179
  %tobool100 = icmp ne i64 %and99, 0, !dbg !7179
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !7179

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !7179

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub103 = sub i64 %28, 1, !dbg !7179
  %and104 = and i64 %sub103, 17592186044416, !dbg !7179
  %tobool105 = icmp ne i64 %and104, 0, !dbg !7179
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !7179

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !7179

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub108 = sub i64 %29, 1, !dbg !7179
  %and109 = and i64 %sub108, 8796093022208, !dbg !7179
  %tobool110 = icmp ne i64 %and109, 0, !dbg !7179
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !7179

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !7179

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub113 = sub i64 %30, 1, !dbg !7179
  %and114 = and i64 %sub113, 4398046511104, !dbg !7179
  %tobool115 = icmp ne i64 %and114, 0, !dbg !7179
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !7179

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !7179

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub118 = sub i64 %31, 1, !dbg !7179
  %and119 = and i64 %sub118, 2199023255552, !dbg !7179
  %tobool120 = icmp ne i64 %and119, 0, !dbg !7179
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !7179

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !7179

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub123 = sub i64 %32, 1, !dbg !7179
  %and124 = and i64 %sub123, 1099511627776, !dbg !7179
  %tobool125 = icmp ne i64 %and124, 0, !dbg !7179
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !7179

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !7179

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub128 = sub i64 %33, 1, !dbg !7179
  %and129 = and i64 %sub128, 549755813888, !dbg !7179
  %tobool130 = icmp ne i64 %and129, 0, !dbg !7179
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !7179

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !7179

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub133 = sub i64 %34, 1, !dbg !7179
  %and134 = and i64 %sub133, 274877906944, !dbg !7179
  %tobool135 = icmp ne i64 %and134, 0, !dbg !7179
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !7179

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !7179

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub138 = sub i64 %35, 1, !dbg !7179
  %and139 = and i64 %sub138, 137438953472, !dbg !7179
  %tobool140 = icmp ne i64 %and139, 0, !dbg !7179
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !7179

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !7179

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub143 = sub i64 %36, 1, !dbg !7179
  %and144 = and i64 %sub143, 68719476736, !dbg !7179
  %tobool145 = icmp ne i64 %and144, 0, !dbg !7179
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !7179

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !7179

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub148 = sub i64 %37, 1, !dbg !7179
  %and149 = and i64 %sub148, 34359738368, !dbg !7179
  %tobool150 = icmp ne i64 %and149, 0, !dbg !7179
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !7179

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !7179

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub153 = sub i64 %38, 1, !dbg !7179
  %and154 = and i64 %sub153, 17179869184, !dbg !7179
  %tobool155 = icmp ne i64 %and154, 0, !dbg !7179
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !7179

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !7179

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub158 = sub i64 %39, 1, !dbg !7179
  %and159 = and i64 %sub158, 8589934592, !dbg !7179
  %tobool160 = icmp ne i64 %and159, 0, !dbg !7179
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !7179

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !7179

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub163 = sub i64 %40, 1, !dbg !7179
  %and164 = and i64 %sub163, 4294967296, !dbg !7179
  %tobool165 = icmp ne i64 %and164, 0, !dbg !7179
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !7179

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !7179

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub168 = sub i64 %41, 1, !dbg !7179
  %and169 = and i64 %sub168, 2147483648, !dbg !7179
  %tobool170 = icmp ne i64 %and169, 0, !dbg !7179
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !7179

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !7179

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub173 = sub i64 %42, 1, !dbg !7179
  %and174 = and i64 %sub173, 1073741824, !dbg !7179
  %tobool175 = icmp ne i64 %and174, 0, !dbg !7179
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !7179

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !7179

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub178 = sub i64 %43, 1, !dbg !7179
  %and179 = and i64 %sub178, 536870912, !dbg !7179
  %tobool180 = icmp ne i64 %and179, 0, !dbg !7179
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !7179

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !7179

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub183 = sub i64 %44, 1, !dbg !7179
  %and184 = and i64 %sub183, 268435456, !dbg !7179
  %tobool185 = icmp ne i64 %and184, 0, !dbg !7179
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !7179

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !7179

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub188 = sub i64 %45, 1, !dbg !7179
  %and189 = and i64 %sub188, 134217728, !dbg !7179
  %tobool190 = icmp ne i64 %and189, 0, !dbg !7179
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !7179

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !7179

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub193 = sub i64 %46, 1, !dbg !7179
  %and194 = and i64 %sub193, 67108864, !dbg !7179
  %tobool195 = icmp ne i64 %and194, 0, !dbg !7179
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !7179

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !7179

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub198 = sub i64 %47, 1, !dbg !7179
  %and199 = and i64 %sub198, 33554432, !dbg !7179
  %tobool200 = icmp ne i64 %and199, 0, !dbg !7179
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !7179

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !7179

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub203 = sub i64 %48, 1, !dbg !7179
  %and204 = and i64 %sub203, 16777216, !dbg !7179
  %tobool205 = icmp ne i64 %and204, 0, !dbg !7179
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !7179

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !7179

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub208 = sub i64 %49, 1, !dbg !7179
  %and209 = and i64 %sub208, 8388608, !dbg !7179
  %tobool210 = icmp ne i64 %and209, 0, !dbg !7179
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !7179

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !7179

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub213 = sub i64 %50, 1, !dbg !7179
  %and214 = and i64 %sub213, 4194304, !dbg !7179
  %tobool215 = icmp ne i64 %and214, 0, !dbg !7179
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !7179

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !7179

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub218 = sub i64 %51, 1, !dbg !7179
  %and219 = and i64 %sub218, 2097152, !dbg !7179
  %tobool220 = icmp ne i64 %and219, 0, !dbg !7179
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !7179

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !7179

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub223 = sub i64 %52, 1, !dbg !7179
  %and224 = and i64 %sub223, 1048576, !dbg !7179
  %tobool225 = icmp ne i64 %and224, 0, !dbg !7179
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !7179

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !7179

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub228 = sub i64 %53, 1, !dbg !7179
  %and229 = and i64 %sub228, 524288, !dbg !7179
  %tobool230 = icmp ne i64 %and229, 0, !dbg !7179
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !7179

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !7179

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub233 = sub i64 %54, 1, !dbg !7179
  %and234 = and i64 %sub233, 262144, !dbg !7179
  %tobool235 = icmp ne i64 %and234, 0, !dbg !7179
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !7179

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !7179

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub238 = sub i64 %55, 1, !dbg !7179
  %and239 = and i64 %sub238, 131072, !dbg !7179
  %tobool240 = icmp ne i64 %and239, 0, !dbg !7179
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !7179

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !7179

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub243 = sub i64 %56, 1, !dbg !7179
  %and244 = and i64 %sub243, 65536, !dbg !7179
  %tobool245 = icmp ne i64 %and244, 0, !dbg !7179
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !7179

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !7179

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub248 = sub i64 %57, 1, !dbg !7179
  %and249 = and i64 %sub248, 32768, !dbg !7179
  %tobool250 = icmp ne i64 %and249, 0, !dbg !7179
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !7179

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !7179

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub253 = sub i64 %58, 1, !dbg !7179
  %and254 = and i64 %sub253, 16384, !dbg !7179
  %tobool255 = icmp ne i64 %and254, 0, !dbg !7179
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !7179

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !7179

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub258 = sub i64 %59, 1, !dbg !7179
  %and259 = and i64 %sub258, 8192, !dbg !7179
  %tobool260 = icmp ne i64 %and259, 0, !dbg !7179
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !7179

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !7179

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub263 = sub i64 %60, 1, !dbg !7179
  %and264 = and i64 %sub263, 4096, !dbg !7179
  %tobool265 = icmp ne i64 %and264, 0, !dbg !7179
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !7179

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !7179

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub268 = sub i64 %61, 1, !dbg !7179
  %and269 = and i64 %sub268, 2048, !dbg !7179
  %tobool270 = icmp ne i64 %and269, 0, !dbg !7179
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !7179

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !7179

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub273 = sub i64 %62, 1, !dbg !7179
  %and274 = and i64 %sub273, 1024, !dbg !7179
  %tobool275 = icmp ne i64 %and274, 0, !dbg !7179
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !7179

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !7179

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub278 = sub i64 %63, 1, !dbg !7179
  %and279 = and i64 %sub278, 512, !dbg !7179
  %tobool280 = icmp ne i64 %and279, 0, !dbg !7179
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !7179

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !7179

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub283 = sub i64 %64, 1, !dbg !7179
  %and284 = and i64 %sub283, 256, !dbg !7179
  %tobool285 = icmp ne i64 %and284, 0, !dbg !7179
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !7179

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !7179

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub288 = sub i64 %65, 1, !dbg !7179
  %and289 = and i64 %sub288, 128, !dbg !7179
  %tobool290 = icmp ne i64 %and289, 0, !dbg !7179
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !7179

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !7179

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub293 = sub i64 %66, 1, !dbg !7179
  %and294 = and i64 %sub293, 64, !dbg !7179
  %tobool295 = icmp ne i64 %and294, 0, !dbg !7179
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !7179

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !7179

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub298 = sub i64 %67, 1, !dbg !7179
  %and299 = and i64 %sub298, 32, !dbg !7179
  %tobool300 = icmp ne i64 %and299, 0, !dbg !7179
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !7179

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !7179

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub303 = sub i64 %68, 1, !dbg !7179
  %and304 = and i64 %sub303, 16, !dbg !7179
  %tobool305 = icmp ne i64 %and304, 0, !dbg !7179
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !7179

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !7179

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub308 = sub i64 %69, 1, !dbg !7179
  %and309 = and i64 %sub308, 8, !dbg !7179
  %tobool310 = icmp ne i64 %and309, 0, !dbg !7179
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !7179

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !7179

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub313 = sub i64 %70, 1, !dbg !7179
  %and314 = and i64 %sub313, 4, !dbg !7179
  %tobool315 = icmp ne i64 %and314, 0, !dbg !7179
  %71 = zext i1 %tobool315 to i64, !dbg !7179
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !7179
  br label %cond.end, !dbg !7179

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !7179
  br label %cond.end317, !dbg !7179

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !7179
  br label %cond.end319, !dbg !7179

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !7179
  br label %cond.end321, !dbg !7179

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !7179
  br label %cond.end323, !dbg !7179

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !7179
  br label %cond.end325, !dbg !7179

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !7179
  br label %cond.end327, !dbg !7179

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !7179
  br label %cond.end329, !dbg !7179

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !7179
  br label %cond.end331, !dbg !7179

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !7179
  br label %cond.end333, !dbg !7179

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !7179
  br label %cond.end335, !dbg !7179

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !7179
  br label %cond.end337, !dbg !7179

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !7179
  br label %cond.end339, !dbg !7179

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !7179
  br label %cond.end341, !dbg !7179

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !7179
  br label %cond.end343, !dbg !7179

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !7179
  br label %cond.end345, !dbg !7179

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !7179
  br label %cond.end347, !dbg !7179

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !7179
  br label %cond.end349, !dbg !7179

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !7179
  br label %cond.end351, !dbg !7179

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !7179
  br label %cond.end353, !dbg !7179

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !7179
  br label %cond.end355, !dbg !7179

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !7179
  br label %cond.end357, !dbg !7179

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !7179
  br label %cond.end359, !dbg !7179

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !7179
  br label %cond.end361, !dbg !7179

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !7179
  br label %cond.end363, !dbg !7179

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !7179
  br label %cond.end365, !dbg !7179

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !7179
  br label %cond.end367, !dbg !7179

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !7179
  br label %cond.end369, !dbg !7179

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !7179
  br label %cond.end371, !dbg !7179

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !7179
  br label %cond.end373, !dbg !7179

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !7179
  br label %cond.end375, !dbg !7179

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !7179
  br label %cond.end377, !dbg !7179

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !7179
  br label %cond.end379, !dbg !7179

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !7179
  br label %cond.end381, !dbg !7179

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !7179
  br label %cond.end383, !dbg !7179

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !7179
  br label %cond.end385, !dbg !7179

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !7179
  br label %cond.end387, !dbg !7179

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !7179
  br label %cond.end389, !dbg !7179

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !7179
  br label %cond.end391, !dbg !7179

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !7179
  br label %cond.end393, !dbg !7179

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !7179
  br label %cond.end395, !dbg !7179

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !7179
  br label %cond.end397, !dbg !7179

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !7179
  br label %cond.end399, !dbg !7179

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !7179
  br label %cond.end401, !dbg !7179

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !7179
  br label %cond.end403, !dbg !7179

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !7179
  br label %cond.end405, !dbg !7179

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !7179
  br label %cond.end407, !dbg !7179

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !7179
  br label %cond.end409, !dbg !7179

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !7179
  br label %cond.end411, !dbg !7179

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !7179
  br label %cond.end413, !dbg !7179

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !7179
  br label %cond.end415, !dbg !7179

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !7179
  br label %cond.end417, !dbg !7179

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !7179
  br label %cond.end419, !dbg !7179

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !7179
  br label %cond.end421, !dbg !7179

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !7179
  br label %cond.end423, !dbg !7179

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !7179
  br label %cond.end425, !dbg !7179

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !7179
  br label %cond.end427, !dbg !7179

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !7179
  br label %cond.end429, !dbg !7179

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !7179
  br label %cond.end431, !dbg !7179

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !7179
  br label %cond.end433, !dbg !7179

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !7179
  br label %cond.end435, !dbg !7179

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !7179
  br label %cond.end437, !dbg !7179

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !7179
  br label %cond.end440, !dbg !7179

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !7179

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !7179
  br label %cond.end444, !dbg !7179

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !7179
  %sub443 = sub i64 %72, 1, !dbg !7179
  %call = call i32 @__ilog2_u64(i64 %sub443) #14, !dbg !7179
  br label %cond.end444, !dbg !7179

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !7179
  %sub446 = sub i32 %cond445, 12, !dbg !7180
  %add = add i32 %sub446, 1, !dbg !7181
  store i32 %add, i32* %retval, align 4, !dbg !7182
  br label %return, !dbg !7182

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !7183
  %dec = add i64 %73, -1, !dbg !7183
  store i64 %dec, i64* %size.addr, align 8, !dbg !7183
  %74 = load i64, i64* %size.addr, align 8, !dbg !7184
  %shr = lshr i64 %74, 12, !dbg !7184
  store i64 %shr, i64* %size.addr, align 8, !dbg !7184
  %75 = load i64, i64* %size.addr, align 8, !dbg !7185
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7162
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !7186
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !7187
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !7186, !srcloc !7188
  store i32 %78, i32* %bitpos.i, align 4, !dbg !7186
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !7189
  %add.i = add i32 %79, 1, !dbg !7190
  store i32 %add.i, i32* %retval, align 4, !dbg !7191
  br label %return, !dbg !7191

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !7192
  ret i32 %80, !dbg !7192
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !7193 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7154, metadata !DIExpression()), !dbg !7197
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7161, metadata !DIExpression()), !dbg !7199
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !7200, metadata !DIExpression()), !dbg !7201
  %0 = load i64, i64* %n.addr, align 8, !dbg !7202
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !7199
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !7203
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !7204
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !7203, !srcloc !7188
  store i32 %3, i32* %bitpos.i, align 4, !dbg !7203
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !7205
  %add.i = add i32 %4, 1, !dbg !7206
  %sub = sub i32 %add.i, 1, !dbg !7207
  ret i32 %sub, !dbg !7208
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !7209 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !7213, metadata !DIExpression()), !dbg !7214
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !7215, metadata !DIExpression()), !dbg !7216
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7217, metadata !DIExpression()), !dbg !7218
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7219, metadata !DIExpression()), !dbg !7220
  %0 = load i8*, i8** %object.addr, align 8, !dbg !7221
  ret i8* %0, !dbg !7222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @input_get_drvdata(%struct.input_dev* %dev) #0 !dbg !7223 {
entry:
  %dev.addr = alloca %struct.input_dev*, align 8
  store %struct.input_dev* %dev, %struct.input_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %dev.addr, metadata !7226, metadata !DIExpression()), !dbg !7227
  %0 = load %struct.input_dev*, %struct.input_dev** %dev.addr, align 8, !dbg !7228
  %dev1 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %0, i32 0, i32 40, !dbg !7229
  %call = call i8* @dev_get_drvdata(%struct.device* %dev1) #11, !dbg !7230
  ret i8* %call, !dbg !7231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scancode_to_u64(%struct.input_keymap_entry* %ke, i64* %scancode) #0 !dbg !7232 {
entry:
  %retval = alloca i32, align 4
  %ke.addr = alloca %struct.input_keymap_entry*, align 8
  %scancode.addr = alloca i64*, align 8
  store %struct.input_keymap_entry* %ke, %struct.input_keymap_entry** %ke.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_keymap_entry** %ke.addr, metadata !7235, metadata !DIExpression()), !dbg !7236
  store i64* %scancode, i64** %scancode.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %scancode.addr, metadata !7237, metadata !DIExpression()), !dbg !7238
  %0 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !7239
  %len = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %0, i32 0, i32 1, !dbg !7240
  %1 = load i8, i8* %len, align 1, !dbg !7240
  %conv = zext i8 %1 to i32, !dbg !7239
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 4, label %sw.bb7
    i32 8, label %sw.bb11
  ], !dbg !7241

sw.bb:                                            ; preds = %entry
  %2 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !7242
  %scancode1 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %2, i32 0, i32 4, !dbg !7244
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %scancode1, i64 0, i64 0, !dbg !7245
  %3 = load i8, i8* %arraydecay, align 4, !dbg !7245
  %conv2 = zext i8 %3 to i64, !dbg !7245
  %4 = load i64*, i64** %scancode.addr, align 8, !dbg !7246
  store i64 %conv2, i64* %4, align 8, !dbg !7247
  br label %sw.epilog, !dbg !7248

sw.bb3:                                           ; preds = %entry
  %5 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !7249
  %scancode4 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %5, i32 0, i32 4, !dbg !7250
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %scancode4, i64 0, i64 0, !dbg !7251
  %6 = bitcast i8* %arraydecay5 to i16*, !dbg !7251
  %7 = load i16, i16* %6, align 4, !dbg !7251
  %conv6 = zext i16 %7 to i64, !dbg !7251
  %8 = load i64*, i64** %scancode.addr, align 8, !dbg !7252
  store i64 %conv6, i64* %8, align 8, !dbg !7253
  br label %sw.epilog, !dbg !7254

sw.bb7:                                           ; preds = %entry
  %9 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !7255
  %scancode8 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %9, i32 0, i32 4, !dbg !7256
  %arraydecay9 = getelementptr inbounds [32 x i8], [32 x i8]* %scancode8, i64 0, i64 0, !dbg !7257
  %10 = bitcast i8* %arraydecay9 to i32*, !dbg !7257
  %11 = load i32, i32* %10, align 4, !dbg !7257
  %conv10 = zext i32 %11 to i64, !dbg !7257
  %12 = load i64*, i64** %scancode.addr, align 8, !dbg !7258
  store i64 %conv10, i64* %12, align 8, !dbg !7259
  br label %sw.epilog, !dbg !7260

sw.bb11:                                          ; preds = %entry
  %13 = load %struct.input_keymap_entry*, %struct.input_keymap_entry** %ke.addr, align 8, !dbg !7261
  %scancode12 = getelementptr inbounds %struct.input_keymap_entry, %struct.input_keymap_entry* %13, i32 0, i32 4, !dbg !7262
  %arraydecay13 = getelementptr inbounds [32 x i8], [32 x i8]* %scancode12, i64 0, i64 0, !dbg !7263
  %14 = bitcast i8* %arraydecay13 to i64*, !dbg !7263
  %15 = load i64, i64* %14, align 4, !dbg !7263
  %16 = load i64*, i64** %scancode.addr, align 8, !dbg !7264
  store i64 %15, i64* %16, align 8, !dbg !7265
  br label %sw.epilog, !dbg !7266

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7267
  br label %return, !dbg !7267

sw.epilog:                                        ; preds = %sw.bb11, %sw.bb7, %sw.bb3, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !7268
  br label %return, !dbg !7268

return:                                           ; preds = %sw.epilog, %sw.default
  %17 = load i32, i32* %retval, align 4, !dbg !7269
  ret i32 %17, !dbg !7269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !7270 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7273, metadata !DIExpression()), !dbg !7274
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7275
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !7276
  %1 = load i8*, i8** %driver_data, align 8, !dbg !7276
  ret i8* %1, !dbg !7277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ir_establish_scancode(%struct.rc_dev* %dev, %struct.rc_map* %rc_map, i64 %scancode, i1 zeroext %resize) #0 !dbg !7278 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.rc_dev*, align 8
  %rc_map.addr = alloca %struct.rc_map*, align 8
  %scancode.addr = alloca i64, align 8
  %resize.addr = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !7281, metadata !DIExpression()), !dbg !7282
  store %struct.rc_map* %rc_map, %struct.rc_map** %rc_map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_map** %rc_map.addr, metadata !7283, metadata !DIExpression()), !dbg !7284
  store i64 %scancode, i64* %scancode.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %scancode.addr, metadata !7285, metadata !DIExpression()), !dbg !7286
  %frombool = zext i1 %resize to i8
  store i8 %frombool, i8* %resize.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %resize.addr, metadata !7287, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7289, metadata !DIExpression()), !dbg !7290
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !7291
  %scancode_mask = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %0, i32 0, i32 22, !dbg !7293
  %1 = load i32, i32* %scancode_mask, align 4, !dbg !7293
  %tobool = icmp ne i32 %1, 0, !dbg !7291
  br i1 %tobool, label %if.then, label %if.end, !dbg !7294

if.then:                                          ; preds = %entry
  %2 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !7295
  %scancode_mask1 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %2, i32 0, i32 22, !dbg !7296
  %3 = load i32, i32* %scancode_mask1, align 4, !dbg !7296
  %conv = zext i32 %3 to i64, !dbg !7295
  %4 = load i64, i64* %scancode.addr, align 8, !dbg !7297
  %and = and i64 %4, %conv, !dbg !7297
  store i64 %and, i64* %scancode.addr, align 8, !dbg !7297
  br label %if.end, !dbg !7298

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !7299
  br label %for.cond, !dbg !7301

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !7302
  %6 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7304
  %len = getelementptr inbounds %struct.rc_map, %struct.rc_map* %6, i32 0, i32 2, !dbg !7305
  %7 = load i32, i32* %len, align 4, !dbg !7305
  %cmp = icmp ult i32 %5, %7, !dbg !7306
  br i1 %cmp, label %for.body, label %for.end, !dbg !7307

for.body:                                         ; preds = %for.cond
  %8 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7308
  %scan = getelementptr inbounds %struct.rc_map, %struct.rc_map* %8, i32 0, i32 0, !dbg !7311
  %9 = load %struct.rc_map_table*, %struct.rc_map_table** %scan, align 8, !dbg !7311
  %10 = load i32, i32* %i, align 4, !dbg !7312
  %idxprom = zext i32 %10 to i64, !dbg !7308
  %arrayidx = getelementptr %struct.rc_map_table, %struct.rc_map_table* %9, i64 %idxprom, !dbg !7308
  %scancode3 = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %arrayidx, i32 0, i32 0, !dbg !7313
  %11 = load i64, i64* %scancode3, align 8, !dbg !7313
  %12 = load i64, i64* %scancode.addr, align 8, !dbg !7314
  %cmp4 = icmp eq i64 %11, %12, !dbg !7315
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !7316

if.then6:                                         ; preds = %for.body
  %13 = load i32, i32* %i, align 4, !dbg !7317
  store i32 %13, i32* %retval, align 4, !dbg !7318
  br label %return, !dbg !7318

if.end7:                                          ; preds = %for.body
  %14 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7319
  %scan8 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %14, i32 0, i32 0, !dbg !7321
  %15 = load %struct.rc_map_table*, %struct.rc_map_table** %scan8, align 8, !dbg !7321
  %16 = load i32, i32* %i, align 4, !dbg !7322
  %idxprom9 = zext i32 %16 to i64, !dbg !7319
  %arrayidx10 = getelementptr %struct.rc_map_table, %struct.rc_map_table* %15, i64 %idxprom9, !dbg !7319
  %scancode11 = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %arrayidx10, i32 0, i32 0, !dbg !7323
  %17 = load i64, i64* %scancode11, align 8, !dbg !7323
  %18 = load i64, i64* %scancode.addr, align 8, !dbg !7324
  %cmp12 = icmp uge i64 %17, %18, !dbg !7325
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !7326

if.then14:                                        ; preds = %if.end7
  br label %for.end, !dbg !7327

if.end15:                                         ; preds = %if.end7
  br label %for.inc, !dbg !7328

for.inc:                                          ; preds = %if.end15
  %19 = load i32, i32* %i, align 4, !dbg !7329
  %inc = add i32 %19, 1, !dbg !7329
  store i32 %inc, i32* %i, align 4, !dbg !7329
  br label %for.cond, !dbg !7330, !llvm.loop !7331

for.end:                                          ; preds = %if.then14, %for.cond
  %20 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7333
  %size = getelementptr inbounds %struct.rc_map, %struct.rc_map* %20, i32 0, i32 1, !dbg !7335
  %21 = load i32, i32* %size, align 8, !dbg !7335
  %22 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7336
  %len16 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %22, i32 0, i32 2, !dbg !7337
  %23 = load i32, i32* %len16, align 4, !dbg !7337
  %cmp17 = icmp eq i32 %21, %23, !dbg !7338
  br i1 %cmp17, label %if.then19, label %if.end24, !dbg !7339

if.then19:                                        ; preds = %for.end
  %24 = load i8, i8* %resize.addr, align 1, !dbg !7340
  %tobool20 = trunc i8 %24 to i1, !dbg !7340
  br i1 %tobool20, label %lor.lhs.false, label %if.then22, !dbg !7343

lor.lhs.false:                                    ; preds = %if.then19
  %25 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !7344
  %26 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7345
  %call = call i32 @ir_resize_table(%struct.rc_dev* %25, %struct.rc_map* %26, i32 2592) #11, !dbg !7346
  %tobool21 = icmp ne i32 %call, 0, !dbg !7346
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !7347

if.then22:                                        ; preds = %lor.lhs.false, %if.then19
  store i32 -1, i32* %retval, align 4, !dbg !7348
  br label %return, !dbg !7348

if.end23:                                         ; preds = %lor.lhs.false
  br label %if.end24, !dbg !7349

if.end24:                                         ; preds = %if.end23, %for.end
  %27 = load i32, i32* %i, align 4, !dbg !7350
  %28 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7352
  %len25 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %28, i32 0, i32 2, !dbg !7353
  %29 = load i32, i32* %len25, align 4, !dbg !7353
  %cmp26 = icmp ult i32 %27, %29, !dbg !7354
  br i1 %cmp26, label %if.then28, label %if.end37, !dbg !7355

if.then28:                                        ; preds = %if.end24
  %30 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7356
  %scan29 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %30, i32 0, i32 0, !dbg !7357
  %31 = load %struct.rc_map_table*, %struct.rc_map_table** %scan29, align 8, !dbg !7357
  %32 = load i32, i32* %i, align 4, !dbg !7358
  %add = add i32 %32, 1, !dbg !7359
  %idxprom30 = zext i32 %add to i64, !dbg !7356
  %arrayidx31 = getelementptr %struct.rc_map_table, %struct.rc_map_table* %31, i64 %idxprom30, !dbg !7356
  %33 = bitcast %struct.rc_map_table* %arrayidx31 to i8*, !dbg !7360
  %34 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7361
  %scan32 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %34, i32 0, i32 0, !dbg !7362
  %35 = load %struct.rc_map_table*, %struct.rc_map_table** %scan32, align 8, !dbg !7362
  %36 = load i32, i32* %i, align 4, !dbg !7363
  %idxprom33 = zext i32 %36 to i64, !dbg !7361
  %arrayidx34 = getelementptr %struct.rc_map_table, %struct.rc_map_table* %35, i64 %idxprom33, !dbg !7361
  %37 = bitcast %struct.rc_map_table* %arrayidx34 to i8*, !dbg !7360
  %38 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7364
  %len35 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %38, i32 0, i32 2, !dbg !7365
  %39 = load i32, i32* %len35, align 4, !dbg !7365
  %40 = load i32, i32* %i, align 4, !dbg !7366
  %sub = sub i32 %39, %40, !dbg !7367
  %conv36 = zext i32 %sub to i64, !dbg !7368
  %mul = mul i64 %conv36, 16, !dbg !7369
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %37, i64 %mul, i1 false), !dbg !7360
  br label %if.end37, !dbg !7360

if.end37:                                         ; preds = %if.then28, %if.end24
  %41 = load i64, i64* %scancode.addr, align 8, !dbg !7370
  %42 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7371
  %scan38 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %42, i32 0, i32 0, !dbg !7372
  %43 = load %struct.rc_map_table*, %struct.rc_map_table** %scan38, align 8, !dbg !7372
  %44 = load i32, i32* %i, align 4, !dbg !7373
  %idxprom39 = zext i32 %44 to i64, !dbg !7371
  %arrayidx40 = getelementptr %struct.rc_map_table, %struct.rc_map_table* %43, i64 %idxprom39, !dbg !7371
  %scancode41 = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %arrayidx40, i32 0, i32 0, !dbg !7374
  store i64 %41, i64* %scancode41, align 8, !dbg !7375
  %45 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7376
  %scan42 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %45, i32 0, i32 0, !dbg !7377
  %46 = load %struct.rc_map_table*, %struct.rc_map_table** %scan42, align 8, !dbg !7377
  %47 = load i32, i32* %i, align 4, !dbg !7378
  %idxprom43 = zext i32 %47 to i64, !dbg !7376
  %arrayidx44 = getelementptr %struct.rc_map_table, %struct.rc_map_table* %46, i64 %idxprom43, !dbg !7376
  %keycode = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %arrayidx44, i32 0, i32 1, !dbg !7379
  store i32 0, i32* %keycode, align 8, !dbg !7380
  %48 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7381
  %len45 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %48, i32 0, i32 2, !dbg !7382
  %49 = load i32, i32* %len45, align 4, !dbg !7383
  %inc46 = add i32 %49, 1, !dbg !7383
  store i32 %inc46, i32* %len45, align 4, !dbg !7383
  %50 = load i32, i32* %i, align 4, !dbg !7384
  store i32 %50, i32* %retval, align 4, !dbg !7385
  br label %return, !dbg !7385

return:                                           ; preds = %if.end37, %if.then22, %if.then6
  %51 = load i32, i32* %retval, align 4, !dbg !7386
  ret i32 %51, !dbg !7386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ir_update_mapping(%struct.rc_dev* %dev, %struct.rc_map* %rc_map, i32 %index, i32 %new_keycode) #0 !dbg !7387 {
entry:
  %dev.addr = alloca %struct.rc_dev*, align 8
  %rc_map.addr = alloca %struct.rc_map*, align 8
  %index.addr = alloca i32, align 4
  %new_keycode.addr = alloca i32, align 4
  %old_keycode = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !7390, metadata !DIExpression()), !dbg !7391
  store %struct.rc_map* %rc_map, %struct.rc_map** %rc_map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_map** %rc_map.addr, metadata !7392, metadata !DIExpression()), !dbg !7393
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7394, metadata !DIExpression()), !dbg !7395
  store i32 %new_keycode, i32* %new_keycode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %new_keycode.addr, metadata !7396, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.declare(metadata i32* %old_keycode, metadata !7398, metadata !DIExpression()), !dbg !7399
  %0 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7400
  %scan = getelementptr inbounds %struct.rc_map, %struct.rc_map* %0, i32 0, i32 0, !dbg !7401
  %1 = load %struct.rc_map_table*, %struct.rc_map_table** %scan, align 8, !dbg !7401
  %2 = load i32, i32* %index.addr, align 4, !dbg !7402
  %idxprom = zext i32 %2 to i64, !dbg !7400
  %arrayidx = getelementptr %struct.rc_map_table, %struct.rc_map_table* %1, i64 %idxprom, !dbg !7400
  %keycode = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %arrayidx, i32 0, i32 1, !dbg !7403
  %3 = load i32, i32* %keycode, align 8, !dbg !7403
  store i32 %3, i32* %old_keycode, align 4, !dbg !7399
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7404, metadata !DIExpression()), !dbg !7405
  %4 = load i32, i32* %new_keycode.addr, align 4, !dbg !7406
  %cmp = icmp eq i32 %4, 0, !dbg !7408
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7409

lor.lhs.false:                                    ; preds = %entry
  %5 = load i32, i32* %new_keycode.addr, align 4, !dbg !7410
  %cmp1 = icmp eq i32 %5, 240, !dbg !7411
  br i1 %cmp1, label %if.then, label %if.else, !dbg !7412

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7413
  %len = getelementptr inbounds %struct.rc_map, %struct.rc_map* %6, i32 0, i32 2, !dbg !7415
  %7 = load i32, i32* %len, align 4, !dbg !7416
  %dec = add i32 %7, -1, !dbg !7416
  store i32 %dec, i32* %len, align 4, !dbg !7416
  %8 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7417
  %scan2 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %8, i32 0, i32 0, !dbg !7418
  %9 = load %struct.rc_map_table*, %struct.rc_map_table** %scan2, align 8, !dbg !7418
  %10 = load i32, i32* %index.addr, align 4, !dbg !7419
  %idxprom3 = zext i32 %10 to i64, !dbg !7417
  %arrayidx4 = getelementptr %struct.rc_map_table, %struct.rc_map_table* %9, i64 %idxprom3, !dbg !7417
  %11 = bitcast %struct.rc_map_table* %arrayidx4 to i8*, !dbg !7420
  %12 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7421
  %scan5 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %12, i32 0, i32 0, !dbg !7422
  %13 = load %struct.rc_map_table*, %struct.rc_map_table** %scan5, align 8, !dbg !7422
  %14 = load i32, i32* %index.addr, align 4, !dbg !7423
  %add = add i32 %14, 1, !dbg !7424
  %idxprom6 = zext i32 %add to i64, !dbg !7421
  %arrayidx7 = getelementptr %struct.rc_map_table, %struct.rc_map_table* %13, i64 %idxprom6, !dbg !7421
  %15 = bitcast %struct.rc_map_table* %arrayidx7 to i8*, !dbg !7420
  %16 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7425
  %len8 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %16, i32 0, i32 2, !dbg !7426
  %17 = load i32, i32* %len8, align 4, !dbg !7426
  %18 = load i32, i32* %index.addr, align 4, !dbg !7427
  %sub = sub i32 %17, %18, !dbg !7428
  %conv = zext i32 %sub to i64, !dbg !7429
  %mul = mul i64 %conv, 16, !dbg !7430
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %15, i64 %mul, i1 false), !dbg !7420
  br label %if.end, !dbg !7431

if.else:                                          ; preds = %lor.lhs.false
  %19 = load i32, i32* %new_keycode.addr, align 4, !dbg !7432
  %20 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7434
  %scan9 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %20, i32 0, i32 0, !dbg !7435
  %21 = load %struct.rc_map_table*, %struct.rc_map_table** %scan9, align 8, !dbg !7435
  %22 = load i32, i32* %index.addr, align 4, !dbg !7436
  %idxprom10 = zext i32 %22 to i64, !dbg !7434
  %arrayidx11 = getelementptr %struct.rc_map_table, %struct.rc_map_table* %21, i64 %idxprom10, !dbg !7434
  %keycode12 = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %arrayidx11, i32 0, i32 1, !dbg !7437
  store i32 %19, i32* %keycode12, align 8, !dbg !7438
  %23 = load i32, i32* %new_keycode.addr, align 4, !dbg !7439
  %conv13 = zext i32 %23 to i64, !dbg !7439
  %24 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !7440
  %input_dev = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %24, i32 0, i32 12, !dbg !7441
  %25 = load %struct.input_dev*, %struct.input_dev** %input_dev, align 8, !dbg !7441
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %25, i32 0, i32 6, !dbg !7442
  %arraydecay = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i64 0, i64 0, !dbg !7440
  call void @__set_bit(i64 %conv13, i64* %arraydecay) #11, !dbg !7443
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %26 = load i32, i32* %old_keycode, align 4, !dbg !7444
  %cmp14 = icmp ne i32 %26, 0, !dbg !7446
  br i1 %cmp14, label %if.then16, label %if.end36, !dbg !7447

if.then16:                                        ; preds = %if.end
  %27 = load i32, i32* %old_keycode, align 4, !dbg !7448
  %conv17 = sext i32 %27 to i64, !dbg !7448
  %28 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !7450
  %input_dev18 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %28, i32 0, i32 12, !dbg !7451
  %29 = load %struct.input_dev*, %struct.input_dev** %input_dev18, align 8, !dbg !7451
  %keybit19 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %29, i32 0, i32 6, !dbg !7452
  %arraydecay20 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit19, i64 0, i64 0, !dbg !7450
  call void @__clear_bit(i64 %conv17, i64* %arraydecay20) #11, !dbg !7453
  store i32 0, i32* %i, align 4, !dbg !7454
  br label %for.cond, !dbg !7456

for.cond:                                         ; preds = %for.inc, %if.then16
  %30 = load i32, i32* %i, align 4, !dbg !7457
  %31 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7459
  %len21 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %31, i32 0, i32 2, !dbg !7460
  %32 = load i32, i32* %len21, align 4, !dbg !7460
  %cmp22 = icmp ult i32 %30, %32, !dbg !7461
  br i1 %cmp22, label %for.body, label %for.end, !dbg !7462

for.body:                                         ; preds = %for.cond
  %33 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7463
  %scan24 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %33, i32 0, i32 0, !dbg !7466
  %34 = load %struct.rc_map_table*, %struct.rc_map_table** %scan24, align 8, !dbg !7466
  %35 = load i32, i32* %i, align 4, !dbg !7467
  %idxprom25 = sext i32 %35 to i64, !dbg !7463
  %arrayidx26 = getelementptr %struct.rc_map_table, %struct.rc_map_table* %34, i64 %idxprom25, !dbg !7463
  %keycode27 = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %arrayidx26, i32 0, i32 1, !dbg !7468
  %36 = load i32, i32* %keycode27, align 8, !dbg !7468
  %37 = load i32, i32* %old_keycode, align 4, !dbg !7469
  %cmp28 = icmp eq i32 %36, %37, !dbg !7470
  br i1 %cmp28, label %if.then30, label %if.end35, !dbg !7471

if.then30:                                        ; preds = %for.body
  %38 = load i32, i32* %old_keycode, align 4, !dbg !7472
  %conv31 = sext i32 %38 to i64, !dbg !7472
  %39 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !7474
  %input_dev32 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %39, i32 0, i32 12, !dbg !7475
  %40 = load %struct.input_dev*, %struct.input_dev** %input_dev32, align 8, !dbg !7475
  %keybit33 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %40, i32 0, i32 6, !dbg !7476
  %arraydecay34 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit33, i64 0, i64 0, !dbg !7474
  call void @__set_bit(i64 %conv31, i64* %arraydecay34) #11, !dbg !7477
  br label %for.end, !dbg !7478

if.end35:                                         ; preds = %for.body
  br label %for.inc, !dbg !7479

for.inc:                                          ; preds = %if.end35
  %41 = load i32, i32* %i, align 4, !dbg !7480
  %inc = add i32 %41, 1, !dbg !7480
  store i32 %inc, i32* %i, align 4, !dbg !7480
  br label %for.cond, !dbg !7481, !llvm.loop !7482

for.end:                                          ; preds = %if.then30, %for.cond
  %42 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !7484
  %43 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7485
  %call = call i32 @ir_resize_table(%struct.rc_dev* %42, %struct.rc_map* %43, i32 2592) #11, !dbg !7486
  br label %if.end36, !dbg !7487

if.end36:                                         ; preds = %for.end, %if.end
  %44 = load i32, i32* %old_keycode, align 4, !dbg !7488
  ret i32 %44, !dbg !7489
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ir_resize_table(%struct.rc_dev* %dev, %struct.rc_map* %rc_map, i32 %gfp_flags) #0 !dbg !7490 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5538, metadata !DIExpression()), !dbg !7493
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5548, metadata !DIExpression()), !dbg !7496
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5550, metadata !DIExpression()), !dbg !7497
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5552, metadata !DIExpression()), !dbg !7498
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5554, metadata !DIExpression()), !dbg !7499
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5560, metadata !DIExpression()), !dbg !7501
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5566, metadata !DIExpression()), !dbg !7503
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5575, metadata !DIExpression()), !dbg !7506
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5577, metadata !DIExpression()), !dbg !7507
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5579, metadata !DIExpression()), !dbg !7508
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5581, metadata !DIExpression()), !dbg !7509
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5583, metadata !DIExpression()), !dbg !7510
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5585, metadata !DIExpression()), !dbg !7511
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5587, metadata !DIExpression()), !dbg !7512
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5589, metadata !DIExpression()), !dbg !7513
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.rc_dev*, align 8
  %rc_map.addr = alloca %struct.rc_map*, align 8
  %gfp_flags.addr = alloca i32, align 4
  %oldalloc = alloca i32, align 4
  %newalloc = alloca i32, align 4
  %oldscan = alloca %struct.rc_map_table*, align 8
  %newscan = alloca %struct.rc_map_table*, align 8
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !7514, metadata !DIExpression()), !dbg !7515
  store %struct.rc_map* %rc_map, %struct.rc_map** %rc_map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_map** %rc_map.addr, metadata !7516, metadata !DIExpression()), !dbg !7517
  store i32 %gfp_flags, i32* %gfp_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp_flags.addr, metadata !7518, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.declare(metadata i32* %oldalloc, metadata !7520, metadata !DIExpression()), !dbg !7521
  %0 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7522
  %alloc = getelementptr inbounds %struct.rc_map, %struct.rc_map* %0, i32 0, i32 3, !dbg !7523
  %1 = load i32, i32* %alloc, align 8, !dbg !7523
  store i32 %1, i32* %oldalloc, align 4, !dbg !7521
  call void @llvm.dbg.declare(metadata i32* %newalloc, metadata !7524, metadata !DIExpression()), !dbg !7525
  %2 = load i32, i32* %oldalloc, align 4, !dbg !7526
  store i32 %2, i32* %newalloc, align 4, !dbg !7525
  call void @llvm.dbg.declare(metadata %struct.rc_map_table** %oldscan, metadata !7527, metadata !DIExpression()), !dbg !7528
  %3 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7529
  %scan = getelementptr inbounds %struct.rc_map, %struct.rc_map* %3, i32 0, i32 0, !dbg !7530
  %4 = load %struct.rc_map_table*, %struct.rc_map_table** %scan, align 8, !dbg !7530
  store %struct.rc_map_table* %4, %struct.rc_map_table** %oldscan, align 8, !dbg !7528
  call void @llvm.dbg.declare(metadata %struct.rc_map_table** %newscan, metadata !7531, metadata !DIExpression()), !dbg !7532
  %5 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7533
  %size = getelementptr inbounds %struct.rc_map, %struct.rc_map* %5, i32 0, i32 1, !dbg !7535
  %6 = load i32, i32* %size, align 8, !dbg !7535
  %7 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7536
  %len = getelementptr inbounds %struct.rc_map, %struct.rc_map* %7, i32 0, i32 2, !dbg !7537
  %8 = load i32, i32* %len, align 4, !dbg !7537
  %cmp = icmp eq i32 %6, %8, !dbg !7538
  br i1 %cmp, label %if.then, label %if.end4, !dbg !7539

if.then:                                          ; preds = %entry
  %9 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7540
  %alloc1 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %9, i32 0, i32 3, !dbg !7543
  %10 = load i32, i32* %alloc1, align 8, !dbg !7543
  %cmp2 = icmp uge i32 %10, 8192, !dbg !7544
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !7545

if.then3:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !7546
  br label %return, !dbg !7546

if.end:                                           ; preds = %if.then
  %11 = load i32, i32* %newalloc, align 4, !dbg !7547
  %mul = mul i32 %11, 2, !dbg !7547
  store i32 %mul, i32* %newalloc, align 4, !dbg !7547
  br label %if.end4, !dbg !7548

if.end4:                                          ; preds = %if.end, %entry
  %12 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7549
  %len5 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %12, i32 0, i32 2, !dbg !7551
  %13 = load i32, i32* %len5, align 4, !dbg !7551
  %mul6 = mul i32 %13, 3, !dbg !7552
  %14 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7553
  %size7 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %14, i32 0, i32 1, !dbg !7554
  %15 = load i32, i32* %size7, align 8, !dbg !7554
  %cmp8 = icmp ult i32 %mul6, %15, !dbg !7555
  br i1 %cmp8, label %land.lhs.true, label %if.end11, !dbg !7556

land.lhs.true:                                    ; preds = %if.end4
  %16 = load i32, i32* %oldalloc, align 4, !dbg !7557
  %cmp9 = icmp ugt i32 %16, 256, !dbg !7558
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7559

if.then10:                                        ; preds = %land.lhs.true
  %17 = load i32, i32* %newalloc, align 4, !dbg !7560
  %div = udiv i32 %17, 2, !dbg !7560
  store i32 %div, i32* %newalloc, align 4, !dbg !7560
  br label %if.end11, !dbg !7562

if.end11:                                         ; preds = %if.then10, %land.lhs.true, %if.end4
  %18 = load i32, i32* %newalloc, align 4, !dbg !7563
  %19 = load i32, i32* %oldalloc, align 4, !dbg !7565
  %cmp12 = icmp eq i32 %18, %19, !dbg !7566
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !7567

if.then13:                                        ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !7568
  br label %return, !dbg !7568

if.end14:                                         ; preds = %if.end11
  %20 = load i32, i32* %newalloc, align 4, !dbg !7569
  %conv = zext i32 %20 to i64, !dbg !7569
  %21 = load i32, i32* %gfp_flags.addr, align 4, !dbg !7570
  store i64 %conv, i64* %size.addr.i, align 8
  store i32 %21, i32* %flags.addr.i, align 4
  %22 = load i64, i64* %size.addr.i, align 8, !dbg !7571
  %23 = call i1 @llvm.is.constant.i64(i64 %22) #7, !dbg !7572
  br i1 %23, label %if.then.i, label %if.end9.i, !dbg !7573

if.then.i:                                        ; preds = %if.end14
  %24 = load i64, i64* %size.addr.i, align 8, !dbg !7574
  %cmp.i = icmp ugt i64 %24, 8192, !dbg !7575
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7576

if.then1.i:                                       ; preds = %if.then.i
  %25 = load i64, i64* %size.addr.i, align 8, !dbg !7577
  %26 = load i32, i32* %flags.addr.i, align 4, !dbg !7578
  store i64 %25, i64* %size.addr.i.i, align 8
  store i32 %26, i32* %flags.addr.i.i, align 4
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !7579
  %call.i.i = call i32 @get_order(i64 %27) #14, !dbg !7580
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7510
  %28 = load i64, i64* %size.addr.i.i, align 8, !dbg !7581
  %29 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7582
  %30 = load i32, i32* %order.i.i, align 4, !dbg !7583
  store i64 %28, i64* %size.addr.i.i.i, align 8
  store i32 %29, i32* %flags.addr.i.i.i, align 4
  store i32 %30, i32* %order.addr.i.i.i, align 4
  %31 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7584
  %32 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7585
  %33 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7586
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %31, i32 %32, i32 %33) #13, !dbg !7587
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7587
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7587
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7587
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !7587
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7588
  br label %kmalloc.exit, !dbg !7588

if.end.i:                                         ; preds = %if.then.i
  %34 = load i64, i64* %size.addr.i, align 8, !dbg !7589
  store i64 %34, i64* %size.addr.i11.i, align 8
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7590
  %tobool.i.i = icmp ne i64 %35, 0, !dbg !7590
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7591

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7592
  br label %kmalloc_index.exit.i, !dbg !7592

if.end.i.i:                                       ; preds = %if.end.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7593
  %cmp.i.i = icmp ule i64 %36, 8, !dbg !7594
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7595

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7596
  br label %kmalloc_index.exit.i, !dbg !7596

if.end2.i.i:                                      ; preds = %if.end.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7597
  %cmp3.i.i = icmp ugt i64 %37, 64, !dbg !7598
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7599

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7600
  %cmp4.i.i = icmp ule i64 %38, 96, !dbg !7601
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7602

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7603
  br label %kmalloc_index.exit.i, !dbg !7603

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7604
  %cmp7.i.i = icmp ugt i64 %39, 128, !dbg !7605
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7606

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7607
  %cmp9.i.i = icmp ule i64 %40, 192, !dbg !7608
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7609

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7610
  br label %kmalloc_index.exit.i, !dbg !7610

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7611
  %cmp12.i.i = icmp ule i64 %41, 8, !dbg !7612
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7613

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7614
  br label %kmalloc_index.exit.i, !dbg !7614

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7615
  %cmp15.i.i = icmp ule i64 %42, 16, !dbg !7616
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7617

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7618
  br label %kmalloc_index.exit.i, !dbg !7618

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7619
  %cmp18.i.i = icmp ule i64 %43, 32, !dbg !7620
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7621

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7622
  br label %kmalloc_index.exit.i, !dbg !7622

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7623
  %cmp21.i.i = icmp ule i64 %44, 64, !dbg !7624
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7625

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7626
  br label %kmalloc_index.exit.i, !dbg !7626

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7627
  %cmp24.i.i = icmp ule i64 %45, 128, !dbg !7628
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7629

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7630
  br label %kmalloc_index.exit.i, !dbg !7630

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7631
  %cmp27.i.i = icmp ule i64 %46, 256, !dbg !7632
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7633

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7634
  br label %kmalloc_index.exit.i, !dbg !7634

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7635
  %cmp30.i.i = icmp ule i64 %47, 512, !dbg !7636
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7637

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7638
  br label %kmalloc_index.exit.i, !dbg !7638

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7639
  %cmp33.i.i = icmp ule i64 %48, 1024, !dbg !7640
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7641

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7642
  br label %kmalloc_index.exit.i, !dbg !7642

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7643
  %cmp36.i.i = icmp ule i64 %49, 2048, !dbg !7644
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7645

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7646
  br label %kmalloc_index.exit.i, !dbg !7646

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7647
  %cmp39.i.i = icmp ule i64 %50, 4096, !dbg !7648
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7649

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7650
  br label %kmalloc_index.exit.i, !dbg !7650

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7651
  %cmp42.i.i = icmp ule i64 %51, 8192, !dbg !7652
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7653

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7654
  br label %kmalloc_index.exit.i, !dbg !7654

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7655
  %cmp45.i.i = icmp ule i64 %52, 16384, !dbg !7656
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7657

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7658
  br label %kmalloc_index.exit.i, !dbg !7658

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7659
  %cmp48.i.i = icmp ule i64 %53, 32768, !dbg !7660
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7661

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7662
  br label %kmalloc_index.exit.i, !dbg !7662

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7663
  %cmp51.i.i = icmp ule i64 %54, 65536, !dbg !7664
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7665

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7666
  br label %kmalloc_index.exit.i, !dbg !7666

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7667
  %cmp54.i.i = icmp ule i64 %55, 131072, !dbg !7668
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7669

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7670
  br label %kmalloc_index.exit.i, !dbg !7670

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7671
  %cmp57.i.i = icmp ule i64 %56, 262144, !dbg !7672
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7673

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7674
  br label %kmalloc_index.exit.i, !dbg !7674

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7675
  %cmp60.i.i = icmp ule i64 %57, 524288, !dbg !7676
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7677

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7678
  br label %kmalloc_index.exit.i, !dbg !7678

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7679
  %cmp63.i.i = icmp ule i64 %58, 1048576, !dbg !7680
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7681

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7682
  br label %kmalloc_index.exit.i, !dbg !7682

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7683
  %cmp66.i.i = icmp ule i64 %59, 2097152, !dbg !7684
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7685

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7686
  br label %kmalloc_index.exit.i, !dbg !7686

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7687
  %cmp69.i.i = icmp ule i64 %60, 4194304, !dbg !7688
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7689

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7690
  br label %kmalloc_index.exit.i, !dbg !7690

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7691
  %cmp72.i.i = icmp ule i64 %61, 8388608, !dbg !7692
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7693

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7694
  br label %kmalloc_index.exit.i, !dbg !7694

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7695
  %cmp75.i.i = icmp ule i64 %62, 16777216, !dbg !7696
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7697

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7698
  br label %kmalloc_index.exit.i, !dbg !7698

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %63 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7699
  %cmp78.i.i = icmp ule i64 %63, 33554432, !dbg !7700
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7701

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7702
  br label %kmalloc_index.exit.i, !dbg !7702

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %64 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7703
  %cmp81.i.i = icmp ule i64 %64, 67108864, !dbg !7704
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7705

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7706
  br label %kmalloc_index.exit.i, !dbg !7706

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !7707, !srcloc !5765
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #7, !dbg !7708, !srcloc !5769
  unreachable, !dbg !7709

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %65 = load i32, i32* %retval.i.i, align 4, !dbg !7710
  store i32 %65, i32* %index.i, align 4, !dbg !7711
  %66 = load i32, i32* %index.i, align 4, !dbg !7712
  %tobool.i = icmp ne i32 %66, 0, !dbg !7712
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7713

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7714
  br label %kmalloc.exit, !dbg !7714

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %67 = load i32, i32* %flags.addr.i, align 4, !dbg !7715
  store i32 %67, i32* %flags.addr.i13.i, align 4
  %68 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7716
  %and.i.i = and i32 %68, 17, !dbg !7716
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7716
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7716
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7716
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7716
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7717

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7718
  br label %kmalloc_type.exit.i, !dbg !7718

if.end.i16.i:                                     ; preds = %if.end4.i
  %69 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7719
  %and2.i.i = and i32 %69, 1, !dbg !7720
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7719
  %70 = zext i1 %tobool3.i.i to i64, !dbg !7719
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7719
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7721
  br label %kmalloc_type.exit.i, !dbg !7721

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %71 = load i32, i32* %retval.i12.i, align 4, !dbg !7722
  %idxprom.i = zext i32 %71 to i64, !dbg !7723
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7723
  %72 = load i32, i32* %index.i, align 4, !dbg !7724
  %idxprom6.i = zext i32 %72 to i64, !dbg !7723
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7723
  %73 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7723
  %74 = load i32, i32* %flags.addr.i, align 4, !dbg !7725
  %75 = load i64, i64* %size.addr.i, align 8, !dbg !7726
  store %struct.kmem_cache* %73, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %74, i32* %flags.addr.i17.i, align 4
  store i64 %75, i64* %size.addr.i18.i, align 8
  %76 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7727
  %77 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7728
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %76, i32 %77) #13, !dbg !7729
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7729
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7729
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7729
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !7729
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7498
  %78 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7730
  %79 = load i8*, i8** %ret.i.i, align 8, !dbg !7731
  %80 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7732
  %81 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7733
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %78, i8* %79, i64 %80, i32 %81) #13, !dbg !7734
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7735
  %82 = load i8*, i8** %ret.i.i, align 8, !dbg !7736
  store i8* %82, i8** %retval.i, align 8, !dbg !7737
  br label %kmalloc.exit, !dbg !7737

if.end9.i:                                        ; preds = %if.end14
  %83 = load i64, i64* %size.addr.i, align 8, !dbg !7738
  %84 = load i32, i32* %flags.addr.i, align 4, !dbg !7739
  %call10.i = call noalias i8* @__kmalloc(i64 %83, i32 %84) #13, !dbg !7740
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7740
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7740
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7740
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !7740
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7741
  br label %kmalloc.exit, !dbg !7741

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %85 = load i8*, i8** %retval.i, align 8, !dbg !7742
  %86 = bitcast i8* %85 to %struct.rc_map_table*, !dbg !7743
  store %struct.rc_map_table* %86, %struct.rc_map_table** %newscan, align 8, !dbg !7744
  %87 = load %struct.rc_map_table*, %struct.rc_map_table** %newscan, align 8, !dbg !7745
  %tobool = icmp ne %struct.rc_map_table* %87, null, !dbg !7745
  br i1 %tobool, label %if.end16, label %if.then15, !dbg !7747

if.then15:                                        ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !7748
  br label %return, !dbg !7748

if.end16:                                         ; preds = %kmalloc.exit
  %88 = load %struct.rc_map_table*, %struct.rc_map_table** %newscan, align 8, !dbg !7749
  %89 = bitcast %struct.rc_map_table* %88 to i8*, !dbg !7750
  %90 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7751
  %scan17 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %90, i32 0, i32 0, !dbg !7752
  %91 = load %struct.rc_map_table*, %struct.rc_map_table** %scan17, align 8, !dbg !7752
  %92 = bitcast %struct.rc_map_table* %91 to i8*, !dbg !7750
  %93 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7753
  %len18 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %93, i32 0, i32 2, !dbg !7754
  %94 = load i32, i32* %len18, align 4, !dbg !7754
  %conv19 = zext i32 %94 to i64, !dbg !7753
  %mul20 = mul i64 %conv19, 16, !dbg !7755
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %92, i64 %mul20, i1 false), !dbg !7750
  %95 = load %struct.rc_map_table*, %struct.rc_map_table** %newscan, align 8, !dbg !7756
  %96 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7757
  %scan21 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %96, i32 0, i32 0, !dbg !7758
  store %struct.rc_map_table* %95, %struct.rc_map_table** %scan21, align 8, !dbg !7759
  %97 = load i32, i32* %newalloc, align 4, !dbg !7760
  %98 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7761
  %alloc22 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %98, i32 0, i32 3, !dbg !7762
  store i32 %97, i32* %alloc22, align 8, !dbg !7763
  %99 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7764
  %alloc23 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %99, i32 0, i32 3, !dbg !7765
  %100 = load i32, i32* %alloc23, align 8, !dbg !7765
  %conv24 = zext i32 %100 to i64, !dbg !7764
  %div25 = udiv i64 %conv24, 16, !dbg !7766
  %conv26 = trunc i64 %div25 to i32, !dbg !7764
  %101 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !7767
  %size27 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %101, i32 0, i32 1, !dbg !7768
  store i32 %conv26, i32* %size27, align 8, !dbg !7769
  %102 = load %struct.rc_map_table*, %struct.rc_map_table** %oldscan, align 8, !dbg !7770
  %103 = bitcast %struct.rc_map_table* %102 to i8*, !dbg !7770
  call void @kfree(i8* %103) #11, !dbg !7771
  store i32 0, i32* %retval, align 4, !dbg !7772
  br label %return, !dbg !7772

return:                                           ; preds = %if.end16, %if.then15, %if.then13, %if.then3
  %104 = load i32, i32* %retval, align 4, !dbg !7773
  ret i32 %104, !dbg !7773
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !7774 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7780, metadata !DIExpression()), !dbg !7782
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7784, metadata !DIExpression()), !dbg !7785
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7786, metadata !DIExpression()), !dbg !7794
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7796, metadata !DIExpression()), !dbg !7797
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7798, metadata !DIExpression()), !dbg !7799
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7800, metadata !DIExpression()), !dbg !7801
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7802
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7803
  %div = sdiv i64 %1, 64, !dbg !7803
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7804
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7802
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7805
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7806
  %conv.i = trunc i64 %4 to i32, !dbg !7806
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !7807
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7808
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7808
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #13, !dbg !7808
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7809
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7810
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !7811
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !7812
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !7813, !srcloc !7814
  ret void, !dbg !7815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__clear_bit(i64 %nr, i64* %addr) #0 !dbg !7816 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !7817, metadata !DIExpression()), !dbg !7819
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !7821, metadata !DIExpression()), !dbg !7822
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !7786, metadata !DIExpression()), !dbg !7823
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7796, metadata !DIExpression()), !dbg !7825
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !7826, metadata !DIExpression()), !dbg !7827
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !7828, metadata !DIExpression()), !dbg !7829
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !7830
  %1 = load i64, i64* %nr.addr, align 8, !dbg !7831
  %div = sdiv i64 %1, 64, !dbg !7831
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !7832
  %2 = bitcast i64* %add.ptr to i8*, !dbg !7830
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !7833
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7834
  %conv.i = trunc i64 %4 to i32, !dbg !7834
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !7835
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !7836
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !7836
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #13, !dbg !7836
  %7 = load i64, i64* %nr.addr, align 8, !dbg !7837
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !7838
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !7839
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !7840
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #7, !dbg !7841, !srcloc !7842
  ret void, !dbg !7843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !7844 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !7848, metadata !DIExpression()), !dbg !7849
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7850, metadata !DIExpression()), !dbg !7851
  ret i1 true, !dbg !7852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !7853 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7857, metadata !DIExpression()), !dbg !7858
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7859, metadata !DIExpression()), !dbg !7860
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7861, metadata !DIExpression()), !dbg !7862
  ret void, !dbg !7863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rc_dev_uevent(%struct.device* %device, %struct.kobj_uevent_env* %env) #0 !dbg !7864 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %env.addr = alloca %struct.kobj_uevent_env*, align 8
  %dev = alloca %struct.rc_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.rc_dev*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !7865, metadata !DIExpression()), !dbg !7866
  store %struct.kobj_uevent_env* %env, %struct.kobj_uevent_env** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobj_uevent_env** %env.addr, metadata !7867, metadata !DIExpression()), !dbg !7868
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev, metadata !7869, metadata !DIExpression()), !dbg !7870
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7871, metadata !DIExpression()), !dbg !7873
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !7873
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7873
  store i8* %1, i8** %__mptr, align 8, !dbg !7873
  br label %do.body, !dbg !7873

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7874

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7873
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7873
  %3 = bitcast i8* %add.ptr to %struct.rc_dev*, !dbg !7873
  store %struct.rc_dev* %3, %struct.rc_dev** %tmp, align 8, !dbg !7874
  %4 = load %struct.rc_dev*, %struct.rc_dev** %tmp, align 8, !dbg !7873
  store %struct.rc_dev* %4, %struct.rc_dev** %dev, align 8, !dbg !7870
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7876, metadata !DIExpression()), !dbg !7877
  store i32 0, i32* %ret, align 4, !dbg !7877
  %5 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !7878
  %lock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %5, i32 0, i32 9, !dbg !7879
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !7880
  %6 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !7881
  %registered = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 39, !dbg !7883
  %7 = load i8, i8* %registered, align 8, !dbg !7883
  %tobool = trunc i8 %7 to i1, !dbg !7883
  br i1 %tobool, label %if.end, label %if.then, !dbg !7884

if.then:                                          ; preds = %do.end
  store i32 -19, i32* %ret, align 4, !dbg !7885
  br label %if.end, !dbg !7886

if.end:                                           ; preds = %if.then, %do.end
  %8 = load i32, i32* %ret, align 4, !dbg !7887
  %cmp = icmp eq i32 %8, 0, !dbg !7889
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !7890

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !7891
  %rc_map = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %9, i32 0, i32 8, !dbg !7892
  %name = getelementptr inbounds %struct.rc_map, %struct.rc_map* %rc_map, i32 0, i32 5, !dbg !7893
  %10 = load i8*, i8** %name, align 8, !dbg !7893
  %tobool1 = icmp ne i8* %10, null, !dbg !7891
  br i1 %tobool1, label %if.then2, label %if.end5, !dbg !7894

if.then2:                                         ; preds = %land.lhs.true
  %11 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !7895
  %12 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !7896
  %rc_map3 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %12, i32 0, i32 8, !dbg !7897
  %name4 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %rc_map3, i32 0, i32 5, !dbg !7898
  %13 = load i8*, i8** %name4, align 8, !dbg !7898
  %call = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i64 0, i64 0), i8* %13) #11, !dbg !7899
  store i32 %call, i32* %ret, align 4, !dbg !7900
  br label %if.end5, !dbg !7901

if.end5:                                          ; preds = %if.then2, %land.lhs.true, %if.end
  %14 = load i32, i32* %ret, align 4, !dbg !7902
  %cmp6 = icmp eq i32 %14, 0, !dbg !7904
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !7905

land.lhs.true7:                                   ; preds = %if.end5
  %15 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !7906
  %driver_name = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %15, i32 0, i32 6, !dbg !7907
  %16 = load i8*, i8** %driver_name, align 8, !dbg !7907
  %tobool8 = icmp ne i8* %16, null, !dbg !7906
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !7908

if.then9:                                         ; preds = %land.lhs.true7
  %17 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !7909
  %18 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !7910
  %driver_name10 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %18, i32 0, i32 6, !dbg !7911
  %19 = load i8*, i8** %driver_name10, align 8, !dbg !7911
  %call11 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0), i8* %19) #11, !dbg !7912
  store i32 %call11, i32* %ret, align 4, !dbg !7913
  br label %if.end12, !dbg !7914

if.end12:                                         ; preds = %if.then9, %land.lhs.true7, %if.end5
  %20 = load i32, i32* %ret, align 4, !dbg !7915
  %cmp13 = icmp eq i32 %20, 0, !dbg !7917
  br i1 %cmp13, label %land.lhs.true14, label %if.end19, !dbg !7918

land.lhs.true14:                                  ; preds = %if.end12
  %21 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !7919
  %device_name = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %21, i32 0, i32 3, !dbg !7920
  %22 = load i8*, i8** %device_name, align 8, !dbg !7920
  %tobool15 = icmp ne i8* %22, null, !dbg !7919
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !7921

if.then16:                                        ; preds = %land.lhs.true14
  %23 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !7922
  %24 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !7923
  %device_name17 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %24, i32 0, i32 3, !dbg !7924
  %25 = load i8*, i8** %device_name17, align 8, !dbg !7924
  %call18 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i64 0, i64 0), i8* %25) #11, !dbg !7925
  store i32 %call18, i32* %ret, align 4, !dbg !7926
  br label %if.end19, !dbg !7927

if.end19:                                         ; preds = %if.then16, %land.lhs.true14, %if.end12
  %26 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !7928
  %lock20 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %26, i32 0, i32 9, !dbg !7929
  call void @mutex_unlock(%struct.mutex* %lock20) #11, !dbg !7930
  %27 = load i32, i32* %ret, align 4, !dbg !7931
  ret i32 %27, !dbg !7932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @rc_dev_release(%struct.device* %device) #0 !dbg !7933 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %dev = alloca %struct.rc_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.rc_dev*, align 8
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !7934, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev, metadata !7936, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7938, metadata !DIExpression()), !dbg !7940
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !7940
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7940
  store i8* %1, i8** %__mptr, align 8, !dbg !7940
  br label %do.body, !dbg !7940

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7941

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7940
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7940
  %3 = bitcast i8* %add.ptr to %struct.rc_dev*, !dbg !7940
  store %struct.rc_dev* %3, %struct.rc_dev** %tmp, align 8, !dbg !7941
  %4 = load %struct.rc_dev*, %struct.rc_dev** %tmp, align 8, !dbg !7940
  store %struct.rc_dev* %4, %struct.rc_dev** %dev, align 8, !dbg !7937
  %5 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !7943
  %6 = bitcast %struct.rc_dev* %5 to i8*, !dbg !7943
  call void @kfree(i8* %6) #11, !dbg !7944
  ret void, !dbg !7945
}

; Function Attrs: noredzone
declare dso_local i32 @add_uevent_var(%struct.kobj_uevent_env*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @rc_devnode(%struct.device* %dev, i16* %mode) #0 !dbg !7946 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %mode.addr = alloca i16*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7947, metadata !DIExpression()), !dbg !7948
  store i16* %mode, i16** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %mode.addr, metadata !7949, metadata !DIExpression()), !dbg !7950
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7951
  %call = call i8* @dev_name(%struct.device* %0) #11, !dbg !7952
  %call1 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i8* %call) #11, !dbg !7953
  ret i8* %call1, !dbg !7954
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kasprintf(i32, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !7955 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7958, metadata !DIExpression()), !dbg !7959
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7960
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !7962
  %1 = load i8*, i8** %init_name, align 8, !dbg !7962
  %tobool = icmp ne i8* %1, null, !dbg !7960
  br i1 %tobool, label %if.then, label %if.end, !dbg !7963

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7964
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !7965
  %3 = load i8*, i8** %init_name1, align 8, !dbg !7965
  store i8* %3, i8** %retval, align 8, !dbg !7966
  br label %return, !dbg !7966

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7967
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !7968
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !7969
  store i8* %call, i8** %retval, align 8, !dbg !7970
  br label %return, !dbg !7970

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !7971
  ret i8* %5, !dbg !7971
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !7972 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !7977, metadata !DIExpression()), !dbg !7978
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !7979
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !7980
  %1 = load i8*, i8** %name, align 8, !dbg !7980
  ret i8* %1, !dbg !7981
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devres_alloc_node(void (%struct.device*, i8*)*, i64, i32, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_protocols(%struct.device* %device, %struct.device_attribute* %mattr, i8* %buf) #0 !dbg !7982 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %mattr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %dev = alloca %struct.rc_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.rc_dev*, align 8
  %allowed = alloca i64, align 8
  %enabled = alloca i64, align 8
  %tmp1 = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !7983, metadata !DIExpression()), !dbg !7984
  store %struct.device_attribute* %mattr, %struct.device_attribute** %mattr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %mattr.addr, metadata !7985, metadata !DIExpression()), !dbg !7986
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7987, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev, metadata !7989, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7991, metadata !DIExpression()), !dbg !7993
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !7993
  %1 = bitcast %struct.device* %0 to i8*, !dbg !7993
  store i8* %1, i8** %__mptr, align 8, !dbg !7993
  br label %do.body, !dbg !7993

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7994

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7993
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !7993
  %3 = bitcast i8* %add.ptr to %struct.rc_dev*, !dbg !7993
  store %struct.rc_dev* %3, %struct.rc_dev** %tmp, align 8, !dbg !7994
  %4 = load %struct.rc_dev*, %struct.rc_dev** %tmp, align 8, !dbg !7993
  store %struct.rc_dev* %4, %struct.rc_dev** %dev, align 8, !dbg !7990
  call void @llvm.dbg.declare(metadata i64* %allowed, metadata !7996, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.declare(metadata i64* %enabled, metadata !7998, metadata !DIExpression()), !dbg !7999
  call void @llvm.dbg.declare(metadata i8** %tmp1, metadata !8000, metadata !DIExpression()), !dbg !8001
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !8002
  store i8* %5, i8** %tmp1, align 8, !dbg !8001
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8003, metadata !DIExpression()), !dbg !8004
  %6 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8005
  %lock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 9, !dbg !8006
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !8007
  %7 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8008
  %enabled_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %7, i32 0, i32 17, !dbg !8009
  %8 = load i64, i64* %enabled_protocols, align 8, !dbg !8009
  store i64 %8, i64* %enabled, align 8, !dbg !8010
  %9 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8011
  %allowed_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %9, i32 0, i32 16, !dbg !8012
  %10 = load i64, i64* %allowed_protocols, align 8, !dbg !8012
  store i64 %10, i64* %allowed, align 8, !dbg !8013
  %11 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8014
  %raw = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %11, i32 0, i32 11, !dbg !8016
  %12 = load %struct.ir_raw_event_ctrl*, %struct.ir_raw_event_ctrl** %raw, align 8, !dbg !8016
  %tobool = icmp ne %struct.ir_raw_event_ctrl* %12, null, !dbg !8014
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8017

land.lhs.true:                                    ; preds = %do.end
  %13 = load i64, i64* %allowed, align 8, !dbg !8018
  %tobool2 = icmp ne i64 %13, 0, !dbg !8018
  br i1 %tobool2, label %if.end, label %if.then, !dbg !8019

if.then:                                          ; preds = %land.lhs.true
  %call = call i64 @ir_raw_get_allowed_protocols() #11, !dbg !8020
  store i64 %call, i64* %allowed, align 8, !dbg !8021
  br label %if.end, !dbg !8022

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end
  %14 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8023
  %lock3 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %14, i32 0, i32 9, !dbg !8024
  call void @mutex_unlock(%struct.mutex* %lock3) #11, !dbg !8025
  store i32 0, i32* %i, align 4, !dbg !8026
  br label %for.cond, !dbg !8028

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !8029
  %conv = sext i32 %15 to i64, !dbg !8029
  %cmp = icmp ult i64 %conv, 17, !dbg !8031
  br i1 %cmp, label %for.body, label %for.end, !dbg !8032

for.body:                                         ; preds = %for.cond
  %16 = load i64, i64* %allowed, align 8, !dbg !8033
  %17 = load i64, i64* %enabled, align 8, !dbg !8036
  %and = and i64 %16, %17, !dbg !8037
  %18 = load i32, i32* %i, align 4, !dbg !8038
  %idxprom = sext i32 %18 to i64, !dbg !8039
  %arrayidx = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom, !dbg !8039
  %type = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx, i32 0, i32 0, !dbg !8040
  %19 = load i64, i64* %type, align 8, !dbg !8040
  %and5 = and i64 %and, %19, !dbg !8041
  %tobool6 = icmp ne i64 %and5, 0, !dbg !8041
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !8042

if.then7:                                         ; preds = %for.body
  %20 = load i8*, i8** %tmp1, align 8, !dbg !8043
  %21 = load i32, i32* %i, align 4, !dbg !8044
  %idxprom8 = sext i32 %21 to i64, !dbg !8045
  %arrayidx9 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom8, !dbg !8045
  %name = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx9, i32 0, i32 1, !dbg !8046
  %22 = load i8*, i8** %name, align 8, !dbg !8046
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0), i8* %22) #11, !dbg !8047
  %23 = load i8*, i8** %tmp1, align 8, !dbg !8048
  %idx.ext = sext i32 %call10 to i64, !dbg !8048
  %add.ptr11 = getelementptr i8, i8* %23, i64 %idx.ext, !dbg !8048
  store i8* %add.ptr11, i8** %tmp1, align 8, !dbg !8048
  br label %if.end25, !dbg !8049

if.else:                                          ; preds = %for.body
  %24 = load i64, i64* %allowed, align 8, !dbg !8050
  %25 = load i32, i32* %i, align 4, !dbg !8052
  %idxprom12 = sext i32 %25 to i64, !dbg !8053
  %arrayidx13 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom12, !dbg !8053
  %type14 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx13, i32 0, i32 0, !dbg !8054
  %26 = load i64, i64* %type14, align 8, !dbg !8054
  %and15 = and i64 %24, %26, !dbg !8055
  %tobool16 = icmp ne i64 %and15, 0, !dbg !8055
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !8056

if.then17:                                        ; preds = %if.else
  %27 = load i8*, i8** %tmp1, align 8, !dbg !8057
  %28 = load i32, i32* %i, align 4, !dbg !8058
  %idxprom18 = sext i32 %28 to i64, !dbg !8059
  %arrayidx19 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom18, !dbg !8059
  %name20 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx19, i32 0, i32 1, !dbg !8060
  %29 = load i8*, i8** %name20, align 8, !dbg !8060
  %call21 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0), i8* %29) #11, !dbg !8061
  %30 = load i8*, i8** %tmp1, align 8, !dbg !8062
  %idx.ext22 = sext i32 %call21 to i64, !dbg !8062
  %add.ptr23 = getelementptr i8, i8* %30, i64 %idx.ext22, !dbg !8062
  store i8* %add.ptr23, i8** %tmp1, align 8, !dbg !8062
  br label %if.end24, !dbg !8063

if.end24:                                         ; preds = %if.then17, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then7
  %31 = load i64, i64* %allowed, align 8, !dbg !8064
  %32 = load i32, i32* %i, align 4, !dbg !8066
  %idxprom26 = sext i32 %32 to i64, !dbg !8067
  %arrayidx27 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom26, !dbg !8067
  %type28 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx27, i32 0, i32 0, !dbg !8068
  %33 = load i64, i64* %type28, align 8, !dbg !8068
  %and29 = and i64 %31, %33, !dbg !8069
  %tobool30 = icmp ne i64 %and29, 0, !dbg !8069
  br i1 %tobool30, label %if.then31, label %if.end36, !dbg !8070

if.then31:                                        ; preds = %if.end25
  %34 = load i32, i32* %i, align 4, !dbg !8071
  %idxprom32 = sext i32 %34 to i64, !dbg !8072
  %arrayidx33 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom32, !dbg !8072
  %type34 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx33, i32 0, i32 0, !dbg !8073
  %35 = load i64, i64* %type34, align 8, !dbg !8073
  %neg = xor i64 %35, -1, !dbg !8074
  %36 = load i64, i64* %allowed, align 8, !dbg !8075
  %and35 = and i64 %36, %neg, !dbg !8075
  store i64 %and35, i64* %allowed, align 8, !dbg !8075
  br label %if.end36, !dbg !8076

if.end36:                                         ; preds = %if.then31, %if.end25
  br label %for.inc, !dbg !8077

for.inc:                                          ; preds = %if.end36
  %37 = load i32, i32* %i, align 4, !dbg !8078
  %inc = add i32 %37, 1, !dbg !8078
  store i32 %inc, i32* %i, align 4, !dbg !8078
  br label %for.cond, !dbg !8079, !llvm.loop !8080

for.end:                                          ; preds = %for.cond
  %38 = load i8*, i8** %tmp1, align 8, !dbg !8082
  %39 = load i8*, i8** %buf.addr, align 8, !dbg !8084
  %cmp37 = icmp ne i8* %38, %39, !dbg !8085
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !8086

if.then39:                                        ; preds = %for.end
  %40 = load i8*, i8** %tmp1, align 8, !dbg !8087
  %incdec.ptr = getelementptr i8, i8* %40, i32 -1, !dbg !8087
  store i8* %incdec.ptr, i8** %tmp1, align 8, !dbg !8087
  br label %if.end40, !dbg !8088

if.end40:                                         ; preds = %if.then39, %for.end
  %41 = load i8*, i8** %tmp1, align 8, !dbg !8089
  store i8 10, i8* %41, align 1, !dbg !8090
  %42 = load i8*, i8** %tmp1, align 8, !dbg !8091
  %add.ptr41 = getelementptr i8, i8* %42, i64 1, !dbg !8092
  %43 = load i8*, i8** %buf.addr, align 8, !dbg !8093
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr41 to i64, !dbg !8094
  %sub.ptr.rhs.cast = ptrtoint i8* %43 to i64, !dbg !8094
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8094
  ret i64 %sub.ptr.sub, !dbg !8095
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_protocols(%struct.device* %device, %struct.device_attribute* %mattr, i8* %buf, i64 %len) #0 !dbg !8096 {
entry:
  %retval = alloca i64, align 8
  %device.addr = alloca %struct.device*, align 8
  %mattr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %dev = alloca %struct.rc_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.rc_dev*, align 8
  %current_protocols = alloca i64*, align 8
  %filter = alloca %struct.rc_scancode_filter*, align 8
  %old_protocols = alloca i64, align 8
  %new_protocols = alloca i64, align 8
  %rc = alloca i64, align 8
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !8097, metadata !DIExpression()), !dbg !8098
  store %struct.device_attribute* %mattr, %struct.device_attribute** %mattr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %mattr.addr, metadata !8099, metadata !DIExpression()), !dbg !8100
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8101, metadata !DIExpression()), !dbg !8102
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !8103, metadata !DIExpression()), !dbg !8104
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev, metadata !8105, metadata !DIExpression()), !dbg !8106
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8107, metadata !DIExpression()), !dbg !8109
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !8109
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8109
  store i8* %1, i8** %__mptr, align 8, !dbg !8109
  br label %do.body, !dbg !8109

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8110

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8109
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8109
  %3 = bitcast i8* %add.ptr to %struct.rc_dev*, !dbg !8109
  store %struct.rc_dev* %3, %struct.rc_dev** %tmp, align 8, !dbg !8110
  %4 = load %struct.rc_dev*, %struct.rc_dev** %tmp, align 8, !dbg !8109
  store %struct.rc_dev* %4, %struct.rc_dev** %dev, align 8, !dbg !8106
  call void @llvm.dbg.declare(metadata i64** %current_protocols, metadata !8112, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.declare(metadata %struct.rc_scancode_filter** %filter, metadata !8114, metadata !DIExpression()), !dbg !8115
  call void @llvm.dbg.declare(metadata i64* %old_protocols, metadata !8116, metadata !DIExpression()), !dbg !8117
  call void @llvm.dbg.declare(metadata i64* %new_protocols, metadata !8118, metadata !DIExpression()), !dbg !8119
  call void @llvm.dbg.declare(metadata i64* %rc, metadata !8120, metadata !DIExpression()), !dbg !8121
  %5 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8122
  %enabled_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %5, i32 0, i32 17, !dbg !8123
  store i64* %enabled_protocols, i64** %current_protocols, align 8, !dbg !8124
  %6 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8125
  %scancode_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 20, !dbg !8126
  store %struct.rc_scancode_filter* %scancode_filter, %struct.rc_scancode_filter** %filter, align 8, !dbg !8127
  %7 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8128
  %change_protocol = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %7, i32 0, i32 40, !dbg !8130
  %8 = load i32 (%struct.rc_dev*, i64*)*, i32 (%struct.rc_dev*, i64*)** %change_protocol, align 8, !dbg !8130
  %tobool = icmp ne i32 (%struct.rc_dev*, i64*)* %8, null, !dbg !8128
  br i1 %tobool, label %if.end, label %if.then, !dbg !8131

if.then:                                          ; preds = %do.end
  store i64 -22, i64* %retval, align 8, !dbg !8132
  br label %return, !dbg !8132

if.end:                                           ; preds = %do.end
  %9 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8134
  %lock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %9, i32 0, i32 9, !dbg !8135
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !8136
  %10 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8137
  %registered = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %10, i32 0, i32 39, !dbg !8139
  %11 = load i8, i8* %registered, align 8, !dbg !8139
  %tobool1 = trunc i8 %11 to i1, !dbg !8139
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !8140

if.then2:                                         ; preds = %if.end
  %12 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8141
  %lock3 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %12, i32 0, i32 9, !dbg !8143
  call void @mutex_unlock(%struct.mutex* %lock3) #11, !dbg !8144
  store i64 -19, i64* %retval, align 8, !dbg !8145
  br label %return, !dbg !8145

if.end4:                                          ; preds = %if.end
  %13 = load i64*, i64** %current_protocols, align 8, !dbg !8146
  %14 = load i64, i64* %13, align 8, !dbg !8147
  store i64 %14, i64* %old_protocols, align 8, !dbg !8148
  %15 = load i64, i64* %old_protocols, align 8, !dbg !8149
  store i64 %15, i64* %new_protocols, align 8, !dbg !8150
  %16 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8151
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !8152
  %call = call i32 @parse_protocol_change(%struct.rc_dev* %16, i64* %new_protocols, i8* %17) #11, !dbg !8153
  %conv = sext i32 %call to i64, !dbg !8153
  store i64 %conv, i64* %rc, align 8, !dbg !8154
  %18 = load i64, i64* %rc, align 8, !dbg !8155
  %cmp = icmp slt i64 %18, 0, !dbg !8157
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !8158

if.then6:                                         ; preds = %if.end4
  br label %out, !dbg !8159

if.end7:                                          ; preds = %if.end4
  %19 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8160
  %driver_type = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %19, i32 0, i32 13, !dbg !8162
  %20 = load i32, i32* %driver_type, align 8, !dbg !8162
  %cmp8 = icmp eq i32 %20, 1, !dbg !8163
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !8164

if.then10:                                        ; preds = %if.end7
  call void @ir_raw_load_modules(i64* %new_protocols) #11, !dbg !8165
  br label %if.end11, !dbg !8165

if.end11:                                         ; preds = %if.then10, %if.end7
  %21 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8166
  %change_protocol12 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %21, i32 0, i32 40, !dbg !8167
  %22 = load i32 (%struct.rc_dev*, i64*)*, i32 (%struct.rc_dev*, i64*)** %change_protocol12, align 8, !dbg !8167
  %23 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8168
  %call13 = call i32 %22(%struct.rc_dev* %23, i64* %new_protocols) #11, !dbg !8166
  %conv14 = sext i32 %call13 to i64, !dbg !8166
  store i64 %conv14, i64* %rc, align 8, !dbg !8169
  %24 = load i64, i64* %rc, align 8, !dbg !8170
  %cmp15 = icmp slt i64 %24, 0, !dbg !8172
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !8173

if.then17:                                        ; preds = %if.end11
  br label %out, !dbg !8174

if.end18:                                         ; preds = %if.end11
  %25 = load i64, i64* %new_protocols, align 8, !dbg !8176
  %26 = load i64, i64* %old_protocols, align 8, !dbg !8178
  %cmp19 = icmp ne i64 %25, %26, !dbg !8179
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !8180

if.then21:                                        ; preds = %if.end18
  %27 = load i64, i64* %new_protocols, align 8, !dbg !8181
  %28 = load i64*, i64** %current_protocols, align 8, !dbg !8183
  store i64 %27, i64* %28, align 8, !dbg !8184
  br label %if.end22, !dbg !8185

if.end22:                                         ; preds = %if.then21, %if.end18
  %29 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8186
  %s_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %29, i32 0, i32 51, !dbg !8188
  %30 = load i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %s_filter, align 8, !dbg !8188
  %tobool23 = icmp ne i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)* %30, null, !dbg !8186
  br i1 %tobool23, label %land.lhs.true, label %if.end39, !dbg !8189

land.lhs.true:                                    ; preds = %if.end22
  %31 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter, align 8, !dbg !8190
  %mask = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %31, i32 0, i32 1, !dbg !8191
  %32 = load i32, i32* %mask, align 4, !dbg !8191
  %tobool24 = icmp ne i32 %32, 0, !dbg !8190
  br i1 %tobool24, label %if.then25, label %if.end39, !dbg !8192

if.then25:                                        ; preds = %land.lhs.true
  %33 = load i64, i64* %new_protocols, align 8, !dbg !8193
  %tobool26 = icmp ne i64 %33, 0, !dbg !8193
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !8196

if.then27:                                        ; preds = %if.then25
  %34 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8197
  %s_filter28 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %34, i32 0, i32 51, !dbg !8198
  %35 = load i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %s_filter28, align 8, !dbg !8198
  %36 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8199
  %37 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter, align 8, !dbg !8200
  %call29 = call i32 %35(%struct.rc_dev* %36, %struct.rc_scancode_filter* %37) #11, !dbg !8197
  %conv30 = sext i32 %call29 to i64, !dbg !8197
  store i64 %conv30, i64* %rc, align 8, !dbg !8201
  br label %if.end31, !dbg !8202

if.else:                                          ; preds = %if.then25
  store i64 -1, i64* %rc, align 8, !dbg !8203
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then27
  %38 = load i64, i64* %rc, align 8, !dbg !8204
  %cmp32 = icmp slt i64 %38, 0, !dbg !8206
  br i1 %cmp32, label %if.then34, label %if.end38, !dbg !8207

if.then34:                                        ; preds = %if.end31
  %39 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter, align 8, !dbg !8208
  %data = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %39, i32 0, i32 0, !dbg !8210
  store i32 0, i32* %data, align 4, !dbg !8211
  %40 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter, align 8, !dbg !8212
  %mask35 = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %40, i32 0, i32 1, !dbg !8213
  store i32 0, i32* %mask35, align 4, !dbg !8214
  %41 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8215
  %s_filter36 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %41, i32 0, i32 51, !dbg !8216
  %42 = load i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %s_filter36, align 8, !dbg !8216
  %43 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8217
  %44 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter, align 8, !dbg !8218
  %call37 = call i32 %42(%struct.rc_dev* %43, %struct.rc_scancode_filter* %44) #11, !dbg !8215
  br label %if.end38, !dbg !8219

if.end38:                                         ; preds = %if.then34, %if.end31
  br label %if.end39, !dbg !8220

if.end39:                                         ; preds = %if.end38, %land.lhs.true, %if.end22
  %45 = load i64, i64* %len.addr, align 8, !dbg !8221
  store i64 %45, i64* %rc, align 8, !dbg !8222
  br label %out, !dbg !8223

out:                                              ; preds = %if.end39, %if.then17, %if.then6
  call void @llvm.dbg.label(metadata !8224), !dbg !8225
  %46 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8226
  %lock40 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %46, i32 0, i32 9, !dbg !8227
  call void @mutex_unlock(%struct.mutex* %lock40) #11, !dbg !8228
  %47 = load i64, i64* %rc, align 8, !dbg !8229
  store i64 %47, i64* %retval, align 8, !dbg !8230
  br label %return, !dbg !8230

return:                                           ; preds = %out, %if.then2, %if.then
  %48 = load i64, i64* %retval, align 8, !dbg !8231
  ret i64 %48, !dbg !8231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @parse_protocol_change(%struct.rc_dev* %dev, i64* %protocols, i8* %buf) #0 !dbg !8232 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.rc_dev*, align 8
  %protocols.addr = alloca i64*, align 8
  %buf.addr = alloca i8*, align 8
  %tmp = alloca i8*, align 8
  %count = alloca i32, align 4
  %enable = alloca i8, align 1
  %disable = alloca i8, align 1
  %mask = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !8235, metadata !DIExpression()), !dbg !8236
  store i64* %protocols, i64** %protocols.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %protocols.addr, metadata !8237, metadata !DIExpression()), !dbg !8238
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8239, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !8241, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8243, metadata !DIExpression()), !dbg !8244
  store i32 0, i32* %count, align 4, !dbg !8244
  call void @llvm.dbg.declare(metadata i8* %enable, metadata !8245, metadata !DIExpression()), !dbg !8246
  call void @llvm.dbg.declare(metadata i8* %disable, metadata !8247, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !8249, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8251, metadata !DIExpression()), !dbg !8252
  br label %while.cond, !dbg !8253

while.cond:                                       ; preds = %if.end39, %entry
  %call = call i8* @strsep(i8** %buf.addr, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i64 0, i64 0)) #11, !dbg !8254
  store i8* %call, i8** %tmp, align 8, !dbg !8255
  %cmp = icmp ne i8* %call, null, !dbg !8256
  br i1 %cmp, label %while.body, label %while.end, !dbg !8253

while.body:                                       ; preds = %while.cond
  %0 = load i8*, i8** %tmp, align 8, !dbg !8257
  %1 = load i8, i8* %0, align 1, !dbg !8260
  %tobool = icmp ne i8 %1, 0, !dbg !8260
  br i1 %tobool, label %if.end, label %if.then, !dbg !8261

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !8262

if.end:                                           ; preds = %while.body
  %2 = load i8*, i8** %tmp, align 8, !dbg !8263
  %3 = load i8, i8* %2, align 1, !dbg !8265
  %conv = sext i8 %3 to i32, !dbg !8265
  %cmp1 = icmp eq i32 %conv, 43, !dbg !8266
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !8267

if.then3:                                         ; preds = %if.end
  store i8 1, i8* %enable, align 1, !dbg !8268
  store i8 0, i8* %disable, align 1, !dbg !8270
  %4 = load i8*, i8** %tmp, align 8, !dbg !8271
  %incdec.ptr = getelementptr i8, i8* %4, i32 1, !dbg !8271
  store i8* %incdec.ptr, i8** %tmp, align 8, !dbg !8271
  br label %if.end11, !dbg !8272

if.else:                                          ; preds = %if.end
  %5 = load i8*, i8** %tmp, align 8, !dbg !8273
  %6 = load i8, i8* %5, align 1, !dbg !8275
  %conv4 = sext i8 %6 to i32, !dbg !8275
  %cmp5 = icmp eq i32 %conv4, 45, !dbg !8276
  br i1 %cmp5, label %if.then7, label %if.else9, !dbg !8277

if.then7:                                         ; preds = %if.else
  store i8 0, i8* %enable, align 1, !dbg !8278
  store i8 1, i8* %disable, align 1, !dbg !8280
  %7 = load i8*, i8** %tmp, align 8, !dbg !8281
  %incdec.ptr8 = getelementptr i8, i8* %7, i32 1, !dbg !8281
  store i8* %incdec.ptr8, i8** %tmp, align 8, !dbg !8281
  br label %if.end10, !dbg !8282

if.else9:                                         ; preds = %if.else
  store i8 0, i8* %enable, align 1, !dbg !8283
  store i8 0, i8* %disable, align 1, !dbg !8285
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.then7
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.then3
  store i32 0, i32* %i, align 4, !dbg !8286
  br label %for.cond, !dbg !8288

for.cond:                                         ; preds = %for.inc, %if.end11
  %8 = load i32, i32* %i, align 4, !dbg !8289
  %conv12 = sext i32 %8 to i64, !dbg !8289
  %cmp13 = icmp ult i64 %conv12, 17, !dbg !8291
  br i1 %cmp13, label %for.body, label %for.end, !dbg !8292

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %tmp, align 8, !dbg !8293
  %10 = load i32, i32* %i, align 4, !dbg !8296
  %idxprom = sext i32 %10 to i64, !dbg !8297
  %arrayidx = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom, !dbg !8297
  %name = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx, i32 0, i32 1, !dbg !8298
  %11 = load i8*, i8** %name, align 8, !dbg !8298
  %call15 = call i32 @strcasecmp(i8* %9, i8* %11) #11, !dbg !8299
  %tobool16 = icmp ne i32 %call15, 0, !dbg !8299
  br i1 %tobool16, label %if.end20, label %if.then17, !dbg !8300

if.then17:                                        ; preds = %for.body
  %12 = load i32, i32* %i, align 4, !dbg !8301
  %idxprom18 = sext i32 %12 to i64, !dbg !8303
  %arrayidx19 = getelementptr [17 x %struct.anon.69], [17 x %struct.anon.69]* @proto_names, i64 0, i64 %idxprom18, !dbg !8303
  %type = getelementptr inbounds %struct.anon.69, %struct.anon.69* %arrayidx19, i32 0, i32 0, !dbg !8304
  %13 = load i64, i64* %type, align 8, !dbg !8304
  store i64 %13, i64* %mask, align 8, !dbg !8305
  br label %for.end, !dbg !8306

if.end20:                                         ; preds = %for.body
  br label %for.inc, !dbg !8307

for.inc:                                          ; preds = %if.end20
  %14 = load i32, i32* %i, align 4, !dbg !8308
  %inc = add i32 %14, 1, !dbg !8308
  store i32 %inc, i32* %i, align 4, !dbg !8308
  br label %for.cond, !dbg !8309, !llvm.loop !8310

for.end:                                          ; preds = %if.then17, %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !8312
  %conv21 = sext i32 %15 to i64, !dbg !8312
  %cmp22 = icmp eq i64 %conv21, 17, !dbg !8314
  br i1 %cmp22, label %if.then24, label %if.end30, !dbg !8315

if.then24:                                        ; preds = %for.end
  %16 = load i8*, i8** %tmp, align 8, !dbg !8316
  %call25 = call i32 @strcasecmp(i8* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65, i64 0, i64 0)) #11, !dbg !8319
  %tobool26 = icmp ne i32 %call25, 0, !dbg !8319
  br i1 %tobool26, label %if.else28, label %if.then27, !dbg !8320

if.then27:                                        ; preds = %if.then24
  store i64 0, i64* %mask, align 8, !dbg !8321
  br label %if.end29, !dbg !8322

if.else28:                                        ; preds = %if.then24
  store i32 -22, i32* %retval, align 4, !dbg !8323
  br label %return, !dbg !8323

if.end29:                                         ; preds = %if.then27
  br label %if.end30, !dbg !8325

if.end30:                                         ; preds = %if.end29, %for.end
  %17 = load i32, i32* %count, align 4, !dbg !8326
  %inc31 = add i32 %17, 1, !dbg !8326
  store i32 %inc31, i32* %count, align 4, !dbg !8326
  %18 = load i8, i8* %enable, align 1, !dbg !8327
  %tobool32 = trunc i8 %18 to i1, !dbg !8327
  br i1 %tobool32, label %if.then33, label %if.else34, !dbg !8329

if.then33:                                        ; preds = %if.end30
  %19 = load i64, i64* %mask, align 8, !dbg !8330
  %20 = load i64*, i64** %protocols.addr, align 8, !dbg !8331
  %21 = load i64, i64* %20, align 8, !dbg !8332
  %or = or i64 %21, %19, !dbg !8332
  store i64 %or, i64* %20, align 8, !dbg !8332
  br label %if.end39, !dbg !8333

if.else34:                                        ; preds = %if.end30
  %22 = load i8, i8* %disable, align 1, !dbg !8334
  %tobool35 = trunc i8 %22 to i1, !dbg !8334
  br i1 %tobool35, label %if.then36, label %if.else37, !dbg !8336

if.then36:                                        ; preds = %if.else34
  %23 = load i64, i64* %mask, align 8, !dbg !8337
  %neg = xor i64 %23, -1, !dbg !8338
  %24 = load i64*, i64** %protocols.addr, align 8, !dbg !8339
  %25 = load i64, i64* %24, align 8, !dbg !8340
  %and = and i64 %25, %neg, !dbg !8340
  store i64 %and, i64* %24, align 8, !dbg !8340
  br label %if.end38, !dbg !8341

if.else37:                                        ; preds = %if.else34
  %26 = load i64, i64* %mask, align 8, !dbg !8342
  %27 = load i64*, i64** %protocols.addr, align 8, !dbg !8343
  store i64 %26, i64* %27, align 8, !dbg !8344
  br label %if.end38

if.end38:                                         ; preds = %if.else37, %if.then36
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then33
  br label %while.cond, !dbg !8253, !llvm.loop !8345

while.end:                                        ; preds = %if.then, %while.cond
  %28 = load i32, i32* %count, align 4, !dbg !8347
  %tobool40 = icmp ne i32 %28, 0, !dbg !8347
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !8349

if.then41:                                        ; preds = %while.end
  store i32 -22, i32* %retval, align 4, !dbg !8350
  br label %return, !dbg !8350

if.end42:                                         ; preds = %while.end
  %29 = load i32, i32* %count, align 4, !dbg !8352
  store i32 %29, i32* %retval, align 4, !dbg !8353
  br label %return, !dbg !8353

return:                                           ; preds = %if.end42, %if.then41, %if.else28
  %30 = load i32, i32* %retval, align 4, !dbg !8354
  ret i32 %30, !dbg !8354
}

; Function Attrs: noredzone
declare dso_local i8* @strsep(i8**, i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @strcasecmp(i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_filter(%struct.device* %device, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !8355 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %dev = alloca %struct.rc_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.rc_dev*, align 8
  %fattr = alloca %struct.rc_filter_attribute*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.rc_filter_attribute*, align 8
  %filter = alloca %struct.rc_scancode_filter*, align 8
  %val = alloca i32, align 4
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !8356, metadata !DIExpression()), !dbg !8357
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8358, metadata !DIExpression()), !dbg !8359
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev, metadata !8362, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8364, metadata !DIExpression()), !dbg !8366
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !8366
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8366
  store i8* %1, i8** %__mptr, align 8, !dbg !8366
  br label %do.body, !dbg !8366

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8367

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8366
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8366
  %3 = bitcast i8* %add.ptr to %struct.rc_dev*, !dbg !8366
  store %struct.rc_dev* %3, %struct.rc_dev** %tmp, align 8, !dbg !8367
  %4 = load %struct.rc_dev*, %struct.rc_dev** %tmp, align 8, !dbg !8366
  store %struct.rc_dev* %4, %struct.rc_dev** %dev, align 8, !dbg !8363
  call void @llvm.dbg.declare(metadata %struct.rc_filter_attribute** %fattr, metadata !8369, metadata !DIExpression()), !dbg !8370
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !8371, metadata !DIExpression()), !dbg !8373
  %5 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !8373
  %6 = bitcast %struct.device_attribute* %5 to i8*, !dbg !8373
  store i8* %6, i8** %__mptr1, align 8, !dbg !8373
  br label %do.body2, !dbg !8373

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !8374

do.end3:                                          ; preds = %do.body2
  %7 = load i8*, i8** %__mptr1, align 8, !dbg !8373
  %add.ptr5 = getelementptr i8, i8* %7, i64 0, !dbg !8373
  %8 = bitcast i8* %add.ptr5 to %struct.rc_filter_attribute*, !dbg !8373
  store %struct.rc_filter_attribute* %8, %struct.rc_filter_attribute** %tmp4, align 8, !dbg !8374
  %9 = load %struct.rc_filter_attribute*, %struct.rc_filter_attribute** %tmp4, align 8, !dbg !8373
  store %struct.rc_filter_attribute* %9, %struct.rc_filter_attribute** %fattr, align 8, !dbg !8370
  call void @llvm.dbg.declare(metadata %struct.rc_scancode_filter** %filter, metadata !8376, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.declare(metadata i32* %val, metadata !8378, metadata !DIExpression()), !dbg !8379
  %10 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8380
  %lock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %10, i32 0, i32 9, !dbg !8381
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !8382
  %11 = load %struct.rc_filter_attribute*, %struct.rc_filter_attribute** %fattr, align 8, !dbg !8383
  %type = getelementptr inbounds %struct.rc_filter_attribute, %struct.rc_filter_attribute* %11, i32 0, i32 1, !dbg !8385
  %12 = load i32, i32* %type, align 8, !dbg !8385
  %cmp = icmp eq i32 %12, 0, !dbg !8386
  br i1 %cmp, label %if.then, label %if.else, !dbg !8387

if.then:                                          ; preds = %do.end3
  %13 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8388
  %scancode_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %13, i32 0, i32 20, !dbg !8389
  store %struct.rc_scancode_filter* %scancode_filter, %struct.rc_scancode_filter** %filter, align 8, !dbg !8390
  br label %if.end, !dbg !8391

if.else:                                          ; preds = %do.end3
  %14 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8392
  %scancode_wakeup_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %14, i32 0, i32 21, !dbg !8393
  store %struct.rc_scancode_filter* %scancode_wakeup_filter, %struct.rc_scancode_filter** %filter, align 8, !dbg !8394
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct.rc_filter_attribute*, %struct.rc_filter_attribute** %fattr, align 8, !dbg !8395
  %mask = getelementptr inbounds %struct.rc_filter_attribute, %struct.rc_filter_attribute* %15, i32 0, i32 2, !dbg !8397
  %16 = load i8, i8* %mask, align 4, !dbg !8397
  %tobool = trunc i8 %16 to i1, !dbg !8397
  br i1 %tobool, label %if.then6, label %if.else8, !dbg !8398

if.then6:                                         ; preds = %if.end
  %17 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter, align 8, !dbg !8399
  %mask7 = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %17, i32 0, i32 1, !dbg !8400
  %18 = load i32, i32* %mask7, align 4, !dbg !8400
  store i32 %18, i32* %val, align 4, !dbg !8401
  br label %if.end9, !dbg !8402

if.else8:                                         ; preds = %if.end
  %19 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter, align 8, !dbg !8403
  %data = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %19, i32 0, i32 0, !dbg !8404
  %20 = load i32, i32* %data, align 4, !dbg !8404
  store i32 %20, i32* %val, align 4, !dbg !8405
  br label %if.end9

if.end9:                                          ; preds = %if.else8, %if.then6
  %21 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8406
  %lock10 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %21, i32 0, i32 9, !dbg !8407
  call void @mutex_unlock(%struct.mutex* %lock10) #11, !dbg !8408
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !8409
  %23 = load i32, i32* %val, align 4, !dbg !8410
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %22, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i32 %23) #11, !dbg !8411
  %conv = sext i32 %call to i64, !dbg !8411
  ret i64 %conv, !dbg !8412
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_filter(%struct.device* %device, %struct.device_attribute* %attr, i8* %buf, i64 %len) #0 !dbg !8413 {
entry:
  %retval = alloca i64, align 8
  %device.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %dev = alloca %struct.rc_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.rc_dev*, align 8
  %fattr = alloca %struct.rc_filter_attribute*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.rc_filter_attribute*, align 8
  %new_filter = alloca %struct.rc_scancode_filter, align 4
  %filter = alloca %struct.rc_scancode_filter*, align 8
  %ret = alloca i32, align 4
  %val = alloca i64, align 8
  %set_filter = alloca i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, align 8
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !8414, metadata !DIExpression()), !dbg !8415
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !8416, metadata !DIExpression()), !dbg !8417
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8418, metadata !DIExpression()), !dbg !8419
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !8420, metadata !DIExpression()), !dbg !8421
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev, metadata !8422, metadata !DIExpression()), !dbg !8423
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8424, metadata !DIExpression()), !dbg !8426
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !8426
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8426
  store i8* %1, i8** %__mptr, align 8, !dbg !8426
  br label %do.body, !dbg !8426

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8427

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8426
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8426
  %3 = bitcast i8* %add.ptr to %struct.rc_dev*, !dbg !8426
  store %struct.rc_dev* %3, %struct.rc_dev** %tmp, align 8, !dbg !8427
  %4 = load %struct.rc_dev*, %struct.rc_dev** %tmp, align 8, !dbg !8426
  store %struct.rc_dev* %4, %struct.rc_dev** %dev, align 8, !dbg !8423
  call void @llvm.dbg.declare(metadata %struct.rc_filter_attribute** %fattr, metadata !8429, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !8431, metadata !DIExpression()), !dbg !8433
  %5 = load %struct.device_attribute*, %struct.device_attribute** %attr.addr, align 8, !dbg !8433
  %6 = bitcast %struct.device_attribute* %5 to i8*, !dbg !8433
  store i8* %6, i8** %__mptr1, align 8, !dbg !8433
  br label %do.body2, !dbg !8433

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !8434

do.end3:                                          ; preds = %do.body2
  %7 = load i8*, i8** %__mptr1, align 8, !dbg !8433
  %add.ptr5 = getelementptr i8, i8* %7, i64 0, !dbg !8433
  %8 = bitcast i8* %add.ptr5 to %struct.rc_filter_attribute*, !dbg !8433
  store %struct.rc_filter_attribute* %8, %struct.rc_filter_attribute** %tmp4, align 8, !dbg !8434
  %9 = load %struct.rc_filter_attribute*, %struct.rc_filter_attribute** %tmp4, align 8, !dbg !8433
  store %struct.rc_filter_attribute* %9, %struct.rc_filter_attribute** %fattr, align 8, !dbg !8430
  call void @llvm.dbg.declare(metadata %struct.rc_scancode_filter* %new_filter, metadata !8436, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.declare(metadata %struct.rc_scancode_filter** %filter, metadata !8438, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8440, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.declare(metadata i64* %val, metadata !8442, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.declare(metadata i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %set_filter, metadata !8444, metadata !DIExpression()), !dbg !8445
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !8446
  %call = call i32 @kstrtoul(i8* %10, i32 0, i64* %val) #11, !dbg !8447
  store i32 %call, i32* %ret, align 4, !dbg !8448
  %11 = load i32, i32* %ret, align 4, !dbg !8449
  %cmp = icmp slt i32 %11, 0, !dbg !8451
  br i1 %cmp, label %if.then, label %if.end, !dbg !8452

if.then:                                          ; preds = %do.end3
  %12 = load i32, i32* %ret, align 4, !dbg !8453
  %conv = sext i32 %12 to i64, !dbg !8453
  store i64 %conv, i64* %retval, align 8, !dbg !8454
  br label %return, !dbg !8454

if.end:                                           ; preds = %do.end3
  %13 = load %struct.rc_filter_attribute*, %struct.rc_filter_attribute** %fattr, align 8, !dbg !8455
  %type = getelementptr inbounds %struct.rc_filter_attribute, %struct.rc_filter_attribute* %13, i32 0, i32 1, !dbg !8457
  %14 = load i32, i32* %type, align 8, !dbg !8457
  %cmp6 = icmp eq i32 %14, 0, !dbg !8458
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !8459

if.then8:                                         ; preds = %if.end
  %15 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8460
  %s_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %15, i32 0, i32 51, !dbg !8462
  %16 = load i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %s_filter, align 8, !dbg !8462
  store i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)* %16, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %set_filter, align 8, !dbg !8463
  %17 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8464
  %scancode_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %17, i32 0, i32 20, !dbg !8465
  store %struct.rc_scancode_filter* %scancode_filter, %struct.rc_scancode_filter** %filter, align 8, !dbg !8466
  br label %if.end9, !dbg !8467

if.else:                                          ; preds = %if.end
  %18 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8468
  %s_wakeup_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %18, i32 0, i32 52, !dbg !8470
  %19 = load i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %s_wakeup_filter, align 8, !dbg !8470
  store i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)* %19, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %set_filter, align 8, !dbg !8471
  %20 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8472
  %scancode_wakeup_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %20, i32 0, i32 21, !dbg !8473
  store %struct.rc_scancode_filter* %scancode_wakeup_filter, %struct.rc_scancode_filter** %filter, align 8, !dbg !8474
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  %21 = load i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %set_filter, align 8, !dbg !8475
  %tobool = icmp ne i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)* %21, null, !dbg !8475
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !8477

if.then10:                                        ; preds = %if.end9
  store i64 -22, i64* %retval, align 8, !dbg !8478
  br label %return, !dbg !8478

if.end11:                                         ; preds = %if.end9
  %22 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8479
  %lock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %22, i32 0, i32 9, !dbg !8480
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !8481
  %23 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8482
  %registered = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %23, i32 0, i32 39, !dbg !8484
  %24 = load i8, i8* %registered, align 8, !dbg !8484
  %tobool12 = trunc i8 %24 to i1, !dbg !8484
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !8485

if.then13:                                        ; preds = %if.end11
  %25 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8486
  %lock14 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %25, i32 0, i32 9, !dbg !8488
  call void @mutex_unlock(%struct.mutex* %lock14) #11, !dbg !8489
  store i64 -19, i64* %retval, align 8, !dbg !8490
  br label %return, !dbg !8490

if.end15:                                         ; preds = %if.end11
  %26 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter, align 8, !dbg !8491
  %27 = bitcast %struct.rc_scancode_filter* %new_filter to i8*, !dbg !8492
  %28 = bitcast %struct.rc_scancode_filter* %26 to i8*, !dbg !8492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 4 %28, i64 8, i1 false), !dbg !8492
  %29 = load %struct.rc_filter_attribute*, %struct.rc_filter_attribute** %fattr, align 8, !dbg !8493
  %mask = getelementptr inbounds %struct.rc_filter_attribute, %struct.rc_filter_attribute* %29, i32 0, i32 2, !dbg !8495
  %30 = load i8, i8* %mask, align 4, !dbg !8495
  %tobool16 = trunc i8 %30 to i1, !dbg !8495
  br i1 %tobool16, label %if.then17, label %if.else20, !dbg !8496

if.then17:                                        ; preds = %if.end15
  %31 = load i64, i64* %val, align 8, !dbg !8497
  %conv18 = trunc i64 %31 to i32, !dbg !8497
  %mask19 = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %new_filter, i32 0, i32 1, !dbg !8498
  store i32 %conv18, i32* %mask19, align 4, !dbg !8499
  br label %if.end22, !dbg !8500

if.else20:                                        ; preds = %if.end15
  %32 = load i64, i64* %val, align 8, !dbg !8501
  %conv21 = trunc i64 %32 to i32, !dbg !8501
  %data = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %new_filter, i32 0, i32 0, !dbg !8502
  store i32 %conv21, i32* %data, align 4, !dbg !8503
  br label %if.end22

if.end22:                                         ; preds = %if.else20, %if.then17
  %33 = load %struct.rc_filter_attribute*, %struct.rc_filter_attribute** %fattr, align 8, !dbg !8504
  %type23 = getelementptr inbounds %struct.rc_filter_attribute, %struct.rc_filter_attribute* %33, i32 0, i32 1, !dbg !8506
  %34 = load i32, i32* %type23, align 8, !dbg !8506
  %cmp24 = icmp eq i32 %34, 1, !dbg !8507
  br i1 %cmp24, label %if.then26, label %if.end37, !dbg !8508

if.then26:                                        ; preds = %if.end22
  %35 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8509
  %wakeup_protocol = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %35, i32 0, i32 19, !dbg !8512
  %36 = load i32, i32* %wakeup_protocol, align 8, !dbg !8512
  %cmp27 = icmp ne i32 %36, 0, !dbg !8513
  br i1 %cmp27, label %if.then29, label %if.else31, !dbg !8514

if.then29:                                        ; preds = %if.then26
  %37 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8515
  %call30 = call i32 @rc_validate_filter(%struct.rc_dev* %37, %struct.rc_scancode_filter* %new_filter) #11, !dbg !8516
  store i32 %call30, i32* %ret, align 4, !dbg !8517
  br label %if.end32, !dbg !8518

if.else31:                                        ; preds = %if.then26
  store i32 -22, i32* %ret, align 4, !dbg !8519
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then29
  %38 = load i32, i32* %ret, align 4, !dbg !8520
  %cmp33 = icmp ne i32 %38, 0, !dbg !8522
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !8523

if.then35:                                        ; preds = %if.end32
  br label %unlock, !dbg !8524

if.end36:                                         ; preds = %if.end32
  br label %if.end37, !dbg !8525

if.end37:                                         ; preds = %if.end36, %if.end22
  %39 = load %struct.rc_filter_attribute*, %struct.rc_filter_attribute** %fattr, align 8, !dbg !8526
  %type38 = getelementptr inbounds %struct.rc_filter_attribute, %struct.rc_filter_attribute* %39, i32 0, i32 1, !dbg !8528
  %40 = load i32, i32* %type38, align 8, !dbg !8528
  %cmp39 = icmp eq i32 %40, 0, !dbg !8529
  br i1 %cmp39, label %land.lhs.true, label %if.end45, !dbg !8530

land.lhs.true:                                    ; preds = %if.end37
  %41 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8531
  %enabled_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %41, i32 0, i32 17, !dbg !8532
  %42 = load i64, i64* %enabled_protocols, align 8, !dbg !8532
  %tobool41 = icmp ne i64 %42, 0, !dbg !8531
  br i1 %tobool41, label %if.end45, label %land.lhs.true42, !dbg !8533

land.lhs.true42:                                  ; preds = %land.lhs.true
  %43 = load i64, i64* %val, align 8, !dbg !8534
  %tobool43 = icmp ne i64 %43, 0, !dbg !8534
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !8535

if.then44:                                        ; preds = %land.lhs.true42
  store i32 -22, i32* %ret, align 4, !dbg !8536
  br label %unlock, !dbg !8538

if.end45:                                         ; preds = %land.lhs.true42, %land.lhs.true, %if.end37
  %44 = load i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %set_filter, align 8, !dbg !8539
  %45 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8540
  %call46 = call i32 %44(%struct.rc_dev* %45, %struct.rc_scancode_filter* %new_filter) #11, !dbg !8539
  store i32 %call46, i32* %ret, align 4, !dbg !8541
  %46 = load i32, i32* %ret, align 4, !dbg !8542
  %cmp47 = icmp slt i32 %46, 0, !dbg !8544
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !8545

if.then49:                                        ; preds = %if.end45
  br label %unlock, !dbg !8546

if.end50:                                         ; preds = %if.end45
  %47 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter, align 8, !dbg !8547
  %48 = bitcast %struct.rc_scancode_filter* %47 to i8*, !dbg !8548
  %49 = bitcast %struct.rc_scancode_filter* %new_filter to i8*, !dbg !8548
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 8, i1 false), !dbg !8548
  br label %unlock, !dbg !8549

unlock:                                           ; preds = %if.end50, %if.then49, %if.then44, %if.then35
  call void @llvm.dbg.label(metadata !8550), !dbg !8551
  %50 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8552
  %lock51 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %50, i32 0, i32 9, !dbg !8553
  call void @mutex_unlock(%struct.mutex* %lock51) #11, !dbg !8554
  %51 = load i32, i32* %ret, align 4, !dbg !8555
  %cmp52 = icmp slt i32 %51, 0, !dbg !8556
  br i1 %cmp52, label %cond.true, label %cond.false, !dbg !8557

cond.true:                                        ; preds = %unlock
  %52 = load i32, i32* %ret, align 4, !dbg !8558
  %conv54 = sext i32 %52 to i64, !dbg !8558
  br label %cond.end, !dbg !8557

cond.false:                                       ; preds = %unlock
  %53 = load i64, i64* %len.addr, align 8, !dbg !8559
  br label %cond.end, !dbg !8557

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv54, %cond.true ], [ %53, %cond.false ], !dbg !8557
  store i64 %cond, i64* %retval, align 8, !dbg !8560
  br label %return, !dbg !8560

return:                                           ; preds = %cond.end, %if.then13, %if.then10, %if.then
  %54 = load i64, i64* %retval, align 8, !dbg !8561
  ret i64 %54, !dbg !8561
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kstrtoul(i8* %s, i32 %base, i64* %res) #0 !dbg !8562 {
entry:
  %s.addr = alloca i8*, align 8
  %base.addr = alloca i32, align 4
  %res.addr = alloca i64*, align 8
  store i8* %s, i8** %s.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !8567, metadata !DIExpression()), !dbg !8568
  store i32 %base, i32* %base.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !8569, metadata !DIExpression()), !dbg !8570
  store i64* %res, i64** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %res.addr, metadata !8571, metadata !DIExpression()), !dbg !8572
  %0 = load i8*, i8** %s.addr, align 8, !dbg !8573
  %1 = load i32, i32* %base.addr, align 4, !dbg !8575
  %2 = load i64*, i64** %res.addr, align 8, !dbg !8576
  %call = call i32 @kstrtoull(i8* %0, i32 %1, i64* %2) #11, !dbg !8577
  ret i32 %call, !dbg !8578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rc_validate_filter(%struct.rc_dev* %dev, %struct.rc_scancode_filter* %filter) #0 !dbg !8579 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.rc_dev*, align 8
  %filter.addr = alloca %struct.rc_scancode_filter*, align 8
  %mask = alloca i32, align 4
  %s = alloca i32, align 4
  %protocol = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !8580, metadata !DIExpression()), !dbg !8581
  store %struct.rc_scancode_filter* %filter, %struct.rc_scancode_filter** %filter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_scancode_filter** %filter.addr, metadata !8582, metadata !DIExpression()), !dbg !8583
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !8584, metadata !DIExpression()), !dbg !8585
  call void @llvm.dbg.declare(metadata i32* %s, metadata !8586, metadata !DIExpression()), !dbg !8587
  %0 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter.addr, align 8, !dbg !8588
  %data = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %0, i32 0, i32 0, !dbg !8589
  %1 = load i32, i32* %data, align 4, !dbg !8589
  store i32 %1, i32* %s, align 4, !dbg !8587
  call void @llvm.dbg.declare(metadata i32* %protocol, metadata !8590, metadata !DIExpression()), !dbg !8591
  %2 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !8592
  %wakeup_protocol = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %2, i32 0, i32 19, !dbg !8593
  %3 = load i32, i32* %wakeup_protocol, align 8, !dbg !8593
  store i32 %3, i32* %protocol, align 4, !dbg !8591
  %4 = load i32, i32* %protocol, align 4, !dbg !8594
  %conv = zext i32 %4 to i64, !dbg !8594
  %cmp = icmp uge i64 %conv, 28, !dbg !8596
  br i1 %cmp, label %if.then, label %if.end, !dbg !8597

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8598
  br label %return, !dbg !8598

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %protocol, align 4, !dbg !8599
  %idxprom = zext i32 %5 to i64, !dbg !8600
  %arrayidx = getelementptr [28 x %struct.anon.70], [28 x %struct.anon.70]* @protocols, i64 0, i64 %idxprom, !dbg !8600
  %scancode_bits = getelementptr inbounds %struct.anon.70, %struct.anon.70* %arrayidx, i32 0, i32 2, !dbg !8601
  %6 = load i32, i32* %scancode_bits, align 4, !dbg !8601
  store i32 %6, i32* %mask, align 4, !dbg !8602
  %7 = load i32, i32* %protocol, align 4, !dbg !8603
  %8 = load i32, i32* %s, align 4, !dbg !8605
  %call = call zeroext i1 @rc_validate_scancode(i32 %7, i32 %8) #11, !dbg !8606
  br i1 %call, label %if.end3, label %if.then2, !dbg !8607

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8608
  br label %return, !dbg !8608

if.end3:                                          ; preds = %if.end
  %9 = load i32, i32* %mask, align 4, !dbg !8609
  %10 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter.addr, align 8, !dbg !8610
  %data4 = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %10, i32 0, i32 0, !dbg !8611
  %11 = load i32, i32* %data4, align 4, !dbg !8612
  %and = and i32 %11, %9, !dbg !8612
  store i32 %and, i32* %data4, align 4, !dbg !8612
  %12 = load i32, i32* %mask, align 4, !dbg !8613
  %13 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter.addr, align 8, !dbg !8614
  %mask5 = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %13, i32 0, i32 1, !dbg !8615
  %14 = load i32, i32* %mask5, align 4, !dbg !8616
  %and6 = and i32 %14, %12, !dbg !8616
  store i32 %and6, i32* %mask5, align 4, !dbg !8616
  %15 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !8617
  %encode_wakeup = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %15, i32 0, i32 15, !dbg !8619
  %16 = load i8, i8* %encode_wakeup, align 1, !dbg !8619
  %tobool = trunc i8 %16 to i1, !dbg !8619
  br i1 %tobool, label %land.lhs.true, label %if.end16, !dbg !8620

land.lhs.true:                                    ; preds = %if.end3
  %17 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter.addr, align 8, !dbg !8621
  %mask8 = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %17, i32 0, i32 1, !dbg !8622
  %18 = load i32, i32* %mask8, align 4, !dbg !8622
  %cmp9 = icmp ne i32 %18, 0, !dbg !8623
  br i1 %cmp9, label %land.lhs.true11, label %if.end16, !dbg !8624

land.lhs.true11:                                  ; preds = %land.lhs.true
  %19 = load %struct.rc_scancode_filter*, %struct.rc_scancode_filter** %filter.addr, align 8, !dbg !8625
  %mask12 = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %19, i32 0, i32 1, !dbg !8626
  %20 = load i32, i32* %mask12, align 4, !dbg !8626
  %21 = load i32, i32* %mask, align 4, !dbg !8627
  %cmp13 = icmp ne i32 %20, %21, !dbg !8628
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !8629

if.then15:                                        ; preds = %land.lhs.true11
  store i32 -22, i32* %retval, align 4, !dbg !8630
  br label %return, !dbg !8630

if.end16:                                         ; preds = %land.lhs.true11, %land.lhs.true, %if.end3
  store i32 0, i32* %retval, align 4, !dbg !8631
  br label %return, !dbg !8631

return:                                           ; preds = %if.end16, %if.then15, %if.then2, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !8632
  ret i32 %22, !dbg !8632
}

; Function Attrs: noredzone
declare dso_local i32 @kstrtoull(i8*, i32, i64*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @show_wakeup_protocols(%struct.device* %device, %struct.device_attribute* %mattr, i8* %buf) #0 !dbg !8633 {
entry:
  %device.addr = alloca %struct.device*, align 8
  %mattr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %dev = alloca %struct.rc_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.rc_dev*, align 8
  %allowed = alloca i64, align 8
  %enabled = alloca i32, align 4
  %tmp1 = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !8634, metadata !DIExpression()), !dbg !8635
  store %struct.device_attribute* %mattr, %struct.device_attribute** %mattr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %mattr.addr, metadata !8636, metadata !DIExpression()), !dbg !8637
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8638, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev, metadata !8640, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8642, metadata !DIExpression()), !dbg !8644
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !8644
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8644
  store i8* %1, i8** %__mptr, align 8, !dbg !8644
  br label %do.body, !dbg !8644

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8645

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8644
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8644
  %3 = bitcast i8* %add.ptr to %struct.rc_dev*, !dbg !8644
  store %struct.rc_dev* %3, %struct.rc_dev** %tmp, align 8, !dbg !8645
  %4 = load %struct.rc_dev*, %struct.rc_dev** %tmp, align 8, !dbg !8644
  store %struct.rc_dev* %4, %struct.rc_dev** %dev, align 8, !dbg !8641
  call void @llvm.dbg.declare(metadata i64* %allowed, metadata !8647, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.declare(metadata i32* %enabled, metadata !8649, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.declare(metadata i8** %tmp1, metadata !8651, metadata !DIExpression()), !dbg !8652
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !8653
  store i8* %5, i8** %tmp1, align 8, !dbg !8652
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8654, metadata !DIExpression()), !dbg !8655
  %6 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8656
  %lock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 9, !dbg !8657
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !8658
  %7 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8659
  %allowed_wakeup_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %7, i32 0, i32 18, !dbg !8660
  %8 = load i64, i64* %allowed_wakeup_protocols, align 8, !dbg !8660
  store i64 %8, i64* %allowed, align 8, !dbg !8661
  %9 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8662
  %wakeup_protocol = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %9, i32 0, i32 19, !dbg !8663
  %10 = load i32, i32* %wakeup_protocol, align 8, !dbg !8663
  store i32 %10, i32* %enabled, align 4, !dbg !8664
  %11 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8665
  %lock2 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %11, i32 0, i32 9, !dbg !8666
  call void @mutex_unlock(%struct.mutex* %lock2) #11, !dbg !8667
  store i32 0, i32* %i, align 4, !dbg !8668
  br label %for.cond, !dbg !8670

for.cond:                                         ; preds = %for.inc, %do.end
  %12 = load i32, i32* %i, align 4, !dbg !8671
  %conv = sext i32 %12 to i64, !dbg !8671
  %cmp = icmp ult i64 %conv, 28, !dbg !8673
  br i1 %cmp, label %for.body, label %for.end, !dbg !8674

for.body:                                         ; preds = %for.cond
  %13 = load i64, i64* %allowed, align 8, !dbg !8675
  %14 = load i32, i32* %i, align 4, !dbg !8678
  %sh_prom = zext i32 %14 to i64, !dbg !8679
  %shl = shl i64 1, %sh_prom, !dbg !8679
  %and = and i64 %13, %shl, !dbg !8680
  %tobool = icmp ne i64 %and, 0, !dbg !8680
  br i1 %tobool, label %if.then, label %if.end14, !dbg !8681

if.then:                                          ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !8682
  %16 = load i32, i32* %enabled, align 4, !dbg !8685
  %cmp4 = icmp eq i32 %15, %16, !dbg !8686
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !8687

if.then6:                                         ; preds = %if.then
  %17 = load i8*, i8** %tmp1, align 8, !dbg !8688
  %18 = load i32, i32* %i, align 4, !dbg !8689
  %idxprom = sext i32 %18 to i64, !dbg !8690
  %arrayidx = getelementptr [28 x %struct.anon.70], [28 x %struct.anon.70]* @protocols, i64 0, i64 %idxprom, !dbg !8690
  %name = getelementptr inbounds %struct.anon.70, %struct.anon.70* %arrayidx, i32 0, i32 0, !dbg !8691
  %19 = load i8*, i8** %name, align 16, !dbg !8691
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0), i8* %19) #11, !dbg !8692
  %20 = load i8*, i8** %tmp1, align 8, !dbg !8693
  %idx.ext = sext i32 %call to i64, !dbg !8693
  %add.ptr7 = getelementptr i8, i8* %20, i64 %idx.ext, !dbg !8693
  store i8* %add.ptr7, i8** %tmp1, align 8, !dbg !8693
  br label %if.end, !dbg !8694

if.else:                                          ; preds = %if.then
  %21 = load i8*, i8** %tmp1, align 8, !dbg !8695
  %22 = load i32, i32* %i, align 4, !dbg !8696
  %idxprom8 = sext i32 %22 to i64, !dbg !8697
  %arrayidx9 = getelementptr [28 x %struct.anon.70], [28 x %struct.anon.70]* @protocols, i64 0, i64 %idxprom8, !dbg !8697
  %name10 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %arrayidx9, i32 0, i32 0, !dbg !8698
  %23 = load i8*, i8** %name10, align 16, !dbg !8698
  %call11 = call i32 (i8*, i8*, ...) @sprintf(i8* %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.63, i64 0, i64 0), i8* %23) #11, !dbg !8699
  %24 = load i8*, i8** %tmp1, align 8, !dbg !8700
  %idx.ext12 = sext i32 %call11 to i64, !dbg !8700
  %add.ptr13 = getelementptr i8, i8* %24, i64 %idx.ext12, !dbg !8700
  store i8* %add.ptr13, i8** %tmp1, align 8, !dbg !8700
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  br label %if.end14, !dbg !8701

if.end14:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !8702

for.inc:                                          ; preds = %if.end14
  %25 = load i32, i32* %i, align 4, !dbg !8703
  %inc = add i32 %25, 1, !dbg !8703
  store i32 %inc, i32* %i, align 4, !dbg !8703
  br label %for.cond, !dbg !8704, !llvm.loop !8705

for.end:                                          ; preds = %for.cond
  %26 = load i8*, i8** %tmp1, align 8, !dbg !8707
  %27 = load i8*, i8** %buf.addr, align 8, !dbg !8709
  %cmp15 = icmp ne i8* %26, %27, !dbg !8710
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !8711

if.then17:                                        ; preds = %for.end
  %28 = load i8*, i8** %tmp1, align 8, !dbg !8712
  %incdec.ptr = getelementptr i8, i8* %28, i32 -1, !dbg !8712
  store i8* %incdec.ptr, i8** %tmp1, align 8, !dbg !8712
  br label %if.end18, !dbg !8713

if.end18:                                         ; preds = %if.then17, %for.end
  %29 = load i8*, i8** %tmp1, align 8, !dbg !8714
  store i8 10, i8* %29, align 1, !dbg !8715
  %30 = load i8*, i8** %tmp1, align 8, !dbg !8716
  %add.ptr19 = getelementptr i8, i8* %30, i64 1, !dbg !8717
  %31 = load i8*, i8** %buf.addr, align 8, !dbg !8718
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr19 to i64, !dbg !8719
  %sub.ptr.rhs.cast = ptrtoint i8* %31 to i64, !dbg !8719
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8719
  ret i64 %sub.ptr.sub, !dbg !8720
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @store_wakeup_protocols(%struct.device* %device, %struct.device_attribute* %mattr, i8* %buf, i64 %len) #0 !dbg !8721 {
entry:
  %retval = alloca i64, align 8
  %device.addr = alloca %struct.device*, align 8
  %mattr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %dev = alloca %struct.rc_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.rc_dev*, align 8
  %protocol = alloca i32, align 4
  %rc = alloca i64, align 8
  %allowed = alloca i64, align 8
  %i = alloca i32, align 4
  %mask = alloca i64, align 8
  store %struct.device* %device, %struct.device** %device.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %device.addr, metadata !8722, metadata !DIExpression()), !dbg !8723
  store %struct.device_attribute* %mattr, %struct.device_attribute** %mattr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %mattr.addr, metadata !8724, metadata !DIExpression()), !dbg !8725
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8726, metadata !DIExpression()), !dbg !8727
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !8728, metadata !DIExpression()), !dbg !8729
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev, metadata !8730, metadata !DIExpression()), !dbg !8731
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8732, metadata !DIExpression()), !dbg !8734
  %0 = load %struct.device*, %struct.device** %device.addr, align 8, !dbg !8734
  %1 = bitcast %struct.device* %0 to i8*, !dbg !8734
  store i8* %1, i8** %__mptr, align 8, !dbg !8734
  br label %do.body, !dbg !8734

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8735

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !8734
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !8734
  %3 = bitcast i8* %add.ptr to %struct.rc_dev*, !dbg !8734
  store %struct.rc_dev* %3, %struct.rc_dev** %tmp, align 8, !dbg !8735
  %4 = load %struct.rc_dev*, %struct.rc_dev** %tmp, align 8, !dbg !8734
  store %struct.rc_dev* %4, %struct.rc_dev** %dev, align 8, !dbg !8731
  call void @llvm.dbg.declare(metadata i32* %protocol, metadata !8737, metadata !DIExpression()), !dbg !8738
  store i32 0, i32* %protocol, align 4, !dbg !8738
  call void @llvm.dbg.declare(metadata i64* %rc, metadata !8739, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.declare(metadata i64* %allowed, metadata !8741, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8743, metadata !DIExpression()), !dbg !8744
  %5 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8745
  %lock = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %5, i32 0, i32 9, !dbg !8746
  call void @mutex_lock(%struct.mutex* %lock) #11, !dbg !8747
  %6 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8748
  %registered = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %6, i32 0, i32 39, !dbg !8750
  %7 = load i8, i8* %registered, align 8, !dbg !8750
  %tobool = trunc i8 %7 to i1, !dbg !8750
  br i1 %tobool, label %if.end, label %if.then, !dbg !8751

if.then:                                          ; preds = %do.end
  %8 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8752
  %lock1 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %8, i32 0, i32 9, !dbg !8754
  call void @mutex_unlock(%struct.mutex* %lock1) #11, !dbg !8755
  store i64 -19, i64* %retval, align 8, !dbg !8756
  br label %return, !dbg !8756

if.end:                                           ; preds = %do.end
  %9 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8757
  %allowed_wakeup_protocols = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %9, i32 0, i32 18, !dbg !8758
  %10 = load i64, i64* %allowed_wakeup_protocols, align 8, !dbg !8758
  store i64 %10, i64* %allowed, align 8, !dbg !8759
  %11 = load i8*, i8** %buf.addr, align 8, !dbg !8760
  %call = call zeroext i1 @sysfs_streq(i8* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0)) #11, !dbg !8762
  br i1 %call, label %if.end22, label %if.then2, !dbg !8763

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8764
  br label %for.cond, !dbg !8767

for.cond:                                         ; preds = %for.inc, %if.then2
  %12 = load i32, i32* %i, align 4, !dbg !8768
  %conv = sext i32 %12 to i64, !dbg !8768
  %cmp = icmp ult i64 %conv, 28, !dbg !8770
  br i1 %cmp, label %for.body, label %for.end, !dbg !8771

for.body:                                         ; preds = %for.cond
  %13 = load i64, i64* %allowed, align 8, !dbg !8772
  %14 = load i32, i32* %i, align 4, !dbg !8775
  %sh_prom = zext i32 %14 to i64, !dbg !8776
  %shl = shl i64 1, %sh_prom, !dbg !8776
  %and = and i64 %13, %shl, !dbg !8777
  %tobool4 = icmp ne i64 %and, 0, !dbg !8777
  br i1 %tobool4, label %land.lhs.true, label %if.end8, !dbg !8778

land.lhs.true:                                    ; preds = %for.body
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !8779
  %16 = load i32, i32* %i, align 4, !dbg !8780
  %idxprom = sext i32 %16 to i64, !dbg !8781
  %arrayidx = getelementptr [28 x %struct.anon.70], [28 x %struct.anon.70]* @protocols, i64 0, i64 %idxprom, !dbg !8781
  %name = getelementptr inbounds %struct.anon.70, %struct.anon.70* %arrayidx, i32 0, i32 0, !dbg !8782
  %17 = load i8*, i8** %name, align 16, !dbg !8782
  %call5 = call zeroext i1 @sysfs_streq(i8* %15, i8* %17) #11, !dbg !8783
  br i1 %call5, label %if.then7, label %if.end8, !dbg !8784

if.then7:                                         ; preds = %land.lhs.true
  %18 = load i32, i32* %i, align 4, !dbg !8785
  store i32 %18, i32* %protocol, align 4, !dbg !8787
  br label %for.end, !dbg !8788

if.end8:                                          ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !8789

for.inc:                                          ; preds = %if.end8
  %19 = load i32, i32* %i, align 4, !dbg !8790
  %inc = add i32 %19, 1, !dbg !8790
  store i32 %inc, i32* %i, align 4, !dbg !8790
  br label %for.cond, !dbg !8791, !llvm.loop !8792

for.end:                                          ; preds = %if.then7, %for.cond
  %20 = load i32, i32* %i, align 4, !dbg !8794
  %conv9 = sext i32 %20 to i64, !dbg !8794
  %cmp10 = icmp eq i64 %conv9, 28, !dbg !8796
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !8797

if.then12:                                        ; preds = %for.end
  store i64 -22, i64* %rc, align 8, !dbg !8798
  br label %out, !dbg !8800

if.end13:                                         ; preds = %for.end
  %21 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8801
  %encode_wakeup = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %21, i32 0, i32 15, !dbg !8803
  %22 = load i8, i8* %encode_wakeup, align 1, !dbg !8803
  %tobool14 = trunc i8 %22 to i1, !dbg !8803
  br i1 %tobool14, label %if.then15, label %if.end21, !dbg !8804

if.then15:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !8805, metadata !DIExpression()), !dbg !8807
  %23 = load i32, i32* %protocol, align 4, !dbg !8808
  %sh_prom16 = zext i32 %23 to i64, !dbg !8809
  %shl17 = shl i64 1, %sh_prom16, !dbg !8809
  store i64 %shl17, i64* %mask, align 8, !dbg !8807
  call void @ir_raw_load_modules(i64* %mask) #11, !dbg !8810
  %24 = load i64, i64* %mask, align 8, !dbg !8811
  %tobool18 = icmp ne i64 %24, 0, !dbg !8811
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !8813

if.then19:                                        ; preds = %if.then15
  store i64 -22, i64* %rc, align 8, !dbg !8814
  br label %out, !dbg !8816

if.end20:                                         ; preds = %if.then15
  br label %if.end21, !dbg !8817

if.end21:                                         ; preds = %if.end20, %if.end13
  br label %if.end22, !dbg !8818

if.end22:                                         ; preds = %if.end21, %if.end
  %25 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8819
  %wakeup_protocol = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %25, i32 0, i32 19, !dbg !8821
  %26 = load i32, i32* %wakeup_protocol, align 8, !dbg !8821
  %27 = load i32, i32* %protocol, align 4, !dbg !8822
  %cmp23 = icmp ne i32 %26, %27, !dbg !8823
  br i1 %cmp23, label %if.then25, label %if.else42, !dbg !8824

if.then25:                                        ; preds = %if.end22
  %28 = load i32, i32* %protocol, align 4, !dbg !8825
  %29 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8827
  %wakeup_protocol26 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %29, i32 0, i32 19, !dbg !8828
  store i32 %28, i32* %wakeup_protocol26, align 8, !dbg !8829
  %30 = load i32, i32* %protocol, align 4, !dbg !8830
  %cmp27 = icmp eq i32 %30, 19, !dbg !8832
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !8833

if.then29:                                        ; preds = %if.then25
  %31 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8834
  %scancode_wakeup_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %31, i32 0, i32 21, !dbg !8835
  %data = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %scancode_wakeup_filter, i32 0, i32 0, !dbg !8836
  store i32 -2146500608, i32* %data, align 4, !dbg !8837
  br label %if.end32, !dbg !8834

if.else:                                          ; preds = %if.then25
  %32 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8838
  %scancode_wakeup_filter30 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %32, i32 0, i32 21, !dbg !8839
  %data31 = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %scancode_wakeup_filter30, i32 0, i32 0, !dbg !8840
  store i32 0, i32* %data31, align 4, !dbg !8841
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then29
  %33 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8842
  %scancode_wakeup_filter33 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %33, i32 0, i32 21, !dbg !8843
  %mask34 = getelementptr inbounds %struct.rc_scancode_filter, %struct.rc_scancode_filter* %scancode_wakeup_filter33, i32 0, i32 1, !dbg !8844
  store i32 0, i32* %mask34, align 4, !dbg !8845
  %34 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8846
  %s_wakeup_filter = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %34, i32 0, i32 52, !dbg !8847
  %35 = load i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)*, i32 (%struct.rc_dev*, %struct.rc_scancode_filter*)** %s_wakeup_filter, align 8, !dbg !8847
  %36 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8848
  %37 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8849
  %scancode_wakeup_filter35 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %37, i32 0, i32 21, !dbg !8850
  %call36 = call i32 %35(%struct.rc_dev* %36, %struct.rc_scancode_filter* %scancode_wakeup_filter35) #11, !dbg !8846
  %conv37 = sext i32 %call36 to i64, !dbg !8846
  store i64 %conv37, i64* %rc, align 8, !dbg !8851
  %38 = load i64, i64* %rc, align 8, !dbg !8852
  %cmp38 = icmp eq i64 %38, 0, !dbg !8854
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !8855

if.then40:                                        ; preds = %if.end32
  %39 = load i64, i64* %len.addr, align 8, !dbg !8856
  store i64 %39, i64* %rc, align 8, !dbg !8857
  br label %if.end41, !dbg !8858

if.end41:                                         ; preds = %if.then40, %if.end32
  br label %if.end43, !dbg !8859

if.else42:                                        ; preds = %if.end22
  %40 = load i64, i64* %len.addr, align 8, !dbg !8860
  store i64 %40, i64* %rc, align 8, !dbg !8862
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.end41
  br label %out, !dbg !8822

out:                                              ; preds = %if.end43, %if.then19, %if.then12
  call void @llvm.dbg.label(metadata !8863), !dbg !8864
  %41 = load %struct.rc_dev*, %struct.rc_dev** %dev, align 8, !dbg !8865
  %lock44 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %41, i32 0, i32 9, !dbg !8866
  call void @mutex_unlock(%struct.mutex* %lock44) #11, !dbg !8867
  %42 = load i64, i64* %rc, align 8, !dbg !8868
  store i64 %42, i64* %retval, align 8, !dbg !8869
  br label %return, !dbg !8869

return:                                           ; preds = %out, %if.then
  %43 = load i64, i64* %retval, align 8, !dbg !8870
  ret i64 %43, !dbg !8870
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @sysfs_streq(i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ir_setkeytable(%struct.rc_dev* %dev, %struct.rc_map* %from) #0 !dbg !8871 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.rc_dev*, align 8
  %from.addr = alloca %struct.rc_map*, align 8
  %rc_map = alloca %struct.rc_map*, align 8
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !8874, metadata !DIExpression()), !dbg !8875
  store %struct.rc_map* %from, %struct.rc_map** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_map** %from.addr, metadata !8876, metadata !DIExpression()), !dbg !8877
  call void @llvm.dbg.declare(metadata %struct.rc_map** %rc_map, metadata !8878, metadata !DIExpression()), !dbg !8879
  %0 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !8880
  %rc_map1 = getelementptr inbounds %struct.rc_dev, %struct.rc_dev* %0, i32 0, i32 8, !dbg !8881
  store %struct.rc_map* %rc_map1, %struct.rc_map** %rc_map, align 8, !dbg !8879
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8882, metadata !DIExpression()), !dbg !8883
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8884, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !8886, metadata !DIExpression()), !dbg !8887
  %1 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !8888
  %2 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !8889
  %3 = load %struct.rc_map*, %struct.rc_map** %from.addr, align 8, !dbg !8890
  %name = getelementptr inbounds %struct.rc_map, %struct.rc_map* %3, i32 0, i32 5, !dbg !8891
  %4 = load i8*, i8** %name, align 8, !dbg !8891
  %5 = load %struct.rc_map*, %struct.rc_map** %from.addr, align 8, !dbg !8892
  %rc_proto = getelementptr inbounds %struct.rc_map, %struct.rc_map* %5, i32 0, i32 4, !dbg !8893
  %6 = load i32, i32* %rc_proto, align 4, !dbg !8893
  %conv = zext i32 %6 to i64, !dbg !8892
  %7 = load %struct.rc_map*, %struct.rc_map** %from.addr, align 8, !dbg !8894
  %size = getelementptr inbounds %struct.rc_map, %struct.rc_map* %7, i32 0, i32 1, !dbg !8895
  %8 = load i32, i32* %size, align 8, !dbg !8895
  %conv2 = zext i32 %8 to i64, !dbg !8894
  %call = call i32 @ir_create_table(%struct.rc_dev* %1, %struct.rc_map* %2, i8* %4, i64 %conv, i64 %conv2) #11, !dbg !8896
  store i32 %call, i32* %rc, align 4, !dbg !8897
  %9 = load i32, i32* %rc, align 4, !dbg !8898
  %tobool = icmp ne i32 %9, 0, !dbg !8898
  br i1 %tobool, label %if.then, label %if.end, !dbg !8900

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %rc, align 4, !dbg !8901
  store i32 %10, i32* %retval, align 4, !dbg !8902
  br label %return, !dbg !8902

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8903
  br label %for.cond, !dbg !8905

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %i, align 4, !dbg !8906
  %12 = load %struct.rc_map*, %struct.rc_map** %from.addr, align 8, !dbg !8908
  %size3 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %12, i32 0, i32 1, !dbg !8909
  %13 = load i32, i32* %size3, align 8, !dbg !8909
  %cmp = icmp ult i32 %11, %13, !dbg !8910
  br i1 %cmp, label %for.body, label %for.end, !dbg !8911

for.body:                                         ; preds = %for.cond
  %14 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !8912
  %15 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !8914
  %16 = load %struct.rc_map*, %struct.rc_map** %from.addr, align 8, !dbg !8915
  %scan = getelementptr inbounds %struct.rc_map, %struct.rc_map* %16, i32 0, i32 0, !dbg !8916
  %17 = load %struct.rc_map_table*, %struct.rc_map_table** %scan, align 8, !dbg !8916
  %18 = load i32, i32* %i, align 4, !dbg !8917
  %idxprom = zext i32 %18 to i64, !dbg !8915
  %arrayidx = getelementptr %struct.rc_map_table, %struct.rc_map_table* %17, i64 %idxprom, !dbg !8915
  %scancode = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %arrayidx, i32 0, i32 0, !dbg !8918
  %19 = load i64, i64* %scancode, align 8, !dbg !8918
  %call5 = call i32 @ir_establish_scancode(%struct.rc_dev* %14, %struct.rc_map* %15, i64 %19, i1 zeroext false) #11, !dbg !8919
  store i32 %call5, i32* %index, align 4, !dbg !8920
  %20 = load i32, i32* %index, align 4, !dbg !8921
  %21 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !8923
  %len = getelementptr inbounds %struct.rc_map, %struct.rc_map* %21, i32 0, i32 2, !dbg !8924
  %22 = load i32, i32* %len, align 4, !dbg !8924
  %cmp6 = icmp uge i32 %20, %22, !dbg !8925
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !8926

if.then8:                                         ; preds = %for.body
  store i32 -12, i32* %rc, align 4, !dbg !8927
  br label %for.end, !dbg !8929

if.end9:                                          ; preds = %for.body
  %23 = load %struct.rc_dev*, %struct.rc_dev** %dev.addr, align 8, !dbg !8930
  %24 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !8931
  %25 = load i32, i32* %index, align 4, !dbg !8932
  %26 = load %struct.rc_map*, %struct.rc_map** %from.addr, align 8, !dbg !8933
  %scan10 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %26, i32 0, i32 0, !dbg !8934
  %27 = load %struct.rc_map_table*, %struct.rc_map_table** %scan10, align 8, !dbg !8934
  %28 = load i32, i32* %i, align 4, !dbg !8935
  %idxprom11 = zext i32 %28 to i64, !dbg !8933
  %arrayidx12 = getelementptr %struct.rc_map_table, %struct.rc_map_table* %27, i64 %idxprom11, !dbg !8933
  %keycode = getelementptr inbounds %struct.rc_map_table, %struct.rc_map_table* %arrayidx12, i32 0, i32 1, !dbg !8936
  %29 = load i32, i32* %keycode, align 8, !dbg !8936
  %call13 = call i32 @ir_update_mapping(%struct.rc_dev* %23, %struct.rc_map* %24, i32 %25, i32 %29) #11, !dbg !8937
  br label %for.inc, !dbg !8938

for.inc:                                          ; preds = %if.end9
  %30 = load i32, i32* %i, align 4, !dbg !8939
  %inc = add i32 %30, 1, !dbg !8939
  store i32 %inc, i32* %i, align 4, !dbg !8939
  br label %for.cond, !dbg !8940, !llvm.loop !8941

for.end:                                          ; preds = %if.then8, %for.cond
  %31 = load i32, i32* %rc, align 4, !dbg !8943
  %tobool14 = icmp ne i32 %31, 0, !dbg !8943
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !8945

if.then15:                                        ; preds = %for.end
  %32 = load %struct.rc_map*, %struct.rc_map** %rc_map, align 8, !dbg !8946
  call void @ir_free_table(%struct.rc_map* %32) #11, !dbg !8947
  br label %if.end16, !dbg !8947

if.end16:                                         ; preds = %if.then15, %for.end
  %33 = load i32, i32* %rc, align 4, !dbg !8948
  store i32 %33, i32* %retval, align 4, !dbg !8949
  br label %return, !dbg !8949

return:                                           ; preds = %if.end16, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !8950
  ret i32 %34, !dbg !8950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !8951 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8953, metadata !DIExpression()), !dbg !8955
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8957, metadata !DIExpression()), !dbg !8958
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8959, metadata !DIExpression()), !dbg !8961
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8963, metadata !DIExpression()), !dbg !8964
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8965, metadata !DIExpression()), !dbg !8966
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8967, metadata !DIExpression()), !dbg !8968
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8969
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8970
  %div = sdiv i64 %1, 64, !dbg !8970
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8971
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8969
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8972
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8973
  %conv.i = trunc i64 %4 to i32, !dbg !8973
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #13, !dbg !8974
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8975
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8975
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #13, !dbg !8975
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8976
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8977
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !8978
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !8980
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !8981

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !8982
  %12 = bitcast i64* %11 to i8*, !dbg !8982
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8982
  %shr.i = ashr i64 %13, 3, !dbg !8982
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !8982
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !8984
  %and.i = and i64 %14, 7, !dbg !8984
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !8984
  %shl.i = shl i32 1, %sh_prom.i, !dbg !8984
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !8985, !srcloc !8986
  br label %arch_set_bit.exit, !dbg !8987

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !8988
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !8990
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !8991, !srcloc !8992
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !8993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ir_open(%struct.input_dev* %idev) #0 !dbg !8994 {
entry:
  %idev.addr = alloca %struct.input_dev*, align 8
  %rdev = alloca %struct.rc_dev*, align 8
  store %struct.input_dev* %idev, %struct.input_dev** %idev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %idev.addr, metadata !8995, metadata !DIExpression()), !dbg !8996
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %rdev, metadata !8997, metadata !DIExpression()), !dbg !8998
  %0 = load %struct.input_dev*, %struct.input_dev** %idev.addr, align 8, !dbg !8999
  %call = call i8* @input_get_drvdata(%struct.input_dev* %0) #11, !dbg !9000
  %1 = bitcast i8* %call to %struct.rc_dev*, !dbg !9000
  store %struct.rc_dev* %1, %struct.rc_dev** %rdev, align 8, !dbg !8998
  %2 = load %struct.rc_dev*, %struct.rc_dev** %rdev, align 8, !dbg !9001
  %call1 = call i32 @rc_open(%struct.rc_dev* %2) #11, !dbg !9002
  ret i32 %call1, !dbg !9003
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ir_close(%struct.input_dev* %idev) #0 !dbg !9004 {
entry:
  %idev.addr = alloca %struct.input_dev*, align 8
  %rdev = alloca %struct.rc_dev*, align 8
  store %struct.input_dev* %idev, %struct.input_dev** %idev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.input_dev** %idev.addr, metadata !9005, metadata !DIExpression()), !dbg !9006
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %rdev, metadata !9007, metadata !DIExpression()), !dbg !9008
  %0 = load %struct.input_dev*, %struct.input_dev** %idev.addr, align 8, !dbg !9009
  %call = call i8* @input_get_drvdata(%struct.input_dev* %0) #11, !dbg !9010
  %1 = bitcast i8* %call to %struct.rc_dev*, !dbg !9010
  store %struct.rc_dev* %1, %struct.rc_dev** %rdev, align 8, !dbg !9008
  %2 = load %struct.rc_dev*, %struct.rc_dev** %rdev, align 8, !dbg !9011
  call void @rc_close(%struct.rc_dev* %2) #11, !dbg !9012
  ret void, !dbg !9013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ir_create_table(%struct.rc_dev* %dev, %struct.rc_map* %rc_map, i8* %name, i64 %rc_proto, i64 %size) #0 !dbg !9014 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5538, metadata !DIExpression()), !dbg !9017
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5548, metadata !DIExpression()), !dbg !9020
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5550, metadata !DIExpression()), !dbg !9021
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5552, metadata !DIExpression()), !dbg !9022
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5554, metadata !DIExpression()), !dbg !9023
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5560, metadata !DIExpression()), !dbg !9025
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5566, metadata !DIExpression()), !dbg !9027
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5575, metadata !DIExpression()), !dbg !9030
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5577, metadata !DIExpression()), !dbg !9031
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5579, metadata !DIExpression()), !dbg !9032
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5581, metadata !DIExpression()), !dbg !9033
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5583, metadata !DIExpression()), !dbg !9034
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5585, metadata !DIExpression()), !dbg !9035
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5587, metadata !DIExpression()), !dbg !9036
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5589, metadata !DIExpression()), !dbg !9037
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.rc_dev*, align 8
  %rc_map.addr = alloca %struct.rc_map*, align 8
  %name.addr = alloca i8*, align 8
  %rc_proto.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  store %struct.rc_dev* %dev, %struct.rc_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_dev** %dev.addr, metadata !9038, metadata !DIExpression()), !dbg !9039
  store %struct.rc_map* %rc_map, %struct.rc_map** %rc_map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rc_map** %rc_map.addr, metadata !9040, metadata !DIExpression()), !dbg !9041
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9042, metadata !DIExpression()), !dbg !9043
  store i64 %rc_proto, i64* %rc_proto.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rc_proto.addr, metadata !9044, metadata !DIExpression()), !dbg !9045
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9046, metadata !DIExpression()), !dbg !9047
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9048
  %call = call noalias i8* @kstrdup(i8* %0, i32 3264) #11, !dbg !9049
  %1 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !9050
  %name1 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %1, i32 0, i32 5, !dbg !9051
  store i8* %call, i8** %name1, align 8, !dbg !9052
  %2 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !9053
  %name2 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %2, i32 0, i32 5, !dbg !9055
  %3 = load i8*, i8** %name2, align 8, !dbg !9055
  %tobool = icmp ne i8* %3, null, !dbg !9053
  br i1 %tobool, label %if.end, label %if.then, !dbg !9056

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9057
  br label %return, !dbg !9057

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %rc_proto.addr, align 8, !dbg !9058
  %conv = trunc i64 %4 to i32, !dbg !9058
  %5 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !9059
  %rc_proto3 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %5, i32 0, i32 4, !dbg !9060
  store i32 %conv, i32* %rc_proto3, align 4, !dbg !9061
  %6 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul = mul i64 %6, 16, !dbg !9062
  %7 = call i1 @llvm.is.constant.i64(i64 %mul), !dbg !9062
  br i1 %7, label %cond.true, label %cond.false521, !dbg !9062

cond.true:                                        ; preds = %if.end
  %8 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul4 = mul i64 %8, 16, !dbg !9062
  %cmp = icmp eq i64 %mul4, 1, !dbg !9062
  br i1 %cmp, label %cond.true6, label %cond.false, !dbg !9062

cond.true6:                                       ; preds = %cond.true
  br label %cond.end519, !dbg !9062

cond.false:                                       ; preds = %cond.true
  %9 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul7 = mul i64 %9, 16, !dbg !9062
  %sub = sub i64 %mul7, 1, !dbg !9062
  %10 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9062
  br i1 %10, label %cond.true8, label %cond.false513, !dbg !9062

cond.true8:                                       ; preds = %cond.false
  %11 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul9 = mul i64 %11, 16, !dbg !9062
  %sub10 = sub i64 %mul9, 1, !dbg !9062
  %12 = call i1 @llvm.is.constant.i64(i64 %sub10), !dbg !9062
  br i1 %12, label %cond.true11, label %cond.false510, !dbg !9062

cond.true11:                                      ; preds = %cond.true8
  %13 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul12 = mul i64 %13, 16, !dbg !9062
  %sub13 = sub i64 %mul12, 1, !dbg !9062
  %cmp14 = icmp ult i64 %sub13, 2, !dbg !9062
  br i1 %cmp14, label %cond.true16, label %cond.false17, !dbg !9062

cond.true16:                                      ; preds = %cond.true11
  br label %cond.end508, !dbg !9062

cond.false17:                                     ; preds = %cond.true11
  %14 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul18 = mul i64 %14, 16, !dbg !9062
  %sub19 = sub i64 %mul18, 1, !dbg !9062
  %and = and i64 %sub19, -9223372036854775808, !dbg !9062
  %tobool20 = icmp ne i64 %and, 0, !dbg !9062
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9062

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end506, !dbg !9062

cond.false22:                                     ; preds = %cond.false17
  %15 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul23 = mul i64 %15, 16, !dbg !9062
  %sub24 = sub i64 %mul23, 1, !dbg !9062
  %and25 = and i64 %sub24, 4611686018427387904, !dbg !9062
  %tobool26 = icmp ne i64 %and25, 0, !dbg !9062
  br i1 %tobool26, label %cond.true27, label %cond.false28, !dbg !9062

cond.true27:                                      ; preds = %cond.false22
  br label %cond.end504, !dbg !9062

cond.false28:                                     ; preds = %cond.false22
  %16 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul29 = mul i64 %16, 16, !dbg !9062
  %sub30 = sub i64 %mul29, 1, !dbg !9062
  %and31 = and i64 %sub30, 2305843009213693952, !dbg !9062
  %tobool32 = icmp ne i64 %and31, 0, !dbg !9062
  br i1 %tobool32, label %cond.true33, label %cond.false34, !dbg !9062

cond.true33:                                      ; preds = %cond.false28
  br label %cond.end502, !dbg !9062

cond.false34:                                     ; preds = %cond.false28
  %17 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul35 = mul i64 %17, 16, !dbg !9062
  %sub36 = sub i64 %mul35, 1, !dbg !9062
  %and37 = and i64 %sub36, 1152921504606846976, !dbg !9062
  %tobool38 = icmp ne i64 %and37, 0, !dbg !9062
  br i1 %tobool38, label %cond.true39, label %cond.false40, !dbg !9062

cond.true39:                                      ; preds = %cond.false34
  br label %cond.end500, !dbg !9062

cond.false40:                                     ; preds = %cond.false34
  %18 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul41 = mul i64 %18, 16, !dbg !9062
  %sub42 = sub i64 %mul41, 1, !dbg !9062
  %and43 = and i64 %sub42, 576460752303423488, !dbg !9062
  %tobool44 = icmp ne i64 %and43, 0, !dbg !9062
  br i1 %tobool44, label %cond.true45, label %cond.false46, !dbg !9062

cond.true45:                                      ; preds = %cond.false40
  br label %cond.end498, !dbg !9062

cond.false46:                                     ; preds = %cond.false40
  %19 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul47 = mul i64 %19, 16, !dbg !9062
  %sub48 = sub i64 %mul47, 1, !dbg !9062
  %and49 = and i64 %sub48, 288230376151711744, !dbg !9062
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9062
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9062

cond.true51:                                      ; preds = %cond.false46
  br label %cond.end496, !dbg !9062

cond.false52:                                     ; preds = %cond.false46
  %20 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul53 = mul i64 %20, 16, !dbg !9062
  %sub54 = sub i64 %mul53, 1, !dbg !9062
  %and55 = and i64 %sub54, 144115188075855872, !dbg !9062
  %tobool56 = icmp ne i64 %and55, 0, !dbg !9062
  br i1 %tobool56, label %cond.true57, label %cond.false58, !dbg !9062

cond.true57:                                      ; preds = %cond.false52
  br label %cond.end494, !dbg !9062

cond.false58:                                     ; preds = %cond.false52
  %21 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul59 = mul i64 %21, 16, !dbg !9062
  %sub60 = sub i64 %mul59, 1, !dbg !9062
  %and61 = and i64 %sub60, 72057594037927936, !dbg !9062
  %tobool62 = icmp ne i64 %and61, 0, !dbg !9062
  br i1 %tobool62, label %cond.true63, label %cond.false64, !dbg !9062

cond.true63:                                      ; preds = %cond.false58
  br label %cond.end492, !dbg !9062

cond.false64:                                     ; preds = %cond.false58
  %22 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul65 = mul i64 %22, 16, !dbg !9062
  %sub66 = sub i64 %mul65, 1, !dbg !9062
  %and67 = and i64 %sub66, 36028797018963968, !dbg !9062
  %tobool68 = icmp ne i64 %and67, 0, !dbg !9062
  br i1 %tobool68, label %cond.true69, label %cond.false70, !dbg !9062

cond.true69:                                      ; preds = %cond.false64
  br label %cond.end490, !dbg !9062

cond.false70:                                     ; preds = %cond.false64
  %23 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul71 = mul i64 %23, 16, !dbg !9062
  %sub72 = sub i64 %mul71, 1, !dbg !9062
  %and73 = and i64 %sub72, 18014398509481984, !dbg !9062
  %tobool74 = icmp ne i64 %and73, 0, !dbg !9062
  br i1 %tobool74, label %cond.true75, label %cond.false76, !dbg !9062

cond.true75:                                      ; preds = %cond.false70
  br label %cond.end488, !dbg !9062

cond.false76:                                     ; preds = %cond.false70
  %24 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul77 = mul i64 %24, 16, !dbg !9062
  %sub78 = sub i64 %mul77, 1, !dbg !9062
  %and79 = and i64 %sub78, 9007199254740992, !dbg !9062
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9062
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9062

cond.true81:                                      ; preds = %cond.false76
  br label %cond.end486, !dbg !9062

cond.false82:                                     ; preds = %cond.false76
  %25 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul83 = mul i64 %25, 16, !dbg !9062
  %sub84 = sub i64 %mul83, 1, !dbg !9062
  %and85 = and i64 %sub84, 4503599627370496, !dbg !9062
  %tobool86 = icmp ne i64 %and85, 0, !dbg !9062
  br i1 %tobool86, label %cond.true87, label %cond.false88, !dbg !9062

cond.true87:                                      ; preds = %cond.false82
  br label %cond.end484, !dbg !9062

cond.false88:                                     ; preds = %cond.false82
  %26 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul89 = mul i64 %26, 16, !dbg !9062
  %sub90 = sub i64 %mul89, 1, !dbg !9062
  %and91 = and i64 %sub90, 2251799813685248, !dbg !9062
  %tobool92 = icmp ne i64 %and91, 0, !dbg !9062
  br i1 %tobool92, label %cond.true93, label %cond.false94, !dbg !9062

cond.true93:                                      ; preds = %cond.false88
  br label %cond.end482, !dbg !9062

cond.false94:                                     ; preds = %cond.false88
  %27 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul95 = mul i64 %27, 16, !dbg !9062
  %sub96 = sub i64 %mul95, 1, !dbg !9062
  %and97 = and i64 %sub96, 1125899906842624, !dbg !9062
  %tobool98 = icmp ne i64 %and97, 0, !dbg !9062
  br i1 %tobool98, label %cond.true99, label %cond.false100, !dbg !9062

cond.true99:                                      ; preds = %cond.false94
  br label %cond.end480, !dbg !9062

cond.false100:                                    ; preds = %cond.false94
  %28 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul101 = mul i64 %28, 16, !dbg !9062
  %sub102 = sub i64 %mul101, 1, !dbg !9062
  %and103 = and i64 %sub102, 562949953421312, !dbg !9062
  %tobool104 = icmp ne i64 %and103, 0, !dbg !9062
  br i1 %tobool104, label %cond.true105, label %cond.false106, !dbg !9062

cond.true105:                                     ; preds = %cond.false100
  br label %cond.end478, !dbg !9062

cond.false106:                                    ; preds = %cond.false100
  %29 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul107 = mul i64 %29, 16, !dbg !9062
  %sub108 = sub i64 %mul107, 1, !dbg !9062
  %and109 = and i64 %sub108, 281474976710656, !dbg !9062
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9062
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9062

cond.true111:                                     ; preds = %cond.false106
  br label %cond.end476, !dbg !9062

cond.false112:                                    ; preds = %cond.false106
  %30 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul113 = mul i64 %30, 16, !dbg !9062
  %sub114 = sub i64 %mul113, 1, !dbg !9062
  %and115 = and i64 %sub114, 140737488355328, !dbg !9062
  %tobool116 = icmp ne i64 %and115, 0, !dbg !9062
  br i1 %tobool116, label %cond.true117, label %cond.false118, !dbg !9062

cond.true117:                                     ; preds = %cond.false112
  br label %cond.end474, !dbg !9062

cond.false118:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul119 = mul i64 %31, 16, !dbg !9062
  %sub120 = sub i64 %mul119, 1, !dbg !9062
  %and121 = and i64 %sub120, 70368744177664, !dbg !9062
  %tobool122 = icmp ne i64 %and121, 0, !dbg !9062
  br i1 %tobool122, label %cond.true123, label %cond.false124, !dbg !9062

cond.true123:                                     ; preds = %cond.false118
  br label %cond.end472, !dbg !9062

cond.false124:                                    ; preds = %cond.false118
  %32 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul125 = mul i64 %32, 16, !dbg !9062
  %sub126 = sub i64 %mul125, 1, !dbg !9062
  %and127 = and i64 %sub126, 35184372088832, !dbg !9062
  %tobool128 = icmp ne i64 %and127, 0, !dbg !9062
  br i1 %tobool128, label %cond.true129, label %cond.false130, !dbg !9062

cond.true129:                                     ; preds = %cond.false124
  br label %cond.end470, !dbg !9062

cond.false130:                                    ; preds = %cond.false124
  %33 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul131 = mul i64 %33, 16, !dbg !9062
  %sub132 = sub i64 %mul131, 1, !dbg !9062
  %and133 = and i64 %sub132, 17592186044416, !dbg !9062
  %tobool134 = icmp ne i64 %and133, 0, !dbg !9062
  br i1 %tobool134, label %cond.true135, label %cond.false136, !dbg !9062

cond.true135:                                     ; preds = %cond.false130
  br label %cond.end468, !dbg !9062

cond.false136:                                    ; preds = %cond.false130
  %34 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul137 = mul i64 %34, 16, !dbg !9062
  %sub138 = sub i64 %mul137, 1, !dbg !9062
  %and139 = and i64 %sub138, 8796093022208, !dbg !9062
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9062
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9062

cond.true141:                                     ; preds = %cond.false136
  br label %cond.end466, !dbg !9062

cond.false142:                                    ; preds = %cond.false136
  %35 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul143 = mul i64 %35, 16, !dbg !9062
  %sub144 = sub i64 %mul143, 1, !dbg !9062
  %and145 = and i64 %sub144, 4398046511104, !dbg !9062
  %tobool146 = icmp ne i64 %and145, 0, !dbg !9062
  br i1 %tobool146, label %cond.true147, label %cond.false148, !dbg !9062

cond.true147:                                     ; preds = %cond.false142
  br label %cond.end464, !dbg !9062

cond.false148:                                    ; preds = %cond.false142
  %36 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul149 = mul i64 %36, 16, !dbg !9062
  %sub150 = sub i64 %mul149, 1, !dbg !9062
  %and151 = and i64 %sub150, 2199023255552, !dbg !9062
  %tobool152 = icmp ne i64 %and151, 0, !dbg !9062
  br i1 %tobool152, label %cond.true153, label %cond.false154, !dbg !9062

cond.true153:                                     ; preds = %cond.false148
  br label %cond.end462, !dbg !9062

cond.false154:                                    ; preds = %cond.false148
  %37 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul155 = mul i64 %37, 16, !dbg !9062
  %sub156 = sub i64 %mul155, 1, !dbg !9062
  %and157 = and i64 %sub156, 1099511627776, !dbg !9062
  %tobool158 = icmp ne i64 %and157, 0, !dbg !9062
  br i1 %tobool158, label %cond.true159, label %cond.false160, !dbg !9062

cond.true159:                                     ; preds = %cond.false154
  br label %cond.end460, !dbg !9062

cond.false160:                                    ; preds = %cond.false154
  %38 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul161 = mul i64 %38, 16, !dbg !9062
  %sub162 = sub i64 %mul161, 1, !dbg !9062
  %and163 = and i64 %sub162, 549755813888, !dbg !9062
  %tobool164 = icmp ne i64 %and163, 0, !dbg !9062
  br i1 %tobool164, label %cond.true165, label %cond.false166, !dbg !9062

cond.true165:                                     ; preds = %cond.false160
  br label %cond.end458, !dbg !9062

cond.false166:                                    ; preds = %cond.false160
  %39 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul167 = mul i64 %39, 16, !dbg !9062
  %sub168 = sub i64 %mul167, 1, !dbg !9062
  %and169 = and i64 %sub168, 274877906944, !dbg !9062
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9062
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9062

cond.true171:                                     ; preds = %cond.false166
  br label %cond.end456, !dbg !9062

cond.false172:                                    ; preds = %cond.false166
  %40 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul173 = mul i64 %40, 16, !dbg !9062
  %sub174 = sub i64 %mul173, 1, !dbg !9062
  %and175 = and i64 %sub174, 137438953472, !dbg !9062
  %tobool176 = icmp ne i64 %and175, 0, !dbg !9062
  br i1 %tobool176, label %cond.true177, label %cond.false178, !dbg !9062

cond.true177:                                     ; preds = %cond.false172
  br label %cond.end454, !dbg !9062

cond.false178:                                    ; preds = %cond.false172
  %41 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul179 = mul i64 %41, 16, !dbg !9062
  %sub180 = sub i64 %mul179, 1, !dbg !9062
  %and181 = and i64 %sub180, 68719476736, !dbg !9062
  %tobool182 = icmp ne i64 %and181, 0, !dbg !9062
  br i1 %tobool182, label %cond.true183, label %cond.false184, !dbg !9062

cond.true183:                                     ; preds = %cond.false178
  br label %cond.end452, !dbg !9062

cond.false184:                                    ; preds = %cond.false178
  %42 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul185 = mul i64 %42, 16, !dbg !9062
  %sub186 = sub i64 %mul185, 1, !dbg !9062
  %and187 = and i64 %sub186, 34359738368, !dbg !9062
  %tobool188 = icmp ne i64 %and187, 0, !dbg !9062
  br i1 %tobool188, label %cond.true189, label %cond.false190, !dbg !9062

cond.true189:                                     ; preds = %cond.false184
  br label %cond.end450, !dbg !9062

cond.false190:                                    ; preds = %cond.false184
  %43 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul191 = mul i64 %43, 16, !dbg !9062
  %sub192 = sub i64 %mul191, 1, !dbg !9062
  %and193 = and i64 %sub192, 17179869184, !dbg !9062
  %tobool194 = icmp ne i64 %and193, 0, !dbg !9062
  br i1 %tobool194, label %cond.true195, label %cond.false196, !dbg !9062

cond.true195:                                     ; preds = %cond.false190
  br label %cond.end448, !dbg !9062

cond.false196:                                    ; preds = %cond.false190
  %44 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul197 = mul i64 %44, 16, !dbg !9062
  %sub198 = sub i64 %mul197, 1, !dbg !9062
  %and199 = and i64 %sub198, 8589934592, !dbg !9062
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9062
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9062

cond.true201:                                     ; preds = %cond.false196
  br label %cond.end446, !dbg !9062

cond.false202:                                    ; preds = %cond.false196
  %45 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul203 = mul i64 %45, 16, !dbg !9062
  %sub204 = sub i64 %mul203, 1, !dbg !9062
  %and205 = and i64 %sub204, 4294967296, !dbg !9062
  %tobool206 = icmp ne i64 %and205, 0, !dbg !9062
  br i1 %tobool206, label %cond.true207, label %cond.false208, !dbg !9062

cond.true207:                                     ; preds = %cond.false202
  br label %cond.end444, !dbg !9062

cond.false208:                                    ; preds = %cond.false202
  %46 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul209 = mul i64 %46, 16, !dbg !9062
  %sub210 = sub i64 %mul209, 1, !dbg !9062
  %and211 = and i64 %sub210, 2147483648, !dbg !9062
  %tobool212 = icmp ne i64 %and211, 0, !dbg !9062
  br i1 %tobool212, label %cond.true213, label %cond.false214, !dbg !9062

cond.true213:                                     ; preds = %cond.false208
  br label %cond.end442, !dbg !9062

cond.false214:                                    ; preds = %cond.false208
  %47 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul215 = mul i64 %47, 16, !dbg !9062
  %sub216 = sub i64 %mul215, 1, !dbg !9062
  %and217 = and i64 %sub216, 1073741824, !dbg !9062
  %tobool218 = icmp ne i64 %and217, 0, !dbg !9062
  br i1 %tobool218, label %cond.true219, label %cond.false220, !dbg !9062

cond.true219:                                     ; preds = %cond.false214
  br label %cond.end440, !dbg !9062

cond.false220:                                    ; preds = %cond.false214
  %48 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul221 = mul i64 %48, 16, !dbg !9062
  %sub222 = sub i64 %mul221, 1, !dbg !9062
  %and223 = and i64 %sub222, 536870912, !dbg !9062
  %tobool224 = icmp ne i64 %and223, 0, !dbg !9062
  br i1 %tobool224, label %cond.true225, label %cond.false226, !dbg !9062

cond.true225:                                     ; preds = %cond.false220
  br label %cond.end438, !dbg !9062

cond.false226:                                    ; preds = %cond.false220
  %49 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul227 = mul i64 %49, 16, !dbg !9062
  %sub228 = sub i64 %mul227, 1, !dbg !9062
  %and229 = and i64 %sub228, 268435456, !dbg !9062
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9062
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9062

cond.true231:                                     ; preds = %cond.false226
  br label %cond.end436, !dbg !9062

cond.false232:                                    ; preds = %cond.false226
  %50 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul233 = mul i64 %50, 16, !dbg !9062
  %sub234 = sub i64 %mul233, 1, !dbg !9062
  %and235 = and i64 %sub234, 134217728, !dbg !9062
  %tobool236 = icmp ne i64 %and235, 0, !dbg !9062
  br i1 %tobool236, label %cond.true237, label %cond.false238, !dbg !9062

cond.true237:                                     ; preds = %cond.false232
  br label %cond.end434, !dbg !9062

cond.false238:                                    ; preds = %cond.false232
  %51 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul239 = mul i64 %51, 16, !dbg !9062
  %sub240 = sub i64 %mul239, 1, !dbg !9062
  %and241 = and i64 %sub240, 67108864, !dbg !9062
  %tobool242 = icmp ne i64 %and241, 0, !dbg !9062
  br i1 %tobool242, label %cond.true243, label %cond.false244, !dbg !9062

cond.true243:                                     ; preds = %cond.false238
  br label %cond.end432, !dbg !9062

cond.false244:                                    ; preds = %cond.false238
  %52 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul245 = mul i64 %52, 16, !dbg !9062
  %sub246 = sub i64 %mul245, 1, !dbg !9062
  %and247 = and i64 %sub246, 33554432, !dbg !9062
  %tobool248 = icmp ne i64 %and247, 0, !dbg !9062
  br i1 %tobool248, label %cond.true249, label %cond.false250, !dbg !9062

cond.true249:                                     ; preds = %cond.false244
  br label %cond.end430, !dbg !9062

cond.false250:                                    ; preds = %cond.false244
  %53 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul251 = mul i64 %53, 16, !dbg !9062
  %sub252 = sub i64 %mul251, 1, !dbg !9062
  %and253 = and i64 %sub252, 16777216, !dbg !9062
  %tobool254 = icmp ne i64 %and253, 0, !dbg !9062
  br i1 %tobool254, label %cond.true255, label %cond.false256, !dbg !9062

cond.true255:                                     ; preds = %cond.false250
  br label %cond.end428, !dbg !9062

cond.false256:                                    ; preds = %cond.false250
  %54 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul257 = mul i64 %54, 16, !dbg !9062
  %sub258 = sub i64 %mul257, 1, !dbg !9062
  %and259 = and i64 %sub258, 8388608, !dbg !9062
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9062
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9062

cond.true261:                                     ; preds = %cond.false256
  br label %cond.end426, !dbg !9062

cond.false262:                                    ; preds = %cond.false256
  %55 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul263 = mul i64 %55, 16, !dbg !9062
  %sub264 = sub i64 %mul263, 1, !dbg !9062
  %and265 = and i64 %sub264, 4194304, !dbg !9062
  %tobool266 = icmp ne i64 %and265, 0, !dbg !9062
  br i1 %tobool266, label %cond.true267, label %cond.false268, !dbg !9062

cond.true267:                                     ; preds = %cond.false262
  br label %cond.end424, !dbg !9062

cond.false268:                                    ; preds = %cond.false262
  %56 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul269 = mul i64 %56, 16, !dbg !9062
  %sub270 = sub i64 %mul269, 1, !dbg !9062
  %and271 = and i64 %sub270, 2097152, !dbg !9062
  %tobool272 = icmp ne i64 %and271, 0, !dbg !9062
  br i1 %tobool272, label %cond.true273, label %cond.false274, !dbg !9062

cond.true273:                                     ; preds = %cond.false268
  br label %cond.end422, !dbg !9062

cond.false274:                                    ; preds = %cond.false268
  %57 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul275 = mul i64 %57, 16, !dbg !9062
  %sub276 = sub i64 %mul275, 1, !dbg !9062
  %and277 = and i64 %sub276, 1048576, !dbg !9062
  %tobool278 = icmp ne i64 %and277, 0, !dbg !9062
  br i1 %tobool278, label %cond.true279, label %cond.false280, !dbg !9062

cond.true279:                                     ; preds = %cond.false274
  br label %cond.end420, !dbg !9062

cond.false280:                                    ; preds = %cond.false274
  %58 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul281 = mul i64 %58, 16, !dbg !9062
  %sub282 = sub i64 %mul281, 1, !dbg !9062
  %and283 = and i64 %sub282, 524288, !dbg !9062
  %tobool284 = icmp ne i64 %and283, 0, !dbg !9062
  br i1 %tobool284, label %cond.true285, label %cond.false286, !dbg !9062

cond.true285:                                     ; preds = %cond.false280
  br label %cond.end418, !dbg !9062

cond.false286:                                    ; preds = %cond.false280
  %59 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul287 = mul i64 %59, 16, !dbg !9062
  %sub288 = sub i64 %mul287, 1, !dbg !9062
  %and289 = and i64 %sub288, 262144, !dbg !9062
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9062
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9062

cond.true291:                                     ; preds = %cond.false286
  br label %cond.end416, !dbg !9062

cond.false292:                                    ; preds = %cond.false286
  %60 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul293 = mul i64 %60, 16, !dbg !9062
  %sub294 = sub i64 %mul293, 1, !dbg !9062
  %and295 = and i64 %sub294, 131072, !dbg !9062
  %tobool296 = icmp ne i64 %and295, 0, !dbg !9062
  br i1 %tobool296, label %cond.true297, label %cond.false298, !dbg !9062

cond.true297:                                     ; preds = %cond.false292
  br label %cond.end414, !dbg !9062

cond.false298:                                    ; preds = %cond.false292
  %61 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul299 = mul i64 %61, 16, !dbg !9062
  %sub300 = sub i64 %mul299, 1, !dbg !9062
  %and301 = and i64 %sub300, 65536, !dbg !9062
  %tobool302 = icmp ne i64 %and301, 0, !dbg !9062
  br i1 %tobool302, label %cond.true303, label %cond.false304, !dbg !9062

cond.true303:                                     ; preds = %cond.false298
  br label %cond.end412, !dbg !9062

cond.false304:                                    ; preds = %cond.false298
  %62 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul305 = mul i64 %62, 16, !dbg !9062
  %sub306 = sub i64 %mul305, 1, !dbg !9062
  %and307 = and i64 %sub306, 32768, !dbg !9062
  %tobool308 = icmp ne i64 %and307, 0, !dbg !9062
  br i1 %tobool308, label %cond.true309, label %cond.false310, !dbg !9062

cond.true309:                                     ; preds = %cond.false304
  br label %cond.end410, !dbg !9062

cond.false310:                                    ; preds = %cond.false304
  %63 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul311 = mul i64 %63, 16, !dbg !9062
  %sub312 = sub i64 %mul311, 1, !dbg !9062
  %and313 = and i64 %sub312, 16384, !dbg !9062
  %tobool314 = icmp ne i64 %and313, 0, !dbg !9062
  br i1 %tobool314, label %cond.true315, label %cond.false316, !dbg !9062

cond.true315:                                     ; preds = %cond.false310
  br label %cond.end408, !dbg !9062

cond.false316:                                    ; preds = %cond.false310
  %64 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul317 = mul i64 %64, 16, !dbg !9062
  %sub318 = sub i64 %mul317, 1, !dbg !9062
  %and319 = and i64 %sub318, 8192, !dbg !9062
  %tobool320 = icmp ne i64 %and319, 0, !dbg !9062
  br i1 %tobool320, label %cond.true321, label %cond.false322, !dbg !9062

cond.true321:                                     ; preds = %cond.false316
  br label %cond.end406, !dbg !9062

cond.false322:                                    ; preds = %cond.false316
  %65 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul323 = mul i64 %65, 16, !dbg !9062
  %sub324 = sub i64 %mul323, 1, !dbg !9062
  %and325 = and i64 %sub324, 4096, !dbg !9062
  %tobool326 = icmp ne i64 %and325, 0, !dbg !9062
  br i1 %tobool326, label %cond.true327, label %cond.false328, !dbg !9062

cond.true327:                                     ; preds = %cond.false322
  br label %cond.end404, !dbg !9062

cond.false328:                                    ; preds = %cond.false322
  %66 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul329 = mul i64 %66, 16, !dbg !9062
  %sub330 = sub i64 %mul329, 1, !dbg !9062
  %and331 = and i64 %sub330, 2048, !dbg !9062
  %tobool332 = icmp ne i64 %and331, 0, !dbg !9062
  br i1 %tobool332, label %cond.true333, label %cond.false334, !dbg !9062

cond.true333:                                     ; preds = %cond.false328
  br label %cond.end402, !dbg !9062

cond.false334:                                    ; preds = %cond.false328
  %67 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul335 = mul i64 %67, 16, !dbg !9062
  %sub336 = sub i64 %mul335, 1, !dbg !9062
  %and337 = and i64 %sub336, 1024, !dbg !9062
  %tobool338 = icmp ne i64 %and337, 0, !dbg !9062
  br i1 %tobool338, label %cond.true339, label %cond.false340, !dbg !9062

cond.true339:                                     ; preds = %cond.false334
  br label %cond.end400, !dbg !9062

cond.false340:                                    ; preds = %cond.false334
  %68 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul341 = mul i64 %68, 16, !dbg !9062
  %sub342 = sub i64 %mul341, 1, !dbg !9062
  %and343 = and i64 %sub342, 512, !dbg !9062
  %tobool344 = icmp ne i64 %and343, 0, !dbg !9062
  br i1 %tobool344, label %cond.true345, label %cond.false346, !dbg !9062

cond.true345:                                     ; preds = %cond.false340
  br label %cond.end398, !dbg !9062

cond.false346:                                    ; preds = %cond.false340
  %69 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul347 = mul i64 %69, 16, !dbg !9062
  %sub348 = sub i64 %mul347, 1, !dbg !9062
  %and349 = and i64 %sub348, 256, !dbg !9062
  %tobool350 = icmp ne i64 %and349, 0, !dbg !9062
  br i1 %tobool350, label %cond.true351, label %cond.false352, !dbg !9062

cond.true351:                                     ; preds = %cond.false346
  br label %cond.end396, !dbg !9062

cond.false352:                                    ; preds = %cond.false346
  %70 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul353 = mul i64 %70, 16, !dbg !9062
  %sub354 = sub i64 %mul353, 1, !dbg !9062
  %and355 = and i64 %sub354, 128, !dbg !9062
  %tobool356 = icmp ne i64 %and355, 0, !dbg !9062
  br i1 %tobool356, label %cond.true357, label %cond.false358, !dbg !9062

cond.true357:                                     ; preds = %cond.false352
  br label %cond.end394, !dbg !9062

cond.false358:                                    ; preds = %cond.false352
  %71 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul359 = mul i64 %71, 16, !dbg !9062
  %sub360 = sub i64 %mul359, 1, !dbg !9062
  %and361 = and i64 %sub360, 64, !dbg !9062
  %tobool362 = icmp ne i64 %and361, 0, !dbg !9062
  br i1 %tobool362, label %cond.true363, label %cond.false364, !dbg !9062

cond.true363:                                     ; preds = %cond.false358
  br label %cond.end392, !dbg !9062

cond.false364:                                    ; preds = %cond.false358
  %72 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul365 = mul i64 %72, 16, !dbg !9062
  %sub366 = sub i64 %mul365, 1, !dbg !9062
  %and367 = and i64 %sub366, 32, !dbg !9062
  %tobool368 = icmp ne i64 %and367, 0, !dbg !9062
  br i1 %tobool368, label %cond.true369, label %cond.false370, !dbg !9062

cond.true369:                                     ; preds = %cond.false364
  br label %cond.end390, !dbg !9062

cond.false370:                                    ; preds = %cond.false364
  %73 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul371 = mul i64 %73, 16, !dbg !9062
  %sub372 = sub i64 %mul371, 1, !dbg !9062
  %and373 = and i64 %sub372, 16, !dbg !9062
  %tobool374 = icmp ne i64 %and373, 0, !dbg !9062
  br i1 %tobool374, label %cond.true375, label %cond.false376, !dbg !9062

cond.true375:                                     ; preds = %cond.false370
  br label %cond.end388, !dbg !9062

cond.false376:                                    ; preds = %cond.false370
  %74 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul377 = mul i64 %74, 16, !dbg !9062
  %sub378 = sub i64 %mul377, 1, !dbg !9062
  %and379 = and i64 %sub378, 8, !dbg !9062
  %tobool380 = icmp ne i64 %and379, 0, !dbg !9062
  br i1 %tobool380, label %cond.true381, label %cond.false382, !dbg !9062

cond.true381:                                     ; preds = %cond.false376
  br label %cond.end, !dbg !9062

cond.false382:                                    ; preds = %cond.false376
  %75 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul383 = mul i64 %75, 16, !dbg !9062
  %sub384 = sub i64 %mul383, 1, !dbg !9062
  %and385 = and i64 %sub384, 4, !dbg !9062
  %tobool386 = icmp ne i64 %and385, 0, !dbg !9062
  %76 = zext i1 %tobool386 to i64, !dbg !9062
  %cond = select i1 %tobool386, i32 2, i32 1, !dbg !9062
  br label %cond.end, !dbg !9062

cond.end:                                         ; preds = %cond.false382, %cond.true381
  %cond387 = phi i32 [ 3, %cond.true381 ], [ %cond, %cond.false382 ], !dbg !9062
  br label %cond.end388, !dbg !9062

cond.end388:                                      ; preds = %cond.end, %cond.true375
  %cond389 = phi i32 [ 4, %cond.true375 ], [ %cond387, %cond.end ], !dbg !9062
  br label %cond.end390, !dbg !9062

cond.end390:                                      ; preds = %cond.end388, %cond.true369
  %cond391 = phi i32 [ 5, %cond.true369 ], [ %cond389, %cond.end388 ], !dbg !9062
  br label %cond.end392, !dbg !9062

cond.end392:                                      ; preds = %cond.end390, %cond.true363
  %cond393 = phi i32 [ 6, %cond.true363 ], [ %cond391, %cond.end390 ], !dbg !9062
  br label %cond.end394, !dbg !9062

cond.end394:                                      ; preds = %cond.end392, %cond.true357
  %cond395 = phi i32 [ 7, %cond.true357 ], [ %cond393, %cond.end392 ], !dbg !9062
  br label %cond.end396, !dbg !9062

cond.end396:                                      ; preds = %cond.end394, %cond.true351
  %cond397 = phi i32 [ 8, %cond.true351 ], [ %cond395, %cond.end394 ], !dbg !9062
  br label %cond.end398, !dbg !9062

cond.end398:                                      ; preds = %cond.end396, %cond.true345
  %cond399 = phi i32 [ 9, %cond.true345 ], [ %cond397, %cond.end396 ], !dbg !9062
  br label %cond.end400, !dbg !9062

cond.end400:                                      ; preds = %cond.end398, %cond.true339
  %cond401 = phi i32 [ 10, %cond.true339 ], [ %cond399, %cond.end398 ], !dbg !9062
  br label %cond.end402, !dbg !9062

cond.end402:                                      ; preds = %cond.end400, %cond.true333
  %cond403 = phi i32 [ 11, %cond.true333 ], [ %cond401, %cond.end400 ], !dbg !9062
  br label %cond.end404, !dbg !9062

cond.end404:                                      ; preds = %cond.end402, %cond.true327
  %cond405 = phi i32 [ 12, %cond.true327 ], [ %cond403, %cond.end402 ], !dbg !9062
  br label %cond.end406, !dbg !9062

cond.end406:                                      ; preds = %cond.end404, %cond.true321
  %cond407 = phi i32 [ 13, %cond.true321 ], [ %cond405, %cond.end404 ], !dbg !9062
  br label %cond.end408, !dbg !9062

cond.end408:                                      ; preds = %cond.end406, %cond.true315
  %cond409 = phi i32 [ 14, %cond.true315 ], [ %cond407, %cond.end406 ], !dbg !9062
  br label %cond.end410, !dbg !9062

cond.end410:                                      ; preds = %cond.end408, %cond.true309
  %cond411 = phi i32 [ 15, %cond.true309 ], [ %cond409, %cond.end408 ], !dbg !9062
  br label %cond.end412, !dbg !9062

cond.end412:                                      ; preds = %cond.end410, %cond.true303
  %cond413 = phi i32 [ 16, %cond.true303 ], [ %cond411, %cond.end410 ], !dbg !9062
  br label %cond.end414, !dbg !9062

cond.end414:                                      ; preds = %cond.end412, %cond.true297
  %cond415 = phi i32 [ 17, %cond.true297 ], [ %cond413, %cond.end412 ], !dbg !9062
  br label %cond.end416, !dbg !9062

cond.end416:                                      ; preds = %cond.end414, %cond.true291
  %cond417 = phi i32 [ 18, %cond.true291 ], [ %cond415, %cond.end414 ], !dbg !9062
  br label %cond.end418, !dbg !9062

cond.end418:                                      ; preds = %cond.end416, %cond.true285
  %cond419 = phi i32 [ 19, %cond.true285 ], [ %cond417, %cond.end416 ], !dbg !9062
  br label %cond.end420, !dbg !9062

cond.end420:                                      ; preds = %cond.end418, %cond.true279
  %cond421 = phi i32 [ 20, %cond.true279 ], [ %cond419, %cond.end418 ], !dbg !9062
  br label %cond.end422, !dbg !9062

cond.end422:                                      ; preds = %cond.end420, %cond.true273
  %cond423 = phi i32 [ 21, %cond.true273 ], [ %cond421, %cond.end420 ], !dbg !9062
  br label %cond.end424, !dbg !9062

cond.end424:                                      ; preds = %cond.end422, %cond.true267
  %cond425 = phi i32 [ 22, %cond.true267 ], [ %cond423, %cond.end422 ], !dbg !9062
  br label %cond.end426, !dbg !9062

cond.end426:                                      ; preds = %cond.end424, %cond.true261
  %cond427 = phi i32 [ 23, %cond.true261 ], [ %cond425, %cond.end424 ], !dbg !9062
  br label %cond.end428, !dbg !9062

cond.end428:                                      ; preds = %cond.end426, %cond.true255
  %cond429 = phi i32 [ 24, %cond.true255 ], [ %cond427, %cond.end426 ], !dbg !9062
  br label %cond.end430, !dbg !9062

cond.end430:                                      ; preds = %cond.end428, %cond.true249
  %cond431 = phi i32 [ 25, %cond.true249 ], [ %cond429, %cond.end428 ], !dbg !9062
  br label %cond.end432, !dbg !9062

cond.end432:                                      ; preds = %cond.end430, %cond.true243
  %cond433 = phi i32 [ 26, %cond.true243 ], [ %cond431, %cond.end430 ], !dbg !9062
  br label %cond.end434, !dbg !9062

cond.end434:                                      ; preds = %cond.end432, %cond.true237
  %cond435 = phi i32 [ 27, %cond.true237 ], [ %cond433, %cond.end432 ], !dbg !9062
  br label %cond.end436, !dbg !9062

cond.end436:                                      ; preds = %cond.end434, %cond.true231
  %cond437 = phi i32 [ 28, %cond.true231 ], [ %cond435, %cond.end434 ], !dbg !9062
  br label %cond.end438, !dbg !9062

cond.end438:                                      ; preds = %cond.end436, %cond.true225
  %cond439 = phi i32 [ 29, %cond.true225 ], [ %cond437, %cond.end436 ], !dbg !9062
  br label %cond.end440, !dbg !9062

cond.end440:                                      ; preds = %cond.end438, %cond.true219
  %cond441 = phi i32 [ 30, %cond.true219 ], [ %cond439, %cond.end438 ], !dbg !9062
  br label %cond.end442, !dbg !9062

cond.end442:                                      ; preds = %cond.end440, %cond.true213
  %cond443 = phi i32 [ 31, %cond.true213 ], [ %cond441, %cond.end440 ], !dbg !9062
  br label %cond.end444, !dbg !9062

cond.end444:                                      ; preds = %cond.end442, %cond.true207
  %cond445 = phi i32 [ 32, %cond.true207 ], [ %cond443, %cond.end442 ], !dbg !9062
  br label %cond.end446, !dbg !9062

cond.end446:                                      ; preds = %cond.end444, %cond.true201
  %cond447 = phi i32 [ 33, %cond.true201 ], [ %cond445, %cond.end444 ], !dbg !9062
  br label %cond.end448, !dbg !9062

cond.end448:                                      ; preds = %cond.end446, %cond.true195
  %cond449 = phi i32 [ 34, %cond.true195 ], [ %cond447, %cond.end446 ], !dbg !9062
  br label %cond.end450, !dbg !9062

cond.end450:                                      ; preds = %cond.end448, %cond.true189
  %cond451 = phi i32 [ 35, %cond.true189 ], [ %cond449, %cond.end448 ], !dbg !9062
  br label %cond.end452, !dbg !9062

cond.end452:                                      ; preds = %cond.end450, %cond.true183
  %cond453 = phi i32 [ 36, %cond.true183 ], [ %cond451, %cond.end450 ], !dbg !9062
  br label %cond.end454, !dbg !9062

cond.end454:                                      ; preds = %cond.end452, %cond.true177
  %cond455 = phi i32 [ 37, %cond.true177 ], [ %cond453, %cond.end452 ], !dbg !9062
  br label %cond.end456, !dbg !9062

cond.end456:                                      ; preds = %cond.end454, %cond.true171
  %cond457 = phi i32 [ 38, %cond.true171 ], [ %cond455, %cond.end454 ], !dbg !9062
  br label %cond.end458, !dbg !9062

cond.end458:                                      ; preds = %cond.end456, %cond.true165
  %cond459 = phi i32 [ 39, %cond.true165 ], [ %cond457, %cond.end456 ], !dbg !9062
  br label %cond.end460, !dbg !9062

cond.end460:                                      ; preds = %cond.end458, %cond.true159
  %cond461 = phi i32 [ 40, %cond.true159 ], [ %cond459, %cond.end458 ], !dbg !9062
  br label %cond.end462, !dbg !9062

cond.end462:                                      ; preds = %cond.end460, %cond.true153
  %cond463 = phi i32 [ 41, %cond.true153 ], [ %cond461, %cond.end460 ], !dbg !9062
  br label %cond.end464, !dbg !9062

cond.end464:                                      ; preds = %cond.end462, %cond.true147
  %cond465 = phi i32 [ 42, %cond.true147 ], [ %cond463, %cond.end462 ], !dbg !9062
  br label %cond.end466, !dbg !9062

cond.end466:                                      ; preds = %cond.end464, %cond.true141
  %cond467 = phi i32 [ 43, %cond.true141 ], [ %cond465, %cond.end464 ], !dbg !9062
  br label %cond.end468, !dbg !9062

cond.end468:                                      ; preds = %cond.end466, %cond.true135
  %cond469 = phi i32 [ 44, %cond.true135 ], [ %cond467, %cond.end466 ], !dbg !9062
  br label %cond.end470, !dbg !9062

cond.end470:                                      ; preds = %cond.end468, %cond.true129
  %cond471 = phi i32 [ 45, %cond.true129 ], [ %cond469, %cond.end468 ], !dbg !9062
  br label %cond.end472, !dbg !9062

cond.end472:                                      ; preds = %cond.end470, %cond.true123
  %cond473 = phi i32 [ 46, %cond.true123 ], [ %cond471, %cond.end470 ], !dbg !9062
  br label %cond.end474, !dbg !9062

cond.end474:                                      ; preds = %cond.end472, %cond.true117
  %cond475 = phi i32 [ 47, %cond.true117 ], [ %cond473, %cond.end472 ], !dbg !9062
  br label %cond.end476, !dbg !9062

cond.end476:                                      ; preds = %cond.end474, %cond.true111
  %cond477 = phi i32 [ 48, %cond.true111 ], [ %cond475, %cond.end474 ], !dbg !9062
  br label %cond.end478, !dbg !9062

cond.end478:                                      ; preds = %cond.end476, %cond.true105
  %cond479 = phi i32 [ 49, %cond.true105 ], [ %cond477, %cond.end476 ], !dbg !9062
  br label %cond.end480, !dbg !9062

cond.end480:                                      ; preds = %cond.end478, %cond.true99
  %cond481 = phi i32 [ 50, %cond.true99 ], [ %cond479, %cond.end478 ], !dbg !9062
  br label %cond.end482, !dbg !9062

cond.end482:                                      ; preds = %cond.end480, %cond.true93
  %cond483 = phi i32 [ 51, %cond.true93 ], [ %cond481, %cond.end480 ], !dbg !9062
  br label %cond.end484, !dbg !9062

cond.end484:                                      ; preds = %cond.end482, %cond.true87
  %cond485 = phi i32 [ 52, %cond.true87 ], [ %cond483, %cond.end482 ], !dbg !9062
  br label %cond.end486, !dbg !9062

cond.end486:                                      ; preds = %cond.end484, %cond.true81
  %cond487 = phi i32 [ 53, %cond.true81 ], [ %cond485, %cond.end484 ], !dbg !9062
  br label %cond.end488, !dbg !9062

cond.end488:                                      ; preds = %cond.end486, %cond.true75
  %cond489 = phi i32 [ 54, %cond.true75 ], [ %cond487, %cond.end486 ], !dbg !9062
  br label %cond.end490, !dbg !9062

cond.end490:                                      ; preds = %cond.end488, %cond.true69
  %cond491 = phi i32 [ 55, %cond.true69 ], [ %cond489, %cond.end488 ], !dbg !9062
  br label %cond.end492, !dbg !9062

cond.end492:                                      ; preds = %cond.end490, %cond.true63
  %cond493 = phi i32 [ 56, %cond.true63 ], [ %cond491, %cond.end490 ], !dbg !9062
  br label %cond.end494, !dbg !9062

cond.end494:                                      ; preds = %cond.end492, %cond.true57
  %cond495 = phi i32 [ 57, %cond.true57 ], [ %cond493, %cond.end492 ], !dbg !9062
  br label %cond.end496, !dbg !9062

cond.end496:                                      ; preds = %cond.end494, %cond.true51
  %cond497 = phi i32 [ 58, %cond.true51 ], [ %cond495, %cond.end494 ], !dbg !9062
  br label %cond.end498, !dbg !9062

cond.end498:                                      ; preds = %cond.end496, %cond.true45
  %cond499 = phi i32 [ 59, %cond.true45 ], [ %cond497, %cond.end496 ], !dbg !9062
  br label %cond.end500, !dbg !9062

cond.end500:                                      ; preds = %cond.end498, %cond.true39
  %cond501 = phi i32 [ 60, %cond.true39 ], [ %cond499, %cond.end498 ], !dbg !9062
  br label %cond.end502, !dbg !9062

cond.end502:                                      ; preds = %cond.end500, %cond.true33
  %cond503 = phi i32 [ 61, %cond.true33 ], [ %cond501, %cond.end500 ], !dbg !9062
  br label %cond.end504, !dbg !9062

cond.end504:                                      ; preds = %cond.end502, %cond.true27
  %cond505 = phi i32 [ 62, %cond.true27 ], [ %cond503, %cond.end502 ], !dbg !9062
  br label %cond.end506, !dbg !9062

cond.end506:                                      ; preds = %cond.end504, %cond.true21
  %cond507 = phi i32 [ 63, %cond.true21 ], [ %cond505, %cond.end504 ], !dbg !9062
  br label %cond.end508, !dbg !9062

cond.end508:                                      ; preds = %cond.end506, %cond.true16
  %cond509 = phi i32 [ 0, %cond.true16 ], [ %cond507, %cond.end506 ], !dbg !9062
  br label %cond.end511, !dbg !9062

cond.false510:                                    ; preds = %cond.true8
  br label %cond.end511, !dbg !9062

cond.end511:                                      ; preds = %cond.false510, %cond.end508
  %cond512 = phi i32 [ %cond509, %cond.end508 ], [ -1, %cond.false510 ], !dbg !9062
  br label %cond.end517, !dbg !9062

cond.false513:                                    ; preds = %cond.false
  %77 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul514 = mul i64 %77, 16, !dbg !9062
  %sub515 = sub i64 %mul514, 1, !dbg !9062
  %call516 = call i32 @__ilog2_u64(i64 %sub515) #14, !dbg !9062
  br label %cond.end517, !dbg !9062

cond.end517:                                      ; preds = %cond.false513, %cond.end511
  %cond518 = phi i32 [ %cond512, %cond.end511 ], [ %call516, %cond.false513 ], !dbg !9062
  %add = add i32 %cond518, 1, !dbg !9062
  %sh_prom = zext i32 %add to i64, !dbg !9062
  %shl = shl i64 1, %sh_prom, !dbg !9062
  br label %cond.end519, !dbg !9062

cond.end519:                                      ; preds = %cond.end517, %cond.true6
  %cond520 = phi i64 [ 1, %cond.true6 ], [ %shl, %cond.end517 ], !dbg !9062
  br label %cond.end524, !dbg !9062

cond.false521:                                    ; preds = %if.end
  %78 = load i64, i64* %size.addr, align 8, !dbg !9062
  %mul522 = mul i64 %78, 16, !dbg !9062
  %call523 = call i64 @__roundup_pow_of_two(i64 %mul522) #14, !dbg !9062
  br label %cond.end524, !dbg !9062

cond.end524:                                      ; preds = %cond.false521, %cond.end519
  %cond525 = phi i64 [ %cond520, %cond.end519 ], [ %call523, %cond.false521 ], !dbg !9062
  %conv526 = trunc i64 %cond525 to i32, !dbg !9062
  %79 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !9063
  %alloc = getelementptr inbounds %struct.rc_map, %struct.rc_map* %79, i32 0, i32 3, !dbg !9064
  store i32 %conv526, i32* %alloc, align 8, !dbg !9065
  %80 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !9066
  %alloc527 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %80, i32 0, i32 3, !dbg !9067
  %81 = load i32, i32* %alloc527, align 8, !dbg !9067
  %conv528 = zext i32 %81 to i64, !dbg !9066
  %div = udiv i64 %conv528, 16, !dbg !9068
  %conv529 = trunc i64 %div to i32, !dbg !9066
  %82 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !9069
  %size530 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %82, i32 0, i32 1, !dbg !9070
  store i32 %conv529, i32* %size530, align 8, !dbg !9071
  %83 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !9072
  %alloc531 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %83, i32 0, i32 3, !dbg !9073
  %84 = load i32, i32* %alloc531, align 8, !dbg !9073
  %conv532 = zext i32 %84 to i64, !dbg !9072
  store i64 %conv532, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %85 = load i64, i64* %size.addr.i, align 8, !dbg !9074
  %86 = call i1 @llvm.is.constant.i64(i64 %85) #7, !dbg !9075
  br i1 %86, label %if.then.i, label %if.end9.i, !dbg !9076

if.then.i:                                        ; preds = %cond.end524
  %87 = load i64, i64* %size.addr.i, align 8, !dbg !9077
  %cmp.i = icmp ugt i64 %87, 8192, !dbg !9078
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9079

if.then1.i:                                       ; preds = %if.then.i
  %88 = load i64, i64* %size.addr.i, align 8, !dbg !9080
  %89 = load i32, i32* %flags.addr.i, align 4, !dbg !9081
  store i64 %88, i64* %size.addr.i.i, align 8
  store i32 %89, i32* %flags.addr.i.i, align 4
  %90 = load i64, i64* %size.addr.i.i, align 8, !dbg !9082
  %call.i.i = call i32 @get_order(i64 %90) #14, !dbg !9083
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !9034
  %91 = load i64, i64* %size.addr.i.i, align 8, !dbg !9084
  %92 = load i32, i32* %flags.addr.i.i, align 4, !dbg !9085
  %93 = load i32, i32* %order.i.i, align 4, !dbg !9086
  store i64 %91, i64* %size.addr.i.i.i, align 8
  store i32 %92, i32* %flags.addr.i.i.i, align 4
  store i32 %93, i32* %order.addr.i.i.i, align 4
  %94 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !9087
  %95 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !9088
  %96 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !9089
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %94, i32 %95, i32 %96) #13, !dbg !9090
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !9090
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !9090
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !9090
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !9090
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !9091
  br label %kmalloc.exit, !dbg !9091

if.end.i:                                         ; preds = %if.then.i
  %97 = load i64, i64* %size.addr.i, align 8, !dbg !9092
  store i64 %97, i64* %size.addr.i11.i, align 8
  %98 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9093
  %tobool.i.i = icmp ne i64 %98, 0, !dbg !9093
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !9094

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !9095
  br label %kmalloc_index.exit.i, !dbg !9095

if.end.i.i:                                       ; preds = %if.end.i
  %99 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9096
  %cmp.i.i = icmp ule i64 %99, 8, !dbg !9097
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !9098

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9099
  br label %kmalloc_index.exit.i, !dbg !9099

if.end2.i.i:                                      ; preds = %if.end.i.i
  %100 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9100
  %cmp3.i.i = icmp ugt i64 %100, 64, !dbg !9101
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !9102

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %101 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9103
  %cmp4.i.i = icmp ule i64 %101, 96, !dbg !9104
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !9105

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !9106
  br label %kmalloc_index.exit.i, !dbg !9106

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %102 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9107
  %cmp7.i.i = icmp ugt i64 %102, 128, !dbg !9108
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !9109

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %103 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9110
  %cmp9.i.i = icmp ule i64 %103, 192, !dbg !9111
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !9112

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !9113
  br label %kmalloc_index.exit.i, !dbg !9113

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %104 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9114
  %cmp12.i.i = icmp ule i64 %104, 8, !dbg !9115
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !9116

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !9117
  br label %kmalloc_index.exit.i, !dbg !9117

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %105 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9118
  %cmp15.i.i = icmp ule i64 %105, 16, !dbg !9119
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !9120

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !9121
  br label %kmalloc_index.exit.i, !dbg !9121

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %106 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9122
  %cmp18.i.i = icmp ule i64 %106, 32, !dbg !9123
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !9124

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !9125
  br label %kmalloc_index.exit.i, !dbg !9125

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %107 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9126
  %cmp21.i.i = icmp ule i64 %107, 64, !dbg !9127
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !9128

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !9129
  br label %kmalloc_index.exit.i, !dbg !9129

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %108 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9130
  %cmp24.i.i = icmp ule i64 %108, 128, !dbg !9131
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !9132

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !9133
  br label %kmalloc_index.exit.i, !dbg !9133

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %109 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9134
  %cmp27.i.i = icmp ule i64 %109, 256, !dbg !9135
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !9136

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !9137
  br label %kmalloc_index.exit.i, !dbg !9137

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %110 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9138
  %cmp30.i.i = icmp ule i64 %110, 512, !dbg !9139
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !9140

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !9141
  br label %kmalloc_index.exit.i, !dbg !9141

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %111 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9142
  %cmp33.i.i = icmp ule i64 %111, 1024, !dbg !9143
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !9144

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !9145
  br label %kmalloc_index.exit.i, !dbg !9145

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %112 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9146
  %cmp36.i.i = icmp ule i64 %112, 2048, !dbg !9147
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !9148

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !9149
  br label %kmalloc_index.exit.i, !dbg !9149

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %113 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9150
  %cmp39.i.i = icmp ule i64 %113, 4096, !dbg !9151
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !9152

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !9153
  br label %kmalloc_index.exit.i, !dbg !9153

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %114 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9154
  %cmp42.i.i = icmp ule i64 %114, 8192, !dbg !9155
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !9156

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !9157
  br label %kmalloc_index.exit.i, !dbg !9157

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %115 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9158
  %cmp45.i.i = icmp ule i64 %115, 16384, !dbg !9159
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !9160

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !9161
  br label %kmalloc_index.exit.i, !dbg !9161

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %116 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9162
  %cmp48.i.i = icmp ule i64 %116, 32768, !dbg !9163
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !9164

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !9165
  br label %kmalloc_index.exit.i, !dbg !9165

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %117 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9166
  %cmp51.i.i = icmp ule i64 %117, 65536, !dbg !9167
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !9168

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !9169
  br label %kmalloc_index.exit.i, !dbg !9169

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %118 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9170
  %cmp54.i.i = icmp ule i64 %118, 131072, !dbg !9171
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !9172

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !9173
  br label %kmalloc_index.exit.i, !dbg !9173

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %119 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9174
  %cmp57.i.i = icmp ule i64 %119, 262144, !dbg !9175
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !9176

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !9177
  br label %kmalloc_index.exit.i, !dbg !9177

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %120 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9178
  %cmp60.i.i = icmp ule i64 %120, 524288, !dbg !9179
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !9180

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !9181
  br label %kmalloc_index.exit.i, !dbg !9181

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %121 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9182
  %cmp63.i.i = icmp ule i64 %121, 1048576, !dbg !9183
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !9184

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !9185
  br label %kmalloc_index.exit.i, !dbg !9185

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %122 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9186
  %cmp66.i.i = icmp ule i64 %122, 2097152, !dbg !9187
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !9188

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !9189
  br label %kmalloc_index.exit.i, !dbg !9189

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %123 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9190
  %cmp69.i.i = icmp ule i64 %123, 4194304, !dbg !9191
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !9192

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !9193
  br label %kmalloc_index.exit.i, !dbg !9193

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %124 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9194
  %cmp72.i.i = icmp ule i64 %124, 8388608, !dbg !9195
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !9196

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !9197
  br label %kmalloc_index.exit.i, !dbg !9197

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %125 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9198
  %cmp75.i.i = icmp ule i64 %125, 16777216, !dbg !9199
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !9200

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !9201
  br label %kmalloc_index.exit.i, !dbg !9201

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %126 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9202
  %cmp78.i.i = icmp ule i64 %126, 33554432, !dbg !9203
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !9204

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !9205
  br label %kmalloc_index.exit.i, !dbg !9205

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %127 = load i64, i64* %size.addr.i11.i, align 8, !dbg !9206
  %cmp81.i.i = icmp ule i64 %127, 67108864, !dbg !9207
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !9208

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !9209
  br label %kmalloc_index.exit.i, !dbg !9209

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !9210, !srcloc !5765
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 224) #7, !dbg !9211, !srcloc !5769
  unreachable, !dbg !9212

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %128 = load i32, i32* %retval.i.i, align 4, !dbg !9213
  store i32 %128, i32* %index.i, align 4, !dbg !9214
  %129 = load i32, i32* %index.i, align 4, !dbg !9215
  %tobool.i = icmp ne i32 %129, 0, !dbg !9215
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !9216

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !9217
  br label %kmalloc.exit, !dbg !9217

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %130 = load i32, i32* %flags.addr.i, align 4, !dbg !9218
  store i32 %130, i32* %flags.addr.i13.i, align 4
  %131 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9219
  %and.i.i = and i32 %131, 17, !dbg !9219
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !9219
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !9219
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !9219
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !9219
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !9220

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !9221
  br label %kmalloc_type.exit.i, !dbg !9221

if.end.i16.i:                                     ; preds = %if.end4.i
  %132 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !9222
  %and2.i.i = and i32 %132, 1, !dbg !9223
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !9222
  %133 = zext i1 %tobool3.i.i to i64, !dbg !9222
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !9222
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !9224
  br label %kmalloc_type.exit.i, !dbg !9224

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %134 = load i32, i32* %retval.i12.i, align 4, !dbg !9225
  %idxprom.i = zext i32 %134 to i64, !dbg !9226
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !9226
  %135 = load i32, i32* %index.i, align 4, !dbg !9227
  %idxprom6.i = zext i32 %135 to i64, !dbg !9226
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !9226
  %136 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !9226
  %137 = load i32, i32* %flags.addr.i, align 4, !dbg !9228
  %138 = load i64, i64* %size.addr.i, align 8, !dbg !9229
  store %struct.kmem_cache* %136, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %137, i32* %flags.addr.i17.i, align 4
  store i64 %138, i64* %size.addr.i18.i, align 8
  %139 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9230
  %140 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9231
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %139, i32 %140) #13, !dbg !9232
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !9232
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !9232
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !9232
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !9232
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !9022
  %141 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !9233
  %142 = load i8*, i8** %ret.i.i, align 8, !dbg !9234
  %143 = load i64, i64* %size.addr.i18.i, align 8, !dbg !9235
  %144 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !9236
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %141, i8* %142, i64 %143, i32 %144) #13, !dbg !9237
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !9238
  %145 = load i8*, i8** %ret.i.i, align 8, !dbg !9239
  store i8* %145, i8** %retval.i, align 8, !dbg !9240
  br label %kmalloc.exit, !dbg !9240

if.end9.i:                                        ; preds = %cond.end524
  %146 = load i64, i64* %size.addr.i, align 8, !dbg !9241
  %147 = load i32, i32* %flags.addr.i, align 4, !dbg !9242
  %call10.i = call noalias i8* @__kmalloc(i64 %146, i32 %147) #13, !dbg !9243
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !9243
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !9243
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !9243
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !9243
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !9244
  br label %kmalloc.exit, !dbg !9244

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %148 = load i8*, i8** %retval.i, align 8, !dbg !9245
  %149 = bitcast i8* %148 to %struct.rc_map_table*, !dbg !9246
  %150 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !9247
  %scan = getelementptr inbounds %struct.rc_map, %struct.rc_map* %150, i32 0, i32 0, !dbg !9248
  store %struct.rc_map_table* %149, %struct.rc_map_table** %scan, align 8, !dbg !9249
  %151 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !9250
  %scan534 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %151, i32 0, i32 0, !dbg !9252
  %152 = load %struct.rc_map_table*, %struct.rc_map_table** %scan534, align 8, !dbg !9252
  %tobool535 = icmp ne %struct.rc_map_table* %152, null, !dbg !9250
  br i1 %tobool535, label %if.end539, label %if.then536, !dbg !9253

if.then536:                                       ; preds = %kmalloc.exit
  %153 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !9254
  %name537 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %153, i32 0, i32 5, !dbg !9256
  %154 = load i8*, i8** %name537, align 8, !dbg !9256
  call void @kfree(i8* %154) #11, !dbg !9257
  %155 = load %struct.rc_map*, %struct.rc_map** %rc_map.addr, align 8, !dbg !9258
  %name538 = getelementptr inbounds %struct.rc_map, %struct.rc_map* %155, i32 0, i32 5, !dbg !9259
  store i8* null, i8** %name538, align 8, !dbg !9260
  store i32 -12, i32* %retval, align 4, !dbg !9261
  br label %return, !dbg !9261

if.end539:                                        ; preds = %kmalloc.exit
  store i32 0, i32* %retval, align 4, !dbg !9262
  br label %return, !dbg !9262

return:                                           ; preds = %if.end539, %if.then536, %if.then
  %156 = load i32, i32* %retval, align 4, !dbg !9263
  ret i32 %156, !dbg !9263
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kstrdup(i8*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__roundup_pow_of_two(i64 %n) #10 !dbg !9264 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !9267, metadata !DIExpression()), !dbg !9268
  %0 = load i64, i64* %n.addr, align 8, !dbg !9269
  %sub = sub i64 %0, 1, !dbg !9270
  %call = call i32 @fls_long(i64 %sub) #11, !dbg !9271
  %sh_prom = zext i32 %call to i64, !dbg !9272
  %shl = shl i64 1, %sh_prom, !dbg !9272
  ret i64 %shl, !dbg !9273
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @fls_long(i64 %l) #0 !dbg !9274 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !7154, metadata !DIExpression()), !dbg !9278
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !7161, metadata !DIExpression()), !dbg !9280
  %l.addr = alloca i64, align 8
  store i64 %l, i64* %l.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %l.addr, metadata !9281, metadata !DIExpression()), !dbg !9282
  %0 = load i64, i64* %l.addr, align 8, !dbg !9283
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9280
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !9284
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !9285
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !9284, !srcloc !7188
  store i32 %3, i32* %bitpos.i, align 4, !dbg !9284
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !9286
  %add.i = add i32 %4, 1, !dbg !9287
  ret i32 %add.i, !dbg !9288
}

; Function Attrs: noredzone
declare dso_local i32 @input_register_device(%struct.input_dev*) #3

; Function Attrs: noredzone
declare dso_local void @input_unregister_device(%struct.input_dev*) #3

; Function Attrs: noredzone
declare dso_local i32 @__class_register(%struct.class*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @lirc_dev_init() #0 !dbg !9289 {
entry:
  ret i32 0, !dbg !9290
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @led_trigger_register_simple(i8* %name, %struct.led_trigger** %trigger) #0 !dbg !9291 {
entry:
  %name.addr = alloca i8*, align 8
  %trigger.addr = alloca %struct.led_trigger**, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9295, metadata !DIExpression()), !dbg !9296
  store %struct.led_trigger** %trigger, %struct.led_trigger*** %trigger.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.led_trigger*** %trigger.addr, metadata !9297, metadata !DIExpression()), !dbg !9298
  ret void, !dbg !9299
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { cold noredzone }
attributes #13 = { noredzone nounwind }
attributes #14 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!4363}
!llvm.module.flags = !{!4364, !4365, !4366, !4367}
!llvm.ident = !{!4368}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "rc_map_lock", scope: !2, file: !3, line: 84, type: !197, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !154, globals: !4255, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/media/rc/rc-main.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !37, !44, !50, !55, !61, !68, !74, !83, !91, !97, !103, !110, !118, !124, !130, !135, !142, !149}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rc_proto", file: !6, line: 200, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/uapi/linux/lirc.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!9 = !DIEnumerator(name: "RC_PROTO_UNKNOWN", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "RC_PROTO_OTHER", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "RC_PROTO_RC5", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "RC_PROTO_RC5X_20", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "RC_PROTO_RC5_SZ", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "RC_PROTO_JVC", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "RC_PROTO_SONY12", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "RC_PROTO_SONY15", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "RC_PROTO_SONY20", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "RC_PROTO_NEC", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "RC_PROTO_NECX", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "RC_PROTO_NEC32", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "RC_PROTO_SANYO", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "RC_PROTO_MCIR2_KBD", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "RC_PROTO_MCIR2_MSE", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "RC_PROTO_RC6_0", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "RC_PROTO_RC6_6A_20", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "RC_PROTO_RC6_6A_24", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "RC_PROTO_RC6_6A_32", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "RC_PROTO_RC6_MCE", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "RC_PROTO_SHARP", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "RC_PROTO_XMP", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "RC_PROTO_CEC", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "RC_PROTO_IMON", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "RC_PROTO_RCMM12", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "RC_PROTO_RCMM24", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "RC_PROTO_RCMM32", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "RC_PROTO_XBOX_DVD", value: 27, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !38, line: 15, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42, !43}
!40 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!43 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !45, line: 546, baseType: !7, size: 32, elements: !46)
!45 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!48 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!49 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !51, line: 65, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54}
!53 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!54 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!55 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !56, line: 16, baseType: !7, size: 32, elements: !57)
!56 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!57 = !{!58, !59, !60}
!58 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!59 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!60 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !62, line: 59, baseType: !7, size: 32, elements: !63)
!62 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!63 = !{!64, !65, !66, !67}
!64 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!66 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!67 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !69, line: 54, baseType: !7, size: 32, elements: !70)
!69 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!70 = !{!71, !72, !73}
!71 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!72 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!73 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !75, line: 296, baseType: !7, size: 32, elements: !76)
!75 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!76 = !{!77, !78, !79, !80, !81, !82}
!77 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!78 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!79 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!80 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!81 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!82 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !84, line: 9, baseType: !7, size: 32, elements: !85)
!84 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!85 = !{!86, !87, !88, !89, !90}
!86 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!88 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!89 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!90 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!91 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !92, line: 26, baseType: !7, size: 32, elements: !93)
!92 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!93 = !{!94, !95, !96}
!94 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !98, line: 44, baseType: !7, size: 32, elements: !99)
!98 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!99 = !{!100, !101, !102}
!100 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!101 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!102 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !104, line: 343, baseType: !7, size: 32, elements: !105)
!104 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!105 = !{!106, !107, !108, !109}
!106 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!107 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!108 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!109 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !111, line: 524, baseType: !7, size: 32, elements: !112)
!111 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!112 = !{!113, !114, !115, !116, !117}
!113 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!114 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!115 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!116 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!117 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !111, line: 502, baseType: !7, size: 32, elements: !119)
!119 = !{!120, !121, !122, !123}
!120 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!121 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!122 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!123 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!124 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rc_driver_type", file: !125, line: 27, baseType: !7, size: 32, elements: !126)
!125 = !DIFile(filename: "./include/media/rc-core.h", directory: "/home/lizy2001/genbc/linux")
!126 = !{!127, !128, !129}
!127 = !DIEnumerator(name: "RC_DRIVER_SCANCODE", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "RC_DRIVER_IR_RAW", value: 1, isUnsigned: true)
!129 = !DIEnumerator(name: "RC_DRIVER_IR_RAW_TX", value: 2, isUnsigned: true)
!130 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !131, line: 10, baseType: !7, size: 32, elements: !132)
!131 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!132 = !{!133, !134}
!133 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!134 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "led_brightness", file: !136, line: 29, baseType: !7, size: 32, elements: !137)
!136 = !DIFile(filename: "./include/linux/leds.h", directory: "/home/lizy2001/genbc/linux")
!137 = !{!138, !139, !140, !141}
!138 = !DIEnumerator(name: "LED_OFF", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "LED_ON", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "LED_HALF", value: 127, isUnsigned: true)
!141 = !DIEnumerator(name: "LED_FULL", value: 255, isUnsigned: true)
!142 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !143, line: 305, baseType: !7, size: 32, elements: !144)
!143 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!144 = !{!145, !146, !147, !148}
!145 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!146 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!148 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rc_filter_type", file: !125, line: 49, baseType: !7, size: 32, elements: !150)
!150 = !{!151, !152, !153}
!151 = !DIEnumerator(name: "RC_FILTER_NORMAL", value: 0, isUnsigned: true)
!152 = !DIEnumerator(name: "RC_FILTER_WAKEUP", value: 1, isUnsigned: true)
!153 = !DIEnumerator(name: "RC_FILTER_MAX", value: 2, isUnsigned: true)
!154 = !{!155, !159, !160, !162, !165, !166, !212, !214, !215, !216, !225, !229, !233, !234, !235, !237, !4232, !4233, !4234, !4252, !4253}
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !156, line: 21, baseType: !157)
!156 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !158, line: 27, baseType: !7)
!158 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!159 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !161, line: 148, baseType: !7)
!161 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 64)
!163 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !164, line: 76, flags: DIFlagFwdDecl)
!164 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rc_map_list", file: !168, line: 173, size: 384, elements: !169)
!168 = !DIFile(filename: "./include/media/rc-map.h", directory: "/home/lizy2001/genbc/linux")
!169 = !{!170, !176}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !167, file: !168, line: 174, baseType: !171, size: 128)
!171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !161, line: 178, size: 128, elements: !172)
!172 = !{!173, !175}
!173 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !171, file: !161, line: 179, baseType: !174, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !171, size: 64)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !171, file: !161, line: 179, baseType: !174, size: 64, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !167, file: !168, line: 175, baseType: !177, size: 256, offset: 128)
!177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rc_map", file: !168, line: 157, size: 256, elements: !178)
!178 = !{!179, !188, !189, !190, !191, !192, !196}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "scan", scope: !177, file: !168, line: 158, baseType: !180, size: 64)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rc_map_table", file: !168, line: 140, size: 128, elements: !182)
!182 = !{!183, !187}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "scancode", scope: !181, file: !168, line: 141, baseType: !184, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !156, line: 23, baseType: !185)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !158, line: 31, baseType: !186)
!186 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !181, file: !168, line: 142, baseType: !155, size: 32, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !177, file: !168, line: 159, baseType: !7, size: 32, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !177, file: !168, line: 160, baseType: !7, size: 32, offset: 96)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !177, file: !168, line: 161, baseType: !7, size: 32, offset: 128)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "rc_proto", scope: !177, file: !168, line: 162, baseType: !5, size: 32, offset: 160)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !177, file: !168, line: 163, baseType: !193, size: 64, offset: 192)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !195)
!195 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !177, file: !168, line: 164, baseType: !197, offset: 256)
!197 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !198, line: 83, baseType: !199)
!198 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !198, line: 71, elements: !200)
!200 = !{!201}
!201 = !DIDerivedType(tag: DW_TAG_member, scope: !199, file: !198, line: 72, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !199, file: !198, line: 72, elements: !203)
!203 = !{!204}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !202, file: !198, line: 73, baseType: !205)
!205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !198, line: 20, elements: !206)
!206 = !{!207}
!207 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !205, file: !198, line: 21, baseType: !208)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !209, line: 25, baseType: !210)
!209 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!210 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !209, line: 25, elements: !211)
!211 = !{}
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !213, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !174)
!214 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!215 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!217 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !218)
!218 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !219)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !161, line: 186, size: 128, elements: !222)
!222 = !{!223, !224}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !221, file: !161, line: 187, baseType: !220, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !221, file: !161, line: 187, baseType: !219, size: 64, offset: 64)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !156, line: 17, baseType: !227)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !158, line: 21, baseType: !228)
!228 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !156, line: 19, baseType: !231)
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !158, line: 24, baseType: !232)
!232 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !215)
!237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rc_dev", file: !125, line: 162, size: 9536, elements: !239)
!239 = !{!240, !3813, !3814, !3818, !3819, !3820, !3828, !3829, !3830, !3831, !3832, !3833, !3887, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4191, !4195, !4199, !4203, !4204, !4205, !4209, !4213, !4217, !4221, !4222, !4227, !4228}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !238, file: !125, line: 163, baseType: !241, size: 5568)
!241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !104, line: 461, size: 5568, elements: !242)
!242 = !{!243, !3367, !3369, !3372, !3373, !3424, !3515, !3516, !3517, !3518, !3519, !3528, !3633, !3646, !3649, !3650, !3654, !3655, !3656, !3657, !3661, !3667, !3668, !3671, !3675, !3765, !3766, !3767, !3768, !3769, !3801, !3802, !3803, !3806, !3809, !3810, !3811, !3812}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !241, file: !104, line: 462, baseType: !244, size: 512)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !245, line: 64, size: 512, elements: !246)
!245 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!246 = !{!247, !248, !249, !251, !296, !3218, !3357, !3362, !3363, !3364, !3365, !3366}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !244, file: !245, line: 65, baseType: !193, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !244, file: !245, line: 66, baseType: !171, size: 128, offset: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !244, file: !245, line: 67, baseType: !250, size: 64, offset: 192)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !244, file: !245, line: 68, baseType: !252, size: 64, offset: 256)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !245, line: 192, size: 704, elements: !254)
!254 = !{!255, !256, !257, !258}
!255 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !253, file: !245, line: 193, baseType: !171, size: 128)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !253, file: !245, line: 194, baseType: !197, offset: 128)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !253, file: !245, line: 195, baseType: !244, size: 512, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !253, file: !245, line: 196, baseType: !259, size: 64, offset: 640)
!259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !245, line: 156, size: 192, elements: !262)
!262 = !{!263, !268, !273}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !261, file: !245, line: 157, baseType: !264, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !265)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = !DISubroutineType(types: !267)
!267 = !{!159, !252, !250}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !261, file: !245, line: 158, baseType: !269, size: 64, offset: 64)
!269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !270)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = !DISubroutineType(types: !272)
!272 = !{!193, !252, !250}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !261, file: !245, line: 159, baseType: !274, size: 64, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !275)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = !DISubroutineType(types: !277)
!277 = !{!159, !252, !250, !278}
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 64)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !245, line: 148, size: 20736, elements: !280)
!280 = !{!281, !286, !290, !291, !295}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !279, file: !245, line: 149, baseType: !282, size: 192)
!282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 192, elements: !284)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!284 = !{!285}
!285 = !DISubrange(count: 3)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !279, file: !245, line: 150, baseType: !287, size: 4096, offset: 192)
!287 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 4096, elements: !288)
!288 = !{!289}
!289 = !DISubrange(count: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !279, file: !245, line: 151, baseType: !159, size: 32, offset: 4288)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !279, file: !245, line: 152, baseType: !292, size: 16384, offset: 4320)
!292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 16384, elements: !293)
!293 = !{!294}
!294 = !DISubrange(count: 2048)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !279, file: !245, line: 153, baseType: !159, size: 32, offset: 20704)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !244, file: !245, line: 69, baseType: !297, size: 64, offset: 320)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !245, line: 138, size: 448, elements: !299)
!299 = !{!300, !304, !331, !333, !3180, !3208, !3212}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !298, file: !245, line: 139, baseType: !301, size: 64)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DISubroutineType(types: !303)
!303 = !{null, !250}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !298, file: !245, line: 140, baseType: !305, size: 64, offset: 64)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !307)
!307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !308, line: 230, size: 128, elements: !309)
!308 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!309 = !{!310, !324}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !307, file: !308, line: 231, baseType: !311, size: 64)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{!314, !250, !318, !283}
!314 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !161, line: 60, baseType: !315)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !316, line: 73, baseType: !317)
!316 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !316, line: 15, baseType: !215)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !308, line: 30, size: 128, elements: !320)
!320 = !{!321, !322}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !319, file: !308, line: 31, baseType: !193, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !319, file: !308, line: 32, baseType: !323, size: 16, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !161, line: 19, baseType: !232)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !307, file: !308, line: 232, baseType: !325, size: 64, offset: 64)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = !DISubroutineType(types: !327)
!327 = !{!314, !250, !318, !193, !328}
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !161, line: 55, baseType: !329)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !316, line: 72, baseType: !330)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !316, line: 16, baseType: !214)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !298, file: !245, line: 141, baseType: !332, size: 64, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !298, file: !245, line: 142, baseType: !334, size: 64, offset: 192)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !337)
!337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !308, line: 84, size: 320, elements: !338)
!338 = !{!339, !340, !344, !3177, !3178}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !337, file: !308, line: 85, baseType: !193, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !337, file: !308, line: 86, baseType: !341, size: 64, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = !DISubroutineType(types: !343)
!343 = !{!323, !250, !318, !159}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !337, file: !308, line: 88, baseType: !345, size: 64, offset: 128)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = !DISubroutineType(types: !347)
!347 = !{!323, !250, !348, !159}
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !308, line: 168, size: 448, elements: !350)
!350 = !{!351, !352, !353, !354, !3172, !3173}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !349, file: !308, line: 169, baseType: !319, size: 128)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !349, file: !308, line: 170, baseType: !328, size: 64, offset: 128)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !349, file: !308, line: 171, baseType: !165, size: 64, offset: 192)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !349, file: !308, line: 172, baseType: !355, size: 64, offset: 256)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = !DISubroutineType(types: !357)
!357 = !{!314, !358, !250, !348, !283, !529, !328}
!358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !75, line: 916, size: 1856, align: 32, elements: !360)
!360 = !{!361, !379, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3155, !3156, !3165, !3166, !3167, !3168, !3169, !3170, !3171}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !359, file: !75, line: 920, baseType: !362, size: 128)
!362 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !359, file: !75, line: 917, size: 128, elements: !363)
!363 = !{!364, !370}
!364 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !362, file: !75, line: 918, baseType: !365, size: 64)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !366, line: 58, size: 64, elements: !367)
!366 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!367 = !{!368}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !365, file: !366, line: 59, baseType: !369, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !362, file: !75, line: 919, baseType: !371, size: 128, align: 64)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !161, line: 216, size: 128, align: 64, elements: !372)
!372 = !{!373, !375}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !371, file: !161, line: 217, baseType: !374, size: 64)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !371, file: !161, line: 218, baseType: !376, size: 64, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = !DISubroutineType(types: !378)
!378 = !{null, !374}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !359, file: !75, line: 921, baseType: !380, size: 128, offset: 128)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !381, line: 8, size: 128, elements: !382)
!381 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!382 = !{!383, !387}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !380, file: !381, line: 9, baseType: !384, size: 64)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!385 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !386, line: 18, flags: DIFlagFwdDecl)
!386 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!387 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !380, file: !381, line: 10, baseType: !388, size: 64, offset: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !386, line: 89, size: 1536, elements: !390)
!390 = !{!391, !392, !402, !410, !411, !426, !3105, !3107, !3119, !3120, !3121, !3122, !3123, !3129, !3130, !3131}
!391 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !389, file: !386, line: 91, baseType: !7, size: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !389, file: !386, line: 92, baseType: !393, size: 32, offset: 32)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !394, line: 277, baseType: !395)
!394 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !394, line: 277, size: 32, elements: !396)
!396 = !{!397}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !395, file: !394, line: 277, baseType: !398, size: 32)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !394, line: 70, baseType: !399)
!399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !394, line: 65, size: 32, elements: !400)
!400 = !{!401}
!401 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !399, file: !394, line: 66, baseType: !7, size: 32)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !389, file: !386, line: 93, baseType: !403, size: 128, offset: 64)
!403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !404, line: 38, size: 128, elements: !405)
!404 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!405 = !{!406, !408}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !403, file: !404, line: 39, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !403, file: !404, line: 39, baseType: !409, size: 64, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !389, file: !386, line: 94, baseType: !388, size: 64, offset: 192)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !389, file: !386, line: 95, baseType: !412, size: 128, offset: 256)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !386, line: 47, size: 128, elements: !413)
!413 = !{!414, !423}
!414 = !DIDerivedType(tag: DW_TAG_member, scope: !412, file: !386, line: 48, baseType: !415, size: 64)
!415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !412, file: !386, line: 48, size: 64, elements: !416)
!416 = !{!417, !422}
!417 = !DIDerivedType(tag: DW_TAG_member, scope: !415, file: !386, line: 49, baseType: !418, size: 64)
!418 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !415, file: !386, line: 49, size: 64, elements: !419)
!419 = !{!420, !421}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !418, file: !386, line: 50, baseType: !155, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !418, file: !386, line: 50, baseType: !155, size: 32, offset: 32)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !415, file: !386, line: 52, baseType: !184, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !412, file: !386, line: 54, baseType: !424, size: 64, offset: 64)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !228)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !389, file: !386, line: 96, baseType: !427, size: 64, offset: 384)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !75, line: 610, size: 4224, elements: !429)
!429 = !{!430, !431, !432, !440, !447, !448, !596, !2808, !2809, !2810, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !3073, !3081, !3082, !3083, !3101, !3102, !3103, !3104}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !428, file: !75, line: 611, baseType: !323, size: 16)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !428, file: !75, line: 612, baseType: !232, size: 16, offset: 16)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !428, file: !75, line: 613, baseType: !433, size: 32, offset: 32)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !434, line: 23, baseType: !435)
!434 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !434, line: 21, size: 32, elements: !436)
!436 = !{!437}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !435, file: !434, line: 22, baseType: !438, size: 32)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !161, line: 32, baseType: !439)
!439 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !316, line: 49, baseType: !7)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !428, file: !75, line: 614, baseType: !441, size: 32, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !434, line: 28, baseType: !442)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !434, line: 26, size: 32, elements: !443)
!443 = !{!444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !442, file: !434, line: 27, baseType: !445, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !161, line: 33, baseType: !446)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !316, line: 50, baseType: !7)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !428, file: !75, line: 615, baseType: !7, size: 32, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !428, file: !75, line: 622, baseType: !449, size: 64, offset: 128)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !75, line: 1864, size: 1536, align: 512, elements: !452)
!452 = !{!453, !457, !470, !474, !480, !484, !490, !494, !498, !502, !506, !507, !513, !517, !543, !572, !576, !582, !587, !591, !592}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !451, file: !75, line: 1865, baseType: !454, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DISubroutineType(types: !456)
!456 = !{!388, !427, !388, !7}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !451, file: !75, line: 1866, baseType: !458, size: 64, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DISubroutineType(types: !460)
!460 = !{!193, !388, !427, !461}
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !463, line: 10, size: 128, elements: !464)
!463 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!464 = !{!465, !469}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !462, file: !463, line: 11, baseType: !466, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DISubroutineType(types: !468)
!468 = !{null, !165}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !462, file: !463, line: 12, baseType: !165, size: 64, offset: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !451, file: !75, line: 1867, baseType: !471, size: 64, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DISubroutineType(types: !473)
!473 = !{!159, !427, !159}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !451, file: !75, line: 1868, baseType: !475, size: 64, offset: 192)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = !DISubroutineType(types: !477)
!477 = !{!478, !427, !159}
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !75, line: 581, flags: DIFlagFwdDecl)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !451, file: !75, line: 1870, baseType: !481, size: 64, offset: 256)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DISubroutineType(types: !483)
!483 = !{!159, !388, !283, !159}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !451, file: !75, line: 1872, baseType: !485, size: 64, offset: 320)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{!159, !427, !388, !323, !488}
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !161, line: 30, baseType: !489)
!489 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !451, file: !75, line: 1873, baseType: !491, size: 64, offset: 384)
!491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!492 = !DISubroutineType(types: !493)
!493 = !{!159, !388, !427, !388}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !451, file: !75, line: 1874, baseType: !495, size: 64, offset: 448)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = !DISubroutineType(types: !497)
!497 = !{!159, !427, !388}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !451, file: !75, line: 1875, baseType: !499, size: 64, offset: 512)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DISubroutineType(types: !501)
!501 = !{!159, !427, !388, !193}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !451, file: !75, line: 1876, baseType: !503, size: 64, offset: 576)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DISubroutineType(types: !505)
!505 = !{!159, !427, !388, !323}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !451, file: !75, line: 1877, baseType: !495, size: 64, offset: 640)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !451, file: !75, line: 1878, baseType: !508, size: 64, offset: 704)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DISubroutineType(types: !510)
!510 = !{!159, !427, !388, !323, !511}
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !161, line: 16, baseType: !512)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !161, line: 13, baseType: !155)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !451, file: !75, line: 1879, baseType: !514, size: 64, offset: 768)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{!159, !427, !388, !427, !388, !7}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !451, file: !75, line: 1881, baseType: !518, size: 64, offset: 832)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = !DISubroutineType(types: !520)
!520 = !{!159, !388, !521}
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !75, line: 219, size: 640, elements: !523)
!523 = !{!524, !525, !526, !527, !528, !532, !540, !541, !542}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !522, file: !75, line: 220, baseType: !7, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !522, file: !75, line: 221, baseType: !323, size: 16, offset: 32)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !522, file: !75, line: 222, baseType: !433, size: 32, offset: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !522, file: !75, line: 223, baseType: !441, size: 32, offset: 96)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !522, file: !75, line: 224, baseType: !529, size: 64, offset: 128)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !161, line: 46, baseType: !530)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !316, line: 88, baseType: !531)
!531 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !522, file: !75, line: 225, baseType: !533, size: 128, offset: 192)
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !534, line: 13, size: 128, elements: !535)
!534 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!535 = !{!536, !539}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !533, file: !534, line: 14, baseType: !537, size: 64)
!537 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !534, line: 8, baseType: !538)
!538 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !158, line: 30, baseType: !531)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !533, file: !534, line: 15, baseType: !215, size: 64, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !522, file: !75, line: 226, baseType: !533, size: 128, offset: 320)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !522, file: !75, line: 227, baseType: !533, size: 128, offset: 448)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !522, file: !75, line: 234, baseType: !358, size: 64, offset: 576)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !451, file: !75, line: 1882, baseType: !544, size: 64, offset: 896)
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DISubroutineType(types: !546)
!546 = !{!159, !547, !549, !155, !7}
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !380)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !551, line: 22, size: 1152, elements: !552)
!551 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!552 = !{!553, !554, !555, !556, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !550, file: !551, line: 23, baseType: !155, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !550, file: !551, line: 24, baseType: !323, size: 16, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !550, file: !551, line: 25, baseType: !7, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !550, file: !551, line: 26, baseType: !557, size: 32, offset: 96)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !161, line: 104, baseType: !155)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !550, file: !551, line: 27, baseType: !184, size: 64, offset: 128)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !550, file: !551, line: 28, baseType: !184, size: 64, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !550, file: !551, line: 37, baseType: !184, size: 64, offset: 256)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !550, file: !551, line: 38, baseType: !511, size: 32, offset: 320)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !550, file: !551, line: 39, baseType: !511, size: 32, offset: 352)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !550, file: !551, line: 40, baseType: !433, size: 32, offset: 384)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !550, file: !551, line: 41, baseType: !441, size: 32, offset: 416)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !550, file: !551, line: 42, baseType: !529, size: 64, offset: 448)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !550, file: !551, line: 43, baseType: !533, size: 128, offset: 512)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !550, file: !551, line: 44, baseType: !533, size: 128, offset: 640)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !550, file: !551, line: 45, baseType: !533, size: 128, offset: 768)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !550, file: !551, line: 46, baseType: !533, size: 128, offset: 896)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !550, file: !551, line: 47, baseType: !184, size: 64, offset: 1024)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !550, file: !551, line: 48, baseType: !184, size: 64, offset: 1088)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !451, file: !75, line: 1883, baseType: !573, size: 64, offset: 960)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = !DISubroutineType(types: !575)
!575 = !{!314, !388, !283, !328}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !451, file: !75, line: 1884, baseType: !577, size: 64, offset: 1024)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{!159, !427, !580, !184, !184}
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !75, line: 50, flags: DIFlagFwdDecl)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !451, file: !75, line: 1886, baseType: !583, size: 64, offset: 1088)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{!159, !427, !586, !159}
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !451, file: !75, line: 1887, baseType: !588, size: 64, offset: 1152)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!159, !427, !388, !358, !7, !323}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !451, file: !75, line: 1890, baseType: !503, size: 64, offset: 1216)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !451, file: !75, line: 1891, baseType: !593, size: 64, offset: 1280)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DISubroutineType(types: !595)
!595 = !{!159, !427, !478, !159}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !428, file: !75, line: 623, baseType: !597, size: 64, offset: 192)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !75, line: 1416, size: 9472, elements: !599)
!599 = !{!600, !601, !602, !603, !604, !605, !646, !2415, !2497, !2580, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2596, !2600, !2601, !2604, !2605, !2608, !2609, !2610, !2651, !2678, !2679, !2680, !2681, !2682, !2683, !2686, !2688, !2695, !2696, !2698, !2699, !2700, !2759, !2760, !2775, !2776, !2777, !2778, !2779, !2782, !2783, !2784, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !598, file: !75, line: 1417, baseType: !171, size: 128)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !598, file: !75, line: 1418, baseType: !511, size: 32, offset: 128)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !598, file: !75, line: 1419, baseType: !228, size: 8, offset: 160)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !598, file: !75, line: 1420, baseType: !214, size: 64, offset: 192)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !598, file: !75, line: 1421, baseType: !529, size: 64, offset: 256)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !598, file: !75, line: 1422, baseType: !606, size: 64, offset: 320)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !75, line: 2228, size: 576, elements: !608)
!608 = !{!609, !610, !611, !618, !622, !626, !630, !631, !632, !636, !639, !640, !641, !643, !644, !645}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !607, file: !75, line: 2229, baseType: !193, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !607, file: !75, line: 2230, baseType: !159, size: 32, offset: 64)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !607, file: !75, line: 2238, baseType: !612, size: 64, offset: 128)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = !DISubroutineType(types: !614)
!614 = !{!159, !615}
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!616 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !617, line: 28, flags: DIFlagFwdDecl)
!617 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!618 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !607, file: !75, line: 2239, baseType: !619, size: 64, offset: 192)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !621)
!621 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !75, line: 70, flags: DIFlagFwdDecl)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !607, file: !75, line: 2240, baseType: !623, size: 64, offset: 256)
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DISubroutineType(types: !625)
!625 = !{!388, !606, !159, !193, !165}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !607, file: !75, line: 2242, baseType: !627, size: 64, offset: 320)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DISubroutineType(types: !629)
!629 = !{null, !597}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !607, file: !75, line: 2243, baseType: !162, size: 64, offset: 384)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !607, file: !75, line: 2244, baseType: !606, size: 64, offset: 448)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !607, file: !75, line: 2245, baseType: !633, size: 64, offset: 512)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !161, line: 182, size: 64, elements: !634)
!634 = !{!635}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !633, file: !161, line: 183, baseType: !220, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !607, file: !75, line: 2247, baseType: !637, offset: 576)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !638, line: 187, elements: !211)
!638 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!639 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !607, file: !75, line: 2248, baseType: !637, offset: 576)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !607, file: !75, line: 2249, baseType: !637, offset: 576)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !607, file: !75, line: 2250, baseType: !642, offset: 576)
!642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !637, elements: !284)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !607, file: !75, line: 2252, baseType: !637, offset: 576)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !607, file: !75, line: 2253, baseType: !637, offset: 576)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !607, file: !75, line: 2254, baseType: !637, offset: 576)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !598, file: !75, line: 1423, baseType: !647, size: 64, offset: 384)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !649)
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !75, line: 1935, size: 1472, elements: !650)
!650 = !{!651, !655, !659, !660, !664, !670, !674, !675, !676, !680, !684, !685, !686, !687, !693, !698, !699, !706, !707, !708, !709, !2399, !2414}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !649, file: !75, line: 1936, baseType: !652, size: 64)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DISubroutineType(types: !654)
!654 = !{!427, !597}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !649, file: !75, line: 1937, baseType: !656, size: 64, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !657, size: 64)
!657 = !DISubroutineType(types: !658)
!658 = !{null, !427}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !649, file: !75, line: 1938, baseType: !656, size: 64, offset: 128)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !649, file: !75, line: 1940, baseType: !661, size: 64, offset: 192)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DISubroutineType(types: !663)
!663 = !{null, !427, !159}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !649, file: !75, line: 1941, baseType: !665, size: 64, offset: 256)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{!159, !427, !668}
!668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !669, size: 64)
!669 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !45, line: 40, flags: DIFlagFwdDecl)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !649, file: !75, line: 1942, baseType: !671, size: 64, offset: 320)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DISubroutineType(types: !673)
!673 = !{!159, !427}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !649, file: !75, line: 1943, baseType: !656, size: 64, offset: 384)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !649, file: !75, line: 1944, baseType: !627, size: 64, offset: 448)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !649, file: !75, line: 1945, baseType: !677, size: 64, offset: 512)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{!159, !597, !159}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !649, file: !75, line: 1946, baseType: !681, size: 64, offset: 576)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!159, !597}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !649, file: !75, line: 1947, baseType: !681, size: 64, offset: 640)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !649, file: !75, line: 1948, baseType: !681, size: 64, offset: 704)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !649, file: !75, line: 1949, baseType: !681, size: 64, offset: 768)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !649, file: !75, line: 1950, baseType: !688, size: 64, offset: 832)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DISubroutineType(types: !690)
!690 = !{!159, !388, !691}
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !75, line: 57, flags: DIFlagFwdDecl)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !649, file: !75, line: 1951, baseType: !694, size: 64, offset: 896)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{!159, !597, !697, !283}
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !649, file: !75, line: 1952, baseType: !627, size: 64, offset: 960)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !649, file: !75, line: 1954, baseType: !700, size: 64, offset: 1024)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{!159, !703, !388}
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !705, line: 539, flags: DIFlagFwdDecl)
!705 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!706 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !649, file: !75, line: 1955, baseType: !700, size: 64, offset: 1088)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !649, file: !75, line: 1956, baseType: !700, size: 64, offset: 1152)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !649, file: !75, line: 1957, baseType: !700, size: 64, offset: 1216)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !649, file: !75, line: 1963, baseType: !710, size: 64, offset: 1280)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!159, !597, !713, !160}
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !715, line: 68, size: 512, align: 128, elements: !716)
!715 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!716 = !{!717, !718, !2391, !2398}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !714, file: !715, line: 69, baseType: !214, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, scope: !714, file: !715, line: 77, baseType: !719, size: 320, offset: 64)
!719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !714, file: !715, line: 77, size: 320, elements: !720)
!720 = !{!721, !906, !911, !939, !947, !953, !2322, !2390}
!721 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !715, line: 78, baseType: !722, size: 320)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !719, file: !715, line: 78, size: 320, elements: !723)
!723 = !{!724, !725, !904, !905}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !722, file: !715, line: 84, baseType: !171, size: 128)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !722, file: !715, line: 86, baseType: !726, size: 64, offset: 128)
!726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !75, line: 451, size: 1216, align: 64, elements: !728)
!728 = !{!729, !730, !737, !738, !743, !758, !774, !775, !776, !777, !897, !898, !901, !902, !903}
!729 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !727, file: !75, line: 452, baseType: !427, size: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !727, file: !75, line: 453, baseType: !731, size: 128, offset: 64)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !732, line: 292, size: 128, elements: !733)
!732 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!733 = !{!734, !735, !736}
!734 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !731, file: !732, line: 293, baseType: !197)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !731, file: !732, line: 295, baseType: !160, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !731, file: !732, line: 296, baseType: !165, size: 64, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !727, file: !75, line: 454, baseType: !160, size: 32, offset: 192)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !727, file: !75, line: 455, baseType: !739, size: 32, offset: 224)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !161, line: 168, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !161, line: 166, size: 32, elements: !741)
!741 = !{!742}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !740, file: !161, line: 167, baseType: !159, size: 32)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !727, file: !75, line: 460, baseType: !744, size: 128, offset: 256)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !745, line: 125, size: 128, elements: !746)
!745 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!746 = !{!747, !757}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !744, file: !745, line: 126, baseType: !748, size: 64)
!748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !745, line: 31, size: 64, elements: !749)
!749 = !{!750}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !748, file: !745, line: 32, baseType: !751, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !745, line: 24, size: 192, align: 64, elements: !753)
!753 = !{!754, !755, !756}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !752, file: !745, line: 25, baseType: !214, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !752, file: !745, line: 26, baseType: !751, size: 64, offset: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !752, file: !745, line: 27, baseType: !751, size: 64, offset: 128)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !744, file: !745, line: 127, baseType: !751, size: 64, offset: 64)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !727, file: !75, line: 461, baseType: !759, size: 256, offset: 384)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !760, line: 35, size: 256, elements: !761)
!760 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!761 = !{!762, !770, !771, !773}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !759, file: !760, line: 36, baseType: !763, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !764, line: 13, baseType: !765)
!764 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !161, line: 175, baseType: !766)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !161, line: 173, size: 64, elements: !767)
!767 = !{!768}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !766, file: !161, line: 174, baseType: !769, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !156, line: 22, baseType: !538)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !759, file: !760, line: 42, baseType: !763, size: 64, offset: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !759, file: !760, line: 46, baseType: !772, offset: 128)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !198, line: 29, baseType: !205)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !759, file: !760, line: 47, baseType: !171, size: 128, offset: 128)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !727, file: !75, line: 462, baseType: !214, size: 64, offset: 640)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !727, file: !75, line: 463, baseType: !214, size: 64, offset: 704)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !727, file: !75, line: 464, baseType: !214, size: 64, offset: 768)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !727, file: !75, line: 465, baseType: !778, size: 64, offset: 832)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !780)
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !75, line: 367, size: 1408, elements: !781)
!781 = !{!782, !786, !790, !794, !798, !802, !808, !814, !818, !823, !827, !831, !835, !861, !865, !871, !872, !873, !877, !882, !886, !893}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !780, file: !75, line: 368, baseType: !783, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DISubroutineType(types: !785)
!785 = !{!159, !713, !668}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !780, file: !75, line: 369, baseType: !787, size: 64, offset: 64)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DISubroutineType(types: !789)
!789 = !{!159, !358, !713}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !780, file: !75, line: 372, baseType: !791, size: 64, offset: 128)
!791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!792 = !DISubroutineType(types: !793)
!793 = !{!159, !726, !668}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !780, file: !75, line: 375, baseType: !795, size: 64, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = !DISubroutineType(types: !797)
!797 = !{!159, !713}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !780, file: !75, line: 381, baseType: !799, size: 64, offset: 256)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DISubroutineType(types: !801)
!801 = !{!159, !358, !726, !174, !7}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !780, file: !75, line: 383, baseType: !803, size: 64, offset: 320)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DISubroutineType(types: !805)
!805 = !{null, !806}
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !75, line: 290, flags: DIFlagFwdDecl)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !780, file: !75, line: 385, baseType: !809, size: 64, offset: 384)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!159, !358, !726, !529, !7, !7, !812, !813}
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !780, file: !75, line: 388, baseType: !815, size: 64, offset: 448)
!815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !816, size: 64)
!816 = !DISubroutineType(types: !817)
!817 = !{!159, !358, !726, !529, !7, !7, !713, !165}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !780, file: !75, line: 393, baseType: !819, size: 64, offset: 512)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DISubroutineType(types: !821)
!821 = !{!822, !726, !822}
!822 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !161, line: 125, baseType: !184)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !780, file: !75, line: 394, baseType: !824, size: 64, offset: 576)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{null, !713, !7, !7}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !780, file: !75, line: 395, baseType: !828, size: 64, offset: 640)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{!159, !713, !160}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !780, file: !75, line: 396, baseType: !832, size: 64, offset: 704)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{null, !713}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !780, file: !75, line: 397, baseType: !836, size: 64, offset: 768)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{!314, !839, !859}
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !75, line: 320, size: 384, elements: !841)
!841 = !{!842, !843, !844, !848, !849, !850, !851, !852}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !840, file: !75, line: 321, baseType: !358, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !840, file: !75, line: 326, baseType: !529, size: 64, offset: 64)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !840, file: !75, line: 327, baseType: !845, size: 64, offset: 128)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{null, !839, !215, !215}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !840, file: !75, line: 328, baseType: !165, size: 64, offset: 192)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !840, file: !75, line: 329, baseType: !159, size: 32, offset: 256)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !840, file: !75, line: 330, baseType: !230, size: 16, offset: 288)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !840, file: !75, line: 331, baseType: !230, size: 16, offset: 304)
!852 = !DIDerivedType(tag: DW_TAG_member, scope: !840, file: !75, line: 332, baseType: !853, size: 64, offset: 320)
!853 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !840, file: !75, line: 332, size: 64, elements: !854)
!854 = !{!855, !856}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !853, file: !75, line: 333, baseType: !7, size: 32)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !853, file: !75, line: 334, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !75, line: 334, flags: DIFlagFwdDecl)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !75, line: 64, flags: DIFlagFwdDecl)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !780, file: !75, line: 402, baseType: !862, size: 64, offset: 832)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DISubroutineType(types: !864)
!864 = !{!159, !726, !713, !713, !37}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !780, file: !75, line: 404, baseType: !866, size: 64, offset: 896)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DISubroutineType(types: !868)
!868 = !{!488, !713, !869}
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !870, line: 305, baseType: !7)
!870 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!871 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !780, file: !75, line: 405, baseType: !832, size: 64, offset: 960)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !780, file: !75, line: 406, baseType: !795, size: 64, offset: 1024)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !780, file: !75, line: 407, baseType: !874, size: 64, offset: 1088)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{!159, !713, !214, !214}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !780, file: !75, line: 409, baseType: !878, size: 64, offset: 1152)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DISubroutineType(types: !880)
!880 = !{null, !713, !881, !881}
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !780, file: !75, line: 410, baseType: !883, size: 64, offset: 1216)
!883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!884 = !DISubroutineType(types: !885)
!885 = !{!159, !726, !713}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !780, file: !75, line: 413, baseType: !887, size: 64, offset: 1280)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DISubroutineType(types: !889)
!889 = !{!159, !890, !358, !892}
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !75, line: 61, flags: DIFlagFwdDecl)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !780, file: !75, line: 415, baseType: !894, size: 64, offset: 1344)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DISubroutineType(types: !896)
!896 = !{null, !358}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !727, file: !75, line: 466, baseType: !214, size: 64, offset: 896)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !727, file: !75, line: 467, baseType: !899, size: 32, offset: 960)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !900, line: 8, baseType: !155)
!900 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!901 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !727, file: !75, line: 468, baseType: !197, offset: 992)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !727, file: !75, line: 469, baseType: !171, size: 128, offset: 1024)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !727, file: !75, line: 470, baseType: !165, size: 64, offset: 1152)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !722, file: !715, line: 87, baseType: !214, size: 64, offset: 192)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !722, file: !715, line: 94, baseType: !214, size: 64, offset: 256)
!906 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !715, line: 96, baseType: !907, size: 64)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !719, file: !715, line: 96, size: 64, elements: !908)
!908 = !{!909}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !907, file: !715, line: 101, baseType: !910, size: 64)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !161, line: 143, baseType: !184)
!911 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !715, line: 103, baseType: !912, size: 320)
!912 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !719, file: !715, line: 103, size: 320, elements: !913)
!913 = !{!914, !924, !927, !928}
!914 = !DIDerivedType(tag: DW_TAG_member, scope: !912, file: !715, line: 104, baseType: !915, size: 128)
!915 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !912, file: !715, line: 104, size: 128, elements: !916)
!916 = !{!917, !918}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !915, file: !715, line: 105, baseType: !171, size: 128)
!918 = !DIDerivedType(tag: DW_TAG_member, scope: !915, file: !715, line: 106, baseType: !919, size: 128)
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !915, file: !715, line: 106, size: 128, elements: !920)
!920 = !{!921, !922, !923}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !919, file: !715, line: 107, baseType: !713, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !919, file: !715, line: 109, baseType: !159, size: 32, offset: 64)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !919, file: !715, line: 110, baseType: !159, size: 32, offset: 96)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !912, file: !715, line: 117, baseType: !925, size: 64, offset: 128)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !715, line: 117, flags: DIFlagFwdDecl)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !912, file: !715, line: 119, baseType: !165, size: 64, offset: 192)
!928 = !DIDerivedType(tag: DW_TAG_member, scope: !912, file: !715, line: 120, baseType: !929, size: 64, offset: 256)
!929 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !912, file: !715, line: 120, size: 64, elements: !930)
!930 = !{!931, !932, !933}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !929, file: !715, line: 121, baseType: !165, size: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !929, file: !715, line: 122, baseType: !214, size: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, scope: !929, file: !715, line: 123, baseType: !934, size: 32)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !929, file: !715, line: 123, size: 32, elements: !935)
!935 = !{!936, !937, !938}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !934, file: !715, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !934, file: !715, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !934, file: !715, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !715, line: 130, baseType: !940, size: 192)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !719, file: !715, line: 130, size: 192, elements: !941)
!941 = !{!942, !943, !944, !945, !946}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !940, file: !715, line: 131, baseType: !214, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !940, file: !715, line: 134, baseType: !228, size: 8, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !940, file: !715, line: 135, baseType: !228, size: 8, offset: 72)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !940, file: !715, line: 136, baseType: !739, size: 32, offset: 96)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !940, file: !715, line: 137, baseType: !7, size: 32, offset: 128)
!947 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !715, line: 139, baseType: !948, size: 256)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !719, file: !715, line: 139, size: 256, elements: !949)
!949 = !{!950, !951, !952}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !948, file: !715, line: 140, baseType: !214, size: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !948, file: !715, line: 141, baseType: !739, size: 32, offset: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !948, file: !715, line: 143, baseType: !171, size: 128, offset: 128)
!953 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !715, line: 145, baseType: !954, size: 256)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !719, file: !715, line: 145, size: 256, elements: !955)
!955 = !{!956, !957, !959, !960, !2321}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !954, file: !715, line: 146, baseType: !214, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !954, file: !715, line: 147, baseType: !958, size: 64, offset: 64)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !705, line: 509, baseType: !713)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !954, file: !715, line: 148, baseType: !214, size: 64, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_member, scope: !954, file: !715, line: 149, baseType: !961, size: 64, offset: 192)
!961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !954, file: !715, line: 149, size: 64, elements: !962)
!962 = !{!963, !2320}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !961, file: !715, line: 150, baseType: !964, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !715, line: 388, size: 7296, elements: !966)
!966 = !{!967, !2316}
!967 = !DIDerivedType(tag: DW_TAG_member, scope: !965, file: !715, line: 389, baseType: !968, size: 7296)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !965, file: !715, line: 389, size: 7296, elements: !969)
!969 = !{!970, !1088, !1089, !1090, !1094, !1095, !1096, !1097, !1098, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1139, !1147, !1150, !1196, !1197, !2300, !2301, !2304, !2305, !2306, !2309, !2310, !2311, !2314, !2315}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !968, file: !715, line: 390, baseType: !971, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !715, line: 305, size: 1472, elements: !973)
!973 = !{!974, !975, !976, !977, !978, !979, !980, !981, !988, !989, !994, !995, !998, !1082, !1083, !1084, !1085, !1086}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !972, file: !715, line: 308, baseType: !214, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !972, file: !715, line: 309, baseType: !214, size: 64, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !972, file: !715, line: 313, baseType: !971, size: 64, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !972, file: !715, line: 313, baseType: !971, size: 64, offset: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !972, file: !715, line: 315, baseType: !752, size: 192, align: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !972, file: !715, line: 323, baseType: !214, size: 64, offset: 448)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !972, file: !715, line: 327, baseType: !964, size: 64, offset: 512)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !972, file: !715, line: 333, baseType: !982, size: 64, offset: 576)
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !705, line: 284, baseType: !983)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !705, line: 284, size: 64, elements: !984)
!984 = !{!985}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !983, file: !705, line: 284, baseType: !986, size: 64)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !987, line: 19, baseType: !214)
!987 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!988 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !972, file: !715, line: 334, baseType: !214, size: 64, offset: 640)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !972, file: !715, line: 343, baseType: !990, size: 256, offset: 704)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !972, file: !715, line: 340, size: 256, elements: !991)
!991 = !{!992, !993}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !990, file: !715, line: 341, baseType: !752, size: 192, align: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !990, file: !715, line: 342, baseType: !214, size: 64, offset: 192)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !972, file: !715, line: 351, baseType: !171, size: 128, offset: 960)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !972, file: !715, line: 353, baseType: !996, size: 64, offset: 1088)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !715, line: 353, flags: DIFlagFwdDecl)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !972, file: !715, line: 356, baseType: !999, size: 64, offset: 1152)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1001)
!1001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !45, line: 557, size: 832, elements: !1002)
!1002 = !{!1003, !1007, !1008, !1012, !1016, !1056, !1060, !1064, !1068, !1069, !1070, !1074, !1078}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1001, file: !45, line: 558, baseType: !1004, size: 64)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{null, !971}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1001, file: !45, line: 559, baseType: !1004, size: 64, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1001, file: !45, line: 560, baseType: !1009, size: 64, offset: 128)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!159, !971, !214}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1001, file: !45, line: 561, baseType: !1013, size: 64, offset: 192)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!159, !971}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1001, file: !45, line: 562, baseType: !1017, size: 64, offset: 256)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DISubroutineType(types: !1019)
!1019 = !{!1020, !1021}
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !715, line: 682, baseType: !7)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !45, line: 508, size: 768, elements: !1023)
!1023 = !{!1024, !1025, !1026, !1027, !1028, !1029, !1036, !1043, !1049, !1050, !1051, !1053, !1055}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1022, file: !45, line: 509, baseType: !971, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1022, file: !45, line: 510, baseType: !7, size: 32, offset: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1022, file: !45, line: 511, baseType: !160, size: 32, offset: 96)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1022, file: !45, line: 512, baseType: !214, size: 64, offset: 128)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1022, file: !45, line: 513, baseType: !214, size: 64, offset: 192)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1022, file: !45, line: 514, baseType: !1030, size: 64, offset: 256)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !705, line: 385, baseType: !1032)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !705, line: 385, size: 64, elements: !1033)
!1033 = !{!1034}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1032, file: !705, line: 385, baseType: !1035, size: 64)
!1035 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !987, line: 15, baseType: !214)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1022, file: !45, line: 516, baseType: !1037, size: 64, offset: 320)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !705, line: 359, baseType: !1039)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !705, line: 359, size: 64, elements: !1040)
!1040 = !{!1041}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1039, file: !705, line: 359, baseType: !1042, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !987, line: 16, baseType: !214)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1022, file: !45, line: 519, baseType: !1044, size: 64, offset: 384)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !987, line: 21, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !987, line: 21, size: 64, elements: !1046)
!1046 = !{!1047}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1045, file: !987, line: 21, baseType: !1048, size: 64)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !987, line: 14, baseType: !214)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1022, file: !45, line: 521, baseType: !713, size: 64, offset: 448)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1022, file: !45, line: 522, baseType: !713, size: 64, offset: 512)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1022, file: !45, line: 528, baseType: !1052, size: 64, offset: 576)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1022, file: !45, line: 532, baseType: !1054, size: 64, offset: 640)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1022, file: !45, line: 536, baseType: !958, size: 64, offset: 704)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1001, file: !45, line: 563, baseType: !1057, size: 64, offset: 320)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!1020, !1021, !44}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1001, file: !45, line: 565, baseType: !1061, size: 64, offset: 384)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{null, !1021, !214, !214}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1001, file: !45, line: 567, baseType: !1065, size: 64, offset: 448)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!214, !971}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1001, file: !45, line: 571, baseType: !1017, size: 64, offset: 512)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1001, file: !45, line: 574, baseType: !1017, size: 64, offset: 576)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1001, file: !45, line: 579, baseType: !1071, size: 64, offset: 640)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!159, !971, !214, !165, !159, !159}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1001, file: !45, line: 585, baseType: !1075, size: 64, offset: 704)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!193, !971}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1001, file: !45, line: 615, baseType: !1079, size: 64, offset: 768)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!713, !971, !214}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !972, file: !715, line: 359, baseType: !214, size: 64, offset: 1216)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !972, file: !715, line: 361, baseType: !358, size: 64, offset: 1280)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !972, file: !715, line: 362, baseType: !165, size: 64, offset: 1344)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !972, file: !715, line: 365, baseType: !763, size: 64, offset: 1408)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !972, file: !715, line: 373, baseType: !1087, offset: 1472)
!1087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !715, line: 296, elements: !211)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !968, file: !715, line: 391, baseType: !748, size: 64, offset: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !968, file: !715, line: 392, baseType: !184, size: 64, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !968, file: !715, line: 394, baseType: !1091, size: 64, offset: 192)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!214, !358, !214, !214, !214, !214}
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !968, file: !715, line: 398, baseType: !214, size: 64, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !968, file: !715, line: 399, baseType: !214, size: 64, offset: 320)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !968, file: !715, line: 405, baseType: !214, size: 64, offset: 384)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !968, file: !715, line: 406, baseType: !214, size: 64, offset: 448)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !968, file: !715, line: 407, baseType: !1099, size: 64, offset: 512)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !705, line: 286, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !705, line: 286, size: 64, elements: !1102)
!1102 = !{!1103}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1101, file: !705, line: 286, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !987, line: 18, baseType: !214)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !968, file: !715, line: 416, baseType: !739, size: 32, offset: 576)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !968, file: !715, line: 428, baseType: !739, size: 32, offset: 608)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !968, file: !715, line: 437, baseType: !739, size: 32, offset: 640)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !968, file: !715, line: 447, baseType: !739, size: 32, offset: 672)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !968, file: !715, line: 450, baseType: !763, size: 64, offset: 704)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !968, file: !715, line: 452, baseType: !159, size: 32, offset: 768)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !968, file: !715, line: 454, baseType: !197, offset: 800)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !968, file: !715, line: 457, baseType: !759, size: 256, offset: 832)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !968, file: !715, line: 459, baseType: !171, size: 128, offset: 1088)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !968, file: !715, line: 466, baseType: !214, size: 64, offset: 1216)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !968, file: !715, line: 467, baseType: !214, size: 64, offset: 1280)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !968, file: !715, line: 469, baseType: !214, size: 64, offset: 1344)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !968, file: !715, line: 470, baseType: !214, size: 64, offset: 1408)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !968, file: !715, line: 471, baseType: !765, size: 64, offset: 1472)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !968, file: !715, line: 472, baseType: !214, size: 64, offset: 1536)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !968, file: !715, line: 473, baseType: !214, size: 64, offset: 1600)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !968, file: !715, line: 474, baseType: !214, size: 64, offset: 1664)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !968, file: !715, line: 475, baseType: !214, size: 64, offset: 1728)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !968, file: !715, line: 477, baseType: !197, offset: 1792)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !968, file: !715, line: 478, baseType: !214, size: 64, offset: 1792)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !968, file: !715, line: 478, baseType: !214, size: 64, offset: 1856)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !968, file: !715, line: 478, baseType: !214, size: 64, offset: 1920)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !968, file: !715, line: 478, baseType: !214, size: 64, offset: 1984)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !968, file: !715, line: 479, baseType: !214, size: 64, offset: 2048)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !968, file: !715, line: 479, baseType: !214, size: 64, offset: 2112)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !968, file: !715, line: 479, baseType: !214, size: 64, offset: 2176)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !968, file: !715, line: 480, baseType: !214, size: 64, offset: 2240)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !968, file: !715, line: 480, baseType: !214, size: 64, offset: 2304)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !968, file: !715, line: 480, baseType: !214, size: 64, offset: 2368)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !968, file: !715, line: 480, baseType: !214, size: 64, offset: 2432)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !968, file: !715, line: 482, baseType: !1136, size: 2816, offset: 2496)
!1136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 2816, elements: !1137)
!1137 = !{!1138}
!1138 = !DISubrange(count: 44)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !968, file: !715, line: 488, baseType: !1140, size: 256, offset: 5312)
!1140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1141, line: 60, size: 256, elements: !1142)
!1141 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1142 = !{!1143}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1140, file: !1141, line: 61, baseType: !1144, size: 256)
!1144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !763, size: 256, elements: !1145)
!1145 = !{!1146}
!1146 = !DISubrange(count: 4)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !968, file: !715, line: 490, baseType: !1148, size: 64, offset: 5568)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !715, line: 490, flags: DIFlagFwdDecl)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !968, file: !715, line: 493, baseType: !1151, size: 896, offset: 5632)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1152, line: 53, baseType: !1153)
!1152 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1153 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1152, line: 13, size: 896, elements: !1154)
!1154 = !{!1155, !1156, !1157, !1158, !1161, !1162, !1169, !1170, !1190, !1191, !1192}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1153, file: !1152, line: 18, baseType: !184, size: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1153, file: !1152, line: 28, baseType: !765, size: 64, offset: 64)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1153, file: !1152, line: 31, baseType: !759, size: 256, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1153, file: !1152, line: 32, baseType: !1159, size: 64, offset: 384)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1152, line: 32, flags: DIFlagFwdDecl)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1153, file: !1152, line: 37, baseType: !232, size: 16, offset: 448)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1153, file: !1152, line: 40, baseType: !1163, size: 192, offset: 512)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1164, line: 53, size: 192, elements: !1165)
!1164 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1165 = !{!1166, !1167, !1168}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1163, file: !1164, line: 54, baseType: !763, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1163, file: !1164, line: 55, baseType: !197, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1163, file: !1164, line: 59, baseType: !171, size: 128, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1153, file: !1152, line: 41, baseType: !165, size: 64, offset: 704)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1153, file: !1152, line: 42, baseType: !1171, size: 64, offset: 768)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1173)
!1173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1174, line: 13, size: 896, elements: !1175)
!1174 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1175 = !{!1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1173, file: !1174, line: 14, baseType: !165, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1173, file: !1174, line: 15, baseType: !214, size: 64, offset: 64)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1173, file: !1174, line: 17, baseType: !214, size: 64, offset: 128)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1173, file: !1174, line: 17, baseType: !214, size: 64, offset: 192)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1173, file: !1174, line: 19, baseType: !215, size: 64, offset: 256)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1173, file: !1174, line: 21, baseType: !215, size: 64, offset: 320)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1173, file: !1174, line: 22, baseType: !215, size: 64, offset: 384)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1173, file: !1174, line: 23, baseType: !215, size: 64, offset: 448)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1173, file: !1174, line: 24, baseType: !215, size: 64, offset: 512)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1173, file: !1174, line: 25, baseType: !215, size: 64, offset: 576)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1173, file: !1174, line: 26, baseType: !215, size: 64, offset: 640)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1173, file: !1174, line: 27, baseType: !215, size: 64, offset: 704)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1173, file: !1174, line: 28, baseType: !215, size: 64, offset: 768)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1173, file: !1174, line: 29, baseType: !215, size: 64, offset: 832)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1153, file: !1152, line: 44, baseType: !739, size: 32, offset: 832)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1153, file: !1152, line: 50, baseType: !230, size: 16, offset: 864)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1153, file: !1152, line: 51, baseType: !1193, size: 16, offset: 880)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !156, line: 18, baseType: !1194)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !158, line: 23, baseType: !1195)
!1195 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !968, file: !715, line: 495, baseType: !214, size: 64, offset: 6528)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !968, file: !715, line: 497, baseType: !1198, size: 64, offset: 6592)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !715, line: 381, size: 384, elements: !1200)
!1200 = !{!1201, !1202, !2299}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1199, file: !715, line: 382, baseType: !739, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1199, file: !715, line: 383, baseType: !1203, size: 128, offset: 64)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !715, line: 376, size: 128, elements: !1204)
!1204 = !{!1205, !2297}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1203, file: !715, line: 377, baseType: !1206, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1208, line: 640, size: 48640, elements: !1209)
!1208 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1209 = !{!1210, !1216, !1217, !1218, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1235, !1253, !1264, !1347, !1348, !1349, !1360, !1361, !1363, !1364, !1365, !1366, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1444, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1482, !1484, !1485, !1486, !1498, !1499, !1500, !1501, !1502, !1503, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1527, !1532, !1716, !1717, !1718, !1719, !1723, !1726, !1729, !1732, !1735, !1738, !1839, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1885, !1886, !1887, !1888, !1889, !1894, !1895, !1896, !1899, !1900, !1903, !1906, !1909, !1912, !1955, !1958, !1959, !2038, !2039, !2042, !2043, !2046, !2047, !2048, !2052, !2053, !2054, !2067, !2068, !2069, !2079, !2084, !2087, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1207, file: !1208, line: 646, baseType: !1211, size: 128)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1212, line: 56, size: 128, elements: !1213)
!1212 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1213 = !{!1214, !1215}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1211, file: !1212, line: 57, baseType: !214, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1211, file: !1212, line: 58, baseType: !155, size: 32, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1207, file: !1208, line: 649, baseType: !236, size: 64, offset: 128)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1207, file: !1208, line: 657, baseType: !165, size: 64, offset: 192)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1207, file: !1208, line: 658, baseType: !1219, size: 32, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1220, line: 113, baseType: !1221)
!1220 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1220, line: 111, size: 32, elements: !1222)
!1222 = !{!1223}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1221, file: !1220, line: 112, baseType: !739, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1207, file: !1208, line: 660, baseType: !7, size: 32, offset: 288)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1207, file: !1208, line: 661, baseType: !7, size: 32, offset: 320)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1207, file: !1208, line: 684, baseType: !159, size: 32, offset: 352)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1207, file: !1208, line: 686, baseType: !159, size: 32, offset: 384)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1207, file: !1208, line: 687, baseType: !159, size: 32, offset: 416)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1207, file: !1208, line: 688, baseType: !159, size: 32, offset: 448)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1207, file: !1208, line: 689, baseType: !7, size: 32, offset: 480)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1207, file: !1208, line: 691, baseType: !1232, size: 64, offset: 512)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1234)
!1234 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1208, line: 691, flags: DIFlagFwdDecl)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1207, file: !1208, line: 692, baseType: !1236, size: 832, offset: 576)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1208, line: 451, size: 832, elements: !1237)
!1237 = !{!1238, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1236, file: !1208, line: 453, baseType: !1239, size: 128)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1208, line: 325, size: 128, elements: !1240)
!1240 = !{!1241, !1242}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1239, file: !1208, line: 326, baseType: !214, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1239, file: !1208, line: 327, baseType: !155, size: 32, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1236, file: !1208, line: 454, baseType: !752, size: 192, align: 64, offset: 128)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1236, file: !1208, line: 455, baseType: !171, size: 128, offset: 320)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1236, file: !1208, line: 456, baseType: !7, size: 32, offset: 448)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1236, file: !1208, line: 458, baseType: !184, size: 64, offset: 512)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1236, file: !1208, line: 459, baseType: !184, size: 64, offset: 576)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1236, file: !1208, line: 460, baseType: !184, size: 64, offset: 640)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1236, file: !1208, line: 461, baseType: !184, size: 64, offset: 704)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1236, file: !1208, line: 463, baseType: !184, size: 64, offset: 768)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1236, file: !1208, line: 465, baseType: !1252, offset: 832)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1208, line: 415, elements: !211)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1207, file: !1208, line: 693, baseType: !1254, size: 384, offset: 1408)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1208, line: 489, size: 384, elements: !1255)
!1255 = !{!1256, !1257, !1258, !1259, !1260, !1261, !1262}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1254, file: !1208, line: 490, baseType: !171, size: 128)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1254, file: !1208, line: 491, baseType: !214, size: 64, offset: 128)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1254, file: !1208, line: 492, baseType: !214, size: 64, offset: 192)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1254, file: !1208, line: 493, baseType: !7, size: 32, offset: 256)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1254, file: !1208, line: 494, baseType: !232, size: 16, offset: 288)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1254, file: !1208, line: 495, baseType: !232, size: 16, offset: 304)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1254, file: !1208, line: 497, baseType: !1263, size: 64, offset: 320)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1207, file: !1208, line: 697, baseType: !1265, size: 1792, offset: 1792)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1208, line: 507, size: 1792, elements: !1266)
!1266 = !{!1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1344, !1345}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1265, file: !1208, line: 508, baseType: !752, size: 192, align: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1265, file: !1208, line: 515, baseType: !184, size: 64, offset: 192)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1265, file: !1208, line: 516, baseType: !184, size: 64, offset: 256)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1265, file: !1208, line: 517, baseType: !184, size: 64, offset: 320)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1265, file: !1208, line: 518, baseType: !184, size: 64, offset: 384)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1265, file: !1208, line: 519, baseType: !184, size: 64, offset: 448)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1265, file: !1208, line: 526, baseType: !769, size: 64, offset: 512)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1265, file: !1208, line: 527, baseType: !184, size: 64, offset: 576)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1265, file: !1208, line: 528, baseType: !7, size: 32, offset: 640)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1265, file: !1208, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1265, file: !1208, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1265, file: !1208, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1265, file: !1208, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1265, file: !1208, line: 563, baseType: !1281, size: 512, offset: 704)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !51, line: 118, size: 512, elements: !1282)
!1282 = !{!1283, !1291, !1292, !1297, !1340, !1341, !1342, !1343}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1281, file: !51, line: 119, baseType: !1284, size: 256)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1285, line: 9, size: 256, elements: !1286)
!1285 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1286 = !{!1287, !1288}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1284, file: !1285, line: 10, baseType: !752, size: 192, align: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1284, file: !1285, line: 11, baseType: !1289, size: 64, offset: 192)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1290, line: 29, baseType: !769)
!1290 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1281, file: !51, line: 120, baseType: !1289, size: 64, offset: 256)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1281, file: !51, line: 121, baseType: !1293, size: 64, offset: 320)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!50, !1296}
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1281, file: !51, line: 122, baseType: !1298, size: 64, offset: 384)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !51, line: 159, size: 512, align: 512, elements: !1300)
!1300 = !{!1301, !1321, !1322, !1325, !1330, !1331, !1335, !1339}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1299, file: !51, line: 160, baseType: !1302, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !51, line: 214, size: 4608, align: 512, elements: !1304)
!1304 = !{!1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1303, file: !51, line: 215, baseType: !772)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1303, file: !51, line: 216, baseType: !7, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1303, file: !51, line: 217, baseType: !7, size: 32, offset: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1303, file: !51, line: 218, baseType: !7, size: 32, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1303, file: !51, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1303, file: !51, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1303, file: !51, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1303, file: !51, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1303, file: !51, line: 233, baseType: !1289, size: 64, offset: 128)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1303, file: !51, line: 234, baseType: !1296, size: 64, offset: 192)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1303, file: !51, line: 235, baseType: !1289, size: 64, offset: 256)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1303, file: !51, line: 236, baseType: !1296, size: 64, offset: 320)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1303, file: !51, line: 237, baseType: !1318, size: 4096, offset: 512)
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1299, size: 4096, elements: !1319)
!1319 = !{!1320}
!1320 = !DISubrange(count: 8)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1299, file: !51, line: 161, baseType: !7, size: 32, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1299, file: !51, line: 162, baseType: !1323, size: 32, offset: 96)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !161, line: 27, baseType: !1324)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !316, line: 96, baseType: !159)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1299, file: !51, line: 163, baseType: !1326, size: 32, offset: 128)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !394, line: 276, baseType: !1327)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !394, line: 276, size: 32, elements: !1328)
!1328 = !{!1329}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1327, file: !394, line: 276, baseType: !398, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1299, file: !51, line: 164, baseType: !1296, size: 64, offset: 192)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1299, file: !51, line: 165, baseType: !1332, size: 128, offset: 256)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1285, line: 14, size: 128, elements: !1333)
!1333 = !{!1334}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1332, file: !1285, line: 15, baseType: !744, size: 128)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1299, file: !51, line: 166, baseType: !1336, size: 64, offset: 384)
!1336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!1337 = !DISubroutineType(types: !1338)
!1338 = !{!1289}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1299, file: !51, line: 167, baseType: !1289, size: 64, offset: 448)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1281, file: !51, line: 123, baseType: !226, size: 8, offset: 448)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1281, file: !51, line: 124, baseType: !226, size: 8, offset: 456)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1281, file: !51, line: 125, baseType: !226, size: 8, offset: 464)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1281, file: !51, line: 126, baseType: !226, size: 8, offset: 472)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1265, file: !1208, line: 572, baseType: !1281, size: 512, offset: 1216)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1265, file: !1208, line: 580, baseType: !1346, size: 64, offset: 1728)
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1207, file: !1208, line: 721, baseType: !7, size: 32, offset: 3584)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1207, file: !1208, line: 722, baseType: !159, size: 32, offset: 3616)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1207, file: !1208, line: 723, baseType: !1350, size: 64, offset: 3648)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1352)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1353, line: 17, baseType: !1354)
!1353 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1353, line: 17, size: 64, elements: !1355)
!1355 = !{!1356}
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1354, file: !1353, line: 17, baseType: !1357, size: 64)
!1357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 64, elements: !1358)
!1358 = !{!1359}
!1359 = !DISubrange(count: 1)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1207, file: !1208, line: 724, baseType: !1352, size: 64, offset: 3712)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1207, file: !1208, line: 749, baseType: !1362, offset: 3776)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1208, line: 290, elements: !211)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1207, file: !1208, line: 751, baseType: !171, size: 128, offset: 3776)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1207, file: !1208, line: 757, baseType: !964, size: 64, offset: 3904)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1207, file: !1208, line: 758, baseType: !964, size: 64, offset: 3968)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1207, file: !1208, line: 761, baseType: !1367, size: 320, offset: 4032)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1141, line: 34, size: 320, elements: !1368)
!1368 = !{!1369, !1370}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1367, file: !1141, line: 35, baseType: !184, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1367, file: !1141, line: 36, baseType: !1371, size: 256, offset: 64)
!1371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !971, size: 256, elements: !1145)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1207, file: !1208, line: 766, baseType: !159, size: 32, offset: 4352)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1207, file: !1208, line: 767, baseType: !159, size: 32, offset: 4384)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1207, file: !1208, line: 768, baseType: !159, size: 32, offset: 4416)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1207, file: !1208, line: 770, baseType: !159, size: 32, offset: 4448)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1207, file: !1208, line: 772, baseType: !214, size: 64, offset: 4480)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1207, file: !1208, line: 775, baseType: !7, size: 32, offset: 4544)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1207, file: !1208, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1207, file: !1208, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1207, file: !1208, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1207, file: !1208, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1207, file: !1208, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1207, file: !1208, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1207, file: !1208, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1207, file: !1208, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1207, file: !1208, line: 831, baseType: !214, size: 64, offset: 4672)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1207, file: !1208, line: 833, baseType: !1388, size: 384, offset: 4736)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !56, line: 25, size: 384, elements: !1389)
!1389 = !{!1390, !1395}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1388, file: !56, line: 26, baseType: !1391, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!1392 = !DISubroutineType(types: !1393)
!1393 = !{!215, !1394}
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1388, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, scope: !1388, file: !56, line: 27, baseType: !1396, size: 320, offset: 64)
!1396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1388, file: !56, line: 27, size: 320, elements: !1397)
!1397 = !{!1398, !1407, !1434}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1396, file: !56, line: 36, baseType: !1399, size: 320)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1396, file: !56, line: 29, size: 320, elements: !1400)
!1400 = !{!1401, !1402, !1403, !1404, !1405, !1406}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1399, file: !56, line: 30, baseType: !233, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1399, file: !56, line: 31, baseType: !155, size: 32, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1399, file: !56, line: 32, baseType: !155, size: 32, offset: 96)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1399, file: !56, line: 33, baseType: !155, size: 32, offset: 128)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1399, file: !56, line: 34, baseType: !184, size: 64, offset: 192)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1399, file: !56, line: 35, baseType: !233, size: 64, offset: 256)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1396, file: !56, line: 46, baseType: !1408, size: 192)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1396, file: !56, line: 38, size: 192, elements: !1409)
!1409 = !{!1410, !1411, !1412, !1433}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1408, file: !56, line: 39, baseType: !1323, size: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1408, file: !56, line: 40, baseType: !55, size: 32, offset: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, scope: !1408, file: !56, line: 41, baseType: !1413, size: 64, offset: 64)
!1413 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1408, file: !56, line: 41, size: 64, elements: !1414)
!1414 = !{!1415, !1423}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1413, file: !56, line: 42, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1418, line: 7, size: 128, elements: !1419)
!1418 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1419 = !{!1420, !1422}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1417, file: !1418, line: 8, baseType: !1421, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !316, line: 93, baseType: !531)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1417, file: !1418, line: 9, baseType: !531, size: 64, offset: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1413, file: !56, line: 43, baseType: !1424, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1426, line: 7, size: 64, elements: !1427)
!1426 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1427 = !{!1428, !1432}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1425, file: !1426, line: 8, baseType: !1429, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1426, line: 5, baseType: !1430)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !156, line: 20, baseType: !1431)
!1431 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !158, line: 26, baseType: !159)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1425, file: !1426, line: 9, baseType: !1430, size: 32, offset: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1408, file: !56, line: 45, baseType: !184, size: 64, offset: 128)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1396, file: !56, line: 54, baseType: !1435, size: 256)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1396, file: !56, line: 48, size: 256, elements: !1436)
!1436 = !{!1437, !1440, !1441, !1442, !1443}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1435, file: !56, line: 49, baseType: !1438, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !56, line: 14, flags: DIFlagFwdDecl)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1435, file: !56, line: 50, baseType: !159, size: 32, offset: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1435, file: !56, line: 51, baseType: !159, size: 32, offset: 96)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1435, file: !56, line: 52, baseType: !214, size: 64, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1435, file: !56, line: 53, baseType: !214, size: 64, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1207, file: !1208, line: 835, baseType: !1445, size: 32, offset: 5120)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !161, line: 22, baseType: !1446)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !316, line: 28, baseType: !159)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1207, file: !1208, line: 836, baseType: !1445, size: 32, offset: 5152)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1207, file: !1208, line: 840, baseType: !214, size: 64, offset: 5184)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1207, file: !1208, line: 849, baseType: !1206, size: 64, offset: 5248)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1207, file: !1208, line: 852, baseType: !1206, size: 64, offset: 5312)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1207, file: !1208, line: 857, baseType: !171, size: 128, offset: 5376)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1207, file: !1208, line: 858, baseType: !171, size: 128, offset: 5504)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1207, file: !1208, line: 859, baseType: !1206, size: 64, offset: 5632)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1207, file: !1208, line: 867, baseType: !171, size: 128, offset: 5696)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1207, file: !1208, line: 868, baseType: !171, size: 128, offset: 5824)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1207, file: !1208, line: 871, baseType: !1457, size: 64, offset: 5952)
!1457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1458, size: 64)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !84, line: 59, size: 768, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463, !1465, !1466, !1473, !1474}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1458, file: !84, line: 61, baseType: !1219, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1458, file: !84, line: 62, baseType: !7, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1458, file: !84, line: 63, baseType: !197, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1458, file: !84, line: 65, baseType: !1464, size: 256, offset: 64)
!1464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !633, size: 256, elements: !1145)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1458, file: !84, line: 66, baseType: !633, size: 64, offset: 320)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1458, file: !84, line: 68, baseType: !1467, size: 128, offset: 384)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1468, line: 40, baseType: !1469)
!1468 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1468, line: 36, size: 128, elements: !1470)
!1470 = !{!1471, !1472}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1469, file: !1468, line: 37, baseType: !197)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1469, file: !1468, line: 38, baseType: !171, size: 128)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1458, file: !84, line: 69, baseType: !371, size: 128, align: 64, offset: 512)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1458, file: !84, line: 70, baseType: !1475, size: 128, offset: 640)
!1475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1476, size: 128, elements: !1358)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !84, line: 54, size: 128, elements: !1477)
!1477 = !{!1478, !1479}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1476, file: !84, line: 55, baseType: !159, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1476, file: !84, line: 56, baseType: !1480, size: 64, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !84, line: 56, flags: DIFlagFwdDecl)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1207, file: !1208, line: 872, baseType: !1483, size: 512, offset: 6016)
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !221, size: 512, elements: !1145)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1207, file: !1208, line: 873, baseType: !171, size: 128, offset: 6528)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1207, file: !1208, line: 874, baseType: !171, size: 128, offset: 6656)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1207, file: !1208, line: 876, baseType: !1487, size: 64, offset: 6784)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1489, line: 26, size: 192, elements: !1490)
!1489 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1490 = !{!1491, !1492}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1488, file: !1489, line: 27, baseType: !7, size: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1488, file: !1489, line: 28, baseType: !1493, size: 128, offset: 64)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1494, line: 43, size: 128, elements: !1495)
!1494 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1495 = !{!1496, !1497}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1493, file: !1494, line: 44, baseType: !772)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1493, file: !1494, line: 45, baseType: !171, size: 128)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1207, file: !1208, line: 879, baseType: !697, size: 64, offset: 6848)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1207, file: !1208, line: 882, baseType: !697, size: 64, offset: 6912)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1207, file: !1208, line: 884, baseType: !184, size: 64, offset: 6976)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1207, file: !1208, line: 885, baseType: !184, size: 64, offset: 7040)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1207, file: !1208, line: 890, baseType: !184, size: 64, offset: 7104)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1207, file: !1208, line: 891, baseType: !1504, size: 128, offset: 7168)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1208, line: 242, size: 128, elements: !1505)
!1505 = !{!1506, !1507, !1508}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1504, file: !1208, line: 244, baseType: !184, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1504, file: !1208, line: 245, baseType: !184, size: 64, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1504, file: !1208, line: 246, baseType: !772, offset: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1207, file: !1208, line: 900, baseType: !214, size: 64, offset: 7296)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1207, file: !1208, line: 901, baseType: !214, size: 64, offset: 7360)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1207, file: !1208, line: 904, baseType: !184, size: 64, offset: 7424)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1207, file: !1208, line: 907, baseType: !184, size: 64, offset: 7488)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1207, file: !1208, line: 910, baseType: !214, size: 64, offset: 7552)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1207, file: !1208, line: 911, baseType: !214, size: 64, offset: 7616)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1207, file: !1208, line: 914, baseType: !1516, size: 640, offset: 7680)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1517, line: 123, size: 640, elements: !1518)
!1517 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1518 = !{!1519, !1525, !1526}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1516, file: !1517, line: 124, baseType: !1520, size: 576)
!1520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1521, size: 576, elements: !284)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1517, line: 108, size: 192, elements: !1522)
!1522 = !{!1523, !1524}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1521, file: !1517, line: 109, baseType: !184, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1521, file: !1517, line: 110, baseType: !1332, size: 128, offset: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1516, file: !1517, line: 125, baseType: !7, size: 32, offset: 576)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1516, file: !1517, line: 126, baseType: !7, size: 32, offset: 608)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1207, file: !1208, line: 917, baseType: !1528, size: 192, offset: 8320)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1517, line: 134, size: 192, elements: !1529)
!1529 = !{!1530, !1531}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1528, file: !1517, line: 135, baseType: !371, size: 128, align: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1528, file: !1517, line: 136, baseType: !7, size: 32, offset: 128)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1207, file: !1208, line: 923, baseType: !1533, size: 64, offset: 8512)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1535)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1536, line: 111, size: 1280, elements: !1537)
!1536 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1557, !1558, !1559, !1560, !1561, !1562, !1669, !1670, !1671, !1672, !1698, !1701, !1711}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1535, file: !1536, line: 112, baseType: !739, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1535, file: !1536, line: 120, baseType: !433, size: 32, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1535, file: !1536, line: 121, baseType: !441, size: 32, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1535, file: !1536, line: 122, baseType: !433, size: 32, offset: 96)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1535, file: !1536, line: 123, baseType: !441, size: 32, offset: 128)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1535, file: !1536, line: 124, baseType: !433, size: 32, offset: 160)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1535, file: !1536, line: 125, baseType: !441, size: 32, offset: 192)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1535, file: !1536, line: 126, baseType: !433, size: 32, offset: 224)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1535, file: !1536, line: 127, baseType: !441, size: 32, offset: 256)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1535, file: !1536, line: 128, baseType: !7, size: 32, offset: 288)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1535, file: !1536, line: 129, baseType: !1549, size: 64, offset: 320)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1550, line: 26, baseType: !1551)
!1550 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1550, line: 24, size: 64, elements: !1552)
!1552 = !{!1553}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1551, file: !1550, line: 25, baseType: !1554, size: 64)
!1554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !1555)
!1555 = !{!1556}
!1556 = !DISubrange(count: 2)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1535, file: !1536, line: 130, baseType: !1549, size: 64, offset: 384)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1535, file: !1536, line: 131, baseType: !1549, size: 64, offset: 448)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1535, file: !1536, line: 132, baseType: !1549, size: 64, offset: 512)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1535, file: !1536, line: 133, baseType: !1549, size: 64, offset: 576)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1535, file: !1536, line: 135, baseType: !228, size: 8, offset: 640)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1535, file: !1536, line: 137, baseType: !1563, size: 64, offset: 704)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1565, line: 189, size: 1664, elements: !1566)
!1565 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1566 = !{!1567, !1568, !1571, !1576, !1577, !1580, !1581, !1586, !1587, !1588, !1589, !1591, !1592, !1593, !1594, !1595, !1633, !1654}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1564, file: !1565, line: 190, baseType: !1219, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1564, file: !1565, line: 191, baseType: !1569, size: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1565, line: 28, baseType: !1570)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !161, line: 98, baseType: !1430)
!1571 = !DIDerivedType(tag: DW_TAG_member, scope: !1564, file: !1565, line: 192, baseType: !1572, size: 192, offset: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1564, file: !1565, line: 192, size: 192, elements: !1573)
!1573 = !{!1574, !1575}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1572, file: !1565, line: 193, baseType: !171, size: 128)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1572, file: !1565, line: 194, baseType: !752, size: 192, align: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1564, file: !1565, line: 199, baseType: !759, size: 256, offset: 256)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1564, file: !1565, line: 200, baseType: !1578, size: 64, offset: 512)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1565, line: 200, flags: DIFlagFwdDecl)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1564, file: !1565, line: 201, baseType: !165, size: 64, offset: 576)
!1581 = !DIDerivedType(tag: DW_TAG_member, scope: !1564, file: !1565, line: 202, baseType: !1582, size: 64, offset: 640)
!1582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1564, file: !1565, line: 202, size: 64, elements: !1583)
!1583 = !{!1584, !1585}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1582, file: !1565, line: 203, baseType: !537, size: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1582, file: !1565, line: 204, baseType: !537, size: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1564, file: !1565, line: 206, baseType: !537, size: 64, offset: 704)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1564, file: !1565, line: 207, baseType: !433, size: 32, offset: 768)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1564, file: !1565, line: 208, baseType: !441, size: 32, offset: 800)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1564, file: !1565, line: 209, baseType: !1590, size: 32, offset: 832)
!1590 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1565, line: 31, baseType: !557)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1564, file: !1565, line: 210, baseType: !232, size: 16, offset: 864)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1564, file: !1565, line: 211, baseType: !232, size: 16, offset: 880)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1564, file: !1565, line: 215, baseType: !1195, size: 16, offset: 896)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1564, file: !1565, line: 222, baseType: !214, size: 64, offset: 960)
!1595 = !DIDerivedType(tag: DW_TAG_member, scope: !1564, file: !1565, line: 239, baseType: !1596, size: 320, offset: 1024)
!1596 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1564, file: !1565, line: 239, size: 320, elements: !1597)
!1597 = !{!1598, !1625}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1596, file: !1565, line: 240, baseType: !1599, size: 320)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1565, line: 108, size: 320, elements: !1600)
!1600 = !{!1601, !1602, !1614, !1617, !1624}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1599, file: !1565, line: 110, baseType: !214, size: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, scope: !1599, file: !1565, line: 111, baseType: !1603, size: 64, offset: 64)
!1603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1599, file: !1565, line: 111, size: 64, elements: !1604)
!1604 = !{!1605, !1613}
!1605 = !DIDerivedType(tag: DW_TAG_member, scope: !1603, file: !1565, line: 112, baseType: !1606, size: 64)
!1606 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1603, file: !1565, line: 112, size: 64, elements: !1607)
!1607 = !{!1608, !1609}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1606, file: !1565, line: 114, baseType: !230, size: 16)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1606, file: !1565, line: 115, baseType: !1610, size: 48, offset: 16)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 48, elements: !1611)
!1611 = !{!1612}
!1612 = !DISubrange(count: 6)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1603, file: !1565, line: 121, baseType: !214, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1599, file: !1565, line: 123, baseType: !1615, size: 64, offset: 128)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1565, line: 96, flags: DIFlagFwdDecl)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1599, file: !1565, line: 124, baseType: !1618, size: 64, offset: 192)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1565, line: 102, size: 192, elements: !1620)
!1620 = !{!1621, !1622, !1623}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1619, file: !1565, line: 103, baseType: !371, size: 128, align: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1619, file: !1565, line: 104, baseType: !1219, size: 32, offset: 128)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1619, file: !1565, line: 105, baseType: !488, size: 8, offset: 160)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1599, file: !1565, line: 125, baseType: !193, size: 64, offset: 256)
!1625 = !DIDerivedType(tag: DW_TAG_member, scope: !1596, file: !1565, line: 241, baseType: !1626, size: 320)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1596, file: !1565, line: 241, size: 320, elements: !1627)
!1627 = !{!1628, !1629, !1630, !1631, !1632}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1626, file: !1565, line: 242, baseType: !214, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1626, file: !1565, line: 243, baseType: !214, size: 64, offset: 64)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1626, file: !1565, line: 244, baseType: !1615, size: 64, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1626, file: !1565, line: 245, baseType: !1618, size: 64, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1626, file: !1565, line: 246, baseType: !283, size: 64, offset: 256)
!1633 = !DIDerivedType(tag: DW_TAG_member, scope: !1564, file: !1565, line: 254, baseType: !1634, size: 256, offset: 1344)
!1634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1564, file: !1565, line: 254, size: 256, elements: !1635)
!1635 = !{!1636, !1642}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1634, file: !1565, line: 255, baseType: !1637, size: 256)
!1637 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1565, line: 128, size: 256, elements: !1638)
!1638 = !{!1639, !1640}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1637, file: !1565, line: 129, baseType: !165, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1637, file: !1565, line: 130, baseType: !1641, size: 256)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 256, elements: !1145)
!1642 = !DIDerivedType(tag: DW_TAG_member, scope: !1634, file: !1565, line: 256, baseType: !1643, size: 256)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1634, file: !1565, line: 256, size: 256, elements: !1644)
!1644 = !{!1645, !1646}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1643, file: !1565, line: 258, baseType: !171, size: 128)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1643, file: !1565, line: 259, baseType: !1647, size: 128, offset: 128)
!1647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1648, line: 22, size: 128, elements: !1649)
!1648 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1649 = !{!1650, !1653}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1647, file: !1648, line: 23, baseType: !1651, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1648, line: 23, flags: DIFlagFwdDecl)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1647, file: !1648, line: 24, baseType: !214, size: 64, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1564, file: !1565, line: 274, baseType: !1655, size: 64, offset: 1600)
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1565, line: 170, size: 192, elements: !1657)
!1657 = !{!1658, !1667, !1668}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1656, file: !1565, line: 171, baseType: !1659, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1565, line: 165, baseType: !1660)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{!159, !1563, !1663, !1665, !1563}
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1616)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1656, file: !1565, line: 172, baseType: !1563, size: 64, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1656, file: !1565, line: 173, baseType: !1615, size: 64, offset: 128)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1535, file: !1536, line: 138, baseType: !1563, size: 64, offset: 768)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1535, file: !1536, line: 139, baseType: !1563, size: 64, offset: 832)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1535, file: !1536, line: 140, baseType: !1563, size: 64, offset: 896)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1535, file: !1536, line: 145, baseType: !1673, size: 64, offset: 960)
!1673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1674, size: 64)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1675, line: 13, size: 896, elements: !1676)
!1675 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1676 = !{!1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687}
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1674, file: !1675, line: 14, baseType: !1219, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1674, file: !1675, line: 15, baseType: !739, size: 32, offset: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1674, file: !1675, line: 16, baseType: !739, size: 32, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1674, file: !1675, line: 21, baseType: !763, size: 64, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1674, file: !1675, line: 27, baseType: !214, size: 64, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1674, file: !1675, line: 28, baseType: !214, size: 64, offset: 256)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1674, file: !1675, line: 29, baseType: !763, size: 64, offset: 320)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1674, file: !1675, line: 32, baseType: !221, size: 128, offset: 384)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1674, file: !1675, line: 33, baseType: !433, size: 32, offset: 512)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1674, file: !1675, line: 37, baseType: !763, size: 64, offset: 576)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1674, file: !1675, line: 44, baseType: !1688, size: 256, offset: 640)
!1688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1689, line: 15, size: 256, elements: !1690)
!1689 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1690 = !{!1691, !1692, !1693, !1694, !1695, !1696, !1697}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1688, file: !1689, line: 16, baseType: !772)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1688, file: !1689, line: 18, baseType: !159, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1688, file: !1689, line: 19, baseType: !159, size: 32, offset: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1688, file: !1689, line: 20, baseType: !159, size: 32, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1688, file: !1689, line: 21, baseType: !159, size: 32, offset: 96)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1688, file: !1689, line: 22, baseType: !214, size: 64, offset: 128)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1688, file: !1689, line: 23, baseType: !214, size: 64, offset: 192)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1535, file: !1536, line: 146, baseType: !1699, size: 64, offset: 1024)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !715, line: 516, flags: DIFlagFwdDecl)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1535, file: !1536, line: 147, baseType: !1702, size: 64, offset: 1088)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1536, line: 25, size: 64, elements: !1704)
!1704 = !{!1705, !1706, !1707}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1703, file: !1536, line: 26, baseType: !739, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1703, file: !1536, line: 27, baseType: !159, size: 32, offset: 32)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1703, file: !1536, line: 28, baseType: !1708, offset: 64)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !441, elements: !1709)
!1709 = !{!1710}
!1710 = !DISubrange(count: 0)
!1711 = !DIDerivedType(tag: DW_TAG_member, scope: !1535, file: !1536, line: 149, baseType: !1712, size: 128, offset: 1152)
!1712 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1535, file: !1536, line: 149, size: 128, elements: !1713)
!1713 = !{!1714, !1715}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1712, file: !1536, line: 150, baseType: !159, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1712, file: !1536, line: 151, baseType: !371, size: 128, align: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1207, file: !1208, line: 926, baseType: !1533, size: 64, offset: 8576)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1207, file: !1208, line: 929, baseType: !1533, size: 64, offset: 8640)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1207, file: !1208, line: 933, baseType: !1563, size: 64, offset: 8704)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1207, file: !1208, line: 943, baseType: !1720, size: 128, offset: 8768)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 128, elements: !1721)
!1721 = !{!1722}
!1722 = !DISubrange(count: 16)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1207, file: !1208, line: 945, baseType: !1724, size: 64, offset: 8896)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1208, line: 49, flags: DIFlagFwdDecl)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1207, file: !1208, line: 956, baseType: !1727, size: 64, offset: 8960)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1208, line: 45, flags: DIFlagFwdDecl)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1207, file: !1208, line: 959, baseType: !1730, size: 64, offset: 9024)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1208, line: 959, flags: DIFlagFwdDecl)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1207, file: !1208, line: 962, baseType: !1733, size: 64, offset: 9088)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1208, line: 66, flags: DIFlagFwdDecl)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1207, file: !1208, line: 966, baseType: !1736, size: 64, offset: 9152)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 64)
!1737 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1208, line: 50, flags: DIFlagFwdDecl)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1207, file: !1208, line: 969, baseType: !1739, size: 64, offset: 9216)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1741, line: 82, size: 7296, elements: !1742)
!1741 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1742 = !{!1743, !1744, !1745, !1746, !1747, !1748, !1749, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1778, !1787, !1788, !1790, !1791, !1792, !1795, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1825, !1826, !1833, !1834, !1835, !1836, !1837, !1838}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1740, file: !1741, line: 83, baseType: !1219, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1740, file: !1741, line: 84, baseType: !739, size: 32, offset: 32)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1740, file: !1741, line: 85, baseType: !159, size: 32, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1740, file: !1741, line: 86, baseType: !171, size: 128, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1740, file: !1741, line: 88, baseType: !1467, size: 128, offset: 256)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1740, file: !1741, line: 91, baseType: !1206, size: 64, offset: 384)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1740, file: !1741, line: 94, baseType: !1750, size: 192, offset: 448)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1751, line: 30, size: 192, elements: !1752)
!1751 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1752 = !{!1753, !1754}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1750, file: !1751, line: 31, baseType: !171, size: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1750, file: !1751, line: 32, baseType: !1755, size: 64, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1756, line: 25, baseType: !1757)
!1756 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1756, line: 23, size: 64, elements: !1758)
!1758 = !{!1759}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1757, file: !1756, line: 24, baseType: !1357, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1740, file: !1741, line: 97, baseType: !633, size: 64, offset: 640)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1740, file: !1741, line: 100, baseType: !159, size: 32, offset: 704)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1740, file: !1741, line: 106, baseType: !159, size: 32, offset: 736)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1740, file: !1741, line: 107, baseType: !1206, size: 64, offset: 768)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1740, file: !1741, line: 110, baseType: !159, size: 32, offset: 832)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1740, file: !1741, line: 111, baseType: !7, size: 32, offset: 864)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1740, file: !1741, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1740, file: !1741, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1740, file: !1741, line: 128, baseType: !159, size: 32, offset: 928)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1740, file: !1741, line: 129, baseType: !171, size: 128, offset: 960)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1740, file: !1741, line: 132, baseType: !1281, size: 512, offset: 1088)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1740, file: !1741, line: 133, baseType: !1289, size: 64, offset: 1600)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1740, file: !1741, line: 140, baseType: !1773, size: 256, offset: 1664)
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1774, size: 256, elements: !1555)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1741, line: 38, size: 128, elements: !1775)
!1775 = !{!1776, !1777}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1774, file: !1741, line: 39, baseType: !184, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1774, file: !1741, line: 40, baseType: !184, size: 64, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1740, file: !1741, line: 146, baseType: !1779, size: 192, offset: 1920)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1741, line: 66, size: 192, elements: !1780)
!1780 = !{!1781}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1779, file: !1741, line: 67, baseType: !1782, size: 192)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1741, line: 47, size: 192, elements: !1783)
!1783 = !{!1784, !1785, !1786}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1782, file: !1741, line: 48, baseType: !765, size: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1782, file: !1741, line: 49, baseType: !765, size: 64, offset: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1782, file: !1741, line: 50, baseType: !765, size: 64, offset: 128)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1740, file: !1741, line: 150, baseType: !1516, size: 640, offset: 2112)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1740, file: !1741, line: 153, baseType: !1789, size: 256, offset: 2752)
!1789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1457, size: 256, elements: !1145)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1740, file: !1741, line: 159, baseType: !1457, size: 64, offset: 3008)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1740, file: !1741, line: 162, baseType: !159, size: 32, offset: 3072)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1740, file: !1741, line: 164, baseType: !1793, size: 64, offset: 3136)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1794 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1741, line: 164, flags: DIFlagFwdDecl)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1740, file: !1741, line: 175, baseType: !1796, size: 32, offset: 3200)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !394, line: 805, baseType: !1797)
!1797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !394, line: 798, size: 32, elements: !1798)
!1798 = !{!1799, !1800}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1797, file: !394, line: 803, baseType: !393, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1797, file: !394, line: 804, baseType: !197, offset: 32)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1740, file: !1741, line: 176, baseType: !184, size: 64, offset: 3264)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1740, file: !1741, line: 176, baseType: !184, size: 64, offset: 3328)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1740, file: !1741, line: 176, baseType: !184, size: 64, offset: 3392)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1740, file: !1741, line: 176, baseType: !184, size: 64, offset: 3456)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1740, file: !1741, line: 177, baseType: !184, size: 64, offset: 3520)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1740, file: !1741, line: 178, baseType: !184, size: 64, offset: 3584)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1740, file: !1741, line: 179, baseType: !1504, size: 128, offset: 3648)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1740, file: !1741, line: 180, baseType: !214, size: 64, offset: 3776)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1740, file: !1741, line: 180, baseType: !214, size: 64, offset: 3840)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1740, file: !1741, line: 180, baseType: !214, size: 64, offset: 3904)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1740, file: !1741, line: 180, baseType: !214, size: 64, offset: 3968)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1740, file: !1741, line: 181, baseType: !214, size: 64, offset: 4032)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1740, file: !1741, line: 181, baseType: !214, size: 64, offset: 4096)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1740, file: !1741, line: 181, baseType: !214, size: 64, offset: 4160)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1740, file: !1741, line: 181, baseType: !214, size: 64, offset: 4224)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1740, file: !1741, line: 182, baseType: !214, size: 64, offset: 4288)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1740, file: !1741, line: 182, baseType: !214, size: 64, offset: 4352)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1740, file: !1741, line: 182, baseType: !214, size: 64, offset: 4416)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1740, file: !1741, line: 182, baseType: !214, size: 64, offset: 4480)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1740, file: !1741, line: 183, baseType: !214, size: 64, offset: 4544)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1740, file: !1741, line: 183, baseType: !214, size: 64, offset: 4608)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1740, file: !1741, line: 184, baseType: !1823, offset: 4672)
!1823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1824, line: 12, elements: !211)
!1824 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1740, file: !1741, line: 192, baseType: !186, size: 64, offset: 4672)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1740, file: !1741, line: 203, baseType: !1827, size: 2048, offset: 4736)
!1827 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1828, size: 2048, elements: !1721)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1829, line: 43, size: 128, elements: !1830)
!1829 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1830 = !{!1831, !1832}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1828, file: !1829, line: 44, baseType: !330, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1828, file: !1829, line: 45, baseType: !330, size: 64, offset: 64)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1740, file: !1741, line: 220, baseType: !488, size: 8, offset: 6784)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1740, file: !1741, line: 221, baseType: !1195, size: 16, offset: 6800)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1740, file: !1741, line: 222, baseType: !1195, size: 16, offset: 6816)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1740, file: !1741, line: 224, baseType: !964, size: 64, offset: 6848)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1740, file: !1741, line: 227, baseType: !1163, size: 192, offset: 6912)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1740, file: !1741, line: 233, baseType: !1163, size: 192, offset: 7104)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1207, file: !1208, line: 970, baseType: !1840, size: 64, offset: 9280)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 64)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1741, line: 20, size: 16576, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1841, file: !1741, line: 21, baseType: !197)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1841, file: !1741, line: 22, baseType: !1219, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1841, file: !1741, line: 23, baseType: !1467, size: 128, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1841, file: !1741, line: 24, baseType: !1847, size: 16384, offset: 192)
!1847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1848, size: 16384, elements: !288)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1751, line: 49, size: 256, elements: !1849)
!1849 = !{!1850}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1848, file: !1751, line: 50, baseType: !1851, size: 256)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1751, line: 35, size: 256, elements: !1852)
!1852 = !{!1853, !1860, !1861, !1867}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1851, file: !1751, line: 37, baseType: !1854, size: 64)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1855, line: 19, baseType: !1856)
!1855 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1855, line: 18, baseType: !1858)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{null, !159}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1851, file: !1751, line: 38, baseType: !214, size: 64, offset: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1851, file: !1751, line: 44, baseType: !1862, size: 64, offset: 128)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1855, line: 22, baseType: !1863)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1855, line: 21, baseType: !1865)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{null}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1851, file: !1751, line: 46, baseType: !1755, size: 64, offset: 192)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1207, file: !1208, line: 971, baseType: !1755, size: 64, offset: 9344)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1207, file: !1208, line: 972, baseType: !1755, size: 64, offset: 9408)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1207, file: !1208, line: 974, baseType: !1755, size: 64, offset: 9472)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1207, file: !1208, line: 975, baseType: !1750, size: 192, offset: 9536)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1207, file: !1208, line: 976, baseType: !214, size: 64, offset: 9728)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1207, file: !1208, line: 977, baseType: !328, size: 64, offset: 9792)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1207, file: !1208, line: 978, baseType: !7, size: 32, offset: 9856)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1207, file: !1208, line: 980, baseType: !374, size: 64, offset: 9920)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1207, file: !1208, line: 989, baseType: !1877, size: 128, offset: 9984)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1878, line: 35, size: 128, elements: !1879)
!1878 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1879 = !{!1880, !1881, !1882}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1877, file: !1878, line: 36, baseType: !159, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1877, file: !1878, line: 37, baseType: !739, size: 32, offset: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1877, file: !1878, line: 38, baseType: !1883, size: 64, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1878, line: 23, flags: DIFlagFwdDecl)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1207, file: !1208, line: 992, baseType: !184, size: 64, offset: 10112)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1207, file: !1208, line: 993, baseType: !184, size: 64, offset: 10176)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1207, file: !1208, line: 996, baseType: !197, offset: 10240)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1207, file: !1208, line: 999, baseType: !772, offset: 10240)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1207, file: !1208, line: 1001, baseType: !1890, size: 64, offset: 10240)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1208, line: 636, size: 64, elements: !1891)
!1891 = !{!1892}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1890, file: !1208, line: 637, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1207, file: !1208, line: 1005, baseType: !744, size: 128, offset: 10304)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1207, file: !1208, line: 1007, baseType: !1206, size: 64, offset: 10432)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1207, file: !1208, line: 1009, baseType: !1897, size: 64, offset: 10496)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1898 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1208, line: 1009, flags: DIFlagFwdDecl)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1207, file: !1208, line: 1043, baseType: !165, size: 64, offset: 10560)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1207, file: !1208, line: 1046, baseType: !1901, size: 64, offset: 10624)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1208, line: 41, flags: DIFlagFwdDecl)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1207, file: !1208, line: 1050, baseType: !1904, size: 64, offset: 10688)
!1904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1905, size: 64)
!1905 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1208, line: 42, flags: DIFlagFwdDecl)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1207, file: !1208, line: 1054, baseType: !1907, size: 64, offset: 10752)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1208, line: 55, flags: DIFlagFwdDecl)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1207, file: !1208, line: 1056, baseType: !1910, size: 64, offset: 10816)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1208, line: 40, flags: DIFlagFwdDecl)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1207, file: !1208, line: 1058, baseType: !1913, size: 64, offset: 10880)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1915, line: 99, size: 704, elements: !1916)
!1915 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1916 = !{!1917, !1918, !1919, !1920, !1921, !1922, !1923, !1942, !1943}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1914, file: !1915, line: 100, baseType: !763, size: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1914, file: !1915, line: 101, baseType: !739, size: 32, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1914, file: !1915, line: 102, baseType: !739, size: 32, offset: 96)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1914, file: !1915, line: 105, baseType: !197, offset: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1914, file: !1915, line: 107, baseType: !232, size: 16, offset: 128)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1914, file: !1915, line: 109, baseType: !731, size: 128, offset: 192)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1914, file: !1915, line: 110, baseType: !1924, size: 64, offset: 320)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1915, line: 73, size: 448, elements: !1926)
!1926 = !{!1927, !1930, !1931, !1936, !1941}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1925, file: !1915, line: 74, baseType: !1928, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1915, line: 74, flags: DIFlagFwdDecl)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1925, file: !1915, line: 75, baseType: !1913, size: 64, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, scope: !1925, file: !1915, line: 83, baseType: !1932, size: 128, offset: 128)
!1932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1925, file: !1915, line: 83, size: 128, elements: !1933)
!1933 = !{!1934, !1935}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1932, file: !1915, line: 84, baseType: !171, size: 128)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1932, file: !1915, line: 85, baseType: !925, size: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, scope: !1925, file: !1915, line: 87, baseType: !1937, size: 128, offset: 256)
!1937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1925, file: !1915, line: 87, size: 128, elements: !1938)
!1938 = !{!1939, !1940}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1937, file: !1915, line: 88, baseType: !221, size: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1937, file: !1915, line: 89, baseType: !371, size: 128, align: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1925, file: !1915, line: 92, baseType: !7, size: 32, offset: 384)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1914, file: !1915, line: 111, baseType: !633, size: 64, offset: 384)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1914, file: !1915, line: 113, baseType: !1944, size: 256, offset: 448)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1945, line: 102, size: 256, elements: !1946)
!1945 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1946 = !{!1947, !1948, !1949}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1944, file: !1945, line: 103, baseType: !763, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1944, file: !1945, line: 104, baseType: !171, size: 128, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1944, file: !1945, line: 105, baseType: !1950, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1945, line: 21, baseType: !1951)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1952, size: 64)
!1952 = !DISubroutineType(types: !1953)
!1953 = !{null, !1954}
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1207, file: !1208, line: 1061, baseType: !1956, size: 64, offset: 10944)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1208, line: 43, flags: DIFlagFwdDecl)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1207, file: !1208, line: 1064, baseType: !214, size: 64, offset: 11008)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1207, file: !1208, line: 1065, baseType: !1960, size: 64, offset: 11072)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1751, line: 14, baseType: !1962)
!1962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1751, line: 12, size: 384, elements: !1963)
!1963 = !{!1964}
!1964 = !DIDerivedType(tag: DW_TAG_member, scope: !1962, file: !1751, line: 13, baseType: !1965, size: 384)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1962, file: !1751, line: 13, size: 384, elements: !1966)
!1966 = !{!1967, !1968, !1969, !1970}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1965, file: !1751, line: 13, baseType: !159, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1965, file: !1751, line: 13, baseType: !159, size: 32, offset: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1965, file: !1751, line: 13, baseType: !159, size: 32, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1965, file: !1751, line: 13, baseType: !1971, size: 256, offset: 128)
!1971 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1972, line: 32, size: 256, elements: !1973)
!1972 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1973 = !{!1974, !1979, !1992, !1998, !2007, !2027, !2032}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1971, file: !1972, line: 37, baseType: !1975, size: 64)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1971, file: !1972, line: 34, size: 64, elements: !1976)
!1976 = !{!1977, !1978}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1975, file: !1972, line: 35, baseType: !1446, size: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1975, file: !1972, line: 36, baseType: !439, size: 32, offset: 32)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1971, file: !1972, line: 45, baseType: !1980, size: 192)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1971, file: !1972, line: 40, size: 192, elements: !1981)
!1981 = !{!1982, !1984, !1985, !1991}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1980, file: !1972, line: 41, baseType: !1983, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !316, line: 95, baseType: !159)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1980, file: !1972, line: 42, baseType: !159, size: 32, offset: 32)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1980, file: !1972, line: 43, baseType: !1986, size: 64, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1972, line: 11, baseType: !1987)
!1987 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1972, line: 8, size: 64, elements: !1988)
!1988 = !{!1989, !1990}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1987, file: !1972, line: 9, baseType: !159, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1987, file: !1972, line: 10, baseType: !165, size: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1980, file: !1972, line: 44, baseType: !159, size: 32, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1971, file: !1972, line: 52, baseType: !1993, size: 128)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1971, file: !1972, line: 48, size: 128, elements: !1994)
!1994 = !{!1995, !1996, !1997}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1993, file: !1972, line: 49, baseType: !1446, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1993, file: !1972, line: 50, baseType: !439, size: 32, offset: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1993, file: !1972, line: 51, baseType: !1986, size: 64, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1971, file: !1972, line: 61, baseType: !1999, size: 256)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1971, file: !1972, line: 55, size: 256, elements: !2000)
!2000 = !{!2001, !2002, !2003, !2004, !2006}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1999, file: !1972, line: 56, baseType: !1446, size: 32)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1999, file: !1972, line: 57, baseType: !439, size: 32, offset: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1999, file: !1972, line: 58, baseType: !159, size: 32, offset: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1999, file: !1972, line: 59, baseType: !2005, size: 64, offset: 128)
!2005 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !316, line: 94, baseType: !317)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1999, file: !1972, line: 60, baseType: !2005, size: 64, offset: 192)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1971, file: !1972, line: 95, baseType: !2008, size: 256)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1971, file: !1972, line: 64, size: 256, elements: !2009)
!2009 = !{!2010, !2011}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2008, file: !1972, line: 65, baseType: !165, size: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, scope: !2008, file: !1972, line: 77, baseType: !2012, size: 192, offset: 64)
!2012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2008, file: !1972, line: 77, size: 192, elements: !2013)
!2013 = !{!2014, !2015, !2022}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2012, file: !1972, line: 82, baseType: !1195, size: 16)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2012, file: !1972, line: 88, baseType: !2016, size: 192)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2012, file: !1972, line: 84, size: 192, elements: !2017)
!2017 = !{!2018, !2020, !2021}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2016, file: !1972, line: 85, baseType: !2019, size: 64)
!2019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 64, elements: !1319)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2016, file: !1972, line: 86, baseType: !165, size: 64, offset: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2016, file: !1972, line: 87, baseType: !165, size: 64, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2012, file: !1972, line: 93, baseType: !2023, size: 96)
!2023 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2012, file: !1972, line: 90, size: 96, elements: !2024)
!2024 = !{!2025, !2026}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2023, file: !1972, line: 91, baseType: !2019, size: 64)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2023, file: !1972, line: 92, baseType: !157, size: 32, offset: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1971, file: !1972, line: 101, baseType: !2028, size: 128)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1971, file: !1972, line: 98, size: 128, elements: !2029)
!2029 = !{!2030, !2031}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2028, file: !1972, line: 99, baseType: !215, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2028, file: !1972, line: 100, baseType: !159, size: 32, offset: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1971, file: !1972, line: 108, baseType: !2033, size: 128)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1971, file: !1972, line: 104, size: 128, elements: !2034)
!2034 = !{!2035, !2036, !2037}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2033, file: !1972, line: 105, baseType: !165, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2033, file: !1972, line: 106, baseType: !159, size: 32, offset: 64)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2033, file: !1972, line: 107, baseType: !7, size: 32, offset: 96)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1207, file: !1208, line: 1067, baseType: !1823, offset: 11136)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1207, file: !1208, line: 1099, baseType: !2040, size: 64, offset: 11136)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1208, line: 56, flags: DIFlagFwdDecl)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1207, file: !1208, line: 1103, baseType: !171, size: 128, offset: 11200)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1207, file: !1208, line: 1104, baseType: !2044, size: 64, offset: 11328)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1208, line: 46, flags: DIFlagFwdDecl)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1207, file: !1208, line: 1105, baseType: !1163, size: 192, offset: 11392)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1207, file: !1208, line: 1106, baseType: !7, size: 32, offset: 11584)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1207, file: !1208, line: 1109, baseType: !2049, size: 128, offset: 11648)
!2049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2050, size: 128, elements: !1555)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1208, line: 51, flags: DIFlagFwdDecl)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1207, file: !1208, line: 1110, baseType: !1163, size: 192, offset: 11776)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1207, file: !1208, line: 1111, baseType: !171, size: 128, offset: 11968)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1207, file: !1208, line: 1173, baseType: !2055, size: 64, offset: 12096)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2057, line: 62, size: 256, align: 256, elements: !2058)
!2057 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2058 = !{!2059, !2060, !2061, !2066}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2056, file: !2057, line: 75, baseType: !157, size: 32)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2056, file: !2057, line: 90, baseType: !157, size: 32, offset: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2056, file: !2057, line: 124, baseType: !2062, size: 64, offset: 64)
!2062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2056, file: !2057, line: 109, size: 64, elements: !2063)
!2063 = !{!2064, !2065}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2062, file: !2057, line: 110, baseType: !185, size: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2062, file: !2057, line: 112, baseType: !185, size: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2056, file: !2057, line: 144, baseType: !157, size: 32, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1207, file: !1208, line: 1174, baseType: !155, size: 32, offset: 12160)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1207, file: !1208, line: 1179, baseType: !214, size: 64, offset: 12224)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1207, file: !1208, line: 1182, baseType: !2070, size: 128, offset: 12288)
!2070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1141, line: 76, size: 128, elements: !2071)
!2071 = !{!2072, !2077, !2078}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2070, file: !1141, line: 85, baseType: !2073, size: 64)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2074, line: 7, size: 64, elements: !2075)
!2074 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2075 = !{!2076}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2073, file: !2074, line: 12, baseType: !1354, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2070, file: !1141, line: 88, baseType: !488, size: 8, offset: 64)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2070, file: !1141, line: 95, baseType: !488, size: 8, offset: 72)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !1207, file: !1208, line: 1184, baseType: !2080, size: 128, offset: 12416)
!2080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1207, file: !1208, line: 1184, size: 128, elements: !2081)
!2081 = !{!2082, !2083}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2080, file: !1208, line: 1185, baseType: !1219, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2080, file: !1208, line: 1186, baseType: !371, size: 128, align: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1207, file: !1208, line: 1190, baseType: !2085, size: 64, offset: 12544)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1208, line: 53, flags: DIFlagFwdDecl)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1207, file: !1208, line: 1192, baseType: !2088, size: 128, offset: 12608)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1141, line: 64, size: 128, elements: !2089)
!2089 = !{!2090, !2091, !2092}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2088, file: !1141, line: 65, baseType: !713, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2088, file: !1141, line: 67, baseType: !157, size: 32, offset: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2088, file: !1141, line: 68, baseType: !157, size: 32, offset: 96)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1207, file: !1208, line: 1206, baseType: !159, size: 32, offset: 12736)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1207, file: !1208, line: 1207, baseType: !159, size: 32, offset: 12768)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1207, file: !1208, line: 1209, baseType: !214, size: 64, offset: 12800)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1207, file: !1208, line: 1219, baseType: !184, size: 64, offset: 12864)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1207, file: !1208, line: 1220, baseType: !184, size: 64, offset: 12928)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1207, file: !1208, line: 1317, baseType: !159, size: 32, offset: 12992)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1207, file: !1208, line: 1319, baseType: !1206, size: 64, offset: 13056)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1207, file: !1208, line: 1322, baseType: !2101, size: 64, offset: 13120)
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 64)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2103, line: 56, size: 512, elements: !2104)
!2103 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2104 = !{!2105, !2106, !2107, !2108, !2109, !2110, !2111, !2113}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2102, file: !2103, line: 57, baseType: !2101, size: 64)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2102, file: !2103, line: 58, baseType: !165, size: 64, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2102, file: !2103, line: 59, baseType: !214, size: 64, offset: 128)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2102, file: !2103, line: 60, baseType: !214, size: 64, offset: 192)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2102, file: !2103, line: 61, baseType: !812, size: 64, offset: 256)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2102, file: !2103, line: 62, baseType: !7, size: 32, offset: 320)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2102, file: !2103, line: 63, baseType: !2112, size: 64, offset: 384)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !161, line: 153, baseType: !184)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2102, file: !2103, line: 64, baseType: !2114, size: 64, offset: 448)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1207, file: !1208, line: 1326, baseType: !1219, size: 32, offset: 13184)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1207, file: !1208, line: 1342, baseType: !165, size: 64, offset: 13248)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1207, file: !1208, line: 1343, baseType: !185, size: 64, offset: 13312)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1207, file: !1208, line: 1344, baseType: !184, size: 64, offset: 13376)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1207, file: !1208, line: 1345, baseType: !185, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1207, file: !1208, line: 1346, baseType: !185, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1207, file: !1208, line: 1347, baseType: !185, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1207, file: !1208, line: 1348, baseType: !371, size: 128, align: 64, offset: 13504)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1207, file: !1208, line: 1358, baseType: !2125, size: 34816, offset: 13824)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2126, line: 485, size: 34816, elements: !2127)
!2126 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2127 = !{!2128, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2157, !2158, !2159, !2160, !2161, !2162, !2165, !2166, !2167}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2125, file: !2126, line: 487, baseType: !2129, size: 192)
!2129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2130, size: 192, elements: !284)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2131, line: 16, size: 64, elements: !2132)
!2131 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2132 = !{!2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2130, file: !2131, line: 17, baseType: !230, size: 16)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2130, file: !2131, line: 18, baseType: !230, size: 16, offset: 16)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2130, file: !2131, line: 19, baseType: !230, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2130, file: !2131, line: 19, baseType: !230, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2130, file: !2131, line: 19, baseType: !230, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2130, file: !2131, line: 19, baseType: !230, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2130, file: !2131, line: 19, baseType: !230, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2130, file: !2131, line: 20, baseType: !230, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2130, file: !2131, line: 20, baseType: !230, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2130, file: !2131, line: 20, baseType: !230, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2130, file: !2131, line: 20, baseType: !230, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2130, file: !2131, line: 20, baseType: !230, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2130, file: !2131, line: 20, baseType: !230, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2125, file: !2126, line: 491, baseType: !214, size: 64, offset: 192)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2125, file: !2126, line: 495, baseType: !232, size: 16, offset: 256)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2125, file: !2126, line: 496, baseType: !232, size: 16, offset: 272)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2125, file: !2126, line: 497, baseType: !232, size: 16, offset: 288)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2125, file: !2126, line: 498, baseType: !232, size: 16, offset: 304)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2125, file: !2126, line: 502, baseType: !214, size: 64, offset: 320)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2125, file: !2126, line: 503, baseType: !214, size: 64, offset: 384)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2125, file: !2126, line: 514, baseType: !2154, size: 256, offset: 448)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2155, size: 256, elements: !1145)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2126, line: 483, flags: DIFlagFwdDecl)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2125, file: !2126, line: 516, baseType: !214, size: 64, offset: 704)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2125, file: !2126, line: 518, baseType: !214, size: 64, offset: 768)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2125, file: !2126, line: 520, baseType: !214, size: 64, offset: 832)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2125, file: !2126, line: 521, baseType: !214, size: 64, offset: 896)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2125, file: !2126, line: 522, baseType: !214, size: 64, offset: 960)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2125, file: !2126, line: 528, baseType: !2163, size: 64, offset: 1024)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2126, line: 10, flags: DIFlagFwdDecl)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2125, file: !2126, line: 535, baseType: !214, size: 64, offset: 1088)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2125, file: !2126, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2125, file: !2126, line: 540, baseType: !2168, size: 33280, offset: 1536)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2169, line: 317, size: 33280, elements: !2170)
!2169 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2170 = !{!2171, !2172, !2173}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2168, file: !2169, line: 330, baseType: !7, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2168, file: !2169, line: 337, baseType: !214, size: 64, offset: 64)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2168, file: !2169, line: 348, baseType: !2174, size: 32768, offset: 512)
!2174 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2169, line: 304, size: 32768, elements: !2175)
!2175 = !{!2176, !2191, !2230, !2280, !2293}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2174, file: !2169, line: 305, baseType: !2177, size: 896)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2169, line: 12, size: 896, elements: !2178)
!2178 = !{!2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2190}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2177, file: !2169, line: 13, baseType: !155, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2177, file: !2169, line: 14, baseType: !155, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2177, file: !2169, line: 15, baseType: !155, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2177, file: !2169, line: 16, baseType: !155, size: 32, offset: 96)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2177, file: !2169, line: 17, baseType: !155, size: 32, offset: 128)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2177, file: !2169, line: 18, baseType: !155, size: 32, offset: 160)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2177, file: !2169, line: 19, baseType: !155, size: 32, offset: 192)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2177, file: !2169, line: 22, baseType: !2187, size: 640, offset: 224)
!2187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 640, elements: !2188)
!2188 = !{!2189}
!2189 = !DISubrange(count: 20)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2177, file: !2169, line: 25, baseType: !155, size: 32, offset: 864)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2174, file: !2169, line: 306, baseType: !2192, size: 4096, align: 128)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2169, line: 34, size: 4096, align: 128, elements: !2193)
!2193 = !{!2194, !2195, !2196, !2197, !2198, !2213, !2214, !2215, !2219, !2221, !2225}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2192, file: !2169, line: 35, baseType: !230, size: 16)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2192, file: !2169, line: 36, baseType: !230, size: 16, offset: 16)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2192, file: !2169, line: 37, baseType: !230, size: 16, offset: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2192, file: !2169, line: 38, baseType: !230, size: 16, offset: 48)
!2198 = !DIDerivedType(tag: DW_TAG_member, scope: !2192, file: !2169, line: 39, baseType: !2199, size: 128, offset: 64)
!2199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2192, file: !2169, line: 39, size: 128, elements: !2200)
!2200 = !{!2201, !2206}
!2201 = !DIDerivedType(tag: DW_TAG_member, scope: !2199, file: !2169, line: 40, baseType: !2202, size: 128)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2199, file: !2169, line: 40, size: 128, elements: !2203)
!2203 = !{!2204, !2205}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2202, file: !2169, line: 41, baseType: !184, size: 64)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2202, file: !2169, line: 42, baseType: !184, size: 64, offset: 64)
!2206 = !DIDerivedType(tag: DW_TAG_member, scope: !2199, file: !2169, line: 44, baseType: !2207, size: 128)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2199, file: !2169, line: 44, size: 128, elements: !2208)
!2208 = !{!2209, !2210, !2211, !2212}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2207, file: !2169, line: 45, baseType: !155, size: 32)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2207, file: !2169, line: 46, baseType: !155, size: 32, offset: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2207, file: !2169, line: 47, baseType: !155, size: 32, offset: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2207, file: !2169, line: 48, baseType: !155, size: 32, offset: 96)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2192, file: !2169, line: 51, baseType: !155, size: 32, offset: 192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2192, file: !2169, line: 52, baseType: !155, size: 32, offset: 224)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2192, file: !2169, line: 55, baseType: !2216, size: 1024, offset: 256)
!2216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 1024, elements: !2217)
!2217 = !{!2218}
!2218 = !DISubrange(count: 32)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2192, file: !2169, line: 58, baseType: !2220, size: 2048, offset: 1280)
!2220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 2048, elements: !288)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2192, file: !2169, line: 60, baseType: !2222, size: 384, offset: 3328)
!2222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 384, elements: !2223)
!2223 = !{!2224}
!2224 = !DISubrange(count: 12)
!2225 = !DIDerivedType(tag: DW_TAG_member, scope: !2192, file: !2169, line: 62, baseType: !2226, size: 384, offset: 3712)
!2226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2192, file: !2169, line: 62, size: 384, elements: !2227)
!2227 = !{!2228, !2229}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2226, file: !2169, line: 63, baseType: !2222, size: 384)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2226, file: !2169, line: 64, baseType: !2222, size: 384)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2174, file: !2169, line: 307, baseType: !2231, size: 1088)
!2231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2169, line: 79, size: 1088, elements: !2232)
!2232 = !{!2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2279}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2231, file: !2169, line: 80, baseType: !155, size: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2231, file: !2169, line: 81, baseType: !155, size: 32, offset: 32)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2231, file: !2169, line: 82, baseType: !155, size: 32, offset: 64)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2231, file: !2169, line: 83, baseType: !155, size: 32, offset: 96)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2231, file: !2169, line: 84, baseType: !155, size: 32, offset: 128)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2231, file: !2169, line: 85, baseType: !155, size: 32, offset: 160)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2231, file: !2169, line: 86, baseType: !155, size: 32, offset: 192)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2231, file: !2169, line: 88, baseType: !2187, size: 640, offset: 224)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2231, file: !2169, line: 89, baseType: !226, size: 8, offset: 864)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2231, file: !2169, line: 90, baseType: !226, size: 8, offset: 872)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2231, file: !2169, line: 91, baseType: !226, size: 8, offset: 880)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2231, file: !2169, line: 92, baseType: !226, size: 8, offset: 888)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2231, file: !2169, line: 93, baseType: !226, size: 8, offset: 896)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2231, file: !2169, line: 94, baseType: !226, size: 8, offset: 904)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2231, file: !2169, line: 95, baseType: !2248, size: 64, offset: 960)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2250, line: 11, size: 128, elements: !2251)
!2250 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2251 = !{!2252, !2253}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2249, file: !2250, line: 12, baseType: !215, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2249, file: !2250, line: 13, baseType: !2254, size: 64, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2256, line: 56, size: 1344, elements: !2257)
!2256 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2257 = !{!2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2255, file: !2256, line: 61, baseType: !214, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2255, file: !2256, line: 62, baseType: !214, size: 64, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2255, file: !2256, line: 63, baseType: !214, size: 64, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2255, file: !2256, line: 64, baseType: !214, size: 64, offset: 192)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2255, file: !2256, line: 65, baseType: !214, size: 64, offset: 256)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2255, file: !2256, line: 66, baseType: !214, size: 64, offset: 320)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2255, file: !2256, line: 68, baseType: !214, size: 64, offset: 384)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2255, file: !2256, line: 69, baseType: !214, size: 64, offset: 448)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2255, file: !2256, line: 70, baseType: !214, size: 64, offset: 512)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2255, file: !2256, line: 71, baseType: !214, size: 64, offset: 576)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2255, file: !2256, line: 72, baseType: !214, size: 64, offset: 640)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2255, file: !2256, line: 73, baseType: !214, size: 64, offset: 704)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2255, file: !2256, line: 74, baseType: !214, size: 64, offset: 768)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2255, file: !2256, line: 75, baseType: !214, size: 64, offset: 832)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2255, file: !2256, line: 76, baseType: !214, size: 64, offset: 896)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2255, file: !2256, line: 81, baseType: !214, size: 64, offset: 960)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2255, file: !2256, line: 83, baseType: !214, size: 64, offset: 1024)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2255, file: !2256, line: 84, baseType: !214, size: 64, offset: 1088)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2255, file: !2256, line: 85, baseType: !214, size: 64, offset: 1152)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2255, file: !2256, line: 86, baseType: !214, size: 64, offset: 1216)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2255, file: !2256, line: 87, baseType: !214, size: 64, offset: 1280)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2231, file: !2169, line: 96, baseType: !155, size: 32, offset: 1024)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2174, file: !2169, line: 308, baseType: !2281, size: 4608, align: 512)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2169, line: 289, size: 4608, align: 512, elements: !2282)
!2282 = !{!2283, !2284, !2291}
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2281, file: !2169, line: 290, baseType: !2192, size: 4096, align: 128)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2281, file: !2169, line: 291, baseType: !2285, size: 512, offset: 4096)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2169, line: 268, size: 512, elements: !2286)
!2286 = !{!2287, !2288, !2289}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2285, file: !2169, line: 269, baseType: !184, size: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2285, file: !2169, line: 270, baseType: !184, size: 64, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2285, file: !2169, line: 271, baseType: !2290, size: 384, offset: 128)
!2290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 384, elements: !1611)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2281, file: !2169, line: 292, baseType: !2292, offset: 4608)
!2292 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, elements: !1709)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2174, file: !2169, line: 309, baseType: !2294, size: 32768)
!2294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !226, size: 32768, elements: !2295)
!2295 = !{!2296}
!2296 = !DISubrange(count: 4096)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1203, file: !715, line: 378, baseType: !2298, size: 64, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1199, file: !715, line: 384, baseType: !1488, size: 192, offset: 192)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !968, file: !715, line: 500, baseType: !197, offset: 6656)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !968, file: !715, line: 501, baseType: !2302, size: 64, offset: 6656)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !715, line: 387, flags: DIFlagFwdDecl)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !968, file: !715, line: 516, baseType: !1699, size: 64, offset: 6720)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !968, file: !715, line: 519, baseType: !358, size: 64, offset: 6784)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !968, file: !715, line: 521, baseType: !2307, size: 64, offset: 6848)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !715, line: 521, flags: DIFlagFwdDecl)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !968, file: !715, line: 545, baseType: !739, size: 32, offset: 6912)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !968, file: !715, line: 548, baseType: !488, size: 8, offset: 6944)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !968, file: !715, line: 550, baseType: !2312, offset: 6952)
!2312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2313, line: 142, elements: !211)
!2313 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !968, file: !715, line: 554, baseType: !1944, size: 256, offset: 6976)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !968, file: !715, line: 557, baseType: !155, size: 32, offset: 7232)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !965, file: !715, line: 565, baseType: !2317, offset: 7296)
!2317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, elements: !2318)
!2318 = !{!2319}
!2319 = !DISubrange(count: -1)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !961, file: !715, line: 151, baseType: !739, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !954, file: !715, line: 156, baseType: !197, offset: 256)
!2322 = !DIDerivedType(tag: DW_TAG_member, scope: !719, file: !715, line: 159, baseType: !2323, size: 128)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !719, file: !715, line: 159, size: 128, elements: !2324)
!2324 = !{!2325, !2389}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2323, file: !715, line: 161, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !62, line: 110, size: 1152, elements: !2328)
!2328 = !{!2329, !2339, !2360, !2361, !2362, !2363, !2364, !2376, !2377, !2378}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2327, file: !62, line: 111, baseType: !2330, size: 384)
!2330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !62, line: 19, size: 384, elements: !2331)
!2331 = !{!2332, !2334, !2335, !2336, !2337, !2338}
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2330, file: !62, line: 20, baseType: !2333, size: 64)
!2333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !214)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2330, file: !62, line: 21, baseType: !2333, size: 64, offset: 64)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2330, file: !62, line: 22, baseType: !2333, size: 64, offset: 128)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2330, file: !62, line: 23, baseType: !214, size: 64, offset: 192)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2330, file: !62, line: 24, baseType: !214, size: 64, offset: 256)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2330, file: !62, line: 25, baseType: !214, size: 64, offset: 320)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2327, file: !62, line: 112, baseType: !2340, size: 64, offset: 384)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2342, line: 105, size: 128, elements: !2343)
!2342 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2343 = !{!2344, !2345}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2341, file: !2342, line: 110, baseType: !214, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2341, file: !2342, line: 118, baseType: !2346, size: 64, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2342, line: 95, size: 448, elements: !2348)
!2348 = !{!2349, !2350, !2355, !2356, !2357, !2358, !2359}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2347, file: !2342, line: 96, baseType: !763, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2347, file: !2342, line: 97, baseType: !2351, size: 64, offset: 64)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2342, line: 60, baseType: !2353)
!2353 = !DISubroutineType(types: !2354)
!2354 = !{null, !2340}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2347, file: !2342, line: 98, baseType: !2351, size: 64, offset: 128)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2347, file: !2342, line: 99, baseType: !488, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2347, file: !2342, line: 100, baseType: !488, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2347, file: !2342, line: 101, baseType: !371, size: 128, align: 64, offset: 256)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2347, file: !2342, line: 102, baseType: !2340, size: 64, offset: 384)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2327, file: !62, line: 113, baseType: !2341, size: 128, offset: 448)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2327, file: !62, line: 114, baseType: !1488, size: 192, offset: 576)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2327, file: !62, line: 115, baseType: !61, size: 32, offset: 768)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2327, file: !62, line: 116, baseType: !7, size: 32, offset: 800)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2327, file: !62, line: 117, baseType: !2365, size: 64, offset: 832)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2367)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !62, line: 67, size: 256, elements: !2368)
!2368 = !{!2369, !2370, !2374, !2375}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2367, file: !62, line: 73, baseType: !832, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2367, file: !62, line: 78, baseType: !2371, size: 64, offset: 64)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = !DISubroutineType(types: !2373)
!2373 = !{null, !2326}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2367, file: !62, line: 83, baseType: !2371, size: 64, offset: 128)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2367, file: !62, line: 89, baseType: !1017, size: 64, offset: 192)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2327, file: !62, line: 118, baseType: !165, size: 64, offset: 896)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2327, file: !62, line: 119, baseType: !159, size: 32, offset: 960)
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2327, file: !62, line: 120, baseType: !2379, size: 128, offset: 1024)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2327, file: !62, line: 120, size: 128, elements: !2380)
!2380 = !{!2381, !2387}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2379, file: !62, line: 121, baseType: !2382, size: 128)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2383, line: 6, size: 128, elements: !2384)
!2383 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2384 = !{!2385, !2386}
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2382, file: !2383, line: 7, baseType: !184, size: 64)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2382, file: !2383, line: 8, baseType: !184, size: 64, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2379, file: !62, line: 122, baseType: !2388)
!2388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2382, elements: !1709)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2323, file: !715, line: 162, baseType: !165, size: 64, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !719, file: !715, line: 176, baseType: !371, size: 128, align: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, scope: !714, file: !715, line: 179, baseType: !2392, size: 32, offset: 384)
!2392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !714, file: !715, line: 179, size: 32, elements: !2393)
!2393 = !{!2394, !2395, !2396, !2397}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2392, file: !715, line: 184, baseType: !739, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2392, file: !715, line: 192, baseType: !7, size: 32)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2392, file: !715, line: 194, baseType: !7, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2392, file: !715, line: 195, baseType: !159, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !714, file: !715, line: 199, baseType: !739, size: 32, offset: 416)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !649, file: !75, line: 1964, baseType: !2400, size: 64, offset: 1344)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DISubroutineType(types: !2402)
!2402 = !{!215, !597, !2403}
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2405, line: 12, size: 256, elements: !2406)
!2405 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2406 = !{!2407, !2408, !2409, !2410, !2411}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2404, file: !2405, line: 13, baseType: !160, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2404, file: !2405, line: 16, baseType: !159, size: 32, offset: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2404, file: !2405, line: 23, baseType: !214, size: 64, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2404, file: !2405, line: 30, baseType: !214, size: 64, offset: 128)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2404, file: !2405, line: 33, baseType: !2412, size: 64, offset: 192)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 64)
!2413 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !715, line: 27, flags: DIFlagFwdDecl)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !649, file: !75, line: 1966, baseType: !2400, size: 64, offset: 1408)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !598, file: !75, line: 1424, baseType: !2416, size: 64, offset: 448)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2418)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !69, line: 322, size: 704, elements: !2419)
!2419 = !{!2420, !2466, !2470, !2474, !2475, !2476, !2477, !2478, !2483, !2488, !2492}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2418, file: !69, line: 323, baseType: !2421, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = !DISubroutineType(types: !2423)
!2423 = !{!159, !2424}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !69, line: 294, size: 1600, elements: !2426)
!2426 = !{!2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2451, !2452, !2453}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2425, file: !69, line: 295, baseType: !221, size: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2425, file: !69, line: 296, baseType: !171, size: 128, offset: 128)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2425, file: !69, line: 297, baseType: !171, size: 128, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2425, file: !69, line: 298, baseType: !171, size: 128, offset: 384)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2425, file: !69, line: 299, baseType: !1163, size: 192, offset: 512)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2425, file: !69, line: 300, baseType: !197, offset: 704)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2425, file: !69, line: 301, baseType: !739, size: 32, offset: 704)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2425, file: !69, line: 302, baseType: !597, size: 64, offset: 768)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2425, file: !69, line: 303, baseType: !2436, size: 64, offset: 832)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !69, line: 68, size: 64, elements: !2437)
!2437 = !{!2438, !2450}
!2438 = !DIDerivedType(tag: DW_TAG_member, scope: !2436, file: !69, line: 69, baseType: !2439, size: 32)
!2439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2436, file: !69, line: 69, size: 32, elements: !2440)
!2440 = !{!2441, !2442, !2443}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2439, file: !69, line: 70, baseType: !433, size: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2439, file: !69, line: 71, baseType: !441, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2439, file: !69, line: 72, baseType: !2444, size: 32)
!2444 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2445, line: 24, baseType: !2446)
!2445 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2445, line: 22, size: 32, elements: !2447)
!2447 = !{!2448}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2446, file: !2445, line: 23, baseType: !2449, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2445, line: 20, baseType: !439)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2436, file: !69, line: 74, baseType: !68, size: 32, offset: 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2425, file: !69, line: 304, baseType: !529, size: 64, offset: 896)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2425, file: !69, line: 305, baseType: !214, size: 64, offset: 960)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2425, file: !69, line: 306, baseType: !2454, size: 576, offset: 1024)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !69, line: 205, size: 576, elements: !2455)
!2455 = !{!2456, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2454, file: !69, line: 206, baseType: !2457, size: 64)
!2457 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !69, line: 66, baseType: !531)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2454, file: !69, line: 207, baseType: !2457, size: 64, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2454, file: !69, line: 208, baseType: !2457, size: 64, offset: 128)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2454, file: !69, line: 209, baseType: !2457, size: 64, offset: 192)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2454, file: !69, line: 210, baseType: !2457, size: 64, offset: 256)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2454, file: !69, line: 211, baseType: !2457, size: 64, offset: 320)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2454, file: !69, line: 212, baseType: !2457, size: 64, offset: 384)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2454, file: !69, line: 213, baseType: !537, size: 64, offset: 448)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2454, file: !69, line: 214, baseType: !537, size: 64, offset: 512)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2418, file: !69, line: 324, baseType: !2467, size: 64, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2468 = !DISubroutineType(types: !2469)
!2469 = !{!2424, !597, !159}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2418, file: !69, line: 325, baseType: !2471, size: 64, offset: 128)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = !DISubroutineType(types: !2473)
!2473 = !{null, !2424}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2418, file: !69, line: 326, baseType: !2421, size: 64, offset: 192)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2418, file: !69, line: 327, baseType: !2421, size: 64, offset: 256)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2418, file: !69, line: 328, baseType: !2421, size: 64, offset: 320)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2418, file: !69, line: 329, baseType: !677, size: 64, offset: 384)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2418, file: !69, line: 332, baseType: !2479, size: 64, offset: 448)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2480, size: 64)
!2480 = !DISubroutineType(types: !2481)
!2481 = !{!2482, !427}
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2418, file: !69, line: 333, baseType: !2484, size: 64, offset: 512)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2485, size: 64)
!2485 = !DISubroutineType(types: !2486)
!2486 = !{!159, !427, !2487}
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2418, file: !69, line: 335, baseType: !2489, size: 64, offset: 576)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!159, !427, !2482}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2418, file: !69, line: 337, baseType: !2493, size: 64, offset: 640)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{!159, !597, !2496}
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !598, file: !75, line: 1425, baseType: !2498, size: 64, offset: 512)
!2498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2500)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !69, line: 428, size: 704, elements: !2501)
!2501 = !{!2502, !2506, !2507, !2511, !2512, !2513, !2528, !2551, !2555, !2556, !2579}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2500, file: !69, line: 429, baseType: !2503, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{!159, !597, !159, !159, !547}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2500, file: !69, line: 430, baseType: !677, size: 64, offset: 64)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2500, file: !69, line: 431, baseType: !2508, size: 64, offset: 128)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{!159, !597, !7}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2500, file: !69, line: 432, baseType: !2508, size: 64, offset: 192)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2500, file: !69, line: 433, baseType: !677, size: 64, offset: 256)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2500, file: !69, line: 434, baseType: !2514, size: 64, offset: 320)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2515, size: 64)
!2515 = !DISubroutineType(types: !2516)
!2516 = !{!159, !597, !159, !2517}
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !69, line: 415, size: 256, elements: !2519)
!2519 = !{!2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2518, file: !69, line: 416, baseType: !159, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2518, file: !69, line: 417, baseType: !7, size: 32, offset: 32)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2518, file: !69, line: 418, baseType: !7, size: 32, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2518, file: !69, line: 420, baseType: !7, size: 32, offset: 96)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2518, file: !69, line: 421, baseType: !7, size: 32, offset: 128)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2518, file: !69, line: 422, baseType: !7, size: 32, offset: 160)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2518, file: !69, line: 423, baseType: !7, size: 32, offset: 192)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2518, file: !69, line: 424, baseType: !7, size: 32, offset: 224)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2500, file: !69, line: 435, baseType: !2529, size: 64, offset: 384)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = !DISubroutineType(types: !2531)
!2531 = !{!159, !597, !2436, !2532}
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !69, line: 343, size: 960, elements: !2534)
!2534 = !{!2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2533, file: !69, line: 344, baseType: !159, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2533, file: !69, line: 345, baseType: !184, size: 64, offset: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2533, file: !69, line: 346, baseType: !184, size: 64, offset: 128)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2533, file: !69, line: 347, baseType: !184, size: 64, offset: 192)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2533, file: !69, line: 348, baseType: !184, size: 64, offset: 256)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2533, file: !69, line: 349, baseType: !184, size: 64, offset: 320)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2533, file: !69, line: 350, baseType: !184, size: 64, offset: 384)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2533, file: !69, line: 351, baseType: !769, size: 64, offset: 448)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2533, file: !69, line: 353, baseType: !769, size: 64, offset: 512)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2533, file: !69, line: 354, baseType: !159, size: 32, offset: 576)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2533, file: !69, line: 355, baseType: !159, size: 32, offset: 608)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2533, file: !69, line: 356, baseType: !184, size: 64, offset: 640)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2533, file: !69, line: 357, baseType: !184, size: 64, offset: 704)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2533, file: !69, line: 358, baseType: !184, size: 64, offset: 768)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2533, file: !69, line: 359, baseType: !769, size: 64, offset: 832)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2533, file: !69, line: 360, baseType: !159, size: 32, offset: 896)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2500, file: !69, line: 436, baseType: !2552, size: 64, offset: 448)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{!159, !597, !2496, !2532}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2500, file: !69, line: 438, baseType: !2529, size: 64, offset: 512)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2500, file: !69, line: 439, baseType: !2557, size: 64, offset: 576)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!159, !597, !2560}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !69, line: 409, size: 1408, elements: !2562)
!2562 = !{!2563, !2564}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2561, file: !69, line: 410, baseType: !7, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2561, file: !69, line: 411, baseType: !2565, size: 1344, offset: 64)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2566, size: 1344, elements: !284)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !69, line: 395, size: 448, elements: !2567)
!2567 = !{!2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2578}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2566, file: !69, line: 396, baseType: !7, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2566, file: !69, line: 397, baseType: !7, size: 32, offset: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2566, file: !69, line: 399, baseType: !7, size: 32, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2566, file: !69, line: 400, baseType: !7, size: 32, offset: 96)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2566, file: !69, line: 401, baseType: !7, size: 32, offset: 128)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2566, file: !69, line: 402, baseType: !7, size: 32, offset: 160)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2566, file: !69, line: 403, baseType: !7, size: 32, offset: 192)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2566, file: !69, line: 404, baseType: !186, size: 64, offset: 256)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2566, file: !69, line: 405, baseType: !2577, size: 64, offset: 320)
!2577 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !161, line: 126, baseType: !184)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2566, file: !69, line: 406, baseType: !2577, size: 64, offset: 384)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2500, file: !69, line: 440, baseType: !2508, size: 64, offset: 640)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !598, file: !75, line: 1426, baseType: !2581, size: 64, offset: 576)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2583)
!2583 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !75, line: 49, flags: DIFlagFwdDecl)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !598, file: !75, line: 1427, baseType: !214, size: 64, offset: 640)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !598, file: !75, line: 1428, baseType: !214, size: 64, offset: 704)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !598, file: !75, line: 1429, baseType: !214, size: 64, offset: 768)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !598, file: !75, line: 1430, baseType: !388, size: 64, offset: 832)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !598, file: !75, line: 1431, baseType: !759, size: 256, offset: 896)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !598, file: !75, line: 1432, baseType: !159, size: 32, offset: 1152)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !598, file: !75, line: 1433, baseType: !739, size: 32, offset: 1184)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !598, file: !75, line: 1437, baseType: !2592, size: 64, offset: 1216)
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64)
!2594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2595)
!2595 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !75, line: 1437, flags: DIFlagFwdDecl)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !598, file: !75, line: 1449, baseType: !2597, size: 64, offset: 1280)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !404, line: 34, size: 64, elements: !2598)
!2598 = !{!2599}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2597, file: !404, line: 35, baseType: !407, size: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !598, file: !75, line: 1450, baseType: !171, size: 128, offset: 1344)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !598, file: !75, line: 1451, baseType: !2602, size: 64, offset: 1472)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 64)
!2603 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !75, line: 699, flags: DIFlagFwdDecl)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !598, file: !75, line: 1452, baseType: !1910, size: 64, offset: 1536)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !598, file: !75, line: 1453, baseType: !2606, size: 64, offset: 1600)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !75, line: 1453, flags: DIFlagFwdDecl)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !598, file: !75, line: 1454, baseType: !221, size: 128, offset: 1664)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !598, file: !75, line: 1455, baseType: !7, size: 32, offset: 1792)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !598, file: !75, line: 1456, baseType: !2611, size: 2432, offset: 1856)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !69, line: 518, size: 2432, elements: !2612)
!2612 = !{!2613, !2614, !2615, !2617, !2649}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2611, file: !69, line: 519, baseType: !7, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2611, file: !69, line: 520, baseType: !759, size: 256, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2611, file: !69, line: 521, baseType: !2616, size: 192, offset: 320)
!2616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !427, size: 192, elements: !284)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2611, file: !69, line: 522, baseType: !2618, size: 1728, offset: 512)
!2618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2619, size: 1728, elements: !284)
!2619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !69, line: 222, size: 576, elements: !2620)
!2620 = !{!2621, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2619, file: !69, line: 223, baseType: !2622, size: 64)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !69, line: 443, size: 256, elements: !2624)
!2624 = !{!2625, !2626, !2639, !2640}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2623, file: !69, line: 444, baseType: !159, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2623, file: !69, line: 445, baseType: !2627, size: 64, offset: 64)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2629)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !69, line: 310, size: 512, elements: !2630)
!2630 = !{!2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2629, file: !69, line: 311, baseType: !677, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2629, file: !69, line: 312, baseType: !677, size: 64, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2629, file: !69, line: 313, baseType: !677, size: 64, offset: 128)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2629, file: !69, line: 314, baseType: !677, size: 64, offset: 192)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2629, file: !69, line: 315, baseType: !2421, size: 64, offset: 256)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2629, file: !69, line: 316, baseType: !2421, size: 64, offset: 320)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2629, file: !69, line: 317, baseType: !2421, size: 64, offset: 384)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2629, file: !69, line: 318, baseType: !2493, size: 64, offset: 448)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2623, file: !69, line: 446, baseType: !162, size: 64, offset: 128)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2623, file: !69, line: 447, baseType: !2622, size: 64, offset: 192)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2619, file: !69, line: 224, baseType: !159, size: 32, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2619, file: !69, line: 226, baseType: !171, size: 128, offset: 128)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2619, file: !69, line: 227, baseType: !214, size: 64, offset: 256)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2619, file: !69, line: 228, baseType: !7, size: 32, offset: 320)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2619, file: !69, line: 229, baseType: !7, size: 32, offset: 352)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2619, file: !69, line: 230, baseType: !2457, size: 64, offset: 384)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2619, file: !69, line: 231, baseType: !2457, size: 64, offset: 448)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2619, file: !69, line: 232, baseType: !165, size: 64, offset: 512)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2611, file: !69, line: 523, baseType: !2650, size: 192, offset: 2240)
!2650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2627, size: 192, elements: !284)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !598, file: !75, line: 1458, baseType: !2652, size: 2112, offset: 4288)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !75, line: 1410, size: 2112, elements: !2653)
!2653 = !{!2654, !2655, !2656}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2652, file: !75, line: 1411, baseType: !159, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2652, file: !75, line: 1412, baseType: !1467, size: 128, offset: 64)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2652, file: !75, line: 1413, baseType: !2657, size: 1920, offset: 192)
!2657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2658, size: 1920, elements: !284)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2659, line: 12, size: 640, elements: !2660)
!2659 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2660 = !{!2661, !2669, !2671, !2676, !2677}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2658, file: !2659, line: 13, baseType: !2662, size: 320)
!2662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2663, line: 17, size: 320, elements: !2664)
!2663 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2664 = !{!2665, !2666, !2667, !2668}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2662, file: !2663, line: 18, baseType: !159, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2662, file: !2663, line: 19, baseType: !159, size: 32, offset: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2662, file: !2663, line: 20, baseType: !1467, size: 128, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2662, file: !2663, line: 22, baseType: !371, size: 128, align: 64, offset: 192)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2658, file: !2659, line: 14, baseType: !2670, size: 64, offset: 320)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2658, file: !2659, line: 15, baseType: !2672, size: 64, offset: 384)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2673, line: 16, size: 64, elements: !2674)
!2673 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2674 = !{!2675}
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2672, file: !2673, line: 17, baseType: !1206, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2658, file: !2659, line: 16, baseType: !1467, size: 128, offset: 448)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2658, file: !2659, line: 17, baseType: !739, size: 32, offset: 576)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !598, file: !75, line: 1465, baseType: !165, size: 64, offset: 6400)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !598, file: !75, line: 1468, baseType: !155, size: 32, offset: 6464)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !598, file: !75, line: 1470, baseType: !537, size: 64, offset: 6528)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !598, file: !75, line: 1471, baseType: !537, size: 64, offset: 6592)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !598, file: !75, line: 1473, baseType: !157, size: 32, offset: 6656)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !598, file: !75, line: 1474, baseType: !2684, size: 64, offset: 6720)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2685, size: 64)
!2685 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !75, line: 603, flags: DIFlagFwdDecl)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !598, file: !75, line: 1477, baseType: !2687, size: 256, offset: 6784)
!2687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 256, elements: !2217)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !598, file: !75, line: 1478, baseType: !2689, size: 128, offset: 7040)
!2689 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2690, line: 18, baseType: !2691)
!2690 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2690, line: 16, size: 128, elements: !2692)
!2692 = !{!2693}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2691, file: !2690, line: 17, baseType: !2694, size: 128)
!2694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 128, elements: !1721)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !598, file: !75, line: 1480, baseType: !7, size: 32, offset: 7168)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !598, file: !75, line: 1481, baseType: !2697, size: 32, offset: 7200)
!2697 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !161, line: 150, baseType: !7)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !598, file: !75, line: 1487, baseType: !1163, size: 192, offset: 7232)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !598, file: !75, line: 1493, baseType: !193, size: 64, offset: 7424)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !598, file: !75, line: 1495, baseType: !2701, size: 64, offset: 7488)
!2701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2702, size: 64)
!2702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2703)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !386, line: 135, size: 1024, align: 512, elements: !2704)
!2704 = !{!2705, !2709, !2710, !2717, !2723, !2727, !2731, !2735, !2736, !2740, !2744, !2749, !2753}
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2703, file: !386, line: 136, baseType: !2706, size: 64)
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = !DISubroutineType(types: !2708)
!2708 = !{!159, !388, !7}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2703, file: !386, line: 137, baseType: !2706, size: 64, offset: 64)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2703, file: !386, line: 138, baseType: !2711, size: 64, offset: 128)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{!159, !2714, !2716}
!2714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2715, size: 64)
!2715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !389)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !412, size: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2703, file: !386, line: 139, baseType: !2718, size: 64, offset: 192)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{!159, !2714, !7, !193, !2721}
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !412)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2703, file: !386, line: 141, baseType: !2724, size: 64, offset: 256)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{!159, !2714}
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2703, file: !386, line: 142, baseType: !2728, size: 64, offset: 320)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{!159, !388}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2703, file: !386, line: 143, baseType: !2732, size: 64, offset: 384)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{null, !388}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2703, file: !386, line: 144, baseType: !2732, size: 64, offset: 448)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2703, file: !386, line: 145, baseType: !2737, size: 64, offset: 512)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DISubroutineType(types: !2739)
!2739 = !{null, !388, !427}
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2703, file: !386, line: 146, baseType: !2741, size: 64, offset: 576)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{!283, !388, !283, !159}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2703, file: !386, line: 147, baseType: !2745, size: 64, offset: 640)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{!384, !2748}
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2703, file: !386, line: 148, baseType: !2750, size: 64, offset: 704)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = !DISubroutineType(types: !2752)
!2752 = !{!159, !547, !488}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2703, file: !386, line: 149, baseType: !2754, size: 64, offset: 768)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = !DISubroutineType(types: !2756)
!2756 = !{!388, !388, !2757}
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !428)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !598, file: !75, line: 1500, baseType: !159, size: 32, offset: 7552)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !598, file: !75, line: 1502, baseType: !2761, size: 448, offset: 7616)
!2761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2405, line: 60, size: 448, elements: !2762)
!2762 = !{!2763, !2768, !2769, !2770, !2771, !2772, !2773}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2761, file: !2405, line: 61, baseType: !2764, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2765, size: 64)
!2765 = !DISubroutineType(types: !2766)
!2766 = !{!214, !2767, !2403}
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2761, file: !2405, line: 63, baseType: !2764, size: 64, offset: 64)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2761, file: !2405, line: 66, baseType: !215, size: 64, offset: 128)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2761, file: !2405, line: 67, baseType: !159, size: 32, offset: 192)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2761, file: !2405, line: 68, baseType: !7, size: 32, offset: 224)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2761, file: !2405, line: 71, baseType: !171, size: 128, offset: 256)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2761, file: !2405, line: 77, baseType: !2774, size: 64, offset: 384)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !598, file: !75, line: 1505, baseType: !763, size: 64, offset: 8064)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !598, file: !75, line: 1508, baseType: !763, size: 64, offset: 8128)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !598, file: !75, line: 1511, baseType: !159, size: 32, offset: 8192)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !598, file: !75, line: 1514, baseType: !899, size: 32, offset: 8224)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !598, file: !75, line: 1517, baseType: !2780, size: 64, offset: 8256)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1945, line: 18, flags: DIFlagFwdDecl)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !598, file: !75, line: 1518, baseType: !633, size: 64, offset: 8320)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !598, file: !75, line: 1525, baseType: !1699, size: 64, offset: 8384)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !598, file: !75, line: 1532, baseType: !2785, size: 64, offset: 8448)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2786, line: 52, size: 64, elements: !2787)
!2786 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2787 = !{!2788}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2785, file: !2786, line: 53, baseType: !2789, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2786, line: 40, size: 256, elements: !2791)
!2791 = !{!2792, !2793, !2798}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2790, file: !2786, line: 42, baseType: !197)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2790, file: !2786, line: 44, baseType: !2794, size: 192)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2786, line: 28, size: 192, elements: !2795)
!2795 = !{!2796, !2797}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2794, file: !2786, line: 29, baseType: !171, size: 128)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2794, file: !2786, line: 31, baseType: !215, size: 64, offset: 128)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2790, file: !2786, line: 49, baseType: !215, size: 64, offset: 192)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !598, file: !75, line: 1533, baseType: !2785, size: 64, offset: 8512)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !598, file: !75, line: 1534, baseType: !371, size: 128, align: 64, offset: 8576)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !598, file: !75, line: 1535, baseType: !1944, size: 256, offset: 8704)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !598, file: !75, line: 1537, baseType: !1163, size: 192, offset: 8960)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !598, file: !75, line: 1542, baseType: !159, size: 32, offset: 9152)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !598, file: !75, line: 1545, baseType: !197, offset: 9184)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !598, file: !75, line: 1546, baseType: !171, size: 128, offset: 9216)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !598, file: !75, line: 1548, baseType: !197, offset: 9344)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !598, file: !75, line: 1549, baseType: !171, size: 128, offset: 9344)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !428, file: !75, line: 624, baseType: !726, size: 64, offset: 256)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !428, file: !75, line: 631, baseType: !214, size: 64, offset: 320)
!2810 = !DIDerivedType(tag: DW_TAG_member, scope: !428, file: !75, line: 639, baseType: !2811, size: 32, offset: 384)
!2811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !428, file: !75, line: 639, size: 32, elements: !2812)
!2812 = !{!2813, !2815}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2811, file: !75, line: 640, baseType: !2814, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2811, file: !75, line: 641, baseType: !7, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !428, file: !75, line: 643, baseType: !511, size: 32, offset: 416)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !428, file: !75, line: 644, baseType: !529, size: 64, offset: 448)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !428, file: !75, line: 645, baseType: !533, size: 128, offset: 512)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !428, file: !75, line: 646, baseType: !533, size: 128, offset: 640)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !428, file: !75, line: 647, baseType: !533, size: 128, offset: 768)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !428, file: !75, line: 648, baseType: !197, offset: 896)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !428, file: !75, line: 649, baseType: !232, size: 16, offset: 896)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !428, file: !75, line: 650, baseType: !226, size: 8, offset: 912)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !428, file: !75, line: 651, baseType: !226, size: 8, offset: 920)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !428, file: !75, line: 652, baseType: !2577, size: 64, offset: 960)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !428, file: !75, line: 659, baseType: !214, size: 64, offset: 1024)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !428, file: !75, line: 660, baseType: !759, size: 256, offset: 1088)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !428, file: !75, line: 662, baseType: !214, size: 64, offset: 1344)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !428, file: !75, line: 663, baseType: !214, size: 64, offset: 1408)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !428, file: !75, line: 665, baseType: !221, size: 128, offset: 1472)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !428, file: !75, line: 666, baseType: !171, size: 128, offset: 1600)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !428, file: !75, line: 675, baseType: !171, size: 128, offset: 1728)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !428, file: !75, line: 676, baseType: !171, size: 128, offset: 1856)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !428, file: !75, line: 677, baseType: !171, size: 128, offset: 1984)
!2835 = !DIDerivedType(tag: DW_TAG_member, scope: !428, file: !75, line: 678, baseType: !2836, size: 128, offset: 2112)
!2836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !428, file: !75, line: 678, size: 128, elements: !2837)
!2837 = !{!2838, !2839}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2836, file: !75, line: 679, baseType: !633, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2836, file: !75, line: 680, baseType: !371, size: 128, align: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !428, file: !75, line: 682, baseType: !765, size: 64, offset: 2240)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !428, file: !75, line: 683, baseType: !765, size: 64, offset: 2304)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !428, file: !75, line: 684, baseType: !739, size: 32, offset: 2368)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !428, file: !75, line: 685, baseType: !739, size: 32, offset: 2400)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !428, file: !75, line: 686, baseType: !739, size: 32, offset: 2432)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !428, file: !75, line: 688, baseType: !739, size: 32, offset: 2464)
!2846 = !DIDerivedType(tag: DW_TAG_member, scope: !428, file: !75, line: 690, baseType: !2847, size: 64, offset: 2496)
!2847 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !428, file: !75, line: 690, size: 64, elements: !2848)
!2848 = !{!2849, !3072}
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2847, file: !75, line: 691, baseType: !2850, size: 64)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2852)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !75, line: 1822, size: 2048, elements: !2853)
!2853 = !{!2854, !2855, !2859, !2864, !2868, !2869, !2870, !2874, !2887, !2888, !2896, !2900, !2901, !2905, !2906, !2910, !2915, !2916, !2920, !2924, !3032, !3036, !3037, !3041, !3042, !3046, !3050, !3055, !3059, !3063, !3067, !3071}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2852, file: !75, line: 1823, baseType: !162, size: 64)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2852, file: !75, line: 1824, baseType: !2856, size: 64, offset: 64)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{!529, !358, !529, !159}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2852, file: !75, line: 1825, baseType: !2860, size: 64, offset: 128)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!314, !358, !283, !328, !2863}
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2852, file: !75, line: 1826, baseType: !2865, size: 64, offset: 192)
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 64)
!2866 = !DISubroutineType(types: !2867)
!2867 = !{!314, !358, !193, !328, !2863}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2852, file: !75, line: 1827, baseType: !836, size: 64, offset: 256)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2852, file: !75, line: 1828, baseType: !836, size: 64, offset: 320)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2852, file: !75, line: 1829, baseType: !2871, size: 64, offset: 384)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = !DISubroutineType(types: !2873)
!2873 = !{!159, !839, !488}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2852, file: !75, line: 1830, baseType: !2875, size: 64, offset: 448)
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 64)
!2876 = !DISubroutineType(types: !2877)
!2877 = !{!159, !358, !2878}
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !75, line: 1776, size: 128, elements: !2880)
!2880 = !{!2881, !2886}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2879, file: !75, line: 1777, baseType: !2882, size: 64)
!2882 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !75, line: 1773, baseType: !2883)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2884 = !DISubroutineType(types: !2885)
!2885 = !{!159, !2878, !193, !159, !529, !184, !7}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2879, file: !75, line: 1778, baseType: !529, size: 64, offset: 64)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2852, file: !75, line: 1831, baseType: !2875, size: 64, offset: 512)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2852, file: !75, line: 1832, baseType: !2889, size: 64, offset: 576)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2890, size: 64)
!2890 = !DISubroutineType(types: !2891)
!2891 = !{!2892, !358, !2894}
!2892 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2893, line: 52, baseType: !7)
!2893 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!2895 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !617, line: 27, flags: DIFlagFwdDecl)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2852, file: !75, line: 1833, baseType: !2897, size: 64, offset: 640)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!215, !358, !7, !214}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2852, file: !75, line: 1834, baseType: !2897, size: 64, offset: 704)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2852, file: !75, line: 1835, baseType: !2902, size: 64, offset: 768)
!2902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2903, size: 64)
!2903 = !DISubroutineType(types: !2904)
!2904 = !{!159, !358, !971}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2852, file: !75, line: 1836, baseType: !214, size: 64, offset: 832)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2852, file: !75, line: 1837, baseType: !2907, size: 64, offset: 896)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{!159, !427, !358}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2852, file: !75, line: 1838, baseType: !2911, size: 64, offset: 960)
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2912 = !DISubroutineType(types: !2913)
!2913 = !{!159, !358, !2914}
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !75, line: 1007, baseType: !165)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2852, file: !75, line: 1839, baseType: !2907, size: 64, offset: 1024)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2852, file: !75, line: 1840, baseType: !2917, size: 64, offset: 1088)
!2917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2918, size: 64)
!2918 = !DISubroutineType(types: !2919)
!2919 = !{!159, !358, !529, !529, !159}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2852, file: !75, line: 1841, baseType: !2921, size: 64, offset: 1152)
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 64)
!2922 = !DISubroutineType(types: !2923)
!2923 = !{!159, !159, !358, !159}
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2852, file: !75, line: 1842, baseType: !2925, size: 64, offset: 1216)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DISubroutineType(types: !2927)
!2927 = !{!159, !358, !159, !2928}
!2928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2929, size: 64)
!2929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !75, line: 1062, size: 1664, elements: !2930)
!2930 = !{!2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2962, !2963, !2964, !2977, !3008}
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2929, file: !75, line: 1063, baseType: !2928, size: 64)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2929, file: !75, line: 1064, baseType: !171, size: 128, offset: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2929, file: !75, line: 1065, baseType: !221, size: 128, offset: 192)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2929, file: !75, line: 1066, baseType: !171, size: 128, offset: 320)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2929, file: !75, line: 1069, baseType: !171, size: 128, offset: 448)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2929, file: !75, line: 1072, baseType: !2914, size: 64, offset: 576)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2929, file: !75, line: 1073, baseType: !7, size: 32, offset: 640)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2929, file: !75, line: 1074, baseType: !228, size: 8, offset: 672)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2929, file: !75, line: 1075, baseType: !7, size: 32, offset: 704)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2929, file: !75, line: 1076, baseType: !159, size: 32, offset: 736)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2929, file: !75, line: 1077, baseType: !1467, size: 128, offset: 768)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2929, file: !75, line: 1078, baseType: !358, size: 64, offset: 896)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2929, file: !75, line: 1079, baseType: !529, size: 64, offset: 960)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2929, file: !75, line: 1080, baseType: !529, size: 64, offset: 1024)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2929, file: !75, line: 1082, baseType: !2946, size: 64, offset: 1088)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !75, line: 1314, size: 320, elements: !2948)
!2948 = !{!2949, !2957, !2958, !2959, !2960, !2961}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2947, file: !75, line: 1315, baseType: !2950)
!2950 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2951, line: 20, baseType: !2952)
!2951 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2951, line: 11, elements: !2953)
!2953 = !{!2954}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2952, file: !2951, line: 12, baseType: !2955)
!2955 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !209, line: 33, baseType: !2956)
!2956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !209, line: 31, elements: !211)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2947, file: !75, line: 1316, baseType: !159, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2947, file: !75, line: 1317, baseType: !159, size: 32, offset: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2947, file: !75, line: 1318, baseType: !2946, size: 64, offset: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2947, file: !75, line: 1319, baseType: !358, size: 64, offset: 128)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2947, file: !75, line: 1320, baseType: !371, size: 128, align: 64, offset: 192)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2929, file: !75, line: 1084, baseType: !214, size: 64, offset: 1152)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2929, file: !75, line: 1085, baseType: !214, size: 64, offset: 1216)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2929, file: !75, line: 1087, baseType: !2965, size: 64, offset: 1280)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2967)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !75, line: 1011, size: 128, elements: !2968)
!2968 = !{!2969, !2973}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2967, file: !75, line: 1012, baseType: !2970, size: 64)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DISubroutineType(types: !2972)
!2972 = !{null, !2928, !2928}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2967, file: !75, line: 1013, baseType: !2974, size: 64, offset: 64)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DISubroutineType(types: !2976)
!2976 = !{null, !2928}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2929, file: !75, line: 1088, baseType: !2978, size: 64, offset: 1344)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2980)
!2980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !75, line: 1016, size: 512, elements: !2981)
!2981 = !{!2982, !2986, !2990, !2991, !2995, !2999, !3003, !3007}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2980, file: !75, line: 1017, baseType: !2983, size: 64)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DISubroutineType(types: !2985)
!2985 = !{!2914, !2914}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2980, file: !75, line: 1018, baseType: !2987, size: 64, offset: 64)
!2987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2988, size: 64)
!2988 = !DISubroutineType(types: !2989)
!2989 = !{null, !2914}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2980, file: !75, line: 1019, baseType: !2974, size: 64, offset: 128)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2980, file: !75, line: 1020, baseType: !2992, size: 64, offset: 192)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{!159, !2928, !159}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2980, file: !75, line: 1021, baseType: !2996, size: 64, offset: 256)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{!488, !2928}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2980, file: !75, line: 1022, baseType: !3000, size: 64, offset: 320)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!159, !2928, !159, !174}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2980, file: !75, line: 1023, baseType: !3004, size: 64, offset: 384)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = !DISubroutineType(types: !3006)
!3006 = !{null, !2928, !813}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2980, file: !75, line: 1024, baseType: !2996, size: 64, offset: 448)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2929, file: !75, line: 1097, baseType: !3009, size: 256, offset: 1408)
!3009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2929, file: !75, line: 1089, size: 256, elements: !3010)
!3010 = !{!3011, !3020, !3026}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3009, file: !75, line: 1090, baseType: !3012, size: 256)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3013, line: 10, size: 256, elements: !3014)
!3013 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3014 = !{!3015, !3016, !3019}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3012, file: !3013, line: 11, baseType: !155, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3012, file: !3013, line: 12, baseType: !3017, size: 64, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3018 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3013, line: 5, flags: DIFlagFwdDecl)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3012, file: !3013, line: 13, baseType: !171, size: 128, offset: 128)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3009, file: !75, line: 1091, baseType: !3021, size: 64)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3013, line: 17, size: 64, elements: !3022)
!3022 = !{!3023}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3021, file: !3013, line: 18, baseType: !3024, size: 64)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3013, line: 16, flags: DIFlagFwdDecl)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3009, file: !75, line: 1096, baseType: !3027, size: 192)
!3027 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3009, file: !75, line: 1092, size: 192, elements: !3028)
!3028 = !{!3029, !3030, !3031}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3027, file: !75, line: 1093, baseType: !171, size: 128)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3027, file: !75, line: 1094, baseType: !159, size: 32, offset: 128)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3027, file: !75, line: 1095, baseType: !7, size: 32, offset: 160)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2852, file: !75, line: 1843, baseType: !3033, size: 64, offset: 1280)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!314, !358, !713, !159, !328, !2863, !159}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2852, file: !75, line: 1844, baseType: !1091, size: 64, offset: 1344)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2852, file: !75, line: 1845, baseType: !3038, size: 64, offset: 1408)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!159, !159}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2852, file: !75, line: 1846, baseType: !2925, size: 64, offset: 1472)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2852, file: !75, line: 1847, baseType: !3043, size: 64, offset: 1536)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{!314, !2085, !358, !2863, !328, !7}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2852, file: !75, line: 1848, baseType: !3047, size: 64, offset: 1600)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!314, !358, !2863, !2085, !328, !7}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2852, file: !75, line: 1849, baseType: !3051, size: 64, offset: 1664)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DISubroutineType(types: !3053)
!3053 = !{!159, !358, !215, !3054, !813}
!3054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2852, file: !75, line: 1850, baseType: !3056, size: 64, offset: 1728)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!215, !358, !159, !529, !529}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2852, file: !75, line: 1852, baseType: !3060, size: 64, offset: 1792)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{null, !703, !358}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2852, file: !75, line: 1856, baseType: !3064, size: 64, offset: 1856)
!3064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3065, size: 64)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{!314, !358, !529, !358, !529, !328, !7}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2852, file: !75, line: 1858, baseType: !3068, size: 64, offset: 1920)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3069 = !DISubroutineType(types: !3070)
!3070 = !{!529, !358, !529, !358, !529, !529, !7}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2852, file: !75, line: 1861, baseType: !2917, size: 64, offset: 1984)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2847, file: !75, line: 692, baseType: !656, size: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !428, file: !75, line: 694, baseType: !3074, size: 64, offset: 2560)
!3074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3075, size: 64)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !75, line: 1100, size: 384, elements: !3076)
!3076 = !{!3077, !3078, !3079, !3080}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3075, file: !75, line: 1101, baseType: !197)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3075, file: !75, line: 1102, baseType: !171, size: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3075, file: !75, line: 1103, baseType: !171, size: 128, offset: 128)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3075, file: !75, line: 1104, baseType: !171, size: 128, offset: 256)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !428, file: !75, line: 695, baseType: !727, size: 1216, align: 64, offset: 2624)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !428, file: !75, line: 696, baseType: !171, size: 128, offset: 3840)
!3083 = !DIDerivedType(tag: DW_TAG_member, scope: !428, file: !75, line: 697, baseType: !3084, size: 64, offset: 3968)
!3084 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !428, file: !75, line: 697, size: 64, elements: !3085)
!3085 = !{!3086, !3087, !3088, !3099, !3100}
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3084, file: !75, line: 698, baseType: !2085, size: 64)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3084, file: !75, line: 699, baseType: !2602, size: 64)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3084, file: !75, line: 700, baseType: !3089, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3091, line: 14, size: 832, elements: !3092)
!3091 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3092 = !{!3093, !3094, !3095, !3096, !3097, !3098}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3090, file: !3091, line: 15, baseType: !244, size: 512)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3090, file: !3091, line: 16, baseType: !162, size: 64, offset: 512)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3090, file: !3091, line: 17, baseType: !2850, size: 64, offset: 576)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3090, file: !3091, line: 18, baseType: !171, size: 128, offset: 640)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3090, file: !3091, line: 19, baseType: !511, size: 32, offset: 768)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3090, file: !3091, line: 20, baseType: !7, size: 32, offset: 800)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3084, file: !75, line: 701, baseType: !283, size: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3084, file: !75, line: 702, baseType: !7, size: 32)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !428, file: !75, line: 705, baseType: !157, size: 32, offset: 4032)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !428, file: !75, line: 708, baseType: !157, size: 32, offset: 4064)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !428, file: !75, line: 709, baseType: !2684, size: 64, offset: 4096)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !428, file: !75, line: 720, baseType: !165, size: 64, offset: 4160)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !389, file: !386, line: 98, baseType: !3106, size: 256, offset: 448)
!3106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 256, elements: !2217)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !389, file: !386, line: 101, baseType: !3108, size: 32, offset: 704)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3109, line: 25, size: 32, elements: !3110)
!3109 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3110 = !{!3111}
!3111 = !DIDerivedType(tag: DW_TAG_member, scope: !3108, file: !3109, line: 26, baseType: !3112, size: 32)
!3112 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3108, file: !3109, line: 26, size: 32, elements: !3113)
!3113 = !{!3114}
!3114 = !DIDerivedType(tag: DW_TAG_member, scope: !3112, file: !3109, line: 30, baseType: !3115, size: 32)
!3115 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3112, file: !3109, line: 30, size: 32, elements: !3116)
!3116 = !{!3117, !3118}
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3115, file: !3109, line: 31, baseType: !197)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3115, file: !3109, line: 32, baseType: !159, size: 32)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !389, file: !386, line: 102, baseType: !2701, size: 64, offset: 768)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !389, file: !386, line: 103, baseType: !597, size: 64, offset: 832)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !389, file: !386, line: 104, baseType: !214, size: 64, offset: 896)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !389, file: !386, line: 105, baseType: !165, size: 64, offset: 960)
!3123 = !DIDerivedType(tag: DW_TAG_member, scope: !389, file: !386, line: 107, baseType: !3124, size: 128, offset: 1024)
!3124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !386, line: 107, size: 128, elements: !3125)
!3125 = !{!3126, !3127}
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3124, file: !386, line: 108, baseType: !171, size: 128)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3124, file: !386, line: 109, baseType: !3128, size: 64)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !389, file: !386, line: 111, baseType: !171, size: 128, offset: 1152)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !389, file: !386, line: 112, baseType: !171, size: 128, offset: 1280)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !389, file: !386, line: 120, baseType: !3132, size: 128, offset: 1408)
!3132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !389, file: !386, line: 116, size: 128, elements: !3133)
!3133 = !{!3134, !3135, !3136}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3132, file: !386, line: 117, baseType: !221, size: 128)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3132, file: !386, line: 118, baseType: !403, size: 128)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3132, file: !386, line: 119, baseType: !371, size: 128, align: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !359, file: !75, line: 922, baseType: !427, size: 64, offset: 256)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !359, file: !75, line: 923, baseType: !2850, size: 64, offset: 320)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !359, file: !75, line: 929, baseType: !197, offset: 384)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !359, file: !75, line: 930, baseType: !74, size: 32, offset: 384)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !359, file: !75, line: 931, baseType: !763, size: 64, offset: 448)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !359, file: !75, line: 932, baseType: !7, size: 32, offset: 512)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !359, file: !75, line: 933, baseType: !2697, size: 32, offset: 544)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !359, file: !75, line: 934, baseType: !1163, size: 192, offset: 576)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !359, file: !75, line: 935, baseType: !529, size: 64, offset: 768)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !359, file: !75, line: 936, baseType: !3147, size: 192, offset: 832)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !75, line: 885, size: 192, elements: !3148)
!3148 = !{!3149, !3150, !3151, !3152, !3153, !3154}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3147, file: !75, line: 886, baseType: !2950)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3147, file: !75, line: 887, baseType: !1457, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3147, file: !75, line: 888, baseType: !83, size: 32, offset: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3147, file: !75, line: 889, baseType: !433, size: 32, offset: 96)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3147, file: !75, line: 889, baseType: !433, size: 32, offset: 128)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3147, file: !75, line: 890, baseType: !159, size: 32, offset: 160)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !359, file: !75, line: 937, baseType: !1533, size: 64, offset: 1024)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !359, file: !75, line: 938, baseType: !3157, size: 256, offset: 1088)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !75, line: 896, size: 256, elements: !3158)
!3158 = !{!3159, !3160, !3161, !3162, !3163, !3164}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3157, file: !75, line: 897, baseType: !214, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3157, file: !75, line: 898, baseType: !7, size: 32, offset: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3157, file: !75, line: 899, baseType: !7, size: 32, offset: 96)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3157, file: !75, line: 902, baseType: !7, size: 32, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3157, file: !75, line: 903, baseType: !7, size: 32, offset: 160)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3157, file: !75, line: 904, baseType: !529, size: 64, offset: 192)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !359, file: !75, line: 940, baseType: !184, size: 64, offset: 1344)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !359, file: !75, line: 945, baseType: !165, size: 64, offset: 1408)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !359, file: !75, line: 949, baseType: !171, size: 128, offset: 1472)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !359, file: !75, line: 950, baseType: !171, size: 128, offset: 1600)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !359, file: !75, line: 952, baseType: !726, size: 64, offset: 1728)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !359, file: !75, line: 953, baseType: !899, size: 32, offset: 1792)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !359, file: !75, line: 954, baseType: !899, size: 32, offset: 1824)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !349, file: !308, line: 174, baseType: !355, size: 64, offset: 320)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !349, file: !308, line: 176, baseType: !3174, size: 64, offset: 384)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!159, !358, !250, !348, !971}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !337, file: !308, line: 90, baseType: !332, size: 64, offset: 192)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !337, file: !308, line: 91, baseType: !3179, size: 64, offset: 256)
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !298, file: !245, line: 143, baseType: !3181, size: 64, offset: 256)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 64)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{!3184, !250}
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3186)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !92, line: 39, size: 384, elements: !3187)
!3187 = !{!3188, !3189, !3193, !3197, !3203, !3207}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3186, file: !92, line: 40, baseType: !91, size: 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3186, file: !92, line: 41, baseType: !3190, size: 64, offset: 64)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DISubroutineType(types: !3192)
!3192 = !{!488}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3186, file: !92, line: 42, baseType: !3194, size: 64, offset: 128)
!3194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3195, size: 64)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{!165}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3186, file: !92, line: 43, baseType: !3198, size: 64, offset: 192)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = !DISubroutineType(types: !3200)
!3200 = !{!2114, !3201}
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !92, line: 19, flags: DIFlagFwdDecl)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3186, file: !92, line: 44, baseType: !3204, size: 64, offset: 256)
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3205, size: 64)
!3205 = !DISubroutineType(types: !3206)
!3206 = !{!2114}
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3186, file: !92, line: 45, baseType: !466, size: 64, offset: 320)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !298, file: !245, line: 144, baseType: !3209, size: 64, offset: 320)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 64)
!3210 = !DISubroutineType(types: !3211)
!3211 = !{!2114, !250}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !298, file: !245, line: 145, baseType: !3213, size: 64, offset: 384)
!3213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3214, size: 64)
!3214 = !DISubroutineType(types: !3215)
!3215 = !{null, !250, !3216, !3217}
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !244, file: !245, line: 70, baseType: !3219, size: 64, offset: 384)
!3219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3220, size: 64)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !617, line: 123, size: 1024, elements: !3221)
!3221 = !{!3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3350, !3351, !3352, !3353, !3354}
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3220, file: !617, line: 124, baseType: !739, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3220, file: !617, line: 125, baseType: !739, size: 32, offset: 32)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3220, file: !617, line: 135, baseType: !3219, size: 64, offset: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3220, file: !617, line: 136, baseType: !193, size: 64, offset: 128)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3220, file: !617, line: 138, baseType: !752, size: 192, align: 64, offset: 192)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3220, file: !617, line: 140, baseType: !2114, size: 64, offset: 384)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3220, file: !617, line: 141, baseType: !7, size: 32, offset: 448)
!3229 = !DIDerivedType(tag: DW_TAG_member, scope: !3220, file: !617, line: 142, baseType: !3230, size: 256, offset: 512)
!3230 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3220, file: !617, line: 142, size: 256, elements: !3231)
!3231 = !{!3232, !3278, !3282}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3230, file: !617, line: 143, baseType: !3233, size: 192)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !617, line: 91, size: 192, elements: !3234)
!3234 = !{!3235, !3236, !3237}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3233, file: !617, line: 92, baseType: !214, size: 64)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3233, file: !617, line: 94, baseType: !748, size: 64, offset: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3233, file: !617, line: 100, baseType: !3238, size: 64, offset: 128)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !617, line: 180, size: 704, elements: !3240)
!3240 = !{!3241, !3242, !3243, !3250, !3251, !3252, !3276, !3277}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3239, file: !617, line: 182, baseType: !3219, size: 64)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3239, file: !617, line: 183, baseType: !7, size: 32, offset: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3239, file: !617, line: 186, baseType: !3244, size: 192, offset: 128)
!3244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3245, line: 19, size: 192, elements: !3246)
!3245 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3246 = !{!3247, !3248, !3249}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3244, file: !3245, line: 20, baseType: !731, size: 128)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3244, file: !3245, line: 21, baseType: !7, size: 32, offset: 128)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3244, file: !3245, line: 22, baseType: !7, size: 32, offset: 160)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3239, file: !617, line: 187, baseType: !155, size: 32, offset: 320)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3239, file: !617, line: 188, baseType: !155, size: 32, offset: 352)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3239, file: !617, line: 189, baseType: !3253, size: 64, offset: 384)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !617, line: 168, size: 320, elements: !3255)
!3255 = !{!3256, !3260, !3264, !3268, !3272}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3254, file: !617, line: 169, baseType: !3257, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = !DISubroutineType(types: !3259)
!3259 = !{!159, !703, !3238}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3254, file: !617, line: 171, baseType: !3261, size: 64, offset: 64)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{!159, !3219, !193, !323}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3254, file: !617, line: 173, baseType: !3265, size: 64, offset: 128)
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!159, !3219}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3254, file: !617, line: 174, baseType: !3269, size: 64, offset: 192)
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DISubroutineType(types: !3271)
!3271 = !{!159, !3219, !3219, !193}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3254, file: !617, line: 176, baseType: !3273, size: 64, offset: 256)
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 64)
!3274 = !DISubroutineType(types: !3275)
!3275 = !{!159, !703, !3219, !3238}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3239, file: !617, line: 192, baseType: !171, size: 128, offset: 448)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3239, file: !617, line: 194, baseType: !1467, size: 128, offset: 576)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3230, file: !617, line: 144, baseType: !3279, size: 64)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !617, line: 103, size: 64, elements: !3280)
!3280 = !{!3281}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3279, file: !617, line: 104, baseType: !3219, size: 64)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3230, file: !617, line: 145, baseType: !3283, size: 256)
!3283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !617, line: 107, size: 256, elements: !3284)
!3284 = !{!3285, !3345, !3348, !3349}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3283, file: !617, line: 108, baseType: !3286, size: 64)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3288)
!3288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !617, line: 217, size: 768, elements: !3289)
!3289 = !{!3290, !3310, !3314, !3318, !3322, !3326, !3330, !3334, !3335, !3336, !3337, !3341}
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3288, file: !617, line: 222, baseType: !3291, size: 64)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!159, !3294}
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 64)
!3295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !617, line: 197, size: 1088, elements: !3296)
!3296 = !{!3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3295, file: !617, line: 199, baseType: !3219, size: 64)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3295, file: !617, line: 200, baseType: !358, size: 64, offset: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3295, file: !617, line: 201, baseType: !703, size: 64, offset: 128)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3295, file: !617, line: 202, baseType: !165, size: 64, offset: 192)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3295, file: !617, line: 205, baseType: !1163, size: 192, offset: 256)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3295, file: !617, line: 206, baseType: !1163, size: 192, offset: 448)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3295, file: !617, line: 207, baseType: !159, size: 32, offset: 640)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3295, file: !617, line: 208, baseType: !171, size: 128, offset: 704)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3295, file: !617, line: 209, baseType: !283, size: 64, offset: 832)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3295, file: !617, line: 211, baseType: !328, size: 64, offset: 896)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3295, file: !617, line: 212, baseType: !488, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3295, file: !617, line: 213, baseType: !488, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3295, file: !617, line: 214, baseType: !999, size: 64, offset: 1024)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3288, file: !617, line: 223, baseType: !3311, size: 64, offset: 64)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{null, !3294}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3288, file: !617, line: 236, baseType: !3315, size: 64, offset: 128)
!3315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3316, size: 64)
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!159, !703, !165}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3288, file: !617, line: 238, baseType: !3319, size: 64, offset: 192)
!3319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3320, size: 64)
!3320 = !DISubroutineType(types: !3321)
!3321 = !{!165, !703, !2863}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3288, file: !617, line: 239, baseType: !3323, size: 64, offset: 256)
!3323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3324, size: 64)
!3324 = !DISubroutineType(types: !3325)
!3325 = !{!165, !703, !165, !2863}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3288, file: !617, line: 240, baseType: !3327, size: 64, offset: 320)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{null, !703, !165}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3288, file: !617, line: 242, baseType: !3331, size: 64, offset: 384)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!314, !3294, !283, !328, !529}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3288, file: !617, line: 252, baseType: !328, size: 64, offset: 448)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3288, file: !617, line: 259, baseType: !488, size: 8, offset: 512)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3288, file: !617, line: 260, baseType: !3331, size: 64, offset: 576)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3288, file: !617, line: 263, baseType: !3338, size: 64, offset: 640)
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!2892, !3294, !2894}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3288, file: !617, line: 266, baseType: !3342, size: 64, offset: 704)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DISubroutineType(types: !3344)
!3344 = !{!159, !3294, !971}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3283, file: !617, line: 109, baseType: !3346, size: 64, offset: 64)
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 64)
!3347 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !617, line: 31, flags: DIFlagFwdDecl)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3283, file: !617, line: 110, baseType: !529, size: 64, offset: 128)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3283, file: !617, line: 111, baseType: !3219, size: 64, offset: 192)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3220, file: !617, line: 148, baseType: !165, size: 64, offset: 768)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3220, file: !617, line: 154, baseType: !184, size: 64, offset: 832)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3220, file: !617, line: 156, baseType: !232, size: 16, offset: 896)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3220, file: !617, line: 157, baseType: !323, size: 16, offset: 912)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3220, file: !617, line: 158, baseType: !3355, size: 64, offset: 960)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !617, line: 32, flags: DIFlagFwdDecl)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !244, file: !245, line: 71, baseType: !3358, size: 32, offset: 448)
!3358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3359, line: 19, size: 32, elements: !3360)
!3359 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3360 = !{!3361}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3358, file: !3359, line: 20, baseType: !1219, size: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !244, file: !245, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !244, file: !245, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !244, file: !245, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !244, file: !245, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !244, file: !245, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !241, file: !104, line: 463, baseType: !3368, size: 64, offset: 512)
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !241, file: !104, line: 465, baseType: !3370, size: 64, offset: 576)
!3370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3371, size: 64)
!3371 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !104, line: 36, flags: DIFlagFwdDecl)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !241, file: !104, line: 467, baseType: !193, size: 64, offset: 640)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !241, file: !104, line: 468, baseType: !3374, size: 64, offset: 704)
!3374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3375, size: 64)
!3375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3376)
!3376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !104, line: 87, size: 384, elements: !3377)
!3377 = !{!3378, !3379, !3380, !3384, !3389, !3393}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3376, file: !104, line: 88, baseType: !193, size: 64)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3376, file: !104, line: 89, baseType: !334, size: 64, offset: 64)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3376, file: !104, line: 90, baseType: !3381, size: 64, offset: 128)
!3381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3382 = !DISubroutineType(types: !3383)
!3383 = !{!159, !3368, !278}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3376, file: !104, line: 91, baseType: !3385, size: 64, offset: 192)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!283, !3368, !3388, !3216, !3217}
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3376, file: !104, line: 93, baseType: !3390, size: 64, offset: 256)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{null, !3368}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3376, file: !104, line: 95, baseType: !3394, size: 64, offset: 320)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3396)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !111, line: 278, size: 1472, elements: !3397)
!3397 = !{!3398, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3396, file: !111, line: 279, baseType: !3399, size: 64)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 64)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{!159, !3368}
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3396, file: !111, line: 280, baseType: !3390, size: 64, offset: 64)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3396, file: !111, line: 281, baseType: !3399, size: 64, offset: 128)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3396, file: !111, line: 282, baseType: !3399, size: 64, offset: 192)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3396, file: !111, line: 283, baseType: !3399, size: 64, offset: 256)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3396, file: !111, line: 284, baseType: !3399, size: 64, offset: 320)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3396, file: !111, line: 285, baseType: !3399, size: 64, offset: 384)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3396, file: !111, line: 286, baseType: !3399, size: 64, offset: 448)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3396, file: !111, line: 287, baseType: !3399, size: 64, offset: 512)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3396, file: !111, line: 288, baseType: !3399, size: 64, offset: 576)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3396, file: !111, line: 289, baseType: !3399, size: 64, offset: 640)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3396, file: !111, line: 290, baseType: !3399, size: 64, offset: 704)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3396, file: !111, line: 291, baseType: !3399, size: 64, offset: 768)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3396, file: !111, line: 292, baseType: !3399, size: 64, offset: 832)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3396, file: !111, line: 293, baseType: !3399, size: 64, offset: 896)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3396, file: !111, line: 294, baseType: !3399, size: 64, offset: 960)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3396, file: !111, line: 295, baseType: !3399, size: 64, offset: 1024)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3396, file: !111, line: 296, baseType: !3399, size: 64, offset: 1088)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3396, file: !111, line: 297, baseType: !3399, size: 64, offset: 1152)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3396, file: !111, line: 298, baseType: !3399, size: 64, offset: 1216)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3396, file: !111, line: 299, baseType: !3399, size: 64, offset: 1280)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3396, file: !111, line: 300, baseType: !3399, size: 64, offset: 1344)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3396, file: !111, line: 301, baseType: !3399, size: 64, offset: 1408)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !241, file: !104, line: 470, baseType: !3425, size: 64, offset: 768)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 64)
!3426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3427, line: 82, size: 1408, elements: !3428)
!3427 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3428 = !{!3429, !3430, !3431, !3432, !3433, !3434, !3435, !3494, !3495, !3496, !3497, !3498, !3499, !3500, !3501, !3502, !3503, !3504, !3505, !3506, !3510, !3513, !3514}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3426, file: !3427, line: 83, baseType: !193, size: 64)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3426, file: !3427, line: 84, baseType: !193, size: 64, offset: 64)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3426, file: !3427, line: 85, baseType: !3368, size: 64, offset: 128)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3426, file: !3427, line: 86, baseType: !334, size: 64, offset: 192)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3426, file: !3427, line: 87, baseType: !334, size: 64, offset: 256)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3426, file: !3427, line: 88, baseType: !334, size: 64, offset: 320)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3426, file: !3427, line: 90, baseType: !3436, size: 64, offset: 384)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!159, !3368, !3439}
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !98, line: 95, size: 1152, elements: !3441)
!3441 = !{!3442, !3443, !3444, !3445, !3446, !3447, !3448, !3461, !3474, !3475, !3476, !3477, !3478, !3486, !3487, !3488, !3489, !3490, !3491}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3440, file: !98, line: 96, baseType: !193, size: 64)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3440, file: !98, line: 97, baseType: !3425, size: 64, offset: 64)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3440, file: !98, line: 99, baseType: !162, size: 64, offset: 128)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3440, file: !98, line: 100, baseType: !193, size: 64, offset: 192)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3440, file: !98, line: 102, baseType: !488, size: 8, offset: 256)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3440, file: !98, line: 103, baseType: !97, size: 32, offset: 288)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3440, file: !98, line: 105, baseType: !3449, size: 64, offset: 320)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3451)
!3451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3452, line: 262, size: 1600, elements: !3453)
!3452 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3453 = !{!3454, !3455, !3456, !3460}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3451, file: !3452, line: 263, baseType: !2687, size: 256)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3451, file: !3452, line: 264, baseType: !2687, size: 256, offset: 256)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3451, file: !3452, line: 265, baseType: !3457, size: 1024, offset: 512)
!3457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, size: 1024, elements: !3458)
!3458 = !{!3459}
!3459 = !DISubrange(count: 128)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3451, file: !3452, line: 266, baseType: !2114, size: 64, offset: 1536)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3440, file: !98, line: 106, baseType: !3462, size: 64, offset: 384)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3464)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3452, line: 210, size: 256, elements: !3465)
!3465 = !{!3466, !3470, !3472, !3473}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3464, file: !3452, line: 211, baseType: !3467, size: 72)
!3467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 72, elements: !3468)
!3468 = !{!3469}
!3469 = !DISubrange(count: 9)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3464, file: !3452, line: 212, baseType: !3471, size: 64, offset: 128)
!3471 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3452, line: 14, baseType: !214)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3464, file: !3452, line: 213, baseType: !157, size: 32, offset: 192)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3464, file: !3452, line: 214, baseType: !157, size: 32, offset: 224)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3440, file: !98, line: 108, baseType: !3399, size: 64, offset: 448)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3440, file: !98, line: 109, baseType: !3390, size: 64, offset: 512)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3440, file: !98, line: 110, baseType: !3399, size: 64, offset: 576)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3440, file: !98, line: 111, baseType: !3390, size: 64, offset: 640)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3440, file: !98, line: 112, baseType: !3479, size: 64, offset: 704)
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3480, size: 64)
!3480 = !DISubroutineType(types: !3481)
!3481 = !{!159, !3368, !3482}
!3482 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !111, line: 52, baseType: !3483)
!3483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !111, line: 50, size: 32, elements: !3484)
!3484 = !{!3485}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3483, file: !111, line: 51, baseType: !159, size: 32)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3440, file: !98, line: 113, baseType: !3399, size: 64, offset: 768)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3440, file: !98, line: 114, baseType: !334, size: 64, offset: 832)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3440, file: !98, line: 115, baseType: !334, size: 64, offset: 896)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3440, file: !98, line: 117, baseType: !3394, size: 64, offset: 960)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3440, file: !98, line: 118, baseType: !3390, size: 64, offset: 1024)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3440, file: !98, line: 120, baseType: !3492, size: 64, offset: 1088)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !98, line: 120, flags: DIFlagFwdDecl)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3426, file: !3427, line: 91, baseType: !3381, size: 64, offset: 448)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3426, file: !3427, line: 92, baseType: !3399, size: 64, offset: 512)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3426, file: !3427, line: 93, baseType: !3390, size: 64, offset: 576)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3426, file: !3427, line: 94, baseType: !3399, size: 64, offset: 640)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3426, file: !3427, line: 95, baseType: !3390, size: 64, offset: 704)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3426, file: !3427, line: 97, baseType: !3399, size: 64, offset: 768)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3426, file: !3427, line: 98, baseType: !3399, size: 64, offset: 832)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3426, file: !3427, line: 100, baseType: !3479, size: 64, offset: 896)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3426, file: !3427, line: 101, baseType: !3399, size: 64, offset: 960)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3426, file: !3427, line: 103, baseType: !3399, size: 64, offset: 1024)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3426, file: !3427, line: 105, baseType: !3399, size: 64, offset: 1088)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3426, file: !3427, line: 107, baseType: !3394, size: 64, offset: 1152)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3426, file: !3427, line: 109, baseType: !3507, size: 64, offset: 1216)
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3508, size: 64)
!3508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3509)
!3509 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3427, line: 109, flags: DIFlagFwdDecl)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3426, file: !3427, line: 111, baseType: !3511, size: 64, offset: 1280)
!3511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3512 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3427, line: 111, flags: DIFlagFwdDecl)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3426, file: !3427, line: 112, baseType: !637, offset: 1344)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3426, file: !3427, line: 114, baseType: !488, size: 8, offset: 1344)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !241, file: !104, line: 471, baseType: !3439, size: 64, offset: 832)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !241, file: !104, line: 473, baseType: !165, size: 64, offset: 896)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !241, file: !104, line: 475, baseType: !165, size: 64, offset: 960)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !241, file: !104, line: 480, baseType: !1163, size: 192, offset: 1024)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !241, file: !104, line: 484, baseType: !3520, size: 576, offset: 1216)
!3520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !104, line: 361, size: 576, elements: !3521)
!3521 = !{!3522, !3523, !3524, !3525, !3526, !3527}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3520, file: !104, line: 362, baseType: !171, size: 128)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3520, file: !104, line: 363, baseType: !171, size: 128, offset: 128)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3520, file: !104, line: 364, baseType: !171, size: 128, offset: 256)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3520, file: !104, line: 365, baseType: !171, size: 128, offset: 384)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3520, file: !104, line: 366, baseType: !488, size: 8, offset: 512)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3520, file: !104, line: 367, baseType: !103, size: 32, offset: 544)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !241, file: !104, line: 485, baseType: !3529, size: 2304, offset: 1792)
!3529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !111, line: 565, size: 2304, elements: !3530)
!3530 = !{!3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3626, !3630}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3529, file: !111, line: 566, baseType: !3482, size: 32)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3529, file: !111, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3529, file: !111, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3529, file: !111, line: 569, baseType: !488, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3529, file: !111, line: 570, baseType: !488, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3529, file: !111, line: 571, baseType: !488, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3529, file: !111, line: 572, baseType: !488, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3529, file: !111, line: 573, baseType: !488, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3529, file: !111, line: 574, baseType: !488, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3529, file: !111, line: 575, baseType: !488, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3529, file: !111, line: 576, baseType: !488, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3529, file: !111, line: 577, baseType: !155, size: 32, offset: 64)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3529, file: !111, line: 578, baseType: !197, offset: 96)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3529, file: !111, line: 580, baseType: !171, size: 128, offset: 128)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3529, file: !111, line: 581, baseType: !1488, size: 192, offset: 256)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3529, file: !111, line: 582, baseType: !3547, size: 64, offset: 448)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3549, line: 43, size: 1472, elements: !3550)
!3549 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3550 = !{!3551, !3552, !3553, !3554, !3555, !3558, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3548, file: !3549, line: 44, baseType: !193, size: 64)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3548, file: !3549, line: 45, baseType: !159, size: 32, offset: 64)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3548, file: !3549, line: 46, baseType: !171, size: 128, offset: 128)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3548, file: !3549, line: 47, baseType: !197, offset: 256)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3548, file: !3549, line: 48, baseType: !3556, size: 64, offset: 256)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !111, line: 533, flags: DIFlagFwdDecl)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3548, file: !3549, line: 49, baseType: !3559, size: 320, offset: 320)
!3559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3560, line: 11, size: 320, elements: !3561)
!3560 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3561 = !{!3562, !3563, !3564, !3569}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3559, file: !3560, line: 16, baseType: !221, size: 128)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3559, file: !3560, line: 17, baseType: !214, size: 64, offset: 128)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3559, file: !3560, line: 18, baseType: !3565, size: 64, offset: 192)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{null, !3568}
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3559, file: !3560, line: 19, baseType: !155, size: 32, offset: 256)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3548, file: !3549, line: 50, baseType: !214, size: 64, offset: 640)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3548, file: !3549, line: 51, baseType: !1289, size: 64, offset: 704)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3548, file: !3549, line: 52, baseType: !1289, size: 64, offset: 768)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3548, file: !3549, line: 53, baseType: !1289, size: 64, offset: 832)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3548, file: !3549, line: 54, baseType: !1289, size: 64, offset: 896)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3548, file: !3549, line: 55, baseType: !1289, size: 64, offset: 960)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3548, file: !3549, line: 56, baseType: !214, size: 64, offset: 1024)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3548, file: !3549, line: 57, baseType: !214, size: 64, offset: 1088)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3548, file: !3549, line: 58, baseType: !214, size: 64, offset: 1152)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3548, file: !3549, line: 59, baseType: !214, size: 64, offset: 1216)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3548, file: !3549, line: 60, baseType: !214, size: 64, offset: 1280)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3548, file: !3549, line: 61, baseType: !3368, size: 64, offset: 1344)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3548, file: !3549, line: 62, baseType: !488, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3548, file: !3549, line: 63, baseType: !488, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3529, file: !111, line: 583, baseType: !488, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3529, file: !111, line: 584, baseType: !488, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3529, file: !111, line: 585, baseType: !488, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3529, file: !111, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3529, file: !111, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3529, file: !111, line: 592, baseType: !1281, size: 512, offset: 576)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3529, file: !111, line: 593, baseType: !184, size: 64, offset: 1088)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3529, file: !111, line: 594, baseType: !1944, size: 256, offset: 1152)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3529, file: !111, line: 595, baseType: !1467, size: 128, offset: 1408)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3529, file: !111, line: 596, baseType: !3556, size: 64, offset: 1536)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3529, file: !111, line: 597, baseType: !739, size: 32, offset: 1600)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3529, file: !111, line: 598, baseType: !739, size: 32, offset: 1632)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3529, file: !111, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3529, file: !111, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3529, file: !111, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3529, file: !111, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3529, file: !111, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3529, file: !111, line: 604, baseType: !488, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3529, file: !111, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3529, file: !111, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3529, file: !111, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3529, file: !111, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3529, file: !111, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3529, file: !111, line: 610, baseType: !7, size: 32, offset: 1696)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3529, file: !111, line: 611, baseType: !110, size: 32, offset: 1728)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3529, file: !111, line: 612, baseType: !118, size: 32, offset: 1760)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3529, file: !111, line: 613, baseType: !159, size: 32, offset: 1792)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3529, file: !111, line: 614, baseType: !159, size: 32, offset: 1824)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3529, file: !111, line: 615, baseType: !184, size: 64, offset: 1856)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3529, file: !111, line: 616, baseType: !184, size: 64, offset: 1920)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3529, file: !111, line: 617, baseType: !184, size: 64, offset: 1984)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3529, file: !111, line: 618, baseType: !184, size: 64, offset: 2048)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3529, file: !111, line: 620, baseType: !3617, size: 64, offset: 2112)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !111, line: 536, size: 256, elements: !3619)
!3619 = !{!3620, !3621, !3622, !3623}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3618, file: !111, line: 537, baseType: !197)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3618, file: !111, line: 538, baseType: !7, size: 32)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3618, file: !111, line: 540, baseType: !171, size: 128, offset: 64)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3618, file: !111, line: 543, baseType: !3624, size: 64, offset: 192)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !111, line: 534, flags: DIFlagFwdDecl)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3529, file: !111, line: 621, baseType: !3627, size: 64, offset: 2176)
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3628, size: 64)
!3628 = !DISubroutineType(types: !3629)
!3629 = !{null, !3368, !1430}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3529, file: !111, line: 622, baseType: !3631, size: 64, offset: 2240)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !111, line: 622, flags: DIFlagFwdDecl)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !241, file: !104, line: 486, baseType: !3634, size: 64, offset: 4096)
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3635, size: 64)
!3635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !111, line: 642, size: 1792, elements: !3636)
!3636 = !{!3637, !3638, !3639, !3643, !3644, !3645}
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3635, file: !111, line: 643, baseType: !3396, size: 1472)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3635, file: !111, line: 644, baseType: !3399, size: 64, offset: 1472)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3635, file: !111, line: 645, baseType: !3640, size: 64, offset: 1536)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 64)
!3641 = !DISubroutineType(types: !3642)
!3642 = !{null, !3368, !488}
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3635, file: !111, line: 646, baseType: !3399, size: 64, offset: 1600)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3635, file: !111, line: 647, baseType: !3390, size: 64, offset: 1664)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3635, file: !111, line: 648, baseType: !3390, size: 64, offset: 1728)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !241, file: !104, line: 493, baseType: !3647, size: 64, offset: 4160)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !104, line: 493, flags: DIFlagFwdDecl)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !241, file: !104, line: 499, baseType: !171, size: 128, offset: 4224)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !241, file: !104, line: 502, baseType: !3651, size: 64, offset: 4352)
!3651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3652, size: 64)
!3652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3653)
!3653 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !104, line: 502, flags: DIFlagFwdDecl)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !241, file: !104, line: 504, baseType: !234, size: 64, offset: 4416)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !241, file: !104, line: 505, baseType: !184, size: 64, offset: 4480)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !241, file: !104, line: 510, baseType: !184, size: 64, offset: 4544)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !241, file: !104, line: 511, baseType: !3658, size: 64, offset: 4608)
!3658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3659, size: 64)
!3659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3660)
!3660 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !104, line: 511, flags: DIFlagFwdDecl)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !241, file: !104, line: 513, baseType: !3662, size: 64, offset: 4672)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !104, line: 288, size: 128, elements: !3664)
!3664 = !{!3665, !3666}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3663, file: !104, line: 293, baseType: !7, size: 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3663, file: !104, line: 294, baseType: !214, size: 64, offset: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !241, file: !104, line: 515, baseType: !171, size: 128, offset: 4736)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !241, file: !104, line: 526, baseType: !3669, offset: 4864)
!3669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3670, line: 5, elements: !211)
!3670 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !241, file: !104, line: 528, baseType: !3672, size: 64, offset: 4864)
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 64)
!3673 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3674, line: 14, flags: DIFlagFwdDecl)
!3674 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !241, file: !104, line: 529, baseType: !3676, size: 64, offset: 4928)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3678, line: 17, size: 192, elements: !3679)
!3678 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3679 = !{!3680, !3681, !3764}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3677, file: !3678, line: 18, baseType: !3676, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3677, file: !3678, line: 19, baseType: !3682, size: 64, offset: 64)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3684)
!3684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3678, line: 110, size: 1152, elements: !3685)
!3685 = !{!3686, !3690, !3694, !3700, !3706, !3710, !3714, !3719, !3723, !3724, !3728, !3732, !3736, !3747, !3748, !3749, !3750, !3760}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3684, file: !3678, line: 111, baseType: !3687, size: 64)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 64)
!3688 = !DISubroutineType(types: !3689)
!3689 = !{!3676, !3676}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3684, file: !3678, line: 112, baseType: !3691, size: 64, offset: 64)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{null, !3676}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3684, file: !3678, line: 113, baseType: !3695, size: 64, offset: 128)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!488, !3698}
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 64)
!3699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3677)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3684, file: !3678, line: 114, baseType: !3701, size: 64, offset: 192)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{!2114, !3698, !3704}
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 64)
!3705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !241)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3684, file: !3678, line: 116, baseType: !3707, size: 64, offset: 256)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3708, size: 64)
!3708 = !DISubroutineType(types: !3709)
!3709 = !{!488, !3698, !193}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3684, file: !3678, line: 118, baseType: !3711, size: 64, offset: 320)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{!159, !3698, !193, !7, !165, !328}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3684, file: !3678, line: 123, baseType: !3715, size: 64, offset: 384)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!159, !3698, !193, !3718, !328}
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3684, file: !3678, line: 126, baseType: !3720, size: 64, offset: 448)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 64)
!3721 = !DISubroutineType(types: !3722)
!3722 = !{!193, !3698}
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3684, file: !3678, line: 127, baseType: !3720, size: 64, offset: 512)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3684, file: !3678, line: 128, baseType: !3725, size: 64, offset: 576)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!3676, !3698}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3684, file: !3678, line: 130, baseType: !3729, size: 64, offset: 640)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!3676, !3698, !3676}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3684, file: !3678, line: 133, baseType: !3733, size: 64, offset: 704)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{!3676, !3698, !193}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3684, file: !3678, line: 135, baseType: !3737, size: 64, offset: 768)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!159, !3698, !193, !193, !7, !7, !3740}
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3678, line: 43, size: 640, elements: !3742)
!3742 = !{!3743, !3744, !3745}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3741, file: !3678, line: 44, baseType: !3676, size: 64)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3741, file: !3678, line: 45, baseType: !7, size: 32, offset: 64)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3741, file: !3678, line: 46, baseType: !3746, size: 512, offset: 128)
!3746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 512, elements: !1319)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3684, file: !3678, line: 140, baseType: !3729, size: 64, offset: 832)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3684, file: !3678, line: 143, baseType: !3725, size: 64, offset: 896)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3684, file: !3678, line: 145, baseType: !3687, size: 64, offset: 960)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3684, file: !3678, line: 146, baseType: !3751, size: 64, offset: 1024)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!159, !3698, !3754}
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 64)
!3755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3678, line: 29, size: 128, elements: !3756)
!3756 = !{!3757, !3758, !3759}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3755, file: !3678, line: 30, baseType: !7, size: 32)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3755, file: !3678, line: 31, baseType: !7, size: 32, offset: 32)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3755, file: !3678, line: 32, baseType: !3698, size: 64, offset: 64)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3684, file: !3678, line: 148, baseType: !3761, size: 64, offset: 1088)
!3761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3762, size: 64)
!3762 = !DISubroutineType(types: !3763)
!3763 = !{!159, !3698, !3368}
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3677, file: !3678, line: 20, baseType: !3368, size: 64, offset: 128)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !241, file: !104, line: 534, baseType: !511, size: 32, offset: 4992)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !241, file: !104, line: 535, baseType: !155, size: 32, offset: 5024)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !241, file: !104, line: 537, baseType: !197, offset: 5056)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !241, file: !104, line: 538, baseType: !171, size: 128, offset: 5056)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !241, file: !104, line: 540, baseType: !3770, size: 64, offset: 5184)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3772, line: 54, size: 960, elements: !3773)
!3772 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3773 = !{!3774, !3775, !3776, !3777, !3778, !3779, !3780, !3784, !3788, !3789, !3790, !3791, !3795, !3799, !3800}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3771, file: !3772, line: 55, baseType: !193, size: 64)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3771, file: !3772, line: 56, baseType: !162, size: 64, offset: 64)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3771, file: !3772, line: 58, baseType: !334, size: 64, offset: 128)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3771, file: !3772, line: 59, baseType: !334, size: 64, offset: 192)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3771, file: !3772, line: 60, baseType: !250, size: 64, offset: 256)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3771, file: !3772, line: 62, baseType: !3381, size: 64, offset: 320)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3771, file: !3772, line: 63, baseType: !3781, size: 64, offset: 384)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!283, !3368, !3388}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3771, file: !3772, line: 65, baseType: !3785, size: 64, offset: 448)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{null, !3770}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3771, file: !3772, line: 66, baseType: !3390, size: 64, offset: 512)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3771, file: !3772, line: 68, baseType: !3399, size: 64, offset: 576)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3771, file: !3772, line: 70, baseType: !3184, size: 64, offset: 640)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3771, file: !3772, line: 71, baseType: !3792, size: 64, offset: 704)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!2114, !3368}
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3771, file: !3772, line: 73, baseType: !3796, size: 64, offset: 768)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DISubroutineType(types: !3798)
!3798 = !{null, !3368, !3216, !3217}
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3771, file: !3772, line: 75, baseType: !3394, size: 64, offset: 832)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3771, file: !3772, line: 77, baseType: !3511, size: 64, offset: 896)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !241, file: !104, line: 541, baseType: !334, size: 64, offset: 5248)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !241, file: !104, line: 543, baseType: !3390, size: 64, offset: 5312)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !241, file: !104, line: 544, baseType: !3804, size: 64, offset: 5376)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !104, line: 45, flags: DIFlagFwdDecl)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !241, file: !104, line: 545, baseType: !3807, size: 64, offset: 5440)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !104, line: 47, flags: DIFlagFwdDecl)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !241, file: !104, line: 547, baseType: !488, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !241, file: !104, line: 548, baseType: !488, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !241, file: !104, line: 549, baseType: !488, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !241, file: !104, line: 550, baseType: !488, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "managed_alloc", scope: !238, file: !125, line: 164, baseType: !488, size: 8, offset: 5568)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !238, file: !125, line: 165, baseType: !3815, size: 320, offset: 5632)
!3815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 320, elements: !3816)
!3816 = !{!3817}
!3817 = !DISubrange(count: 5)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !238, file: !125, line: 166, baseType: !193, size: 64, offset: 5952)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "input_phys", scope: !238, file: !125, line: 167, baseType: !193, size: 64, offset: 6016)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "input_id", scope: !238, file: !125, line: 168, baseType: !3821, size: 64, offset: 6080)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_id", file: !3822, line: 59, size: 64, elements: !3823)
!3822 = !DIFile(filename: "./include/uapi/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!3823 = !{!3824, !3825, !3826, !3827}
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !3821, file: !3822, line: 60, baseType: !231, size: 16)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3821, file: !3822, line: 61, baseType: !231, size: 16, offset: 16)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !3821, file: !3822, line: 62, baseType: !231, size: 16, offset: 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3821, file: !3822, line: 63, baseType: !231, size: 16, offset: 48)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "driver_name", scope: !238, file: !125, line: 169, baseType: !193, size: 64, offset: 6144)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !238, file: !125, line: 170, baseType: !193, size: 64, offset: 6208)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "rc_map", scope: !238, file: !125, line: 171, baseType: !177, size: 256, offset: 6272)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !238, file: !125, line: 172, baseType: !1163, size: 192, offset: 6528)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !238, file: !125, line: 173, baseType: !7, size: 32, offset: 6720)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !238, file: !125, line: 174, baseType: !3834, size: 64, offset: 6784)
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ir_raw_event_ctrl", file: !3836, line: 48, size: 33728, elements: !3837)
!3836 = !DIFile(filename: "drivers/media/rc/rc-core-priv.h", directory: "/home/lizy2001/genbc/linux")
!3837 = !{!3838, !3839, !3840, !3881, !3882, !3883, !3884, !3885, !3886}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3835, file: !3836, line: 49, baseType: !171, size: 128)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !3835, file: !3836, line: 50, baseType: !1206, size: 64, offset: 128)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "kfifo", scope: !3835, file: !3836, line: 52, baseType: !3841, size: 32960, offset: 192)
!3841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3835, file: !3836, line: 52, size: 32960, elements: !3842)
!3842 = !{!3843, !3877}
!3843 = !DIDerivedType(tag: DW_TAG_member, scope: !3841, file: !3836, line: 52, baseType: !3844, size: 192)
!3844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3841, file: !3836, line: 52, size: 192, elements: !3845)
!3845 = !{!3846, !3855, !3869, !3872, !3875, !3876}
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "kfifo", scope: !3844, file: !3836, line: 52, baseType: !3847, size: 192)
!3847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kfifo", file: !3848, line: 44, size: 192, elements: !3849)
!3848 = !DIFile(filename: "./include/linux/kfifo.h", directory: "/home/lizy2001/genbc/linux")
!3849 = !{!3850, !3851, !3852, !3853, !3854}
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !3847, file: !3848, line: 45, baseType: !7, size: 32)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !3847, file: !3848, line: 46, baseType: !7, size: 32, offset: 32)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3847, file: !3848, line: 47, baseType: !7, size: 32, offset: 64)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "esize", scope: !3847, file: !3848, line: 48, baseType: !7, size: 32, offset: 96)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3847, file: !3848, line: 49, baseType: !165, size: 64, offset: 128)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3844, file: !3836, line: 52, baseType: !3856, size: 64)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ir_raw_event", file: !125, line: 299, size: 64, elements: !3858)
!3858 = !{!3859, !3864, !3865, !3866, !3867, !3868}
!3859 = !DIDerivedType(tag: DW_TAG_member, scope: !3857, file: !125, line: 300, baseType: !3860, size: 32)
!3860 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3857, file: !125, line: 300, size: 32, elements: !3861)
!3861 = !{!3862, !3863}
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3860, file: !125, line: 301, baseType: !155, size: 32)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "carrier", scope: !3860, file: !125, line: 302, baseType: !155, size: 32)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "duty_cycle", scope: !3857, file: !125, line: 304, baseType: !226, size: 8, offset: 32)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "pulse", scope: !3857, file: !125, line: 306, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 40)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !3857, file: !125, line: 307, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 40)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3857, file: !125, line: 308, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 40)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_report", scope: !3857, file: !125, line: 309, baseType: !7, size: 1, offset: 43, flags: DIFlagBitField, extraData: i64 40)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "const_type", scope: !3844, file: !3836, line: 52, baseType: !3870, size: 64)
!3870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3871, size: 64)
!3871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3857)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "rectype", scope: !3844, file: !3836, line: 52, baseType: !3873, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !195, elements: !1709)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3844, file: !3836, line: 52, baseType: !3856, size: 64)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_const", scope: !3844, file: !3836, line: 52, baseType: !3870, size: 64)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3841, file: !3836, line: 52, baseType: !3878, size: 32768, offset: 192)
!3878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3857, size: 32768, elements: !3879)
!3879 = !{!3880}
!3880 = !DISubrange(count: 512)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "last_event", scope: !3835, file: !3836, line: 53, baseType: !1289, size: 64, offset: 33152)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3835, file: !3836, line: 54, baseType: !237, size: 64, offset: 33216)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "edge_spinlock", scope: !3835, file: !3836, line: 56, baseType: !197, offset: 33280)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "edge_handle", scope: !3835, file: !3836, line: 57, baseType: !3559, size: 320, offset: 33280)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ev", scope: !3835, file: !3836, line: 60, baseType: !3857, size: 64, offset: 33600)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "this_ev", scope: !3835, file: !3836, line: 61, baseType: !3857, size: 64, offset: 33664)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "input_dev", scope: !238, file: !125, line: 175, baseType: !3888, size: 64, offset: 6848)
!3888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3889, size: 64)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev", file: !3890, line: 131, size: 10432, elements: !3891)
!3890 = !DIFile(filename: "./include/linux/input.h", directory: "/home/lizy2001/genbc/linux")
!3891 = !{!3892, !3893, !3894, !3895, !3896, !3897, !3898, !3900, !3901, !3902, !3903, !3904, !3905, !3907, !3908, !3909, !3910, !3911, !3912, !3926, !3931, !4026, !4029, !4030, !4031, !4033, !4036, !4046, !4047, !4048, !4049, !4050, !4054, !4058, !4062, !4066, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4153, !4154}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3889, file: !3890, line: 132, baseType: !193, size: 64)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !3889, file: !3890, line: 133, baseType: !193, size: 64, offset: 64)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "uniq", scope: !3889, file: !3890, line: 134, baseType: !193, size: 64, offset: 128)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3889, file: !3890, line: 135, baseType: !3821, size: 64, offset: 192)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !3889, file: !3890, line: 137, baseType: !1357, size: 64, offset: 256)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !3889, file: !3890, line: 139, baseType: !1357, size: 64, offset: 320)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !3889, file: !3890, line: 140, baseType: !3899, size: 768, offset: 384)
!3899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 768, elements: !2223)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !3889, file: !3890, line: 141, baseType: !1357, size: 64, offset: 1152)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !3889, file: !3890, line: 142, baseType: !1357, size: 64, offset: 1216)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !3889, file: !3890, line: 143, baseType: !1357, size: 64, offset: 1280)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !3889, file: !3890, line: 144, baseType: !1357, size: 64, offset: 1344)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !3889, file: !3890, line: 145, baseType: !1357, size: 64, offset: 1408)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !3889, file: !3890, line: 146, baseType: !3906, size: 128, offset: 1472)
!3906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !214, size: 128, elements: !1555)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !3889, file: !3890, line: 147, baseType: !1357, size: 64, offset: 1600)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "hint_events_per_packet", scope: !3889, file: !3890, line: 149, baseType: !7, size: 32, offset: 1664)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "keycodemax", scope: !3889, file: !3890, line: 151, baseType: !7, size: 32, offset: 1696)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "keycodesize", scope: !3889, file: !3890, line: 152, baseType: !7, size: 32, offset: 1728)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !3889, file: !3890, line: 153, baseType: !165, size: 64, offset: 1792)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "setkeycode", scope: !3889, file: !3890, line: 155, baseType: !3913, size: 64, offset: 1856)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DISubroutineType(types: !3915)
!3915 = !{!159, !3888, !3916, !2670}
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3918)
!3918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_keymap_entry", file: !3822, line: 114, size: 320, elements: !3919)
!3919 = !{!3920, !3921, !3922, !3923, !3924}
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3918, file: !3822, line: 116, baseType: !227, size: 8)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3918, file: !3822, line: 117, baseType: !227, size: 8, offset: 8)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3918, file: !3822, line: 118, baseType: !231, size: 16, offset: 16)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !3918, file: !3822, line: 119, baseType: !157, size: 32, offset: 32)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "scancode", scope: !3918, file: !3822, line: 120, baseType: !3925, size: 256, offset: 64)
!3925 = !DICompositeType(tag: DW_TAG_array_type, baseType: !227, size: 256, elements: !2217)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "getkeycode", scope: !3889, file: !3890, line: 158, baseType: !3927, size: 64, offset: 1920)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{!159, !3888, !3930}
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "ff", scope: !3889, file: !3890, line: 161, baseType: !3932, size: 64, offset: 1984)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 64)
!3933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_device", file: !3890, line: 534, size: 896, elements: !3934)
!3934 = !{!3935, !4002, !4006, !4010, !4014, !4015, !4019, !4020, !4021, !4022, !4023, !4024}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "upload", scope: !3933, file: !3890, line: 535, baseType: !3936, size: 64)
!3936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3937, size: 64)
!3937 = !DISubroutineType(types: !3938)
!3938 = !{!159, !3888, !3939, !3939}
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_effect", file: !3822, line: 450, size: 384, elements: !3941)
!3941 = !{!3942, !3943, !3944, !3945, !3950, !3955}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3940, file: !3822, line: 451, baseType: !231, size: 16)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3940, file: !3822, line: 452, baseType: !1194, size: 16, offset: 16)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !3940, file: !3822, line: 453, baseType: !231, size: 16, offset: 32)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "trigger", scope: !3940, file: !3822, line: 454, baseType: !3946, size: 32, offset: 48)
!3946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_trigger", file: !3822, line: 316, size: 32, elements: !3947)
!3947 = !{!3948, !3949}
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !3946, file: !3822, line: 317, baseType: !231, size: 16)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !3946, file: !3822, line: 318, baseType: !231, size: 16, offset: 16)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "replay", scope: !3940, file: !3822, line: 455, baseType: !3951, size: 32, offset: 80)
!3951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_replay", file: !3822, line: 306, size: 32, elements: !3952)
!3952 = !{!3953, !3954}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3951, file: !3822, line: 307, baseType: !231, size: 16)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !3951, file: !3822, line: 308, baseType: !231, size: 16, offset: 16)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !3940, file: !3822, line: 463, baseType: !3956, size: 256, offset: 128)
!3956 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3940, file: !3822, line: 457, size: 256, elements: !3957)
!3957 = !{!3958, !3969, !3975, !3987, !3997}
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "constant", scope: !3956, file: !3822, line: 458, baseType: !3959, size: 80)
!3959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_constant_effect", file: !3822, line: 345, size: 80, elements: !3960)
!3960 = !{!3961, !3962}
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !3959, file: !3822, line: 346, baseType: !1194, size: 16)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !3959, file: !3822, line: 347, baseType: !3963, size: 64, offset: 16)
!3963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_envelope", file: !3822, line: 333, size: 64, elements: !3964)
!3964 = !{!3965, !3966, !3967, !3968}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "attack_length", scope: !3963, file: !3822, line: 334, baseType: !231, size: 16)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "attack_level", scope: !3963, file: !3822, line: 335, baseType: !231, size: 16, offset: 16)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "fade_length", scope: !3963, file: !3822, line: 336, baseType: !231, size: 16, offset: 32)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "fade_level", scope: !3963, file: !3822, line: 337, baseType: !231, size: 16, offset: 48)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "ramp", scope: !3956, file: !3822, line: 459, baseType: !3970, size: 96)
!3970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_ramp_effect", file: !3822, line: 356, size: 96, elements: !3971)
!3971 = !{!3972, !3973, !3974}
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "start_level", scope: !3970, file: !3822, line: 357, baseType: !1194, size: 16)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "end_level", scope: !3970, file: !3822, line: 358, baseType: !1194, size: 16, offset: 16)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !3970, file: !3822, line: 359, baseType: !3963, size: 64, offset: 32)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "periodic", scope: !3956, file: !3822, line: 460, baseType: !3976, size: 256)
!3976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_periodic_effect", file: !3822, line: 401, size: 256, elements: !3977)
!3977 = !{!3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985}
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "waveform", scope: !3976, file: !3822, line: 402, baseType: !231, size: 16)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !3976, file: !3822, line: 403, baseType: !231, size: 16, offset: 16)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "magnitude", scope: !3976, file: !3822, line: 404, baseType: !1194, size: 16, offset: 32)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3976, file: !3822, line: 405, baseType: !1194, size: 16, offset: 48)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !3976, file: !3822, line: 406, baseType: !231, size: 16, offset: 64)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "envelope", scope: !3976, file: !3822, line: 408, baseType: !3963, size: 64, offset: 80)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "custom_len", scope: !3976, file: !3822, line: 410, baseType: !157, size: 32, offset: 160)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "custom_data", scope: !3976, file: !3822, line: 411, baseType: !3986, size: 64, offset: 192)
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "condition", scope: !3956, file: !3822, line: 461, baseType: !3988, size: 192)
!3988 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3989, size: 192, elements: !1555)
!3989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_condition_effect", file: !3822, line: 372, size: 96, elements: !3990)
!3990 = !{!3991, !3992, !3993, !3994, !3995, !3996}
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "right_saturation", scope: !3989, file: !3822, line: 373, baseType: !231, size: 16)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "left_saturation", scope: !3989, file: !3822, line: 374, baseType: !231, size: 16, offset: 16)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "right_coeff", scope: !3989, file: !3822, line: 376, baseType: !1194, size: 16, offset: 32)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "left_coeff", scope: !3989, file: !3822, line: 377, baseType: !1194, size: 16, offset: 48)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "deadband", scope: !3989, file: !3822, line: 379, baseType: !231, size: 16, offset: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !3989, file: !3822, line: 380, baseType: !1194, size: 16, offset: 80)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "rumble", scope: !3956, file: !3822, line: 462, baseType: !3998, size: 32)
!3998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ff_rumble_effect", file: !3822, line: 422, size: 32, elements: !3999)
!3999 = !{!4000, !4001}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "strong_magnitude", scope: !3998, file: !3822, line: 423, baseType: !231, size: 16)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "weak_magnitude", scope: !3998, file: !3822, line: 424, baseType: !231, size: 16, offset: 16)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "erase", scope: !3933, file: !3890, line: 537, baseType: !4003, size: 64, offset: 64)
!4003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4004, size: 64)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{!159, !3888, !159}
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "playback", scope: !3933, file: !3890, line: 539, baseType: !4007, size: 64, offset: 128)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{!159, !3888, !159, !159}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "set_gain", scope: !3933, file: !3890, line: 540, baseType: !4011, size: 64, offset: 192)
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{null, !3888, !230}
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "set_autocenter", scope: !3933, file: !3890, line: 541, baseType: !4011, size: 64, offset: 256)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !3933, file: !3890, line: 543, baseType: !4016, size: 64, offset: 320)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{null, !3932}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3933, file: !3890, line: 545, baseType: !165, size: 64, offset: 384)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !3933, file: !3890, line: 547, baseType: !3906, size: 128, offset: 448)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3933, file: !3890, line: 549, baseType: !1163, size: 192, offset: 576)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "max_effects", scope: !3933, file: !3890, line: 551, baseType: !159, size: 32, offset: 768)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "effects", scope: !3933, file: !3890, line: 552, baseType: !3939, size: 64, offset: 832)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "effect_owners", scope: !3933, file: !3890, line: 553, baseType: !4025, offset: 896)
!4025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !358, elements: !2318)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "poller", scope: !3889, file: !3890, line: 163, baseType: !4027, size: 64, offset: 2048)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4028, size: 64)
!4028 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_dev_poller", file: !3890, line: 24, flags: DIFlagFwdDecl)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_key", scope: !3889, file: !3890, line: 165, baseType: !7, size: 32, offset: 2112)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3889, file: !3890, line: 166, baseType: !3559, size: 320, offset: 2176)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "rep", scope: !3889, file: !3890, line: 168, baseType: !4032, size: 64, offset: 2496)
!4032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 64, elements: !1555)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "mt", scope: !3889, file: !3890, line: 170, baseType: !4034, size: 64, offset: 2560)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = !DICompositeType(tag: DW_TAG_structure_type, name: "input_mt", file: !3890, line: 170, flags: DIFlagFwdDecl)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "absinfo", scope: !3889, file: !3890, line: 172, baseType: !4037, size: 64, offset: 2624)
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_absinfo", file: !3822, line: 90, size: 192, elements: !4039)
!4039 = !{!4040, !4041, !4042, !4043, !4044, !4045}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4038, file: !3822, line: 91, baseType: !1431, size: 32)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !4038, file: !3822, line: 92, baseType: !1431, size: 32, offset: 32)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !4038, file: !3822, line: 93, baseType: !1431, size: 32, offset: 64)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !4038, file: !3822, line: 94, baseType: !1431, size: 32, offset: 96)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "flat", scope: !4038, file: !3822, line: 95, baseType: !1431, size: 32, offset: 128)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !4038, file: !3822, line: 96, baseType: !1431, size: 32, offset: 160)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3889, file: !3890, line: 174, baseType: !3899, size: 768, offset: 2688)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "led", scope: !3889, file: !3890, line: 175, baseType: !1357, size: 64, offset: 3456)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "snd", scope: !3889, file: !3890, line: 176, baseType: !1357, size: 64, offset: 3520)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "sw", scope: !3889, file: !3890, line: 177, baseType: !1357, size: 64, offset: 3584)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3889, file: !3890, line: 179, baseType: !4051, size: 64, offset: 3648)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{!159, !3888}
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !3889, file: !3890, line: 180, baseType: !4055, size: 64, offset: 3712)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{null, !3888}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3889, file: !3890, line: 181, baseType: !4059, size: 64, offset: 3776)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{!159, !3888, !358}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3889, file: !3890, line: 182, baseType: !4063, size: 64, offset: 3840)
!4063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4064, size: 64)
!4064 = !DISubroutineType(types: !4065)
!4065 = !{!159, !3888, !7, !7, !159}
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "grab", scope: !3889, file: !3890, line: 184, baseType: !4067, size: 64, offset: 3904)
!4067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4068, size: 64)
!4068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handle", file: !3890, line: 337, size: 576, elements: !4069)
!4069 = !{!4070, !4071, !4072, !4073, !4074, !4140, !4141}
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4068, file: !3890, line: 339, baseType: !165, size: 64)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4068, file: !3890, line: 341, baseType: !159, size: 32, offset: 64)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4068, file: !3890, line: 342, baseType: !193, size: 64, offset: 128)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4068, file: !3890, line: 344, baseType: !3888, size: 64, offset: 192)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4068, file: !3890, line: 345, baseType: !4075, size: 64, offset: 256)
!4075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4076, size: 64)
!4076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_handler", file: !3890, line: 302, size: 960, elements: !4077)
!4077 = !{!4078, !4079, !4083, !4094, !4098, !4102, !4129, !4133, !4134, !4135, !4136, !4137, !4138, !4139}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4076, file: !3890, line: 304, baseType: !165, size: 64)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4076, file: !3890, line: 306, baseType: !4080, size: 64, offset: 64)
!4080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4081, size: 64)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{null, !4067, !7, !7, !159}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4076, file: !3890, line: 307, baseType: !4084, size: 64, offset: 128)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = !DISubroutineType(types: !4086)
!4086 = !{null, !4067, !4087, !7}
!4087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4088, size: 64)
!4088 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4089)
!4089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_value", file: !3890, line: 32, size: 64, elements: !4090)
!4090 = !{!4091, !4092, !4093}
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4089, file: !3890, line: 33, baseType: !231, size: 16)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !4089, file: !3890, line: 34, baseType: !231, size: 16, offset: 16)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4089, file: !3890, line: 35, baseType: !1431, size: 32, offset: 32)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4076, file: !3890, line: 309, baseType: !4095, size: 64, offset: 192)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4096 = !DISubroutineType(types: !4097)
!4097 = !{!488, !4067, !7, !7, !159}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4076, file: !3890, line: 310, baseType: !4099, size: 64, offset: 256)
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{!488, !4075, !3888}
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !4076, file: !3890, line: 311, baseType: !4103, size: 64, offset: 320)
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4104, size: 64)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{!159, !4075, !3888, !4106}
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4107, size: 64)
!4107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4108)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "input_device_id", file: !3452, line: 342, size: 1600, elements: !4109)
!4109 = !{!4110, !4111, !4112, !4113, !4114, !4115, !4117, !4119, !4120, !4121, !4122, !4123, !4124, !4126, !4127, !4128}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4108, file: !3452, line: 344, baseType: !3471, size: 64)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "bustype", scope: !4108, file: !3452, line: 346, baseType: !231, size: 16, offset: 64)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4108, file: !3452, line: 347, baseType: !231, size: 16, offset: 80)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "product", scope: !4108, file: !3452, line: 348, baseType: !231, size: 16, offset: 96)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4108, file: !3452, line: 349, baseType: !231, size: 16, offset: 112)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "evbit", scope: !4108, file: !3452, line: 351, baseType: !4116, size: 64, offset: 128)
!4116 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3471, size: 64, elements: !1358)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "keybit", scope: !4108, file: !3452, line: 352, baseType: !4118, size: 768, offset: 192)
!4118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3471, size: 768, elements: !2223)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "relbit", scope: !4108, file: !3452, line: 353, baseType: !4116, size: 64, offset: 960)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "absbit", scope: !4108, file: !3452, line: 354, baseType: !4116, size: 64, offset: 1024)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "mscbit", scope: !4108, file: !3452, line: 355, baseType: !4116, size: 64, offset: 1088)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "ledbit", scope: !4108, file: !3452, line: 356, baseType: !4116, size: 64, offset: 1152)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "sndbit", scope: !4108, file: !3452, line: 357, baseType: !4116, size: 64, offset: 1216)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "ffbit", scope: !4108, file: !3452, line: 358, baseType: !4125, size: 128, offset: 1280)
!4125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3471, size: 128, elements: !1555)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "swbit", scope: !4108, file: !3452, line: 359, baseType: !4116, size: 64, offset: 1408)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "propbit", scope: !4108, file: !3452, line: 360, baseType: !4116, size: 64, offset: 1472)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "driver_info", scope: !4108, file: !3452, line: 362, baseType: !3471, size: 64, offset: 1536)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !4076, file: !3890, line: 312, baseType: !4130, size: 64, offset: 384)
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4131 = !DISubroutineType(types: !4132)
!4132 = !{null, !4067}
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4076, file: !3890, line: 313, baseType: !4130, size: 64, offset: 448)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_minors", scope: !4076, file: !3890, line: 315, baseType: !488, size: 8, offset: 512)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4076, file: !3890, line: 316, baseType: !159, size: 32, offset: 544)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4076, file: !3890, line: 317, baseType: !193, size: 64, offset: 576)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4076, file: !3890, line: 319, baseType: !4106, size: 64, offset: 640)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !4076, file: !3890, line: 321, baseType: !171, size: 128, offset: 704)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4076, file: !3890, line: 322, baseType: !171, size: 128, offset: 832)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "d_node", scope: !4068, file: !3890, line: 347, baseType: !171, size: 128, offset: 320)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "h_node", scope: !4068, file: !3890, line: 348, baseType: !171, size: 128, offset: 448)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "event_lock", scope: !3889, file: !3890, line: 186, baseType: !197, offset: 3968)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3889, file: !3890, line: 187, baseType: !1163, size: 192, offset: 3968)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !3889, file: !3890, line: 189, baseType: !7, size: 32, offset: 4160)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "going_away", scope: !3889, file: !3890, line: 190, baseType: !488, size: 8, offset: 4192)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3889, file: !3890, line: 192, baseType: !241, size: 5568, offset: 4224)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "h_list", scope: !3889, file: !3890, line: 194, baseType: !171, size: 128, offset: 9792)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3889, file: !3890, line: 195, baseType: !171, size: 128, offset: 9920)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "num_vals", scope: !3889, file: !3890, line: 197, baseType: !7, size: 32, offset: 10048)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "max_vals", scope: !3889, file: !3890, line: 198, baseType: !7, size: 32, offset: 10080)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "vals", scope: !3889, file: !3890, line: 199, baseType: !4152, size: 64, offset: 10112)
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "devres_managed", scope: !3889, file: !3890, line: 201, baseType: !488, size: 8, offset: 10176)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !3889, file: !3890, line: 203, baseType: !4155, size: 192, offset: 10240)
!4155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1289, size: 192, elements: !284)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "driver_type", scope: !238, file: !125, line: 176, baseType: !124, size: 32, offset: 6912)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "idle", scope: !238, file: !125, line: 177, baseType: !488, size: 8, offset: 6944)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "encode_wakeup", scope: !238, file: !125, line: 178, baseType: !488, size: 8, offset: 6952)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_protocols", scope: !238, file: !125, line: 179, baseType: !184, size: 64, offset: 6976)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "enabled_protocols", scope: !238, file: !125, line: 180, baseType: !184, size: 64, offset: 7040)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_wakeup_protocols", scope: !238, file: !125, line: 181, baseType: !184, size: 64, offset: 7104)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_protocol", scope: !238, file: !125, line: 182, baseType: !5, size: 32, offset: 7168)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "scancode_filter", scope: !238, file: !125, line: 183, baseType: !4164, size: 64, offset: 7200)
!4164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rc_scancode_filter", file: !125, line: 38, size: 64, elements: !4165)
!4165 = !{!4166, !4167}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4164, file: !125, line: 39, baseType: !155, size: 32)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4164, file: !125, line: 40, baseType: !155, size: 32, offset: 32)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "scancode_wakeup_filter", scope: !238, file: !125, line: 184, baseType: !4164, size: 64, offset: 7264)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "scancode_mask", scope: !238, file: !125, line: 185, baseType: !155, size: 32, offset: 7328)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !238, file: !125, line: 186, baseType: !155, size: 32, offset: 7360)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !238, file: !125, line: 187, baseType: !165, size: 64, offset: 7424)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "keylock", scope: !238, file: !125, line: 188, baseType: !197, offset: 7488)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "keypressed", scope: !238, file: !125, line: 189, baseType: !488, size: 8, offset: 7488)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "keyup_jiffies", scope: !238, file: !125, line: 190, baseType: !214, size: 64, offset: 7552)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "timer_keyup", scope: !238, file: !125, line: 191, baseType: !3559, size: 320, offset: 7616)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "timer_repeat", scope: !238, file: !125, line: 192, baseType: !3559, size: 320, offset: 7936)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "last_keycode", scope: !238, file: !125, line: 193, baseType: !155, size: 32, offset: 8256)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "last_protocol", scope: !238, file: !125, line: 194, baseType: !5, size: 32, offset: 8288)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "last_scancode", scope: !238, file: !125, line: 195, baseType: !184, size: 64, offset: 8320)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "last_toggle", scope: !238, file: !125, line: 196, baseType: !226, size: 8, offset: 8384)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !238, file: !125, line: 197, baseType: !155, size: 32, offset: 8416)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "min_timeout", scope: !238, file: !125, line: 198, baseType: !155, size: 32, offset: 8448)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "max_timeout", scope: !238, file: !125, line: 199, baseType: !155, size: 32, offset: 8480)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "rx_resolution", scope: !238, file: !125, line: 200, baseType: !155, size: 32, offset: 8512)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "tx_resolution", scope: !238, file: !125, line: 201, baseType: !155, size: 32, offset: 8544)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !238, file: !125, line: 211, baseType: !488, size: 8, offset: 8576)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "change_protocol", scope: !238, file: !125, line: 212, baseType: !4188, size: 64, offset: 8640)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!159, !237, !234}
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !238, file: !125, line: 213, baseType: !4192, size: 64, offset: 8704)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = !DISubroutineType(types: !4194)
!4194 = !{!159, !237}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !238, file: !125, line: 214, baseType: !4196, size: 64, offset: 8768)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{null, !237}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "s_tx_mask", scope: !238, file: !125, line: 215, baseType: !4200, size: 64, offset: 8832)
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{!159, !237, !155}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "s_tx_carrier", scope: !238, file: !125, line: 216, baseType: !4200, size: 64, offset: 8896)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "s_tx_duty_cycle", scope: !238, file: !125, line: 217, baseType: !4200, size: 64, offset: 8960)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "s_rx_carrier_range", scope: !238, file: !125, line: 218, baseType: !4206, size: 64, offset: 9024)
!4206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4207, size: 64)
!4207 = !DISubroutineType(types: !4208)
!4208 = !{!159, !237, !155, !155}
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "tx_ir", scope: !238, file: !125, line: 219, baseType: !4210, size: 64, offset: 9088)
!4210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4211, size: 64)
!4211 = !DISubroutineType(types: !4212)
!4212 = !{!159, !237, !2670, !7}
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "s_idle", scope: !238, file: !125, line: 220, baseType: !4214, size: 64, offset: 9152)
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = !DISubroutineType(types: !4216)
!4216 = !{null, !237, !488}
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "s_learning_mode", scope: !238, file: !125, line: 221, baseType: !4218, size: 64, offset: 9216)
!4218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4219, size: 64)
!4219 = !DISubroutineType(types: !4220)
!4220 = !{!159, !237, !159}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "s_carrier_report", scope: !238, file: !125, line: 222, baseType: !4218, size: 64, offset: 9280)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "s_filter", scope: !238, file: !125, line: 223, baseType: !4223, size: 64, offset: 9344)
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{!159, !237, !4226}
!4226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4164, size: 64)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "s_wakeup_filter", scope: !238, file: !125, line: 225, baseType: !4223, size: 64, offset: 9408)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "s_timeout", scope: !238, file: !125, line: 227, baseType: !4229, size: 64, offset: 9472)
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 64)
!4230 = !DISubroutineType(types: !4231)
!4231 = !{!159, !237, !7}
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!4233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rc_filter_attribute", file: !3, line: 1076, size: 320, elements: !4236)
!4236 = !{!4237, !4250, !4251}
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4235, file: !3, line: 1077, baseType: !4238, size: 256)
!4238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !104, line: 99, size: 256, elements: !4239)
!4239 = !{!4240, !4241, !4246}
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4238, file: !104, line: 100, baseType: !319, size: 128)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4238, file: !104, line: 101, baseType: !4242, size: 64, offset: 128)
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{!314, !3368, !4245, !283}
!4245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4238, size: 64)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4238, file: !104, line: 103, baseType: !4247, size: 64, offset: 192)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!314, !3368, !4245, !193, !328}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4235, file: !3, line: 1078, baseType: !149, size: 32, offset: 256)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4235, file: !3, line: 1079, baseType: !488, size: 8, offset: 288)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 64)
!4253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4254, size: 64)
!4254 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !195)
!4255 = !{!4256, !4261, !4263, !4268, !4273, !4278, !4283, !0, !4287, !4289, !4300, !4311, !4313, !4315, !4320, !4322, !4325, !4327, !4329, !4331, !4333, !4335, !4338, !4340, !4342, !4344, !4347, !4349, !4351, !4353, !4355, !4358}
!4256 = !DIGlobalVariableExpression(var: !4257, expr: !DIExpression())
!4257 = distinct !DIGlobalVariable(name: "__key", scope: !4258, file: !3, line: 1725, type: !637, isLocal: true, isDefinition: true)
!4258 = distinct !DISubprogram(name: "rc_allocate_device", scope: !3, file: !3, line: 1699, type: !4259, scopeLine: 1700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{!237, !124}
!4261 = !DIGlobalVariableExpression(var: !4262, expr: !DIExpression())
!4262 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_rc_core_init243", scope: !2, file: !3, line: 2084, type: !165, isLocal: true, isDefinition: true)
!4263 = !DIGlobalVariableExpression(var: !4264, expr: !DIExpression())
!4264 = distinct !DIGlobalVariable(name: "__exitcall_rc_core_exit", scope: !2, file: !3, line: 2085, type: !4265, isLocal: true, isDefinition: true)
!4265 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !4266, line: 117, baseType: !4267)
!4266 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!4268 = !DIGlobalVariableExpression(var: !4269, expr: !DIExpression())
!4269 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author244", scope: !2, file: !3, line: 2087, type: !4270, isLocal: true, isDefinition: true, align: 8)
!4270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 296, elements: !4271)
!4271 = !{!4272}
!4272 = !DISubrange(count: 37)
!4273 = !DIGlobalVariableExpression(var: !4274, expr: !DIExpression())
!4274 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file245", scope: !2, file: !3, line: 2088, type: !4275, isLocal: true, isDefinition: true, align: 8)
!4275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 304, elements: !4276)
!4276 = !{!4277}
!4277 = !DISubrange(count: 38)
!4278 = !DIGlobalVariableExpression(var: !4279, expr: !DIExpression())
!4279 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license246", scope: !2, file: !3, line: 2088, type: !4280, isLocal: true, isDefinition: true, align: 8)
!4280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 184, elements: !4281)
!4281 = !{!4282}
!4282 = !DISubrange(count: 23)
!4283 = !DIGlobalVariableExpression(var: !4284, expr: !DIExpression())
!4284 = distinct !DIGlobalVariable(name: "led_feedback", scope: !2, file: !3, line: 85, type: !4285, isLocal: true, isDefinition: true)
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4286, size: 64)
!4286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "led_trigger", file: !136, line: 432, elements: !211)
!4287 = !DIGlobalVariableExpression(var: !4288, expr: !DIExpression())
!4288 = distinct !DIGlobalVariable(name: "rc_map_list", scope: !2, file: !3, line: 83, type: !171, isLocal: true, isDefinition: true)
!4289 = !DIGlobalVariableExpression(var: !4290, expr: !DIExpression())
!4290 = distinct !DIGlobalVariable(name: "protocols", scope: !2, file: !3, line: 28, type: !4291, isLocal: true, isDefinition: true)
!4291 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4292, size: 3584, elements: !4298)
!4292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4293)
!4293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 24, size: 128, elements: !4294)
!4294 = !{!4295, !4296, !4297}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4293, file: !3, line: 25, baseType: !193, size: 64)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "repeat_period", scope: !4293, file: !3, line: 26, baseType: !7, size: 32, offset: 64)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "scancode_bits", scope: !4293, file: !3, line: 27, baseType: !7, size: 32, offset: 96)
!4298 = !{!4299}
!4299 = !DISubrange(count: 28)
!4300 = !DIGlobalVariableExpression(var: !4301, expr: !DIExpression())
!4301 = distinct !DIGlobalVariable(name: "proto_names", scope: !2, file: !3, line: 1038, type: !4302, isLocal: true, isDefinition: true)
!4302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4303, size: 3264, elements: !4309)
!4303 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4304)
!4304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 1034, size: 192, elements: !4305)
!4305 = !{!4306, !4307, !4308}
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4304, file: !3, line: 1035, baseType: !184, size: 64)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4304, file: !3, line: 1036, baseType: !193, size: 64, offset: 64)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "module_name", scope: !4304, file: !3, line: 1037, baseType: !193, size: 64, offset: 128)
!4309 = !{!4310}
!4310 = !DISubrange(count: 17)
!4311 = !DIGlobalVariableExpression(var: !4312, expr: !DIExpression())
!4312 = distinct !DIGlobalVariable(name: "rc_dev_type", scope: !2, file: !3, line: 1694, type: !3375, isLocal: true, isDefinition: true)
!4313 = !DIGlobalVariableExpression(var: !4314, expr: !DIExpression())
!4314 = distinct !DIGlobalVariable(name: "rc_class", scope: !2, file: !3, line: 1024, type: !3771, isLocal: true, isDefinition: true)
!4315 = !DIGlobalVariableExpression(var: !4316, expr: !DIExpression())
!4316 = distinct !DIGlobalVariable(name: "rc_ida", scope: !2, file: !3, line: 88, type: !4317, isLocal: true, isDefinition: true)
!4317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3245, line: 244, size: 128, elements: !4318)
!4318 = !{!4319}
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4317, file: !3245, line: 245, baseType: !731, size: 128)
!4320 = !DIGlobalVariableExpression(var: !4321, expr: !DIExpression())
!4321 = distinct !DIGlobalVariable(name: "rc_dev_ro_protocol_attr_grp", scope: !2, file: !3, line: 1669, type: !336, isLocal: true, isDefinition: true)
!4322 = !DIGlobalVariableExpression(var: !4323, expr: !DIExpression())
!4323 = distinct !DIGlobalVariable(name: "rc_dev_ro_protocol_attrs", scope: !2, file: !3, line: 1664, type: !4324, isLocal: true, isDefinition: true)
!4324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 128, elements: !1555)
!4325 = !DIGlobalVariableExpression(var: !4326, expr: !DIExpression())
!4326 = distinct !DIGlobalVariable(name: "dev_attr_ro_protocols", scope: !2, file: !3, line: 1640, type: !4238, isLocal: true, isDefinition: true)
!4327 = !DIGlobalVariableExpression(var: !4328, expr: !DIExpression())
!4328 = distinct !DIGlobalVariable(name: "rc_dev_rw_protocol_attr_grp", scope: !2, file: !3, line: 1660, type: !336, isLocal: true, isDefinition: true)
!4329 = !DIGlobalVariableExpression(var: !4330, expr: !DIExpression())
!4330 = distinct !DIGlobalVariable(name: "rc_dev_rw_protocol_attrs", scope: !2, file: !3, line: 1655, type: !4324, isLocal: true, isDefinition: true)
!4331 = !DIGlobalVariableExpression(var: !4332, expr: !DIExpression())
!4332 = distinct !DIGlobalVariable(name: "dev_attr_rw_protocols", scope: !2, file: !3, line: 1642, type: !4238, isLocal: true, isDefinition: true)
!4333 = !DIGlobalVariableExpression(var: !4334, expr: !DIExpression())
!4334 = distinct !DIGlobalVariable(name: "rc_dev_filter_attr_grp", scope: !2, file: !3, line: 1679, type: !336, isLocal: true, isDefinition: true)
!4335 = !DIGlobalVariableExpression(var: !4336, expr: !DIExpression())
!4336 = distinct !DIGlobalVariable(name: "rc_dev_filter_attrs", scope: !2, file: !3, line: 1673, type: !4337, isLocal: true, isDefinition: true)
!4337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 192, elements: !284)
!4338 = !DIGlobalVariableExpression(var: !4339, expr: !DIExpression())
!4339 = distinct !DIGlobalVariable(name: "dev_attr_filter", scope: !2, file: !3, line: 1646, type: !4235, isLocal: true, isDefinition: true)
!4340 = !DIGlobalVariableExpression(var: !4341, expr: !DIExpression())
!4341 = distinct !DIGlobalVariable(name: "dev_attr_filter_mask", scope: !2, file: !3, line: 1648, type: !4235, isLocal: true, isDefinition: true)
!4342 = !DIGlobalVariableExpression(var: !4343, expr: !DIExpression())
!4343 = distinct !DIGlobalVariable(name: "rc_dev_wakeup_filter_attr_grp", scope: !2, file: !3, line: 1690, type: !336, isLocal: true, isDefinition: true)
!4344 = !DIGlobalVariableExpression(var: !4345, expr: !DIExpression())
!4345 = distinct !DIGlobalVariable(name: "rc_dev_wakeup_filter_attrs", scope: !2, file: !3, line: 1683, type: !4346, isLocal: true, isDefinition: true)
!4346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 256, elements: !1145)
!4347 = !DIGlobalVariableExpression(var: !4348, expr: !DIExpression())
!4348 = distinct !DIGlobalVariable(name: "dev_attr_wakeup_filter", scope: !2, file: !3, line: 1650, type: !4235, isLocal: true, isDefinition: true)
!4349 = !DIGlobalVariableExpression(var: !4350, expr: !DIExpression())
!4350 = distinct !DIGlobalVariable(name: "dev_attr_wakeup_filter_mask", scope: !2, file: !3, line: 1652, type: !4235, isLocal: true, isDefinition: true)
!4351 = !DIGlobalVariableExpression(var: !4352, expr: !DIExpression())
!4352 = distinct !DIGlobalVariable(name: "dev_attr_wakeup_protocols", scope: !2, file: !3, line: 1644, type: !4238, isLocal: true, isDefinition: true)
!4353 = !DIGlobalVariableExpression(var: !4354, expr: !DIExpression())
!4354 = distinct !DIGlobalVariable(name: "empty_map", scope: !2, file: !3, line: 157, type: !167, isLocal: true, isDefinition: true)
!4355 = !DIGlobalVariableExpression(var: !4356, expr: !DIExpression())
!4356 = distinct !DIGlobalVariable(name: "empty", scope: !2, file: !3, line: 153, type: !4357, isLocal: true, isDefinition: true)
!4357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 128, elements: !1358)
!4358 = !DIGlobalVariableExpression(var: !4359, expr: !DIExpression())
!4359 = distinct !DIGlobalVariable(name: "__key", scope: !4360, file: !3, line: 2057, type: !637, isLocal: true, isDefinition: true)
!4360 = distinct !DISubprogram(name: "rc_core_init", scope: !3, file: !3, line: 2055, type: !4361, scopeLine: 2056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4361 = !DISubroutineType(types: !4362)
!4362 = !{!159}
!4363 = !{!"rsp"}
!4364 = !{i32 7, !"Dwarf Version", i32 4}
!4365 = !{i32 2, !"Debug Info Version", i32 3}
!4366 = !{i32 1, !"wchar_size", i32 2}
!4367 = !{i32 1, !"Code Model", i32 2}
!4368 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4369 = distinct !DISubprogram(name: "rc_map_get", scope: !3, file: !3, line: 106, type: !4370, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4370 = !DISubroutineType(types: !4371)
!4371 = !{!4372, !193}
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 64)
!4373 = !DILocalVariable(name: "name", arg: 1, scope: !4369, file: !3, line: 106, type: !193)
!4374 = !DILocation(line: 106, column: 39, scope: !4369)
!4375 = !DILocalVariable(name: "map", scope: !4369, file: !3, line: 109, type: !166)
!4376 = !DILocation(line: 109, column: 22, scope: !4369)
!4377 = !DILocation(line: 111, column: 20, scope: !4369)
!4378 = !DILocation(line: 111, column: 8, scope: !4369)
!4379 = !DILocation(line: 111, column: 6, scope: !4369)
!4380 = !DILocation(line: 124, column: 7, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 124, column: 6)
!4382 = !DILocation(line: 124, column: 6, scope: !4369)
!4383 = !DILocation(line: 125, column: 3, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4381, file: !3, line: 124, column: 12)
!4385 = !DILocation(line: 126, column: 3, scope: !4384)
!4386 = !DILocation(line: 129, column: 48, scope: !4369)
!4387 = !DILocation(line: 129, column: 53, scope: !4369)
!4388 = !DILocation(line: 129, column: 57, scope: !4369)
!4389 = !DILocation(line: 129, column: 2, scope: !4369)
!4390 = !DILocation(line: 131, column: 10, scope: !4369)
!4391 = !DILocation(line: 131, column: 15, scope: !4369)
!4392 = !DILocation(line: 131, column: 2, scope: !4369)
!4393 = !DILocation(line: 132, column: 1, scope: !4369)
!4394 = distinct !DISubprogram(name: "seek_rc_map", scope: !3, file: !3, line: 90, type: !4395, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4395 = !DISubroutineType(types: !4396)
!4396 = !{!166, !193}
!4397 = !DILocalVariable(name: "lock", arg: 1, scope: !4398, file: !4399, line: 392, type: !1054)
!4398 = distinct !DISubprogram(name: "spin_unlock", scope: !4399, file: !4399, line: 392, type: !4400, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4399 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4400 = !DISubroutineType(types: !4401)
!4401 = !{null, !1054}
!4402 = !DILocation(line: 392, column: 53, scope: !4398, inlinedAt: !4403)
!4403 = distinct !DILocation(line: 101, column: 2, scope: !4394)
!4404 = !DILocation(line: 392, column: 53, scope: !4398, inlinedAt: !4405)
!4405 = distinct !DILocation(line: 97, column: 4, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4407, file: !3, line: 96, column: 37)
!4407 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 96, column: 7)
!4408 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 95, column: 47)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 95, column: 2)
!4410 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 95, column: 2)
!4411 = !DILocalVariable(name: "lock", arg: 1, scope: !4412, file: !4399, line: 352, type: !1054)
!4412 = distinct !DISubprogram(name: "spin_lock", scope: !4399, file: !4399, line: 352, type: !4400, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4413 = !DILocation(line: 352, column: 51, scope: !4412, inlinedAt: !4414)
!4414 = distinct !DILocation(line: 94, column: 2, scope: !4394)
!4415 = !DILocalVariable(name: "name", arg: 1, scope: !4394, file: !3, line: 90, type: !193)
!4416 = !DILocation(line: 90, column: 52, scope: !4394)
!4417 = !DILocalVariable(name: "map", scope: !4394, file: !3, line: 92, type: !166)
!4418 = !DILocation(line: 92, column: 22, scope: !4394)
!4419 = !DILocation(line: 354, column: 2, scope: !4420, inlinedAt: !4414)
!4420 = distinct !DILexicalBlock(scope: !4412, file: !4399, line: 354, column: 2)
!4421 = !{i32 -2145565387}
!4422 = !DILocation(line: 354, column: 2, scope: !4423, inlinedAt: !4414)
!4423 = distinct !DILexicalBlock(scope: !4420, file: !4399, line: 354, column: 2)
!4424 = !DILocalVariable(name: "__mptr", scope: !4425, file: !3, line: 95, type: !165)
!4425 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 95, column: 2)
!4426 = !DILocation(line: 95, column: 2, scope: !4425)
!4427 = !DILocation(line: 95, column: 2, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4425, file: !3, line: 95, column: 2)
!4429 = !DILocation(line: 95, column: 2, scope: !4410)
!4430 = !DILocation(line: 95, column: 2, scope: !4409)
!4431 = !DILocation(line: 96, column: 15, scope: !4407)
!4432 = !DILocation(line: 96, column: 21, scope: !4407)
!4433 = !DILocation(line: 96, column: 26, scope: !4407)
!4434 = !DILocation(line: 96, column: 30, scope: !4407)
!4435 = !DILocation(line: 96, column: 8, scope: !4407)
!4436 = !DILocation(line: 96, column: 7, scope: !4408)
!4437 = !DILocation(line: 394, column: 2, scope: !4438, inlinedAt: !4405)
!4438 = distinct !DILexicalBlock(scope: !4398, file: !4399, line: 394, column: 2)
!4439 = !{i32 -2145563026}
!4440 = !DILocation(line: 394, column: 2, scope: !4441, inlinedAt: !4405)
!4441 = distinct !DILexicalBlock(scope: !4438, file: !4399, line: 394, column: 2)
!4442 = !DILocation(line: 98, column: 11, scope: !4406)
!4443 = !DILocation(line: 98, column: 4, scope: !4406)
!4444 = !DILocation(line: 100, column: 2, scope: !4408)
!4445 = !DILocalVariable(name: "__mptr", scope: !4446, file: !3, line: 95, type: !165)
!4446 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 95, column: 2)
!4447 = !DILocation(line: 95, column: 2, scope: !4446)
!4448 = !DILocation(line: 95, column: 2, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 95, column: 2)
!4450 = distinct !{!4450, !4429, !4451}
!4451 = !DILocation(line: 100, column: 2, scope: !4410)
!4452 = !DILocation(line: 394, column: 2, scope: !4438, inlinedAt: !4403)
!4453 = !DILocation(line: 394, column: 2, scope: !4441, inlinedAt: !4403)
!4454 = !DILocation(line: 103, column: 2, scope: !4394)
!4455 = !DILocation(line: 104, column: 1, scope: !4394)
!4456 = distinct !DISubprogram(name: "rc_map_register", scope: !3, file: !3, line: 135, type: !4457, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{!159, !166}
!4459 = !DILocation(line: 392, column: 53, scope: !4398, inlinedAt: !4460)
!4460 = distinct !DILocation(line: 139, column: 2, scope: !4456)
!4461 = !DILocation(line: 352, column: 51, scope: !4412, inlinedAt: !4462)
!4462 = distinct !DILocation(line: 137, column: 2, scope: !4456)
!4463 = !DILocalVariable(name: "map", arg: 1, scope: !4456, file: !3, line: 135, type: !166)
!4464 = !DILocation(line: 135, column: 41, scope: !4456)
!4465 = !DILocation(line: 354, column: 2, scope: !4420, inlinedAt: !4462)
!4466 = !DILocation(line: 354, column: 2, scope: !4423, inlinedAt: !4462)
!4467 = !DILocation(line: 138, column: 17, scope: !4456)
!4468 = !DILocation(line: 138, column: 22, scope: !4456)
!4469 = !DILocation(line: 138, column: 2, scope: !4456)
!4470 = !DILocation(line: 394, column: 2, scope: !4438, inlinedAt: !4460)
!4471 = !DILocation(line: 394, column: 2, scope: !4441, inlinedAt: !4460)
!4472 = !DILocation(line: 140, column: 2, scope: !4456)
!4473 = distinct !DISubprogram(name: "list_add_tail", scope: !4474, file: !4474, line: 98, type: !4475, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4474 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!4475 = !DISubroutineType(types: !4476)
!4476 = !{null, !174, !174}
!4477 = !DILocalVariable(name: "new", arg: 1, scope: !4473, file: !4474, line: 98, type: !174)
!4478 = !DILocation(line: 98, column: 52, scope: !4473)
!4479 = !DILocalVariable(name: "head", arg: 2, scope: !4473, file: !4474, line: 98, type: !174)
!4480 = !DILocation(line: 98, column: 75, scope: !4473)
!4481 = !DILocation(line: 100, column: 13, scope: !4473)
!4482 = !DILocation(line: 100, column: 18, scope: !4473)
!4483 = !DILocation(line: 100, column: 24, scope: !4473)
!4484 = !DILocation(line: 100, column: 30, scope: !4473)
!4485 = !DILocation(line: 100, column: 2, scope: !4473)
!4486 = !DILocation(line: 101, column: 1, scope: !4473)
!4487 = distinct !DISubprogram(name: "rc_map_unregister", scope: !3, file: !3, line: 144, type: !4488, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4488 = !DISubroutineType(types: !4489)
!4489 = !{null, !166}
!4490 = !DILocation(line: 392, column: 53, scope: !4398, inlinedAt: !4491)
!4491 = distinct !DILocation(line: 148, column: 2, scope: !4487)
!4492 = !DILocation(line: 352, column: 51, scope: !4412, inlinedAt: !4493)
!4493 = distinct !DILocation(line: 146, column: 2, scope: !4487)
!4494 = !DILocalVariable(name: "map", arg: 1, scope: !4487, file: !3, line: 144, type: !166)
!4495 = !DILocation(line: 144, column: 44, scope: !4487)
!4496 = !DILocation(line: 354, column: 2, scope: !4420, inlinedAt: !4493)
!4497 = !DILocation(line: 354, column: 2, scope: !4423, inlinedAt: !4493)
!4498 = !DILocation(line: 147, column: 12, scope: !4487)
!4499 = !DILocation(line: 147, column: 17, scope: !4487)
!4500 = !DILocation(line: 147, column: 2, scope: !4487)
!4501 = !DILocation(line: 394, column: 2, scope: !4438, inlinedAt: !4491)
!4502 = !DILocation(line: 394, column: 2, scope: !4441, inlinedAt: !4491)
!4503 = !DILocation(line: 149, column: 1, scope: !4487)
!4504 = distinct !DISubprogram(name: "list_del", scope: !4474, file: !4474, line: 144, type: !4505, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{null, !174}
!4507 = !DILocalVariable(name: "entry", arg: 1, scope: !4504, file: !4474, line: 144, type: !174)
!4508 = !DILocation(line: 144, column: 47, scope: !4504)
!4509 = !DILocation(line: 146, column: 19, scope: !4504)
!4510 = !DILocation(line: 146, column: 2, scope: !4504)
!4511 = !DILocation(line: 147, column: 2, scope: !4504)
!4512 = !DILocation(line: 147, column: 9, scope: !4504)
!4513 = !DILocation(line: 147, column: 14, scope: !4504)
!4514 = !DILocation(line: 148, column: 2, scope: !4504)
!4515 = !DILocation(line: 148, column: 9, scope: !4504)
!4516 = !DILocation(line: 148, column: 14, scope: !4504)
!4517 = !DILocation(line: 149, column: 1, scope: !4504)
!4518 = distinct !DISubprogram(name: "rc_g_keycode_from_table", scope: !3, file: !3, line: 605, type: !4519, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4519 = !DISubroutineType(types: !4520)
!4520 = !{!155, !237, !184}
!4521 = !DILocalVariable(name: "lock", arg: 1, scope: !4522, file: !4399, line: 407, type: !1054)
!4522 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !4399, file: !4399, line: 407, type: !4523, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4523 = !DISubroutineType(types: !4524)
!4524 = !{null, !1054, !214}
!4525 = !DILocation(line: 407, column: 64, scope: !4522, inlinedAt: !4526)
!4526 = distinct !DILocation(line: 618, column: 2, scope: !4518)
!4527 = !DILocalVariable(name: "flags", arg: 2, scope: !4522, file: !4399, line: 407, type: !214)
!4528 = !DILocation(line: 407, column: 84, scope: !4522, inlinedAt: !4526)
!4529 = !DILocalVariable(name: "lock", arg: 1, scope: !4530, file: !4399, line: 327, type: !1054)
!4530 = distinct !DISubprogram(name: "spinlock_check", scope: !4399, file: !4399, line: 327, type: !4531, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4531 = !DISubroutineType(types: !4532)
!4532 = !{!4533, !1054}
!4533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!4534 = !DILocation(line: 327, column: 67, scope: !4530, inlinedAt: !4535)
!4535 = distinct !DILocation(line: 612, column: 2, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4537, file: !3, line: 612, column: 2)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 612, column: 2)
!4538 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 612, column: 2)
!4539 = distinct !DILexicalBlock(scope: !4540, file: !3, line: 612, column: 2)
!4540 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 612, column: 2)
!4541 = !DILocalVariable(name: "dev", arg: 1, scope: !4518, file: !3, line: 605, type: !237)
!4542 = !DILocation(line: 605, column: 44, scope: !4518)
!4543 = !DILocalVariable(name: "scancode", arg: 2, scope: !4518, file: !3, line: 605, type: !184)
!4544 = !DILocation(line: 605, column: 53, scope: !4518)
!4545 = !DILocalVariable(name: "rc_map", scope: !4518, file: !3, line: 607, type: !4372)
!4546 = !DILocation(line: 607, column: 17, scope: !4518)
!4547 = !DILocation(line: 607, column: 27, scope: !4518)
!4548 = !DILocation(line: 607, column: 32, scope: !4518)
!4549 = !DILocalVariable(name: "keycode", scope: !4518, file: !3, line: 608, type: !7)
!4550 = !DILocation(line: 608, column: 15, scope: !4518)
!4551 = !DILocalVariable(name: "index", scope: !4518, file: !3, line: 609, type: !7)
!4552 = !DILocation(line: 609, column: 15, scope: !4518)
!4553 = !DILocalVariable(name: "flags", scope: !4518, file: !3, line: 610, type: !214)
!4554 = !DILocation(line: 610, column: 16, scope: !4518)
!4555 = !DILocation(line: 612, column: 2, scope: !4518)
!4556 = !DILocation(line: 612, column: 2, scope: !4540)
!4557 = !DILocalVariable(name: "__dummy", scope: !4558, file: !3, line: 612, type: !214)
!4558 = distinct !DILexicalBlock(scope: !4539, file: !3, line: 612, column: 2)
!4559 = !DILocation(line: 612, column: 2, scope: !4558)
!4560 = !DILocalVariable(name: "__dummy2", scope: !4558, file: !3, line: 612, type: !214)
!4561 = !DILocation(line: 612, column: 2, scope: !4539)
!4562 = !DILocation(line: 612, column: 2, scope: !4538)
!4563 = !DILocation(line: 612, column: 2, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4538, file: !3, line: 612, column: 2)
!4565 = !DILocalVariable(name: "__dummy", scope: !4566, file: !3, line: 612, type: !214)
!4566 = distinct !DILexicalBlock(scope: !4567, file: !3, line: 612, column: 2)
!4567 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 612, column: 2)
!4568 = !DILocation(line: 612, column: 2, scope: !4566)
!4569 = !DILocalVariable(name: "__dummy2", scope: !4566, file: !3, line: 612, type: !214)
!4570 = !DILocation(line: 612, column: 2, scope: !4567)
!4571 = !DILocation(line: 612, column: 2, scope: !4537)
!4572 = !{i32 -2141673727}
!4573 = !DILocation(line: 612, column: 2, scope: !4536)
!4574 = !DILocation(line: 329, column: 10, scope: !4530, inlinedAt: !4535)
!4575 = !DILocation(line: 329, column: 16, scope: !4530, inlinedAt: !4535)
!4576 = !DILocation(line: 614, column: 32, scope: !4518)
!4577 = !DILocation(line: 614, column: 40, scope: !4518)
!4578 = !DILocation(line: 614, column: 10, scope: !4518)
!4579 = !DILocation(line: 614, column: 8, scope: !4518)
!4580 = !DILocation(line: 615, column: 12, scope: !4518)
!4581 = !DILocation(line: 615, column: 20, scope: !4518)
!4582 = !DILocation(line: 615, column: 28, scope: !4518)
!4583 = !DILocation(line: 615, column: 18, scope: !4518)
!4584 = !DILocation(line: 616, column: 4, scope: !4518)
!4585 = !DILocation(line: 616, column: 12, scope: !4518)
!4586 = !DILocation(line: 616, column: 17, scope: !4518)
!4587 = !DILocation(line: 616, column: 24, scope: !4518)
!4588 = !DILocation(line: 615, column: 10, scope: !4518)
!4589 = !DILocation(line: 618, column: 26, scope: !4518)
!4590 = !DILocation(line: 618, column: 34, scope: !4518)
!4591 = !DILocation(line: 618, column: 40, scope: !4518)
!4592 = !DILocalVariable(name: "__dummy", scope: !4593, file: !4399, line: 409, type: !214)
!4593 = distinct !DILexicalBlock(scope: !4594, file: !4399, line: 409, column: 2)
!4594 = distinct !DILexicalBlock(scope: !4522, file: !4399, line: 409, column: 2)
!4595 = !DILocation(line: 409, column: 2, scope: !4593, inlinedAt: !4526)
!4596 = !DILocalVariable(name: "__dummy2", scope: !4593, file: !4399, line: 409, type: !214)
!4597 = !DILocalVariable(name: "__dummy", scope: !4598, file: !4399, line: 409, type: !214)
!4598 = distinct !DILexicalBlock(scope: !4599, file: !4399, line: 409, column: 2)
!4599 = distinct !DILexicalBlock(scope: !4600, file: !4399, line: 409, column: 2)
!4600 = distinct !DILexicalBlock(scope: !4601, file: !4399, line: 409, column: 2)
!4601 = distinct !DILexicalBlock(scope: !4594, file: !4399, line: 409, column: 2)
!4602 = !DILocation(line: 409, column: 2, scope: !4598, inlinedAt: !4526)
!4603 = !DILocalVariable(name: "__dummy2", scope: !4598, file: !4399, line: 409, type: !214)
!4604 = !DILocation(line: 409, column: 2, scope: !4599, inlinedAt: !4526)
!4605 = !DILocation(line: 409, column: 2, scope: !4606, inlinedAt: !4526)
!4606 = distinct !DILexicalBlock(scope: !4601, file: !4399, line: 409, column: 2)
!4607 = !{i32 -2145560700}
!4608 = !DILocation(line: 409, column: 2, scope: !4609, inlinedAt: !4526)
!4609 = distinct !DILexicalBlock(scope: !4606, file: !4399, line: 409, column: 2)
!4610 = !DILocation(line: 620, column: 6, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 620, column: 6)
!4612 = !DILocation(line: 620, column: 14, scope: !4611)
!4613 = !DILocation(line: 620, column: 6, scope: !4518)
!4614 = !DILocation(line: 621, column: 3, scope: !4611)
!4615 = !DILocation(line: 624, column: 9, scope: !4518)
!4616 = !DILocation(line: 624, column: 2, scope: !4518)
!4617 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !4618, file: !4618, line: 666, type: !4619, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4618 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!4619 = !DISubroutineType(types: !4620)
!4620 = !{!214}
!4621 = !DILocalVariable(name: "f", scope: !4617, file: !4618, line: 668, type: !214)
!4622 = !DILocation(line: 668, column: 16, scope: !4617)
!4623 = !DILocation(line: 670, column: 6, scope: !4617)
!4624 = !DILocation(line: 670, column: 4, scope: !4617)
!4625 = !DILocation(line: 671, column: 2, scope: !4617)
!4626 = !DILocation(line: 672, column: 9, scope: !4617)
!4627 = !DILocation(line: 672, column: 2, scope: !4617)
!4628 = distinct !DISubprogram(name: "ir_lookup_by_scancode", scope: !3, file: !3, line: 522, type: !4629, scopeLine: 524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4629 = !DISubroutineType(types: !4630)
!4630 = !{!7, !4631, !184}
!4631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4632, size: 64)
!4632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!4633 = !DILocalVariable(name: "rc_map", arg: 1, scope: !4628, file: !3, line: 522, type: !4631)
!4634 = !DILocation(line: 522, column: 64, scope: !4628)
!4635 = !DILocalVariable(name: "scancode", arg: 2, scope: !4628, file: !3, line: 523, type: !184)
!4636 = !DILocation(line: 523, column: 12, scope: !4628)
!4637 = !DILocalVariable(name: "res", scope: !4628, file: !3, line: 525, type: !180)
!4638 = !DILocation(line: 525, column: 23, scope: !4628)
!4639 = !DILocation(line: 527, column: 16, scope: !4628)
!4640 = !DILocation(line: 527, column: 27, scope: !4628)
!4641 = !DILocation(line: 527, column: 35, scope: !4628)
!4642 = !DILocation(line: 527, column: 41, scope: !4628)
!4643 = !DILocation(line: 527, column: 49, scope: !4628)
!4644 = !DILocation(line: 527, column: 8, scope: !4628)
!4645 = !DILocation(line: 527, column: 6, scope: !4628)
!4646 = !DILocation(line: 529, column: 7, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4628, file: !3, line: 529, column: 6)
!4648 = !DILocation(line: 529, column: 6, scope: !4628)
!4649 = !DILocation(line: 530, column: 3, scope: !4647)
!4650 = !DILocation(line: 532, column: 10, scope: !4647)
!4651 = !DILocation(line: 532, column: 16, scope: !4647)
!4652 = !DILocation(line: 532, column: 24, scope: !4647)
!4653 = !DILocation(line: 532, column: 14, scope: !4647)
!4654 = !DILocation(line: 532, column: 3, scope: !4647)
!4655 = !DILocation(line: 533, column: 1, scope: !4628)
!4656 = distinct !DISubprogram(name: "rc_keyup", scope: !3, file: !3, line: 657, type: !4197, scopeLine: 658, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4657 = !DILocation(line: 407, column: 64, scope: !4522, inlinedAt: !4658)
!4658 = distinct !DILocation(line: 663, column: 2, scope: !4656)
!4659 = !DILocation(line: 407, column: 84, scope: !4522, inlinedAt: !4658)
!4660 = !DILocation(line: 327, column: 67, scope: !4530, inlinedAt: !4661)
!4661 = distinct !DILocation(line: 661, column: 2, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !3, line: 661, column: 2)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 661, column: 2)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 661, column: 2)
!4665 = distinct !DILexicalBlock(scope: !4666, file: !3, line: 661, column: 2)
!4666 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 661, column: 2)
!4667 = !DILocalVariable(name: "dev", arg: 1, scope: !4656, file: !3, line: 657, type: !237)
!4668 = !DILocation(line: 657, column: 30, scope: !4656)
!4669 = !DILocalVariable(name: "flags", scope: !4656, file: !3, line: 659, type: !214)
!4670 = !DILocation(line: 659, column: 16, scope: !4656)
!4671 = !DILocation(line: 661, column: 2, scope: !4656)
!4672 = !DILocation(line: 661, column: 2, scope: !4666)
!4673 = !DILocalVariable(name: "__dummy", scope: !4674, file: !3, line: 661, type: !214)
!4674 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 661, column: 2)
!4675 = !DILocation(line: 661, column: 2, scope: !4674)
!4676 = !DILocalVariable(name: "__dummy2", scope: !4674, file: !3, line: 661, type: !214)
!4677 = !DILocation(line: 661, column: 2, scope: !4665)
!4678 = !DILocation(line: 661, column: 2, scope: !4664)
!4679 = !DILocation(line: 661, column: 2, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 661, column: 2)
!4681 = !DILocalVariable(name: "__dummy", scope: !4682, file: !3, line: 661, type: !214)
!4682 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 661, column: 2)
!4683 = distinct !DILexicalBlock(scope: !4680, file: !3, line: 661, column: 2)
!4684 = !DILocation(line: 661, column: 2, scope: !4682)
!4685 = !DILocalVariable(name: "__dummy2", scope: !4682, file: !3, line: 661, type: !214)
!4686 = !DILocation(line: 661, column: 2, scope: !4683)
!4687 = !DILocation(line: 661, column: 2, scope: !4663)
!4688 = !{i32 -2141672137}
!4689 = !DILocation(line: 661, column: 2, scope: !4662)
!4690 = !DILocation(line: 329, column: 10, scope: !4530, inlinedAt: !4661)
!4691 = !DILocation(line: 329, column: 16, scope: !4530, inlinedAt: !4661)
!4692 = !DILocation(line: 662, column: 14, scope: !4656)
!4693 = !DILocation(line: 662, column: 2, scope: !4656)
!4694 = !DILocation(line: 663, column: 26, scope: !4656)
!4695 = !DILocation(line: 663, column: 31, scope: !4656)
!4696 = !DILocation(line: 663, column: 40, scope: !4656)
!4697 = !DILocation(line: 409, column: 2, scope: !4593, inlinedAt: !4658)
!4698 = !DILocation(line: 409, column: 2, scope: !4598, inlinedAt: !4658)
!4699 = !DILocation(line: 409, column: 2, scope: !4599, inlinedAt: !4658)
!4700 = !DILocation(line: 409, column: 2, scope: !4606, inlinedAt: !4658)
!4701 = !DILocation(line: 409, column: 2, scope: !4609, inlinedAt: !4658)
!4702 = !DILocation(line: 664, column: 1, scope: !4656)
!4703 = distinct !DISubprogram(name: "ir_do_keyup", scope: !3, file: !3, line: 636, type: !4215, scopeLine: 637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4704 = !DILocalVariable(name: "dev", arg: 1, scope: !4703, file: !3, line: 636, type: !237)
!4705 = !DILocation(line: 636, column: 40, scope: !4703)
!4706 = !DILocalVariable(name: "sync", arg: 2, scope: !4703, file: !3, line: 636, type: !488)
!4707 = !DILocation(line: 636, column: 50, scope: !4703)
!4708 = !DILocation(line: 638, column: 7, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 638, column: 6)
!4710 = !DILocation(line: 638, column: 12, scope: !4709)
!4711 = !DILocation(line: 638, column: 6, scope: !4703)
!4712 = !DILocation(line: 639, column: 3, scope: !4709)
!4713 = !DILocation(line: 642, column: 13, scope: !4703)
!4714 = !DILocation(line: 642, column: 18, scope: !4703)
!4715 = !DILocation(line: 642, column: 2, scope: !4703)
!4716 = !DILocation(line: 643, column: 19, scope: !4703)
!4717 = !DILocation(line: 643, column: 24, scope: !4703)
!4718 = !DILocation(line: 643, column: 35, scope: !4703)
!4719 = !DILocation(line: 643, column: 40, scope: !4703)
!4720 = !DILocation(line: 643, column: 2, scope: !4703)
!4721 = !DILocation(line: 644, column: 20, scope: !4703)
!4722 = !DILocation(line: 644, column: 2, scope: !4703)
!4723 = !DILocation(line: 645, column: 6, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 645, column: 6)
!4725 = !DILocation(line: 645, column: 6, scope: !4703)
!4726 = !DILocation(line: 646, column: 14, scope: !4724)
!4727 = !DILocation(line: 646, column: 19, scope: !4724)
!4728 = !DILocation(line: 646, column: 3, scope: !4724)
!4729 = !DILocation(line: 647, column: 2, scope: !4703)
!4730 = !DILocation(line: 647, column: 7, scope: !4703)
!4731 = !DILocation(line: 647, column: 18, scope: !4703)
!4732 = !DILocation(line: 648, column: 1, scope: !4703)
!4733 = distinct !DISubprogram(name: "rc_repeat", scope: !3, file: !3, line: 737, type: !4197, scopeLine: 738, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4734 = !DILocation(line: 407, column: 64, scope: !4522, inlinedAt: !4735)
!4735 = distinct !DILocation(line: 765, column: 2, scope: !4733)
!4736 = !DILocation(line: 407, column: 84, scope: !4522, inlinedAt: !4735)
!4737 = !DILocation(line: 327, column: 67, scope: !4530, inlinedAt: !4738)
!4738 = distinct !DILocation(line: 752, column: 2, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !3, line: 752, column: 2)
!4740 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 752, column: 2)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 752, column: 2)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 752, column: 2)
!4743 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 752, column: 2)
!4744 = !DILocalVariable(name: "m", arg: 1, scope: !4745, file: !4746, line: 363, type: !2814)
!4745 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !4746, file: !4746, line: 363, type: !4747, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4746 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!4747 = !DISubroutineType(types: !4748)
!4748 = !{!214, !2814}
!4749 = !DILocation(line: 363, column: 74, scope: !4745, inlinedAt: !4750)
!4750 = distinct !DILocation(line: 741, column: 3, scope: !4733)
!4751 = !DILocalVariable(name: "dev", arg: 1, scope: !4733, file: !3, line: 737, type: !237)
!4752 = !DILocation(line: 737, column: 31, scope: !4733)
!4753 = !DILocalVariable(name: "flags", scope: !4733, file: !3, line: 739, type: !214)
!4754 = !DILocation(line: 739, column: 16, scope: !4733)
!4755 = !DILocalVariable(name: "timeout", scope: !4733, file: !3, line: 740, type: !7)
!4756 = !DILocation(line: 740, column: 15, scope: !4733)
!4757 = !DILocation(line: 740, column: 42, scope: !4733)
!4758 = !DILocation(line: 740, column: 47, scope: !4733)
!4759 = !DILocation(line: 740, column: 25, scope: !4733)
!4760 = !DILocation(line: 741, column: 34, scope: !4733)
!4761 = !DILocation(line: 741, column: 39, scope: !4733)
!4762 = !DILocation(line: 741, column: 20, scope: !4733)
!4763 = !DILocation(line: 365, column: 27, scope: !4764, inlinedAt: !4750)
!4764 = distinct !DILexicalBlock(scope: !4745, file: !4746, line: 365, column: 6)
!4765 = !DILocation(line: 365, column: 6, scope: !4764, inlinedAt: !4750)
!4766 = !DILocation(line: 365, column: 6, scope: !4745, inlinedAt: !4750)
!4767 = !DILocation(line: 366, column: 12, scope: !4768, inlinedAt: !4750)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !4746, line: 366, column: 7)
!4769 = distinct !DILexicalBlock(scope: !4764, file: !4746, line: 365, column: 31)
!4770 = !DILocation(line: 366, column: 14, scope: !4768, inlinedAt: !4750)
!4771 = !DILocation(line: 366, column: 7, scope: !4769, inlinedAt: !4750)
!4772 = !DILocation(line: 367, column: 4, scope: !4768, inlinedAt: !4750)
!4773 = !DILocation(line: 368, column: 28, scope: !4769, inlinedAt: !4750)
!4774 = !DILocation(line: 368, column: 10, scope: !4769, inlinedAt: !4750)
!4775 = !DILocation(line: 368, column: 3, scope: !4769, inlinedAt: !4750)
!4776 = !DILocation(line: 370, column: 29, scope: !4777, inlinedAt: !4750)
!4777 = distinct !DILexicalBlock(scope: !4764, file: !4746, line: 369, column: 9)
!4778 = !DILocation(line: 370, column: 10, scope: !4777, inlinedAt: !4750)
!4779 = !DILocation(line: 370, column: 3, scope: !4777, inlinedAt: !4750)
!4780 = !DILocation(line: 372, column: 1, scope: !4745, inlinedAt: !4750)
!4781 = !DILocation(line: 740, column: 56, scope: !4733)
!4782 = !DILocalVariable(name: "sc", scope: !4733, file: !3, line: 742, type: !4783)
!4783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lirc_scancode", file: !6, line: 155, size: 192, elements: !4784)
!4784 = !{!4785, !4786, !4787, !4788, !4789}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !4783, file: !6, line: 156, baseType: !185, size: 64)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4783, file: !6, line: 157, baseType: !231, size: 16, offset: 64)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "rc_proto", scope: !4783, file: !6, line: 158, baseType: !231, size: 16, offset: 80)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "keycode", scope: !4783, file: !6, line: 159, baseType: !157, size: 32, offset: 96)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "scancode", scope: !4783, file: !6, line: 160, baseType: !185, size: 64, offset: 128)
!4790 = !DILocation(line: 742, column: 23, scope: !4733)
!4791 = !DILocation(line: 742, column: 28, scope: !4733)
!4792 = !DILocation(line: 746, column: 6, scope: !4733)
!4793 = !DILocation(line: 746, column: 11, scope: !4733)
!4794 = !DILocation(line: 745, column: 38, scope: !4733)
!4795 = !DILocation(line: 745, column: 12, scope: !4733)
!4796 = !DILocation(line: 743, column: 47, scope: !4733)
!4797 = !DILocation(line: 743, column: 52, scope: !4733)
!4798 = !DILocation(line: 744, column: 14, scope: !4733)
!4799 = !DILocation(line: 744, column: 19, scope: !4733)
!4800 = !DILocation(line: 744, column: 32, scope: !4733)
!4801 = !DILocation(line: 744, column: 37, scope: !4733)
!4802 = !DILocation(line: 743, column: 15, scope: !4733)
!4803 = !DILocation(line: 743, column: 20, scope: !4733)
!4804 = !DILocation(line: 749, column: 6, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 749, column: 6)
!4806 = !DILocation(line: 749, column: 11, scope: !4805)
!4807 = !DILocation(line: 749, column: 29, scope: !4805)
!4808 = !DILocation(line: 749, column: 6, scope: !4733)
!4809 = !DILocation(line: 750, column: 23, scope: !4805)
!4810 = !DILocation(line: 750, column: 3, scope: !4805)
!4811 = !DILocation(line: 752, column: 2, scope: !4733)
!4812 = !DILocation(line: 752, column: 2, scope: !4743)
!4813 = !DILocalVariable(name: "__dummy", scope: !4814, file: !3, line: 752, type: !214)
!4814 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 752, column: 2)
!4815 = !DILocation(line: 752, column: 2, scope: !4814)
!4816 = !DILocalVariable(name: "__dummy2", scope: !4814, file: !3, line: 752, type: !214)
!4817 = !DILocation(line: 752, column: 2, scope: !4742)
!4818 = !DILocation(line: 752, column: 2, scope: !4741)
!4819 = !DILocation(line: 752, column: 2, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 752, column: 2)
!4821 = !DILocalVariable(name: "__dummy", scope: !4822, file: !3, line: 752, type: !214)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 752, column: 2)
!4823 = distinct !DILexicalBlock(scope: !4820, file: !3, line: 752, column: 2)
!4824 = !DILocation(line: 752, column: 2, scope: !4822)
!4825 = !DILocalVariable(name: "__dummy2", scope: !4822, file: !3, line: 752, type: !214)
!4826 = !DILocation(line: 752, column: 2, scope: !4823)
!4827 = !DILocation(line: 752, column: 2, scope: !4740)
!4828 = !{i32 -2141664981}
!4829 = !DILocation(line: 752, column: 2, scope: !4739)
!4830 = !DILocation(line: 329, column: 10, scope: !4530, inlinedAt: !4738)
!4831 = !DILocation(line: 329, column: 16, scope: !4530, inlinedAt: !4738)
!4832 = !DILocation(line: 754, column: 6, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 754, column: 6)
!4834 = !DILocation(line: 754, column: 11, scope: !4833)
!4835 = !DILocation(line: 754, column: 25, scope: !4833)
!4836 = !DILocation(line: 754, column: 6, scope: !4733)
!4837 = !DILocation(line: 755, column: 15, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 754, column: 37)
!4839 = !DILocation(line: 755, column: 20, scope: !4838)
!4840 = !DILocation(line: 756, column: 8, scope: !4838)
!4841 = !DILocation(line: 756, column: 13, scope: !4838)
!4842 = !DILocation(line: 755, column: 3, scope: !4838)
!4843 = !DILocation(line: 757, column: 14, scope: !4838)
!4844 = !DILocation(line: 757, column: 19, scope: !4838)
!4845 = !DILocation(line: 757, column: 3, scope: !4838)
!4846 = !DILocation(line: 758, column: 2, scope: !4838)
!4847 = !DILocation(line: 760, column: 6, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4733, file: !3, line: 760, column: 6)
!4849 = !DILocation(line: 760, column: 11, scope: !4848)
!4850 = !DILocation(line: 760, column: 6, scope: !4733)
!4851 = !DILocation(line: 761, column: 24, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4848, file: !3, line: 760, column: 23)
!4853 = !DILocation(line: 761, column: 34, scope: !4852)
!4854 = !DILocation(line: 761, column: 32, scope: !4852)
!4855 = !DILocation(line: 761, column: 3, scope: !4852)
!4856 = !DILocation(line: 761, column: 8, scope: !4852)
!4857 = !DILocation(line: 761, column: 22, scope: !4852)
!4858 = !DILocation(line: 762, column: 14, scope: !4852)
!4859 = !DILocation(line: 762, column: 19, scope: !4852)
!4860 = !DILocation(line: 762, column: 32, scope: !4852)
!4861 = !DILocation(line: 762, column: 37, scope: !4852)
!4862 = !DILocation(line: 762, column: 3, scope: !4852)
!4863 = !DILocation(line: 763, column: 2, scope: !4852)
!4864 = !DILocation(line: 765, column: 26, scope: !4733)
!4865 = !DILocation(line: 765, column: 31, scope: !4733)
!4866 = !DILocation(line: 765, column: 40, scope: !4733)
!4867 = !DILocation(line: 409, column: 2, scope: !4593, inlinedAt: !4735)
!4868 = !DILocation(line: 409, column: 2, scope: !4598, inlinedAt: !4735)
!4869 = !DILocation(line: 409, column: 2, scope: !4599, inlinedAt: !4735)
!4870 = !DILocation(line: 409, column: 2, scope: !4606, inlinedAt: !4735)
!4871 = !DILocation(line: 409, column: 2, scope: !4609, inlinedAt: !4735)
!4872 = !DILocation(line: 766, column: 1, scope: !4733)
!4873 = distinct !DISubprogram(name: "repeat_period", scope: !3, file: !3, line: 721, type: !4874, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{!7, !159}
!4876 = !DILocalVariable(name: "protocol", arg: 1, scope: !4873, file: !3, line: 721, type: !159)
!4877 = !DILocation(line: 721, column: 39, scope: !4873)
!4878 = !DILocation(line: 723, column: 6, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 723, column: 6)
!4880 = !DILocation(line: 723, column: 15, scope: !4879)
!4881 = !DILocation(line: 723, column: 6, scope: !4873)
!4882 = !DILocation(line: 724, column: 3, scope: !4879)
!4883 = !DILocation(line: 726, column: 19, scope: !4873)
!4884 = !DILocation(line: 726, column: 9, scope: !4873)
!4885 = !DILocation(line: 726, column: 29, scope: !4873)
!4886 = !DILocation(line: 726, column: 2, scope: !4873)
!4887 = !DILocation(line: 727, column: 1, scope: !4873)
!4888 = distinct !DISubprogram(name: "lirc_scancode_event", scope: !3836, file: !3836, line: 334, type: !4889, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4889 = !DISubroutineType(types: !4890)
!4890 = !{null, !237, !4891}
!4891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4783, size: 64)
!4892 = !DILocalVariable(name: "dev", arg: 1, scope: !4888, file: !3836, line: 334, type: !237)
!4893 = !DILocation(line: 334, column: 55, scope: !4888)
!4894 = !DILocalVariable(name: "lsc", arg: 2, scope: !4888, file: !3836, line: 335, type: !4891)
!4895 = !DILocation(line: 335, column: 34, scope: !4888)
!4896 = !DILocation(line: 335, column: 41, scope: !4888)
!4897 = distinct !DISubprogram(name: "input_sync", scope: !3890, file: !3890, line: 440, type: !4056, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4898 = !DILocalVariable(name: "dev", arg: 1, scope: !4897, file: !3890, line: 440, type: !3888)
!4899 = !DILocation(line: 440, column: 49, scope: !4897)
!4900 = !DILocation(line: 442, column: 14, scope: !4897)
!4901 = !DILocation(line: 442, column: 2, scope: !4897)
!4902 = !DILocation(line: 443, column: 1, scope: !4897)
!4903 = distinct !DISubprogram(name: "rc_keydown", scope: !3, file: !3, line: 848, type: !4904, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{null, !237, !5, !184, !226}
!4906 = !DILocation(line: 363, column: 74, scope: !4745, inlinedAt: !4907)
!4907 = distinct !DILocation(line: 859, column: 4, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4909, file: !3, line: 857, column: 23)
!4909 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 857, column: 6)
!4910 = !DILocation(line: 407, column: 64, scope: !4522, inlinedAt: !4911)
!4911 = distinct !DILocation(line: 862, column: 2, scope: !4903)
!4912 = !DILocation(line: 407, column: 84, scope: !4522, inlinedAt: !4911)
!4913 = !DILocation(line: 327, column: 67, scope: !4530, inlinedAt: !4914)
!4914 = distinct !DILocation(line: 854, column: 2, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 854, column: 2)
!4916 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 854, column: 2)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 854, column: 2)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 854, column: 2)
!4919 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 854, column: 2)
!4920 = !DILocalVariable(name: "dev", arg: 1, scope: !4903, file: !3, line: 848, type: !237)
!4921 = !DILocation(line: 848, column: 32, scope: !4903)
!4922 = !DILocalVariable(name: "protocol", arg: 2, scope: !4903, file: !3, line: 848, type: !5)
!4923 = !DILocation(line: 848, column: 51, scope: !4903)
!4924 = !DILocalVariable(name: "scancode", arg: 3, scope: !4903, file: !3, line: 848, type: !184)
!4925 = !DILocation(line: 848, column: 65, scope: !4903)
!4926 = !DILocalVariable(name: "toggle", arg: 4, scope: !4903, file: !3, line: 849, type: !226)
!4927 = !DILocation(line: 849, column: 6, scope: !4903)
!4928 = !DILocalVariable(name: "flags", scope: !4903, file: !3, line: 851, type: !214)
!4929 = !DILocation(line: 851, column: 16, scope: !4903)
!4930 = !DILocalVariable(name: "keycode", scope: !4903, file: !3, line: 852, type: !155)
!4931 = !DILocation(line: 852, column: 6, scope: !4903)
!4932 = !DILocation(line: 852, column: 40, scope: !4903)
!4933 = !DILocation(line: 852, column: 45, scope: !4903)
!4934 = !DILocation(line: 852, column: 16, scope: !4903)
!4935 = !DILocation(line: 854, column: 2, scope: !4903)
!4936 = !DILocation(line: 854, column: 2, scope: !4919)
!4937 = !DILocalVariable(name: "__dummy", scope: !4938, file: !3, line: 854, type: !214)
!4938 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 854, column: 2)
!4939 = !DILocation(line: 854, column: 2, scope: !4938)
!4940 = !DILocalVariable(name: "__dummy2", scope: !4938, file: !3, line: 854, type: !214)
!4941 = !DILocation(line: 854, column: 2, scope: !4918)
!4942 = !DILocation(line: 854, column: 2, scope: !4917)
!4943 = !DILocation(line: 854, column: 2, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 854, column: 2)
!4945 = !DILocalVariable(name: "__dummy", scope: !4946, file: !3, line: 854, type: !214)
!4946 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 854, column: 2)
!4947 = distinct !DILexicalBlock(scope: !4944, file: !3, line: 854, column: 2)
!4948 = !DILocation(line: 854, column: 2, scope: !4946)
!4949 = !DILocalVariable(name: "__dummy2", scope: !4946, file: !3, line: 854, type: !214)
!4950 = !DILocation(line: 854, column: 2, scope: !4947)
!4951 = !DILocation(line: 854, column: 2, scope: !4916)
!4952 = !{i32 -2141663248}
!4953 = !DILocation(line: 854, column: 2, scope: !4915)
!4954 = !DILocation(line: 329, column: 10, scope: !4530, inlinedAt: !4914)
!4955 = !DILocation(line: 329, column: 16, scope: !4530, inlinedAt: !4914)
!4956 = !DILocation(line: 855, column: 16, scope: !4903)
!4957 = !DILocation(line: 855, column: 21, scope: !4903)
!4958 = !DILocation(line: 855, column: 31, scope: !4903)
!4959 = !DILocation(line: 855, column: 41, scope: !4903)
!4960 = !DILocation(line: 855, column: 50, scope: !4903)
!4961 = !DILocation(line: 855, column: 2, scope: !4903)
!4962 = !DILocation(line: 857, column: 6, scope: !4909)
!4963 = !DILocation(line: 857, column: 11, scope: !4909)
!4964 = !DILocation(line: 857, column: 6, scope: !4903)
!4965 = !DILocation(line: 858, column: 24, scope: !4908)
!4966 = !DILocation(line: 858, column: 51, scope: !4908)
!4967 = !DILocation(line: 858, column: 56, scope: !4908)
!4968 = !DILocation(line: 858, column: 34, scope: !4908)
!4969 = !DILocation(line: 858, column: 32, scope: !4908)
!4970 = !DILocation(line: 859, column: 35, scope: !4908)
!4971 = !DILocation(line: 859, column: 21, scope: !4908)
!4972 = !DILocation(line: 365, column: 27, scope: !4764, inlinedAt: !4907)
!4973 = !DILocation(line: 365, column: 6, scope: !4764, inlinedAt: !4907)
!4974 = !DILocation(line: 365, column: 6, scope: !4745, inlinedAt: !4907)
!4975 = !DILocation(line: 366, column: 12, scope: !4768, inlinedAt: !4907)
!4976 = !DILocation(line: 366, column: 14, scope: !4768, inlinedAt: !4907)
!4977 = !DILocation(line: 366, column: 7, scope: !4769, inlinedAt: !4907)
!4978 = !DILocation(line: 367, column: 4, scope: !4768, inlinedAt: !4907)
!4979 = !DILocation(line: 368, column: 28, scope: !4769, inlinedAt: !4907)
!4980 = !DILocation(line: 368, column: 10, scope: !4769, inlinedAt: !4907)
!4981 = !DILocation(line: 368, column: 3, scope: !4769, inlinedAt: !4907)
!4982 = !DILocation(line: 370, column: 29, scope: !4777, inlinedAt: !4907)
!4983 = !DILocation(line: 370, column: 10, scope: !4777, inlinedAt: !4907)
!4984 = !DILocation(line: 370, column: 3, scope: !4777, inlinedAt: !4907)
!4985 = !DILocation(line: 372, column: 1, scope: !4745, inlinedAt: !4907)
!4986 = !DILocation(line: 858, column: 65, scope: !4908)
!4987 = !DILocation(line: 858, column: 3, scope: !4908)
!4988 = !DILocation(line: 858, column: 8, scope: !4908)
!4989 = !DILocation(line: 858, column: 22, scope: !4908)
!4990 = !DILocation(line: 860, column: 14, scope: !4908)
!4991 = !DILocation(line: 860, column: 19, scope: !4908)
!4992 = !DILocation(line: 860, column: 32, scope: !4908)
!4993 = !DILocation(line: 860, column: 37, scope: !4908)
!4994 = !DILocation(line: 860, column: 3, scope: !4908)
!4995 = !DILocation(line: 861, column: 2, scope: !4908)
!4996 = !DILocation(line: 862, column: 26, scope: !4903)
!4997 = !DILocation(line: 862, column: 31, scope: !4903)
!4998 = !DILocation(line: 862, column: 40, scope: !4903)
!4999 = !DILocation(line: 409, column: 2, scope: !4593, inlinedAt: !4911)
!5000 = !DILocation(line: 409, column: 2, scope: !4598, inlinedAt: !4911)
!5001 = !DILocation(line: 409, column: 2, scope: !4599, inlinedAt: !4911)
!5002 = !DILocation(line: 409, column: 2, scope: !4606, inlinedAt: !4911)
!5003 = !DILocation(line: 409, column: 2, scope: !4609, inlinedAt: !4911)
!5004 = !DILocation(line: 863, column: 1, scope: !4903)
!5005 = distinct !DISubprogram(name: "ir_do_keydown", scope: !3, file: !3, line: 780, type: !5006, scopeLine: 782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5006 = !DISubroutineType(types: !5007)
!5007 = !{null, !237, !5, !184, !155, !226}
!5008 = !DILocation(line: 363, column: 74, scope: !4745, inlinedAt: !5009)
!5009 = distinct !DILocation(line: 831, column: 6, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 828, column: 39)
!5011 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 824, column: 6)
!5012 = !DILocalVariable(name: "dev", arg: 1, scope: !5005, file: !3, line: 780, type: !237)
!5013 = !DILocation(line: 780, column: 42, scope: !5005)
!5014 = !DILocalVariable(name: "protocol", arg: 2, scope: !5005, file: !3, line: 780, type: !5)
!5015 = !DILocation(line: 780, column: 61, scope: !5005)
!5016 = !DILocalVariable(name: "scancode", arg: 3, scope: !5005, file: !3, line: 781, type: !184)
!5017 = !DILocation(line: 781, column: 10, scope: !5005)
!5018 = !DILocalVariable(name: "keycode", arg: 4, scope: !5005, file: !3, line: 781, type: !155)
!5019 = !DILocation(line: 781, column: 24, scope: !5005)
!5020 = !DILocalVariable(name: "toggle", arg: 5, scope: !5005, file: !3, line: 781, type: !226)
!5021 = !DILocation(line: 781, column: 36, scope: !5005)
!5022 = !DILocalVariable(name: "new_event", scope: !5005, file: !3, line: 783, type: !488)
!5023 = !DILocation(line: 783, column: 7, scope: !5005)
!5024 = !DILocation(line: 783, column: 21, scope: !5005)
!5025 = !DILocation(line: 783, column: 26, scope: !5005)
!5026 = !DILocation(line: 783, column: 39, scope: !5005)
!5027 = !DILocation(line: 784, column: 6, scope: !5005)
!5028 = !DILocation(line: 784, column: 11, scope: !5005)
!5029 = !DILocation(line: 784, column: 28, scope: !5005)
!5030 = !DILocation(line: 784, column: 25, scope: !5005)
!5031 = !DILocation(line: 784, column: 37, scope: !5005)
!5032 = !DILocation(line: 785, column: 6, scope: !5005)
!5033 = !DILocation(line: 785, column: 11, scope: !5005)
!5034 = !DILocation(line: 785, column: 28, scope: !5005)
!5035 = !DILocation(line: 785, column: 25, scope: !5005)
!5036 = !DILocation(line: 785, column: 37, scope: !5005)
!5037 = !DILocation(line: 786, column: 6, scope: !5005)
!5038 = !DILocation(line: 786, column: 11, scope: !5005)
!5039 = !DILocation(line: 786, column: 28, scope: !5005)
!5040 = !DILocation(line: 786, column: 25, scope: !5005)
!5041 = !DILocalVariable(name: "sc", scope: !5005, file: !3, line: 787, type: !4783)
!5042 = !DILocation(line: 787, column: 23, scope: !5005)
!5043 = !DILocation(line: 787, column: 28, scope: !5005)
!5044 = !DILocation(line: 789, column: 12, scope: !5005)
!5045 = !DILocation(line: 788, column: 37, scope: !5005)
!5046 = !DILocation(line: 790, column: 14, scope: !5005)
!5047 = !DILocation(line: 788, column: 15, scope: !5005)
!5048 = !DILocation(line: 793, column: 6, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 793, column: 6)
!5050 = !DILocation(line: 793, column: 11, scope: !5049)
!5051 = !DILocation(line: 793, column: 29, scope: !5049)
!5052 = !DILocation(line: 793, column: 6, scope: !5005)
!5053 = !DILocation(line: 794, column: 23, scope: !5049)
!5054 = !DILocation(line: 794, column: 3, scope: !5049)
!5055 = !DILocation(line: 796, column: 6, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 796, column: 6)
!5057 = !DILocation(line: 796, column: 16, scope: !5056)
!5058 = !DILocation(line: 796, column: 19, scope: !5056)
!5059 = !DILocation(line: 796, column: 24, scope: !5056)
!5060 = !DILocation(line: 796, column: 6, scope: !5005)
!5061 = !DILocation(line: 797, column: 15, scope: !5056)
!5062 = !DILocation(line: 797, column: 3, scope: !5056)
!5063 = !DILocation(line: 799, column: 6, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 799, column: 6)
!5065 = !DILocation(line: 799, column: 15, scope: !5064)
!5066 = !DILocation(line: 799, column: 6, scope: !5005)
!5067 = !DILocation(line: 800, column: 15, scope: !5064)
!5068 = !DILocation(line: 800, column: 20, scope: !5064)
!5069 = !DILocation(line: 800, column: 49, scope: !5064)
!5070 = !DILocation(line: 800, column: 3, scope: !5064)
!5071 = !DILocation(line: 802, column: 23, scope: !5005)
!5072 = !DILocation(line: 802, column: 2, scope: !5005)
!5073 = !DILocation(line: 802, column: 7, scope: !5005)
!5074 = !DILocation(line: 802, column: 21, scope: !5005)
!5075 = !DILocation(line: 803, column: 23, scope: !5005)
!5076 = !DILocation(line: 803, column: 2, scope: !5005)
!5077 = !DILocation(line: 803, column: 7, scope: !5005)
!5078 = !DILocation(line: 803, column: 21, scope: !5005)
!5079 = !DILocation(line: 804, column: 21, scope: !5005)
!5080 = !DILocation(line: 804, column: 2, scope: !5005)
!5081 = !DILocation(line: 804, column: 7, scope: !5005)
!5082 = !DILocation(line: 804, column: 19, scope: !5005)
!5083 = !DILocation(line: 805, column: 22, scope: !5005)
!5084 = !DILocation(line: 805, column: 2, scope: !5005)
!5085 = !DILocation(line: 805, column: 7, scope: !5005)
!5086 = !DILocation(line: 805, column: 20, scope: !5005)
!5087 = !DILocation(line: 807, column: 6, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5005, file: !3, line: 807, column: 6)
!5089 = !DILocation(line: 807, column: 16, scope: !5088)
!5090 = !DILocation(line: 807, column: 19, scope: !5088)
!5091 = !DILocation(line: 807, column: 27, scope: !5088)
!5092 = !DILocation(line: 807, column: 6, scope: !5005)
!5093 = !DILocation(line: 809, column: 3, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 807, column: 44)
!5095 = !DILocation(line: 809, column: 8, scope: !5094)
!5096 = !DILocation(line: 809, column: 19, scope: !5094)
!5097 = !DILocation(line: 813, column: 20, scope: !5094)
!5098 = !DILocation(line: 813, column: 25, scope: !5094)
!5099 = !DILocation(line: 813, column: 36, scope: !5094)
!5100 = !DILocation(line: 813, column: 3, scope: !5094)
!5101 = !DILocation(line: 815, column: 21, scope: !5094)
!5102 = !DILocation(line: 815, column: 3, scope: !5094)
!5103 = !DILocation(line: 816, column: 2, scope: !5094)
!5104 = !DILocation(line: 824, column: 7, scope: !5011)
!5105 = !DILocation(line: 824, column: 17, scope: !5011)
!5106 = !DILocation(line: 824, column: 20, scope: !5011)
!5107 = !DILocation(line: 824, column: 28, scope: !5011)
!5108 = !DILocation(line: 824, column: 44, scope: !5011)
!5109 = !DILocation(line: 825, column: 6, scope: !5011)
!5110 = !DILocation(line: 825, column: 11, scope: !5011)
!5111 = !DILocation(line: 825, column: 29, scope: !5011)
!5112 = !DILocation(line: 825, column: 49, scope: !5011)
!5113 = !DILocation(line: 826, column: 22, scope: !5011)
!5114 = !DILocation(line: 826, column: 27, scope: !5011)
!5115 = !DILocation(line: 826, column: 7, scope: !5011)
!5116 = !DILocation(line: 826, column: 41, scope: !5011)
!5117 = !DILocation(line: 827, column: 6, scope: !5011)
!5118 = !DILocation(line: 827, column: 11, scope: !5011)
!5119 = !DILocation(line: 827, column: 22, scope: !5011)
!5120 = !DILocation(line: 827, column: 38, scope: !5011)
!5121 = !DILocation(line: 828, column: 7, scope: !5011)
!5122 = !DILocation(line: 828, column: 12, scope: !5011)
!5123 = !DILocation(line: 828, column: 23, scope: !5011)
!5124 = !DILocation(line: 824, column: 6, scope: !5005)
!5125 = !DILocation(line: 829, column: 15, scope: !5010)
!5126 = !DILocation(line: 829, column: 20, scope: !5010)
!5127 = !DILocation(line: 829, column: 39, scope: !5010)
!5128 = !DILocation(line: 829, column: 3, scope: !5010)
!5129 = !DILocation(line: 830, column: 14, scope: !5010)
!5130 = !DILocation(line: 830, column: 19, scope: !5010)
!5131 = !DILocation(line: 830, column: 33, scope: !5010)
!5132 = !DILocation(line: 831, column: 23, scope: !5010)
!5133 = !DILocation(line: 831, column: 28, scope: !5010)
!5134 = !DILocation(line: 831, column: 39, scope: !5010)
!5135 = !DILocation(line: 365, column: 27, scope: !4764, inlinedAt: !5009)
!5136 = !DILocation(line: 365, column: 6, scope: !4764, inlinedAt: !5009)
!5137 = !DILocation(line: 365, column: 6, scope: !4745, inlinedAt: !5009)
!5138 = !DILocation(line: 366, column: 12, scope: !4768, inlinedAt: !5009)
!5139 = !DILocation(line: 366, column: 14, scope: !4768, inlinedAt: !5009)
!5140 = !DILocation(line: 366, column: 7, scope: !4769, inlinedAt: !5009)
!5141 = !DILocation(line: 367, column: 4, scope: !4768, inlinedAt: !5009)
!5142 = !DILocation(line: 368, column: 28, scope: !4769, inlinedAt: !5009)
!5143 = !DILocation(line: 368, column: 10, scope: !4769, inlinedAt: !5009)
!5144 = !DILocation(line: 368, column: 3, scope: !4769, inlinedAt: !5009)
!5145 = !DILocation(line: 370, column: 29, scope: !4777, inlinedAt: !5009)
!5146 = !DILocation(line: 370, column: 10, scope: !4777, inlinedAt: !5009)
!5147 = !DILocation(line: 370, column: 3, scope: !4777, inlinedAt: !5009)
!5148 = !DILocation(line: 372, column: 1, scope: !4745, inlinedAt: !5009)
!5149 = !DILocation(line: 830, column: 41, scope: !5010)
!5150 = !DILocation(line: 830, column: 3, scope: !5010)
!5151 = !DILocation(line: 832, column: 2, scope: !5010)
!5152 = !DILocation(line: 834, column: 13, scope: !5005)
!5153 = !DILocation(line: 834, column: 18, scope: !5005)
!5154 = !DILocation(line: 834, column: 2, scope: !5005)
!5155 = !DILocation(line: 835, column: 1, scope: !5005)
!5156 = distinct !DISubprogram(name: "rc_keydown_notimeout", scope: !3, file: !3, line: 878, type: !4904, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5157 = !DILocation(line: 407, column: 64, scope: !4522, inlinedAt: !5158)
!5158 = distinct !DILocation(line: 886, column: 2, scope: !5156)
!5159 = !DILocation(line: 407, column: 84, scope: !4522, inlinedAt: !5158)
!5160 = !DILocation(line: 327, column: 67, scope: !4530, inlinedAt: !5161)
!5161 = distinct !DILocation(line: 884, column: 2, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5163, file: !3, line: 884, column: 2)
!5163 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 884, column: 2)
!5164 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 884, column: 2)
!5165 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 884, column: 2)
!5166 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 884, column: 2)
!5167 = !DILocalVariable(name: "dev", arg: 1, scope: !5156, file: !3, line: 878, type: !237)
!5168 = !DILocation(line: 878, column: 42, scope: !5156)
!5169 = !DILocalVariable(name: "protocol", arg: 2, scope: !5156, file: !3, line: 878, type: !5)
!5170 = !DILocation(line: 878, column: 61, scope: !5156)
!5171 = !DILocalVariable(name: "scancode", arg: 3, scope: !5156, file: !3, line: 879, type: !184)
!5172 = !DILocation(line: 879, column: 10, scope: !5156)
!5173 = !DILocalVariable(name: "toggle", arg: 4, scope: !5156, file: !3, line: 879, type: !226)
!5174 = !DILocation(line: 879, column: 23, scope: !5156)
!5175 = !DILocalVariable(name: "flags", scope: !5156, file: !3, line: 881, type: !214)
!5176 = !DILocation(line: 881, column: 16, scope: !5156)
!5177 = !DILocalVariable(name: "keycode", scope: !5156, file: !3, line: 882, type: !155)
!5178 = !DILocation(line: 882, column: 6, scope: !5156)
!5179 = !DILocation(line: 882, column: 40, scope: !5156)
!5180 = !DILocation(line: 882, column: 45, scope: !5156)
!5181 = !DILocation(line: 882, column: 16, scope: !5156)
!5182 = !DILocation(line: 884, column: 2, scope: !5156)
!5183 = !DILocation(line: 884, column: 2, scope: !5166)
!5184 = !DILocalVariable(name: "__dummy", scope: !5185, file: !3, line: 884, type: !214)
!5185 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 884, column: 2)
!5186 = !DILocation(line: 884, column: 2, scope: !5185)
!5187 = !DILocalVariable(name: "__dummy2", scope: !5185, file: !3, line: 884, type: !214)
!5188 = !DILocation(line: 884, column: 2, scope: !5165)
!5189 = !DILocation(line: 884, column: 2, scope: !5164)
!5190 = !DILocation(line: 884, column: 2, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 884, column: 2)
!5192 = !DILocalVariable(name: "__dummy", scope: !5193, file: !3, line: 884, type: !214)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 884, column: 2)
!5194 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 884, column: 2)
!5195 = !DILocation(line: 884, column: 2, scope: !5193)
!5196 = !DILocalVariable(name: "__dummy2", scope: !5193, file: !3, line: 884, type: !214)
!5197 = !DILocation(line: 884, column: 2, scope: !5194)
!5198 = !DILocation(line: 884, column: 2, scope: !5163)
!5199 = !{i32 -2141662128}
!5200 = !DILocation(line: 884, column: 2, scope: !5162)
!5201 = !DILocation(line: 329, column: 10, scope: !4530, inlinedAt: !5161)
!5202 = !DILocation(line: 329, column: 16, scope: !4530, inlinedAt: !5161)
!5203 = !DILocation(line: 885, column: 16, scope: !5156)
!5204 = !DILocation(line: 885, column: 21, scope: !5156)
!5205 = !DILocation(line: 885, column: 31, scope: !5156)
!5206 = !DILocation(line: 885, column: 41, scope: !5156)
!5207 = !DILocation(line: 885, column: 50, scope: !5156)
!5208 = !DILocation(line: 885, column: 2, scope: !5156)
!5209 = !DILocation(line: 886, column: 26, scope: !5156)
!5210 = !DILocation(line: 886, column: 31, scope: !5156)
!5211 = !DILocation(line: 886, column: 40, scope: !5156)
!5212 = !DILocation(line: 409, column: 2, scope: !4593, inlinedAt: !5158)
!5213 = !DILocation(line: 409, column: 2, scope: !4598, inlinedAt: !5158)
!5214 = !DILocation(line: 409, column: 2, scope: !4599, inlinedAt: !5158)
!5215 = !DILocation(line: 409, column: 2, scope: !4606, inlinedAt: !5158)
!5216 = !DILocation(line: 409, column: 2, scope: !4609, inlinedAt: !5158)
!5217 = !DILocation(line: 887, column: 1, scope: !5156)
!5218 = distinct !DISubprogram(name: "rc_validate_scancode", scope: !3, file: !3, line: 896, type: !5219, scopeLine: 897, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5219 = !DISubroutineType(types: !5220)
!5220 = !{!488, !5, !155}
!5221 = !DILocalVariable(name: "proto", arg: 1, scope: !5218, file: !3, line: 896, type: !5)
!5222 = !DILocation(line: 896, column: 41, scope: !5218)
!5223 = !DILocalVariable(name: "scancode", arg: 2, scope: !5218, file: !3, line: 896, type: !155)
!5224 = !DILocation(line: 896, column: 52, scope: !5218)
!5225 = !DILocation(line: 898, column: 10, scope: !5218)
!5226 = !DILocation(line: 898, column: 2, scope: !5218)
!5227 = !DILocation(line: 904, column: 10, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 904, column: 7)
!5229 = distinct !DILexicalBlock(scope: !5218, file: !3, line: 898, column: 17)
!5230 = !DILocation(line: 904, column: 19, scope: !5228)
!5231 = !DILocation(line: 904, column: 30, scope: !5228)
!5232 = !DILocation(line: 904, column: 39, scope: !5228)
!5233 = !DILocation(line: 904, column: 28, scope: !5228)
!5234 = !DILocation(line: 904, column: 26, scope: !5228)
!5235 = !DILocation(line: 904, column: 46, scope: !5228)
!5236 = !DILocation(line: 904, column: 54, scope: !5228)
!5237 = !DILocation(line: 904, column: 7, scope: !5229)
!5238 = !DILocation(line: 905, column: 4, scope: !5228)
!5239 = !DILocation(line: 906, column: 3, scope: !5229)
!5240 = !DILocation(line: 913, column: 10, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 913, column: 7)
!5242 = !DILocation(line: 913, column: 19, scope: !5241)
!5243 = !DILocation(line: 913, column: 28, scope: !5241)
!5244 = !DILocation(line: 913, column: 27, scope: !5241)
!5245 = !DILocation(line: 913, column: 25, scope: !5241)
!5246 = !DILocation(line: 913, column: 38, scope: !5241)
!5247 = !DILocation(line: 913, column: 46, scope: !5241)
!5248 = !DILocation(line: 913, column: 7, scope: !5229)
!5249 = !DILocation(line: 914, column: 4, scope: !5241)
!5250 = !DILocation(line: 915, column: 3, scope: !5229)
!5251 = !DILocation(line: 921, column: 8, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 921, column: 7)
!5253 = !DILocation(line: 921, column: 17, scope: !5252)
!5254 = !DILocation(line: 921, column: 31, scope: !5252)
!5255 = !DILocation(line: 921, column: 7, scope: !5229)
!5256 = !DILocation(line: 922, column: 4, scope: !5252)
!5257 = !DILocation(line: 923, column: 3, scope: !5229)
!5258 = !DILocation(line: 925, column: 8, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 925, column: 7)
!5260 = !DILocation(line: 925, column: 17, scope: !5259)
!5261 = !DILocation(line: 925, column: 31, scope: !5259)
!5262 = !DILocation(line: 925, column: 7, scope: !5229)
!5263 = !DILocation(line: 926, column: 4, scope: !5259)
!5264 = !DILocation(line: 927, column: 3, scope: !5229)
!5265 = !DILocation(line: 929, column: 3, scope: !5229)
!5266 = !DILocation(line: 932, column: 2, scope: !5218)
!5267 = !DILocation(line: 933, column: 1, scope: !5218)
!5268 = distinct !DISubprogram(name: "rc_open", scope: !3, file: !3, line: 969, type: !4193, scopeLine: 970, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5269 = !DILocalVariable(name: "rdev", arg: 1, scope: !5268, file: !3, line: 969, type: !237)
!5270 = !DILocation(line: 969, column: 28, scope: !5268)
!5271 = !DILocalVariable(name: "rval", scope: !5268, file: !3, line: 971, type: !159)
!5272 = !DILocation(line: 971, column: 6, scope: !5268)
!5273 = !DILocation(line: 973, column: 7, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5268, file: !3, line: 973, column: 6)
!5275 = !DILocation(line: 973, column: 6, scope: !5268)
!5276 = !DILocation(line: 974, column: 3, scope: !5274)
!5277 = !DILocation(line: 976, column: 14, scope: !5268)
!5278 = !DILocation(line: 976, column: 20, scope: !5268)
!5279 = !DILocation(line: 976, column: 2, scope: !5268)
!5280 = !DILocation(line: 978, column: 7, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5268, file: !3, line: 978, column: 6)
!5282 = !DILocation(line: 978, column: 13, scope: !5281)
!5283 = !DILocation(line: 978, column: 6, scope: !5268)
!5284 = !DILocation(line: 979, column: 8, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 978, column: 25)
!5286 = !DILocation(line: 980, column: 2, scope: !5285)
!5287 = !DILocation(line: 981, column: 8, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 981, column: 7)
!5289 = distinct !DILexicalBlock(scope: !5281, file: !3, line: 980, column: 9)
!5290 = !DILocation(line: 981, column: 14, scope: !5288)
!5291 = !DILocation(line: 981, column: 19, scope: !5288)
!5292 = !DILocation(line: 981, column: 22, scope: !5288)
!5293 = !DILocation(line: 981, column: 25, scope: !5288)
!5294 = !DILocation(line: 981, column: 31, scope: !5288)
!5295 = !DILocation(line: 981, column: 7, scope: !5289)
!5296 = !DILocation(line: 982, column: 11, scope: !5288)
!5297 = !DILocation(line: 982, column: 17, scope: !5288)
!5298 = !DILocation(line: 982, column: 22, scope: !5288)
!5299 = !DILocation(line: 982, column: 9, scope: !5288)
!5300 = !DILocation(line: 982, column: 4, scope: !5288)
!5301 = !DILocation(line: 984, column: 7, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 984, column: 7)
!5303 = !DILocation(line: 984, column: 7, scope: !5289)
!5304 = !DILocation(line: 985, column: 4, scope: !5302)
!5305 = !DILocation(line: 985, column: 10, scope: !5302)
!5306 = !DILocation(line: 985, column: 15, scope: !5302)
!5307 = !DILocation(line: 988, column: 16, scope: !5268)
!5308 = !DILocation(line: 988, column: 22, scope: !5268)
!5309 = !DILocation(line: 988, column: 2, scope: !5268)
!5310 = !DILocation(line: 990, column: 9, scope: !5268)
!5311 = !DILocation(line: 990, column: 2, scope: !5268)
!5312 = !DILocation(line: 991, column: 1, scope: !5268)
!5313 = distinct !DISubprogram(name: "rc_close", scope: !3, file: !3, line: 1000, type: !4197, scopeLine: 1001, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5314 = !DILocalVariable(name: "rdev", arg: 1, scope: !5313, file: !3, line: 1000, type: !237)
!5315 = !DILocation(line: 1000, column: 30, scope: !5313)
!5316 = !DILocation(line: 1002, column: 6, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 1002, column: 6)
!5318 = !DILocation(line: 1002, column: 6, scope: !5313)
!5319 = !DILocation(line: 1003, column: 15, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1002, column: 12)
!5321 = !DILocation(line: 1003, column: 21, scope: !5320)
!5322 = !DILocation(line: 1003, column: 3, scope: !5320)
!5323 = !DILocation(line: 1005, column: 10, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 1005, column: 7)
!5325 = !DILocation(line: 1005, column: 16, scope: !5324)
!5326 = !DILocation(line: 1005, column: 8, scope: !5324)
!5327 = !DILocation(line: 1005, column: 22, scope: !5324)
!5328 = !DILocation(line: 1005, column: 25, scope: !5324)
!5329 = !DILocation(line: 1005, column: 31, scope: !5324)
!5330 = !DILocation(line: 1005, column: 37, scope: !5324)
!5331 = !DILocation(line: 1005, column: 40, scope: !5324)
!5332 = !DILocation(line: 1005, column: 46, scope: !5324)
!5333 = !DILocation(line: 1005, column: 7, scope: !5320)
!5334 = !DILocation(line: 1006, column: 4, scope: !5324)
!5335 = !DILocation(line: 1006, column: 10, scope: !5324)
!5336 = !DILocation(line: 1006, column: 16, scope: !5324)
!5337 = !DILocation(line: 1008, column: 17, scope: !5320)
!5338 = !DILocation(line: 1008, column: 23, scope: !5320)
!5339 = !DILocation(line: 1008, column: 3, scope: !5320)
!5340 = !DILocation(line: 1009, column: 2, scope: !5320)
!5341 = !DILocation(line: 1010, column: 1, scope: !5313)
!5342 = distinct !DISubprogram(name: "ir_raw_load_modules", scope: !3, file: !3, line: 1219, type: !5343, scopeLine: 1220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5343 = !DISubroutineType(types: !5344)
!5344 = !{null, !234}
!5345 = !DILocalVariable(name: "protocols", arg: 1, scope: !5342, file: !3, line: 1219, type: !234)
!5346 = !DILocation(line: 1219, column: 31, scope: !5342)
!5347 = !DILocalVariable(name: "available", scope: !5342, file: !3, line: 1221, type: !184)
!5348 = !DILocation(line: 1221, column: 6, scope: !5342)
!5349 = !DILocalVariable(name: "i", scope: !5342, file: !3, line: 1222, type: !159)
!5350 = !DILocation(line: 1222, column: 6, scope: !5342)
!5351 = !DILocalVariable(name: "ret", scope: !5342, file: !3, line: 1222, type: !159)
!5352 = !DILocation(line: 1222, column: 9, scope: !5342)
!5353 = !DILocation(line: 1224, column: 9, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 1224, column: 2)
!5355 = !DILocation(line: 1224, column: 7, scope: !5354)
!5356 = !DILocation(line: 1224, column: 14, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5354, file: !3, line: 1224, column: 2)
!5358 = !DILocation(line: 1224, column: 16, scope: !5357)
!5359 = !DILocation(line: 1224, column: 2, scope: !5354)
!5360 = !DILocation(line: 1225, column: 19, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 1225, column: 7)
!5362 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 1224, column: 48)
!5363 = !DILocation(line: 1225, column: 7, scope: !5361)
!5364 = !DILocation(line: 1225, column: 22, scope: !5361)
!5365 = !DILocation(line: 1225, column: 27, scope: !5361)
!5366 = !DILocation(line: 1225, column: 48, scope: !5361)
!5367 = !DILocation(line: 1226, column: 19, scope: !5361)
!5368 = !DILocation(line: 1226, column: 7, scope: !5361)
!5369 = !DILocation(line: 1226, column: 22, scope: !5361)
!5370 = !DILocation(line: 1226, column: 27, scope: !5361)
!5371 = !DILocation(line: 1225, column: 7, scope: !5362)
!5372 = !DILocation(line: 1228, column: 4, scope: !5361)
!5373 = !DILocation(line: 1230, column: 15, scope: !5362)
!5374 = !DILocation(line: 1230, column: 13, scope: !5362)
!5375 = !DILocation(line: 1231, column: 10, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 1231, column: 7)
!5377 = !DILocation(line: 1231, column: 9, scope: !5376)
!5378 = !DILocation(line: 1231, column: 34, scope: !5376)
!5379 = !DILocation(line: 1231, column: 22, scope: !5376)
!5380 = !DILocation(line: 1231, column: 37, scope: !5376)
!5381 = !DILocation(line: 1231, column: 20, scope: !5376)
!5382 = !DILocation(line: 1231, column: 45, scope: !5376)
!5383 = !DILocation(line: 1231, column: 44, scope: !5376)
!5384 = !DILocation(line: 1231, column: 42, scope: !5376)
!5385 = !DILocation(line: 1231, column: 7, scope: !5362)
!5386 = !DILocation(line: 1232, column: 4, scope: !5376)
!5387 = !DILocation(line: 1234, column: 20, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 1234, column: 7)
!5389 = !DILocation(line: 1234, column: 8, scope: !5388)
!5390 = !DILocation(line: 1234, column: 23, scope: !5388)
!5391 = !DILocation(line: 1234, column: 7, scope: !5362)
!5392 = !DILocation(line: 1235, column: 4, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1234, column: 36)
!5394 = !DILocation(line: 1237, column: 31, scope: !5393)
!5395 = !DILocation(line: 1237, column: 19, scope: !5393)
!5396 = !DILocation(line: 1237, column: 34, scope: !5393)
!5397 = !DILocation(line: 1237, column: 18, scope: !5393)
!5398 = !DILocation(line: 1237, column: 5, scope: !5393)
!5399 = !DILocation(line: 1237, column: 15, scope: !5393)
!5400 = !DILocation(line: 1238, column: 4, scope: !5393)
!5401 = !DILocation(line: 1241, column: 42, scope: !5362)
!5402 = !DILocation(line: 1241, column: 30, scope: !5362)
!5403 = !DILocation(line: 1241, column: 45, scope: !5362)
!5404 = !DILocation(line: 1241, column: 9, scope: !5362)
!5405 = !DILocation(line: 1241, column: 7, scope: !5362)
!5406 = !DILocation(line: 1242, column: 7, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 1242, column: 7)
!5408 = !DILocation(line: 1242, column: 11, scope: !5407)
!5409 = !DILocation(line: 1242, column: 7, scope: !5362)
!5410 = !DILocation(line: 1243, column: 4, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5407, file: !3, line: 1242, column: 16)
!5412 = !DILocation(line: 1245, column: 31, scope: !5411)
!5413 = !DILocation(line: 1245, column: 19, scope: !5411)
!5414 = !DILocation(line: 1245, column: 34, scope: !5411)
!5415 = !DILocation(line: 1245, column: 18, scope: !5411)
!5416 = !DILocation(line: 1245, column: 5, scope: !5411)
!5417 = !DILocation(line: 1245, column: 15, scope: !5411)
!5418 = !DILocation(line: 1246, column: 4, scope: !5411)
!5419 = !DILocation(line: 1248, column: 3, scope: !5362)
!5420 = !DILocation(line: 1249, column: 15, scope: !5362)
!5421 = !DILocation(line: 1249, column: 13, scope: !5362)
!5422 = !DILocation(line: 1250, column: 10, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 1250, column: 7)
!5424 = !DILocation(line: 1250, column: 9, scope: !5423)
!5425 = !DILocation(line: 1250, column: 34, scope: !5423)
!5426 = !DILocation(line: 1250, column: 22, scope: !5423)
!5427 = !DILocation(line: 1250, column: 37, scope: !5423)
!5428 = !DILocation(line: 1250, column: 20, scope: !5423)
!5429 = !DILocation(line: 1250, column: 45, scope: !5423)
!5430 = !DILocation(line: 1250, column: 44, scope: !5423)
!5431 = !DILocation(line: 1250, column: 42, scope: !5423)
!5432 = !DILocation(line: 1250, column: 7, scope: !5362)
!5433 = !DILocation(line: 1251, column: 4, scope: !5423)
!5434 = !DILocation(line: 1253, column: 3, scope: !5362)
!5435 = !DILocation(line: 1256, column: 30, scope: !5362)
!5436 = !DILocation(line: 1256, column: 18, scope: !5362)
!5437 = !DILocation(line: 1256, column: 33, scope: !5362)
!5438 = !DILocation(line: 1256, column: 17, scope: !5362)
!5439 = !DILocation(line: 1256, column: 4, scope: !5362)
!5440 = !DILocation(line: 1256, column: 14, scope: !5362)
!5441 = !DILocation(line: 1257, column: 2, scope: !5362)
!5442 = !DILocation(line: 1224, column: 44, scope: !5357)
!5443 = !DILocation(line: 1224, column: 2, scope: !5357)
!5444 = distinct !{!5444, !5359, !5445}
!5445 = !DILocation(line: 1257, column: 2, scope: !5354)
!5446 = !DILocation(line: 1258, column: 1, scope: !5342)
!5447 = distinct !DISubprogram(name: "request_module", scope: !5448, file: !5448, line: 30, type: !5449, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5448 = !DIFile(filename: "./include/linux/kmod.h", directory: "/home/lizy2001/genbc/linux")
!5449 = !DISubroutineType(types: !5450)
!5450 = !{!159, !193, null}
!5451 = !DILocalVariable(name: "name", arg: 1, scope: !5447, file: !5448, line: 30, type: !193)
!5452 = !DILocation(line: 30, column: 46, scope: !5447)
!5453 = !DILocation(line: 30, column: 59, scope: !5447)
!5454 = !DILocation(line: 327, column: 67, scope: !4530, inlinedAt: !5455)
!5455 = distinct !DILocation(line: 1723, column: 3, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 1723, column: 3)
!5457 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1707, column: 35)
!5458 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 1707, column: 6)
!5459 = !DILocation(line: 327, column: 67, scope: !4530, inlinedAt: !5460)
!5460 = distinct !DILocation(line: 1722, column: 3, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 1722, column: 3)
!5462 = !DILocalVariable(name: "type", arg: 1, scope: !4258, file: !3, line: 1699, type: !124)
!5463 = !DILocation(line: 1699, column: 55, scope: !4258)
!5464 = !DILocalVariable(name: "dev", scope: !4258, file: !3, line: 1701, type: !237)
!5465 = !DILocation(line: 1701, column: 17, scope: !4258)
!5466 = !DILocation(line: 1703, column: 8, scope: !4258)
!5467 = !DILocation(line: 1703, column: 6, scope: !4258)
!5468 = !DILocation(line: 1704, column: 7, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 1704, column: 6)
!5470 = !DILocation(line: 1704, column: 6, scope: !4258)
!5471 = !DILocation(line: 1705, column: 3, scope: !5469)
!5472 = !DILocation(line: 1707, column: 6, scope: !5458)
!5473 = !DILocation(line: 1707, column: 11, scope: !5458)
!5474 = !DILocation(line: 1707, column: 6, scope: !4258)
!5475 = !DILocation(line: 1708, column: 20, scope: !5457)
!5476 = !DILocation(line: 1708, column: 3, scope: !5457)
!5477 = !DILocation(line: 1708, column: 8, scope: !5457)
!5478 = !DILocation(line: 1708, column: 18, scope: !5457)
!5479 = !DILocation(line: 1709, column: 8, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 1709, column: 7)
!5481 = !DILocation(line: 1709, column: 13, scope: !5480)
!5482 = !DILocation(line: 1709, column: 7, scope: !5457)
!5483 = !DILocation(line: 1710, column: 10, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5480, file: !3, line: 1709, column: 24)
!5485 = !DILocation(line: 1710, column: 4, scope: !5484)
!5486 = !DILocation(line: 1711, column: 4, scope: !5484)
!5487 = !DILocation(line: 1714, column: 3, scope: !5457)
!5488 = !DILocation(line: 1714, column: 8, scope: !5457)
!5489 = !DILocation(line: 1714, column: 19, scope: !5457)
!5490 = !DILocation(line: 1714, column: 30, scope: !5457)
!5491 = !DILocation(line: 1715, column: 3, scope: !5457)
!5492 = !DILocation(line: 1715, column: 8, scope: !5457)
!5493 = !DILocation(line: 1715, column: 19, scope: !5457)
!5494 = !DILocation(line: 1715, column: 30, scope: !5457)
!5495 = !DILocation(line: 1716, column: 21, scope: !5457)
!5496 = !DILocation(line: 1716, column: 26, scope: !5457)
!5497 = !DILocation(line: 1716, column: 37, scope: !5457)
!5498 = !DILocation(line: 1716, column: 3, scope: !5457)
!5499 = !DILocation(line: 1718, column: 3, scope: !5457)
!5500 = !DILocation(line: 1718, column: 8, scope: !5457)
!5501 = !DILocation(line: 1718, column: 16, scope: !5457)
!5502 = !DILocation(line: 1719, column: 3, scope: !5457)
!5503 = !DILocation(line: 1720, column: 3, scope: !5457)
!5504 = !DILocation(line: 1722, column: 3, scope: !5457)
!5505 = !DILocation(line: 1722, column: 3, scope: !5461)
!5506 = !DILocation(line: 329, column: 10, scope: !4530, inlinedAt: !5460)
!5507 = !DILocation(line: 329, column: 16, scope: !4530, inlinedAt: !5460)
!5508 = !DILocation(line: 1723, column: 3, scope: !5457)
!5509 = !DILocation(line: 1723, column: 3, scope: !5456)
!5510 = !DILocation(line: 329, column: 10, scope: !4530, inlinedAt: !5455)
!5511 = !DILocation(line: 329, column: 16, scope: !4530, inlinedAt: !5455)
!5512 = !DILocation(line: 1724, column: 2, scope: !5457)
!5513 = !DILocation(line: 1725, column: 2, scope: !4258)
!5514 = !DILocation(line: 1725, column: 2, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 1725, column: 2)
!5516 = !DILocation(line: 1727, column: 2, scope: !4258)
!5517 = !DILocation(line: 1727, column: 7, scope: !4258)
!5518 = !DILocation(line: 1727, column: 11, scope: !4258)
!5519 = !DILocation(line: 1727, column: 16, scope: !4258)
!5520 = !DILocation(line: 1728, column: 2, scope: !4258)
!5521 = !DILocation(line: 1728, column: 7, scope: !4258)
!5522 = !DILocation(line: 1728, column: 11, scope: !4258)
!5523 = !DILocation(line: 1728, column: 17, scope: !4258)
!5524 = !DILocation(line: 1729, column: 21, scope: !4258)
!5525 = !DILocation(line: 1729, column: 26, scope: !4258)
!5526 = !DILocation(line: 1729, column: 2, scope: !4258)
!5527 = !DILocation(line: 1731, column: 21, scope: !4258)
!5528 = !DILocation(line: 1731, column: 2, scope: !4258)
!5529 = !DILocation(line: 1731, column: 7, scope: !4258)
!5530 = !DILocation(line: 1731, column: 19, scope: !4258)
!5531 = !DILocation(line: 1733, column: 2, scope: !4258)
!5532 = !DILocation(line: 1734, column: 9, scope: !4258)
!5533 = !DILocation(line: 1734, column: 2, scope: !4258)
!5534 = !DILocation(line: 1735, column: 1, scope: !4258)
!5535 = distinct !DISubprogram(name: "kzalloc", scope: !143, file: !143, line: 662, type: !5536, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5536 = !DISubroutineType(types: !5537)
!5537 = !{!165, !328, !160}
!5538 = !DILocalVariable(name: "s", arg: 1, scope: !5539, file: !143, line: 445, type: !925)
!5539 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !143, file: !143, line: 445, type: !5540, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5540 = !DISubroutineType(types: !5541)
!5541 = !{!165, !925, !160, !328}
!5542 = !DILocation(line: 445, column: 72, scope: !5539, inlinedAt: !5543)
!5543 = distinct !DILocation(line: 552, column: 10, scope: !5544, inlinedAt: !5547)
!5544 = distinct !DILexicalBlock(scope: !5545, file: !143, line: 540, column: 34)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !143, line: 540, column: 6)
!5546 = distinct !DISubprogram(name: "kmalloc", scope: !143, file: !143, line: 538, type: !5536, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5547 = distinct !DILocation(line: 664, column: 9, scope: !5535)
!5548 = !DILocalVariable(name: "flags", arg: 2, scope: !5539, file: !143, line: 446, type: !160)
!5549 = !DILocation(line: 446, column: 9, scope: !5539, inlinedAt: !5543)
!5550 = !DILocalVariable(name: "size", arg: 3, scope: !5539, file: !143, line: 446, type: !328)
!5551 = !DILocation(line: 446, column: 23, scope: !5539, inlinedAt: !5543)
!5552 = !DILocalVariable(name: "ret", scope: !5539, file: !143, line: 448, type: !165)
!5553 = !DILocation(line: 448, column: 8, scope: !5539, inlinedAt: !5543)
!5554 = !DILocalVariable(name: "flags", arg: 1, scope: !5555, file: !143, line: 318, type: !160)
!5555 = distinct !DISubprogram(name: "kmalloc_type", scope: !143, file: !143, line: 318, type: !5556, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5556 = !DISubroutineType(types: !5557)
!5557 = !{!142, !160}
!5558 = !DILocation(line: 318, column: 67, scope: !5555, inlinedAt: !5559)
!5559 = distinct !DILocation(line: 553, column: 20, scope: !5544, inlinedAt: !5547)
!5560 = !DILocalVariable(name: "size", arg: 1, scope: !5561, file: !143, line: 346, type: !328)
!5561 = distinct !DISubprogram(name: "kmalloc_index", scope: !143, file: !143, line: 346, type: !5562, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5562 = !DISubroutineType(types: !5563)
!5563 = !{!7, !328}
!5564 = !DILocation(line: 346, column: 58, scope: !5561, inlinedAt: !5565)
!5565 = distinct !DILocation(line: 547, column: 11, scope: !5544, inlinedAt: !5547)
!5566 = !DILocalVariable(name: "size", arg: 1, scope: !5567, file: !143, line: 472, type: !328)
!5567 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !143, file: !143, line: 472, type: !5568, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5568 = !DISubroutineType(types: !5569)
!5569 = !{!165, !328, !160, !7}
!5570 = !DILocation(line: 472, column: 28, scope: !5567, inlinedAt: !5571)
!5571 = distinct !DILocation(line: 481, column: 9, scope: !5572, inlinedAt: !5573)
!5572 = distinct !DISubprogram(name: "kmalloc_large", scope: !143, file: !143, line: 478, type: !5536, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5573 = distinct !DILocation(line: 545, column: 11, scope: !5574, inlinedAt: !5547)
!5574 = distinct !DILexicalBlock(scope: !5544, file: !143, line: 544, column: 7)
!5575 = !DILocalVariable(name: "flags", arg: 2, scope: !5567, file: !143, line: 472, type: !160)
!5576 = !DILocation(line: 472, column: 40, scope: !5567, inlinedAt: !5571)
!5577 = !DILocalVariable(name: "order", arg: 3, scope: !5567, file: !143, line: 472, type: !7)
!5578 = !DILocation(line: 472, column: 60, scope: !5567, inlinedAt: !5571)
!5579 = !DILocalVariable(name: "size", arg: 1, scope: !5572, file: !143, line: 478, type: !328)
!5580 = !DILocation(line: 478, column: 51, scope: !5572, inlinedAt: !5573)
!5581 = !DILocalVariable(name: "flags", arg: 2, scope: !5572, file: !143, line: 478, type: !160)
!5582 = !DILocation(line: 478, column: 63, scope: !5572, inlinedAt: !5573)
!5583 = !DILocalVariable(name: "order", scope: !5572, file: !143, line: 480, type: !7)
!5584 = !DILocation(line: 480, column: 15, scope: !5572, inlinedAt: !5573)
!5585 = !DILocalVariable(name: "size", arg: 1, scope: !5546, file: !143, line: 538, type: !328)
!5586 = !DILocation(line: 538, column: 45, scope: !5546, inlinedAt: !5547)
!5587 = !DILocalVariable(name: "flags", arg: 2, scope: !5546, file: !143, line: 538, type: !160)
!5588 = !DILocation(line: 538, column: 57, scope: !5546, inlinedAt: !5547)
!5589 = !DILocalVariable(name: "index", scope: !5544, file: !143, line: 542, type: !7)
!5590 = !DILocation(line: 542, column: 16, scope: !5544, inlinedAt: !5547)
!5591 = !DILocalVariable(name: "size", arg: 1, scope: !5535, file: !143, line: 662, type: !328)
!5592 = !DILocation(line: 662, column: 36, scope: !5535)
!5593 = !DILocalVariable(name: "flags", arg: 2, scope: !5535, file: !143, line: 662, type: !160)
!5594 = !DILocation(line: 662, column: 48, scope: !5535)
!5595 = !DILocation(line: 664, column: 17, scope: !5535)
!5596 = !DILocation(line: 664, column: 23, scope: !5535)
!5597 = !DILocation(line: 664, column: 29, scope: !5535)
!5598 = !DILocation(line: 540, column: 27, scope: !5545, inlinedAt: !5547)
!5599 = !DILocation(line: 540, column: 6, scope: !5545, inlinedAt: !5547)
!5600 = !DILocation(line: 540, column: 6, scope: !5546, inlinedAt: !5547)
!5601 = !DILocation(line: 544, column: 7, scope: !5574, inlinedAt: !5547)
!5602 = !DILocation(line: 544, column: 12, scope: !5574, inlinedAt: !5547)
!5603 = !DILocation(line: 544, column: 7, scope: !5544, inlinedAt: !5547)
!5604 = !DILocation(line: 545, column: 25, scope: !5574, inlinedAt: !5547)
!5605 = !DILocation(line: 545, column: 31, scope: !5574, inlinedAt: !5547)
!5606 = !DILocation(line: 480, column: 33, scope: !5572, inlinedAt: !5573)
!5607 = !DILocation(line: 480, column: 23, scope: !5572, inlinedAt: !5573)
!5608 = !DILocation(line: 481, column: 29, scope: !5572, inlinedAt: !5573)
!5609 = !DILocation(line: 481, column: 35, scope: !5572, inlinedAt: !5573)
!5610 = !DILocation(line: 481, column: 42, scope: !5572, inlinedAt: !5573)
!5611 = !DILocation(line: 474, column: 23, scope: !5567, inlinedAt: !5571)
!5612 = !DILocation(line: 474, column: 29, scope: !5567, inlinedAt: !5571)
!5613 = !DILocation(line: 474, column: 36, scope: !5567, inlinedAt: !5571)
!5614 = !DILocation(line: 474, column: 9, scope: !5567, inlinedAt: !5571)
!5615 = !DILocation(line: 545, column: 4, scope: !5574, inlinedAt: !5547)
!5616 = !DILocation(line: 547, column: 25, scope: !5544, inlinedAt: !5547)
!5617 = !DILocation(line: 348, column: 7, scope: !5618, inlinedAt: !5565)
!5618 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 348, column: 6)
!5619 = !DILocation(line: 348, column: 6, scope: !5561, inlinedAt: !5565)
!5620 = !DILocation(line: 349, column: 3, scope: !5618, inlinedAt: !5565)
!5621 = !DILocation(line: 351, column: 6, scope: !5622, inlinedAt: !5565)
!5622 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 351, column: 6)
!5623 = !DILocation(line: 351, column: 11, scope: !5622, inlinedAt: !5565)
!5624 = !DILocation(line: 351, column: 6, scope: !5561, inlinedAt: !5565)
!5625 = !DILocation(line: 352, column: 3, scope: !5622, inlinedAt: !5565)
!5626 = !DILocation(line: 354, column: 32, scope: !5627, inlinedAt: !5565)
!5627 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 354, column: 6)
!5628 = !DILocation(line: 354, column: 37, scope: !5627, inlinedAt: !5565)
!5629 = !DILocation(line: 354, column: 42, scope: !5627, inlinedAt: !5565)
!5630 = !DILocation(line: 354, column: 45, scope: !5627, inlinedAt: !5565)
!5631 = !DILocation(line: 354, column: 50, scope: !5627, inlinedAt: !5565)
!5632 = !DILocation(line: 354, column: 6, scope: !5561, inlinedAt: !5565)
!5633 = !DILocation(line: 355, column: 3, scope: !5627, inlinedAt: !5565)
!5634 = !DILocation(line: 356, column: 32, scope: !5635, inlinedAt: !5565)
!5635 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 356, column: 6)
!5636 = !DILocation(line: 356, column: 37, scope: !5635, inlinedAt: !5565)
!5637 = !DILocation(line: 356, column: 43, scope: !5635, inlinedAt: !5565)
!5638 = !DILocation(line: 356, column: 46, scope: !5635, inlinedAt: !5565)
!5639 = !DILocation(line: 356, column: 51, scope: !5635, inlinedAt: !5565)
!5640 = !DILocation(line: 356, column: 6, scope: !5561, inlinedAt: !5565)
!5641 = !DILocation(line: 357, column: 3, scope: !5635, inlinedAt: !5565)
!5642 = !DILocation(line: 358, column: 6, scope: !5643, inlinedAt: !5565)
!5643 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 358, column: 6)
!5644 = !DILocation(line: 358, column: 11, scope: !5643, inlinedAt: !5565)
!5645 = !DILocation(line: 358, column: 6, scope: !5561, inlinedAt: !5565)
!5646 = !DILocation(line: 358, column: 26, scope: !5643, inlinedAt: !5565)
!5647 = !DILocation(line: 359, column: 6, scope: !5648, inlinedAt: !5565)
!5648 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 359, column: 6)
!5649 = !DILocation(line: 359, column: 11, scope: !5648, inlinedAt: !5565)
!5650 = !DILocation(line: 359, column: 6, scope: !5561, inlinedAt: !5565)
!5651 = !DILocation(line: 359, column: 26, scope: !5648, inlinedAt: !5565)
!5652 = !DILocation(line: 360, column: 6, scope: !5653, inlinedAt: !5565)
!5653 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 360, column: 6)
!5654 = !DILocation(line: 360, column: 11, scope: !5653, inlinedAt: !5565)
!5655 = !DILocation(line: 360, column: 6, scope: !5561, inlinedAt: !5565)
!5656 = !DILocation(line: 360, column: 26, scope: !5653, inlinedAt: !5565)
!5657 = !DILocation(line: 361, column: 6, scope: !5658, inlinedAt: !5565)
!5658 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 361, column: 6)
!5659 = !DILocation(line: 361, column: 11, scope: !5658, inlinedAt: !5565)
!5660 = !DILocation(line: 361, column: 6, scope: !5561, inlinedAt: !5565)
!5661 = !DILocation(line: 361, column: 26, scope: !5658, inlinedAt: !5565)
!5662 = !DILocation(line: 362, column: 6, scope: !5663, inlinedAt: !5565)
!5663 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 362, column: 6)
!5664 = !DILocation(line: 362, column: 11, scope: !5663, inlinedAt: !5565)
!5665 = !DILocation(line: 362, column: 6, scope: !5561, inlinedAt: !5565)
!5666 = !DILocation(line: 362, column: 26, scope: !5663, inlinedAt: !5565)
!5667 = !DILocation(line: 363, column: 6, scope: !5668, inlinedAt: !5565)
!5668 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 363, column: 6)
!5669 = !DILocation(line: 363, column: 11, scope: !5668, inlinedAt: !5565)
!5670 = !DILocation(line: 363, column: 6, scope: !5561, inlinedAt: !5565)
!5671 = !DILocation(line: 363, column: 26, scope: !5668, inlinedAt: !5565)
!5672 = !DILocation(line: 364, column: 6, scope: !5673, inlinedAt: !5565)
!5673 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 364, column: 6)
!5674 = !DILocation(line: 364, column: 11, scope: !5673, inlinedAt: !5565)
!5675 = !DILocation(line: 364, column: 6, scope: !5561, inlinedAt: !5565)
!5676 = !DILocation(line: 364, column: 26, scope: !5673, inlinedAt: !5565)
!5677 = !DILocation(line: 365, column: 6, scope: !5678, inlinedAt: !5565)
!5678 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 365, column: 6)
!5679 = !DILocation(line: 365, column: 11, scope: !5678, inlinedAt: !5565)
!5680 = !DILocation(line: 365, column: 6, scope: !5561, inlinedAt: !5565)
!5681 = !DILocation(line: 365, column: 26, scope: !5678, inlinedAt: !5565)
!5682 = !DILocation(line: 366, column: 6, scope: !5683, inlinedAt: !5565)
!5683 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 366, column: 6)
!5684 = !DILocation(line: 366, column: 11, scope: !5683, inlinedAt: !5565)
!5685 = !DILocation(line: 366, column: 6, scope: !5561, inlinedAt: !5565)
!5686 = !DILocation(line: 366, column: 26, scope: !5683, inlinedAt: !5565)
!5687 = !DILocation(line: 367, column: 6, scope: !5688, inlinedAt: !5565)
!5688 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 367, column: 6)
!5689 = !DILocation(line: 367, column: 11, scope: !5688, inlinedAt: !5565)
!5690 = !DILocation(line: 367, column: 6, scope: !5561, inlinedAt: !5565)
!5691 = !DILocation(line: 367, column: 26, scope: !5688, inlinedAt: !5565)
!5692 = !DILocation(line: 368, column: 6, scope: !5693, inlinedAt: !5565)
!5693 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 368, column: 6)
!5694 = !DILocation(line: 368, column: 11, scope: !5693, inlinedAt: !5565)
!5695 = !DILocation(line: 368, column: 6, scope: !5561, inlinedAt: !5565)
!5696 = !DILocation(line: 368, column: 26, scope: !5693, inlinedAt: !5565)
!5697 = !DILocation(line: 369, column: 6, scope: !5698, inlinedAt: !5565)
!5698 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 369, column: 6)
!5699 = !DILocation(line: 369, column: 11, scope: !5698, inlinedAt: !5565)
!5700 = !DILocation(line: 369, column: 6, scope: !5561, inlinedAt: !5565)
!5701 = !DILocation(line: 369, column: 26, scope: !5698, inlinedAt: !5565)
!5702 = !DILocation(line: 370, column: 6, scope: !5703, inlinedAt: !5565)
!5703 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 370, column: 6)
!5704 = !DILocation(line: 370, column: 11, scope: !5703, inlinedAt: !5565)
!5705 = !DILocation(line: 370, column: 6, scope: !5561, inlinedAt: !5565)
!5706 = !DILocation(line: 370, column: 26, scope: !5703, inlinedAt: !5565)
!5707 = !DILocation(line: 371, column: 6, scope: !5708, inlinedAt: !5565)
!5708 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 371, column: 6)
!5709 = !DILocation(line: 371, column: 11, scope: !5708, inlinedAt: !5565)
!5710 = !DILocation(line: 371, column: 6, scope: !5561, inlinedAt: !5565)
!5711 = !DILocation(line: 371, column: 26, scope: !5708, inlinedAt: !5565)
!5712 = !DILocation(line: 372, column: 6, scope: !5713, inlinedAt: !5565)
!5713 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 372, column: 6)
!5714 = !DILocation(line: 372, column: 11, scope: !5713, inlinedAt: !5565)
!5715 = !DILocation(line: 372, column: 6, scope: !5561, inlinedAt: !5565)
!5716 = !DILocation(line: 372, column: 26, scope: !5713, inlinedAt: !5565)
!5717 = !DILocation(line: 373, column: 6, scope: !5718, inlinedAt: !5565)
!5718 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 373, column: 6)
!5719 = !DILocation(line: 373, column: 11, scope: !5718, inlinedAt: !5565)
!5720 = !DILocation(line: 373, column: 6, scope: !5561, inlinedAt: !5565)
!5721 = !DILocation(line: 373, column: 26, scope: !5718, inlinedAt: !5565)
!5722 = !DILocation(line: 374, column: 6, scope: !5723, inlinedAt: !5565)
!5723 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 374, column: 6)
!5724 = !DILocation(line: 374, column: 11, scope: !5723, inlinedAt: !5565)
!5725 = !DILocation(line: 374, column: 6, scope: !5561, inlinedAt: !5565)
!5726 = !DILocation(line: 374, column: 26, scope: !5723, inlinedAt: !5565)
!5727 = !DILocation(line: 375, column: 6, scope: !5728, inlinedAt: !5565)
!5728 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 375, column: 6)
!5729 = !DILocation(line: 375, column: 11, scope: !5728, inlinedAt: !5565)
!5730 = !DILocation(line: 375, column: 6, scope: !5561, inlinedAt: !5565)
!5731 = !DILocation(line: 375, column: 27, scope: !5728, inlinedAt: !5565)
!5732 = !DILocation(line: 376, column: 6, scope: !5733, inlinedAt: !5565)
!5733 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 376, column: 6)
!5734 = !DILocation(line: 376, column: 11, scope: !5733, inlinedAt: !5565)
!5735 = !DILocation(line: 376, column: 6, scope: !5561, inlinedAt: !5565)
!5736 = !DILocation(line: 376, column: 32, scope: !5733, inlinedAt: !5565)
!5737 = !DILocation(line: 377, column: 6, scope: !5738, inlinedAt: !5565)
!5738 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 377, column: 6)
!5739 = !DILocation(line: 377, column: 11, scope: !5738, inlinedAt: !5565)
!5740 = !DILocation(line: 377, column: 6, scope: !5561, inlinedAt: !5565)
!5741 = !DILocation(line: 377, column: 32, scope: !5738, inlinedAt: !5565)
!5742 = !DILocation(line: 378, column: 6, scope: !5743, inlinedAt: !5565)
!5743 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 378, column: 6)
!5744 = !DILocation(line: 378, column: 11, scope: !5743, inlinedAt: !5565)
!5745 = !DILocation(line: 378, column: 6, scope: !5561, inlinedAt: !5565)
!5746 = !DILocation(line: 378, column: 32, scope: !5743, inlinedAt: !5565)
!5747 = !DILocation(line: 379, column: 6, scope: !5748, inlinedAt: !5565)
!5748 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 379, column: 6)
!5749 = !DILocation(line: 379, column: 11, scope: !5748, inlinedAt: !5565)
!5750 = !DILocation(line: 379, column: 6, scope: !5561, inlinedAt: !5565)
!5751 = !DILocation(line: 379, column: 33, scope: !5748, inlinedAt: !5565)
!5752 = !DILocation(line: 380, column: 6, scope: !5753, inlinedAt: !5565)
!5753 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 380, column: 6)
!5754 = !DILocation(line: 380, column: 11, scope: !5753, inlinedAt: !5565)
!5755 = !DILocation(line: 380, column: 6, scope: !5561, inlinedAt: !5565)
!5756 = !DILocation(line: 380, column: 33, scope: !5753, inlinedAt: !5565)
!5757 = !DILocation(line: 381, column: 6, scope: !5758, inlinedAt: !5565)
!5758 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 381, column: 6)
!5759 = !DILocation(line: 381, column: 11, scope: !5758, inlinedAt: !5565)
!5760 = !DILocation(line: 381, column: 6, scope: !5561, inlinedAt: !5565)
!5761 = !DILocation(line: 381, column: 33, scope: !5758, inlinedAt: !5565)
!5762 = !DILocation(line: 382, column: 2, scope: !5763, inlinedAt: !5565)
!5763 = distinct !DILexicalBlock(scope: !5764, file: !143, line: 382, column: 2)
!5764 = distinct !DILexicalBlock(scope: !5561, file: !143, line: 382, column: 2)
!5765 = !{i32 -2142059489, i32 -2142059460, i32 -2142059414, i32 -2142059356, i32 -2142059302, i32 -2142059248, i32 -2142059193, i32 -2142059162}
!5766 = !DILocation(line: 382, column: 2, scope: !5767, inlinedAt: !5565)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !143, line: 382, column: 2)
!5768 = distinct !DILexicalBlock(scope: !5764, file: !143, line: 382, column: 2)
!5769 = !{i32 -2142058719, i32 -2142058712, i32 -2142058658, i32 -2142058627, i32 -2142058597}
!5770 = !DILocation(line: 382, column: 2, scope: !5768, inlinedAt: !5565)
!5771 = !DILocation(line: 386, column: 1, scope: !5561, inlinedAt: !5565)
!5772 = !DILocation(line: 547, column: 9, scope: !5544, inlinedAt: !5547)
!5773 = !DILocation(line: 549, column: 8, scope: !5774, inlinedAt: !5547)
!5774 = distinct !DILexicalBlock(scope: !5544, file: !143, line: 549, column: 7)
!5775 = !DILocation(line: 549, column: 7, scope: !5544, inlinedAt: !5547)
!5776 = !DILocation(line: 550, column: 4, scope: !5774, inlinedAt: !5547)
!5777 = !DILocation(line: 553, column: 33, scope: !5544, inlinedAt: !5547)
!5778 = !DILocation(line: 325, column: 6, scope: !5779, inlinedAt: !5559)
!5779 = distinct !DILexicalBlock(scope: !5555, file: !143, line: 325, column: 6)
!5780 = !DILocation(line: 325, column: 6, scope: !5555, inlinedAt: !5559)
!5781 = !DILocation(line: 326, column: 3, scope: !5779, inlinedAt: !5559)
!5782 = !DILocation(line: 332, column: 9, scope: !5555, inlinedAt: !5559)
!5783 = !DILocation(line: 332, column: 15, scope: !5555, inlinedAt: !5559)
!5784 = !DILocation(line: 332, column: 2, scope: !5555, inlinedAt: !5559)
!5785 = !DILocation(line: 336, column: 1, scope: !5555, inlinedAt: !5559)
!5786 = !DILocation(line: 553, column: 5, scope: !5544, inlinedAt: !5547)
!5787 = !DILocation(line: 553, column: 41, scope: !5544, inlinedAt: !5547)
!5788 = !DILocation(line: 554, column: 5, scope: !5544, inlinedAt: !5547)
!5789 = !DILocation(line: 554, column: 12, scope: !5544, inlinedAt: !5547)
!5790 = !DILocation(line: 448, column: 31, scope: !5539, inlinedAt: !5543)
!5791 = !DILocation(line: 448, column: 34, scope: !5539, inlinedAt: !5543)
!5792 = !DILocation(line: 448, column: 14, scope: !5539, inlinedAt: !5543)
!5793 = !DILocation(line: 450, column: 22, scope: !5539, inlinedAt: !5543)
!5794 = !DILocation(line: 450, column: 25, scope: !5539, inlinedAt: !5543)
!5795 = !DILocation(line: 450, column: 30, scope: !5539, inlinedAt: !5543)
!5796 = !DILocation(line: 450, column: 36, scope: !5539, inlinedAt: !5543)
!5797 = !DILocation(line: 450, column: 8, scope: !5539, inlinedAt: !5543)
!5798 = !DILocation(line: 450, column: 6, scope: !5539, inlinedAt: !5543)
!5799 = !DILocation(line: 451, column: 9, scope: !5539, inlinedAt: !5543)
!5800 = !DILocation(line: 552, column: 3, scope: !5544, inlinedAt: !5547)
!5801 = !DILocation(line: 557, column: 19, scope: !5546, inlinedAt: !5547)
!5802 = !DILocation(line: 557, column: 25, scope: !5546, inlinedAt: !5547)
!5803 = !DILocation(line: 557, column: 9, scope: !5546, inlinedAt: !5547)
!5804 = !DILocation(line: 557, column: 2, scope: !5546, inlinedAt: !5547)
!5805 = !DILocation(line: 558, column: 1, scope: !5546, inlinedAt: !5547)
!5806 = !DILocation(line: 664, column: 2, scope: !5535)
!5807 = distinct !DISubprogram(name: "ir_getkeycode", scope: !3, file: !3, line: 544, type: !3928, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5808 = !DILocation(line: 407, column: 64, scope: !4522, inlinedAt: !5809)
!5809 = distinct !DILocation(line: 590, column: 2, scope: !5807)
!5810 = !DILocation(line: 407, column: 84, scope: !4522, inlinedAt: !5809)
!5811 = !DILocation(line: 327, column: 67, scope: !4530, inlinedAt: !5812)
!5812 = distinct !DILocation(line: 555, column: 2, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 555, column: 2)
!5814 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 555, column: 2)
!5815 = distinct !DILexicalBlock(scope: !5816, file: !3, line: 555, column: 2)
!5816 = distinct !DILexicalBlock(scope: !5817, file: !3, line: 555, column: 2)
!5817 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 555, column: 2)
!5818 = !DILocalVariable(name: "idev", arg: 1, scope: !5807, file: !3, line: 544, type: !3888)
!5819 = !DILocation(line: 544, column: 44, scope: !5807)
!5820 = !DILocalVariable(name: "ke", arg: 2, scope: !5807, file: !3, line: 545, type: !3930)
!5821 = !DILocation(line: 545, column: 32, scope: !5807)
!5822 = !DILocalVariable(name: "rdev", scope: !5807, file: !3, line: 547, type: !237)
!5823 = !DILocation(line: 547, column: 17, scope: !5807)
!5824 = !DILocation(line: 547, column: 42, scope: !5807)
!5825 = !DILocation(line: 547, column: 24, scope: !5807)
!5826 = !DILocalVariable(name: "rc_map", scope: !5807, file: !3, line: 548, type: !4372)
!5827 = !DILocation(line: 548, column: 17, scope: !5807)
!5828 = !DILocation(line: 548, column: 27, scope: !5807)
!5829 = !DILocation(line: 548, column: 33, scope: !5807)
!5830 = !DILocalVariable(name: "entry", scope: !5807, file: !3, line: 549, type: !180)
!5831 = !DILocation(line: 549, column: 23, scope: !5807)
!5832 = !DILocalVariable(name: "flags", scope: !5807, file: !3, line: 550, type: !214)
!5833 = !DILocation(line: 550, column: 16, scope: !5807)
!5834 = !DILocalVariable(name: "index", scope: !5807, file: !3, line: 551, type: !7)
!5835 = !DILocation(line: 551, column: 15, scope: !5807)
!5836 = !DILocalVariable(name: "scancode", scope: !5807, file: !3, line: 552, type: !184)
!5837 = !DILocation(line: 552, column: 6, scope: !5807)
!5838 = !DILocalVariable(name: "retval", scope: !5807, file: !3, line: 553, type: !159)
!5839 = !DILocation(line: 553, column: 6, scope: !5807)
!5840 = !DILocation(line: 555, column: 2, scope: !5807)
!5841 = !DILocation(line: 555, column: 2, scope: !5817)
!5842 = !DILocalVariable(name: "__dummy", scope: !5843, file: !3, line: 555, type: !214)
!5843 = distinct !DILexicalBlock(scope: !5816, file: !3, line: 555, column: 2)
!5844 = !DILocation(line: 555, column: 2, scope: !5843)
!5845 = !DILocalVariable(name: "__dummy2", scope: !5843, file: !3, line: 555, type: !214)
!5846 = !DILocation(line: 555, column: 2, scope: !5816)
!5847 = !DILocation(line: 555, column: 2, scope: !5815)
!5848 = !DILocation(line: 555, column: 2, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 555, column: 2)
!5850 = !DILocalVariable(name: "__dummy", scope: !5851, file: !3, line: 555, type: !214)
!5851 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 555, column: 2)
!5852 = distinct !DILexicalBlock(scope: !5849, file: !3, line: 555, column: 2)
!5853 = !DILocation(line: 555, column: 2, scope: !5851)
!5854 = !DILocalVariable(name: "__dummy2", scope: !5851, file: !3, line: 555, type: !214)
!5855 = !DILocation(line: 555, column: 2, scope: !5852)
!5856 = !DILocation(line: 555, column: 2, scope: !5814)
!5857 = !{i32 -2141674783}
!5858 = !DILocation(line: 555, column: 2, scope: !5813)
!5859 = !DILocation(line: 329, column: 10, scope: !4530, inlinedAt: !5812)
!5860 = !DILocation(line: 329, column: 16, scope: !4530, inlinedAt: !5812)
!5861 = !DILocation(line: 557, column: 6, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 557, column: 6)
!5863 = !DILocation(line: 557, column: 10, scope: !5862)
!5864 = !DILocation(line: 557, column: 16, scope: !5862)
!5865 = !DILocation(line: 557, column: 6, scope: !5807)
!5866 = !DILocation(line: 558, column: 11, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 557, column: 41)
!5868 = !DILocation(line: 558, column: 15, scope: !5867)
!5869 = !DILocation(line: 558, column: 9, scope: !5867)
!5870 = !DILocation(line: 559, column: 2, scope: !5867)
!5871 = !DILocation(line: 560, column: 28, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 559, column: 9)
!5873 = !DILocation(line: 560, column: 12, scope: !5872)
!5874 = !DILocation(line: 560, column: 10, scope: !5872)
!5875 = !DILocation(line: 561, column: 7, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 561, column: 7)
!5877 = !DILocation(line: 561, column: 7, scope: !5872)
!5878 = !DILocation(line: 562, column: 4, scope: !5876)
!5879 = !DILocation(line: 564, column: 33, scope: !5872)
!5880 = !DILocation(line: 564, column: 41, scope: !5872)
!5881 = !DILocation(line: 564, column: 11, scope: !5872)
!5882 = !DILocation(line: 564, column: 9, scope: !5872)
!5883 = !DILocation(line: 567, column: 6, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 567, column: 6)
!5885 = !DILocation(line: 567, column: 14, scope: !5884)
!5886 = !DILocation(line: 567, column: 22, scope: !5884)
!5887 = !DILocation(line: 567, column: 12, scope: !5884)
!5888 = !DILocation(line: 567, column: 6, scope: !5807)
!5889 = !DILocation(line: 568, column: 12, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 567, column: 27)
!5891 = !DILocation(line: 568, column: 20, scope: !5890)
!5892 = !DILocation(line: 568, column: 25, scope: !5890)
!5893 = !DILocation(line: 568, column: 9, scope: !5890)
!5894 = !DILocation(line: 570, column: 15, scope: !5890)
!5895 = !DILocation(line: 570, column: 3, scope: !5890)
!5896 = !DILocation(line: 570, column: 7, scope: !5890)
!5897 = !DILocation(line: 570, column: 13, scope: !5890)
!5898 = !DILocation(line: 571, column: 17, scope: !5890)
!5899 = !DILocation(line: 571, column: 24, scope: !5890)
!5900 = !DILocation(line: 571, column: 3, scope: !5890)
!5901 = !DILocation(line: 571, column: 7, scope: !5890)
!5902 = !DILocation(line: 571, column: 15, scope: !5890)
!5903 = !DILocation(line: 572, column: 3, scope: !5890)
!5904 = !DILocation(line: 572, column: 7, scope: !5890)
!5905 = !DILocation(line: 572, column: 11, scope: !5890)
!5906 = !DILocation(line: 573, column: 10, scope: !5890)
!5907 = !DILocation(line: 573, column: 14, scope: !5890)
!5908 = !DILocation(line: 573, column: 3, scope: !5890)
!5909 = !DILocation(line: 573, column: 25, scope: !5890)
!5910 = !DILocation(line: 573, column: 32, scope: !5890)
!5911 = !DILocation(line: 574, column: 2, scope: !5890)
!5912 = !DILocation(line: 574, column: 15, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5884, file: !3, line: 574, column: 13)
!5914 = !DILocation(line: 574, column: 19, scope: !5913)
!5915 = !DILocation(line: 574, column: 25, scope: !5913)
!5916 = !DILocation(line: 574, column: 13, scope: !5884)
!5917 = !DILocation(line: 580, column: 15, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 574, column: 51)
!5919 = !DILocation(line: 580, column: 3, scope: !5918)
!5920 = !DILocation(line: 580, column: 7, scope: !5918)
!5921 = !DILocation(line: 580, column: 13, scope: !5918)
!5922 = !DILocation(line: 581, column: 3, scope: !5918)
!5923 = !DILocation(line: 581, column: 7, scope: !5918)
!5924 = !DILocation(line: 581, column: 15, scope: !5918)
!5925 = !DILocation(line: 582, column: 2, scope: !5918)
!5926 = !DILocation(line: 583, column: 10, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 582, column: 9)
!5928 = !DILocation(line: 584, column: 3, scope: !5927)
!5929 = !DILocation(line: 587, column: 9, scope: !5807)
!5930 = !DILocation(line: 587, column: 2, scope: !5807)
!5931 = !DILabel(scope: !5807, name: "out", file: !3, line: 589)
!5932 = !DILocation(line: 589, column: 1, scope: !5807)
!5933 = !DILocation(line: 590, column: 26, scope: !5807)
!5934 = !DILocation(line: 590, column: 34, scope: !5807)
!5935 = !DILocation(line: 590, column: 40, scope: !5807)
!5936 = !DILocation(line: 409, column: 2, scope: !4593, inlinedAt: !5809)
!5937 = !DILocation(line: 409, column: 2, scope: !4598, inlinedAt: !5809)
!5938 = !DILocation(line: 409, column: 2, scope: !4599, inlinedAt: !5809)
!5939 = !DILocation(line: 409, column: 2, scope: !4606, inlinedAt: !5809)
!5940 = !DILocation(line: 409, column: 2, scope: !4609, inlinedAt: !5809)
!5941 = !DILocation(line: 591, column: 9, scope: !5807)
!5942 = !DILocation(line: 591, column: 2, scope: !5807)
!5943 = distinct !DISubprogram(name: "ir_setkeycode", scope: !3, file: !3, line: 424, type: !3914, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!5944 = !DILocation(line: 407, column: 64, scope: !4522, inlinedAt: !5945)
!5945 = distinct !DILocation(line: 458, column: 2, scope: !5943)
!5946 = !DILocation(line: 407, column: 84, scope: !4522, inlinedAt: !5945)
!5947 = !DILocation(line: 327, column: 67, scope: !4530, inlinedAt: !5948)
!5948 = distinct !DILocation(line: 435, column: 2, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 435, column: 2)
!5950 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 435, column: 2)
!5951 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 435, column: 2)
!5952 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 435, column: 2)
!5953 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 435, column: 2)
!5954 = !DILocalVariable(name: "idev", arg: 1, scope: !5943, file: !3, line: 424, type: !3888)
!5955 = !DILocation(line: 424, column: 44, scope: !5943)
!5956 = !DILocalVariable(name: "ke", arg: 2, scope: !5943, file: !3, line: 425, type: !3916)
!5957 = !DILocation(line: 425, column: 38, scope: !5943)
!5958 = !DILocalVariable(name: "old_keycode", arg: 3, scope: !5943, file: !3, line: 426, type: !2670)
!5959 = !DILocation(line: 426, column: 19, scope: !5943)
!5960 = !DILocalVariable(name: "rdev", scope: !5943, file: !3, line: 428, type: !237)
!5961 = !DILocation(line: 428, column: 17, scope: !5943)
!5962 = !DILocation(line: 428, column: 42, scope: !5943)
!5963 = !DILocation(line: 428, column: 24, scope: !5943)
!5964 = !DILocalVariable(name: "rc_map", scope: !5943, file: !3, line: 429, type: !4372)
!5965 = !DILocation(line: 429, column: 17, scope: !5943)
!5966 = !DILocation(line: 429, column: 27, scope: !5943)
!5967 = !DILocation(line: 429, column: 33, scope: !5943)
!5968 = !DILocalVariable(name: "index", scope: !5943, file: !3, line: 430, type: !7)
!5969 = !DILocation(line: 430, column: 15, scope: !5943)
!5970 = !DILocalVariable(name: "scancode", scope: !5943, file: !3, line: 431, type: !184)
!5971 = !DILocation(line: 431, column: 6, scope: !5943)
!5972 = !DILocalVariable(name: "retval", scope: !5943, file: !3, line: 432, type: !159)
!5973 = !DILocation(line: 432, column: 6, scope: !5943)
!5974 = !DILocalVariable(name: "flags", scope: !5943, file: !3, line: 433, type: !214)
!5975 = !DILocation(line: 433, column: 16, scope: !5943)
!5976 = !DILocation(line: 435, column: 2, scope: !5943)
!5977 = !DILocation(line: 435, column: 2, scope: !5953)
!5978 = !DILocalVariable(name: "__dummy", scope: !5979, file: !3, line: 435, type: !214)
!5979 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 435, column: 2)
!5980 = !DILocation(line: 435, column: 2, scope: !5979)
!5981 = !DILocalVariable(name: "__dummy2", scope: !5979, file: !3, line: 435, type: !214)
!5982 = !DILocation(line: 435, column: 2, scope: !5952)
!5983 = !DILocation(line: 435, column: 2, scope: !5951)
!5984 = !DILocation(line: 435, column: 2, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 435, column: 2)
!5986 = !DILocalVariable(name: "__dummy", scope: !5987, file: !3, line: 435, type: !214)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 435, column: 2)
!5988 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 435, column: 2)
!5989 = !DILocation(line: 435, column: 2, scope: !5987)
!5990 = !DILocalVariable(name: "__dummy2", scope: !5987, file: !3, line: 435, type: !214)
!5991 = !DILocation(line: 435, column: 2, scope: !5988)
!5992 = !DILocation(line: 435, column: 2, scope: !5950)
!5993 = !{i32 -2141675834}
!5994 = !DILocation(line: 435, column: 2, scope: !5949)
!5995 = !DILocation(line: 329, column: 10, scope: !4530, inlinedAt: !5948)
!5996 = !DILocation(line: 329, column: 16, scope: !4530, inlinedAt: !5948)
!5997 = !DILocation(line: 437, column: 6, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 437, column: 6)
!5999 = !DILocation(line: 437, column: 10, scope: !5998)
!6000 = !DILocation(line: 437, column: 16, scope: !5998)
!6001 = !DILocation(line: 437, column: 6, scope: !5943)
!6002 = !DILocation(line: 438, column: 11, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 437, column: 41)
!6004 = !DILocation(line: 438, column: 15, scope: !6003)
!6005 = !DILocation(line: 438, column: 9, scope: !6003)
!6006 = !DILocation(line: 439, column: 7, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6003, file: !3, line: 439, column: 7)
!6008 = !DILocation(line: 439, column: 16, scope: !6007)
!6009 = !DILocation(line: 439, column: 24, scope: !6007)
!6010 = !DILocation(line: 439, column: 13, scope: !6007)
!6011 = !DILocation(line: 439, column: 7, scope: !6003)
!6012 = !DILocation(line: 440, column: 11, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 439, column: 29)
!6014 = !DILocation(line: 441, column: 4, scope: !6013)
!6015 = !DILocation(line: 443, column: 2, scope: !6003)
!6016 = !DILocation(line: 444, column: 28, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 443, column: 9)
!6018 = !DILocation(line: 444, column: 12, scope: !6017)
!6019 = !DILocation(line: 444, column: 10, scope: !6017)
!6020 = !DILocation(line: 445, column: 7, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 445, column: 7)
!6022 = !DILocation(line: 445, column: 7, scope: !6017)
!6023 = !DILocation(line: 446, column: 4, scope: !6021)
!6024 = !DILocation(line: 448, column: 33, scope: !6017)
!6025 = !DILocation(line: 448, column: 39, scope: !6017)
!6026 = !DILocation(line: 448, column: 47, scope: !6017)
!6027 = !DILocation(line: 448, column: 11, scope: !6017)
!6028 = !DILocation(line: 448, column: 9, scope: !6017)
!6029 = !DILocation(line: 449, column: 7, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 449, column: 7)
!6031 = !DILocation(line: 449, column: 16, scope: !6030)
!6032 = !DILocation(line: 449, column: 24, scope: !6030)
!6033 = !DILocation(line: 449, column: 13, scope: !6030)
!6034 = !DILocation(line: 449, column: 7, scope: !6017)
!6035 = !DILocation(line: 450, column: 11, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6030, file: !3, line: 449, column: 29)
!6037 = !DILocation(line: 451, column: 4, scope: !6036)
!6038 = !DILocation(line: 455, column: 35, scope: !5943)
!6039 = !DILocation(line: 455, column: 41, scope: !5943)
!6040 = !DILocation(line: 455, column: 49, scope: !5943)
!6041 = !DILocation(line: 455, column: 56, scope: !5943)
!6042 = !DILocation(line: 455, column: 60, scope: !5943)
!6043 = !DILocation(line: 455, column: 17, scope: !5943)
!6044 = !DILocation(line: 455, column: 3, scope: !5943)
!6045 = !DILocation(line: 455, column: 15, scope: !5943)
!6046 = !DILocation(line: 455, column: 2, scope: !5943)
!6047 = !DILabel(scope: !5943, name: "out", file: !3, line: 457)
!6048 = !DILocation(line: 457, column: 1, scope: !5943)
!6049 = !DILocation(line: 458, column: 26, scope: !5943)
!6050 = !DILocation(line: 458, column: 34, scope: !5943)
!6051 = !DILocation(line: 458, column: 40, scope: !5943)
!6052 = !DILocation(line: 409, column: 2, scope: !4593, inlinedAt: !5945)
!6053 = !DILocation(line: 409, column: 2, scope: !4598, inlinedAt: !5945)
!6054 = !DILocation(line: 409, column: 2, scope: !4599, inlinedAt: !5945)
!6055 = !DILocation(line: 409, column: 2, scope: !4606, inlinedAt: !5945)
!6056 = !DILocation(line: 409, column: 2, scope: !4609, inlinedAt: !5945)
!6057 = !DILocation(line: 459, column: 9, scope: !5943)
!6058 = !DILocation(line: 459, column: 2, scope: !5943)
!6059 = distinct !DISubprogram(name: "input_set_drvdata", scope: !3890, file: !3890, line: 371, type: !6060, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6060 = !DISubroutineType(types: !6061)
!6061 = !{null, !3888, !165}
!6062 = !DILocalVariable(name: "dev", arg: 1, scope: !6059, file: !3890, line: 371, type: !3888)
!6063 = !DILocation(line: 371, column: 56, scope: !6059)
!6064 = !DILocalVariable(name: "data", arg: 2, scope: !6059, file: !3890, line: 371, type: !165)
!6065 = !DILocation(line: 371, column: 67, scope: !6059)
!6066 = !DILocation(line: 373, column: 19, scope: !6059)
!6067 = !DILocation(line: 373, column: 24, scope: !6059)
!6068 = !DILocation(line: 373, column: 29, scope: !6059)
!6069 = !DILocation(line: 373, column: 2, scope: !6059)
!6070 = !DILocation(line: 374, column: 1, scope: !6059)
!6071 = distinct !DISubprogram(name: "ir_timer_keyup", scope: !3, file: !3, line: 675, type: !3566, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6072 = !DILocation(line: 407, column: 64, scope: !4522, inlinedAt: !6073)
!6073 = distinct !DILocation(line: 693, column: 2, scope: !6071)
!6074 = !DILocation(line: 407, column: 84, scope: !4522, inlinedAt: !6073)
!6075 = !DILocation(line: 327, column: 67, scope: !4530, inlinedAt: !6076)
!6076 = distinct !DILocation(line: 690, column: 2, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6078, file: !3, line: 690, column: 2)
!6078 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 690, column: 2)
!6079 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 690, column: 2)
!6080 = distinct !DILexicalBlock(scope: !6081, file: !3, line: 690, column: 2)
!6081 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 690, column: 2)
!6082 = !DILocalVariable(name: "t", arg: 1, scope: !6071, file: !3, line: 675, type: !3568)
!6083 = !DILocation(line: 675, column: 47, scope: !6071)
!6084 = !DILocalVariable(name: "dev", scope: !6071, file: !3, line: 677, type: !237)
!6085 = !DILocation(line: 677, column: 17, scope: !6071)
!6086 = !DILocalVariable(name: "__mptr", scope: !6087, file: !3, line: 677, type: !165)
!6087 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 677, column: 23)
!6088 = !DILocation(line: 677, column: 23, scope: !6087)
!6089 = !DILocation(line: 677, column: 23, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6087, file: !3, line: 677, column: 23)
!6091 = !DILocalVariable(name: "flags", scope: !6071, file: !3, line: 678, type: !214)
!6092 = !DILocation(line: 678, column: 16, scope: !6071)
!6093 = !DILocation(line: 690, column: 2, scope: !6071)
!6094 = !DILocation(line: 690, column: 2, scope: !6081)
!6095 = !DILocalVariable(name: "__dummy", scope: !6096, file: !3, line: 690, type: !214)
!6096 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 690, column: 2)
!6097 = !DILocation(line: 690, column: 2, scope: !6096)
!6098 = !DILocalVariable(name: "__dummy2", scope: !6096, file: !3, line: 690, type: !214)
!6099 = !DILocation(line: 690, column: 2, scope: !6080)
!6100 = !DILocation(line: 690, column: 2, scope: !6079)
!6101 = !DILocation(line: 690, column: 2, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6079, file: !3, line: 690, column: 2)
!6103 = !DILocalVariable(name: "__dummy", scope: !6104, file: !3, line: 690, type: !214)
!6104 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 690, column: 2)
!6105 = distinct !DILexicalBlock(scope: !6102, file: !3, line: 690, column: 2)
!6106 = !DILocation(line: 690, column: 2, scope: !6104)
!6107 = !DILocalVariable(name: "__dummy2", scope: !6104, file: !3, line: 690, type: !214)
!6108 = !DILocation(line: 690, column: 2, scope: !6105)
!6109 = !DILocation(line: 690, column: 2, scope: !6078)
!6110 = !{i32 -2141669498}
!6111 = !DILocation(line: 690, column: 2, scope: !6077)
!6112 = !DILocation(line: 329, column: 10, scope: !4530, inlinedAt: !6076)
!6113 = !DILocation(line: 329, column: 16, scope: !4530, inlinedAt: !6076)
!6114 = !DILocation(line: 691, column: 6, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !6071, file: !3, line: 691, column: 6)
!6116 = !DILocation(line: 691, column: 6, scope: !6071)
!6117 = !DILocation(line: 692, column: 15, scope: !6115)
!6118 = !DILocation(line: 692, column: 3, scope: !6115)
!6119 = !DILocation(line: 693, column: 26, scope: !6071)
!6120 = !DILocation(line: 693, column: 31, scope: !6071)
!6121 = !DILocation(line: 693, column: 40, scope: !6071)
!6122 = !DILocation(line: 409, column: 2, scope: !4593, inlinedAt: !6073)
!6123 = !DILocation(line: 409, column: 2, scope: !4598, inlinedAt: !6073)
!6124 = !DILocation(line: 409, column: 2, scope: !4599, inlinedAt: !6073)
!6125 = !DILocation(line: 409, column: 2, scope: !4606, inlinedAt: !6073)
!6126 = !DILocation(line: 409, column: 2, scope: !4609, inlinedAt: !6073)
!6127 = !DILocation(line: 694, column: 1, scope: !6071)
!6128 = distinct !DISubprogram(name: "ir_timer_repeat", scope: !3, file: !3, line: 704, type: !3566, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6129 = !DILocation(line: 363, column: 74, scope: !4745, inlinedAt: !6130)
!6130 = distinct !DILocation(line: 716, column: 7, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 714, column: 7)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 711, column: 23)
!6133 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 711, column: 6)
!6134 = !DILocation(line: 407, column: 64, scope: !4522, inlinedAt: !6135)
!6135 = distinct !DILocation(line: 718, column: 2, scope: !6128)
!6136 = !DILocation(line: 407, column: 84, scope: !4522, inlinedAt: !6135)
!6137 = !DILocation(line: 327, column: 67, scope: !4530, inlinedAt: !6138)
!6138 = distinct !DILocation(line: 710, column: 2, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 710, column: 2)
!6140 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 710, column: 2)
!6141 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 710, column: 2)
!6142 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 710, column: 2)
!6143 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 710, column: 2)
!6144 = !DILocalVariable(name: "t", arg: 1, scope: !6128, file: !3, line: 704, type: !3568)
!6145 = !DILocation(line: 704, column: 48, scope: !6128)
!6146 = !DILocalVariable(name: "dev", scope: !6128, file: !3, line: 706, type: !237)
!6147 = !DILocation(line: 706, column: 17, scope: !6128)
!6148 = !DILocalVariable(name: "__mptr", scope: !6149, file: !3, line: 706, type: !165)
!6149 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 706, column: 23)
!6150 = !DILocation(line: 706, column: 23, scope: !6149)
!6151 = !DILocation(line: 706, column: 23, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 706, column: 23)
!6153 = !DILocalVariable(name: "input", scope: !6128, file: !3, line: 707, type: !3888)
!6154 = !DILocation(line: 707, column: 20, scope: !6128)
!6155 = !DILocation(line: 707, column: 28, scope: !6128)
!6156 = !DILocation(line: 707, column: 33, scope: !6128)
!6157 = !DILocalVariable(name: "flags", scope: !6128, file: !3, line: 708, type: !214)
!6158 = !DILocation(line: 708, column: 16, scope: !6128)
!6159 = !DILocation(line: 710, column: 2, scope: !6128)
!6160 = !DILocation(line: 710, column: 2, scope: !6143)
!6161 = !DILocalVariable(name: "__dummy", scope: !6162, file: !3, line: 710, type: !214)
!6162 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 710, column: 2)
!6163 = !DILocation(line: 710, column: 2, scope: !6162)
!6164 = !DILocalVariable(name: "__dummy2", scope: !6162, file: !3, line: 710, type: !214)
!6165 = !DILocation(line: 710, column: 2, scope: !6142)
!6166 = !DILocation(line: 710, column: 2, scope: !6141)
!6167 = !DILocation(line: 710, column: 2, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 710, column: 2)
!6169 = !DILocalVariable(name: "__dummy", scope: !6170, file: !3, line: 710, type: !214)
!6170 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 710, column: 2)
!6171 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 710, column: 2)
!6172 = !DILocation(line: 710, column: 2, scope: !6170)
!6173 = !DILocalVariable(name: "__dummy2", scope: !6170, file: !3, line: 710, type: !214)
!6174 = !DILocation(line: 710, column: 2, scope: !6171)
!6175 = !DILocation(line: 710, column: 2, scope: !6140)
!6176 = !{i32 -2141666508}
!6177 = !DILocation(line: 710, column: 2, scope: !6139)
!6178 = !DILocation(line: 329, column: 10, scope: !4530, inlinedAt: !6138)
!6179 = !DILocation(line: 329, column: 16, scope: !4530, inlinedAt: !6138)
!6180 = !DILocation(line: 711, column: 6, scope: !6133)
!6181 = !DILocation(line: 711, column: 11, scope: !6133)
!6182 = !DILocation(line: 711, column: 6, scope: !6128)
!6183 = !DILocation(line: 712, column: 15, scope: !6132)
!6184 = !DILocation(line: 712, column: 30, scope: !6132)
!6185 = !DILocation(line: 712, column: 35, scope: !6132)
!6186 = !DILocation(line: 712, column: 3, scope: !6132)
!6187 = !DILocation(line: 713, column: 14, scope: !6132)
!6188 = !DILocation(line: 713, column: 3, scope: !6132)
!6189 = !DILocation(line: 714, column: 7, scope: !6131)
!6190 = !DILocation(line: 714, column: 14, scope: !6131)
!6191 = !DILocation(line: 714, column: 7, scope: !6132)
!6192 = !DILocation(line: 715, column: 15, scope: !6131)
!6193 = !DILocation(line: 715, column: 20, scope: !6131)
!6194 = !DILocation(line: 715, column: 34, scope: !6131)
!6195 = !DILocation(line: 716, column: 24, scope: !6131)
!6196 = !DILocation(line: 716, column: 31, scope: !6131)
!6197 = !DILocation(line: 365, column: 27, scope: !4764, inlinedAt: !6130)
!6198 = !DILocation(line: 365, column: 6, scope: !4764, inlinedAt: !6130)
!6199 = !DILocation(line: 365, column: 6, scope: !4745, inlinedAt: !6130)
!6200 = !DILocation(line: 366, column: 12, scope: !4768, inlinedAt: !6130)
!6201 = !DILocation(line: 366, column: 14, scope: !4768, inlinedAt: !6130)
!6202 = !DILocation(line: 366, column: 7, scope: !4769, inlinedAt: !6130)
!6203 = !DILocation(line: 367, column: 4, scope: !4768, inlinedAt: !6130)
!6204 = !DILocation(line: 368, column: 28, scope: !4769, inlinedAt: !6130)
!6205 = !DILocation(line: 368, column: 10, scope: !4769, inlinedAt: !6130)
!6206 = !DILocation(line: 368, column: 3, scope: !4769, inlinedAt: !6130)
!6207 = !DILocation(line: 370, column: 29, scope: !4777, inlinedAt: !6130)
!6208 = !DILocation(line: 370, column: 10, scope: !4777, inlinedAt: !6130)
!6209 = !DILocation(line: 370, column: 3, scope: !4777, inlinedAt: !6130)
!6210 = !DILocation(line: 372, column: 1, scope: !4745, inlinedAt: !6130)
!6211 = !DILocation(line: 715, column: 42, scope: !6131)
!6212 = !DILocation(line: 715, column: 4, scope: !6131)
!6213 = !DILocation(line: 717, column: 2, scope: !6132)
!6214 = !DILocation(line: 718, column: 26, scope: !6128)
!6215 = !DILocation(line: 718, column: 31, scope: !6128)
!6216 = !DILocation(line: 718, column: 40, scope: !6128)
!6217 = !DILocation(line: 409, column: 2, scope: !4593, inlinedAt: !6135)
!6218 = !DILocation(line: 409, column: 2, scope: !4598, inlinedAt: !6135)
!6219 = !DILocation(line: 409, column: 2, scope: !4599, inlinedAt: !6135)
!6220 = !DILocation(line: 409, column: 2, scope: !4606, inlinedAt: !6135)
!6221 = !DILocation(line: 409, column: 2, scope: !4609, inlinedAt: !6135)
!6222 = !DILocation(line: 719, column: 1, scope: !6128)
!6223 = distinct !DISubprogram(name: "__module_get", scope: !6224, file: !6224, line: 747, type: !6225, scopeLine: 748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6224 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!6225 = !DISubroutineType(types: !6226)
!6226 = !{null, !162}
!6227 = !DILocalVariable(name: "module", arg: 1, scope: !6223, file: !6224, line: 747, type: !162)
!6228 = !DILocation(line: 747, column: 48, scope: !6223)
!6229 = !DILocation(line: 749, column: 1, scope: !6223)
!6230 = distinct !DISubprogram(name: "rc_free_device", scope: !3, file: !3, line: 1738, type: !4197, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6231 = !DILocalVariable(name: "dev", arg: 1, scope: !6230, file: !3, line: 1738, type: !237)
!6232 = !DILocation(line: 1738, column: 36, scope: !6230)
!6233 = !DILocation(line: 1740, column: 7, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 1740, column: 6)
!6235 = !DILocation(line: 1740, column: 6, scope: !6230)
!6236 = !DILocation(line: 1741, column: 3, scope: !6234)
!6237 = !DILocation(line: 1743, column: 20, scope: !6230)
!6238 = !DILocation(line: 1743, column: 25, scope: !6230)
!6239 = !DILocation(line: 1743, column: 2, scope: !6230)
!6240 = !DILocation(line: 1745, column: 14, scope: !6230)
!6241 = !DILocation(line: 1745, column: 19, scope: !6230)
!6242 = !DILocation(line: 1745, column: 2, scope: !6230)
!6243 = !DILocation(line: 1750, column: 2, scope: !6230)
!6244 = !DILocation(line: 1751, column: 1, scope: !6230)
!6245 = distinct !DISubprogram(name: "module_put", scope: !6224, file: !6224, line: 756, type: !6225, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6246 = !DILocalVariable(name: "module", arg: 1, scope: !6245, file: !6224, line: 756, type: !162)
!6247 = !DILocation(line: 756, column: 46, scope: !6245)
!6248 = !DILocation(line: 758, column: 1, scope: !6245)
!6249 = distinct !DISubprogram(name: "devm_rc_allocate_device", scope: !3, file: !3, line: 1759, type: !6250, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6250 = !DISubroutineType(types: !6251)
!6251 = !{!237, !3368, !124}
!6252 = !DILocalVariable(name: "dev", arg: 1, scope: !6249, file: !3, line: 1759, type: !3368)
!6253 = !DILocation(line: 1759, column: 55, scope: !6249)
!6254 = !DILocalVariable(name: "type", arg: 2, scope: !6249, file: !3, line: 1760, type: !124)
!6255 = !DILocation(line: 1760, column: 32, scope: !6249)
!6256 = !DILocalVariable(name: "dr", scope: !6249, file: !3, line: 1762, type: !4232)
!6257 = !DILocation(line: 1762, column: 18, scope: !6249)
!6258 = !DILocalVariable(name: "rc", scope: !6249, file: !3, line: 1762, type: !237)
!6259 = !DILocation(line: 1762, column: 23, scope: !6249)
!6260 = !DILocation(line: 1764, column: 7, scope: !6249)
!6261 = !DILocation(line: 1764, column: 5, scope: !6249)
!6262 = !DILocation(line: 1765, column: 7, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 1765, column: 6)
!6264 = !DILocation(line: 1765, column: 6, scope: !6249)
!6265 = !DILocation(line: 1766, column: 3, scope: !6263)
!6266 = !DILocation(line: 1768, column: 26, scope: !6249)
!6267 = !DILocation(line: 1768, column: 7, scope: !6249)
!6268 = !DILocation(line: 1768, column: 5, scope: !6249)
!6269 = !DILocation(line: 1769, column: 7, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6249, file: !3, line: 1769, column: 6)
!6271 = !DILocation(line: 1769, column: 6, scope: !6249)
!6272 = !DILocation(line: 1770, column: 15, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 1769, column: 11)
!6274 = !DILocation(line: 1770, column: 3, scope: !6273)
!6275 = !DILocation(line: 1771, column: 3, scope: !6273)
!6276 = !DILocation(line: 1774, column: 19, scope: !6249)
!6277 = !DILocation(line: 1774, column: 2, scope: !6249)
!6278 = !DILocation(line: 1774, column: 6, scope: !6249)
!6279 = !DILocation(line: 1774, column: 10, scope: !6249)
!6280 = !DILocation(line: 1774, column: 17, scope: !6249)
!6281 = !DILocation(line: 1775, column: 2, scope: !6249)
!6282 = !DILocation(line: 1775, column: 6, scope: !6249)
!6283 = !DILocation(line: 1775, column: 20, scope: !6249)
!6284 = !DILocation(line: 1776, column: 8, scope: !6249)
!6285 = !DILocation(line: 1776, column: 3, scope: !6249)
!6286 = !DILocation(line: 1776, column: 6, scope: !6249)
!6287 = !DILocation(line: 1777, column: 13, scope: !6249)
!6288 = !DILocation(line: 1777, column: 18, scope: !6249)
!6289 = !DILocation(line: 1777, column: 2, scope: !6249)
!6290 = !DILocation(line: 1779, column: 9, scope: !6249)
!6291 = !DILocation(line: 1779, column: 2, scope: !6249)
!6292 = !DILocation(line: 1780, column: 1, scope: !6249)
!6293 = distinct !DISubprogram(name: "devres_alloc", scope: !104, file: !104, line: 178, type: !6294, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6294 = !DISubroutineType(types: !6295)
!6295 = !{!165, !6296, !328, !160}
!6296 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_release_t", file: !104, line: 165, baseType: !6297)
!6297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6298, size: 64)
!6298 = !DISubroutineType(types: !6299)
!6299 = !{null, !3368, !165}
!6300 = !DILocalVariable(name: "release", arg: 1, scope: !6293, file: !104, line: 178, type: !6296)
!6301 = !DILocation(line: 178, column: 47, scope: !6293)
!6302 = !DILocalVariable(name: "size", arg: 2, scope: !6293, file: !104, line: 178, type: !328)
!6303 = !DILocation(line: 178, column: 63, scope: !6293)
!6304 = !DILocalVariable(name: "gfp", arg: 3, scope: !6293, file: !104, line: 178, type: !160)
!6305 = !DILocation(line: 178, column: 75, scope: !6293)
!6306 = !DILocation(line: 180, column: 27, scope: !6293)
!6307 = !DILocation(line: 180, column: 36, scope: !6293)
!6308 = !DILocation(line: 180, column: 42, scope: !6293)
!6309 = !DILocation(line: 180, column: 9, scope: !6293)
!6310 = !DILocation(line: 180, column: 2, scope: !6293)
!6311 = distinct !DISubprogram(name: "devm_rc_alloc_release", scope: !3, file: !3, line: 1754, type: !6298, scopeLine: 1755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6312 = !DILocalVariable(name: "dev", arg: 1, scope: !6311, file: !3, line: 1754, type: !3368)
!6313 = !DILocation(line: 1754, column: 50, scope: !6311)
!6314 = !DILocalVariable(name: "res", arg: 2, scope: !6311, file: !3, line: 1754, type: !165)
!6315 = !DILocation(line: 1754, column: 61, scope: !6311)
!6316 = !DILocation(line: 1756, column: 36, scope: !6311)
!6317 = !DILocation(line: 1756, column: 18, scope: !6311)
!6318 = !DILocation(line: 1756, column: 17, scope: !6311)
!6319 = !DILocation(line: 1756, column: 2, scope: !6311)
!6320 = !DILocation(line: 1757, column: 1, scope: !6311)
!6321 = distinct !DISubprogram(name: "rc_register_device", scope: !3, file: !3, line: 1890, type: !4193, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6322 = !DILocalVariable(name: "dev", arg: 1, scope: !6321, file: !3, line: 1890, type: !237)
!6323 = !DILocation(line: 1890, column: 39, scope: !6321)
!6324 = !DILocalVariable(name: "path", scope: !6321, file: !3, line: 1892, type: !193)
!6325 = !DILocation(line: 1892, column: 14, scope: !6321)
!6326 = !DILocalVariable(name: "attr", scope: !6321, file: !3, line: 1893, type: !159)
!6327 = !DILocation(line: 1893, column: 6, scope: !6321)
!6328 = !DILocalVariable(name: "minor", scope: !6321, file: !3, line: 1894, type: !159)
!6329 = !DILocation(line: 1894, column: 6, scope: !6321)
!6330 = !DILocalVariable(name: "rc", scope: !6321, file: !3, line: 1895, type: !159)
!6331 = !DILocation(line: 1895, column: 6, scope: !6321)
!6332 = !DILocation(line: 1897, column: 7, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1897, column: 6)
!6334 = !DILocation(line: 1897, column: 6, scope: !6321)
!6335 = !DILocation(line: 1898, column: 3, scope: !6333)
!6336 = !DILocation(line: 1900, column: 10, scope: !6321)
!6337 = !DILocation(line: 1900, column: 8, scope: !6321)
!6338 = !DILocation(line: 1901, column: 6, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1901, column: 6)
!6340 = !DILocation(line: 1901, column: 12, scope: !6339)
!6341 = !DILocation(line: 1901, column: 6, scope: !6321)
!6342 = !DILocation(line: 1902, column: 10, scope: !6339)
!6343 = !DILocation(line: 1902, column: 3, scope: !6339)
!6344 = !DILocation(line: 1904, column: 15, scope: !6321)
!6345 = !DILocation(line: 1904, column: 2, scope: !6321)
!6346 = !DILocation(line: 1904, column: 7, scope: !6321)
!6347 = !DILocation(line: 1904, column: 13, scope: !6321)
!6348 = !DILocation(line: 1905, column: 16, scope: !6321)
!6349 = !DILocation(line: 1905, column: 21, scope: !6321)
!6350 = !DILocation(line: 1905, column: 34, scope: !6321)
!6351 = !DILocation(line: 1905, column: 39, scope: !6321)
!6352 = !DILocation(line: 1905, column: 2, scope: !6321)
!6353 = !DILocation(line: 1906, column: 19, scope: !6321)
!6354 = !DILocation(line: 1906, column: 24, scope: !6321)
!6355 = !DILocation(line: 1906, column: 29, scope: !6321)
!6356 = !DILocation(line: 1906, column: 2, scope: !6321)
!6357 = !DILocation(line: 1908, column: 20, scope: !6321)
!6358 = !DILocation(line: 1908, column: 25, scope: !6321)
!6359 = !DILocation(line: 1908, column: 2, scope: !6321)
!6360 = !DILocation(line: 1908, column: 7, scope: !6321)
!6361 = !DILocation(line: 1908, column: 11, scope: !6321)
!6362 = !DILocation(line: 1908, column: 18, scope: !6321)
!6363 = !DILocation(line: 1909, column: 6, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1909, column: 6)
!6365 = !DILocation(line: 1909, column: 11, scope: !6364)
!6366 = !DILocation(line: 1909, column: 23, scope: !6364)
!6367 = !DILocation(line: 1909, column: 45, scope: !6364)
!6368 = !DILocation(line: 1909, column: 49, scope: !6364)
!6369 = !DILocation(line: 1909, column: 54, scope: !6364)
!6370 = !DILocation(line: 1909, column: 6, scope: !6321)
!6371 = !DILocation(line: 1910, column: 3, scope: !6364)
!6372 = !DILocation(line: 1910, column: 8, scope: !6364)
!6373 = !DILocation(line: 1910, column: 25, scope: !6364)
!6374 = !DILocation(line: 1910, column: 29, scope: !6364)
!6375 = !DILocation(line: 1911, column: 11, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 1911, column: 11)
!6377 = !DILocation(line: 1911, column: 16, scope: !6376)
!6378 = !DILocation(line: 1911, column: 28, scope: !6376)
!6379 = !DILocation(line: 1911, column: 11, scope: !6364)
!6380 = !DILocation(line: 1912, column: 3, scope: !6376)
!6381 = !DILocation(line: 1912, column: 8, scope: !6376)
!6382 = !DILocation(line: 1912, column: 25, scope: !6376)
!6383 = !DILocation(line: 1912, column: 29, scope: !6376)
!6384 = !DILocation(line: 1913, column: 6, scope: !6385)
!6385 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1913, column: 6)
!6386 = !DILocation(line: 1913, column: 11, scope: !6385)
!6387 = !DILocation(line: 1913, column: 6, scope: !6321)
!6388 = !DILocation(line: 1914, column: 3, scope: !6385)
!6389 = !DILocation(line: 1914, column: 8, scope: !6385)
!6390 = !DILocation(line: 1914, column: 25, scope: !6385)
!6391 = !DILocation(line: 1914, column: 29, scope: !6385)
!6392 = !DILocation(line: 1915, column: 6, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1915, column: 6)
!6394 = !DILocation(line: 1915, column: 11, scope: !6393)
!6395 = !DILocation(line: 1915, column: 6, scope: !6321)
!6396 = !DILocation(line: 1916, column: 3, scope: !6393)
!6397 = !DILocation(line: 1916, column: 8, scope: !6393)
!6398 = !DILocation(line: 1916, column: 25, scope: !6393)
!6399 = !DILocation(line: 1916, column: 29, scope: !6393)
!6400 = !DILocation(line: 1917, column: 2, scope: !6321)
!6401 = !DILocation(line: 1917, column: 7, scope: !6321)
!6402 = !DILocation(line: 1917, column: 24, scope: !6321)
!6403 = !DILocation(line: 1917, column: 28, scope: !6321)
!6404 = !DILocation(line: 1919, column: 6, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1919, column: 6)
!6406 = !DILocation(line: 1919, column: 11, scope: !6405)
!6407 = !DILocation(line: 1919, column: 23, scope: !6405)
!6408 = !DILocation(line: 1919, column: 6, scope: !6321)
!6409 = !DILocation(line: 1920, column: 29, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 1919, column: 44)
!6411 = !DILocation(line: 1920, column: 8, scope: !6410)
!6412 = !DILocation(line: 1920, column: 6, scope: !6410)
!6413 = !DILocation(line: 1921, column: 7, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1921, column: 7)
!6415 = !DILocation(line: 1921, column: 10, scope: !6414)
!6416 = !DILocation(line: 1921, column: 7, scope: !6410)
!6417 = !DILocation(line: 1922, column: 4, scope: !6414)
!6418 = !DILocation(line: 1923, column: 2, scope: !6410)
!6419 = !DILocation(line: 1925, column: 6, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1925, column: 6)
!6421 = !DILocation(line: 1925, column: 11, scope: !6420)
!6422 = !DILocation(line: 1925, column: 23, scope: !6420)
!6423 = !DILocation(line: 1925, column: 6, scope: !6321)
!6424 = !DILocation(line: 1926, column: 29, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6420, file: !3, line: 1925, column: 47)
!6426 = !DILocation(line: 1926, column: 8, scope: !6425)
!6427 = !DILocation(line: 1926, column: 6, scope: !6425)
!6428 = !DILocation(line: 1927, column: 7, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 1927, column: 7)
!6430 = !DILocation(line: 1927, column: 7, scope: !6425)
!6431 = !DILocation(line: 1928, column: 4, scope: !6429)
!6432 = !DILocation(line: 1929, column: 2, scope: !6425)
!6433 = !DILocation(line: 1931, column: 19, scope: !6321)
!6434 = !DILocation(line: 1931, column: 24, scope: !6321)
!6435 = !DILocation(line: 1931, column: 7, scope: !6321)
!6436 = !DILocation(line: 1931, column: 5, scope: !6321)
!6437 = !DILocation(line: 1932, column: 6, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1932, column: 6)
!6439 = !DILocation(line: 1932, column: 6, scope: !6321)
!6440 = !DILocation(line: 1933, column: 3, scope: !6438)
!6441 = !DILocation(line: 1935, column: 27, scope: !6321)
!6442 = !DILocation(line: 1935, column: 32, scope: !6321)
!6443 = !DILocation(line: 1935, column: 36, scope: !6321)
!6444 = !DILocation(line: 1935, column: 9, scope: !6321)
!6445 = !DILocation(line: 1935, column: 7, scope: !6321)
!6446 = !DILocation(line: 1936, column: 2, scope: !6321)
!6447 = !DILocation(line: 1938, column: 8, scope: !6321)
!6448 = !DILocation(line: 1938, column: 2, scope: !6321)
!6449 = !DILocation(line: 1940, column: 2, scope: !6321)
!6450 = !DILocation(line: 1940, column: 7, scope: !6321)
!6451 = !DILocation(line: 1940, column: 18, scope: !6321)
!6452 = !DILocation(line: 1948, column: 6, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1948, column: 6)
!6454 = !DILocation(line: 1948, column: 11, scope: !6453)
!6455 = !DILocation(line: 1948, column: 29, scope: !6453)
!6456 = !DILocation(line: 1948, column: 6, scope: !6321)
!6457 = !DILocation(line: 1949, column: 22, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 1948, column: 50)
!6459 = !DILocation(line: 1949, column: 8, scope: !6458)
!6460 = !DILocation(line: 1949, column: 6, scope: !6458)
!6461 = !DILocation(line: 1950, column: 7, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 1950, column: 7)
!6463 = !DILocation(line: 1950, column: 10, scope: !6462)
!6464 = !DILocation(line: 1950, column: 7, scope: !6458)
!6465 = !DILocation(line: 1951, column: 4, scope: !6462)
!6466 = !DILocation(line: 1952, column: 2, scope: !6458)
!6467 = !DILocation(line: 1954, column: 6, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1954, column: 6)
!6469 = !DILocation(line: 1954, column: 11, scope: !6468)
!6470 = !DILocation(line: 1954, column: 23, scope: !6468)
!6471 = !DILocation(line: 1954, column: 6, scope: !6321)
!6472 = !DILocation(line: 1955, column: 27, scope: !6473)
!6473 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 1954, column: 47)
!6474 = !DILocation(line: 1955, column: 8, scope: !6473)
!6475 = !DILocation(line: 1955, column: 6, scope: !6473)
!6476 = !DILocation(line: 1956, column: 7, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6473, file: !3, line: 1956, column: 7)
!6478 = !DILocation(line: 1956, column: 7, scope: !6473)
!6479 = !DILocation(line: 1957, column: 4, scope: !6477)
!6480 = !DILocation(line: 1958, column: 2, scope: !6473)
!6481 = !DILocation(line: 1960, column: 6, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1960, column: 6)
!6483 = !DILocation(line: 1960, column: 11, scope: !6482)
!6484 = !DILocation(line: 1960, column: 23, scope: !6482)
!6485 = !DILocation(line: 1960, column: 6, scope: !6321)
!6486 = !DILocation(line: 1961, column: 30, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6482, file: !3, line: 1960, column: 44)
!6488 = !DILocation(line: 1961, column: 8, scope: !6487)
!6489 = !DILocation(line: 1961, column: 6, scope: !6487)
!6490 = !DILocation(line: 1962, column: 7, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 1962, column: 7)
!6492 = !DILocation(line: 1962, column: 10, scope: !6491)
!6493 = !DILocation(line: 1962, column: 7, scope: !6487)
!6494 = !DILocation(line: 1963, column: 4, scope: !6491)
!6495 = !DILocation(line: 1964, column: 2, scope: !6487)
!6496 = !DILocation(line: 1969, column: 2, scope: !6321)
!6497 = !DILabel(scope: !6321, name: "out_rx", file: !3, line: 1971)
!6498 = !DILocation(line: 1971, column: 1, scope: !6321)
!6499 = !DILocation(line: 1972, column: 20, scope: !6321)
!6500 = !DILocation(line: 1972, column: 2, scope: !6321)
!6501 = !DILabel(scope: !6321, name: "out_lirc", file: !3, line: 1973)
!6502 = !DILocation(line: 1973, column: 1, scope: !6321)
!6503 = !DILocation(line: 1974, column: 6, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1974, column: 6)
!6505 = !DILocation(line: 1974, column: 11, scope: !6504)
!6506 = !DILocation(line: 1974, column: 29, scope: !6504)
!6507 = !DILocation(line: 1974, column: 6, scope: !6321)
!6508 = !DILocation(line: 1975, column: 19, scope: !6504)
!6509 = !DILocation(line: 1975, column: 3, scope: !6504)
!6510 = !DILocation(line: 1974, column: 32, scope: !6504)
!6511 = !DILabel(scope: !6321, name: "out_dev", file: !3, line: 1976)
!6512 = !DILocation(line: 1976, column: 1, scope: !6321)
!6513 = !DILocation(line: 1977, column: 14, scope: !6321)
!6514 = !DILocation(line: 1977, column: 19, scope: !6321)
!6515 = !DILocation(line: 1977, column: 2, scope: !6321)
!6516 = !DILabel(scope: !6321, name: "out_rx_free", file: !3, line: 1978)
!6517 = !DILocation(line: 1978, column: 1, scope: !6321)
!6518 = !DILocation(line: 1979, column: 17, scope: !6321)
!6519 = !DILocation(line: 1979, column: 22, scope: !6321)
!6520 = !DILocation(line: 1979, column: 2, scope: !6321)
!6521 = !DILabel(scope: !6321, name: "out_raw", file: !3, line: 1980)
!6522 = !DILocation(line: 1980, column: 1, scope: !6321)
!6523 = !DILocation(line: 1981, column: 20, scope: !6321)
!6524 = !DILocation(line: 1981, column: 2, scope: !6321)
!6525 = !DILabel(scope: !6321, name: "out_minor", file: !3, line: 1982)
!6526 = !DILocation(line: 1982, column: 1, scope: !6321)
!6527 = !DILocation(line: 1983, column: 2, scope: !6321)
!6528 = !DILocation(line: 1984, column: 9, scope: !6321)
!6529 = !DILocation(line: 1984, column: 2, scope: !6321)
!6530 = !DILocation(line: 1985, column: 1, scope: !6321)
!6531 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !104, file: !104, line: 660, type: !6298, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6532 = !DILocalVariable(name: "dev", arg: 1, scope: !6531, file: !104, line: 660, type: !3368)
!6533 = !DILocation(line: 660, column: 51, scope: !6531)
!6534 = !DILocalVariable(name: "data", arg: 2, scope: !6531, file: !104, line: 660, type: !165)
!6535 = !DILocation(line: 660, column: 62, scope: !6531)
!6536 = !DILocation(line: 662, column: 21, scope: !6531)
!6537 = !DILocation(line: 662, column: 2, scope: !6531)
!6538 = !DILocation(line: 662, column: 7, scope: !6531)
!6539 = !DILocation(line: 662, column: 19, scope: !6531)
!6540 = !DILocation(line: 663, column: 1, scope: !6531)
!6541 = distinct !DISubprogram(name: "rc_prepare_rx_device", scope: !3, file: !3, line: 1783, type: !4193, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6542 = !DILocalVariable(name: "dev", arg: 1, scope: !6541, file: !3, line: 1783, type: !237)
!6543 = !DILocation(line: 1783, column: 48, scope: !6541)
!6544 = !DILocalVariable(name: "rc", scope: !6541, file: !3, line: 1785, type: !159)
!6545 = !DILocation(line: 1785, column: 6, scope: !6541)
!6546 = !DILocalVariable(name: "rc_map", scope: !6541, file: !3, line: 1786, type: !4372)
!6547 = !DILocation(line: 1786, column: 17, scope: !6541)
!6548 = !DILocalVariable(name: "rc_proto", scope: !6541, file: !3, line: 1787, type: !184)
!6549 = !DILocation(line: 1787, column: 6, scope: !6541)
!6550 = !DILocation(line: 1789, column: 7, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1789, column: 6)
!6552 = !DILocation(line: 1789, column: 12, scope: !6551)
!6553 = !DILocation(line: 1789, column: 6, scope: !6541)
!6554 = !DILocation(line: 1790, column: 3, scope: !6551)
!6555 = !DILocation(line: 1792, column: 22, scope: !6541)
!6556 = !DILocation(line: 1792, column: 27, scope: !6541)
!6557 = !DILocation(line: 1792, column: 11, scope: !6541)
!6558 = !DILocation(line: 1792, column: 9, scope: !6541)
!6559 = !DILocation(line: 1793, column: 7, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1793, column: 6)
!6561 = !DILocation(line: 1793, column: 6, scope: !6541)
!6562 = !DILocation(line: 1794, column: 12, scope: !6560)
!6563 = !DILocation(line: 1794, column: 10, scope: !6560)
!6564 = !DILocation(line: 1794, column: 3, scope: !6560)
!6565 = !DILocation(line: 1795, column: 7, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1795, column: 6)
!6567 = !DILocation(line: 1795, column: 14, scope: !6566)
!6568 = !DILocation(line: 1795, column: 18, scope: !6566)
!6569 = !DILocation(line: 1795, column: 26, scope: !6566)
!6570 = !DILocation(line: 1795, column: 31, scope: !6566)
!6571 = !DILocation(line: 1795, column: 34, scope: !6566)
!6572 = !DILocation(line: 1795, column: 42, scope: !6566)
!6573 = !DILocation(line: 1795, column: 47, scope: !6566)
!6574 = !DILocation(line: 1795, column: 6, scope: !6541)
!6575 = !DILocation(line: 1796, column: 3, scope: !6566)
!6576 = !DILocation(line: 1798, column: 22, scope: !6541)
!6577 = !DILocation(line: 1798, column: 27, scope: !6541)
!6578 = !DILocation(line: 1798, column: 7, scope: !6541)
!6579 = !DILocation(line: 1798, column: 5, scope: !6541)
!6580 = !DILocation(line: 1799, column: 6, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1799, column: 6)
!6582 = !DILocation(line: 1799, column: 6, scope: !6541)
!6583 = !DILocation(line: 1800, column: 10, scope: !6581)
!6584 = !DILocation(line: 1800, column: 3, scope: !6581)
!6585 = !DILocation(line: 1802, column: 13, scope: !6541)
!6586 = !DILocation(line: 1802, column: 11, scope: !6541)
!6587 = !DILocation(line: 1804, column: 6, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1804, column: 6)
!6589 = !DILocation(line: 1804, column: 11, scope: !6588)
!6590 = !DILocation(line: 1804, column: 23, scope: !6588)
!6591 = !DILocation(line: 1804, column: 45, scope: !6588)
!6592 = !DILocation(line: 1804, column: 49, scope: !6588)
!6593 = !DILocation(line: 1804, column: 54, scope: !6588)
!6594 = !DILocation(line: 1804, column: 6, scope: !6541)
!6595 = !DILocation(line: 1805, column: 28, scope: !6588)
!6596 = !DILocation(line: 1805, column: 33, scope: !6588)
!6597 = !DILocation(line: 1805, column: 3, scope: !6588)
!6598 = !DILocation(line: 1805, column: 8, scope: !6588)
!6599 = !DILocation(line: 1805, column: 26, scope: !6588)
!6600 = !DILocation(line: 1807, column: 6, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1807, column: 6)
!6602 = !DILocation(line: 1807, column: 11, scope: !6601)
!6603 = !DILocation(line: 1807, column: 23, scope: !6601)
!6604 = !DILocation(line: 1807, column: 6, scope: !6541)
!6605 = !DILocation(line: 1808, column: 3, scope: !6601)
!6606 = !DILocation(line: 1810, column: 6, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1810, column: 6)
!6608 = !DILocation(line: 1810, column: 11, scope: !6607)
!6609 = !DILocation(line: 1810, column: 6, scope: !6541)
!6610 = !DILocation(line: 1811, column: 8, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 1810, column: 28)
!6612 = !DILocation(line: 1811, column: 13, scope: !6611)
!6613 = !DILocation(line: 1811, column: 29, scope: !6611)
!6614 = !DILocation(line: 1811, column: 6, scope: !6611)
!6615 = !DILocation(line: 1812, column: 7, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 1812, column: 7)
!6617 = !DILocation(line: 1812, column: 10, scope: !6616)
!6618 = !DILocation(line: 1812, column: 7, scope: !6611)
!6619 = !DILocation(line: 1813, column: 4, scope: !6616)
!6620 = !DILocation(line: 1814, column: 28, scope: !6611)
!6621 = !DILocation(line: 1814, column: 3, scope: !6611)
!6622 = !DILocation(line: 1814, column: 8, scope: !6611)
!6623 = !DILocation(line: 1814, column: 26, scope: !6611)
!6624 = !DILocation(line: 1815, column: 2, scope: !6611)
!6625 = !DILocation(line: 1818, column: 18, scope: !6541)
!6626 = !DILocation(line: 1818, column: 23, scope: !6541)
!6627 = !DILocation(line: 1818, column: 34, scope: !6541)
!6628 = !DILocation(line: 1818, column: 2, scope: !6541)
!6629 = !DILocation(line: 1819, column: 18, scope: !6541)
!6630 = !DILocation(line: 1819, column: 23, scope: !6541)
!6631 = !DILocation(line: 1819, column: 34, scope: !6541)
!6632 = !DILocation(line: 1819, column: 2, scope: !6541)
!6633 = !DILocation(line: 1820, column: 18, scope: !6541)
!6634 = !DILocation(line: 1820, column: 23, scope: !6541)
!6635 = !DILocation(line: 1820, column: 34, scope: !6541)
!6636 = !DILocation(line: 1820, column: 2, scope: !6541)
!6637 = !DILocation(line: 1821, column: 20, scope: !6541)
!6638 = !DILocation(line: 1821, column: 25, scope: !6541)
!6639 = !DILocation(line: 1821, column: 36, scope: !6541)
!6640 = !DILocation(line: 1821, column: 2, scope: !6541)
!6641 = !DILocation(line: 1824, column: 37, scope: !6541)
!6642 = !DILocation(line: 1824, column: 42, scope: !6541)
!6643 = !DILocation(line: 1824, column: 53, scope: !6541)
!6644 = !DILocation(line: 1824, column: 2, scope: !6541)
!6645 = !DILocation(line: 1825, column: 18, scope: !6541)
!6646 = !DILocation(line: 1825, column: 23, scope: !6541)
!6647 = !DILocation(line: 1825, column: 34, scope: !6541)
!6648 = !DILocation(line: 1825, column: 2, scope: !6541)
!6649 = !DILocation(line: 1826, column: 17, scope: !6541)
!6650 = !DILocation(line: 1826, column: 22, scope: !6541)
!6651 = !DILocation(line: 1826, column: 33, scope: !6541)
!6652 = !DILocation(line: 1826, column: 2, scope: !6541)
!6653 = !DILocation(line: 1827, column: 17, scope: !6541)
!6654 = !DILocation(line: 1827, column: 22, scope: !6541)
!6655 = !DILocation(line: 1827, column: 33, scope: !6541)
!6656 = !DILocation(line: 1827, column: 2, scope: !6541)
!6657 = !DILocation(line: 1829, column: 6, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1829, column: 6)
!6659 = !DILocation(line: 1829, column: 11, scope: !6658)
!6660 = !DILocation(line: 1829, column: 6, scope: !6541)
!6661 = !DILocation(line: 1830, column: 3, scope: !6658)
!6662 = !DILocation(line: 1830, column: 8, scope: !6658)
!6663 = !DILocation(line: 1830, column: 19, scope: !6658)
!6664 = !DILocation(line: 1830, column: 24, scope: !6658)
!6665 = !DILocation(line: 1831, column: 6, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 1831, column: 6)
!6667 = !DILocation(line: 1831, column: 11, scope: !6666)
!6668 = !DILocation(line: 1831, column: 6, scope: !6541)
!6669 = !DILocation(line: 1832, column: 3, scope: !6666)
!6670 = !DILocation(line: 1832, column: 8, scope: !6666)
!6671 = !DILocation(line: 1832, column: 19, scope: !6666)
!6672 = !DILocation(line: 1832, column: 25, scope: !6666)
!6673 = !DILocation(line: 1834, column: 32, scope: !6541)
!6674 = !DILocation(line: 1834, column: 37, scope: !6541)
!6675 = !DILocation(line: 1834, column: 2, scope: !6541)
!6676 = !DILocation(line: 1834, column: 7, scope: !6541)
!6677 = !DILocation(line: 1834, column: 18, scope: !6541)
!6678 = !DILocation(line: 1834, column: 22, scope: !6541)
!6679 = !DILocation(line: 1834, column: 29, scope: !6541)
!6680 = !DILocation(line: 1835, column: 10, scope: !6541)
!6681 = !DILocation(line: 1835, column: 15, scope: !6541)
!6682 = !DILocation(line: 1835, column: 26, scope: !6541)
!6683 = !DILocation(line: 1835, column: 2, scope: !6541)
!6684 = !DILocation(line: 1835, column: 31, scope: !6541)
!6685 = !DILocation(line: 1835, column: 36, scope: !6541)
!6686 = !DILocation(line: 1836, column: 25, scope: !6541)
!6687 = !DILocation(line: 1836, column: 30, scope: !6541)
!6688 = !DILocation(line: 1836, column: 2, scope: !6541)
!6689 = !DILocation(line: 1836, column: 7, scope: !6541)
!6690 = !DILocation(line: 1836, column: 18, scope: !6541)
!6691 = !DILocation(line: 1836, column: 23, scope: !6541)
!6692 = !DILocation(line: 1837, column: 25, scope: !6541)
!6693 = !DILocation(line: 1837, column: 30, scope: !6541)
!6694 = !DILocation(line: 1837, column: 2, scope: !6541)
!6695 = !DILocation(line: 1837, column: 7, scope: !6541)
!6696 = !DILocation(line: 1837, column: 18, scope: !6541)
!6697 = !DILocation(line: 1837, column: 23, scope: !6541)
!6698 = !DILocation(line: 1839, column: 2, scope: !6541)
!6699 = !DILabel(scope: !6541, name: "out_table", file: !3, line: 1841)
!6700 = !DILocation(line: 1841, column: 1, scope: !6541)
!6701 = !DILocation(line: 1842, column: 17, scope: !6541)
!6702 = !DILocation(line: 1842, column: 22, scope: !6541)
!6703 = !DILocation(line: 1842, column: 2, scope: !6541)
!6704 = !DILocation(line: 1844, column: 9, scope: !6541)
!6705 = !DILocation(line: 1844, column: 2, scope: !6541)
!6706 = !DILocation(line: 1845, column: 1, scope: !6541)
!6707 = distinct !DISubprogram(name: "lirc_register", scope: !3836, file: !3836, line: 336, type: !4193, scopeLine: 336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6708 = !DILocalVariable(name: "dev", arg: 1, scope: !6707, file: !3836, line: 336, type: !237)
!6709 = !DILocation(line: 336, column: 48, scope: !6707)
!6710 = !DILocation(line: 336, column: 55, scope: !6707)
!6711 = distinct !DISubprogram(name: "rc_setup_rx_device", scope: !3, file: !3, line: 1847, type: !4193, scopeLine: 1848, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6712 = !DILocalVariable(name: "dev", arg: 1, scope: !6711, file: !3, line: 1847, type: !237)
!6713 = !DILocation(line: 1847, column: 46, scope: !6711)
!6714 = !DILocalVariable(name: "rc", scope: !6711, file: !3, line: 1849, type: !159)
!6715 = !DILocation(line: 1849, column: 6, scope: !6711)
!6716 = !DILocation(line: 1852, column: 29, scope: !6711)
!6717 = !DILocation(line: 1852, column: 34, scope: !6711)
!6718 = !DILocation(line: 1852, column: 7, scope: !6711)
!6719 = !DILocation(line: 1852, column: 5, scope: !6711)
!6720 = !DILocation(line: 1853, column: 6, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 1853, column: 6)
!6722 = !DILocation(line: 1853, column: 6, scope: !6711)
!6723 = !DILocation(line: 1854, column: 10, scope: !6721)
!6724 = !DILocation(line: 1854, column: 3, scope: !6721)
!6725 = !DILocation(line: 1862, column: 6, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 1862, column: 6)
!6727 = !DILocation(line: 1862, column: 11, scope: !6726)
!6728 = !DILocation(line: 1862, column: 29, scope: !6726)
!6729 = !DILocation(line: 1862, column: 6, scope: !6711)
!6730 = !DILocation(line: 1863, column: 3, scope: !6726)
!6731 = !DILocation(line: 1863, column: 8, scope: !6726)
!6732 = !DILocation(line: 1863, column: 19, scope: !6726)
!6733 = !DILocation(line: 1863, column: 34, scope: !6726)
!6734 = !DILocation(line: 1865, column: 3, scope: !6726)
!6735 = !DILocation(line: 1865, column: 8, scope: !6726)
!6736 = !DILocation(line: 1865, column: 19, scope: !6726)
!6737 = !DILocation(line: 1865, column: 34, scope: !6726)
!6738 = !DILocation(line: 1872, column: 2, scope: !6711)
!6739 = !DILocation(line: 1872, column: 7, scope: !6711)
!6740 = !DILocation(line: 1872, column: 18, scope: !6711)
!6741 = !DILocation(line: 1872, column: 34, scope: !6711)
!6742 = !DILocation(line: 1874, column: 2, scope: !6711)
!6743 = !DILocation(line: 1875, column: 1, scope: !6711)
!6744 = distinct !DISubprogram(name: "rc_free_rx_device", scope: !3, file: !3, line: 1877, type: !4197, scopeLine: 1878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6745 = !DILocalVariable(name: "dev", arg: 1, scope: !6744, file: !3, line: 1877, type: !237)
!6746 = !DILocation(line: 1877, column: 46, scope: !6744)
!6747 = !DILocation(line: 1879, column: 7, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 1879, column: 6)
!6749 = !DILocation(line: 1879, column: 6, scope: !6744)
!6750 = !DILocation(line: 1880, column: 3, scope: !6748)
!6751 = !DILocation(line: 1882, column: 6, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 1882, column: 6)
!6753 = !DILocation(line: 1882, column: 11, scope: !6752)
!6754 = !DILocation(line: 1882, column: 6, scope: !6744)
!6755 = !DILocation(line: 1883, column: 27, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 1882, column: 22)
!6757 = !DILocation(line: 1883, column: 32, scope: !6756)
!6758 = !DILocation(line: 1883, column: 3, scope: !6756)
!6759 = !DILocation(line: 1884, column: 3, scope: !6756)
!6760 = !DILocation(line: 1884, column: 8, scope: !6756)
!6761 = !DILocation(line: 1884, column: 18, scope: !6756)
!6762 = !DILocation(line: 1885, column: 2, scope: !6756)
!6763 = !DILocation(line: 1887, column: 17, scope: !6744)
!6764 = !DILocation(line: 1887, column: 22, scope: !6744)
!6765 = !DILocation(line: 1887, column: 2, scope: !6744)
!6766 = !DILocation(line: 1888, column: 1, scope: !6744)
!6767 = distinct !DISubprogram(name: "lirc_unregister", scope: !3836, file: !3836, line: 337, type: !4197, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6768 = !DILocalVariable(name: "dev", arg: 1, scope: !6767, file: !3836, line: 337, type: !237)
!6769 = !DILocation(line: 337, column: 51, scope: !6767)
!6770 = !DILocation(line: 337, column: 58, scope: !6767)
!6771 = distinct !DISubprogram(name: "ir_free_table", scope: !3, file: !3, line: 242, type: !6772, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6772 = !DISubroutineType(types: !6773)
!6773 = !{null, !4372}
!6774 = !DILocalVariable(name: "rc_map", arg: 1, scope: !6771, file: !3, line: 242, type: !4372)
!6775 = !DILocation(line: 242, column: 42, scope: !6771)
!6776 = !DILocation(line: 244, column: 2, scope: !6771)
!6777 = !DILocation(line: 244, column: 10, scope: !6771)
!6778 = !DILocation(line: 244, column: 15, scope: !6771)
!6779 = !DILocation(line: 245, column: 8, scope: !6771)
!6780 = !DILocation(line: 245, column: 16, scope: !6771)
!6781 = !DILocation(line: 245, column: 2, scope: !6771)
!6782 = !DILocation(line: 246, column: 2, scope: !6771)
!6783 = !DILocation(line: 246, column: 10, scope: !6771)
!6784 = !DILocation(line: 246, column: 15, scope: !6771)
!6785 = !DILocation(line: 247, column: 8, scope: !6771)
!6786 = !DILocation(line: 247, column: 16, scope: !6771)
!6787 = !DILocation(line: 247, column: 2, scope: !6771)
!6788 = !DILocation(line: 248, column: 2, scope: !6771)
!6789 = !DILocation(line: 248, column: 10, scope: !6771)
!6790 = !DILocation(line: 248, column: 15, scope: !6771)
!6791 = !DILocation(line: 249, column: 1, scope: !6771)
!6792 = distinct !DISubprogram(name: "devm_rc_register_device", scope: !3, file: !3, line: 1993, type: !6793, scopeLine: 1994, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6793 = !DISubroutineType(types: !6794)
!6794 = !{!159, !3368, !237}
!6795 = !DILocalVariable(name: "parent", arg: 1, scope: !6792, file: !3, line: 1993, type: !3368)
!6796 = !DILocation(line: 1993, column: 44, scope: !6792)
!6797 = !DILocalVariable(name: "dev", arg: 2, scope: !6792, file: !3, line: 1993, type: !237)
!6798 = !DILocation(line: 1993, column: 67, scope: !6792)
!6799 = !DILocalVariable(name: "dr", scope: !6792, file: !3, line: 1995, type: !4232)
!6800 = !DILocation(line: 1995, column: 18, scope: !6792)
!6801 = !DILocalVariable(name: "ret", scope: !6792, file: !3, line: 1996, type: !159)
!6802 = !DILocation(line: 1996, column: 6, scope: !6792)
!6803 = !DILocation(line: 1998, column: 7, scope: !6792)
!6804 = !DILocation(line: 1998, column: 5, scope: !6792)
!6805 = !DILocation(line: 1999, column: 7, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 1999, column: 6)
!6807 = !DILocation(line: 1999, column: 6, scope: !6792)
!6808 = !DILocation(line: 2000, column: 3, scope: !6806)
!6809 = !DILocation(line: 2002, column: 27, scope: !6792)
!6810 = !DILocation(line: 2002, column: 8, scope: !6792)
!6811 = !DILocation(line: 2002, column: 6, scope: !6792)
!6812 = !DILocation(line: 2003, column: 6, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 2003, column: 6)
!6814 = !DILocation(line: 2003, column: 6, scope: !6792)
!6815 = !DILocation(line: 2004, column: 15, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 2003, column: 11)
!6817 = !DILocation(line: 2004, column: 3, scope: !6816)
!6818 = !DILocation(line: 2005, column: 10, scope: !6816)
!6819 = !DILocation(line: 2005, column: 3, scope: !6816)
!6820 = !DILocation(line: 2008, column: 8, scope: !6792)
!6821 = !DILocation(line: 2008, column: 3, scope: !6792)
!6822 = !DILocation(line: 2008, column: 6, scope: !6792)
!6823 = !DILocation(line: 2009, column: 13, scope: !6792)
!6824 = !DILocation(line: 2009, column: 21, scope: !6792)
!6825 = !DILocation(line: 2009, column: 2, scope: !6792)
!6826 = !DILocation(line: 2011, column: 2, scope: !6792)
!6827 = !DILocation(line: 2012, column: 1, scope: !6792)
!6828 = distinct !DISubprogram(name: "devm_rc_release", scope: !3, file: !3, line: 1988, type: !6298, scopeLine: 1989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6829 = !DILocalVariable(name: "dev", arg: 1, scope: !6828, file: !3, line: 1988, type: !3368)
!6830 = !DILocation(line: 1988, column: 44, scope: !6828)
!6831 = !DILocalVariable(name: "res", arg: 2, scope: !6828, file: !3, line: 1988, type: !165)
!6832 = !DILocation(line: 1988, column: 55, scope: !6828)
!6833 = !DILocation(line: 1990, column: 42, scope: !6828)
!6834 = !DILocation(line: 1990, column: 24, scope: !6828)
!6835 = !DILocation(line: 1990, column: 23, scope: !6828)
!6836 = !DILocation(line: 1990, column: 2, scope: !6828)
!6837 = !DILocation(line: 1991, column: 1, scope: !6828)
!6838 = distinct !DISubprogram(name: "rc_unregister_device", scope: !3, file: !3, line: 2015, type: !4197, scopeLine: 2016, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6839 = !DILocalVariable(name: "dev", arg: 1, scope: !6838, file: !3, line: 2015, type: !237)
!6840 = !DILocation(line: 2015, column: 42, scope: !6838)
!6841 = !DILocation(line: 2017, column: 7, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 2017, column: 6)
!6843 = !DILocation(line: 2017, column: 6, scope: !6838)
!6844 = !DILocation(line: 2018, column: 3, scope: !6842)
!6845 = !DILocation(line: 2020, column: 6, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 2020, column: 6)
!6847 = !DILocation(line: 2020, column: 11, scope: !6846)
!6848 = !DILocation(line: 2020, column: 23, scope: !6846)
!6849 = !DILocation(line: 2020, column: 6, scope: !6838)
!6850 = !DILocation(line: 2021, column: 27, scope: !6846)
!6851 = !DILocation(line: 2021, column: 3, scope: !6846)
!6852 = !DILocation(line: 2023, column: 2, scope: !6838)
!6853 = !DILocation(line: 2024, column: 2, scope: !6838)
!6854 = !DILocation(line: 2026, column: 14, scope: !6838)
!6855 = !DILocation(line: 2026, column: 19, scope: !6838)
!6856 = !DILocation(line: 2026, column: 2, scope: !6838)
!6857 = !DILocation(line: 2027, column: 6, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 2027, column: 6)
!6859 = !DILocation(line: 2027, column: 11, scope: !6858)
!6860 = !DILocation(line: 2027, column: 17, scope: !6858)
!6861 = !DILocation(line: 2027, column: 20, scope: !6858)
!6862 = !DILocation(line: 2027, column: 25, scope: !6858)
!6863 = !DILocation(line: 2027, column: 6, scope: !6838)
!6864 = !DILocation(line: 2028, column: 3, scope: !6858)
!6865 = !DILocation(line: 2028, column: 8, scope: !6858)
!6866 = !DILocation(line: 2028, column: 14, scope: !6858)
!6867 = !DILocation(line: 2029, column: 2, scope: !6838)
!6868 = !DILocation(line: 2029, column: 7, scope: !6838)
!6869 = !DILocation(line: 2029, column: 18, scope: !6838)
!6870 = !DILocation(line: 2030, column: 16, scope: !6838)
!6871 = !DILocation(line: 2030, column: 21, scope: !6838)
!6872 = !DILocation(line: 2030, column: 2, scope: !6838)
!6873 = !DILocation(line: 2032, column: 20, scope: !6838)
!6874 = !DILocation(line: 2032, column: 2, scope: !6838)
!6875 = !DILocation(line: 2038, column: 6, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 2038, column: 6)
!6877 = !DILocation(line: 2038, column: 11, scope: !6876)
!6878 = !DILocation(line: 2038, column: 29, scope: !6876)
!6879 = !DILocation(line: 2038, column: 6, scope: !6838)
!6880 = !DILocation(line: 2039, column: 19, scope: !6876)
!6881 = !DILocation(line: 2039, column: 3, scope: !6876)
!6882 = !DILocation(line: 2041, column: 14, scope: !6838)
!6883 = !DILocation(line: 2041, column: 19, scope: !6838)
!6884 = !DILocation(line: 2041, column: 2, scope: !6838)
!6885 = !DILocation(line: 2043, column: 2, scope: !6838)
!6886 = !DILocation(line: 2045, column: 7, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 2045, column: 6)
!6888 = !DILocation(line: 2045, column: 12, scope: !6887)
!6889 = !DILocation(line: 2045, column: 6, scope: !6838)
!6890 = !DILocation(line: 2046, column: 18, scope: !6887)
!6891 = !DILocation(line: 2046, column: 3, scope: !6887)
!6892 = !DILocation(line: 2047, column: 1, scope: !6838)
!6893 = distinct !DISubprogram(name: "rc_core_exit", scope: !3, file: !3, line: 2076, type: !1865, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6894 = !DILocation(line: 2078, column: 2, scope: !6893)
!6895 = !DILocation(line: 2079, column: 2, scope: !6893)
!6896 = !DILocation(line: 2080, column: 32, scope: !6893)
!6897 = !DILocation(line: 2080, column: 2, scope: !6893)
!6898 = !DILocation(line: 2081, column: 2, scope: !6893)
!6899 = !DILocation(line: 2082, column: 1, scope: !6893)
!6900 = distinct !DISubprogram(name: "lirc_dev_exit", scope: !3836, file: !3836, line: 331, type: !1865, scopeLine: 331, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6901 = !DILocation(line: 331, column: 41, scope: !6900)
!6902 = distinct !DISubprogram(name: "led_trigger_unregister_simple", scope: !136, file: !136, line: 437, type: !6903, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6903 = !DISubroutineType(types: !6904)
!6904 = !{null, !4285}
!6905 = !DILocalVariable(name: "trigger", arg: 1, scope: !6902, file: !136, line: 437, type: !4285)
!6906 = !DILocation(line: 437, column: 70, scope: !6902)
!6907 = !DILocation(line: 437, column: 80, scope: !6902)
!6908 = !DILocalVariable(name: "rc", scope: !4360, file: !3, line: 2057, type: !159)
!6909 = !DILocation(line: 2057, column: 6, scope: !4360)
!6910 = !DILocation(line: 2057, column: 11, scope: !6911)
!6911 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 2057, column: 11)
!6912 = !DILocation(line: 2058, column: 6, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 2058, column: 6)
!6914 = !DILocation(line: 2058, column: 6, scope: !4360)
!6915 = !DILocation(line: 2059, column: 3, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 2058, column: 10)
!6917 = !DILocation(line: 2060, column: 10, scope: !6916)
!6918 = !DILocation(line: 2060, column: 3, scope: !6916)
!6919 = !DILocation(line: 2063, column: 7, scope: !4360)
!6920 = !DILocation(line: 2063, column: 5, scope: !4360)
!6921 = !DILocation(line: 2064, column: 6, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 2064, column: 6)
!6923 = !DILocation(line: 2064, column: 6, scope: !4360)
!6924 = !DILocation(line: 2065, column: 3, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 2064, column: 10)
!6926 = !DILocation(line: 2066, column: 3, scope: !6925)
!6927 = !DILocation(line: 2067, column: 10, scope: !6925)
!6928 = !DILocation(line: 2067, column: 3, scope: !6925)
!6929 = !DILocation(line: 2070, column: 2, scope: !4360)
!6930 = !DILocation(line: 2071, column: 2, scope: !4360)
!6931 = !DILocation(line: 2073, column: 2, scope: !4360)
!6932 = !DILocation(line: 2074, column: 1, scope: !4360)
!6933 = distinct !DISubprogram(name: "__list_add", scope: !4474, file: !4474, line: 63, type: !6934, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6934 = !DISubroutineType(types: !6935)
!6935 = !{null, !174, !174, !174}
!6936 = !DILocalVariable(name: "new", arg: 1, scope: !6933, file: !4474, line: 63, type: !174)
!6937 = !DILocation(line: 63, column: 49, scope: !6933)
!6938 = !DILocalVariable(name: "prev", arg: 2, scope: !6933, file: !4474, line: 64, type: !174)
!6939 = !DILocation(line: 64, column: 28, scope: !6933)
!6940 = !DILocalVariable(name: "next", arg: 3, scope: !6933, file: !4474, line: 65, type: !174)
!6941 = !DILocation(line: 65, column: 28, scope: !6933)
!6942 = !DILocation(line: 67, column: 24, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6933, file: !4474, line: 67, column: 6)
!6944 = !DILocation(line: 67, column: 29, scope: !6943)
!6945 = !DILocation(line: 67, column: 35, scope: !6943)
!6946 = !DILocation(line: 67, column: 7, scope: !6943)
!6947 = !DILocation(line: 67, column: 6, scope: !6933)
!6948 = !DILocation(line: 68, column: 3, scope: !6943)
!6949 = !DILocation(line: 70, column: 15, scope: !6933)
!6950 = !DILocation(line: 70, column: 2, scope: !6933)
!6951 = !DILocation(line: 70, column: 8, scope: !6933)
!6952 = !DILocation(line: 70, column: 13, scope: !6933)
!6953 = !DILocation(line: 71, column: 14, scope: !6933)
!6954 = !DILocation(line: 71, column: 2, scope: !6933)
!6955 = !DILocation(line: 71, column: 7, scope: !6933)
!6956 = !DILocation(line: 71, column: 12, scope: !6933)
!6957 = !DILocation(line: 72, column: 14, scope: !6933)
!6958 = !DILocation(line: 72, column: 2, scope: !6933)
!6959 = !DILocation(line: 72, column: 7, scope: !6933)
!6960 = !DILocation(line: 72, column: 12, scope: !6933)
!6961 = !DILocation(line: 73, column: 2, scope: !6933)
!6962 = !DILocation(line: 73, column: 2, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6933, file: !4474, line: 73, column: 2)
!6964 = !DILocation(line: 73, column: 2, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6963, file: !4474, line: 73, column: 2)
!6966 = !DILocation(line: 73, column: 2, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6963, file: !4474, line: 73, column: 2)
!6968 = !DILocation(line: 74, column: 1, scope: !6933)
!6969 = distinct !DISubprogram(name: "__list_add_valid", scope: !4474, file: !4474, line: 45, type: !6970, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6970 = !DISubroutineType(types: !6971)
!6971 = !{!488, !174, !174, !174}
!6972 = !DILocalVariable(name: "new", arg: 1, scope: !6969, file: !4474, line: 45, type: !174)
!6973 = !DILocation(line: 45, column: 55, scope: !6969)
!6974 = !DILocalVariable(name: "prev", arg: 2, scope: !6969, file: !4474, line: 46, type: !174)
!6975 = !DILocation(line: 46, column: 23, scope: !6969)
!6976 = !DILocalVariable(name: "next", arg: 3, scope: !6969, file: !4474, line: 47, type: !174)
!6977 = !DILocation(line: 47, column: 23, scope: !6969)
!6978 = !DILocation(line: 49, column: 2, scope: !6969)
!6979 = distinct !DISubprogram(name: "__list_del_entry", scope: !4474, file: !4474, line: 130, type: !4505, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6980 = !DILocalVariable(name: "entry", arg: 1, scope: !6979, file: !4474, line: 130, type: !174)
!6981 = !DILocation(line: 130, column: 55, scope: !6979)
!6982 = !DILocation(line: 132, column: 30, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6979, file: !4474, line: 132, column: 6)
!6984 = !DILocation(line: 132, column: 7, scope: !6983)
!6985 = !DILocation(line: 132, column: 6, scope: !6979)
!6986 = !DILocation(line: 133, column: 3, scope: !6983)
!6987 = !DILocation(line: 135, column: 13, scope: !6979)
!6988 = !DILocation(line: 135, column: 20, scope: !6979)
!6989 = !DILocation(line: 135, column: 26, scope: !6979)
!6990 = !DILocation(line: 135, column: 33, scope: !6979)
!6991 = !DILocation(line: 135, column: 2, scope: !6979)
!6992 = !DILocation(line: 136, column: 1, scope: !6979)
!6993 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !4474, file: !4474, line: 51, type: !6994, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!6994 = !DISubroutineType(types: !6995)
!6995 = !{!488, !174}
!6996 = !DILocalVariable(name: "entry", arg: 1, scope: !6993, file: !4474, line: 51, type: !174)
!6997 = !DILocation(line: 51, column: 61, scope: !6993)
!6998 = !DILocation(line: 53, column: 2, scope: !6993)
!6999 = distinct !DISubprogram(name: "__list_del", scope: !4474, file: !4474, line: 110, type: !4475, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7000 = !DILocalVariable(name: "prev", arg: 1, scope: !6999, file: !4474, line: 110, type: !174)
!7001 = !DILocation(line: 110, column: 50, scope: !6999)
!7002 = !DILocalVariable(name: "next", arg: 2, scope: !6999, file: !4474, line: 110, type: !174)
!7003 = !DILocation(line: 110, column: 75, scope: !6999)
!7004 = !DILocation(line: 112, column: 15, scope: !6999)
!7005 = !DILocation(line: 112, column: 2, scope: !6999)
!7006 = !DILocation(line: 112, column: 8, scope: !6999)
!7007 = !DILocation(line: 112, column: 13, scope: !6999)
!7008 = !DILocation(line: 113, column: 2, scope: !6999)
!7009 = !DILocation(line: 113, column: 2, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6999, file: !4474, line: 113, column: 2)
!7011 = !DILocation(line: 113, column: 2, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7010, file: !4474, line: 113, column: 2)
!7013 = !DILocation(line: 113, column: 2, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7010, file: !4474, line: 113, column: 2)
!7015 = !DILocation(line: 114, column: 1, scope: !6999)
!7016 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !4618, file: !4618, line: 646, type: !4619, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7017 = !DILocalVariable(name: "__ret", scope: !7018, file: !4618, line: 648, type: !214)
!7018 = distinct !DILexicalBlock(scope: !7016, file: !4618, line: 648, column: 9)
!7019 = !DILocation(line: 648, column: 9, scope: !7018)
!7020 = !DILocalVariable(name: "__edi", scope: !7018, file: !4618, line: 648, type: !214)
!7021 = !DILocalVariable(name: "__esi", scope: !7018, file: !4618, line: 648, type: !214)
!7022 = !DILocalVariable(name: "__edx", scope: !7018, file: !4618, line: 648, type: !214)
!7023 = !DILocalVariable(name: "__ecx", scope: !7018, file: !4618, line: 648, type: !214)
!7024 = !DILocalVariable(name: "__eax", scope: !7018, file: !4618, line: 648, type: !214)
!7025 = !DILocation(line: 648, column: 9, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7027, file: !4618, line: 648, column: 9)
!7027 = distinct !DILexicalBlock(scope: !7018, file: !4618, line: 648, column: 9)
!7028 = !{i32 -2145734558, i32 -2145732243, i32 -2145732009, i32 -2145731958, i32 -2145731930, i32 -2145731905, i32 -2145732221, i32 -2145732208, i32 -2145731770, i32 -2145731651, i32 -2145732116, i32 -2145732089, i32 -2145732061, i32 -2145732031}
!7029 = !DILocalVariable(name: "__mask", scope: !7030, file: !4618, line: 648, type: !214)
!7030 = distinct !DILexicalBlock(scope: !7026, file: !4618, line: 648, column: 9)
!7031 = !DILocation(line: 648, column: 9, scope: !7030)
!7032 = !DILocation(line: 648, column: 9, scope: !7027)
!7033 = !DILocation(line: 648, column: 2, scope: !7016)
!7034 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !4618, file: !4618, line: 656, type: !1865, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7035 = !DILocalVariable(name: "__edi", scope: !7036, file: !4618, line: 658, type: !214)
!7036 = distinct !DILexicalBlock(scope: !7034, file: !4618, line: 658, column: 2)
!7037 = !DILocation(line: 658, column: 2, scope: !7036)
!7038 = !DILocalVariable(name: "__esi", scope: !7036, file: !4618, line: 658, type: !214)
!7039 = !DILocalVariable(name: "__edx", scope: !7036, file: !4618, line: 658, type: !214)
!7040 = !DILocalVariable(name: "__ecx", scope: !7036, file: !4618, line: 658, type: !214)
!7041 = !DILocalVariable(name: "__eax", scope: !7036, file: !4618, line: 658, type: !214)
!7042 = !{i32 -2145727464, i32 -2145726732, i32 -2145726498, i32 -2145726447, i32 -2145726419, i32 -2145726394, i32 -2145726710, i32 -2145726697, i32 -2145726259, i32 -2145726140, i32 -2145726605, i32 -2145726578, i32 -2145726550, i32 -2145726520}
!7043 = !DILocation(line: 659, column: 1, scope: !7034)
!7044 = distinct !DISubprogram(name: "rc_map_cmp", scope: !3, file: !3, line: 500, type: !7045, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7045 = !DISubroutineType(types: !7046)
!7046 = !{!159, !2114, !2114}
!7047 = !DILocalVariable(name: "key", arg: 1, scope: !7044, file: !3, line: 500, type: !2114)
!7048 = !DILocation(line: 500, column: 35, scope: !7044)
!7049 = !DILocalVariable(name: "elt", arg: 2, scope: !7044, file: !3, line: 500, type: !2114)
!7050 = !DILocation(line: 500, column: 52, scope: !7044)
!7051 = !DILocalVariable(name: "scancode", scope: !7044, file: !3, line: 502, type: !7052)
!7052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7053, size: 64)
!7053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!7054 = !DILocation(line: 502, column: 13, scope: !7044)
!7055 = !DILocation(line: 502, column: 24, scope: !7044)
!7056 = !DILocalVariable(name: "e", scope: !7044, file: !3, line: 503, type: !7057)
!7057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7058, size: 64)
!7058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !181)
!7059 = !DILocation(line: 503, column: 29, scope: !7044)
!7060 = !DILocation(line: 503, column: 33, scope: !7044)
!7061 = !DILocation(line: 505, column: 7, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7044, file: !3, line: 505, column: 6)
!7063 = !DILocation(line: 505, column: 6, scope: !7062)
!7064 = !DILocation(line: 505, column: 18, scope: !7062)
!7065 = !DILocation(line: 505, column: 21, scope: !7062)
!7066 = !DILocation(line: 505, column: 16, scope: !7062)
!7067 = !DILocation(line: 505, column: 6, scope: !7044)
!7068 = !DILocation(line: 506, column: 3, scope: !7062)
!7069 = !DILocation(line: 507, column: 12, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7062, file: !3, line: 507, column: 11)
!7071 = !DILocation(line: 507, column: 11, scope: !7070)
!7072 = !DILocation(line: 507, column: 23, scope: !7070)
!7073 = !DILocation(line: 507, column: 26, scope: !7070)
!7074 = !DILocation(line: 507, column: 21, scope: !7070)
!7075 = !DILocation(line: 507, column: 11, scope: !7062)
!7076 = !DILocation(line: 508, column: 3, scope: !7070)
!7077 = !DILocation(line: 509, column: 2, scope: !7044)
!7078 = !DILocation(line: 510, column: 1, scope: !7044)
!7079 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !4618, file: !4618, line: 651, type: !7080, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7080 = !DISubroutineType(types: !7081)
!7081 = !{null, !214}
!7082 = !DILocalVariable(name: "f", arg: 1, scope: !7079, file: !4618, line: 651, type: !214)
!7083 = !DILocation(line: 651, column: 65, scope: !7079)
!7084 = !DILocalVariable(name: "__edi", scope: !7085, file: !4618, line: 653, type: !214)
!7085 = distinct !DILexicalBlock(scope: !7079, file: !4618, line: 653, column: 2)
!7086 = !DILocation(line: 653, column: 2, scope: !7085)
!7087 = !DILocalVariable(name: "__esi", scope: !7085, file: !4618, line: 653, type: !214)
!7088 = !DILocalVariable(name: "__edx", scope: !7085, file: !4618, line: 653, type: !214)
!7089 = !DILocalVariable(name: "__ecx", scope: !7085, file: !4618, line: 653, type: !214)
!7090 = !DILocalVariable(name: "__eax", scope: !7085, file: !4618, line: 653, type: !214)
!7091 = !{i32 -2145730091, i32 -2145729341, i32 -2145729107, i32 -2145729056, i32 -2145729028, i32 -2145729003, i32 -2145729319, i32 -2145729306, i32 -2145728868, i32 -2145728749, i32 -2145729214, i32 -2145729187, i32 -2145729159, i32 -2145729129}
!7092 = !DILocation(line: 654, column: 1, scope: !7079)
!7093 = distinct !DISubprogram(name: "input_report_key", scope: !3890, file: !3890, line: 415, type: !7094, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7094 = !DISubroutineType(types: !7095)
!7095 = !{null, !3888, !7, !159}
!7096 = !DILocalVariable(name: "dev", arg: 1, scope: !7093, file: !3890, line: 415, type: !3888)
!7097 = !DILocation(line: 415, column: 55, scope: !7093)
!7098 = !DILocalVariable(name: "code", arg: 2, scope: !7093, file: !3890, line: 415, type: !7)
!7099 = !DILocation(line: 415, column: 73, scope: !7093)
!7100 = !DILocalVariable(name: "value", arg: 3, scope: !7093, file: !3890, line: 415, type: !159)
!7101 = !DILocation(line: 415, column: 83, scope: !7093)
!7102 = !DILocation(line: 417, column: 14, scope: !7093)
!7103 = !DILocation(line: 417, column: 27, scope: !7093)
!7104 = !DILocation(line: 417, column: 35, scope: !7093)
!7105 = !DILocation(line: 417, column: 34, scope: !7093)
!7106 = !DILocation(line: 417, column: 33, scope: !7093)
!7107 = !DILocation(line: 417, column: 2, scope: !7093)
!7108 = !DILocation(line: 418, column: 1, scope: !7093)
!7109 = distinct !DISubprogram(name: "led_trigger_event", scope: !136, file: !136, line: 438, type: !7110, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7110 = !DISubroutineType(types: !7111)
!7111 = !{null, !4285, !135}
!7112 = !DILocalVariable(name: "trigger", arg: 1, scope: !7109, file: !136, line: 438, type: !4285)
!7113 = !DILocation(line: 438, column: 58, scope: !7109)
!7114 = !DILocalVariable(name: "event", arg: 2, scope: !7109, file: !136, line: 439, type: !135)
!7115 = !DILocation(line: 439, column: 25, scope: !7109)
!7116 = !DILocation(line: 439, column: 33, scope: !7109)
!7117 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !4746, file: !4746, line: 308, type: !4747, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7118 = !DILocalVariable(name: "m", arg: 1, scope: !7117, file: !4746, line: 308, type: !2814)
!7119 = !DILocation(line: 308, column: 66, scope: !7117)
!7120 = !DILocation(line: 310, column: 10, scope: !7117)
!7121 = !DILocation(line: 310, column: 12, scope: !7117)
!7122 = !DILocation(line: 310, column: 34, scope: !7117)
!7123 = !DILocation(line: 310, column: 39, scope: !7117)
!7124 = !DILocation(line: 310, column: 2, scope: !7117)
!7125 = distinct !DISubprogram(name: "timer_pending", scope: !3560, file: !3560, line: 166, type: !7126, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7126 = !DISubroutineType(types: !7127)
!7127 = !{!159, !7128}
!7128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7129, size: 64)
!7129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3559)
!7130 = !DILocalVariable(name: "timer", arg: 1, scope: !7125, file: !3560, line: 166, type: !7128)
!7131 = !DILocation(line: 166, column: 59, scope: !7125)
!7132 = !DILocation(line: 168, column: 35, scope: !7125)
!7133 = !DILocation(line: 168, column: 42, scope: !7125)
!7134 = !DILocation(line: 168, column: 10, scope: !7125)
!7135 = !DILocation(line: 168, column: 9, scope: !7125)
!7136 = !DILocation(line: 168, column: 2, scope: !7125)
!7137 = distinct !DISubprogram(name: "hlist_unhashed_lockless", scope: !4474, file: !4474, line: 819, type: !7138, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7138 = !DISubroutineType(types: !7139)
!7139 = !{!159, !7140}
!7140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7141, size: 64)
!7141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !221)
!7142 = !DILocalVariable(name: "h", arg: 1, scope: !7137, file: !4474, line: 819, type: !7140)
!7143 = !DILocation(line: 819, column: 68, scope: !7137)
!7144 = !DILocation(line: 821, column: 10, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7137, file: !4474, line: 821, column: 10)
!7146 = !DILocation(line: 821, column: 10, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7145, file: !4474, line: 821, column: 10)
!7148 = !DILocation(line: 821, column: 9, scope: !7137)
!7149 = !DILocation(line: 821, column: 2, scope: !7137)
!7150 = distinct !DISubprogram(name: "get_order", scope: !7151, file: !7151, line: 29, type: !7152, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7151 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!7152 = !DISubroutineType(types: !7153)
!7153 = !{!159, !214}
!7154 = !DILocalVariable(name: "x", arg: 1, scope: !7155, file: !7156, line: 366, type: !185)
!7155 = distinct !DISubprogram(name: "fls64", scope: !7156, file: !7156, line: 366, type: !7157, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7156 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!7157 = !DISubroutineType(types: !7158)
!7158 = !{!159, !185}
!7159 = !DILocation(line: 366, column: 40, scope: !7155, inlinedAt: !7160)
!7160 = distinct !DILocation(line: 46, column: 9, scope: !7150)
!7161 = !DILocalVariable(name: "bitpos", scope: !7155, file: !7156, line: 368, type: !159)
!7162 = !DILocation(line: 368, column: 6, scope: !7155, inlinedAt: !7160)
!7163 = !DILocalVariable(name: "size", arg: 1, scope: !7150, file: !7151, line: 29, type: !214)
!7164 = !DILocation(line: 29, column: 63, scope: !7150)
!7165 = !DILocation(line: 31, column: 27, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7150, file: !7151, line: 31, column: 6)
!7167 = !DILocation(line: 31, column: 6, scope: !7166)
!7168 = !DILocation(line: 31, column: 6, scope: !7150)
!7169 = !DILocation(line: 32, column: 8, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7171, file: !7151, line: 32, column: 7)
!7171 = distinct !DILexicalBlock(scope: !7166, file: !7151, line: 31, column: 34)
!7172 = !DILocation(line: 32, column: 7, scope: !7171)
!7173 = !DILocation(line: 33, column: 4, scope: !7170)
!7174 = !DILocation(line: 35, column: 7, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7171, file: !7151, line: 35, column: 7)
!7176 = !DILocation(line: 35, column: 12, scope: !7175)
!7177 = !DILocation(line: 35, column: 7, scope: !7171)
!7178 = !DILocation(line: 36, column: 4, scope: !7175)
!7179 = !DILocation(line: 38, column: 10, scope: !7171)
!7180 = !DILocation(line: 38, column: 28, scope: !7171)
!7181 = !DILocation(line: 38, column: 41, scope: !7171)
!7182 = !DILocation(line: 38, column: 3, scope: !7171)
!7183 = !DILocation(line: 41, column: 6, scope: !7150)
!7184 = !DILocation(line: 42, column: 7, scope: !7150)
!7185 = !DILocation(line: 46, column: 15, scope: !7150)
!7186 = !DILocation(line: 374, column: 2, scope: !7155, inlinedAt: !7160)
!7187 = !DILocation(line: 376, column: 14, scope: !7155, inlinedAt: !7160)
!7188 = !{i32 363979}
!7189 = !DILocation(line: 377, column: 9, scope: !7155, inlinedAt: !7160)
!7190 = !DILocation(line: 377, column: 16, scope: !7155, inlinedAt: !7160)
!7191 = !DILocation(line: 46, column: 2, scope: !7150)
!7192 = !DILocation(line: 48, column: 1, scope: !7150)
!7193 = distinct !DISubprogram(name: "__ilog2_u64", scope: !7194, file: !7194, line: 30, type: !7195, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7194 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!7195 = !DISubroutineType(types: !7196)
!7196 = !{!159, !184}
!7197 = !DILocation(line: 366, column: 40, scope: !7155, inlinedAt: !7198)
!7198 = distinct !DILocation(line: 32, column: 9, scope: !7193)
!7199 = !DILocation(line: 368, column: 6, scope: !7155, inlinedAt: !7198)
!7200 = !DILocalVariable(name: "n", arg: 1, scope: !7193, file: !7194, line: 30, type: !184)
!7201 = !DILocation(line: 30, column: 21, scope: !7193)
!7202 = !DILocation(line: 32, column: 15, scope: !7193)
!7203 = !DILocation(line: 374, column: 2, scope: !7155, inlinedAt: !7198)
!7204 = !DILocation(line: 376, column: 14, scope: !7155, inlinedAt: !7198)
!7205 = !DILocation(line: 377, column: 9, scope: !7155, inlinedAt: !7198)
!7206 = !DILocation(line: 377, column: 16, scope: !7155, inlinedAt: !7198)
!7207 = !DILocation(line: 32, column: 18, scope: !7193)
!7208 = !DILocation(line: 32, column: 2, scope: !7193)
!7209 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !7210, file: !7210, line: 137, type: !7211, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7210 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!7211 = !DISubroutineType(types: !7212)
!7212 = !{!165, !925, !2114, !328, !160}
!7213 = !DILocalVariable(name: "s", arg: 1, scope: !7209, file: !7210, line: 137, type: !925)
!7214 = !DILocation(line: 137, column: 54, scope: !7209)
!7215 = !DILocalVariable(name: "object", arg: 2, scope: !7209, file: !7210, line: 137, type: !2114)
!7216 = !DILocation(line: 137, column: 69, scope: !7209)
!7217 = !DILocalVariable(name: "size", arg: 3, scope: !7209, file: !7210, line: 138, type: !328)
!7218 = !DILocation(line: 138, column: 12, scope: !7209)
!7219 = !DILocalVariable(name: "flags", arg: 4, scope: !7209, file: !7210, line: 138, type: !160)
!7220 = !DILocation(line: 138, column: 24, scope: !7209)
!7221 = !DILocation(line: 140, column: 17, scope: !7209)
!7222 = !DILocation(line: 140, column: 2, scope: !7209)
!7223 = distinct !DISubprogram(name: "input_get_drvdata", scope: !3890, file: !3890, line: 366, type: !7224, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7224 = !DISubroutineType(types: !7225)
!7225 = !{!165, !3888}
!7226 = !DILocalVariable(name: "dev", arg: 1, scope: !7223, file: !3890, line: 366, type: !3888)
!7227 = !DILocation(line: 366, column: 57, scope: !7223)
!7228 = !DILocation(line: 368, column: 26, scope: !7223)
!7229 = !DILocation(line: 368, column: 31, scope: !7223)
!7230 = !DILocation(line: 368, column: 9, scope: !7223)
!7231 = !DILocation(line: 368, column: 2, scope: !7223)
!7232 = distinct !DISubprogram(name: "scancode_to_u64", scope: !3, file: !3, line: 175, type: !7233, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7233 = !DISubroutineType(types: !7234)
!7234 = !{!159, !3916, !234}
!7235 = !DILocalVariable(name: "ke", arg: 1, scope: !7232, file: !3, line: 175, type: !3916)
!7236 = !DILocation(line: 175, column: 61, scope: !7232)
!7237 = !DILocalVariable(name: "scancode", arg: 2, scope: !7232, file: !3, line: 175, type: !234)
!7238 = !DILocation(line: 175, column: 70, scope: !7232)
!7239 = !DILocation(line: 177, column: 10, scope: !7232)
!7240 = !DILocation(line: 177, column: 14, scope: !7232)
!7241 = !DILocation(line: 177, column: 2, scope: !7232)
!7242 = !DILocation(line: 179, column: 23, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7232, file: !3, line: 177, column: 19)
!7244 = !DILocation(line: 179, column: 27, scope: !7243)
!7245 = !DILocation(line: 179, column: 15, scope: !7243)
!7246 = !DILocation(line: 179, column: 4, scope: !7243)
!7247 = !DILocation(line: 179, column: 13, scope: !7243)
!7248 = !DILocation(line: 180, column: 3, scope: !7243)
!7249 = !DILocation(line: 183, column: 24, scope: !7243)
!7250 = !DILocation(line: 183, column: 28, scope: !7243)
!7251 = !DILocation(line: 183, column: 15, scope: !7243)
!7252 = !DILocation(line: 183, column: 4, scope: !7243)
!7253 = !DILocation(line: 183, column: 13, scope: !7243)
!7254 = !DILocation(line: 184, column: 3, scope: !7243)
!7255 = !DILocation(line: 187, column: 24, scope: !7243)
!7256 = !DILocation(line: 187, column: 28, scope: !7243)
!7257 = !DILocation(line: 187, column: 15, scope: !7243)
!7258 = !DILocation(line: 187, column: 4, scope: !7243)
!7259 = !DILocation(line: 187, column: 13, scope: !7243)
!7260 = !DILocation(line: 188, column: 3, scope: !7243)
!7261 = !DILocation(line: 191, column: 24, scope: !7243)
!7262 = !DILocation(line: 191, column: 28, scope: !7243)
!7263 = !DILocation(line: 191, column: 15, scope: !7243)
!7264 = !DILocation(line: 191, column: 4, scope: !7243)
!7265 = !DILocation(line: 191, column: 13, scope: !7243)
!7266 = !DILocation(line: 192, column: 3, scope: !7243)
!7267 = !DILocation(line: 195, column: 3, scope: !7243)
!7268 = !DILocation(line: 198, column: 2, scope: !7232)
!7269 = !DILocation(line: 199, column: 1, scope: !7232)
!7270 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !104, file: !104, line: 655, type: !7271, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7271 = !DISubroutineType(types: !7272)
!7272 = !{!165, !3704}
!7273 = !DILocalVariable(name: "dev", arg: 1, scope: !7270, file: !104, line: 655, type: !3704)
!7274 = !DILocation(line: 655, column: 58, scope: !7270)
!7275 = !DILocation(line: 657, column: 9, scope: !7270)
!7276 = !DILocation(line: 657, column: 14, scope: !7270)
!7277 = !DILocation(line: 657, column: 2, scope: !7270)
!7278 = distinct !DISubprogram(name: "ir_establish_scancode", scope: !3, file: !3, line: 370, type: !7279, scopeLine: 373, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7279 = !DISubroutineType(types: !7280)
!7280 = !{!7, !237, !4372, !184, !488}
!7281 = !DILocalVariable(name: "dev", arg: 1, scope: !7278, file: !3, line: 370, type: !237)
!7282 = !DILocation(line: 370, column: 58, scope: !7278)
!7283 = !DILocalVariable(name: "rc_map", arg: 2, scope: !7278, file: !3, line: 371, type: !4372)
!7284 = !DILocation(line: 371, column: 23, scope: !7278)
!7285 = !DILocalVariable(name: "scancode", arg: 3, scope: !7278, file: !3, line: 372, type: !184)
!7286 = !DILocation(line: 372, column: 12, scope: !7278)
!7287 = !DILocalVariable(name: "resize", arg: 4, scope: !7278, file: !3, line: 372, type: !488)
!7288 = !DILocation(line: 372, column: 27, scope: !7278)
!7289 = !DILocalVariable(name: "i", scope: !7278, file: !3, line: 374, type: !7)
!7290 = !DILocation(line: 374, column: 15, scope: !7278)
!7291 = !DILocation(line: 384, column: 6, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 384, column: 6)
!7293 = !DILocation(line: 384, column: 11, scope: !7292)
!7294 = !DILocation(line: 384, column: 6, scope: !7278)
!7295 = !DILocation(line: 385, column: 15, scope: !7292)
!7296 = !DILocation(line: 385, column: 20, scope: !7292)
!7297 = !DILocation(line: 385, column: 12, scope: !7292)
!7298 = !DILocation(line: 385, column: 3, scope: !7292)
!7299 = !DILocation(line: 388, column: 9, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 388, column: 2)
!7301 = !DILocation(line: 388, column: 7, scope: !7300)
!7302 = !DILocation(line: 388, column: 14, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7300, file: !3, line: 388, column: 2)
!7304 = !DILocation(line: 388, column: 18, scope: !7303)
!7305 = !DILocation(line: 388, column: 26, scope: !7303)
!7306 = !DILocation(line: 388, column: 16, scope: !7303)
!7307 = !DILocation(line: 388, column: 2, scope: !7300)
!7308 = !DILocation(line: 389, column: 7, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 389, column: 7)
!7310 = distinct !DILexicalBlock(scope: !7303, file: !3, line: 388, column: 36)
!7311 = !DILocation(line: 389, column: 15, scope: !7309)
!7312 = !DILocation(line: 389, column: 20, scope: !7309)
!7313 = !DILocation(line: 389, column: 23, scope: !7309)
!7314 = !DILocation(line: 389, column: 35, scope: !7309)
!7315 = !DILocation(line: 389, column: 32, scope: !7309)
!7316 = !DILocation(line: 389, column: 7, scope: !7310)
!7317 = !DILocation(line: 390, column: 11, scope: !7309)
!7318 = !DILocation(line: 390, column: 4, scope: !7309)
!7319 = !DILocation(line: 393, column: 7, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 393, column: 7)
!7321 = !DILocation(line: 393, column: 15, scope: !7320)
!7322 = !DILocation(line: 393, column: 20, scope: !7320)
!7323 = !DILocation(line: 393, column: 23, scope: !7320)
!7324 = !DILocation(line: 393, column: 35, scope: !7320)
!7325 = !DILocation(line: 393, column: 32, scope: !7320)
!7326 = !DILocation(line: 393, column: 7, scope: !7310)
!7327 = !DILocation(line: 394, column: 4, scope: !7320)
!7328 = !DILocation(line: 395, column: 2, scope: !7310)
!7329 = !DILocation(line: 388, column: 32, scope: !7303)
!7330 = !DILocation(line: 388, column: 2, scope: !7303)
!7331 = distinct !{!7331, !7307, !7332}
!7332 = !DILocation(line: 395, column: 2, scope: !7300)
!7333 = !DILocation(line: 398, column: 6, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 398, column: 6)
!7335 = !DILocation(line: 398, column: 14, scope: !7334)
!7336 = !DILocation(line: 398, column: 22, scope: !7334)
!7337 = !DILocation(line: 398, column: 30, scope: !7334)
!7338 = !DILocation(line: 398, column: 19, scope: !7334)
!7339 = !DILocation(line: 398, column: 6, scope: !7278)
!7340 = !DILocation(line: 399, column: 8, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 399, column: 7)
!7342 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 398, column: 35)
!7343 = !DILocation(line: 399, column: 15, scope: !7341)
!7344 = !DILocation(line: 399, column: 34, scope: !7341)
!7345 = !DILocation(line: 399, column: 39, scope: !7341)
!7346 = !DILocation(line: 399, column: 18, scope: !7341)
!7347 = !DILocation(line: 399, column: 7, scope: !7342)
!7348 = !DILocation(line: 400, column: 4, scope: !7341)
!7349 = !DILocation(line: 401, column: 2, scope: !7342)
!7350 = !DILocation(line: 404, column: 6, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 404, column: 6)
!7352 = !DILocation(line: 404, column: 10, scope: !7351)
!7353 = !DILocation(line: 404, column: 18, scope: !7351)
!7354 = !DILocation(line: 404, column: 8, scope: !7351)
!7355 = !DILocation(line: 404, column: 6, scope: !7278)
!7356 = !DILocation(line: 405, column: 12, scope: !7351)
!7357 = !DILocation(line: 405, column: 20, scope: !7351)
!7358 = !DILocation(line: 405, column: 25, scope: !7351)
!7359 = !DILocation(line: 405, column: 27, scope: !7351)
!7360 = !DILocation(line: 405, column: 3, scope: !7351)
!7361 = !DILocation(line: 405, column: 34, scope: !7351)
!7362 = !DILocation(line: 405, column: 42, scope: !7351)
!7363 = !DILocation(line: 405, column: 47, scope: !7351)
!7364 = !DILocation(line: 406, column: 5, scope: !7351)
!7365 = !DILocation(line: 406, column: 13, scope: !7351)
!7366 = !DILocation(line: 406, column: 19, scope: !7351)
!7367 = !DILocation(line: 406, column: 17, scope: !7351)
!7368 = !DILocation(line: 406, column: 4, scope: !7351)
!7369 = !DILocation(line: 406, column: 22, scope: !7351)
!7370 = !DILocation(line: 407, column: 29, scope: !7278)
!7371 = !DILocation(line: 407, column: 2, scope: !7278)
!7372 = !DILocation(line: 407, column: 10, scope: !7278)
!7373 = !DILocation(line: 407, column: 15, scope: !7278)
!7374 = !DILocation(line: 407, column: 18, scope: !7278)
!7375 = !DILocation(line: 407, column: 27, scope: !7278)
!7376 = !DILocation(line: 408, column: 2, scope: !7278)
!7377 = !DILocation(line: 408, column: 10, scope: !7278)
!7378 = !DILocation(line: 408, column: 15, scope: !7278)
!7379 = !DILocation(line: 408, column: 18, scope: !7278)
!7380 = !DILocation(line: 408, column: 26, scope: !7278)
!7381 = !DILocation(line: 409, column: 2, scope: !7278)
!7382 = !DILocation(line: 409, column: 10, scope: !7278)
!7383 = !DILocation(line: 409, column: 13, scope: !7278)
!7384 = !DILocation(line: 411, column: 9, scope: !7278)
!7385 = !DILocation(line: 411, column: 2, scope: !7278)
!7386 = !DILocation(line: 412, column: 1, scope: !7278)
!7387 = distinct !DISubprogram(name: "ir_update_mapping", scope: !3, file: !3, line: 313, type: !7388, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7388 = !DISubroutineType(types: !7389)
!7389 = !{!7, !237, !4372, !7, !7}
!7390 = !DILocalVariable(name: "dev", arg: 1, scope: !7387, file: !3, line: 313, type: !237)
!7391 = !DILocation(line: 313, column: 54, scope: !7387)
!7392 = !DILocalVariable(name: "rc_map", arg: 2, scope: !7387, file: !3, line: 314, type: !4372)
!7393 = !DILocation(line: 314, column: 26, scope: !7387)
!7394 = !DILocalVariable(name: "index", arg: 3, scope: !7387, file: !3, line: 315, type: !7)
!7395 = !DILocation(line: 315, column: 24, scope: !7387)
!7396 = !DILocalVariable(name: "new_keycode", arg: 4, scope: !7387, file: !3, line: 316, type: !7)
!7397 = !DILocation(line: 316, column: 24, scope: !7387)
!7398 = !DILocalVariable(name: "old_keycode", scope: !7387, file: !3, line: 318, type: !159)
!7399 = !DILocation(line: 318, column: 6, scope: !7387)
!7400 = !DILocation(line: 318, column: 20, scope: !7387)
!7401 = !DILocation(line: 318, column: 28, scope: !7387)
!7402 = !DILocation(line: 318, column: 33, scope: !7387)
!7403 = !DILocation(line: 318, column: 40, scope: !7387)
!7404 = !DILocalVariable(name: "i", scope: !7387, file: !3, line: 319, type: !159)
!7405 = !DILocation(line: 319, column: 6, scope: !7387)
!7406 = !DILocation(line: 322, column: 6, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 322, column: 6)
!7408 = !DILocation(line: 322, column: 18, scope: !7407)
!7409 = !DILocation(line: 322, column: 34, scope: !7407)
!7410 = !DILocation(line: 322, column: 37, scope: !7407)
!7411 = !DILocation(line: 322, column: 49, scope: !7407)
!7412 = !DILocation(line: 322, column: 6, scope: !7387)
!7413 = !DILocation(line: 325, column: 3, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 322, column: 65)
!7415 = !DILocation(line: 325, column: 11, scope: !7414)
!7416 = !DILocation(line: 325, column: 14, scope: !7414)
!7417 = !DILocation(line: 326, column: 12, scope: !7414)
!7418 = !DILocation(line: 326, column: 20, scope: !7414)
!7419 = !DILocation(line: 326, column: 25, scope: !7414)
!7420 = !DILocation(line: 326, column: 3, scope: !7414)
!7421 = !DILocation(line: 326, column: 34, scope: !7414)
!7422 = !DILocation(line: 326, column: 42, scope: !7414)
!7423 = !DILocation(line: 326, column: 47, scope: !7414)
!7424 = !DILocation(line: 326, column: 52, scope: !7414)
!7425 = !DILocation(line: 327, column: 5, scope: !7414)
!7426 = !DILocation(line: 327, column: 13, scope: !7414)
!7427 = !DILocation(line: 327, column: 19, scope: !7414)
!7428 = !DILocation(line: 327, column: 17, scope: !7414)
!7429 = !DILocation(line: 327, column: 4, scope: !7414)
!7430 = !DILocation(line: 327, column: 26, scope: !7414)
!7431 = !DILocation(line: 328, column: 2, scope: !7414)
!7432 = !DILocation(line: 333, column: 33, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 328, column: 9)
!7434 = !DILocation(line: 333, column: 3, scope: !7433)
!7435 = !DILocation(line: 333, column: 11, scope: !7433)
!7436 = !DILocation(line: 333, column: 16, scope: !7433)
!7437 = !DILocation(line: 333, column: 23, scope: !7433)
!7438 = !DILocation(line: 333, column: 31, scope: !7433)
!7439 = !DILocation(line: 334, column: 13, scope: !7433)
!7440 = !DILocation(line: 334, column: 26, scope: !7433)
!7441 = !DILocation(line: 334, column: 31, scope: !7433)
!7442 = !DILocation(line: 334, column: 42, scope: !7433)
!7443 = !DILocation(line: 334, column: 3, scope: !7433)
!7444 = !DILocation(line: 337, column: 6, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7387, file: !3, line: 337, column: 6)
!7446 = !DILocation(line: 337, column: 18, scope: !7445)
!7447 = !DILocation(line: 337, column: 6, scope: !7387)
!7448 = !DILocation(line: 339, column: 15, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 337, column: 35)
!7450 = !DILocation(line: 339, column: 28, scope: !7449)
!7451 = !DILocation(line: 339, column: 33, scope: !7449)
!7452 = !DILocation(line: 339, column: 44, scope: !7449)
!7453 = !DILocation(line: 339, column: 3, scope: !7449)
!7454 = !DILocation(line: 341, column: 10, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7449, file: !3, line: 341, column: 3)
!7456 = !DILocation(line: 341, column: 8, scope: !7455)
!7457 = !DILocation(line: 341, column: 15, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 341, column: 3)
!7459 = !DILocation(line: 341, column: 19, scope: !7458)
!7460 = !DILocation(line: 341, column: 27, scope: !7458)
!7461 = !DILocation(line: 341, column: 17, scope: !7458)
!7462 = !DILocation(line: 341, column: 3, scope: !7455)
!7463 = !DILocation(line: 342, column: 8, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 342, column: 8)
!7465 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 341, column: 37)
!7466 = !DILocation(line: 342, column: 16, scope: !7464)
!7467 = !DILocation(line: 342, column: 21, scope: !7464)
!7468 = !DILocation(line: 342, column: 24, scope: !7464)
!7469 = !DILocation(line: 342, column: 35, scope: !7464)
!7470 = !DILocation(line: 342, column: 32, scope: !7464)
!7471 = !DILocation(line: 342, column: 8, scope: !7465)
!7472 = !DILocation(line: 343, column: 15, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7464, file: !3, line: 342, column: 48)
!7474 = !DILocation(line: 343, column: 28, scope: !7473)
!7475 = !DILocation(line: 343, column: 33, scope: !7473)
!7476 = !DILocation(line: 343, column: 44, scope: !7473)
!7477 = !DILocation(line: 343, column: 5, scope: !7473)
!7478 = !DILocation(line: 344, column: 5, scope: !7473)
!7479 = !DILocation(line: 346, column: 3, scope: !7465)
!7480 = !DILocation(line: 341, column: 33, scope: !7458)
!7481 = !DILocation(line: 341, column: 3, scope: !7458)
!7482 = distinct !{!7482, !7462, !7483}
!7483 = !DILocation(line: 346, column: 3, scope: !7455)
!7484 = !DILocation(line: 349, column: 19, scope: !7449)
!7485 = !DILocation(line: 349, column: 24, scope: !7449)
!7486 = !DILocation(line: 349, column: 3, scope: !7449)
!7487 = !DILocation(line: 350, column: 2, scope: !7449)
!7488 = !DILocation(line: 352, column: 9, scope: !7387)
!7489 = !DILocation(line: 352, column: 2, scope: !7387)
!7490 = distinct !DISubprogram(name: "ir_resize_table", scope: !3, file: !3, line: 262, type: !7491, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7491 = !DISubroutineType(types: !7492)
!7492 = !{!159, !237, !4372, !160}
!7493 = !DILocation(line: 445, column: 72, scope: !5539, inlinedAt: !7494)
!7494 = distinct !DILocation(line: 552, column: 10, scope: !5544, inlinedAt: !7495)
!7495 = distinct !DILocation(line: 288, column: 12, scope: !7490)
!7496 = !DILocation(line: 446, column: 9, scope: !5539, inlinedAt: !7494)
!7497 = !DILocation(line: 446, column: 23, scope: !5539, inlinedAt: !7494)
!7498 = !DILocation(line: 448, column: 8, scope: !5539, inlinedAt: !7494)
!7499 = !DILocation(line: 318, column: 67, scope: !5555, inlinedAt: !7500)
!7500 = distinct !DILocation(line: 553, column: 20, scope: !5544, inlinedAt: !7495)
!7501 = !DILocation(line: 346, column: 58, scope: !5561, inlinedAt: !7502)
!7502 = distinct !DILocation(line: 547, column: 11, scope: !5544, inlinedAt: !7495)
!7503 = !DILocation(line: 472, column: 28, scope: !5567, inlinedAt: !7504)
!7504 = distinct !DILocation(line: 481, column: 9, scope: !5572, inlinedAt: !7505)
!7505 = distinct !DILocation(line: 545, column: 11, scope: !5574, inlinedAt: !7495)
!7506 = !DILocation(line: 472, column: 40, scope: !5567, inlinedAt: !7504)
!7507 = !DILocation(line: 472, column: 60, scope: !5567, inlinedAt: !7504)
!7508 = !DILocation(line: 478, column: 51, scope: !5572, inlinedAt: !7505)
!7509 = !DILocation(line: 478, column: 63, scope: !5572, inlinedAt: !7505)
!7510 = !DILocation(line: 480, column: 15, scope: !5572, inlinedAt: !7505)
!7511 = !DILocation(line: 538, column: 45, scope: !5546, inlinedAt: !7495)
!7512 = !DILocation(line: 538, column: 57, scope: !5546, inlinedAt: !7495)
!7513 = !DILocation(line: 542, column: 16, scope: !5544, inlinedAt: !7495)
!7514 = !DILocalVariable(name: "dev", arg: 1, scope: !7490, file: !3, line: 262, type: !237)
!7515 = !DILocation(line: 262, column: 43, scope: !7490)
!7516 = !DILocalVariable(name: "rc_map", arg: 2, scope: !7490, file: !3, line: 262, type: !4372)
!7517 = !DILocation(line: 262, column: 63, scope: !7490)
!7518 = !DILocalVariable(name: "gfp_flags", arg: 3, scope: !7490, file: !3, line: 263, type: !160)
!7519 = !DILocation(line: 263, column: 13, scope: !7490)
!7520 = !DILocalVariable(name: "oldalloc", scope: !7490, file: !3, line: 265, type: !7)
!7521 = !DILocation(line: 265, column: 15, scope: !7490)
!7522 = !DILocation(line: 265, column: 26, scope: !7490)
!7523 = !DILocation(line: 265, column: 34, scope: !7490)
!7524 = !DILocalVariable(name: "newalloc", scope: !7490, file: !3, line: 266, type: !7)
!7525 = !DILocation(line: 266, column: 15, scope: !7490)
!7526 = !DILocation(line: 266, column: 26, scope: !7490)
!7527 = !DILocalVariable(name: "oldscan", scope: !7490, file: !3, line: 267, type: !180)
!7528 = !DILocation(line: 267, column: 23, scope: !7490)
!7529 = !DILocation(line: 267, column: 33, scope: !7490)
!7530 = !DILocation(line: 267, column: 41, scope: !7490)
!7531 = !DILocalVariable(name: "newscan", scope: !7490, file: !3, line: 268, type: !180)
!7532 = !DILocation(line: 268, column: 23, scope: !7490)
!7533 = !DILocation(line: 270, column: 6, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 270, column: 6)
!7535 = !DILocation(line: 270, column: 14, scope: !7534)
!7536 = !DILocation(line: 270, column: 22, scope: !7534)
!7537 = !DILocation(line: 270, column: 30, scope: !7534)
!7538 = !DILocation(line: 270, column: 19, scope: !7534)
!7539 = !DILocation(line: 270, column: 6, scope: !7490)
!7540 = !DILocation(line: 272, column: 7, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 272, column: 7)
!7542 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 270, column: 35)
!7543 = !DILocation(line: 272, column: 15, scope: !7541)
!7544 = !DILocation(line: 272, column: 21, scope: !7541)
!7545 = !DILocation(line: 272, column: 7, scope: !7542)
!7546 = !DILocation(line: 273, column: 4, scope: !7541)
!7547 = !DILocation(line: 275, column: 12, scope: !7542)
!7548 = !DILocation(line: 277, column: 2, scope: !7542)
!7549 = !DILocation(line: 279, column: 7, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 279, column: 6)
!7551 = !DILocation(line: 279, column: 15, scope: !7550)
!7552 = !DILocation(line: 279, column: 19, scope: !7550)
!7553 = !DILocation(line: 279, column: 25, scope: !7550)
!7554 = !DILocation(line: 279, column: 33, scope: !7550)
!7555 = !DILocation(line: 279, column: 23, scope: !7550)
!7556 = !DILocation(line: 279, column: 39, scope: !7550)
!7557 = !DILocation(line: 279, column: 43, scope: !7550)
!7558 = !DILocation(line: 279, column: 52, scope: !7550)
!7559 = !DILocation(line: 279, column: 6, scope: !7490)
!7560 = !DILocation(line: 281, column: 12, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7550, file: !3, line: 279, column: 72)
!7562 = !DILocation(line: 283, column: 2, scope: !7561)
!7563 = !DILocation(line: 285, column: 6, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 285, column: 6)
!7565 = !DILocation(line: 285, column: 18, scope: !7564)
!7566 = !DILocation(line: 285, column: 15, scope: !7564)
!7567 = !DILocation(line: 285, column: 6, scope: !7490)
!7568 = !DILocation(line: 286, column: 3, scope: !7564)
!7569 = !DILocation(line: 288, column: 20, scope: !7490)
!7570 = !DILocation(line: 288, column: 30, scope: !7490)
!7571 = !DILocation(line: 540, column: 27, scope: !5545, inlinedAt: !7495)
!7572 = !DILocation(line: 540, column: 6, scope: !5545, inlinedAt: !7495)
!7573 = !DILocation(line: 540, column: 6, scope: !5546, inlinedAt: !7495)
!7574 = !DILocation(line: 544, column: 7, scope: !5574, inlinedAt: !7495)
!7575 = !DILocation(line: 544, column: 12, scope: !5574, inlinedAt: !7495)
!7576 = !DILocation(line: 544, column: 7, scope: !5544, inlinedAt: !7495)
!7577 = !DILocation(line: 545, column: 25, scope: !5574, inlinedAt: !7495)
!7578 = !DILocation(line: 545, column: 31, scope: !5574, inlinedAt: !7495)
!7579 = !DILocation(line: 480, column: 33, scope: !5572, inlinedAt: !7505)
!7580 = !DILocation(line: 480, column: 23, scope: !5572, inlinedAt: !7505)
!7581 = !DILocation(line: 481, column: 29, scope: !5572, inlinedAt: !7505)
!7582 = !DILocation(line: 481, column: 35, scope: !5572, inlinedAt: !7505)
!7583 = !DILocation(line: 481, column: 42, scope: !5572, inlinedAt: !7505)
!7584 = !DILocation(line: 474, column: 23, scope: !5567, inlinedAt: !7504)
!7585 = !DILocation(line: 474, column: 29, scope: !5567, inlinedAt: !7504)
!7586 = !DILocation(line: 474, column: 36, scope: !5567, inlinedAt: !7504)
!7587 = !DILocation(line: 474, column: 9, scope: !5567, inlinedAt: !7504)
!7588 = !DILocation(line: 545, column: 4, scope: !5574, inlinedAt: !7495)
!7589 = !DILocation(line: 547, column: 25, scope: !5544, inlinedAt: !7495)
!7590 = !DILocation(line: 348, column: 7, scope: !5618, inlinedAt: !7502)
!7591 = !DILocation(line: 348, column: 6, scope: !5561, inlinedAt: !7502)
!7592 = !DILocation(line: 349, column: 3, scope: !5618, inlinedAt: !7502)
!7593 = !DILocation(line: 351, column: 6, scope: !5622, inlinedAt: !7502)
!7594 = !DILocation(line: 351, column: 11, scope: !5622, inlinedAt: !7502)
!7595 = !DILocation(line: 351, column: 6, scope: !5561, inlinedAt: !7502)
!7596 = !DILocation(line: 352, column: 3, scope: !5622, inlinedAt: !7502)
!7597 = !DILocation(line: 354, column: 32, scope: !5627, inlinedAt: !7502)
!7598 = !DILocation(line: 354, column: 37, scope: !5627, inlinedAt: !7502)
!7599 = !DILocation(line: 354, column: 42, scope: !5627, inlinedAt: !7502)
!7600 = !DILocation(line: 354, column: 45, scope: !5627, inlinedAt: !7502)
!7601 = !DILocation(line: 354, column: 50, scope: !5627, inlinedAt: !7502)
!7602 = !DILocation(line: 354, column: 6, scope: !5561, inlinedAt: !7502)
!7603 = !DILocation(line: 355, column: 3, scope: !5627, inlinedAt: !7502)
!7604 = !DILocation(line: 356, column: 32, scope: !5635, inlinedAt: !7502)
!7605 = !DILocation(line: 356, column: 37, scope: !5635, inlinedAt: !7502)
!7606 = !DILocation(line: 356, column: 43, scope: !5635, inlinedAt: !7502)
!7607 = !DILocation(line: 356, column: 46, scope: !5635, inlinedAt: !7502)
!7608 = !DILocation(line: 356, column: 51, scope: !5635, inlinedAt: !7502)
!7609 = !DILocation(line: 356, column: 6, scope: !5561, inlinedAt: !7502)
!7610 = !DILocation(line: 357, column: 3, scope: !5635, inlinedAt: !7502)
!7611 = !DILocation(line: 358, column: 6, scope: !5643, inlinedAt: !7502)
!7612 = !DILocation(line: 358, column: 11, scope: !5643, inlinedAt: !7502)
!7613 = !DILocation(line: 358, column: 6, scope: !5561, inlinedAt: !7502)
!7614 = !DILocation(line: 358, column: 26, scope: !5643, inlinedAt: !7502)
!7615 = !DILocation(line: 359, column: 6, scope: !5648, inlinedAt: !7502)
!7616 = !DILocation(line: 359, column: 11, scope: !5648, inlinedAt: !7502)
!7617 = !DILocation(line: 359, column: 6, scope: !5561, inlinedAt: !7502)
!7618 = !DILocation(line: 359, column: 26, scope: !5648, inlinedAt: !7502)
!7619 = !DILocation(line: 360, column: 6, scope: !5653, inlinedAt: !7502)
!7620 = !DILocation(line: 360, column: 11, scope: !5653, inlinedAt: !7502)
!7621 = !DILocation(line: 360, column: 6, scope: !5561, inlinedAt: !7502)
!7622 = !DILocation(line: 360, column: 26, scope: !5653, inlinedAt: !7502)
!7623 = !DILocation(line: 361, column: 6, scope: !5658, inlinedAt: !7502)
!7624 = !DILocation(line: 361, column: 11, scope: !5658, inlinedAt: !7502)
!7625 = !DILocation(line: 361, column: 6, scope: !5561, inlinedAt: !7502)
!7626 = !DILocation(line: 361, column: 26, scope: !5658, inlinedAt: !7502)
!7627 = !DILocation(line: 362, column: 6, scope: !5663, inlinedAt: !7502)
!7628 = !DILocation(line: 362, column: 11, scope: !5663, inlinedAt: !7502)
!7629 = !DILocation(line: 362, column: 6, scope: !5561, inlinedAt: !7502)
!7630 = !DILocation(line: 362, column: 26, scope: !5663, inlinedAt: !7502)
!7631 = !DILocation(line: 363, column: 6, scope: !5668, inlinedAt: !7502)
!7632 = !DILocation(line: 363, column: 11, scope: !5668, inlinedAt: !7502)
!7633 = !DILocation(line: 363, column: 6, scope: !5561, inlinedAt: !7502)
!7634 = !DILocation(line: 363, column: 26, scope: !5668, inlinedAt: !7502)
!7635 = !DILocation(line: 364, column: 6, scope: !5673, inlinedAt: !7502)
!7636 = !DILocation(line: 364, column: 11, scope: !5673, inlinedAt: !7502)
!7637 = !DILocation(line: 364, column: 6, scope: !5561, inlinedAt: !7502)
!7638 = !DILocation(line: 364, column: 26, scope: !5673, inlinedAt: !7502)
!7639 = !DILocation(line: 365, column: 6, scope: !5678, inlinedAt: !7502)
!7640 = !DILocation(line: 365, column: 11, scope: !5678, inlinedAt: !7502)
!7641 = !DILocation(line: 365, column: 6, scope: !5561, inlinedAt: !7502)
!7642 = !DILocation(line: 365, column: 26, scope: !5678, inlinedAt: !7502)
!7643 = !DILocation(line: 366, column: 6, scope: !5683, inlinedAt: !7502)
!7644 = !DILocation(line: 366, column: 11, scope: !5683, inlinedAt: !7502)
!7645 = !DILocation(line: 366, column: 6, scope: !5561, inlinedAt: !7502)
!7646 = !DILocation(line: 366, column: 26, scope: !5683, inlinedAt: !7502)
!7647 = !DILocation(line: 367, column: 6, scope: !5688, inlinedAt: !7502)
!7648 = !DILocation(line: 367, column: 11, scope: !5688, inlinedAt: !7502)
!7649 = !DILocation(line: 367, column: 6, scope: !5561, inlinedAt: !7502)
!7650 = !DILocation(line: 367, column: 26, scope: !5688, inlinedAt: !7502)
!7651 = !DILocation(line: 368, column: 6, scope: !5693, inlinedAt: !7502)
!7652 = !DILocation(line: 368, column: 11, scope: !5693, inlinedAt: !7502)
!7653 = !DILocation(line: 368, column: 6, scope: !5561, inlinedAt: !7502)
!7654 = !DILocation(line: 368, column: 26, scope: !5693, inlinedAt: !7502)
!7655 = !DILocation(line: 369, column: 6, scope: !5698, inlinedAt: !7502)
!7656 = !DILocation(line: 369, column: 11, scope: !5698, inlinedAt: !7502)
!7657 = !DILocation(line: 369, column: 6, scope: !5561, inlinedAt: !7502)
!7658 = !DILocation(line: 369, column: 26, scope: !5698, inlinedAt: !7502)
!7659 = !DILocation(line: 370, column: 6, scope: !5703, inlinedAt: !7502)
!7660 = !DILocation(line: 370, column: 11, scope: !5703, inlinedAt: !7502)
!7661 = !DILocation(line: 370, column: 6, scope: !5561, inlinedAt: !7502)
!7662 = !DILocation(line: 370, column: 26, scope: !5703, inlinedAt: !7502)
!7663 = !DILocation(line: 371, column: 6, scope: !5708, inlinedAt: !7502)
!7664 = !DILocation(line: 371, column: 11, scope: !5708, inlinedAt: !7502)
!7665 = !DILocation(line: 371, column: 6, scope: !5561, inlinedAt: !7502)
!7666 = !DILocation(line: 371, column: 26, scope: !5708, inlinedAt: !7502)
!7667 = !DILocation(line: 372, column: 6, scope: !5713, inlinedAt: !7502)
!7668 = !DILocation(line: 372, column: 11, scope: !5713, inlinedAt: !7502)
!7669 = !DILocation(line: 372, column: 6, scope: !5561, inlinedAt: !7502)
!7670 = !DILocation(line: 372, column: 26, scope: !5713, inlinedAt: !7502)
!7671 = !DILocation(line: 373, column: 6, scope: !5718, inlinedAt: !7502)
!7672 = !DILocation(line: 373, column: 11, scope: !5718, inlinedAt: !7502)
!7673 = !DILocation(line: 373, column: 6, scope: !5561, inlinedAt: !7502)
!7674 = !DILocation(line: 373, column: 26, scope: !5718, inlinedAt: !7502)
!7675 = !DILocation(line: 374, column: 6, scope: !5723, inlinedAt: !7502)
!7676 = !DILocation(line: 374, column: 11, scope: !5723, inlinedAt: !7502)
!7677 = !DILocation(line: 374, column: 6, scope: !5561, inlinedAt: !7502)
!7678 = !DILocation(line: 374, column: 26, scope: !5723, inlinedAt: !7502)
!7679 = !DILocation(line: 375, column: 6, scope: !5728, inlinedAt: !7502)
!7680 = !DILocation(line: 375, column: 11, scope: !5728, inlinedAt: !7502)
!7681 = !DILocation(line: 375, column: 6, scope: !5561, inlinedAt: !7502)
!7682 = !DILocation(line: 375, column: 27, scope: !5728, inlinedAt: !7502)
!7683 = !DILocation(line: 376, column: 6, scope: !5733, inlinedAt: !7502)
!7684 = !DILocation(line: 376, column: 11, scope: !5733, inlinedAt: !7502)
!7685 = !DILocation(line: 376, column: 6, scope: !5561, inlinedAt: !7502)
!7686 = !DILocation(line: 376, column: 32, scope: !5733, inlinedAt: !7502)
!7687 = !DILocation(line: 377, column: 6, scope: !5738, inlinedAt: !7502)
!7688 = !DILocation(line: 377, column: 11, scope: !5738, inlinedAt: !7502)
!7689 = !DILocation(line: 377, column: 6, scope: !5561, inlinedAt: !7502)
!7690 = !DILocation(line: 377, column: 32, scope: !5738, inlinedAt: !7502)
!7691 = !DILocation(line: 378, column: 6, scope: !5743, inlinedAt: !7502)
!7692 = !DILocation(line: 378, column: 11, scope: !5743, inlinedAt: !7502)
!7693 = !DILocation(line: 378, column: 6, scope: !5561, inlinedAt: !7502)
!7694 = !DILocation(line: 378, column: 32, scope: !5743, inlinedAt: !7502)
!7695 = !DILocation(line: 379, column: 6, scope: !5748, inlinedAt: !7502)
!7696 = !DILocation(line: 379, column: 11, scope: !5748, inlinedAt: !7502)
!7697 = !DILocation(line: 379, column: 6, scope: !5561, inlinedAt: !7502)
!7698 = !DILocation(line: 379, column: 33, scope: !5748, inlinedAt: !7502)
!7699 = !DILocation(line: 380, column: 6, scope: !5753, inlinedAt: !7502)
!7700 = !DILocation(line: 380, column: 11, scope: !5753, inlinedAt: !7502)
!7701 = !DILocation(line: 380, column: 6, scope: !5561, inlinedAt: !7502)
!7702 = !DILocation(line: 380, column: 33, scope: !5753, inlinedAt: !7502)
!7703 = !DILocation(line: 381, column: 6, scope: !5758, inlinedAt: !7502)
!7704 = !DILocation(line: 381, column: 11, scope: !5758, inlinedAt: !7502)
!7705 = !DILocation(line: 381, column: 6, scope: !5561, inlinedAt: !7502)
!7706 = !DILocation(line: 381, column: 33, scope: !5758, inlinedAt: !7502)
!7707 = !DILocation(line: 382, column: 2, scope: !5763, inlinedAt: !7502)
!7708 = !DILocation(line: 382, column: 2, scope: !5767, inlinedAt: !7502)
!7709 = !DILocation(line: 382, column: 2, scope: !5768, inlinedAt: !7502)
!7710 = !DILocation(line: 386, column: 1, scope: !5561, inlinedAt: !7502)
!7711 = !DILocation(line: 547, column: 9, scope: !5544, inlinedAt: !7495)
!7712 = !DILocation(line: 549, column: 8, scope: !5774, inlinedAt: !7495)
!7713 = !DILocation(line: 549, column: 7, scope: !5544, inlinedAt: !7495)
!7714 = !DILocation(line: 550, column: 4, scope: !5774, inlinedAt: !7495)
!7715 = !DILocation(line: 553, column: 33, scope: !5544, inlinedAt: !7495)
!7716 = !DILocation(line: 325, column: 6, scope: !5779, inlinedAt: !7500)
!7717 = !DILocation(line: 325, column: 6, scope: !5555, inlinedAt: !7500)
!7718 = !DILocation(line: 326, column: 3, scope: !5779, inlinedAt: !7500)
!7719 = !DILocation(line: 332, column: 9, scope: !5555, inlinedAt: !7500)
!7720 = !DILocation(line: 332, column: 15, scope: !5555, inlinedAt: !7500)
!7721 = !DILocation(line: 332, column: 2, scope: !5555, inlinedAt: !7500)
!7722 = !DILocation(line: 336, column: 1, scope: !5555, inlinedAt: !7500)
!7723 = !DILocation(line: 553, column: 5, scope: !5544, inlinedAt: !7495)
!7724 = !DILocation(line: 553, column: 41, scope: !5544, inlinedAt: !7495)
!7725 = !DILocation(line: 554, column: 5, scope: !5544, inlinedAt: !7495)
!7726 = !DILocation(line: 554, column: 12, scope: !5544, inlinedAt: !7495)
!7727 = !DILocation(line: 448, column: 31, scope: !5539, inlinedAt: !7494)
!7728 = !DILocation(line: 448, column: 34, scope: !5539, inlinedAt: !7494)
!7729 = !DILocation(line: 448, column: 14, scope: !5539, inlinedAt: !7494)
!7730 = !DILocation(line: 450, column: 22, scope: !5539, inlinedAt: !7494)
!7731 = !DILocation(line: 450, column: 25, scope: !5539, inlinedAt: !7494)
!7732 = !DILocation(line: 450, column: 30, scope: !5539, inlinedAt: !7494)
!7733 = !DILocation(line: 450, column: 36, scope: !5539, inlinedAt: !7494)
!7734 = !DILocation(line: 450, column: 8, scope: !5539, inlinedAt: !7494)
!7735 = !DILocation(line: 450, column: 6, scope: !5539, inlinedAt: !7494)
!7736 = !DILocation(line: 451, column: 9, scope: !5539, inlinedAt: !7494)
!7737 = !DILocation(line: 552, column: 3, scope: !5544, inlinedAt: !7495)
!7738 = !DILocation(line: 557, column: 19, scope: !5546, inlinedAt: !7495)
!7739 = !DILocation(line: 557, column: 25, scope: !5546, inlinedAt: !7495)
!7740 = !DILocation(line: 557, column: 9, scope: !5546, inlinedAt: !7495)
!7741 = !DILocation(line: 557, column: 2, scope: !5546, inlinedAt: !7495)
!7742 = !DILocation(line: 558, column: 1, scope: !5546, inlinedAt: !7495)
!7743 = !DILocation(line: 288, column: 12, scope: !7490)
!7744 = !DILocation(line: 288, column: 10, scope: !7490)
!7745 = !DILocation(line: 289, column: 7, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 289, column: 6)
!7747 = !DILocation(line: 289, column: 6, scope: !7490)
!7748 = !DILocation(line: 290, column: 3, scope: !7746)
!7749 = !DILocation(line: 292, column: 9, scope: !7490)
!7750 = !DILocation(line: 292, column: 2, scope: !7490)
!7751 = !DILocation(line: 292, column: 18, scope: !7490)
!7752 = !DILocation(line: 292, column: 26, scope: !7490)
!7753 = !DILocation(line: 292, column: 32, scope: !7490)
!7754 = !DILocation(line: 292, column: 40, scope: !7490)
!7755 = !DILocation(line: 292, column: 44, scope: !7490)
!7756 = !DILocation(line: 293, column: 17, scope: !7490)
!7757 = !DILocation(line: 293, column: 2, scope: !7490)
!7758 = !DILocation(line: 293, column: 10, scope: !7490)
!7759 = !DILocation(line: 293, column: 15, scope: !7490)
!7760 = !DILocation(line: 294, column: 18, scope: !7490)
!7761 = !DILocation(line: 294, column: 2, scope: !7490)
!7762 = !DILocation(line: 294, column: 10, scope: !7490)
!7763 = !DILocation(line: 294, column: 16, scope: !7490)
!7764 = !DILocation(line: 295, column: 17, scope: !7490)
!7765 = !DILocation(line: 295, column: 25, scope: !7490)
!7766 = !DILocation(line: 295, column: 31, scope: !7490)
!7767 = !DILocation(line: 295, column: 2, scope: !7490)
!7768 = !DILocation(line: 295, column: 10, scope: !7490)
!7769 = !DILocation(line: 295, column: 15, scope: !7490)
!7770 = !DILocation(line: 296, column: 8, scope: !7490)
!7771 = !DILocation(line: 296, column: 2, scope: !7490)
!7772 = !DILocation(line: 297, column: 2, scope: !7490)
!7773 = !DILocation(line: 298, column: 1, scope: !7490)
!7774 = distinct !DISubprogram(name: "__set_bit", scope: !7775, file: !7775, line: 25, type: !7776, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7775 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!7776 = !DISubroutineType(types: !7777)
!7777 = !{null, !215, !7778}
!7778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7779, size: 64)
!7779 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !214)
!7780 = !DILocalVariable(name: "nr", arg: 1, scope: !7781, file: !7156, line: 66, type: !215)
!7781 = distinct !DISubprogram(name: "arch___set_bit", scope: !7156, file: !7156, line: 66, type: !7776, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7782 = !DILocation(line: 66, column: 21, scope: !7781, inlinedAt: !7783)
!7783 = distinct !DILocation(line: 28, column: 2, scope: !7774)
!7784 = !DILocalVariable(name: "addr", arg: 2, scope: !7781, file: !7156, line: 66, type: !7778)
!7785 = !DILocation(line: 66, column: 49, scope: !7781, inlinedAt: !7783)
!7786 = !DILocalVariable(name: "v", arg: 1, scope: !7787, file: !7788, line: 39, type: !7791)
!7787 = distinct !DISubprogram(name: "instrument_write", scope: !7788, file: !7788, line: 39, type: !7789, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7788 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!7789 = !DISubroutineType(types: !7790)
!7790 = !{null, !7791, !328}
!7791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7792, size: 64)
!7792 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7793)
!7793 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!7794 = !DILocation(line: 39, column: 67, scope: !7787, inlinedAt: !7795)
!7795 = distinct !DILocation(line: 27, column: 2, scope: !7774)
!7796 = !DILocalVariable(name: "size", arg: 2, scope: !7787, file: !7788, line: 39, type: !328)
!7797 = !DILocation(line: 39, column: 77, scope: !7787, inlinedAt: !7795)
!7798 = !DILocalVariable(name: "nr", arg: 1, scope: !7774, file: !7775, line: 25, type: !215)
!7799 = !DILocation(line: 25, column: 35, scope: !7774)
!7800 = !DILocalVariable(name: "addr", arg: 2, scope: !7774, file: !7775, line: 25, type: !7778)
!7801 = !DILocation(line: 25, column: 63, scope: !7774)
!7802 = !DILocation(line: 27, column: 19, scope: !7774)
!7803 = !DILocation(line: 27, column: 26, scope: !7774)
!7804 = !DILocation(line: 27, column: 24, scope: !7774)
!7805 = !DILocation(line: 41, column: 20, scope: !7787, inlinedAt: !7795)
!7806 = !DILocation(line: 41, column: 23, scope: !7787, inlinedAt: !7795)
!7807 = !DILocation(line: 41, column: 2, scope: !7787, inlinedAt: !7795)
!7808 = !DILocation(line: 42, column: 2, scope: !7787, inlinedAt: !7795)
!7809 = !DILocation(line: 28, column: 17, scope: !7774)
!7810 = !DILocation(line: 28, column: 21, scope: !7774)
!7811 = !DILocation(line: 68, column: 44, scope: !7781, inlinedAt: !7783)
!7812 = !DILocation(line: 68, column: 56, scope: !7781, inlinedAt: !7783)
!7813 = !DILocation(line: 68, column: 2, scope: !7781, inlinedAt: !7783)
!7814 = !{i32 -2147087606}
!7815 = !DILocation(line: 29, column: 1, scope: !7774)
!7816 = distinct !DISubprogram(name: "__clear_bit", scope: !7775, file: !7775, line: 40, type: !7776, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7817 = !DILocalVariable(name: "nr", arg: 1, scope: !7818, file: !7156, line: 92, type: !215)
!7818 = distinct !DISubprogram(name: "arch___clear_bit", scope: !7156, file: !7156, line: 92, type: !7776, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7819 = !DILocation(line: 92, column: 23, scope: !7818, inlinedAt: !7820)
!7820 = distinct !DILocation(line: 43, column: 2, scope: !7816)
!7821 = !DILocalVariable(name: "addr", arg: 2, scope: !7818, file: !7156, line: 92, type: !7778)
!7822 = !DILocation(line: 92, column: 51, scope: !7818, inlinedAt: !7820)
!7823 = !DILocation(line: 39, column: 67, scope: !7787, inlinedAt: !7824)
!7824 = distinct !DILocation(line: 42, column: 2, scope: !7816)
!7825 = !DILocation(line: 39, column: 77, scope: !7787, inlinedAt: !7824)
!7826 = !DILocalVariable(name: "nr", arg: 1, scope: !7816, file: !7775, line: 40, type: !215)
!7827 = !DILocation(line: 40, column: 37, scope: !7816)
!7828 = !DILocalVariable(name: "addr", arg: 2, scope: !7816, file: !7775, line: 40, type: !7778)
!7829 = !DILocation(line: 40, column: 65, scope: !7816)
!7830 = !DILocation(line: 42, column: 19, scope: !7816)
!7831 = !DILocation(line: 42, column: 26, scope: !7816)
!7832 = !DILocation(line: 42, column: 24, scope: !7816)
!7833 = !DILocation(line: 41, column: 20, scope: !7787, inlinedAt: !7824)
!7834 = !DILocation(line: 41, column: 23, scope: !7787, inlinedAt: !7824)
!7835 = !DILocation(line: 41, column: 2, scope: !7787, inlinedAt: !7824)
!7836 = !DILocation(line: 42, column: 2, scope: !7787, inlinedAt: !7824)
!7837 = !DILocation(line: 43, column: 19, scope: !7816)
!7838 = !DILocation(line: 43, column: 23, scope: !7816)
!7839 = !DILocation(line: 94, column: 44, scope: !7818, inlinedAt: !7820)
!7840 = !DILocation(line: 94, column: 56, scope: !7818, inlinedAt: !7820)
!7841 = !DILocation(line: 94, column: 2, scope: !7818, inlinedAt: !7820)
!7842 = !{i32 -2147086407}
!7843 = !DILocation(line: 44, column: 1, scope: !7816)
!7844 = distinct !DISubprogram(name: "kasan_check_write", scope: !7845, file: !7845, line: 38, type: !7846, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7845 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7846 = !DISubroutineType(types: !7847)
!7847 = !{!488, !7791, !7}
!7848 = !DILocalVariable(name: "p", arg: 1, scope: !7844, file: !7845, line: 38, type: !7791)
!7849 = !DILocation(line: 38, column: 59, scope: !7844)
!7850 = !DILocalVariable(name: "size", arg: 2, scope: !7844, file: !7845, line: 38, type: !7)
!7851 = !DILocation(line: 38, column: 75, scope: !7844)
!7852 = !DILocation(line: 40, column: 2, scope: !7844)
!7853 = distinct !DISubprogram(name: "kcsan_check_access", scope: !7854, file: !7854, line: 178, type: !7855, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7854 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!7855 = !DISubroutineType(types: !7856)
!7856 = !{null, !7791, !328, !159}
!7857 = !DILocalVariable(name: "ptr", arg: 1, scope: !7853, file: !7854, line: 178, type: !7791)
!7858 = !DILocation(line: 178, column: 60, scope: !7853)
!7859 = !DILocalVariable(name: "size", arg: 2, scope: !7853, file: !7854, line: 178, type: !328)
!7860 = !DILocation(line: 178, column: 72, scope: !7853)
!7861 = !DILocalVariable(name: "type", arg: 3, scope: !7853, file: !7854, line: 179, type: !159)
!7862 = !DILocation(line: 179, column: 15, scope: !7853)
!7863 = !DILocation(line: 179, column: 23, scope: !7853)
!7864 = distinct !DISubprogram(name: "rc_dev_uevent", scope: !3, file: !3, line: 1616, type: !3382, scopeLine: 1617, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7865 = !DILocalVariable(name: "device", arg: 1, scope: !7864, file: !3, line: 1616, type: !3368)
!7866 = !DILocation(line: 1616, column: 41, scope: !7864)
!7867 = !DILocalVariable(name: "env", arg: 2, scope: !7864, file: !3, line: 1616, type: !278)
!7868 = !DILocation(line: 1616, column: 73, scope: !7864)
!7869 = !DILocalVariable(name: "dev", scope: !7864, file: !3, line: 1618, type: !237)
!7870 = !DILocation(line: 1618, column: 17, scope: !7864)
!7871 = !DILocalVariable(name: "__mptr", scope: !7872, file: !3, line: 1618, type: !165)
!7872 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 1618, column: 23)
!7873 = !DILocation(line: 1618, column: 23, scope: !7872)
!7874 = !DILocation(line: 1618, column: 23, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7872, file: !3, line: 1618, column: 23)
!7876 = !DILocalVariable(name: "ret", scope: !7864, file: !3, line: 1619, type: !159)
!7877 = !DILocation(line: 1619, column: 6, scope: !7864)
!7878 = !DILocation(line: 1621, column: 14, scope: !7864)
!7879 = !DILocation(line: 1621, column: 19, scope: !7864)
!7880 = !DILocation(line: 1621, column: 2, scope: !7864)
!7881 = !DILocation(line: 1623, column: 7, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 1623, column: 6)
!7883 = !DILocation(line: 1623, column: 12, scope: !7882)
!7884 = !DILocation(line: 1623, column: 6, scope: !7864)
!7885 = !DILocation(line: 1624, column: 7, scope: !7882)
!7886 = !DILocation(line: 1624, column: 3, scope: !7882)
!7887 = !DILocation(line: 1625, column: 6, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 1625, column: 6)
!7889 = !DILocation(line: 1625, column: 10, scope: !7888)
!7890 = !DILocation(line: 1625, column: 15, scope: !7888)
!7891 = !DILocation(line: 1625, column: 18, scope: !7888)
!7892 = !DILocation(line: 1625, column: 23, scope: !7888)
!7893 = !DILocation(line: 1625, column: 30, scope: !7888)
!7894 = !DILocation(line: 1625, column: 6, scope: !7864)
!7895 = !DILocation(line: 1626, column: 24, scope: !7888)
!7896 = !DILocation(line: 1626, column: 40, scope: !7888)
!7897 = !DILocation(line: 1626, column: 45, scope: !7888)
!7898 = !DILocation(line: 1626, column: 52, scope: !7888)
!7899 = !DILocation(line: 1626, column: 9, scope: !7888)
!7900 = !DILocation(line: 1626, column: 7, scope: !7888)
!7901 = !DILocation(line: 1626, column: 3, scope: !7888)
!7902 = !DILocation(line: 1627, column: 6, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 1627, column: 6)
!7904 = !DILocation(line: 1627, column: 10, scope: !7903)
!7905 = !DILocation(line: 1627, column: 15, scope: !7903)
!7906 = !DILocation(line: 1627, column: 18, scope: !7903)
!7907 = !DILocation(line: 1627, column: 23, scope: !7903)
!7908 = !DILocation(line: 1627, column: 6, scope: !7864)
!7909 = !DILocation(line: 1628, column: 24, scope: !7903)
!7910 = !DILocation(line: 1628, column: 44, scope: !7903)
!7911 = !DILocation(line: 1628, column: 49, scope: !7903)
!7912 = !DILocation(line: 1628, column: 9, scope: !7903)
!7913 = !DILocation(line: 1628, column: 7, scope: !7903)
!7914 = !DILocation(line: 1628, column: 3, scope: !7903)
!7915 = !DILocation(line: 1629, column: 6, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 1629, column: 6)
!7917 = !DILocation(line: 1629, column: 10, scope: !7916)
!7918 = !DILocation(line: 1629, column: 15, scope: !7916)
!7919 = !DILocation(line: 1629, column: 18, scope: !7916)
!7920 = !DILocation(line: 1629, column: 23, scope: !7916)
!7921 = !DILocation(line: 1629, column: 6, scope: !7864)
!7922 = !DILocation(line: 1630, column: 24, scope: !7916)
!7923 = !DILocation(line: 1630, column: 44, scope: !7916)
!7924 = !DILocation(line: 1630, column: 49, scope: !7916)
!7925 = !DILocation(line: 1630, column: 9, scope: !7916)
!7926 = !DILocation(line: 1630, column: 7, scope: !7916)
!7927 = !DILocation(line: 1630, column: 3, scope: !7916)
!7928 = !DILocation(line: 1632, column: 16, scope: !7864)
!7929 = !DILocation(line: 1632, column: 21, scope: !7864)
!7930 = !DILocation(line: 1632, column: 2, scope: !7864)
!7931 = !DILocation(line: 1634, column: 9, scope: !7864)
!7932 = !DILocation(line: 1634, column: 2, scope: !7864)
!7933 = distinct !DISubprogram(name: "rc_dev_release", scope: !3, file: !3, line: 1609, type: !3391, scopeLine: 1610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7934 = !DILocalVariable(name: "device", arg: 1, scope: !7933, file: !3, line: 1609, type: !3368)
!7935 = !DILocation(line: 1609, column: 43, scope: !7933)
!7936 = !DILocalVariable(name: "dev", scope: !7933, file: !3, line: 1611, type: !237)
!7937 = !DILocation(line: 1611, column: 17, scope: !7933)
!7938 = !DILocalVariable(name: "__mptr", scope: !7939, file: !3, line: 1611, type: !165)
!7939 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 1611, column: 23)
!7940 = !DILocation(line: 1611, column: 23, scope: !7939)
!7941 = !DILocation(line: 1611, column: 23, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1611, column: 23)
!7943 = !DILocation(line: 1613, column: 8, scope: !7933)
!7944 = !DILocation(line: 1613, column: 2, scope: !7933)
!7945 = !DILocation(line: 1614, column: 1, scope: !7933)
!7946 = distinct !DISubprogram(name: "rc_devnode", scope: !3, file: !3, line: 1019, type: !3782, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7947 = !DILocalVariable(name: "dev", arg: 1, scope: !7946, file: !3, line: 1019, type: !3368)
!7948 = !DILocation(line: 1019, column: 40, scope: !7946)
!7949 = !DILocalVariable(name: "mode", arg: 2, scope: !7946, file: !3, line: 1019, type: !3388)
!7950 = !DILocation(line: 1019, column: 54, scope: !7946)
!7951 = !DILocation(line: 1021, column: 49, scope: !7946)
!7952 = !DILocation(line: 1021, column: 40, scope: !7946)
!7953 = !DILocation(line: 1021, column: 9, scope: !7946)
!7954 = !DILocation(line: 1021, column: 2, scope: !7946)
!7955 = distinct !DISubprogram(name: "dev_name", scope: !104, file: !104, line: 609, type: !7956, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!193, !3704}
!7958 = !DILocalVariable(name: "dev", arg: 1, scope: !7955, file: !104, line: 609, type: !3704)
!7959 = !DILocation(line: 609, column: 57, scope: !7955)
!7960 = !DILocation(line: 612, column: 6, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7955, file: !104, line: 612, column: 6)
!7962 = !DILocation(line: 612, column: 11, scope: !7961)
!7963 = !DILocation(line: 612, column: 6, scope: !7955)
!7964 = !DILocation(line: 613, column: 10, scope: !7961)
!7965 = !DILocation(line: 613, column: 15, scope: !7961)
!7966 = !DILocation(line: 613, column: 3, scope: !7961)
!7967 = !DILocation(line: 615, column: 23, scope: !7955)
!7968 = !DILocation(line: 615, column: 28, scope: !7955)
!7969 = !DILocation(line: 615, column: 9, scope: !7955)
!7970 = !DILocation(line: 615, column: 2, scope: !7955)
!7971 = !DILocation(line: 616, column: 1, scope: !7955)
!7972 = distinct !DISubprogram(name: "kobject_name", scope: !245, file: !245, line: 88, type: !7973, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7973 = !DISubroutineType(types: !7974)
!7974 = !{!193, !7975}
!7975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7976, size: 64)
!7976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !244)
!7977 = !DILocalVariable(name: "kobj", arg: 1, scope: !7972, file: !245, line: 88, type: !7975)
!7978 = !DILocation(line: 88, column: 62, scope: !7972)
!7979 = !DILocation(line: 90, column: 9, scope: !7972)
!7980 = !DILocation(line: 90, column: 15, scope: !7972)
!7981 = !DILocation(line: 90, column: 2, scope: !7972)
!7982 = distinct !DISubprogram(name: "show_protocols", scope: !3, file: !3, line: 1104, type: !4243, scopeLine: 1106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!7983 = !DILocalVariable(name: "device", arg: 1, scope: !7982, file: !3, line: 1104, type: !3368)
!7984 = !DILocation(line: 1104, column: 46, scope: !7982)
!7985 = !DILocalVariable(name: "mattr", arg: 2, scope: !7982, file: !3, line: 1105, type: !4245)
!7986 = !DILocation(line: 1105, column: 35, scope: !7982)
!7987 = !DILocalVariable(name: "buf", arg: 3, scope: !7982, file: !3, line: 1105, type: !283)
!7988 = !DILocation(line: 1105, column: 48, scope: !7982)
!7989 = !DILocalVariable(name: "dev", scope: !7982, file: !3, line: 1107, type: !237)
!7990 = !DILocation(line: 1107, column: 17, scope: !7982)
!7991 = !DILocalVariable(name: "__mptr", scope: !7992, file: !3, line: 1107, type: !165)
!7992 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 1107, column: 23)
!7993 = !DILocation(line: 1107, column: 23, scope: !7992)
!7994 = !DILocation(line: 1107, column: 23, scope: !7995)
!7995 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 1107, column: 23)
!7996 = !DILocalVariable(name: "allowed", scope: !7982, file: !3, line: 1108, type: !184)
!7997 = !DILocation(line: 1108, column: 6, scope: !7982)
!7998 = !DILocalVariable(name: "enabled", scope: !7982, file: !3, line: 1108, type: !184)
!7999 = !DILocation(line: 1108, column: 15, scope: !7982)
!8000 = !DILocalVariable(name: "tmp", scope: !7982, file: !3, line: 1109, type: !283)
!8001 = !DILocation(line: 1109, column: 8, scope: !7982)
!8002 = !DILocation(line: 1109, column: 14, scope: !7982)
!8003 = !DILocalVariable(name: "i", scope: !7982, file: !3, line: 1110, type: !159)
!8004 = !DILocation(line: 1110, column: 6, scope: !7982)
!8005 = !DILocation(line: 1112, column: 14, scope: !7982)
!8006 = !DILocation(line: 1112, column: 19, scope: !7982)
!8007 = !DILocation(line: 1112, column: 2, scope: !7982)
!8008 = !DILocation(line: 1114, column: 12, scope: !7982)
!8009 = !DILocation(line: 1114, column: 17, scope: !7982)
!8010 = !DILocation(line: 1114, column: 10, scope: !7982)
!8011 = !DILocation(line: 1115, column: 12, scope: !7982)
!8012 = !DILocation(line: 1115, column: 17, scope: !7982)
!8013 = !DILocation(line: 1115, column: 10, scope: !7982)
!8014 = !DILocation(line: 1116, column: 6, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 1116, column: 6)
!8016 = !DILocation(line: 1116, column: 11, scope: !8015)
!8017 = !DILocation(line: 1116, column: 15, scope: !8015)
!8018 = !DILocation(line: 1116, column: 19, scope: !8015)
!8019 = !DILocation(line: 1116, column: 6, scope: !7982)
!8020 = !DILocation(line: 1117, column: 13, scope: !8015)
!8021 = !DILocation(line: 1117, column: 11, scope: !8015)
!8022 = !DILocation(line: 1117, column: 3, scope: !8015)
!8023 = !DILocation(line: 1119, column: 16, scope: !7982)
!8024 = !DILocation(line: 1119, column: 21, scope: !7982)
!8025 = !DILocation(line: 1119, column: 2, scope: !7982)
!8026 = !DILocation(line: 1124, column: 9, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 1124, column: 2)
!8028 = !DILocation(line: 1124, column: 7, scope: !8027)
!8029 = !DILocation(line: 1124, column: 14, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 1124, column: 2)
!8031 = !DILocation(line: 1124, column: 16, scope: !8030)
!8032 = !DILocation(line: 1124, column: 2, scope: !8027)
!8033 = !DILocation(line: 1125, column: 7, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 1125, column: 7)
!8035 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 1124, column: 48)
!8036 = !DILocation(line: 1125, column: 17, scope: !8034)
!8037 = !DILocation(line: 1125, column: 15, scope: !8034)
!8038 = !DILocation(line: 1125, column: 39, scope: !8034)
!8039 = !DILocation(line: 1125, column: 27, scope: !8034)
!8040 = !DILocation(line: 1125, column: 42, scope: !8034)
!8041 = !DILocation(line: 1125, column: 25, scope: !8034)
!8042 = !DILocation(line: 1125, column: 7, scope: !8035)
!8043 = !DILocation(line: 1126, column: 19, scope: !8034)
!8044 = !DILocation(line: 1126, column: 45, scope: !8034)
!8045 = !DILocation(line: 1126, column: 33, scope: !8034)
!8046 = !DILocation(line: 1126, column: 48, scope: !8034)
!8047 = !DILocation(line: 1126, column: 11, scope: !8034)
!8048 = !DILocation(line: 1126, column: 8, scope: !8034)
!8049 = !DILocation(line: 1126, column: 4, scope: !8034)
!8050 = !DILocation(line: 1127, column: 12, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8034, file: !3, line: 1127, column: 12)
!8052 = !DILocation(line: 1127, column: 34, scope: !8051)
!8053 = !DILocation(line: 1127, column: 22, scope: !8051)
!8054 = !DILocation(line: 1127, column: 37, scope: !8051)
!8055 = !DILocation(line: 1127, column: 20, scope: !8051)
!8056 = !DILocation(line: 1127, column: 12, scope: !8034)
!8057 = !DILocation(line: 1128, column: 19, scope: !8051)
!8058 = !DILocation(line: 1128, column: 43, scope: !8051)
!8059 = !DILocation(line: 1128, column: 31, scope: !8051)
!8060 = !DILocation(line: 1128, column: 46, scope: !8051)
!8061 = !DILocation(line: 1128, column: 11, scope: !8051)
!8062 = !DILocation(line: 1128, column: 8, scope: !8051)
!8063 = !DILocation(line: 1128, column: 4, scope: !8051)
!8064 = !DILocation(line: 1130, column: 7, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 1130, column: 7)
!8066 = !DILocation(line: 1130, column: 29, scope: !8065)
!8067 = !DILocation(line: 1130, column: 17, scope: !8065)
!8068 = !DILocation(line: 1130, column: 32, scope: !8065)
!8069 = !DILocation(line: 1130, column: 15, scope: !8065)
!8070 = !DILocation(line: 1130, column: 7, scope: !8035)
!8071 = !DILocation(line: 1131, column: 28, scope: !8065)
!8072 = !DILocation(line: 1131, column: 16, scope: !8065)
!8073 = !DILocation(line: 1131, column: 31, scope: !8065)
!8074 = !DILocation(line: 1131, column: 15, scope: !8065)
!8075 = !DILocation(line: 1131, column: 12, scope: !8065)
!8076 = !DILocation(line: 1131, column: 4, scope: !8065)
!8077 = !DILocation(line: 1132, column: 2, scope: !8035)
!8078 = !DILocation(line: 1124, column: 44, scope: !8030)
!8079 = !DILocation(line: 1124, column: 2, scope: !8030)
!8080 = distinct !{!8080, !8032, !8081}
!8081 = !DILocation(line: 1132, column: 2, scope: !8027)
!8082 = !DILocation(line: 1139, column: 6, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !7982, file: !3, line: 1139, column: 6)
!8084 = !DILocation(line: 1139, column: 13, scope: !8083)
!8085 = !DILocation(line: 1139, column: 10, scope: !8083)
!8086 = !DILocation(line: 1139, column: 6, scope: !7982)
!8087 = !DILocation(line: 1140, column: 6, scope: !8083)
!8088 = !DILocation(line: 1140, column: 3, scope: !8083)
!8089 = !DILocation(line: 1141, column: 3, scope: !7982)
!8090 = !DILocation(line: 1141, column: 7, scope: !7982)
!8091 = !DILocation(line: 1143, column: 9, scope: !7982)
!8092 = !DILocation(line: 1143, column: 13, scope: !7982)
!8093 = !DILocation(line: 1143, column: 19, scope: !7982)
!8094 = !DILocation(line: 1143, column: 17, scope: !7982)
!8095 = !DILocation(line: 1143, column: 2, scope: !7982)
!8096 = distinct !DISubprogram(name: "store_protocols", scope: !3, file: !3, line: 1275, type: !4248, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8097 = !DILocalVariable(name: "device", arg: 1, scope: !8096, file: !3, line: 1275, type: !3368)
!8098 = !DILocation(line: 1275, column: 47, scope: !8096)
!8099 = !DILocalVariable(name: "mattr", arg: 2, scope: !8096, file: !3, line: 1276, type: !4245)
!8100 = !DILocation(line: 1276, column: 36, scope: !8096)
!8101 = !DILocalVariable(name: "buf", arg: 3, scope: !8096, file: !3, line: 1277, type: !193)
!8102 = !DILocation(line: 1277, column: 23, scope: !8096)
!8103 = !DILocalVariable(name: "len", arg: 4, scope: !8096, file: !3, line: 1277, type: !328)
!8104 = !DILocation(line: 1277, column: 35, scope: !8096)
!8105 = !DILocalVariable(name: "dev", scope: !8096, file: !3, line: 1279, type: !237)
!8106 = !DILocation(line: 1279, column: 17, scope: !8096)
!8107 = !DILocalVariable(name: "__mptr", scope: !8108, file: !3, line: 1279, type: !165)
!8108 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1279, column: 23)
!8109 = !DILocation(line: 1279, column: 23, scope: !8108)
!8110 = !DILocation(line: 1279, column: 23, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8108, file: !3, line: 1279, column: 23)
!8112 = !DILocalVariable(name: "current_protocols", scope: !8096, file: !3, line: 1280, type: !234)
!8113 = !DILocation(line: 1280, column: 7, scope: !8096)
!8114 = !DILocalVariable(name: "filter", scope: !8096, file: !3, line: 1281, type: !4226)
!8115 = !DILocation(line: 1281, column: 29, scope: !8096)
!8116 = !DILocalVariable(name: "old_protocols", scope: !8096, file: !3, line: 1282, type: !184)
!8117 = !DILocation(line: 1282, column: 6, scope: !8096)
!8118 = !DILocalVariable(name: "new_protocols", scope: !8096, file: !3, line: 1282, type: !184)
!8119 = !DILocation(line: 1282, column: 21, scope: !8096)
!8120 = !DILocalVariable(name: "rc", scope: !8096, file: !3, line: 1283, type: !314)
!8121 = !DILocation(line: 1283, column: 10, scope: !8096)
!8122 = !DILocation(line: 1286, column: 23, scope: !8096)
!8123 = !DILocation(line: 1286, column: 28, scope: !8096)
!8124 = !DILocation(line: 1286, column: 20, scope: !8096)
!8125 = !DILocation(line: 1287, column: 12, scope: !8096)
!8126 = !DILocation(line: 1287, column: 17, scope: !8096)
!8127 = !DILocation(line: 1287, column: 9, scope: !8096)
!8128 = !DILocation(line: 1289, column: 7, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1289, column: 6)
!8130 = !DILocation(line: 1289, column: 12, scope: !8129)
!8131 = !DILocation(line: 1289, column: 6, scope: !8096)
!8132 = !DILocation(line: 1291, column: 3, scope: !8133)
!8133 = distinct !DILexicalBlock(scope: !8129, file: !3, line: 1289, column: 29)
!8134 = !DILocation(line: 1294, column: 14, scope: !8096)
!8135 = !DILocation(line: 1294, column: 19, scope: !8096)
!8136 = !DILocation(line: 1294, column: 2, scope: !8096)
!8137 = !DILocation(line: 1295, column: 7, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1295, column: 6)
!8139 = !DILocation(line: 1295, column: 12, scope: !8138)
!8140 = !DILocation(line: 1295, column: 6, scope: !8096)
!8141 = !DILocation(line: 1296, column: 17, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !3, line: 1295, column: 24)
!8143 = !DILocation(line: 1296, column: 22, scope: !8142)
!8144 = !DILocation(line: 1296, column: 3, scope: !8142)
!8145 = !DILocation(line: 1297, column: 3, scope: !8142)
!8146 = !DILocation(line: 1300, column: 19, scope: !8096)
!8147 = !DILocation(line: 1300, column: 18, scope: !8096)
!8148 = !DILocation(line: 1300, column: 16, scope: !8096)
!8149 = !DILocation(line: 1301, column: 18, scope: !8096)
!8150 = !DILocation(line: 1301, column: 16, scope: !8096)
!8151 = !DILocation(line: 1302, column: 29, scope: !8096)
!8152 = !DILocation(line: 1302, column: 50, scope: !8096)
!8153 = !DILocation(line: 1302, column: 7, scope: !8096)
!8154 = !DILocation(line: 1302, column: 5, scope: !8096)
!8155 = !DILocation(line: 1303, column: 6, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1303, column: 6)
!8157 = !DILocation(line: 1303, column: 9, scope: !8156)
!8158 = !DILocation(line: 1303, column: 6, scope: !8096)
!8159 = !DILocation(line: 1304, column: 3, scope: !8156)
!8160 = !DILocation(line: 1306, column: 6, scope: !8161)
!8161 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1306, column: 6)
!8162 = !DILocation(line: 1306, column: 11, scope: !8161)
!8163 = !DILocation(line: 1306, column: 23, scope: !8161)
!8164 = !DILocation(line: 1306, column: 6, scope: !8096)
!8165 = !DILocation(line: 1307, column: 3, scope: !8161)
!8166 = !DILocation(line: 1309, column: 7, scope: !8096)
!8167 = !DILocation(line: 1309, column: 12, scope: !8096)
!8168 = !DILocation(line: 1309, column: 28, scope: !8096)
!8169 = !DILocation(line: 1309, column: 5, scope: !8096)
!8170 = !DILocation(line: 1310, column: 6, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1310, column: 6)
!8172 = !DILocation(line: 1310, column: 9, scope: !8171)
!8173 = !DILocation(line: 1310, column: 6, scope: !8096)
!8174 = !DILocation(line: 1313, column: 3, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8171, file: !3, line: 1310, column: 14)
!8176 = !DILocation(line: 1316, column: 6, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1316, column: 6)
!8178 = !DILocation(line: 1316, column: 23, scope: !8177)
!8179 = !DILocation(line: 1316, column: 20, scope: !8177)
!8180 = !DILocation(line: 1316, column: 6, scope: !8096)
!8181 = !DILocation(line: 1317, column: 24, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8177, file: !3, line: 1316, column: 38)
!8183 = !DILocation(line: 1317, column: 4, scope: !8182)
!8184 = !DILocation(line: 1317, column: 22, scope: !8182)
!8185 = !DILocation(line: 1320, column: 2, scope: !8182)
!8186 = !DILocation(line: 1329, column: 6, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1329, column: 6)
!8188 = !DILocation(line: 1329, column: 11, scope: !8187)
!8189 = !DILocation(line: 1329, column: 20, scope: !8187)
!8190 = !DILocation(line: 1329, column: 23, scope: !8187)
!8191 = !DILocation(line: 1329, column: 31, scope: !8187)
!8192 = !DILocation(line: 1329, column: 6, scope: !8096)
!8193 = !DILocation(line: 1330, column: 7, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 1330, column: 7)
!8195 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 1329, column: 37)
!8196 = !DILocation(line: 1330, column: 7, scope: !8195)
!8197 = !DILocation(line: 1331, column: 9, scope: !8194)
!8198 = !DILocation(line: 1331, column: 14, scope: !8194)
!8199 = !DILocation(line: 1331, column: 23, scope: !8194)
!8200 = !DILocation(line: 1331, column: 28, scope: !8194)
!8201 = !DILocation(line: 1331, column: 7, scope: !8194)
!8202 = !DILocation(line: 1331, column: 4, scope: !8194)
!8203 = !DILocation(line: 1333, column: 7, scope: !8194)
!8204 = !DILocation(line: 1335, column: 7, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 1335, column: 7)
!8206 = !DILocation(line: 1335, column: 10, scope: !8205)
!8207 = !DILocation(line: 1335, column: 7, scope: !8195)
!8208 = !DILocation(line: 1336, column: 4, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8205, file: !3, line: 1335, column: 15)
!8210 = !DILocation(line: 1336, column: 12, scope: !8209)
!8211 = !DILocation(line: 1336, column: 17, scope: !8209)
!8212 = !DILocation(line: 1337, column: 4, scope: !8209)
!8213 = !DILocation(line: 1337, column: 12, scope: !8209)
!8214 = !DILocation(line: 1337, column: 17, scope: !8209)
!8215 = !DILocation(line: 1338, column: 4, scope: !8209)
!8216 = !DILocation(line: 1338, column: 9, scope: !8209)
!8217 = !DILocation(line: 1338, column: 18, scope: !8209)
!8218 = !DILocation(line: 1338, column: 23, scope: !8209)
!8219 = !DILocation(line: 1339, column: 3, scope: !8209)
!8220 = !DILocation(line: 1340, column: 2, scope: !8195)
!8221 = !DILocation(line: 1342, column: 7, scope: !8096)
!8222 = !DILocation(line: 1342, column: 5, scope: !8096)
!8223 = !DILocation(line: 1342, column: 2, scope: !8096)
!8224 = !DILabel(scope: !8096, name: "out", file: !3, line: 1344)
!8225 = !DILocation(line: 1344, column: 1, scope: !8096)
!8226 = !DILocation(line: 1345, column: 16, scope: !8096)
!8227 = !DILocation(line: 1345, column: 21, scope: !8096)
!8228 = !DILocation(line: 1345, column: 2, scope: !8096)
!8229 = !DILocation(line: 1346, column: 9, scope: !8096)
!8230 = !DILocation(line: 1346, column: 2, scope: !8096)
!8231 = !DILocation(line: 1347, column: 1, scope: !8096)
!8232 = distinct !DISubprogram(name: "parse_protocol_change", scope: !3, file: !3, line: 1158, type: !8233, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{!159, !237, !234, !193}
!8235 = !DILocalVariable(name: "dev", arg: 1, scope: !8232, file: !3, line: 1158, type: !237)
!8236 = !DILocation(line: 1158, column: 49, scope: !8232)
!8237 = !DILocalVariable(name: "protocols", arg: 2, scope: !8232, file: !3, line: 1158, type: !234)
!8238 = !DILocation(line: 1158, column: 59, scope: !8232)
!8239 = !DILocalVariable(name: "buf", arg: 3, scope: !8232, file: !3, line: 1159, type: !193)
!8240 = !DILocation(line: 1159, column: 18, scope: !8232)
!8241 = !DILocalVariable(name: "tmp", scope: !8232, file: !3, line: 1161, type: !193)
!8242 = !DILocation(line: 1161, column: 14, scope: !8232)
!8243 = !DILocalVariable(name: "count", scope: !8232, file: !3, line: 1162, type: !7)
!8244 = !DILocation(line: 1162, column: 11, scope: !8232)
!8245 = !DILocalVariable(name: "enable", scope: !8232, file: !3, line: 1163, type: !488)
!8246 = !DILocation(line: 1163, column: 7, scope: !8232)
!8247 = !DILocalVariable(name: "disable", scope: !8232, file: !3, line: 1163, type: !488)
!8248 = !DILocation(line: 1163, column: 15, scope: !8232)
!8249 = !DILocalVariable(name: "mask", scope: !8232, file: !3, line: 1164, type: !184)
!8250 = !DILocation(line: 1164, column: 6, scope: !8232)
!8251 = !DILocalVariable(name: "i", scope: !8232, file: !3, line: 1165, type: !159)
!8252 = !DILocation(line: 1165, column: 6, scope: !8232)
!8253 = !DILocation(line: 1167, column: 2, scope: !8232)
!8254 = !DILocation(line: 1167, column: 16, scope: !8232)
!8255 = !DILocation(line: 1167, column: 14, scope: !8232)
!8256 = !DILocation(line: 1167, column: 46, scope: !8232)
!8257 = !DILocation(line: 1168, column: 9, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 1168, column: 7)
!8259 = distinct !DILexicalBlock(scope: !8232, file: !3, line: 1167, column: 55)
!8260 = !DILocation(line: 1168, column: 8, scope: !8258)
!8261 = !DILocation(line: 1168, column: 7, scope: !8259)
!8262 = !DILocation(line: 1169, column: 4, scope: !8258)
!8263 = !DILocation(line: 1171, column: 8, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 1171, column: 7)
!8265 = !DILocation(line: 1171, column: 7, scope: !8264)
!8266 = !DILocation(line: 1171, column: 12, scope: !8264)
!8267 = !DILocation(line: 1171, column: 7, scope: !8259)
!8268 = !DILocation(line: 1172, column: 11, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 1171, column: 20)
!8270 = !DILocation(line: 1173, column: 12, scope: !8269)
!8271 = !DILocation(line: 1174, column: 7, scope: !8269)
!8272 = !DILocation(line: 1175, column: 3, scope: !8269)
!8273 = !DILocation(line: 1175, column: 15, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 1175, column: 14)
!8275 = !DILocation(line: 1175, column: 14, scope: !8274)
!8276 = !DILocation(line: 1175, column: 19, scope: !8274)
!8277 = !DILocation(line: 1175, column: 14, scope: !8264)
!8278 = !DILocation(line: 1176, column: 11, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 1175, column: 27)
!8280 = !DILocation(line: 1177, column: 12, scope: !8279)
!8281 = !DILocation(line: 1178, column: 7, scope: !8279)
!8282 = !DILocation(line: 1179, column: 3, scope: !8279)
!8283 = !DILocation(line: 1180, column: 11, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 1179, column: 10)
!8285 = !DILocation(line: 1181, column: 12, scope: !8284)
!8286 = !DILocation(line: 1184, column: 10, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 1184, column: 3)
!8288 = !DILocation(line: 1184, column: 8, scope: !8287)
!8289 = !DILocation(line: 1184, column: 15, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 1184, column: 3)
!8291 = !DILocation(line: 1184, column: 17, scope: !8290)
!8292 = !DILocation(line: 1184, column: 3, scope: !8287)
!8293 = !DILocation(line: 1185, column: 20, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8295, file: !3, line: 1185, column: 8)
!8295 = distinct !DILexicalBlock(scope: !8290, file: !3, line: 1184, column: 49)
!8296 = !DILocation(line: 1185, column: 37, scope: !8294)
!8297 = !DILocation(line: 1185, column: 25, scope: !8294)
!8298 = !DILocation(line: 1185, column: 40, scope: !8294)
!8299 = !DILocation(line: 1185, column: 9, scope: !8294)
!8300 = !DILocation(line: 1185, column: 8, scope: !8295)
!8301 = !DILocation(line: 1186, column: 24, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 1185, column: 47)
!8303 = !DILocation(line: 1186, column: 12, scope: !8302)
!8304 = !DILocation(line: 1186, column: 27, scope: !8302)
!8305 = !DILocation(line: 1186, column: 10, scope: !8302)
!8306 = !DILocation(line: 1187, column: 5, scope: !8302)
!8307 = !DILocation(line: 1189, column: 3, scope: !8295)
!8308 = !DILocation(line: 1184, column: 45, scope: !8290)
!8309 = !DILocation(line: 1184, column: 3, scope: !8290)
!8310 = distinct !{!8310, !8292, !8311}
!8311 = !DILocation(line: 1189, column: 3, scope: !8287)
!8312 = !DILocation(line: 1191, column: 7, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 1191, column: 7)
!8314 = !DILocation(line: 1191, column: 9, scope: !8313)
!8315 = !DILocation(line: 1191, column: 7, scope: !8259)
!8316 = !DILocation(line: 1192, column: 20, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !3, line: 1192, column: 8)
!8318 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 1191, column: 37)
!8319 = !DILocation(line: 1192, column: 9, scope: !8317)
!8320 = !DILocation(line: 1192, column: 8, scope: !8318)
!8321 = !DILocation(line: 1193, column: 10, scope: !8317)
!8322 = !DILocation(line: 1193, column: 5, scope: !8317)
!8323 = !DILocation(line: 1197, column: 5, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8317, file: !3, line: 1194, column: 9)
!8325 = !DILocation(line: 1199, column: 3, scope: !8318)
!8326 = !DILocation(line: 1201, column: 8, scope: !8259)
!8327 = !DILocation(line: 1203, column: 7, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8259, file: !3, line: 1203, column: 7)
!8329 = !DILocation(line: 1203, column: 7, scope: !8259)
!8330 = !DILocation(line: 1204, column: 18, scope: !8328)
!8331 = !DILocation(line: 1204, column: 5, scope: !8328)
!8332 = !DILocation(line: 1204, column: 15, scope: !8328)
!8333 = !DILocation(line: 1204, column: 4, scope: !8328)
!8334 = !DILocation(line: 1205, column: 12, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 1205, column: 12)
!8336 = !DILocation(line: 1205, column: 12, scope: !8328)
!8337 = !DILocation(line: 1206, column: 19, scope: !8335)
!8338 = !DILocation(line: 1206, column: 18, scope: !8335)
!8339 = !DILocation(line: 1206, column: 5, scope: !8335)
!8340 = !DILocation(line: 1206, column: 15, scope: !8335)
!8341 = !DILocation(line: 1206, column: 4, scope: !8335)
!8342 = !DILocation(line: 1208, column: 17, scope: !8335)
!8343 = !DILocation(line: 1208, column: 5, scope: !8335)
!8344 = !DILocation(line: 1208, column: 15, scope: !8335)
!8345 = distinct !{!8345, !8253, !8346}
!8346 = !DILocation(line: 1209, column: 2, scope: !8232)
!8347 = !DILocation(line: 1211, column: 7, scope: !8348)
!8348 = distinct !DILexicalBlock(scope: !8232, file: !3, line: 1211, column: 6)
!8349 = !DILocation(line: 1211, column: 6, scope: !8232)
!8350 = !DILocation(line: 1213, column: 3, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8348, file: !3, line: 1211, column: 14)
!8352 = !DILocation(line: 1216, column: 9, scope: !8232)
!8353 = !DILocation(line: 1216, column: 2, scope: !8232)
!8354 = !DILocation(line: 1217, column: 1, scope: !8232)
!8355 = distinct !DISubprogram(name: "show_filter", scope: !3, file: !3, line: 1366, type: !4243, scopeLine: 1369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8356 = !DILocalVariable(name: "device", arg: 1, scope: !8355, file: !3, line: 1366, type: !3368)
!8357 = !DILocation(line: 1366, column: 43, scope: !8355)
!8358 = !DILocalVariable(name: "attr", arg: 2, scope: !8355, file: !3, line: 1367, type: !4245)
!8359 = !DILocation(line: 1367, column: 32, scope: !8355)
!8360 = !DILocalVariable(name: "buf", arg: 3, scope: !8355, file: !3, line: 1368, type: !283)
!8361 = !DILocation(line: 1368, column: 13, scope: !8355)
!8362 = !DILocalVariable(name: "dev", scope: !8355, file: !3, line: 1370, type: !237)
!8363 = !DILocation(line: 1370, column: 17, scope: !8355)
!8364 = !DILocalVariable(name: "__mptr", scope: !8365, file: !3, line: 1370, type: !165)
!8365 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 1370, column: 23)
!8366 = !DILocation(line: 1370, column: 23, scope: !8365)
!8367 = !DILocation(line: 1370, column: 23, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8365, file: !3, line: 1370, column: 23)
!8369 = !DILocalVariable(name: "fattr", scope: !8355, file: !3, line: 1371, type: !4234)
!8370 = !DILocation(line: 1371, column: 30, scope: !8355)
!8371 = !DILocalVariable(name: "__mptr", scope: !8372, file: !3, line: 1371, type: !165)
!8372 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 1371, column: 38)
!8373 = !DILocation(line: 1371, column: 38, scope: !8372)
!8374 = !DILocation(line: 1371, column: 38, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 1371, column: 38)
!8376 = !DILocalVariable(name: "filter", scope: !8355, file: !3, line: 1372, type: !4226)
!8377 = !DILocation(line: 1372, column: 29, scope: !8355)
!8378 = !DILocalVariable(name: "val", scope: !8355, file: !3, line: 1373, type: !155)
!8379 = !DILocation(line: 1373, column: 6, scope: !8355)
!8380 = !DILocation(line: 1375, column: 14, scope: !8355)
!8381 = !DILocation(line: 1375, column: 19, scope: !8355)
!8382 = !DILocation(line: 1375, column: 2, scope: !8355)
!8383 = !DILocation(line: 1377, column: 6, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 1377, column: 6)
!8385 = !DILocation(line: 1377, column: 13, scope: !8384)
!8386 = !DILocation(line: 1377, column: 18, scope: !8384)
!8387 = !DILocation(line: 1377, column: 6, scope: !8355)
!8388 = !DILocation(line: 1378, column: 13, scope: !8384)
!8389 = !DILocation(line: 1378, column: 18, scope: !8384)
!8390 = !DILocation(line: 1378, column: 10, scope: !8384)
!8391 = !DILocation(line: 1378, column: 3, scope: !8384)
!8392 = !DILocation(line: 1380, column: 13, scope: !8384)
!8393 = !DILocation(line: 1380, column: 18, scope: !8384)
!8394 = !DILocation(line: 1380, column: 10, scope: !8384)
!8395 = !DILocation(line: 1382, column: 6, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8355, file: !3, line: 1382, column: 6)
!8397 = !DILocation(line: 1382, column: 13, scope: !8396)
!8398 = !DILocation(line: 1382, column: 6, scope: !8355)
!8399 = !DILocation(line: 1383, column: 9, scope: !8396)
!8400 = !DILocation(line: 1383, column: 17, scope: !8396)
!8401 = !DILocation(line: 1383, column: 7, scope: !8396)
!8402 = !DILocation(line: 1383, column: 3, scope: !8396)
!8403 = !DILocation(line: 1385, column: 9, scope: !8396)
!8404 = !DILocation(line: 1385, column: 17, scope: !8396)
!8405 = !DILocation(line: 1385, column: 7, scope: !8396)
!8406 = !DILocation(line: 1386, column: 16, scope: !8355)
!8407 = !DILocation(line: 1386, column: 21, scope: !8355)
!8408 = !DILocation(line: 1386, column: 2, scope: !8355)
!8409 = !DILocation(line: 1388, column: 17, scope: !8355)
!8410 = !DILocation(line: 1388, column: 31, scope: !8355)
!8411 = !DILocation(line: 1388, column: 9, scope: !8355)
!8412 = !DILocation(line: 1388, column: 2, scope: !8355)
!8413 = distinct !DISubprogram(name: "store_filter", scope: !3, file: !3, line: 1410, type: !4248, scopeLine: 1413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8414 = !DILocalVariable(name: "device", arg: 1, scope: !8413, file: !3, line: 1410, type: !3368)
!8415 = !DILocation(line: 1410, column: 44, scope: !8413)
!8416 = !DILocalVariable(name: "attr", arg: 2, scope: !8413, file: !3, line: 1411, type: !4245)
!8417 = !DILocation(line: 1411, column: 33, scope: !8413)
!8418 = !DILocalVariable(name: "buf", arg: 3, scope: !8413, file: !3, line: 1412, type: !193)
!8419 = !DILocation(line: 1412, column: 20, scope: !8413)
!8420 = !DILocalVariable(name: "len", arg: 4, scope: !8413, file: !3, line: 1412, type: !328)
!8421 = !DILocation(line: 1412, column: 32, scope: !8413)
!8422 = !DILocalVariable(name: "dev", scope: !8413, file: !3, line: 1414, type: !237)
!8423 = !DILocation(line: 1414, column: 17, scope: !8413)
!8424 = !DILocalVariable(name: "__mptr", scope: !8425, file: !3, line: 1414, type: !165)
!8425 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1414, column: 23)
!8426 = !DILocation(line: 1414, column: 23, scope: !8425)
!8427 = !DILocation(line: 1414, column: 23, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 1414, column: 23)
!8429 = !DILocalVariable(name: "fattr", scope: !8413, file: !3, line: 1415, type: !4234)
!8430 = !DILocation(line: 1415, column: 30, scope: !8413)
!8431 = !DILocalVariable(name: "__mptr", scope: !8432, file: !3, line: 1415, type: !165)
!8432 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1415, column: 38)
!8433 = !DILocation(line: 1415, column: 38, scope: !8432)
!8434 = !DILocation(line: 1415, column: 38, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8432, file: !3, line: 1415, column: 38)
!8436 = !DILocalVariable(name: "new_filter", scope: !8413, file: !3, line: 1416, type: !4164)
!8437 = !DILocation(line: 1416, column: 28, scope: !8413)
!8438 = !DILocalVariable(name: "filter", scope: !8413, file: !3, line: 1416, type: !4226)
!8439 = !DILocation(line: 1416, column: 41, scope: !8413)
!8440 = !DILocalVariable(name: "ret", scope: !8413, file: !3, line: 1417, type: !159)
!8441 = !DILocation(line: 1417, column: 6, scope: !8413)
!8442 = !DILocalVariable(name: "val", scope: !8413, file: !3, line: 1418, type: !214)
!8443 = !DILocation(line: 1418, column: 16, scope: !8413)
!8444 = !DILocalVariable(name: "set_filter", scope: !8413, file: !3, line: 1419, type: !4223)
!8445 = !DILocation(line: 1419, column: 8, scope: !8413)
!8446 = !DILocation(line: 1421, column: 17, scope: !8413)
!8447 = !DILocation(line: 1421, column: 8, scope: !8413)
!8448 = !DILocation(line: 1421, column: 6, scope: !8413)
!8449 = !DILocation(line: 1422, column: 6, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1422, column: 6)
!8451 = !DILocation(line: 1422, column: 10, scope: !8450)
!8452 = !DILocation(line: 1422, column: 6, scope: !8413)
!8453 = !DILocation(line: 1423, column: 10, scope: !8450)
!8454 = !DILocation(line: 1423, column: 3, scope: !8450)
!8455 = !DILocation(line: 1425, column: 6, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1425, column: 6)
!8457 = !DILocation(line: 1425, column: 13, scope: !8456)
!8458 = !DILocation(line: 1425, column: 18, scope: !8456)
!8459 = !DILocation(line: 1425, column: 6, scope: !8413)
!8460 = !DILocation(line: 1426, column: 16, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 1425, column: 39)
!8462 = !DILocation(line: 1426, column: 21, scope: !8461)
!8463 = !DILocation(line: 1426, column: 14, scope: !8461)
!8464 = !DILocation(line: 1427, column: 13, scope: !8461)
!8465 = !DILocation(line: 1427, column: 18, scope: !8461)
!8466 = !DILocation(line: 1427, column: 10, scope: !8461)
!8467 = !DILocation(line: 1428, column: 2, scope: !8461)
!8468 = !DILocation(line: 1429, column: 16, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 1428, column: 9)
!8470 = !DILocation(line: 1429, column: 21, scope: !8469)
!8471 = !DILocation(line: 1429, column: 14, scope: !8469)
!8472 = !DILocation(line: 1430, column: 13, scope: !8469)
!8473 = !DILocation(line: 1430, column: 18, scope: !8469)
!8474 = !DILocation(line: 1430, column: 10, scope: !8469)
!8475 = !DILocation(line: 1433, column: 7, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1433, column: 6)
!8477 = !DILocation(line: 1433, column: 6, scope: !8413)
!8478 = !DILocation(line: 1434, column: 3, scope: !8476)
!8479 = !DILocation(line: 1436, column: 14, scope: !8413)
!8480 = !DILocation(line: 1436, column: 19, scope: !8413)
!8481 = !DILocation(line: 1436, column: 2, scope: !8413)
!8482 = !DILocation(line: 1437, column: 7, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1437, column: 6)
!8484 = !DILocation(line: 1437, column: 12, scope: !8483)
!8485 = !DILocation(line: 1437, column: 6, scope: !8413)
!8486 = !DILocation(line: 1438, column: 17, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 1437, column: 24)
!8488 = !DILocation(line: 1438, column: 22, scope: !8487)
!8489 = !DILocation(line: 1438, column: 3, scope: !8487)
!8490 = !DILocation(line: 1439, column: 3, scope: !8487)
!8491 = !DILocation(line: 1442, column: 16, scope: !8413)
!8492 = !DILocation(line: 1442, column: 15, scope: !8413)
!8493 = !DILocation(line: 1443, column: 6, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1443, column: 6)
!8495 = !DILocation(line: 1443, column: 13, scope: !8494)
!8496 = !DILocation(line: 1443, column: 6, scope: !8413)
!8497 = !DILocation(line: 1444, column: 21, scope: !8494)
!8498 = !DILocation(line: 1444, column: 14, scope: !8494)
!8499 = !DILocation(line: 1444, column: 19, scope: !8494)
!8500 = !DILocation(line: 1444, column: 3, scope: !8494)
!8501 = !DILocation(line: 1446, column: 21, scope: !8494)
!8502 = !DILocation(line: 1446, column: 14, scope: !8494)
!8503 = !DILocation(line: 1446, column: 19, scope: !8494)
!8504 = !DILocation(line: 1448, column: 6, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1448, column: 6)
!8506 = !DILocation(line: 1448, column: 13, scope: !8505)
!8507 = !DILocation(line: 1448, column: 18, scope: !8505)
!8508 = !DILocation(line: 1448, column: 6, scope: !8413)
!8509 = !DILocation(line: 1453, column: 7, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 1453, column: 7)
!8511 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 1448, column: 39)
!8512 = !DILocation(line: 1453, column: 12, scope: !8510)
!8513 = !DILocation(line: 1453, column: 28, scope: !8510)
!8514 = !DILocation(line: 1453, column: 7, scope: !8511)
!8515 = !DILocation(line: 1454, column: 29, scope: !8510)
!8516 = !DILocation(line: 1454, column: 10, scope: !8510)
!8517 = !DILocation(line: 1454, column: 8, scope: !8510)
!8518 = !DILocation(line: 1454, column: 4, scope: !8510)
!8519 = !DILocation(line: 1456, column: 8, scope: !8510)
!8520 = !DILocation(line: 1458, column: 7, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 1458, column: 7)
!8522 = !DILocation(line: 1458, column: 11, scope: !8521)
!8523 = !DILocation(line: 1458, column: 7, scope: !8511)
!8524 = !DILocation(line: 1459, column: 4, scope: !8521)
!8525 = !DILocation(line: 1460, column: 2, scope: !8511)
!8526 = !DILocation(line: 1462, column: 6, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1462, column: 6)
!8528 = !DILocation(line: 1462, column: 13, scope: !8527)
!8529 = !DILocation(line: 1462, column: 18, scope: !8527)
!8530 = !DILocation(line: 1462, column: 38, scope: !8527)
!8531 = !DILocation(line: 1462, column: 42, scope: !8527)
!8532 = !DILocation(line: 1462, column: 47, scope: !8527)
!8533 = !DILocation(line: 1462, column: 65, scope: !8527)
!8534 = !DILocation(line: 1463, column: 6, scope: !8527)
!8535 = !DILocation(line: 1462, column: 6, scope: !8413)
!8536 = !DILocation(line: 1465, column: 7, scope: !8537)
!8537 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 1463, column: 11)
!8538 = !DILocation(line: 1466, column: 3, scope: !8537)
!8539 = !DILocation(line: 1469, column: 8, scope: !8413)
!8540 = !DILocation(line: 1469, column: 19, scope: !8413)
!8541 = !DILocation(line: 1469, column: 6, scope: !8413)
!8542 = !DILocation(line: 1470, column: 6, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 1470, column: 6)
!8544 = !DILocation(line: 1470, column: 10, scope: !8543)
!8545 = !DILocation(line: 1470, column: 6, scope: !8413)
!8546 = !DILocation(line: 1471, column: 3, scope: !8543)
!8547 = !DILocation(line: 1473, column: 3, scope: !8413)
!8548 = !DILocation(line: 1473, column: 12, scope: !8413)
!8549 = !DILocation(line: 1473, column: 2, scope: !8413)
!8550 = !DILabel(scope: !8413, name: "unlock", file: !3, line: 1475)
!8551 = !DILocation(line: 1475, column: 1, scope: !8413)
!8552 = !DILocation(line: 1476, column: 16, scope: !8413)
!8553 = !DILocation(line: 1476, column: 21, scope: !8413)
!8554 = !DILocation(line: 1476, column: 2, scope: !8413)
!8555 = !DILocation(line: 1477, column: 10, scope: !8413)
!8556 = !DILocation(line: 1477, column: 14, scope: !8413)
!8557 = !DILocation(line: 1477, column: 9, scope: !8413)
!8558 = !DILocation(line: 1477, column: 21, scope: !8413)
!8559 = !DILocation(line: 1477, column: 27, scope: !8413)
!8560 = !DILocation(line: 1477, column: 2, scope: !8413)
!8561 = !DILocation(line: 1478, column: 1, scope: !8413)
!8562 = distinct !DISubprogram(name: "kstrtoul", scope: !8563, file: !8563, line: 351, type: !8564, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8563 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!8564 = !DISubroutineType(types: !8565)
!8565 = !{!159, !193, !7, !8566}
!8566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!8567 = !DILocalVariable(name: "s", arg: 1, scope: !8562, file: !8563, line: 351, type: !193)
!8568 = !DILocation(line: 351, column: 53, scope: !8562)
!8569 = !DILocalVariable(name: "base", arg: 2, scope: !8562, file: !8563, line: 351, type: !7)
!8570 = !DILocation(line: 351, column: 69, scope: !8562)
!8571 = !DILocalVariable(name: "res", arg: 3, scope: !8562, file: !8563, line: 351, type: !8566)
!8572 = !DILocation(line: 351, column: 90, scope: !8562)
!8573 = !DILocation(line: 359, column: 20, scope: !8574)
!8574 = distinct !DILexicalBlock(scope: !8562, file: !8563, line: 357, column: 6)
!8575 = !DILocation(line: 359, column: 23, scope: !8574)
!8576 = !DILocation(line: 359, column: 51, scope: !8574)
!8577 = !DILocation(line: 359, column: 10, scope: !8574)
!8578 = !DILocation(line: 359, column: 3, scope: !8574)
!8579 = distinct !DISubprogram(name: "rc_validate_filter", scope: !3, file: !3, line: 943, type: !4224, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8580 = !DILocalVariable(name: "dev", arg: 1, scope: !8579, file: !3, line: 943, type: !237)
!8581 = !DILocation(line: 943, column: 46, scope: !8579)
!8582 = !DILocalVariable(name: "filter", arg: 2, scope: !8579, file: !3, line: 944, type: !4226)
!8583 = !DILocation(line: 944, column: 37, scope: !8579)
!8584 = !DILocalVariable(name: "mask", scope: !8579, file: !3, line: 946, type: !155)
!8585 = !DILocation(line: 946, column: 6, scope: !8579)
!8586 = !DILocalVariable(name: "s", scope: !8579, file: !3, line: 946, type: !155)
!8587 = !DILocation(line: 946, column: 12, scope: !8579)
!8588 = !DILocation(line: 946, column: 16, scope: !8579)
!8589 = !DILocation(line: 946, column: 24, scope: !8579)
!8590 = !DILocalVariable(name: "protocol", scope: !8579, file: !3, line: 947, type: !5)
!8591 = !DILocation(line: 947, column: 16, scope: !8579)
!8592 = !DILocation(line: 947, column: 27, scope: !8579)
!8593 = !DILocation(line: 947, column: 32, scope: !8579)
!8594 = !DILocation(line: 949, column: 6, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 949, column: 6)
!8596 = !DILocation(line: 949, column: 15, scope: !8595)
!8597 = !DILocation(line: 949, column: 6, scope: !8579)
!8598 = !DILocation(line: 950, column: 3, scope: !8595)
!8599 = !DILocation(line: 952, column: 19, scope: !8579)
!8600 = !DILocation(line: 952, column: 9, scope: !8579)
!8601 = !DILocation(line: 952, column: 29, scope: !8579)
!8602 = !DILocation(line: 952, column: 7, scope: !8579)
!8603 = !DILocation(line: 954, column: 28, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 954, column: 6)
!8605 = !DILocation(line: 954, column: 38, scope: !8604)
!8606 = !DILocation(line: 954, column: 7, scope: !8604)
!8607 = !DILocation(line: 954, column: 6, scope: !8579)
!8608 = !DILocation(line: 955, column: 3, scope: !8604)
!8609 = !DILocation(line: 957, column: 18, scope: !8579)
!8610 = !DILocation(line: 957, column: 2, scope: !8579)
!8611 = !DILocation(line: 957, column: 10, scope: !8579)
!8612 = !DILocation(line: 957, column: 15, scope: !8579)
!8613 = !DILocation(line: 958, column: 18, scope: !8579)
!8614 = !DILocation(line: 958, column: 2, scope: !8579)
!8615 = !DILocation(line: 958, column: 10, scope: !8579)
!8616 = !DILocation(line: 958, column: 15, scope: !8579)
!8617 = !DILocation(line: 963, column: 6, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 963, column: 6)
!8619 = !DILocation(line: 963, column: 11, scope: !8618)
!8620 = !DILocation(line: 963, column: 25, scope: !8618)
!8621 = !DILocation(line: 963, column: 28, scope: !8618)
!8622 = !DILocation(line: 963, column: 36, scope: !8618)
!8623 = !DILocation(line: 963, column: 41, scope: !8618)
!8624 = !DILocation(line: 963, column: 46, scope: !8618)
!8625 = !DILocation(line: 963, column: 49, scope: !8618)
!8626 = !DILocation(line: 963, column: 57, scope: !8618)
!8627 = !DILocation(line: 963, column: 65, scope: !8618)
!8628 = !DILocation(line: 963, column: 62, scope: !8618)
!8629 = !DILocation(line: 963, column: 6, scope: !8579)
!8630 = !DILocation(line: 964, column: 3, scope: !8618)
!8631 = !DILocation(line: 966, column: 2, scope: !8579)
!8632 = !DILocation(line: 967, column: 1, scope: !8579)
!8633 = distinct !DISubprogram(name: "show_wakeup_protocols", scope: !3, file: !3, line: 1494, type: !4243, scopeLine: 1497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8634 = !DILocalVariable(name: "device", arg: 1, scope: !8633, file: !3, line: 1494, type: !3368)
!8635 = !DILocation(line: 1494, column: 53, scope: !8633)
!8636 = !DILocalVariable(name: "mattr", arg: 2, scope: !8633, file: !3, line: 1495, type: !4245)
!8637 = !DILocation(line: 1495, column: 35, scope: !8633)
!8638 = !DILocalVariable(name: "buf", arg: 3, scope: !8633, file: !3, line: 1496, type: !283)
!8639 = !DILocation(line: 1496, column: 16, scope: !8633)
!8640 = !DILocalVariable(name: "dev", scope: !8633, file: !3, line: 1498, type: !237)
!8641 = !DILocation(line: 1498, column: 17, scope: !8633)
!8642 = !DILocalVariable(name: "__mptr", scope: !8643, file: !3, line: 1498, type: !165)
!8643 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 1498, column: 23)
!8644 = !DILocation(line: 1498, column: 23, scope: !8643)
!8645 = !DILocation(line: 1498, column: 23, scope: !8646)
!8646 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 1498, column: 23)
!8647 = !DILocalVariable(name: "allowed", scope: !8633, file: !3, line: 1499, type: !184)
!8648 = !DILocation(line: 1499, column: 6, scope: !8633)
!8649 = !DILocalVariable(name: "enabled", scope: !8633, file: !3, line: 1500, type: !5)
!8650 = !DILocation(line: 1500, column: 16, scope: !8633)
!8651 = !DILocalVariable(name: "tmp", scope: !8633, file: !3, line: 1501, type: !283)
!8652 = !DILocation(line: 1501, column: 8, scope: !8633)
!8653 = !DILocation(line: 1501, column: 14, scope: !8633)
!8654 = !DILocalVariable(name: "i", scope: !8633, file: !3, line: 1502, type: !159)
!8655 = !DILocation(line: 1502, column: 6, scope: !8633)
!8656 = !DILocation(line: 1504, column: 14, scope: !8633)
!8657 = !DILocation(line: 1504, column: 19, scope: !8633)
!8658 = !DILocation(line: 1504, column: 2, scope: !8633)
!8659 = !DILocation(line: 1506, column: 12, scope: !8633)
!8660 = !DILocation(line: 1506, column: 17, scope: !8633)
!8661 = !DILocation(line: 1506, column: 10, scope: !8633)
!8662 = !DILocation(line: 1507, column: 12, scope: !8633)
!8663 = !DILocation(line: 1507, column: 17, scope: !8633)
!8664 = !DILocation(line: 1507, column: 10, scope: !8633)
!8665 = !DILocation(line: 1509, column: 16, scope: !8633)
!8666 = !DILocation(line: 1509, column: 21, scope: !8633)
!8667 = !DILocation(line: 1509, column: 2, scope: !8633)
!8668 = !DILocation(line: 1514, column: 9, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 1514, column: 2)
!8670 = !DILocation(line: 1514, column: 7, scope: !8669)
!8671 = !DILocation(line: 1514, column: 14, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8669, file: !3, line: 1514, column: 2)
!8673 = !DILocation(line: 1514, column: 16, scope: !8672)
!8674 = !DILocation(line: 1514, column: 2, scope: !8669)
!8675 = !DILocation(line: 1515, column: 7, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 1515, column: 7)
!8677 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 1514, column: 46)
!8678 = !DILocation(line: 1515, column: 26, scope: !8676)
!8679 = !DILocation(line: 1515, column: 23, scope: !8676)
!8680 = !DILocation(line: 1515, column: 15, scope: !8676)
!8681 = !DILocation(line: 1515, column: 7, scope: !8677)
!8682 = !DILocation(line: 1516, column: 8, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8684, file: !3, line: 1516, column: 8)
!8684 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 1515, column: 30)
!8685 = !DILocation(line: 1516, column: 13, scope: !8683)
!8686 = !DILocation(line: 1516, column: 10, scope: !8683)
!8687 = !DILocation(line: 1516, column: 8, scope: !8684)
!8688 = !DILocation(line: 1517, column: 20, scope: !8683)
!8689 = !DILocation(line: 1517, column: 44, scope: !8683)
!8690 = !DILocation(line: 1517, column: 34, scope: !8683)
!8691 = !DILocation(line: 1517, column: 47, scope: !8683)
!8692 = !DILocation(line: 1517, column: 12, scope: !8683)
!8693 = !DILocation(line: 1517, column: 9, scope: !8683)
!8694 = !DILocation(line: 1517, column: 5, scope: !8683)
!8695 = !DILocation(line: 1519, column: 20, scope: !8683)
!8696 = !DILocation(line: 1519, column: 42, scope: !8683)
!8697 = !DILocation(line: 1519, column: 32, scope: !8683)
!8698 = !DILocation(line: 1519, column: 45, scope: !8683)
!8699 = !DILocation(line: 1519, column: 12, scope: !8683)
!8700 = !DILocation(line: 1519, column: 9, scope: !8683)
!8701 = !DILocation(line: 1520, column: 3, scope: !8684)
!8702 = !DILocation(line: 1521, column: 2, scope: !8677)
!8703 = !DILocation(line: 1514, column: 42, scope: !8672)
!8704 = !DILocation(line: 1514, column: 2, scope: !8672)
!8705 = distinct !{!8705, !8674, !8706}
!8706 = !DILocation(line: 1521, column: 2, scope: !8669)
!8707 = !DILocation(line: 1523, column: 6, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 1523, column: 6)
!8709 = !DILocation(line: 1523, column: 13, scope: !8708)
!8710 = !DILocation(line: 1523, column: 10, scope: !8708)
!8711 = !DILocation(line: 1523, column: 6, scope: !8633)
!8712 = !DILocation(line: 1524, column: 6, scope: !8708)
!8713 = !DILocation(line: 1524, column: 3, scope: !8708)
!8714 = !DILocation(line: 1525, column: 3, scope: !8633)
!8715 = !DILocation(line: 1525, column: 7, scope: !8633)
!8716 = !DILocation(line: 1527, column: 9, scope: !8633)
!8717 = !DILocation(line: 1527, column: 13, scope: !8633)
!8718 = !DILocation(line: 1527, column: 19, scope: !8633)
!8719 = !DILocation(line: 1527, column: 17, scope: !8633)
!8720 = !DILocation(line: 1527, column: 2, scope: !8633)
!8721 = distinct !DISubprogram(name: "store_wakeup_protocols", scope: !3, file: !3, line: 1544, type: !4248, scopeLine: 1547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8722 = !DILocalVariable(name: "device", arg: 1, scope: !8721, file: !3, line: 1544, type: !3368)
!8723 = !DILocation(line: 1544, column: 54, scope: !8721)
!8724 = !DILocalVariable(name: "mattr", arg: 2, scope: !8721, file: !3, line: 1545, type: !4245)
!8725 = !DILocation(line: 1545, column: 36, scope: !8721)
!8726 = !DILocalVariable(name: "buf", arg: 3, scope: !8721, file: !3, line: 1546, type: !193)
!8727 = !DILocation(line: 1546, column: 23, scope: !8721)
!8728 = !DILocalVariable(name: "len", arg: 4, scope: !8721, file: !3, line: 1546, type: !328)
!8729 = !DILocation(line: 1546, column: 35, scope: !8721)
!8730 = !DILocalVariable(name: "dev", scope: !8721, file: !3, line: 1548, type: !237)
!8731 = !DILocation(line: 1548, column: 17, scope: !8721)
!8732 = !DILocalVariable(name: "__mptr", scope: !8733, file: !3, line: 1548, type: !165)
!8733 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 1548, column: 23)
!8734 = !DILocation(line: 1548, column: 23, scope: !8733)
!8735 = !DILocation(line: 1548, column: 23, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8733, file: !3, line: 1548, column: 23)
!8737 = !DILocalVariable(name: "protocol", scope: !8721, file: !3, line: 1549, type: !5)
!8738 = !DILocation(line: 1549, column: 16, scope: !8721)
!8739 = !DILocalVariable(name: "rc", scope: !8721, file: !3, line: 1550, type: !314)
!8740 = !DILocation(line: 1550, column: 10, scope: !8721)
!8741 = !DILocalVariable(name: "allowed", scope: !8721, file: !3, line: 1551, type: !184)
!8742 = !DILocation(line: 1551, column: 6, scope: !8721)
!8743 = !DILocalVariable(name: "i", scope: !8721, file: !3, line: 1552, type: !159)
!8744 = !DILocation(line: 1552, column: 6, scope: !8721)
!8745 = !DILocation(line: 1554, column: 14, scope: !8721)
!8746 = !DILocation(line: 1554, column: 19, scope: !8721)
!8747 = !DILocation(line: 1554, column: 2, scope: !8721)
!8748 = !DILocation(line: 1555, column: 7, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 1555, column: 6)
!8750 = !DILocation(line: 1555, column: 12, scope: !8749)
!8751 = !DILocation(line: 1555, column: 6, scope: !8721)
!8752 = !DILocation(line: 1556, column: 17, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8749, file: !3, line: 1555, column: 24)
!8754 = !DILocation(line: 1556, column: 22, scope: !8753)
!8755 = !DILocation(line: 1556, column: 3, scope: !8753)
!8756 = !DILocation(line: 1557, column: 3, scope: !8753)
!8757 = !DILocation(line: 1560, column: 12, scope: !8721)
!8758 = !DILocation(line: 1560, column: 17, scope: !8721)
!8759 = !DILocation(line: 1560, column: 10, scope: !8721)
!8760 = !DILocation(line: 1562, column: 19, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 1562, column: 6)
!8762 = !DILocation(line: 1562, column: 7, scope: !8761)
!8763 = !DILocation(line: 1562, column: 6, scope: !8721)
!8764 = !DILocation(line: 1563, column: 10, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 1563, column: 3)
!8766 = distinct !DILexicalBlock(scope: !8761, file: !3, line: 1562, column: 33)
!8767 = !DILocation(line: 1563, column: 8, scope: !8765)
!8768 = !DILocation(line: 1563, column: 15, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8765, file: !3, line: 1563, column: 3)
!8770 = !DILocation(line: 1563, column: 17, scope: !8769)
!8771 = !DILocation(line: 1563, column: 3, scope: !8765)
!8772 = !DILocation(line: 1564, column: 9, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8774, file: !3, line: 1564, column: 8)
!8774 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 1563, column: 47)
!8775 = !DILocation(line: 1564, column: 28, scope: !8773)
!8776 = !DILocation(line: 1564, column: 25, scope: !8773)
!8777 = !DILocation(line: 1564, column: 17, scope: !8773)
!8778 = !DILocation(line: 1564, column: 32, scope: !8773)
!8779 = !DILocation(line: 1565, column: 20, scope: !8773)
!8780 = !DILocation(line: 1565, column: 35, scope: !8773)
!8781 = !DILocation(line: 1565, column: 25, scope: !8773)
!8782 = !DILocation(line: 1565, column: 38, scope: !8773)
!8783 = !DILocation(line: 1565, column: 8, scope: !8773)
!8784 = !DILocation(line: 1564, column: 8, scope: !8774)
!8785 = !DILocation(line: 1566, column: 16, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8773, file: !3, line: 1565, column: 45)
!8787 = !DILocation(line: 1566, column: 14, scope: !8786)
!8788 = !DILocation(line: 1567, column: 5, scope: !8786)
!8789 = !DILocation(line: 1569, column: 3, scope: !8774)
!8790 = !DILocation(line: 1563, column: 43, scope: !8769)
!8791 = !DILocation(line: 1563, column: 3, scope: !8769)
!8792 = distinct !{!8792, !8771, !8793}
!8793 = !DILocation(line: 1569, column: 3, scope: !8765)
!8794 = !DILocation(line: 1571, column: 7, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 1571, column: 7)
!8796 = !DILocation(line: 1571, column: 9, scope: !8795)
!8797 = !DILocation(line: 1571, column: 7, scope: !8766)
!8798 = !DILocation(line: 1572, column: 7, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 1571, column: 35)
!8800 = !DILocation(line: 1573, column: 4, scope: !8799)
!8801 = !DILocation(line: 1576, column: 7, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 1576, column: 7)
!8803 = !DILocation(line: 1576, column: 12, scope: !8802)
!8804 = !DILocation(line: 1576, column: 7, scope: !8766)
!8805 = !DILocalVariable(name: "mask", scope: !8806, file: !3, line: 1577, type: !184)
!8806 = distinct !DILexicalBlock(scope: !8802, file: !3, line: 1576, column: 27)
!8807 = !DILocation(line: 1577, column: 8, scope: !8806)
!8808 = !DILocation(line: 1577, column: 23, scope: !8806)
!8809 = !DILocation(line: 1577, column: 20, scope: !8806)
!8810 = !DILocation(line: 1579, column: 4, scope: !8806)
!8811 = !DILocation(line: 1580, column: 9, scope: !8812)
!8812 = distinct !DILexicalBlock(scope: !8806, file: !3, line: 1580, column: 8)
!8813 = !DILocation(line: 1580, column: 8, scope: !8806)
!8814 = !DILocation(line: 1581, column: 8, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8812, file: !3, line: 1580, column: 15)
!8816 = !DILocation(line: 1582, column: 5, scope: !8815)
!8817 = !DILocation(line: 1584, column: 3, scope: !8806)
!8818 = !DILocation(line: 1585, column: 2, scope: !8766)
!8819 = !DILocation(line: 1587, column: 6, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 1587, column: 6)
!8821 = !DILocation(line: 1587, column: 11, scope: !8820)
!8822 = !DILocation(line: 1587, column: 30, scope: !8820)
!8823 = !DILocation(line: 1587, column: 27, scope: !8820)
!8824 = !DILocation(line: 1587, column: 6, scope: !8721)
!8825 = !DILocation(line: 1588, column: 26, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 1587, column: 40)
!8827 = !DILocation(line: 1588, column: 3, scope: !8826)
!8828 = !DILocation(line: 1588, column: 8, scope: !8826)
!8829 = !DILocation(line: 1588, column: 24, scope: !8826)
!8830 = !DILocation(line: 1591, column: 7, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 1591, column: 7)
!8832 = !DILocation(line: 1591, column: 16, scope: !8831)
!8833 = !DILocation(line: 1591, column: 7, scope: !8826)
!8834 = !DILocation(line: 1592, column: 4, scope: !8831)
!8835 = !DILocation(line: 1592, column: 9, scope: !8831)
!8836 = !DILocation(line: 1592, column: 32, scope: !8831)
!8837 = !DILocation(line: 1592, column: 37, scope: !8831)
!8838 = !DILocation(line: 1594, column: 4, scope: !8831)
!8839 = !DILocation(line: 1594, column: 9, scope: !8831)
!8840 = !DILocation(line: 1594, column: 32, scope: !8831)
!8841 = !DILocation(line: 1594, column: 37, scope: !8831)
!8842 = !DILocation(line: 1595, column: 3, scope: !8826)
!8843 = !DILocation(line: 1595, column: 8, scope: !8826)
!8844 = !DILocation(line: 1595, column: 31, scope: !8826)
!8845 = !DILocation(line: 1595, column: 36, scope: !8826)
!8846 = !DILocation(line: 1597, column: 8, scope: !8826)
!8847 = !DILocation(line: 1597, column: 13, scope: !8826)
!8848 = !DILocation(line: 1597, column: 29, scope: !8826)
!8849 = !DILocation(line: 1597, column: 35, scope: !8826)
!8850 = !DILocation(line: 1597, column: 40, scope: !8826)
!8851 = !DILocation(line: 1597, column: 6, scope: !8826)
!8852 = !DILocation(line: 1598, column: 7, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 1598, column: 7)
!8854 = !DILocation(line: 1598, column: 10, scope: !8853)
!8855 = !DILocation(line: 1598, column: 7, scope: !8826)
!8856 = !DILocation(line: 1599, column: 9, scope: !8853)
!8857 = !DILocation(line: 1599, column: 7, scope: !8853)
!8858 = !DILocation(line: 1599, column: 4, scope: !8853)
!8859 = !DILocation(line: 1600, column: 2, scope: !8826)
!8860 = !DILocation(line: 1601, column: 8, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 1600, column: 9)
!8862 = !DILocation(line: 1601, column: 6, scope: !8861)
!8863 = !DILabel(scope: !8721, name: "out", file: !3, line: 1604)
!8864 = !DILocation(line: 1604, column: 1, scope: !8721)
!8865 = !DILocation(line: 1605, column: 16, scope: !8721)
!8866 = !DILocation(line: 1605, column: 21, scope: !8721)
!8867 = !DILocation(line: 1605, column: 2, scope: !8721)
!8868 = !DILocation(line: 1606, column: 9, scope: !8721)
!8869 = !DILocation(line: 1606, column: 2, scope: !8721)
!8870 = !DILocation(line: 1607, column: 1, scope: !8721)
!8871 = distinct !DISubprogram(name: "ir_setkeytable", scope: !3, file: !3, line: 471, type: !8872, scopeLine: 472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8872 = !DISubroutineType(types: !8873)
!8873 = !{!159, !237, !4631}
!8874 = !DILocalVariable(name: "dev", arg: 1, scope: !8871, file: !3, line: 471, type: !237)
!8875 = !DILocation(line: 471, column: 42, scope: !8871)
!8876 = !DILocalVariable(name: "from", arg: 2, scope: !8871, file: !3, line: 471, type: !4631)
!8877 = !DILocation(line: 471, column: 68, scope: !8871)
!8878 = !DILocalVariable(name: "rc_map", scope: !8871, file: !3, line: 473, type: !4372)
!8879 = !DILocation(line: 473, column: 17, scope: !8871)
!8880 = !DILocation(line: 473, column: 27, scope: !8871)
!8881 = !DILocation(line: 473, column: 32, scope: !8871)
!8882 = !DILocalVariable(name: "i", scope: !8871, file: !3, line: 474, type: !7)
!8883 = !DILocation(line: 474, column: 15, scope: !8871)
!8884 = !DILocalVariable(name: "index", scope: !8871, file: !3, line: 474, type: !7)
!8885 = !DILocation(line: 474, column: 18, scope: !8871)
!8886 = !DILocalVariable(name: "rc", scope: !8871, file: !3, line: 475, type: !159)
!8887 = !DILocation(line: 475, column: 6, scope: !8871)
!8888 = !DILocation(line: 477, column: 23, scope: !8871)
!8889 = !DILocation(line: 477, column: 28, scope: !8871)
!8890 = !DILocation(line: 477, column: 36, scope: !8871)
!8891 = !DILocation(line: 477, column: 42, scope: !8871)
!8892 = !DILocation(line: 477, column: 48, scope: !8871)
!8893 = !DILocation(line: 477, column: 54, scope: !8871)
!8894 = !DILocation(line: 478, column: 9, scope: !8871)
!8895 = !DILocation(line: 478, column: 15, scope: !8871)
!8896 = !DILocation(line: 477, column: 7, scope: !8871)
!8897 = !DILocation(line: 477, column: 5, scope: !8871)
!8898 = !DILocation(line: 479, column: 6, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 479, column: 6)
!8900 = !DILocation(line: 479, column: 6, scope: !8871)
!8901 = !DILocation(line: 480, column: 10, scope: !8899)
!8902 = !DILocation(line: 480, column: 3, scope: !8899)
!8903 = !DILocation(line: 482, column: 9, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 482, column: 2)
!8905 = !DILocation(line: 482, column: 7, scope: !8904)
!8906 = !DILocation(line: 482, column: 14, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 482, column: 2)
!8908 = !DILocation(line: 482, column: 18, scope: !8907)
!8909 = !DILocation(line: 482, column: 24, scope: !8907)
!8910 = !DILocation(line: 482, column: 16, scope: !8907)
!8911 = !DILocation(line: 482, column: 2, scope: !8904)
!8912 = !DILocation(line: 483, column: 33, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 482, column: 35)
!8914 = !DILocation(line: 483, column: 38, scope: !8913)
!8915 = !DILocation(line: 484, column: 12, scope: !8913)
!8916 = !DILocation(line: 484, column: 18, scope: !8913)
!8917 = !DILocation(line: 484, column: 23, scope: !8913)
!8918 = !DILocation(line: 484, column: 26, scope: !8913)
!8919 = !DILocation(line: 483, column: 11, scope: !8913)
!8920 = !DILocation(line: 483, column: 9, scope: !8913)
!8921 = !DILocation(line: 485, column: 7, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 485, column: 7)
!8923 = !DILocation(line: 485, column: 16, scope: !8922)
!8924 = !DILocation(line: 485, column: 24, scope: !8922)
!8925 = !DILocation(line: 485, column: 13, scope: !8922)
!8926 = !DILocation(line: 485, column: 7, scope: !8913)
!8927 = !DILocation(line: 486, column: 7, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 485, column: 29)
!8929 = !DILocation(line: 487, column: 4, scope: !8928)
!8930 = !DILocation(line: 490, column: 21, scope: !8913)
!8931 = !DILocation(line: 490, column: 26, scope: !8913)
!8932 = !DILocation(line: 490, column: 34, scope: !8913)
!8933 = !DILocation(line: 491, column: 7, scope: !8913)
!8934 = !DILocation(line: 491, column: 13, scope: !8913)
!8935 = !DILocation(line: 491, column: 18, scope: !8913)
!8936 = !DILocation(line: 491, column: 21, scope: !8913)
!8937 = !DILocation(line: 490, column: 3, scope: !8913)
!8938 = !DILocation(line: 492, column: 2, scope: !8913)
!8939 = !DILocation(line: 482, column: 31, scope: !8907)
!8940 = !DILocation(line: 482, column: 2, scope: !8907)
!8941 = distinct !{!8941, !8911, !8942}
!8942 = !DILocation(line: 492, column: 2, scope: !8904)
!8943 = !DILocation(line: 494, column: 6, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 494, column: 6)
!8945 = !DILocation(line: 494, column: 6, scope: !8871)
!8946 = !DILocation(line: 495, column: 17, scope: !8944)
!8947 = !DILocation(line: 495, column: 3, scope: !8944)
!8948 = !DILocation(line: 497, column: 9, scope: !8871)
!8949 = !DILocation(line: 497, column: 2, scope: !8871)
!8950 = !DILocation(line: 498, column: 1, scope: !8871)
!8951 = distinct !DISubprogram(name: "set_bit", scope: !8952, file: !8952, line: 26, type: !7776, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8952 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!8953 = !DILocalVariable(name: "nr", arg: 1, scope: !8954, file: !7156, line: 52, type: !215)
!8954 = distinct !DISubprogram(name: "arch_set_bit", scope: !7156, file: !7156, line: 52, type: !7776, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8955 = !DILocation(line: 52, column: 19, scope: !8954, inlinedAt: !8956)
!8956 = distinct !DILocation(line: 29, column: 2, scope: !8951)
!8957 = !DILocalVariable(name: "addr", arg: 2, scope: !8954, file: !7156, line: 52, type: !7778)
!8958 = !DILocation(line: 52, column: 47, scope: !8954, inlinedAt: !8956)
!8959 = !DILocalVariable(name: "v", arg: 1, scope: !8960, file: !7788, line: 84, type: !7791)
!8960 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !7788, file: !7788, line: 84, type: !7789, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8961 = !DILocation(line: 84, column: 74, scope: !8960, inlinedAt: !8962)
!8962 = distinct !DILocation(line: 28, column: 2, scope: !8951)
!8963 = !DILocalVariable(name: "size", arg: 2, scope: !8960, file: !7788, line: 84, type: !328)
!8964 = !DILocation(line: 84, column: 84, scope: !8960, inlinedAt: !8962)
!8965 = !DILocalVariable(name: "nr", arg: 1, scope: !8951, file: !8952, line: 26, type: !215)
!8966 = !DILocation(line: 26, column: 33, scope: !8951)
!8967 = !DILocalVariable(name: "addr", arg: 2, scope: !8951, file: !8952, line: 26, type: !7778)
!8968 = !DILocation(line: 26, column: 61, scope: !8951)
!8969 = !DILocation(line: 28, column: 26, scope: !8951)
!8970 = !DILocation(line: 28, column: 33, scope: !8951)
!8971 = !DILocation(line: 28, column: 31, scope: !8951)
!8972 = !DILocation(line: 86, column: 20, scope: !8960, inlinedAt: !8962)
!8973 = !DILocation(line: 86, column: 23, scope: !8960, inlinedAt: !8962)
!8974 = !DILocation(line: 86, column: 2, scope: !8960, inlinedAt: !8962)
!8975 = !DILocation(line: 87, column: 2, scope: !8960, inlinedAt: !8962)
!8976 = !DILocation(line: 29, column: 15, scope: !8951)
!8977 = !DILocation(line: 29, column: 19, scope: !8951)
!8978 = !DILocation(line: 54, column: 27, scope: !8979, inlinedAt: !8956)
!8979 = distinct !DILexicalBlock(scope: !8954, file: !7156, line: 54, column: 6)
!8980 = !DILocation(line: 54, column: 6, scope: !8979, inlinedAt: !8956)
!8981 = !DILocation(line: 54, column: 6, scope: !8954, inlinedAt: !8956)
!8982 = !DILocation(line: 56, column: 6, scope: !8983, inlinedAt: !8956)
!8983 = distinct !DILexicalBlock(scope: !8979, file: !7156, line: 54, column: 32)
!8984 = !DILocation(line: 57, column: 12, scope: !8983, inlinedAt: !8956)
!8985 = !DILocation(line: 55, column: 3, scope: !8983, inlinedAt: !8956)
!8986 = !{i32 -2147088242}
!8987 = !DILocation(line: 59, column: 2, scope: !8983, inlinedAt: !8956)
!8988 = !DILocation(line: 61, column: 8, scope: !8989, inlinedAt: !8956)
!8989 = distinct !DILexicalBlock(scope: !8979, file: !7156, line: 59, column: 9)
!8990 = !DILocation(line: 61, column: 32, scope: !8989, inlinedAt: !8956)
!8991 = !DILocation(line: 60, column: 3, scope: !8989, inlinedAt: !8956)
!8992 = !{i32 -2147088110}
!8993 = !DILocation(line: 30, column: 1, scope: !8951)
!8994 = distinct !DISubprogram(name: "ir_open", scope: !3, file: !3, line: 993, type: !4052, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!8995 = !DILocalVariable(name: "idev", arg: 1, scope: !8994, file: !3, line: 993, type: !3888)
!8996 = !DILocation(line: 993, column: 38, scope: !8994)
!8997 = !DILocalVariable(name: "rdev", scope: !8994, file: !3, line: 995, type: !237)
!8998 = !DILocation(line: 995, column: 17, scope: !8994)
!8999 = !DILocation(line: 995, column: 42, scope: !8994)
!9000 = !DILocation(line: 995, column: 24, scope: !8994)
!9001 = !DILocation(line: 997, column: 17, scope: !8994)
!9002 = !DILocation(line: 997, column: 9, scope: !8994)
!9003 = !DILocation(line: 997, column: 2, scope: !8994)
!9004 = distinct !DISubprogram(name: "ir_close", scope: !3, file: !3, line: 1012, type: !4056, scopeLine: 1013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!9005 = !DILocalVariable(name: "idev", arg: 1, scope: !9004, file: !3, line: 1012, type: !3888)
!9006 = !DILocation(line: 1012, column: 40, scope: !9004)
!9007 = !DILocalVariable(name: "rdev", scope: !9004, file: !3, line: 1014, type: !237)
!9008 = !DILocation(line: 1014, column: 17, scope: !9004)
!9009 = !DILocation(line: 1014, column: 42, scope: !9004)
!9010 = !DILocation(line: 1014, column: 24, scope: !9004)
!9011 = !DILocation(line: 1015, column: 11, scope: !9004)
!9012 = !DILocation(line: 1015, column: 2, scope: !9004)
!9013 = !DILocation(line: 1016, column: 1, scope: !9004)
!9014 = distinct !DISubprogram(name: "ir_create_table", scope: !3, file: !3, line: 214, type: !9015, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!9015 = !DISubroutineType(types: !9016)
!9016 = !{!159, !237, !4372, !193, !184, !328}
!9017 = !DILocation(line: 445, column: 72, scope: !5539, inlinedAt: !9018)
!9018 = distinct !DILocation(line: 552, column: 10, scope: !5544, inlinedAt: !9019)
!9019 = distinct !DILocation(line: 223, column: 17, scope: !9014)
!9020 = !DILocation(line: 446, column: 9, scope: !5539, inlinedAt: !9018)
!9021 = !DILocation(line: 446, column: 23, scope: !5539, inlinedAt: !9018)
!9022 = !DILocation(line: 448, column: 8, scope: !5539, inlinedAt: !9018)
!9023 = !DILocation(line: 318, column: 67, scope: !5555, inlinedAt: !9024)
!9024 = distinct !DILocation(line: 553, column: 20, scope: !5544, inlinedAt: !9019)
!9025 = !DILocation(line: 346, column: 58, scope: !5561, inlinedAt: !9026)
!9026 = distinct !DILocation(line: 547, column: 11, scope: !5544, inlinedAt: !9019)
!9027 = !DILocation(line: 472, column: 28, scope: !5567, inlinedAt: !9028)
!9028 = distinct !DILocation(line: 481, column: 9, scope: !5572, inlinedAt: !9029)
!9029 = distinct !DILocation(line: 545, column: 11, scope: !5574, inlinedAt: !9019)
!9030 = !DILocation(line: 472, column: 40, scope: !5567, inlinedAt: !9028)
!9031 = !DILocation(line: 472, column: 60, scope: !5567, inlinedAt: !9028)
!9032 = !DILocation(line: 478, column: 51, scope: !5572, inlinedAt: !9029)
!9033 = !DILocation(line: 478, column: 63, scope: !5572, inlinedAt: !9029)
!9034 = !DILocation(line: 480, column: 15, scope: !5572, inlinedAt: !9029)
!9035 = !DILocation(line: 538, column: 45, scope: !5546, inlinedAt: !9019)
!9036 = !DILocation(line: 538, column: 57, scope: !5546, inlinedAt: !9019)
!9037 = !DILocation(line: 542, column: 16, scope: !5544, inlinedAt: !9019)
!9038 = !DILocalVariable(name: "dev", arg: 1, scope: !9014, file: !3, line: 214, type: !237)
!9039 = !DILocation(line: 214, column: 43, scope: !9014)
!9040 = !DILocalVariable(name: "rc_map", arg: 2, scope: !9014, file: !3, line: 214, type: !4372)
!9041 = !DILocation(line: 214, column: 63, scope: !9014)
!9042 = !DILocalVariable(name: "name", arg: 3, scope: !9014, file: !3, line: 215, type: !193)
!9043 = !DILocation(line: 215, column: 19, scope: !9014)
!9044 = !DILocalVariable(name: "rc_proto", arg: 4, scope: !9014, file: !3, line: 215, type: !184)
!9045 = !DILocation(line: 215, column: 29, scope: !9014)
!9046 = !DILocalVariable(name: "size", arg: 5, scope: !9014, file: !3, line: 215, type: !328)
!9047 = !DILocation(line: 215, column: 46, scope: !9014)
!9048 = !DILocation(line: 217, column: 25, scope: !9014)
!9049 = !DILocation(line: 217, column: 17, scope: !9014)
!9050 = !DILocation(line: 217, column: 2, scope: !9014)
!9051 = !DILocation(line: 217, column: 10, scope: !9014)
!9052 = !DILocation(line: 217, column: 15, scope: !9014)
!9053 = !DILocation(line: 218, column: 7, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9014, file: !3, line: 218, column: 6)
!9055 = !DILocation(line: 218, column: 15, scope: !9054)
!9056 = !DILocation(line: 218, column: 6, scope: !9014)
!9057 = !DILocation(line: 219, column: 3, scope: !9054)
!9058 = !DILocation(line: 220, column: 21, scope: !9014)
!9059 = !DILocation(line: 220, column: 2, scope: !9014)
!9060 = !DILocation(line: 220, column: 10, scope: !9014)
!9061 = !DILocation(line: 220, column: 19, scope: !9014)
!9062 = !DILocation(line: 221, column: 18, scope: !9014)
!9063 = !DILocation(line: 221, column: 2, scope: !9014)
!9064 = !DILocation(line: 221, column: 10, scope: !9014)
!9065 = !DILocation(line: 221, column: 16, scope: !9014)
!9066 = !DILocation(line: 222, column: 17, scope: !9014)
!9067 = !DILocation(line: 222, column: 25, scope: !9014)
!9068 = !DILocation(line: 222, column: 31, scope: !9014)
!9069 = !DILocation(line: 222, column: 2, scope: !9014)
!9070 = !DILocation(line: 222, column: 10, scope: !9014)
!9071 = !DILocation(line: 222, column: 15, scope: !9014)
!9072 = !DILocation(line: 223, column: 25, scope: !9014)
!9073 = !DILocation(line: 223, column: 33, scope: !9014)
!9074 = !DILocation(line: 540, column: 27, scope: !5545, inlinedAt: !9019)
!9075 = !DILocation(line: 540, column: 6, scope: !5545, inlinedAt: !9019)
!9076 = !DILocation(line: 540, column: 6, scope: !5546, inlinedAt: !9019)
!9077 = !DILocation(line: 544, column: 7, scope: !5574, inlinedAt: !9019)
!9078 = !DILocation(line: 544, column: 12, scope: !5574, inlinedAt: !9019)
!9079 = !DILocation(line: 544, column: 7, scope: !5544, inlinedAt: !9019)
!9080 = !DILocation(line: 545, column: 25, scope: !5574, inlinedAt: !9019)
!9081 = !DILocation(line: 545, column: 31, scope: !5574, inlinedAt: !9019)
!9082 = !DILocation(line: 480, column: 33, scope: !5572, inlinedAt: !9029)
!9083 = !DILocation(line: 480, column: 23, scope: !5572, inlinedAt: !9029)
!9084 = !DILocation(line: 481, column: 29, scope: !5572, inlinedAt: !9029)
!9085 = !DILocation(line: 481, column: 35, scope: !5572, inlinedAt: !9029)
!9086 = !DILocation(line: 481, column: 42, scope: !5572, inlinedAt: !9029)
!9087 = !DILocation(line: 474, column: 23, scope: !5567, inlinedAt: !9028)
!9088 = !DILocation(line: 474, column: 29, scope: !5567, inlinedAt: !9028)
!9089 = !DILocation(line: 474, column: 36, scope: !5567, inlinedAt: !9028)
!9090 = !DILocation(line: 474, column: 9, scope: !5567, inlinedAt: !9028)
!9091 = !DILocation(line: 545, column: 4, scope: !5574, inlinedAt: !9019)
!9092 = !DILocation(line: 547, column: 25, scope: !5544, inlinedAt: !9019)
!9093 = !DILocation(line: 348, column: 7, scope: !5618, inlinedAt: !9026)
!9094 = !DILocation(line: 348, column: 6, scope: !5561, inlinedAt: !9026)
!9095 = !DILocation(line: 349, column: 3, scope: !5618, inlinedAt: !9026)
!9096 = !DILocation(line: 351, column: 6, scope: !5622, inlinedAt: !9026)
!9097 = !DILocation(line: 351, column: 11, scope: !5622, inlinedAt: !9026)
!9098 = !DILocation(line: 351, column: 6, scope: !5561, inlinedAt: !9026)
!9099 = !DILocation(line: 352, column: 3, scope: !5622, inlinedAt: !9026)
!9100 = !DILocation(line: 354, column: 32, scope: !5627, inlinedAt: !9026)
!9101 = !DILocation(line: 354, column: 37, scope: !5627, inlinedAt: !9026)
!9102 = !DILocation(line: 354, column: 42, scope: !5627, inlinedAt: !9026)
!9103 = !DILocation(line: 354, column: 45, scope: !5627, inlinedAt: !9026)
!9104 = !DILocation(line: 354, column: 50, scope: !5627, inlinedAt: !9026)
!9105 = !DILocation(line: 354, column: 6, scope: !5561, inlinedAt: !9026)
!9106 = !DILocation(line: 355, column: 3, scope: !5627, inlinedAt: !9026)
!9107 = !DILocation(line: 356, column: 32, scope: !5635, inlinedAt: !9026)
!9108 = !DILocation(line: 356, column: 37, scope: !5635, inlinedAt: !9026)
!9109 = !DILocation(line: 356, column: 43, scope: !5635, inlinedAt: !9026)
!9110 = !DILocation(line: 356, column: 46, scope: !5635, inlinedAt: !9026)
!9111 = !DILocation(line: 356, column: 51, scope: !5635, inlinedAt: !9026)
!9112 = !DILocation(line: 356, column: 6, scope: !5561, inlinedAt: !9026)
!9113 = !DILocation(line: 357, column: 3, scope: !5635, inlinedAt: !9026)
!9114 = !DILocation(line: 358, column: 6, scope: !5643, inlinedAt: !9026)
!9115 = !DILocation(line: 358, column: 11, scope: !5643, inlinedAt: !9026)
!9116 = !DILocation(line: 358, column: 6, scope: !5561, inlinedAt: !9026)
!9117 = !DILocation(line: 358, column: 26, scope: !5643, inlinedAt: !9026)
!9118 = !DILocation(line: 359, column: 6, scope: !5648, inlinedAt: !9026)
!9119 = !DILocation(line: 359, column: 11, scope: !5648, inlinedAt: !9026)
!9120 = !DILocation(line: 359, column: 6, scope: !5561, inlinedAt: !9026)
!9121 = !DILocation(line: 359, column: 26, scope: !5648, inlinedAt: !9026)
!9122 = !DILocation(line: 360, column: 6, scope: !5653, inlinedAt: !9026)
!9123 = !DILocation(line: 360, column: 11, scope: !5653, inlinedAt: !9026)
!9124 = !DILocation(line: 360, column: 6, scope: !5561, inlinedAt: !9026)
!9125 = !DILocation(line: 360, column: 26, scope: !5653, inlinedAt: !9026)
!9126 = !DILocation(line: 361, column: 6, scope: !5658, inlinedAt: !9026)
!9127 = !DILocation(line: 361, column: 11, scope: !5658, inlinedAt: !9026)
!9128 = !DILocation(line: 361, column: 6, scope: !5561, inlinedAt: !9026)
!9129 = !DILocation(line: 361, column: 26, scope: !5658, inlinedAt: !9026)
!9130 = !DILocation(line: 362, column: 6, scope: !5663, inlinedAt: !9026)
!9131 = !DILocation(line: 362, column: 11, scope: !5663, inlinedAt: !9026)
!9132 = !DILocation(line: 362, column: 6, scope: !5561, inlinedAt: !9026)
!9133 = !DILocation(line: 362, column: 26, scope: !5663, inlinedAt: !9026)
!9134 = !DILocation(line: 363, column: 6, scope: !5668, inlinedAt: !9026)
!9135 = !DILocation(line: 363, column: 11, scope: !5668, inlinedAt: !9026)
!9136 = !DILocation(line: 363, column: 6, scope: !5561, inlinedAt: !9026)
!9137 = !DILocation(line: 363, column: 26, scope: !5668, inlinedAt: !9026)
!9138 = !DILocation(line: 364, column: 6, scope: !5673, inlinedAt: !9026)
!9139 = !DILocation(line: 364, column: 11, scope: !5673, inlinedAt: !9026)
!9140 = !DILocation(line: 364, column: 6, scope: !5561, inlinedAt: !9026)
!9141 = !DILocation(line: 364, column: 26, scope: !5673, inlinedAt: !9026)
!9142 = !DILocation(line: 365, column: 6, scope: !5678, inlinedAt: !9026)
!9143 = !DILocation(line: 365, column: 11, scope: !5678, inlinedAt: !9026)
!9144 = !DILocation(line: 365, column: 6, scope: !5561, inlinedAt: !9026)
!9145 = !DILocation(line: 365, column: 26, scope: !5678, inlinedAt: !9026)
!9146 = !DILocation(line: 366, column: 6, scope: !5683, inlinedAt: !9026)
!9147 = !DILocation(line: 366, column: 11, scope: !5683, inlinedAt: !9026)
!9148 = !DILocation(line: 366, column: 6, scope: !5561, inlinedAt: !9026)
!9149 = !DILocation(line: 366, column: 26, scope: !5683, inlinedAt: !9026)
!9150 = !DILocation(line: 367, column: 6, scope: !5688, inlinedAt: !9026)
!9151 = !DILocation(line: 367, column: 11, scope: !5688, inlinedAt: !9026)
!9152 = !DILocation(line: 367, column: 6, scope: !5561, inlinedAt: !9026)
!9153 = !DILocation(line: 367, column: 26, scope: !5688, inlinedAt: !9026)
!9154 = !DILocation(line: 368, column: 6, scope: !5693, inlinedAt: !9026)
!9155 = !DILocation(line: 368, column: 11, scope: !5693, inlinedAt: !9026)
!9156 = !DILocation(line: 368, column: 6, scope: !5561, inlinedAt: !9026)
!9157 = !DILocation(line: 368, column: 26, scope: !5693, inlinedAt: !9026)
!9158 = !DILocation(line: 369, column: 6, scope: !5698, inlinedAt: !9026)
!9159 = !DILocation(line: 369, column: 11, scope: !5698, inlinedAt: !9026)
!9160 = !DILocation(line: 369, column: 6, scope: !5561, inlinedAt: !9026)
!9161 = !DILocation(line: 369, column: 26, scope: !5698, inlinedAt: !9026)
!9162 = !DILocation(line: 370, column: 6, scope: !5703, inlinedAt: !9026)
!9163 = !DILocation(line: 370, column: 11, scope: !5703, inlinedAt: !9026)
!9164 = !DILocation(line: 370, column: 6, scope: !5561, inlinedAt: !9026)
!9165 = !DILocation(line: 370, column: 26, scope: !5703, inlinedAt: !9026)
!9166 = !DILocation(line: 371, column: 6, scope: !5708, inlinedAt: !9026)
!9167 = !DILocation(line: 371, column: 11, scope: !5708, inlinedAt: !9026)
!9168 = !DILocation(line: 371, column: 6, scope: !5561, inlinedAt: !9026)
!9169 = !DILocation(line: 371, column: 26, scope: !5708, inlinedAt: !9026)
!9170 = !DILocation(line: 372, column: 6, scope: !5713, inlinedAt: !9026)
!9171 = !DILocation(line: 372, column: 11, scope: !5713, inlinedAt: !9026)
!9172 = !DILocation(line: 372, column: 6, scope: !5561, inlinedAt: !9026)
!9173 = !DILocation(line: 372, column: 26, scope: !5713, inlinedAt: !9026)
!9174 = !DILocation(line: 373, column: 6, scope: !5718, inlinedAt: !9026)
!9175 = !DILocation(line: 373, column: 11, scope: !5718, inlinedAt: !9026)
!9176 = !DILocation(line: 373, column: 6, scope: !5561, inlinedAt: !9026)
!9177 = !DILocation(line: 373, column: 26, scope: !5718, inlinedAt: !9026)
!9178 = !DILocation(line: 374, column: 6, scope: !5723, inlinedAt: !9026)
!9179 = !DILocation(line: 374, column: 11, scope: !5723, inlinedAt: !9026)
!9180 = !DILocation(line: 374, column: 6, scope: !5561, inlinedAt: !9026)
!9181 = !DILocation(line: 374, column: 26, scope: !5723, inlinedAt: !9026)
!9182 = !DILocation(line: 375, column: 6, scope: !5728, inlinedAt: !9026)
!9183 = !DILocation(line: 375, column: 11, scope: !5728, inlinedAt: !9026)
!9184 = !DILocation(line: 375, column: 6, scope: !5561, inlinedAt: !9026)
!9185 = !DILocation(line: 375, column: 27, scope: !5728, inlinedAt: !9026)
!9186 = !DILocation(line: 376, column: 6, scope: !5733, inlinedAt: !9026)
!9187 = !DILocation(line: 376, column: 11, scope: !5733, inlinedAt: !9026)
!9188 = !DILocation(line: 376, column: 6, scope: !5561, inlinedAt: !9026)
!9189 = !DILocation(line: 376, column: 32, scope: !5733, inlinedAt: !9026)
!9190 = !DILocation(line: 377, column: 6, scope: !5738, inlinedAt: !9026)
!9191 = !DILocation(line: 377, column: 11, scope: !5738, inlinedAt: !9026)
!9192 = !DILocation(line: 377, column: 6, scope: !5561, inlinedAt: !9026)
!9193 = !DILocation(line: 377, column: 32, scope: !5738, inlinedAt: !9026)
!9194 = !DILocation(line: 378, column: 6, scope: !5743, inlinedAt: !9026)
!9195 = !DILocation(line: 378, column: 11, scope: !5743, inlinedAt: !9026)
!9196 = !DILocation(line: 378, column: 6, scope: !5561, inlinedAt: !9026)
!9197 = !DILocation(line: 378, column: 32, scope: !5743, inlinedAt: !9026)
!9198 = !DILocation(line: 379, column: 6, scope: !5748, inlinedAt: !9026)
!9199 = !DILocation(line: 379, column: 11, scope: !5748, inlinedAt: !9026)
!9200 = !DILocation(line: 379, column: 6, scope: !5561, inlinedAt: !9026)
!9201 = !DILocation(line: 379, column: 33, scope: !5748, inlinedAt: !9026)
!9202 = !DILocation(line: 380, column: 6, scope: !5753, inlinedAt: !9026)
!9203 = !DILocation(line: 380, column: 11, scope: !5753, inlinedAt: !9026)
!9204 = !DILocation(line: 380, column: 6, scope: !5561, inlinedAt: !9026)
!9205 = !DILocation(line: 380, column: 33, scope: !5753, inlinedAt: !9026)
!9206 = !DILocation(line: 381, column: 6, scope: !5758, inlinedAt: !9026)
!9207 = !DILocation(line: 381, column: 11, scope: !5758, inlinedAt: !9026)
!9208 = !DILocation(line: 381, column: 6, scope: !5561, inlinedAt: !9026)
!9209 = !DILocation(line: 381, column: 33, scope: !5758, inlinedAt: !9026)
!9210 = !DILocation(line: 382, column: 2, scope: !5763, inlinedAt: !9026)
!9211 = !DILocation(line: 382, column: 2, scope: !5767, inlinedAt: !9026)
!9212 = !DILocation(line: 382, column: 2, scope: !5768, inlinedAt: !9026)
!9213 = !DILocation(line: 386, column: 1, scope: !5561, inlinedAt: !9026)
!9214 = !DILocation(line: 547, column: 9, scope: !5544, inlinedAt: !9019)
!9215 = !DILocation(line: 549, column: 8, scope: !5774, inlinedAt: !9019)
!9216 = !DILocation(line: 549, column: 7, scope: !5544, inlinedAt: !9019)
!9217 = !DILocation(line: 550, column: 4, scope: !5774, inlinedAt: !9019)
!9218 = !DILocation(line: 553, column: 33, scope: !5544, inlinedAt: !9019)
!9219 = !DILocation(line: 325, column: 6, scope: !5779, inlinedAt: !9024)
!9220 = !DILocation(line: 325, column: 6, scope: !5555, inlinedAt: !9024)
!9221 = !DILocation(line: 326, column: 3, scope: !5779, inlinedAt: !9024)
!9222 = !DILocation(line: 332, column: 9, scope: !5555, inlinedAt: !9024)
!9223 = !DILocation(line: 332, column: 15, scope: !5555, inlinedAt: !9024)
!9224 = !DILocation(line: 332, column: 2, scope: !5555, inlinedAt: !9024)
!9225 = !DILocation(line: 336, column: 1, scope: !5555, inlinedAt: !9024)
!9226 = !DILocation(line: 553, column: 5, scope: !5544, inlinedAt: !9019)
!9227 = !DILocation(line: 553, column: 41, scope: !5544, inlinedAt: !9019)
!9228 = !DILocation(line: 554, column: 5, scope: !5544, inlinedAt: !9019)
!9229 = !DILocation(line: 554, column: 12, scope: !5544, inlinedAt: !9019)
!9230 = !DILocation(line: 448, column: 31, scope: !5539, inlinedAt: !9018)
!9231 = !DILocation(line: 448, column: 34, scope: !5539, inlinedAt: !9018)
!9232 = !DILocation(line: 448, column: 14, scope: !5539, inlinedAt: !9018)
!9233 = !DILocation(line: 450, column: 22, scope: !5539, inlinedAt: !9018)
!9234 = !DILocation(line: 450, column: 25, scope: !5539, inlinedAt: !9018)
!9235 = !DILocation(line: 450, column: 30, scope: !5539, inlinedAt: !9018)
!9236 = !DILocation(line: 450, column: 36, scope: !5539, inlinedAt: !9018)
!9237 = !DILocation(line: 450, column: 8, scope: !5539, inlinedAt: !9018)
!9238 = !DILocation(line: 450, column: 6, scope: !5539, inlinedAt: !9018)
!9239 = !DILocation(line: 451, column: 9, scope: !5539, inlinedAt: !9018)
!9240 = !DILocation(line: 552, column: 3, scope: !5544, inlinedAt: !9019)
!9241 = !DILocation(line: 557, column: 19, scope: !5546, inlinedAt: !9019)
!9242 = !DILocation(line: 557, column: 25, scope: !5546, inlinedAt: !9019)
!9243 = !DILocation(line: 557, column: 9, scope: !5546, inlinedAt: !9019)
!9244 = !DILocation(line: 557, column: 2, scope: !5546, inlinedAt: !9019)
!9245 = !DILocation(line: 558, column: 1, scope: !5546, inlinedAt: !9019)
!9246 = !DILocation(line: 223, column: 17, scope: !9014)
!9247 = !DILocation(line: 223, column: 2, scope: !9014)
!9248 = !DILocation(line: 223, column: 10, scope: !9014)
!9249 = !DILocation(line: 223, column: 15, scope: !9014)
!9250 = !DILocation(line: 224, column: 7, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9014, file: !3, line: 224, column: 6)
!9252 = !DILocation(line: 224, column: 15, scope: !9251)
!9253 = !DILocation(line: 224, column: 6, scope: !9014)
!9254 = !DILocation(line: 225, column: 9, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 224, column: 21)
!9256 = !DILocation(line: 225, column: 17, scope: !9255)
!9257 = !DILocation(line: 225, column: 3, scope: !9255)
!9258 = !DILocation(line: 226, column: 3, scope: !9255)
!9259 = !DILocation(line: 226, column: 11, scope: !9255)
!9260 = !DILocation(line: 226, column: 16, scope: !9255)
!9261 = !DILocation(line: 227, column: 3, scope: !9255)
!9262 = !DILocation(line: 232, column: 2, scope: !9014)
!9263 = !DILocation(line: 233, column: 1, scope: !9014)
!9264 = distinct !DISubprogram(name: "__roundup_pow_of_two", scope: !7194, file: !7194, line: 55, type: !9265, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!9265 = !DISubroutineType(types: !9266)
!9266 = !{!214, !214}
!9267 = !DILocalVariable(name: "n", arg: 1, scope: !9264, file: !7194, line: 55, type: !214)
!9268 = !DILocation(line: 55, column: 50, scope: !9264)
!9269 = !DILocation(line: 57, column: 25, scope: !9264)
!9270 = !DILocation(line: 57, column: 27, scope: !9264)
!9271 = !DILocation(line: 57, column: 16, scope: !9264)
!9272 = !DILocation(line: 57, column: 13, scope: !9264)
!9273 = !DILocation(line: 57, column: 2, scope: !9264)
!9274 = distinct !DISubprogram(name: "fls_long", scope: !9275, file: !9275, line: 182, type: !9276, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!9275 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!9276 = !DISubroutineType(types: !9277)
!9277 = !{!7, !214}
!9278 = !DILocation(line: 366, column: 40, scope: !7155, inlinedAt: !9279)
!9279 = distinct !DILocation(line: 186, column: 9, scope: !9274)
!9280 = !DILocation(line: 368, column: 6, scope: !7155, inlinedAt: !9279)
!9281 = !DILocalVariable(name: "l", arg: 1, scope: !9274, file: !9275, line: 182, type: !214)
!9282 = !DILocation(line: 182, column: 47, scope: !9274)
!9283 = !DILocation(line: 186, column: 15, scope: !9274)
!9284 = !DILocation(line: 374, column: 2, scope: !7155, inlinedAt: !9279)
!9285 = !DILocation(line: 376, column: 14, scope: !7155, inlinedAt: !9279)
!9286 = !DILocation(line: 377, column: 9, scope: !7155, inlinedAt: !9279)
!9287 = !DILocation(line: 377, column: 16, scope: !7155, inlinedAt: !9279)
!9288 = !DILocation(line: 186, column: 2, scope: !9274)
!9289 = distinct !DISubprogram(name: "lirc_dev_init", scope: !3836, file: !3836, line: 330, type: !4361, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!9290 = !DILocation(line: 330, column: 41, scope: !9289)
!9291 = distinct !DISubprogram(name: "led_trigger_register_simple", scope: !136, file: !136, line: 435, type: !9292, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !211)
!9292 = !DISubroutineType(types: !9293)
!9293 = !{null, !193, !9294}
!9294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!9295 = !DILocalVariable(name: "name", arg: 1, scope: !9291, file: !136, line: 435, type: !193)
!9296 = !DILocation(line: 435, column: 60, scope: !9291)
!9297 = !DILocalVariable(name: "trigger", arg: 2, scope: !9291, file: !136, line: 436, type: !9294)
!9298 = !DILocation(line: 436, column: 27, scope: !9291)
!9299 = !DILocation(line: 436, column: 37, scope: !9291)
