; ModuleID = '../bcout/drivers/media/dvb-frontends/stb0899_drv.llvm.bc'
source_filename = "drivers/media/dvb-frontends/stb0899_drv.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.dvb_frontend_ops = type { %struct.dvb_frontend_internal_info, [8 x i8], void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i8*, i32)*, i32 (%struct.dvb_frontend*, i1, i32, i32*, i32*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.dvb_frontend_tune_settings*)*, i32 (%struct.dvb_frontend*, %struct.dtv_frontend_properties*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_master_cmd*)*, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_slave_reply*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i64)*, i32 (%struct.dvb_frontend*, i64)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, %struct.dvb_tuner_ops, %struct.analog_demod_ops }
%struct.dvb_frontend_internal_info = type { [128 x i8], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.dvb_frontend = type { %struct.kref, %struct.dvb_frontend_ops, %struct.dvb_adapter*, i8*, i8*, i8*, i8*, i8*, %struct.dtv_frontend_properties, i32 (i8*, i32, i32, i32)*, i32, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.dvb_adapter = type { i32, %struct.list_head, %struct.list_head, i8*, [6 x i8], i8*, %struct.device*, %struct.module*, i32, %struct.dvb_device*, %struct.mutex }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.27, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.27 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.30, %struct.list_head, %struct.list_head, %union.anon.31 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.28 }
%union.anon.28 = type { %struct.anon.29 }
%struct.anon.29 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.4, %union.anon.19, %struct.atomic_t, [8 x i8] }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.19 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.20, i32 }
%union.anon.20 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.60, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon, [0 x i64] }
%struct.anon = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.0, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.0 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.41 }
%union.anon.41 = type { %struct.anon.42 }
%struct.anon.42 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.32, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.33, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.34, %union.anon.38, %struct.key_restriction* }
%union.anon.32 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.33 = type { i64 }
%union.anon.34 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.35, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.35 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.38 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.46, %union.anon.47, i32 }
%struct.request_queue = type opaque
%union.anon.46 = type { %struct.list_head }
%union.anon.47 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.48 }
%struct.anon.48 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.52 }
%struct.anon.52 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.59, i32, [12 x i8] }
%union.anon.59 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.60 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.61, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.64 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { i64, i64 }
%union.anon.64 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.30 = type { %struct.list_head }
%union.anon.31 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.21, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.22, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.23, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.26, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.21 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.22 = type { %struct.callback_head }
%union.anon.23 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.7 }
%union.anon.7 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.26 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.24 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.24 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.40 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.40 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.6 }
%union.anon.6 = type { %struct.raw_spinlock }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.dvb_device = type { %struct.list_head, %struct.file_operations*, %struct.dvb_adapter*, i32, i32, i32, i32, i32, i32, %struct.wait_queue_head, i32 (%struct.file*, i32, i8*)*, i8* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dtv_frontend_properties = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i32, i8, [3 x %struct.anon.65], i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats }
%struct.anon.65 = type { i8, i32, i32, i8 }
%struct.dtv_fe_stats = type { i8, [4 x %struct.dtv_stats] }
%struct.dtv_stats = type <{ i8, %union.anon.66 }>
%union.anon.66 = type { i64 }
%struct.dvb_frontend_tune_settings = type { i32, i32, i32 }
%struct.dvb_diseqc_master_cmd = type { [6 x i8], i8 }
%struct.dvb_diseqc_slave_reply = type { [4 x i8], i8, i32 }
%struct.dvb_tuner_ops = type { %struct.dvb_tuner_info, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.analog_parameters*)*, i32 (%struct.dvb_frontend*, i8*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i8*, i32)*, {}*, {}* }
%struct.dvb_tuner_info = type { [128 x i8], i32, i32, i32, i32, i32, i32 }
%struct.analog_parameters = type { i32, i32, i32, i64 }
%struct.analog_demod_ops = type { %struct.analog_demod_info, void (%struct.dvb_frontend*, %struct.analog_parameters*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i8*)* }
%struct.analog_demod_info = type { i8* }
%struct.kmem_cache = type opaque
%struct.stb0899_tab = type { i32, i32 }
%struct.stb0899_state = type { %struct.i2c_adapter*, %struct.stb0899_config*, %struct.dvb_frontend, i32*, %struct.stb0899_internal, i32, %struct.stb0899_params, i32, %struct.mutex }
%struct.i2c_adapter = type { %struct.module*, i32, %struct.i2c_algorithm*, i8*, %struct.i2c_lock_operations*, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i64, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, %struct.i2c_bus_recovery_info*, %struct.i2c_adapter_quirks*, %struct.irq_domain* }
%struct.i2c_algorithm = type { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*)* }
%struct.i2c_msg = type { i16, i16, i16, i8* }
%union.i2c_smbus_data = type { i16, [32 x i8] }
%struct.i2c_lock_operations = type { void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*, i32)*, void (%struct.i2c_adapter*, i32)* }
%struct.rt_mutex = type { %struct.raw_spinlock, %struct.rb_root_cached, %struct.task_struct* }
%struct.i2c_bus_recovery_info = type { i32 (%struct.i2c_adapter*)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, %struct.gpio_desc*, %struct.gpio_desc*, %struct.pinctrl*, %struct.pinctrl_state*, %struct.pinctrl_state* }
%struct.gpio_desc = type opaque
%struct.pinctrl = type opaque
%struct.pinctrl_state = type opaque
%struct.i2c_adapter_quirks = type { i64, i32, i16, i16, i16, i16 }
%struct.stb0899_config = type { %struct.stb0899_s1_reg*, %struct.stb0899_s2_reg*, %struct.stb0899_s1_reg*, %struct.stb0899_s2_reg*, %struct.stb0899_s1_reg*, %struct.stb0899_postproc*, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32)* }
%struct.stb0899_s2_reg = type { i16, i32, i32 }
%struct.stb0899_s1_reg = type { i16, i8 }
%struct.stb0899_postproc = type { i16, i8 }
%struct.stb0899_internal = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32, i16, i32, i32, i32, i8, i32, i8, i8 }
%struct.stb0899_params = type { i32, i32, i32 }

@__param_str_verbose = internal constant [16 x i8] c"stb0899.verbose\00", align 16, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@verbose = internal global i32 0, align 4, !dbg !474
@__param_verbose = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_verbose, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @verbose to i8*) } }, section "__param", align 8, !dbg !380
@__UNIQUE_ID_verbosetype220 = internal constant [29 x i8] c"stb0899.parmtype=verbose:int\00", section ".modinfo", align 1, !dbg !444
@.str = private unnamed_addr constant [81 x i8] c"\013%s ERR(1), Device=[0x%04x], Base address=[0x%08x], Offset=[0x%04x], Status=%d\0A\00", align 1
@__func__._stb0899_read_s2reg = private unnamed_addr constant [20 x i8] c"_stb0899_read_s2reg\00", align 1
@.str.1 = private unnamed_addr constant [81 x i8] c"\013%s ERR(2), Device=[0x%04x], Base address=[0x%08x], Offset=[0x%04x], Status=%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [81 x i8] c"\013%s ERR(3), Device=[0x%04x], Base address=[0x%08x], Offset=[0x%04x], Status=%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [77 x i8] c"\017%s Device=[0x%04x], Base address=[0x%08x], Offset=[0x%04x], Data=[0x%08x]\0A\00", align 1
@.str.4 = private unnamed_addr constant [77 x i8] c"\017%s Device=[0x%04x], Base Address=[0x%08x], Offset=[0x%04x], Data=[0x%08x]\0A\00", align 1
@__func__.stb0899_write_s2reg = private unnamed_addr constant [20 x i8] c"stb0899_write_s2reg\00", align 1
@.str.5 = private unnamed_addr constant [97 x i8] c"\013%s ERR (1), Device=[0x%04x], Base Address=[0x%08x], Offset=[0x%04x], Data=[0x%08x], status=%d\0A\00", align 1
@.str.6 = private unnamed_addr constant [97 x i8] c"\013%s ERR (2), Device=[0x%04x], Base Address=[0x%08x], Offset=[0x%04x], Data=[0x%08x], status=%d\0A\00", align 1
@.str.7 = private unnamed_addr constant [52 x i8] c"\013%s Read error, Reg=[0x%04x], Count=%u, Status=%d\0A\00", align 1
@__func__.stb0899_read_regs = private unnamed_addr constant [18 x i8] c"stb0899_read_regs\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"\013%s: %s [0x%04x]: %*ph\0A\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"\015%s: %s [0x%04x]: %*ph\0A\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"\016%s: %s [0x%04x]: %*ph\0A\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"\017%s: %s [0x%04x]: %*ph\0A\00", align 1
@.str.12 = private unnamed_addr constant [43 x i8] c"\014%s: i2c wr reg=%04x: len=%d is too big!\0A\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"stb0899\00", align 1
@__func__.stb0899_write_regs = private unnamed_addr constant [19 x i8] c"stb0899_write_regs\00", align 1
@.str.14 = private unnamed_addr constant [60 x i8] c"\013%s: Reg=[0x%04x], Data=[0x%02x ...], Count=%u, Status=%d\0A\00", align 1
@.str.15 = private unnamed_addr constant [60 x i8] c"\015%s: Reg=[0x%04x], Data=[0x%02x ...], Count=%u, Status=%d\0A\00", align 1
@.str.16 = private unnamed_addr constant [60 x i8] c"\016%s: Reg=[0x%04x], Data=[0x%02x ...], Count=%u, Status=%d\0A\00", align 1
@.str.17 = private unnamed_addr constant [60 x i8] c"\017%s: Reg=[0x%04x], Data=[0x%02x ...], Count=%u, Status=%d\0A\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"\013%s: Enabling I2C Repeater ...\0A\00", align 1
@__func__.stb0899_i2c_gate_ctrl = private unnamed_addr constant [22 x i8] c"stb0899_i2c_gate_ctrl\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"\015%s: Enabling I2C Repeater ...\0A\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"\016%s: Enabling I2C Repeater ...\0A\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c"\017%s: Enabling I2C Repeater ...\0A\00", align 1
@.str.22 = private unnamed_addr constant [34 x i8] c"\013%s: Disabling I2C Repeater ...\0A\00", align 1
@.str.23 = private unnamed_addr constant [34 x i8] c"\015%s: Disabling I2C Repeater ...\0A\00", align 1
@.str.24 = private unnamed_addr constant [34 x i8] c"\016%s: Disabling I2C Repeater ...\0A\00", align 1
@.str.25 = private unnamed_addr constant [34 x i8] c"\017%s: Disabling I2C Repeater ...\0A\00", align 1
@.str.26 = private unnamed_addr constant [35 x i8] c"\013%s: I2C Repeater control failed\0A\00", align 1
@.str.27 = private unnamed_addr constant [35 x i8] c"\015%s: I2C Repeater control failed\0A\00", align 1
@.str.28 = private unnamed_addr constant [35 x i8] c"\016%s: I2C Repeater control failed\0A\00", align 1
@.str.29 = private unnamed_addr constant [35 x i8] c"\017%s: I2C Repeater control failed\0A\00", align 1
@stb0899_ops = internal constant %struct.dvb_frontend_ops { %struct.dvb_frontend_internal_info { [128 x i8] c"STB0899 Multistandard\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 950000000, i32 -2144967296, i32 0, i32 0, i32 5000000, i32 45000000, i32 0, i32 268436993 }, [8 x i8] c"\05\06\04\00\00\00\00\00", void (%struct.dvb_frontend*)* @stb0899_detach, void (%struct.dvb_frontend*)* @stb0899_release, void (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* @stb0899_init, i32 (%struct.dvb_frontend*)* @stb0899_sleep, i32 (%struct.dvb_frontend*, i8*, i32)* null, i32 (%struct.dvb_frontend*, i1, i32, i32*, i32*)* null, i32 (%struct.dvb_frontend*)* @stb0899_frontend_algo, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*, %struct.dvb_frontend_tune_settings*)* null, i32 (%struct.dvb_frontend*, %struct.dtv_frontend_properties*)* @stb0899_get_frontend, i32 (%struct.dvb_frontend*, i32*)* @stb0899_read_status, i32 (%struct.dvb_frontend*, i32*)* @stb0899_read_ber, i32 (%struct.dvb_frontend*, i16*)* @stb0899_read_signal_strength, i32 (%struct.dvb_frontend*, i16*)* @stb0899_read_snr, i32 (%struct.dvb_frontend*, i32*)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_master_cmd*)* @stb0899_send_diseqc_msg, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_slave_reply*)* @stb0899_recv_slave_reply, i32 (%struct.dvb_frontend*, i32)* @stb0899_send_diseqc_burst, i32 (%struct.dvb_frontend*, i32)* @stb0899_set_tone, i32 (%struct.dvb_frontend*, i32)* @stb0899_set_voltage, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i32)* @stb0899_i2c_gate_ctrl, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* @stb0899_search, %struct.dvb_tuner_ops zeroinitializer, %struct.analog_demod_ops zeroinitializer }, align 8, !dbg !476
@.str.30 = private unnamed_addr constant [18 x i8] c"%s: Exiting .. !\0A\00", align 1
@__func__.stb0899_attach = private unnamed_addr constant [15 x i8] c"stb0899_attach\00", align 1
@.str.31 = private unnamed_addr constant [24 x i8] c"%s: Attaching STB0899 \0A\00", align 1
@__UNIQUE_ID_verbose221 = internal constant [41 x i8] c"stb0899.parm=verbose:Set Verbosity level\00", section ".modinfo", align 1, !dbg !449
@__UNIQUE_ID_author222 = internal constant [28 x i8] c"stb0899.author=Manu Abraham\00", section ".modinfo", align 1, !dbg !454
@__UNIQUE_ID_description223 = internal constant [47 x i8] c"stb0899.description=STB0899 Multi-Std frontend\00", section ".modinfo", align 1, !dbg !459
@__UNIQUE_ID_file224 = internal constant [49 x i8] c"stb0899.file=drivers/media/dvb-frontends/stb0899\00", section ".modinfo", align 1, !dbg !464
@__UNIQUE_ID_license225 = internal constant [20 x i8] c"stb0899.license=GPL\00", section ".modinfo", align 1, !dbg !469
@.str.32 = private unnamed_addr constant [43 x i8] c"\013%s: Read error, Reg=[0x%02x], Status=%d\0A\00", align 1
@__func__._stb0899_read_reg = private unnamed_addr constant [18 x i8] c"_stb0899_read_reg\00", align 1
@.str.33 = private unnamed_addr constant [43 x i8] c"\015%s: Read error, Reg=[0x%02x], Status=%d\0A\00", align 1
@.str.34 = private unnamed_addr constant [43 x i8] c"\016%s: Read error, Reg=[0x%02x], Status=%d\0A\00", align 1
@.str.35 = private unnamed_addr constant [43 x i8] c"\017%s: Read error, Reg=[0x%02x], Status=%d\0A\00", align 1
@.str.36 = private unnamed_addr constant [31 x i8] c"\013%s: Reg=[0x%02x], data=%02x\0A\00", align 1
@.str.37 = private unnamed_addr constant [31 x i8] c"\015%s: Reg=[0x%02x], data=%02x\0A\00", align 1
@.str.38 = private unnamed_addr constant [31 x i8] c"\016%s: Reg=[0x%02x], data=%02x\0A\00", align 1
@.str.39 = private unnamed_addr constant [31 x i8] c"\017%s: Reg=[0x%02x], data=%02x\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.40 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.41 = private unnamed_addr constant [24 x i8] c"\013%s: Release Frontend\0A\00", align 1
@__func__.stb0899_release = private unnamed_addr constant [16 x i8] c"stb0899_release\00", align 1
@.str.42 = private unnamed_addr constant [24 x i8] c"\015%s: Release Frontend\0A\00", align 1
@.str.43 = private unnamed_addr constant [24 x i8] c"\016%s: Release Frontend\0A\00", align 1
@.str.44 = private unnamed_addr constant [24 x i8] c"\017%s: Release Frontend\0A\00", align 1
@.str.45 = private unnamed_addr constant [33 x i8] c"\013%s: Initializing STB0899 ... \0A\00", align 1
@__func__.stb0899_init = private unnamed_addr constant [13 x i8] c"stb0899_init\00", align 1
@.str.46 = private unnamed_addr constant [33 x i8] c"\015%s: Initializing STB0899 ... \0A\00", align 1
@.str.47 = private unnamed_addr constant [33 x i8] c"\016%s: Initializing STB0899 ... \0A\00", align 1
@.str.48 = private unnamed_addr constant [33 x i8] c"\017%s: Initializing STB0899 ... \0A\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"\013%s: init device\0A\00", align 1
@.str.50 = private unnamed_addr constant [19 x i8] c"\015%s: init device\0A\00", align 1
@.str.51 = private unnamed_addr constant [19 x i8] c"\016%s: init device\0A\00", align 1
@.str.52 = private unnamed_addr constant [19 x i8] c"\017%s: init device\0A\00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"\013%s: init S2 demod\0A\00", align 1
@.str.54 = private unnamed_addr constant [21 x i8] c"\015%s: init S2 demod\0A\00", align 1
@.str.55 = private unnamed_addr constant [21 x i8] c"\016%s: init S2 demod\0A\00", align 1
@.str.56 = private unnamed_addr constant [21 x i8] c"\017%s: init S2 demod\0A\00", align 1
@.str.57 = private unnamed_addr constant [21 x i8] c"\013%s: init S1 demod\0A\00", align 1
@.str.58 = private unnamed_addr constant [21 x i8] c"\015%s: init S1 demod\0A\00", align 1
@.str.59 = private unnamed_addr constant [21 x i8] c"\016%s: init S1 demod\0A\00", align 1
@.str.60 = private unnamed_addr constant [21 x i8] c"\017%s: init S1 demod\0A\00", align 1
@.str.61 = private unnamed_addr constant [19 x i8] c"\013%s: init S2 FEC\0A\00", align 1
@.str.62 = private unnamed_addr constant [19 x i8] c"\015%s: init S2 FEC\0A\00", align 1
@.str.63 = private unnamed_addr constant [19 x i8] c"\016%s: init S2 FEC\0A\00", align 1
@.str.64 = private unnamed_addr constant [19 x i8] c"\017%s: init S2 FEC\0A\00", align 1
@.str.65 = private unnamed_addr constant [16 x i8] c"\013%s: init TST\0A\00", align 1
@.str.66 = private unnamed_addr constant [16 x i8] c"\015%s: init TST\0A\00", align 1
@.str.67 = private unnamed_addr constant [16 x i8] c"\016%s: init TST\0A\00", align 1
@.str.68 = private unnamed_addr constant [16 x i8] c"\017%s: init TST\0A\00", align 1
@.str.69 = private unnamed_addr constant [23 x i8] c"\013%s: div=%d, mclk=%d\0A\00", align 1
@__func__.stb0899_get_mclk = private unnamed_addr constant [17 x i8] c"stb0899_get_mclk\00", align 1
@.str.70 = private unnamed_addr constant [23 x i8] c"\015%s: div=%d, mclk=%d\0A\00", align 1
@.str.71 = private unnamed_addr constant [23 x i8] c"\016%s: div=%d, mclk=%d\0A\00", align 1
@.str.72 = private unnamed_addr constant [23 x i8] c"\017%s: div=%d, mclk=%d\0A\00", align 1
@.str.73 = private unnamed_addr constant [47 x i8] c"\013%s: Going to Sleep .. (Really tired .. :-))\0A\00", align 1
@__func__.stb0899_sleep = private unnamed_addr constant [14 x i8] c"stb0899_sleep\00", align 1
@.str.74 = private unnamed_addr constant [47 x i8] c"\015%s: Going to Sleep .. (Really tired .. :-))\0A\00", align 1
@.str.75 = private unnamed_addr constant [47 x i8] c"\016%s: Going to Sleep .. (Really tired .. :-))\0A\00", align 1
@.str.76 = private unnamed_addr constant [47 x i8] c"\017%s: Going to Sleep .. (Really tired .. :-))\0A\00", align 1
@.str.77 = private unnamed_addr constant [18 x i8] c"\013%s: Get params\0A\00", align 1
@__func__.stb0899_get_frontend = private unnamed_addr constant [21 x i8] c"stb0899_get_frontend\00", align 1
@.str.78 = private unnamed_addr constant [18 x i8] c"\015%s: Get params\0A\00", align 1
@.str.79 = private unnamed_addr constant [18 x i8] c"\016%s: Get params\0A\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"\017%s: Get params\0A\00", align 1
@.str.81 = private unnamed_addr constant [33 x i8] c"\013%s: Delivery system DVB-S/DSS\0A\00", align 1
@__func__.stb0899_read_status = private unnamed_addr constant [20 x i8] c"stb0899_read_status\00", align 1
@.str.82 = private unnamed_addr constant [33 x i8] c"\015%s: Delivery system DVB-S/DSS\0A\00", align 1
@.str.83 = private unnamed_addr constant [33 x i8] c"\016%s: Delivery system DVB-S/DSS\0A\00", align 1
@.str.84 = private unnamed_addr constant [33 x i8] c"\017%s: Delivery system DVB-S/DSS\0A\00", align 1
@.str.85 = private unnamed_addr constant [46 x i8] c"\013%s: --------> FE_HAS_CARRIER | FE_HAS_LOCK\0A\00", align 1
@.str.86 = private unnamed_addr constant [46 x i8] c"\015%s: --------> FE_HAS_CARRIER | FE_HAS_LOCK\0A\00", align 1
@.str.87 = private unnamed_addr constant [46 x i8] c"\016%s: --------> FE_HAS_CARRIER | FE_HAS_LOCK\0A\00", align 1
@.str.88 = private unnamed_addr constant [46 x i8] c"\017%s: --------> FE_HAS_CARRIER | FE_HAS_LOCK\0A\00", align 1
@.str.89 = private unnamed_addr constant [46 x i8] c"\013%s: --------> FE_HAS_VITERBI | FE_HAS_SYNC\0A\00", align 1
@.str.90 = private unnamed_addr constant [46 x i8] c"\015%s: --------> FE_HAS_VITERBI | FE_HAS_SYNC\0A\00", align 1
@.str.91 = private unnamed_addr constant [46 x i8] c"\016%s: --------> FE_HAS_VITERBI | FE_HAS_SYNC\0A\00", align 1
@.str.92 = private unnamed_addr constant [46 x i8] c"\017%s: --------> FE_HAS_VITERBI | FE_HAS_SYNC\0A\00", align 1
@.str.93 = private unnamed_addr constant [30 x i8] c"\013%s: Delivery system DVB-S2\0A\00", align 1
@.str.94 = private unnamed_addr constant [30 x i8] c"\015%s: Delivery system DVB-S2\0A\00", align 1
@.str.95 = private unnamed_addr constant [30 x i8] c"\016%s: Delivery system DVB-S2\0A\00", align 1
@.str.96 = private unnamed_addr constant [30 x i8] c"\017%s: Delivery system DVB-S2\0A\00", align 1
@.str.97 = private unnamed_addr constant [51 x i8] c"\013%s: UWP & CSM Lock ! ---> DVB-S2 FE_HAS_CARRIER\0A\00", align 1
@.str.98 = private unnamed_addr constant [51 x i8] c"\015%s: UWP & CSM Lock ! ---> DVB-S2 FE_HAS_CARRIER\0A\00", align 1
@.str.99 = private unnamed_addr constant [51 x i8] c"\016%s: UWP & CSM Lock ! ---> DVB-S2 FE_HAS_CARRIER\0A\00", align 1
@.str.100 = private unnamed_addr constant [51 x i8] c"\017%s: UWP & CSM Lock ! ---> DVB-S2 FE_HAS_CARRIER\0A\00", align 1
@.str.101 = private unnamed_addr constant [60 x i8] c"\013%s: Packet Delineator Locked ! -----> DVB-S2 FE_HAS_LOCK\0A\00", align 1
@.str.102 = private unnamed_addr constant [60 x i8] c"\015%s: Packet Delineator Locked ! -----> DVB-S2 FE_HAS_LOCK\0A\00", align 1
@.str.103 = private unnamed_addr constant [60 x i8] c"\016%s: Packet Delineator Locked ! -----> DVB-S2 FE_HAS_LOCK\0A\00", align 1
@.str.104 = private unnamed_addr constant [60 x i8] c"\017%s: Packet Delineator Locked ! -----> DVB-S2 FE_HAS_LOCK\0A\00", align 1
@.str.105 = private unnamed_addr constant [70 x i8] c"\013%s: Packet Delineator found VITERBI ! -----> DVB-S2 FE_HAS_VITERBI\0A\00", align 1
@.str.106 = private unnamed_addr constant [70 x i8] c"\015%s: Packet Delineator found VITERBI ! -----> DVB-S2 FE_HAS_VITERBI\0A\00", align 1
@.str.107 = private unnamed_addr constant [70 x i8] c"\016%s: Packet Delineator found VITERBI ! -----> DVB-S2 FE_HAS_VITERBI\0A\00", align 1
@.str.108 = private unnamed_addr constant [70 x i8] c"\017%s: Packet Delineator found VITERBI ! -----> DVB-S2 FE_HAS_VITERBI\0A\00", align 1
@.str.109 = private unnamed_addr constant [64 x i8] c"\013%s: Packet Delineator found SYNC ! -----> DVB-S2 FE_HAS_SYNC\0A\00", align 1
@.str.110 = private unnamed_addr constant [64 x i8] c"\015%s: Packet Delineator found SYNC ! -----> DVB-S2 FE_HAS_SYNC\0A\00", align 1
@.str.111 = private unnamed_addr constant [64 x i8] c"\016%s: Packet Delineator found SYNC ! -----> DVB-S2 FE_HAS_SYNC\0A\00", align 1
@.str.112 = private unnamed_addr constant [64 x i8] c"\017%s: Packet Delineator found SYNC ! -----> DVB-S2 FE_HAS_SYNC\0A\00", align 1
@.str.113 = private unnamed_addr constant [35 x i8] c"\013%s: Unsupported delivery system\0A\00", align 1
@.str.114 = private unnamed_addr constant [35 x i8] c"\015%s: Unsupported delivery system\0A\00", align 1
@.str.115 = private unnamed_addr constant [35 x i8] c"\016%s: Unsupported delivery system\0A\00", align 1
@.str.116 = private unnamed_addr constant [35 x i8] c"\017%s: Unsupported delivery system\0A\00", align 1
@__func__.stb0899_read_ber = private unnamed_addr constant [17 x i8] c"stb0899_read_ber\00", align 1
@stb0899_dvbsrf_tab = internal constant [31 x %struct.stb0899_tab] [%struct.stb0899_tab { i32 -750, i32 -128 }, %struct.stb0899_tab { i32 -748, i32 -94 }, %struct.stb0899_tab { i32 -745, i32 -92 }, %struct.stb0899_tab { i32 -735, i32 -90 }, %struct.stb0899_tab { i32 -720, i32 -87 }, %struct.stb0899_tab { i32 -670, i32 -77 }, %struct.stb0899_tab { i32 -640, i32 -70 }, %struct.stb0899_tab { i32 -610, i32 -62 }, %struct.stb0899_tab { i32 -600, i32 -60 }, %struct.stb0899_tab { i32 -590, i32 -56 }, %struct.stb0899_tab { i32 -560, i32 -41 }, %struct.stb0899_tab { i32 -540, i32 -25 }, %struct.stb0899_tab { i32 -530, i32 -17 }, %struct.stb0899_tab { i32 -520, i32 -11 }, %struct.stb0899_tab { i32 -500, i32 1 }, %struct.stb0899_tab { i32 -490, i32 6 }, %struct.stb0899_tab { i32 -480, i32 10 }, %struct.stb0899_tab { i32 -440, i32 22 }, %struct.stb0899_tab { i32 -420, i32 27 }, %struct.stb0899_tab { i32 -400, i32 31 }, %struct.stb0899_tab { i32 -380, i32 34 }, %struct.stb0899_tab { i32 -340, i32 40 }, %struct.stb0899_tab { i32 -320, i32 43 }, %struct.stb0899_tab { i32 -280, i32 48 }, %struct.stb0899_tab { i32 -250, i32 52 }, %struct.stb0899_tab { i32 -230, i32 55 }, %struct.stb0899_tab { i32 -180, i32 61 }, %struct.stb0899_tab { i32 -140, i32 66 }, %struct.stb0899_tab { i32 -90, i32 73 }, %struct.stb0899_tab { i32 -80, i32 74 }, %struct.stb0899_tab { i32 500, i32 127 }], align 16, !dbg !4370
@.str.117 = private unnamed_addr constant [45 x i8] c"\013%s: AGCIQVALUE = 0x%02x, C = %d * 0.1 dBm\0A\00", align 1
@__func__.stb0899_read_signal_strength = private unnamed_addr constant [29 x i8] c"stb0899_read_signal_strength\00", align 1
@.str.118 = private unnamed_addr constant [45 x i8] c"\015%s: AGCIQVALUE = 0x%02x, C = %d * 0.1 dBm\0A\00", align 1
@.str.119 = private unnamed_addr constant [45 x i8] c"\016%s: AGCIQVALUE = 0x%02x, C = %d * 0.1 dBm\0A\00", align 1
@.str.120 = private unnamed_addr constant [45 x i8] c"\017%s: AGCIQVALUE = 0x%02x, C = %d * 0.1 dBm\0A\00", align 1
@stb0899_dvbs2rf_tab = internal constant [24 x %struct.stb0899_tab] [%struct.stb0899_tab { i32 700, i32 0 }, %struct.stb0899_tab { i32 -80, i32 3217 }, %struct.stb0899_tab { i32 -150, i32 3893 }, %struct.stb0899_tab { i32 -190, i32 4217 }, %struct.stb0899_tab { i32 -240, i32 4621 }, %struct.stb0899_tab { i32 -280, i32 4945 }, %struct.stb0899_tab { i32 -320, i32 5273 }, %struct.stb0899_tab { i32 -350, i32 5545 }, %struct.stb0899_tab { i32 -370, i32 5741 }, %struct.stb0899_tab { i32 -410, i32 6147 }, %struct.stb0899_tab { i32 -450, i32 6671 }, %struct.stb0899_tab { i32 -490, i32 7413 }, %struct.stb0899_tab { i32 -501, i32 7665 }, %struct.stb0899_tab { i32 -530, i32 8767 }, %struct.stb0899_tab { i32 -560, i32 10219 }, %struct.stb0899_tab { i32 -580, i32 10939 }, %struct.stb0899_tab { i32 -590, i32 11518 }, %struct.stb0899_tab { i32 -600, i32 11723 }, %struct.stb0899_tab { i32 -650, i32 12659 }, %struct.stb0899_tab { i32 -690, i32 13219 }, %struct.stb0899_tab { i32 -730, i32 13645 }, %struct.stb0899_tab { i32 -750, i32 13909 }, %struct.stb0899_tab { i32 -766, i32 14153 }, %struct.stb0899_tab { i32 -950, i32 16383 }], align 16, !dbg !4380
@.str.121 = private unnamed_addr constant [46 x i8] c"\013%s: IF_AGC_GAIN = 0x%04x, C = %d * 0.1 dBm\0A\00", align 1
@.str.122 = private unnamed_addr constant [46 x i8] c"\015%s: IF_AGC_GAIN = 0x%04x, C = %d * 0.1 dBm\0A\00", align 1
@.str.123 = private unnamed_addr constant [46 x i8] c"\016%s: IF_AGC_GAIN = 0x%04x, C = %d * 0.1 dBm\0A\00", align 1
@.str.124 = private unnamed_addr constant [46 x i8] c"\017%s: IF_AGC_GAIN = 0x%04x, C = %d * 0.1 dBm\0A\00", align 1
@stb0899_cn_tab = internal constant [20 x %struct.stb0899_tab] [%struct.stb0899_tab { i32 200, i32 2600 }, %struct.stb0899_tab { i32 190, i32 2700 }, %struct.stb0899_tab { i32 180, i32 2860 }, %struct.stb0899_tab { i32 170, i32 3020 }, %struct.stb0899_tab { i32 160, i32 3210 }, %struct.stb0899_tab { i32 150, i32 3440 }, %struct.stb0899_tab { i32 140, i32 3710 }, %struct.stb0899_tab { i32 130, i32 4010 }, %struct.stb0899_tab { i32 120, i32 4360 }, %struct.stb0899_tab { i32 110, i32 4740 }, %struct.stb0899_tab { i32 100, i32 5190 }, %struct.stb0899_tab { i32 90, i32 5670 }, %struct.stb0899_tab { i32 80, i32 6200 }, %struct.stb0899_tab { i32 70, i32 6770 }, %struct.stb0899_tab { i32 60, i32 7360 }, %struct.stb0899_tab { i32 50, i32 7970 }, %struct.stb0899_tab { i32 40, i32 8250 }, %struct.stb0899_tab { i32 30, i32 9000 }, %struct.stb0899_tab { i32 20, i32 9450 }, %struct.stb0899_tab { i32 15, i32 9600 }], align 16, !dbg !4385
@.str.125 = private unnamed_addr constant [50 x i8] c"\013%s: NIR = 0x%02x%02x = %u, C/N = %d * 0.1 dBm\0A\0A\00", align 1
@__func__.stb0899_read_snr = private unnamed_addr constant [17 x i8] c"stb0899_read_snr\00", align 1
@.str.126 = private unnamed_addr constant [50 x i8] c"\015%s: NIR = 0x%02x%02x = %u, C/N = %d * 0.1 dBm\0A\0A\00", align 1
@.str.127 = private unnamed_addr constant [50 x i8] c"\016%s: NIR = 0x%02x%02x = %u, C/N = %d * 0.1 dBm\0A\0A\00", align 1
@.str.128 = private unnamed_addr constant [50 x i8] c"\017%s: NIR = 0x%02x%02x = %u, C/N = %d * 0.1 dBm\0A\0A\00", align 1
@stb0899_quant_tab = internal global [39 x %struct.stb0899_tab] [%struct.stb0899_tab zeroinitializer, %struct.stb0899_tab { i32 0, i32 100 }, %struct.stb0899_tab { i32 600, i32 200 }, %struct.stb0899_tab { i32 950, i32 299 }, %struct.stb0899_tab { i32 1200, i32 398 }, %struct.stb0899_tab { i32 1400, i32 501 }, %struct.stb0899_tab { i32 1560, i32 603 }, %struct.stb0899_tab { i32 1690, i32 700 }, %struct.stb0899_tab { i32 1810, i32 804 }, %struct.stb0899_tab { i32 1910, i32 902 }, %struct.stb0899_tab { i32 2000, i32 1000 }, %struct.stb0899_tab { i32 2080, i32 1096 }, %struct.stb0899_tab { i32 2160, i32 1202 }, %struct.stb0899_tab { i32 2230, i32 1303 }, %struct.stb0899_tab { i32 2350, i32 1496 }, %struct.stb0899_tab { i32 2410, i32 1603 }, %struct.stb0899_tab { i32 2460, i32 1698 }, %struct.stb0899_tab { i32 2510, i32 1799 }, %struct.stb0899_tab { i32 2600, i32 1995 }, %struct.stb0899_tab { i32 2650, i32 2113 }, %struct.stb0899_tab { i32 2690, i32 2213 }, %struct.stb0899_tab { i32 2720, i32 2291 }, %struct.stb0899_tab { i32 2760, i32 2399 }, %struct.stb0899_tab { i32 2800, i32 2512 }, %struct.stb0899_tab { i32 2860, i32 2692 }, %struct.stb0899_tab { i32 2930, i32 2917 }, %struct.stb0899_tab { i32 2960, i32 3020 }, %struct.stb0899_tab { i32 3010, i32 3199 }, %struct.stb0899_tab { i32 3040, i32 3311 }, %struct.stb0899_tab { i32 3060, i32 3388 }, %struct.stb0899_tab { i32 3120, i32 3631 }, %struct.stb0899_tab { i32 3190, i32 3936 }, %struct.stb0899_tab { i32 3400, i32 5012 }, %struct.stb0899_tab { i32 3610, i32 6383 }, %struct.stb0899_tab { i32 3800, i32 7943 }, %struct.stb0899_tab { i32 4210, i32 12735 }, %struct.stb0899_tab { i32 4500, i32 17783 }, %struct.stb0899_tab { i32 4690, i32 22131 }, %struct.stb0899_tab { i32 4810, i32 25410 }], align 16, !dbg !4388
@stb0899_est_tab = internal global [37 x %struct.stb0899_tab] [%struct.stb0899_tab zeroinitializer, %struct.stb0899_tab { i32 0, i32 1 }, %struct.stb0899_tab { i32 301, i32 2 }, %struct.stb0899_tab { i32 1204, i32 16 }, %struct.stb0899_tab { i32 1806, i32 64 }, %struct.stb0899_tab { i32 2408, i32 256 }, %struct.stb0899_tab { i32 2709, i32 512 }, %struct.stb0899_tab { i32 3010, i32 1023 }, %struct.stb0899_tab { i32 3311, i32 2046 }, %struct.stb0899_tab { i32 3612, i32 4093 }, %struct.stb0899_tab { i32 3823, i32 6653 }, %struct.stb0899_tab { i32 3913, i32 8185 }, %struct.stb0899_tab { i32 4010, i32 10233 }, %struct.stb0899_tab { i32 4107, i32 12794 }, %struct.stb0899_tab { i32 4214, i32 16368 }, %struct.stb0899_tab { i32 4266, i32 18450 }, %struct.stb0899_tab { i32 4311, i32 20464 }, %struct.stb0899_tab { i32 4353, i32 22542 }, %struct.stb0899_tab { i32 4391, i32 24604 }, %struct.stb0899_tab { i32 4425, i32 26607 }, %struct.stb0899_tab { i32 4457, i32 28642 }, %struct.stb0899_tab { i32 4487, i32 30690 }, %struct.stb0899_tab { i32 4515, i32 32734 }, %struct.stb0899_tab { i32 4612, i32 40926 }, %struct.stb0899_tab { i32 4692, i32 49204 }, %struct.stb0899_tab { i32 4816, i32 65464 }, %struct.stb0899_tab { i32 4913, i32 81846 }, %struct.stb0899_tab { i32 4993, i32 98401 }, %struct.stb0899_tab { i32 5060, i32 114815 }, %struct.stb0899_tab { i32 5118, i32 131220 }, %struct.stb0899_tab { i32 5200, i32 158489 }, %struct.stb0899_tab { i32 5300, i32 199526 }, %struct.stb0899_tab { i32 5400, i32 251189 }, %struct.stb0899_tab { i32 5500, i32 316228 }, %struct.stb0899_tab { i32 5600, i32 398107 }, %struct.stb0899_tab { i32 5720, i32 524807 }, %struct.stb0899_tab { i32 5721, i32 526017 }], align 16, !dbg !4393
@.str.129 = private unnamed_addr constant [68 x i8] c"\013%s: Es/N0 quant = %d (%d) estimate = %u (%d), C/N = %d * 0.1 dBm\0A\00", align 1
@.str.130 = private unnamed_addr constant [68 x i8] c"\015%s: Es/N0 quant = %d (%d) estimate = %u (%d), C/N = %d * 0.1 dBm\0A\00", align 1
@.str.131 = private unnamed_addr constant [68 x i8] c"\016%s: Es/N0 quant = %d (%d) estimate = %u (%d), C/N = %d * 0.1 dBm\0A\00", align 1
@.str.132 = private unnamed_addr constant [68 x i8] c"\017%s: Es/N0 quant = %d (%d) estimate = %u (%d), C/N = %d * 0.1 dBm\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.133 = private unnamed_addr constant [20 x i8] c"\013%s: timed out !!\0A\00", align 1
@__func__.stb0899_wait_diseqc_fifo_empty = private unnamed_addr constant [31 x i8] c"stb0899_wait_diseqc_fifo_empty\00", align 1
@.str.134 = private unnamed_addr constant [20 x i8] c"\015%s: timed out !!\0A\00", align 1
@.str.135 = private unnamed_addr constant [20 x i8] c"\016%s: timed out !!\0A\00", align 1
@.str.136 = private unnamed_addr constant [20 x i8] c"\017%s: timed out !!\0A\00", align 1
@.str.137 = private unnamed_addr constant [19 x i8] c"\013%s: timed out!!\0A\00", align 1
@__func__.stb0899_wait_diseqc_rxidle = private unnamed_addr constant [27 x i8] c"stb0899_wait_diseqc_rxidle\00", align 1
@.str.138 = private unnamed_addr constant [19 x i8] c"\015%s: timed out!!\0A\00", align 1
@.str.139 = private unnamed_addr constant [19 x i8] c"\016%s: timed out!!\0A\00", align 1
@.str.140 = private unnamed_addr constant [19 x i8] c"\017%s: timed out!!\0A\00", align 1
@__func__.stb0899_wait_diseqc_txidle = private unnamed_addr constant [27 x i8] c"stb0899_wait_diseqc_txidle\00", align 1
@.str.141 = private unnamed_addr constant [26 x i8] c"\013%s: delivery system=%d\0A\00", align 1
@__func__.stb0899_search = private unnamed_addr constant [15 x i8] c"stb0899_search\00", align 1
@.str.142 = private unnamed_addr constant [26 x i8] c"\015%s: delivery system=%d\0A\00", align 1
@.str.143 = private unnamed_addr constant [26 x i8] c"\016%s: delivery system=%d\0A\00", align 1
@.str.144 = private unnamed_addr constant [26 x i8] c"\017%s: delivery system=%d\0A\00", align 1
@.str.145 = private unnamed_addr constant [30 x i8] c"\013%s: Frequency=%d, Srate=%d\0A\00", align 1
@.str.146 = private unnamed_addr constant [30 x i8] c"\015%s: Frequency=%d, Srate=%d\0A\00", align 1
@.str.147 = private unnamed_addr constant [30 x i8] c"\016%s: Frequency=%d, Srate=%d\0A\00", align 1
@.str.148 = private unnamed_addr constant [30 x i8] c"\017%s: Frequency=%d, Srate=%d\0A\00", align 1
@.str.149 = private unnamed_addr constant [27 x i8] c"\013%s: Parameters IN RANGE\0A\00", align 1
@.str.150 = private unnamed_addr constant [27 x i8] c"\015%s: Parameters IN RANGE\0A\00", align 1
@.str.151 = private unnamed_addr constant [27 x i8] c"\016%s: Parameters IN RANGE\0A\00", align 1
@.str.152 = private unnamed_addr constant [27 x i8] c"\017%s: Parameters IN RANGE\0A\00", align 1
@.str.153 = private unnamed_addr constant [29 x i8] c"\013%s: DVB-S delivery system\0A\00", align 1
@.str.154 = private unnamed_addr constant [29 x i8] c"\015%s: DVB-S delivery system\0A\00", align 1
@.str.155 = private unnamed_addr constant [29 x i8] c"\016%s: DVB-S delivery system\0A\00", align 1
@.str.156 = private unnamed_addr constant [29 x i8] c"\017%s: DVB-S delivery system\0A\00", align 1
@.str.157 = private unnamed_addr constant [36 x i8] c"\013%s: running DVB-S search algo ..\0A\00", align 1
@.str.158 = private unnamed_addr constant [36 x i8] c"\015%s: running DVB-S search algo ..\0A\00", align 1
@.str.159 = private unnamed_addr constant [36 x i8] c"\016%s: running DVB-S search algo ..\0A\00", align 1
@.str.160 = private unnamed_addr constant [36 x i8] c"\017%s: running DVB-S search algo ..\0A\00", align 1
@.str.161 = private unnamed_addr constant [59 x i8] c"\013%s: -------------------------------------> DVB-S LOCK !\0A\00", align 1
@.str.162 = private unnamed_addr constant [59 x i8] c"\015%s: -------------------------------------> DVB-S LOCK !\0A\00", align 1
@.str.163 = private unnamed_addr constant [59 x i8] c"\016%s: -------------------------------------> DVB-S LOCK !\0A\00", align 1
@.str.164 = private unnamed_addr constant [59 x i8] c"\017%s: -------------------------------------> DVB-S LOCK !\0A\00", align 1
@.str.165 = private unnamed_addr constant [37 x i8] c"\013%s: running DVB-S2 search algo ..\0A\00", align 1
@.str.166 = private unnamed_addr constant [37 x i8] c"\015%s: running DVB-S2 search algo ..\0A\00", align 1
@.str.167 = private unnamed_addr constant [37 x i8] c"\016%s: running DVB-S2 search algo ..\0A\00", align 1
@.str.168 = private unnamed_addr constant [37 x i8] c"\017%s: running DVB-S2 search algo ..\0A\00", align 1
@.str.169 = private unnamed_addr constant [60 x i8] c"\013%s: -------------------------------------> DVB-S2 LOCK !\0A\00", align 1
@.str.170 = private unnamed_addr constant [60 x i8] c"\015%s: -------------------------------------> DVB-S2 LOCK !\0A\00", align 1
@.str.171 = private unnamed_addr constant [60 x i8] c"\016%s: -------------------------------------> DVB-S2 LOCK !\0A\00", align 1
@.str.172 = private unnamed_addr constant [60 x i8] c"\017%s: -------------------------------------> DVB-S2 LOCK !\0A\00", align 1
@.str.173 = private unnamed_addr constant [32 x i8] c"\013%s: Delivery System -- DVB-S\0A\00", align 1
@__func__.stb0899_set_delivery = private unnamed_addr constant [21 x i8] c"stb0899_set_delivery\00", align 1
@.str.174 = private unnamed_addr constant [32 x i8] c"\015%s: Delivery System -- DVB-S\0A\00", align 1
@.str.175 = private unnamed_addr constant [32 x i8] c"\016%s: Delivery System -- DVB-S\0A\00", align 1
@.str.176 = private unnamed_addr constant [32 x i8] c"\017%s: Delivery System -- DVB-S\0A\00", align 1
@.str.177 = private unnamed_addr constant [24 x i8] c"\013%s: state->config=%p\0A\00", align 1
@__func__.stb0899_set_mclk = private unnamed_addr constant [17 x i8] c"stb0899_set_mclk\00", align 1
@.str.178 = private unnamed_addr constant [24 x i8] c"\015%s: state->config=%p\0A\00", align 1
@.str.179 = private unnamed_addr constant [24 x i8] c"\016%s: state->config=%p\0A\00", align 1
@.str.180 = private unnamed_addr constant [24 x i8] c"\017%s: state->config=%p\0A\00", align 1
@.str.181 = private unnamed_addr constant [15 x i8] c"\013%s: mdiv=%d\0A\00", align 1
@.str.182 = private unnamed_addr constant [15 x i8] c"\015%s: mdiv=%d\0A\00", align 1
@.str.183 = private unnamed_addr constant [15 x i8] c"\016%s: mdiv=%d\0A\00", align 1
@.str.184 = private unnamed_addr constant [15 x i8] c"\017%s: mdiv=%d\0A\00", align 1
@.str.185 = private unnamed_addr constant [22 x i8] c"\013%s: MasterCLOCK=%d\0A\00", align 1
@.str.186 = private unnamed_addr constant [22 x i8] c"\015%s: MasterCLOCK=%d\0A\00", align 1
@.str.187 = private unnamed_addr constant [22 x i8] c"\016%s: MasterCLOCK=%d\0A\00", align 1
@.str.188 = private unnamed_addr constant [22 x i8] c"\017%s: MasterCLOCK=%d\0A\00", align 1
@.str.189 = private unnamed_addr constant [23 x i8] c"\013%s: ID reg=[0x%02x]\0A\00", align 1
@__func__.stb0899_get_dev_id = private unnamed_addr constant [19 x i8] c"stb0899_get_dev_id\00", align 1
@.str.190 = private unnamed_addr constant [23 x i8] c"\015%s: ID reg=[0x%02x]\0A\00", align 1
@.str.191 = private unnamed_addr constant [23 x i8] c"\016%s: ID reg=[0x%02x]\0A\00", align 1
@.str.192 = private unnamed_addr constant [23 x i8] c"\017%s: ID reg=[0x%02x]\0A\00", align 1
@.str.193 = private unnamed_addr constant [36 x i8] c"\013%s: Device ID=[%d], Release=[%d]\0A\00", align 1
@.str.194 = private unnamed_addr constant [36 x i8] c"\015%s: Device ID=[%d], Release=[%d]\0A\00", align 1
@.str.195 = private unnamed_addr constant [36 x i8] c"\016%s: Device ID=[%d], Release=[%d]\0A\00", align 1
@.str.196 = private unnamed_addr constant [36 x i8] c"\017%s: Device ID=[%d], Release=[%d]\0A\00", align 1
@.str.197 = private unnamed_addr constant [46 x i8] c"\013%s: Demodulator Core ID=[%s], Version=[%d]\0A\00", align 1
@.str.198 = private unnamed_addr constant [46 x i8] c"\015%s: Demodulator Core ID=[%s], Version=[%d]\0A\00", align 1
@.str.199 = private unnamed_addr constant [46 x i8] c"\016%s: Demodulator Core ID=[%s], Version=[%d]\0A\00", align 1
@.str.200 = private unnamed_addr constant [46 x i8] c"\017%s: Demodulator Core ID=[%s], Version=[%d]\0A\00", align 1
@.str.201 = private unnamed_addr constant [32 x i8] c"\013%s: couldn't find a STB 0899\0A\00", align 1
@.str.202 = private unnamed_addr constant [32 x i8] c"\015%s: couldn't find a STB 0899\0A\00", align 1
@.str.203 = private unnamed_addr constant [32 x i8] c"\016%s: couldn't find a STB 0899\0A\00", align 1
@.str.204 = private unnamed_addr constant [32 x i8] c"\017%s: couldn't find a STB 0899\0A\00", align 1
@.str.205 = private unnamed_addr constant [38 x i8] c"\013%s: FEC Core ID=[%s], Version=[%d]\0A\00", align 1
@.str.206 = private unnamed_addr constant [38 x i8] c"\015%s: FEC Core ID=[%s], Version=[%d]\0A\00", align 1
@.str.207 = private unnamed_addr constant [38 x i8] c"\016%s: FEC Core ID=[%s], Version=[%d]\0A\00", align 1
@.str.208 = private unnamed_addr constant [38 x i8] c"\017%s: FEC Core ID=[%s], Version=[%d]\0A\00", align 1
@llvm.used = appending global [7 x i8*] [i8* bitcast (%struct.kernel_param* @__param_verbose to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_verbosetype220, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_verbose221, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_author222, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__UNIQUE_ID_description223, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_file224, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_license225, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @stb0899_read_reg(%struct.stb0899_state* %state, i32 %reg) #0 !dbg !4404 {
entry:
  %state.addr = alloca %struct.stb0899_state*, align 8
  %reg.addr = alloca i32, align 4
  %result = alloca i32, align 4
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !4643, metadata !DIExpression()), !dbg !4644
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !4645, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.declare(metadata i32* %result, metadata !4647, metadata !DIExpression()), !dbg !4648
  %0 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4649
  %1 = load i32, i32* %reg.addr, align 4, !dbg !4650
  %call = call i32 @_stb0899_read_reg(%struct.stb0899_state* %0, i32 %1) #8, !dbg !4651
  store i32 %call, i32* %result, align 4, !dbg !4652
  %2 = load i32, i32* %reg.addr, align 4, !dbg !4653
  %cmp = icmp ne i32 %2, 62207, !dbg !4655
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4656

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %reg.addr, align 4, !dbg !4657
  %cmp1 = icmp ne i32 %3, 63231, !dbg !4658
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !4659

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %reg.addr, align 4, !dbg !4660
  %and = and i32 %4, 65280, !dbg !4661
  %cmp3 = icmp eq i32 %and, 61952, !dbg !4662
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !4663

lor.lhs.false:                                    ; preds = %land.lhs.true2
  %5 = load i32, i32* %reg.addr, align 4, !dbg !4664
  %and4 = and i32 %5, 65280, !dbg !4665
  %cmp5 = icmp eq i32 %and4, 62976, !dbg !4666
  br i1 %cmp5, label %if.then, label %if.end, !dbg !4667

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true2
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4668
  %7 = load i32, i32* %reg.addr, align 4, !dbg !4669
  %or = or i32 %7, 255, !dbg !4670
  %call6 = call i32 @_stb0899_read_reg(%struct.stb0899_state* %6, i32 %or) #8, !dbg !4671
  br label %if.end, !dbg !4671

if.end:                                           ; preds = %if.then, %lor.lhs.false, %land.lhs.true, %entry
  %8 = load i32, i32* %result, align 4, !dbg !4672
  ret i32 %8, !dbg !4673
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_stb0899_read_reg(%struct.stb0899_state* %state, i32 %reg) #0 !dbg !4674 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stb0899_state*, align 8
  %reg.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %b0 = alloca [2 x i8], align 1
  %buf = alloca i8, align 1
  %msg = alloca [2 x %struct.i2c_msg], align 16
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !4675, metadata !DIExpression()), !dbg !4676
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !4677, metadata !DIExpression()), !dbg !4678
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4679, metadata !DIExpression()), !dbg !4680
  call void @llvm.dbg.declare(metadata [2 x i8]* %b0, metadata !4681, metadata !DIExpression()), !dbg !4683
  %arrayinit.begin = getelementptr inbounds [2 x i8], [2 x i8]* %b0, i64 0, i64 0, !dbg !4684
  %0 = load i32, i32* %reg.addr, align 4, !dbg !4685
  %shr = lshr i32 %0, 8, !dbg !4686
  %conv = trunc i32 %shr to i8, !dbg !4685
  store i8 %conv, i8* %arrayinit.begin, align 1, !dbg !4684
  %arrayinit.element = getelementptr inbounds i8, i8* %arrayinit.begin, i64 1, !dbg !4684
  %1 = load i32, i32* %reg.addr, align 4, !dbg !4687
  %and = and i32 %1, 255, !dbg !4688
  %conv1 = trunc i32 %and to i8, !dbg !4687
  store i8 %conv1, i8* %arrayinit.element, align 1, !dbg !4684
  call void @llvm.dbg.declare(metadata i8* %buf, metadata !4689, metadata !DIExpression()), !dbg !4690
  call void @llvm.dbg.declare(metadata [2 x %struct.i2c_msg]* %msg, metadata !4691, metadata !DIExpression()), !dbg !4693
  %arrayinit.begin2 = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !4694
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin2, i32 0, i32 0, !dbg !4695
  %2 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4696
  %config = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %2, i32 0, i32 1, !dbg !4697
  %3 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !4697
  %demod_address = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %3, i32 0, i32 8, !dbg !4698
  %4 = load i8, i8* %demod_address, align 8, !dbg !4698
  %conv3 = zext i8 %4 to i16, !dbg !4696
  store i16 %conv3, i16* %addr, align 16, !dbg !4695
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin2, i32 0, i32 1, !dbg !4695
  store i16 0, i16* %flags, align 2, !dbg !4695
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin2, i32 0, i32 2, !dbg !4695
  store i16 2, i16* %len, align 4, !dbg !4695
  %buf4 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin2, i32 0, i32 3, !dbg !4695
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %b0, i64 0, i64 0, !dbg !4699
  store i8* %arraydecay, i8** %buf4, align 8, !dbg !4695
  %arrayinit.element5 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin2, i64 1, !dbg !4694
  %addr6 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element5, i32 0, i32 0, !dbg !4700
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4701
  %config7 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %5, i32 0, i32 1, !dbg !4702
  %6 = load %struct.stb0899_config*, %struct.stb0899_config** %config7, align 8, !dbg !4702
  %demod_address8 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %6, i32 0, i32 8, !dbg !4703
  %7 = load i8, i8* %demod_address8, align 8, !dbg !4703
  %conv9 = zext i8 %7 to i16, !dbg !4701
  store i16 %conv9, i16* %addr6, align 16, !dbg !4700
  %flags10 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element5, i32 0, i32 1, !dbg !4700
  store i16 1, i16* %flags10, align 2, !dbg !4700
  %len11 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element5, i32 0, i32 2, !dbg !4700
  store i16 1, i16* %len11, align 4, !dbg !4700
  %buf12 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element5, i32 0, i32 3, !dbg !4700
  store i8* %buf, i8** %buf12, align 8, !dbg !4700
  %8 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4704
  %i2c = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %8, i32 0, i32 0, !dbg !4705
  %9 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !4705
  %arraydecay13 = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !4706
  %call = call i32 @i2c_transfer(%struct.i2c_adapter* %9, %struct.i2c_msg* %arraydecay13, i32 2) #8, !dbg !4707
  store i32 %call, i32* %ret, align 4, !dbg !4708
  %10 = load i32, i32* %ret, align 4, !dbg !4709
  %cmp = icmp ne i32 %10, 2, !dbg !4711
  br i1 %cmp, label %if.then, label %if.end60, !dbg !4712

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %ret, align 4, !dbg !4713
  %cmp15 = icmp ne i32 %11, -512, !dbg !4716
  br i1 %cmp15, label %if.then17, label %if.end57, !dbg !4717

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !4718

do.body:                                          ; preds = %if.then17
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4719
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %12, i32 0, i32 3, !dbg !4719
  %13 = load i32*, i32** %verbose, align 8, !dbg !4719
  %14 = load i32, i32* %13, align 4, !dbg !4719
  %cmp18 = icmp ugt i32 %14, 0, !dbg !4719
  br i1 %cmp18, label %land.lhs.true, label %if.else, !dbg !4719

land.lhs.true:                                    ; preds = %do.body
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4719
  %verbose20 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %15, i32 0, i32 3, !dbg !4719
  %16 = load i32*, i32** %verbose20, align 8, !dbg !4719
  %17 = load i32, i32* %16, align 4, !dbg !4719
  %cmp21 = icmp ugt i32 %17, 0, !dbg !4719
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !4724

if.then23:                                        ; preds = %land.lhs.true
  %18 = load i32, i32* %reg.addr, align 4, !dbg !4719
  %19 = load i32, i32* %ret, align 4, !dbg !4719
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._stb0899_read_reg, i64 0, i64 0), i32 %18, i32 %19) #9, !dbg !4719
  br label %if.end56, !dbg !4719

if.else:                                          ; preds = %land.lhs.true, %do.body
  %20 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4725
  %verbose25 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %20, i32 0, i32 3, !dbg !4725
  %21 = load i32*, i32** %verbose25, align 8, !dbg !4725
  %22 = load i32, i32* %21, align 4, !dbg !4725
  %cmp26 = icmp ugt i32 %22, 1, !dbg !4725
  br i1 %cmp26, label %land.lhs.true28, label %if.else34, !dbg !4725

land.lhs.true28:                                  ; preds = %if.else
  %23 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4725
  %verbose29 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %23, i32 0, i32 3, !dbg !4725
  %24 = load i32*, i32** %verbose29, align 8, !dbg !4725
  %25 = load i32, i32* %24, align 4, !dbg !4725
  %cmp30 = icmp ugt i32 %25, 0, !dbg !4725
  br i1 %cmp30, label %if.then32, label %if.else34, !dbg !4719

if.then32:                                        ; preds = %land.lhs.true28
  %26 = load i32, i32* %reg.addr, align 4, !dbg !4725
  %27 = load i32, i32* %ret, align 4, !dbg !4725
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._stb0899_read_reg, i64 0, i64 0), i32 %26, i32 %27) #9, !dbg !4725
  br label %if.end55, !dbg !4725

if.else34:                                        ; preds = %land.lhs.true28, %if.else
  %28 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4727
  %verbose35 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %28, i32 0, i32 3, !dbg !4727
  %29 = load i32*, i32** %verbose35, align 8, !dbg !4727
  %30 = load i32, i32* %29, align 4, !dbg !4727
  %cmp36 = icmp ugt i32 %30, 2, !dbg !4727
  br i1 %cmp36, label %land.lhs.true38, label %if.else44, !dbg !4727

land.lhs.true38:                                  ; preds = %if.else34
  %31 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4727
  %verbose39 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %31, i32 0, i32 3, !dbg !4727
  %32 = load i32*, i32** %verbose39, align 8, !dbg !4727
  %33 = load i32, i32* %32, align 4, !dbg !4727
  %cmp40 = icmp ugt i32 %33, 0, !dbg !4727
  br i1 %cmp40, label %if.then42, label %if.else44, !dbg !4725

if.then42:                                        ; preds = %land.lhs.true38
  %34 = load i32, i32* %reg.addr, align 4, !dbg !4727
  %35 = load i32, i32* %ret, align 4, !dbg !4727
  %call43 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._stb0899_read_reg, i64 0, i64 0), i32 %34, i32 %35) #9, !dbg !4727
  br label %if.end54, !dbg !4727

if.else44:                                        ; preds = %land.lhs.true38, %if.else34
  %36 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4729
  %verbose45 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %36, i32 0, i32 3, !dbg !4729
  %37 = load i32*, i32** %verbose45, align 8, !dbg !4729
  %38 = load i32, i32* %37, align 4, !dbg !4729
  %cmp46 = icmp ugt i32 %38, 3, !dbg !4729
  br i1 %cmp46, label %land.lhs.true48, label %if.end, !dbg !4729

land.lhs.true48:                                  ; preds = %if.else44
  %39 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4729
  %verbose49 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %39, i32 0, i32 3, !dbg !4729
  %40 = load i32*, i32** %verbose49, align 8, !dbg !4729
  %41 = load i32, i32* %40, align 4, !dbg !4729
  %cmp50 = icmp ugt i32 %41, 0, !dbg !4729
  br i1 %cmp50, label %if.then52, label %if.end, !dbg !4727

if.then52:                                        ; preds = %land.lhs.true48
  %42 = load i32, i32* %reg.addr, align 4, !dbg !4729
  %43 = load i32, i32* %ret, align 4, !dbg !4729
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._stb0899_read_reg, i64 0, i64 0), i32 %42, i32 %43) #9, !dbg !4729
  br label %if.end, !dbg !4729

if.end:                                           ; preds = %if.then52, %land.lhs.true48, %if.else44
  br label %if.end54

if.end54:                                         ; preds = %if.end, %if.then42
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then32
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then23
  br label %do.end, !dbg !4731

do.end:                                           ; preds = %if.end56
  br label %if.end57, !dbg !4731

if.end57:                                         ; preds = %do.end, %if.then
  %44 = load i32, i32* %ret, align 4, !dbg !4732
  %cmp58 = icmp slt i32 %44, 0, !dbg !4733
  br i1 %cmp58, label %cond.true, label %cond.false, !dbg !4732

cond.true:                                        ; preds = %if.end57
  %45 = load i32, i32* %ret, align 4, !dbg !4734
  br label %cond.end, !dbg !4732

cond.false:                                       ; preds = %if.end57
  br label %cond.end, !dbg !4732

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %45, %cond.true ], [ -121, %cond.false ], !dbg !4732
  store i32 %cond, i32* %retval, align 4, !dbg !4735
  br label %return, !dbg !4735

if.end60:                                         ; preds = %entry
  %46 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4736
  %verbose61 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %46, i32 0, i32 3, !dbg !4736
  %47 = load i32*, i32** %verbose61, align 8, !dbg !4736
  %48 = load i32, i32* %47, align 4, !dbg !4736
  %cmp62 = icmp uge i32 %48, 4, !dbg !4736
  %lnot = xor i1 %cmp62, true, !dbg !4736
  %lnot64 = xor i1 %lnot, true, !dbg !4736
  %lnot.ext = zext i1 %lnot64 to i32, !dbg !4736
  %conv65 = sext i32 %lnot.ext to i64, !dbg !4736
  %tobool = icmp ne i64 %conv65, 0, !dbg !4736
  br i1 %tobool, label %if.then66, label %if.end116, !dbg !4738

if.then66:                                        ; preds = %if.end60
  br label %do.body67, !dbg !4739

do.body67:                                        ; preds = %if.then66
  %49 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4740
  %verbose68 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %49, i32 0, i32 3, !dbg !4740
  %50 = load i32*, i32** %verbose68, align 8, !dbg !4740
  %51 = load i32, i32* %50, align 4, !dbg !4740
  %cmp69 = icmp ugt i32 %51, 0, !dbg !4740
  br i1 %cmp69, label %land.lhs.true71, label %if.else78, !dbg !4740

land.lhs.true71:                                  ; preds = %do.body67
  %52 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4740
  %verbose72 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %52, i32 0, i32 3, !dbg !4740
  %53 = load i32*, i32** %verbose72, align 8, !dbg !4740
  %54 = load i32, i32* %53, align 4, !dbg !4740
  %cmp73 = icmp ugt i32 %54, 0, !dbg !4740
  br i1 %cmp73, label %if.then75, label %if.else78, !dbg !4745

if.then75:                                        ; preds = %land.lhs.true71
  %55 = load i32, i32* %reg.addr, align 4, !dbg !4740
  %56 = load i8, i8* %buf, align 1, !dbg !4740
  %conv76 = zext i8 %56 to i32, !dbg !4740
  %call77 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._stb0899_read_reg, i64 0, i64 0), i32 %55, i32 %conv76) #9, !dbg !4740
  br label %if.end114, !dbg !4740

if.else78:                                        ; preds = %land.lhs.true71, %do.body67
  %57 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4746
  %verbose79 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %57, i32 0, i32 3, !dbg !4746
  %58 = load i32*, i32** %verbose79, align 8, !dbg !4746
  %59 = load i32, i32* %58, align 4, !dbg !4746
  %cmp80 = icmp ugt i32 %59, 1, !dbg !4746
  br i1 %cmp80, label %land.lhs.true82, label %if.else89, !dbg !4746

land.lhs.true82:                                  ; preds = %if.else78
  %60 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4746
  %verbose83 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %60, i32 0, i32 3, !dbg !4746
  %61 = load i32*, i32** %verbose83, align 8, !dbg !4746
  %62 = load i32, i32* %61, align 4, !dbg !4746
  %cmp84 = icmp ugt i32 %62, 0, !dbg !4746
  br i1 %cmp84, label %if.then86, label %if.else89, !dbg !4740

if.then86:                                        ; preds = %land.lhs.true82
  %63 = load i32, i32* %reg.addr, align 4, !dbg !4746
  %64 = load i8, i8* %buf, align 1, !dbg !4746
  %conv87 = zext i8 %64 to i32, !dbg !4746
  %call88 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._stb0899_read_reg, i64 0, i64 0), i32 %63, i32 %conv87) #9, !dbg !4746
  br label %if.end113, !dbg !4746

if.else89:                                        ; preds = %land.lhs.true82, %if.else78
  %65 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4748
  %verbose90 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %65, i32 0, i32 3, !dbg !4748
  %66 = load i32*, i32** %verbose90, align 8, !dbg !4748
  %67 = load i32, i32* %66, align 4, !dbg !4748
  %cmp91 = icmp ugt i32 %67, 2, !dbg !4748
  br i1 %cmp91, label %land.lhs.true93, label %if.else100, !dbg !4748

land.lhs.true93:                                  ; preds = %if.else89
  %68 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4748
  %verbose94 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %68, i32 0, i32 3, !dbg !4748
  %69 = load i32*, i32** %verbose94, align 8, !dbg !4748
  %70 = load i32, i32* %69, align 4, !dbg !4748
  %cmp95 = icmp ugt i32 %70, 0, !dbg !4748
  br i1 %cmp95, label %if.then97, label %if.else100, !dbg !4746

if.then97:                                        ; preds = %land.lhs.true93
  %71 = load i32, i32* %reg.addr, align 4, !dbg !4748
  %72 = load i8, i8* %buf, align 1, !dbg !4748
  %conv98 = zext i8 %72 to i32, !dbg !4748
  %call99 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._stb0899_read_reg, i64 0, i64 0), i32 %71, i32 %conv98) #9, !dbg !4748
  br label %if.end112, !dbg !4748

if.else100:                                       ; preds = %land.lhs.true93, %if.else89
  %73 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4750
  %verbose101 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %73, i32 0, i32 3, !dbg !4750
  %74 = load i32*, i32** %verbose101, align 8, !dbg !4750
  %75 = load i32, i32* %74, align 4, !dbg !4750
  %cmp102 = icmp ugt i32 %75, 3, !dbg !4750
  br i1 %cmp102, label %land.lhs.true104, label %if.end111, !dbg !4750

land.lhs.true104:                                 ; preds = %if.else100
  %76 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4750
  %verbose105 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %76, i32 0, i32 3, !dbg !4750
  %77 = load i32*, i32** %verbose105, align 8, !dbg !4750
  %78 = load i32, i32* %77, align 4, !dbg !4750
  %cmp106 = icmp ugt i32 %78, 0, !dbg !4750
  br i1 %cmp106, label %if.then108, label %if.end111, !dbg !4748

if.then108:                                       ; preds = %land.lhs.true104
  %79 = load i32, i32* %reg.addr, align 4, !dbg !4750
  %80 = load i8, i8* %buf, align 1, !dbg !4750
  %conv109 = zext i8 %80 to i32, !dbg !4750
  %call110 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__._stb0899_read_reg, i64 0, i64 0), i32 %79, i32 %conv109) #9, !dbg !4750
  br label %if.end111, !dbg !4750

if.end111:                                        ; preds = %if.then108, %land.lhs.true104, %if.else100
  br label %if.end112

if.end112:                                        ; preds = %if.end111, %if.then97
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.then86
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.then75
  br label %do.end115, !dbg !4752

do.end115:                                        ; preds = %if.end114
  br label %if.end116, !dbg !4752

if.end116:                                        ; preds = %do.end115, %if.end60
  %81 = load i8, i8* %buf, align 1, !dbg !4753
  %conv117 = zext i8 %81 to i32, !dbg !4754
  store i32 %conv117, i32* %retval, align 4, !dbg !4755
  br label %return, !dbg !4755

return:                                           ; preds = %if.end116, %cond.end
  %82 = load i32, i32* %retval, align 4, !dbg !4756
  ret i32 %82, !dbg !4756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @_stb0899_read_s2reg(%struct.stb0899_state* %state, i32 %stb0899_i2cdev, i32 %stb0899_base_addr, i16 zeroext %stb0899_reg_offset) #0 !dbg !4757 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stb0899_state*, align 8
  %stb0899_i2cdev.addr = alloca i32, align 4
  %stb0899_base_addr.addr = alloca i32, align 4
  %stb0899_reg_offset.addr = alloca i16, align 2
  %status = alloca i32, align 4
  %data = alloca i32, align 4
  %buf = alloca [7 x i8], align 1
  %tmpaddr = alloca i16, align 2
  %buf_0 = alloca [6 x i8], align 1
  %buf_1 = alloca [2 x i8], align 1
  %msg_0 = alloca %struct.i2c_msg, align 8
  %msg_1 = alloca %struct.i2c_msg, align 8
  %msg_r = alloca %struct.i2c_msg, align 8
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !4760, metadata !DIExpression()), !dbg !4761
  store i32 %stb0899_i2cdev, i32* %stb0899_i2cdev.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stb0899_i2cdev.addr, metadata !4762, metadata !DIExpression()), !dbg !4763
  store i32 %stb0899_base_addr, i32* %stb0899_base_addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stb0899_base_addr.addr, metadata !4764, metadata !DIExpression()), !dbg !4765
  store i16 %stb0899_reg_offset, i16* %stb0899_reg_offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %stb0899_reg_offset.addr, metadata !4766, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4768, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.declare(metadata i32* %data, metadata !4770, metadata !DIExpression()), !dbg !4771
  call void @llvm.dbg.declare(metadata [7 x i8]* %buf, metadata !4772, metadata !DIExpression()), !dbg !4776
  %0 = bitcast [7 x i8]* %buf to i8*, !dbg !4776
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 7, i1 false), !dbg !4776
  call void @llvm.dbg.declare(metadata i16* %tmpaddr, metadata !4777, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.declare(metadata [6 x i8]* %buf_0, metadata !4779, metadata !DIExpression()), !dbg !4780
  %arrayinit.begin = getelementptr inbounds [6 x i8], [6 x i8]* %buf_0, i64 0, i64 0, !dbg !4781
  %1 = load i32, i32* %stb0899_i2cdev.addr, align 4, !dbg !4782
  %shr = lshr i32 %1, 8, !dbg !4782
  %and = and i32 %shr, 255, !dbg !4782
  %conv = trunc i32 %and to i8, !dbg !4782
  store i8 %conv, i8* %arrayinit.begin, align 1, !dbg !4781
  %arrayinit.element = getelementptr inbounds i8, i8* %arrayinit.begin, i64 1, !dbg !4781
  %2 = load i32, i32* %stb0899_i2cdev.addr, align 4, !dbg !4783
  %shr1 = lshr i32 %2, 0, !dbg !4783
  %and2 = and i32 %shr1, 255, !dbg !4783
  %conv3 = trunc i32 %and2 to i8, !dbg !4783
  store i8 %conv3, i8* %arrayinit.element, align 1, !dbg !4781
  %arrayinit.element4 = getelementptr inbounds i8, i8* %arrayinit.element, i64 1, !dbg !4781
  %3 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4784
  %shr5 = lshr i32 %3, 0, !dbg !4784
  %and6 = and i32 %shr5, 255, !dbg !4784
  %conv7 = trunc i32 %and6 to i8, !dbg !4784
  store i8 %conv7, i8* %arrayinit.element4, align 1, !dbg !4781
  %arrayinit.element8 = getelementptr inbounds i8, i8* %arrayinit.element4, i64 1, !dbg !4781
  %4 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4785
  %shr9 = lshr i32 %4, 8, !dbg !4785
  %and10 = and i32 %shr9, 255, !dbg !4785
  %conv11 = trunc i32 %and10 to i8, !dbg !4785
  store i8 %conv11, i8* %arrayinit.element8, align 1, !dbg !4781
  %arrayinit.element12 = getelementptr inbounds i8, i8* %arrayinit.element8, i64 1, !dbg !4781
  %5 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4786
  %shr13 = lshr i32 %5, 16, !dbg !4786
  %and14 = and i32 %shr13, 255, !dbg !4786
  %conv15 = trunc i32 %and14 to i8, !dbg !4786
  store i8 %conv15, i8* %arrayinit.element12, align 1, !dbg !4781
  %arrayinit.element16 = getelementptr inbounds i8, i8* %arrayinit.element12, i64 1, !dbg !4781
  %6 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4787
  %shr17 = lshr i32 %6, 24, !dbg !4787
  %and18 = and i32 %shr17, 255, !dbg !4787
  %conv19 = trunc i32 %and18 to i8, !dbg !4787
  store i8 %conv19, i8* %arrayinit.element16, align 1, !dbg !4781
  call void @llvm.dbg.declare(metadata [2 x i8]* %buf_1, metadata !4788, metadata !DIExpression()), !dbg !4789
  %7 = bitcast [2 x i8]* %buf_1 to i8*, !dbg !4789
  call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 2, i1 false), !dbg !4789
  call void @llvm.dbg.declare(metadata %struct.i2c_msg* %msg_0, metadata !4790, metadata !DIExpression()), !dbg !4791
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_0, i32 0, i32 0, !dbg !4792
  %8 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4793
  %config = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %8, i32 0, i32 1, !dbg !4794
  %9 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !4794
  %demod_address = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %9, i32 0, i32 8, !dbg !4795
  %10 = load i8, i8* %demod_address, align 8, !dbg !4795
  %conv20 = zext i8 %10 to i16, !dbg !4793
  store i16 %conv20, i16* %addr, align 8, !dbg !4792
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_0, i32 0, i32 1, !dbg !4792
  store i16 0, i16* %flags, align 2, !dbg !4792
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_0, i32 0, i32 2, !dbg !4792
  store i16 6, i16* %len, align 4, !dbg !4792
  %buf21 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_0, i32 0, i32 3, !dbg !4792
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %buf_0, i64 0, i64 0, !dbg !4796
  store i8* %arraydecay, i8** %buf21, align 8, !dbg !4792
  call void @llvm.dbg.declare(metadata %struct.i2c_msg* %msg_1, metadata !4797, metadata !DIExpression()), !dbg !4798
  %addr22 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_1, i32 0, i32 0, !dbg !4799
  %11 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4800
  %config23 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %11, i32 0, i32 1, !dbg !4801
  %12 = load %struct.stb0899_config*, %struct.stb0899_config** %config23, align 8, !dbg !4801
  %demod_address24 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %12, i32 0, i32 8, !dbg !4802
  %13 = load i8, i8* %demod_address24, align 8, !dbg !4802
  %conv25 = zext i8 %13 to i16, !dbg !4800
  store i16 %conv25, i16* %addr22, align 8, !dbg !4799
  %flags26 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_1, i32 0, i32 1, !dbg !4799
  store i16 0, i16* %flags26, align 2, !dbg !4799
  %len27 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_1, i32 0, i32 2, !dbg !4799
  store i16 2, i16* %len27, align 4, !dbg !4799
  %buf28 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_1, i32 0, i32 3, !dbg !4799
  %arraydecay29 = getelementptr inbounds [2 x i8], [2 x i8]* %buf_1, i64 0, i64 0, !dbg !4803
  store i8* %arraydecay29, i8** %buf28, align 8, !dbg !4799
  call void @llvm.dbg.declare(metadata %struct.i2c_msg* %msg_r, metadata !4804, metadata !DIExpression()), !dbg !4805
  %addr30 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_r, i32 0, i32 0, !dbg !4806
  %14 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4807
  %config31 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %14, i32 0, i32 1, !dbg !4808
  %15 = load %struct.stb0899_config*, %struct.stb0899_config** %config31, align 8, !dbg !4808
  %demod_address32 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %15, i32 0, i32 8, !dbg !4809
  %16 = load i8, i8* %demod_address32, align 8, !dbg !4809
  %conv33 = zext i8 %16 to i16, !dbg !4807
  store i16 %conv33, i16* %addr30, align 8, !dbg !4806
  %flags34 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_r, i32 0, i32 1, !dbg !4806
  store i16 1, i16* %flags34, align 2, !dbg !4806
  %len35 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_r, i32 0, i32 2, !dbg !4806
  store i16 4, i16* %len35, align 4, !dbg !4806
  %buf36 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_r, i32 0, i32 3, !dbg !4806
  %arraydecay37 = getelementptr inbounds [7 x i8], [7 x i8]* %buf, i64 0, i64 0, !dbg !4810
  store i8* %arraydecay37, i8** %buf36, align 8, !dbg !4806
  %17 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4811
  %conv38 = zext i16 %17 to i32, !dbg !4811
  %and39 = and i32 %conv38, 65280, !dbg !4812
  %conv40 = trunc i32 %and39 to i16, !dbg !4811
  store i16 %conv40, i16* %tmpaddr, align 2, !dbg !4813
  %18 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4814
  %conv41 = zext i16 %18 to i32, !dbg !4814
  %and42 = and i32 %conv41, 8, !dbg !4816
  %tobool = icmp ne i32 %and42, 0, !dbg !4816
  br i1 %tobool, label %if.end, label %if.then, !dbg !4817

if.then:                                          ; preds = %entry
  %19 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4818
  %conv43 = zext i16 %19 to i32, !dbg !4818
  %or = or i32 %conv43, 32, !dbg !4819
  %conv44 = trunc i32 %or to i16, !dbg !4818
  store i16 %conv44, i16* %tmpaddr, align 2, !dbg !4820
  br label %if.end, !dbg !4821

if.end:                                           ; preds = %if.then, %entry
  %20 = load i16, i16* %tmpaddr, align 2, !dbg !4822
  %conv45 = zext i16 %20 to i32, !dbg !4822
  %shr46 = ashr i32 %conv45, 8, !dbg !4822
  %and47 = and i32 %shr46, 255, !dbg !4822
  %conv48 = trunc i32 %and47 to i8, !dbg !4822
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %buf_1, i64 0, i64 0, !dbg !4823
  store i8 %conv48, i8* %arrayidx, align 1, !dbg !4824
  %21 = load i16, i16* %tmpaddr, align 2, !dbg !4825
  %conv49 = zext i16 %21 to i32, !dbg !4825
  %shr50 = ashr i32 %conv49, 0, !dbg !4825
  %and51 = and i32 %shr50, 255, !dbg !4825
  %conv52 = trunc i32 %and51 to i8, !dbg !4825
  %arrayidx53 = getelementptr [2 x i8], [2 x i8]* %buf_1, i64 0, i64 1, !dbg !4826
  store i8 %conv52, i8* %arrayidx53, align 1, !dbg !4827
  %22 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4828
  %i2c = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %22, i32 0, i32 0, !dbg !4829
  %23 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !4829
  %call = call i32 @i2c_transfer(%struct.i2c_adapter* %23, %struct.i2c_msg* %msg_0, i32 1) #8, !dbg !4830
  store i32 %call, i32* %status, align 4, !dbg !4831
  %24 = load i32, i32* %status, align 4, !dbg !4832
  %cmp = icmp slt i32 %24, 1, !dbg !4834
  br i1 %cmp, label %if.then55, label %if.end62, !dbg !4835

if.then55:                                        ; preds = %if.end
  %25 = load i32, i32* %status, align 4, !dbg !4836
  %cmp56 = icmp ne i32 %25, -512, !dbg !4839
  br i1 %cmp56, label %if.then58, label %if.end61, !dbg !4840

if.then58:                                        ; preds = %if.then55
  %26 = load i32, i32* %stb0899_i2cdev.addr, align 4, !dbg !4841
  %27 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4842
  %28 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4843
  %conv59 = zext i16 %28 to i32, !dbg !4843
  %29 = load i32, i32* %status, align 4, !dbg !4844
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._stb0899_read_s2reg, i64 0, i64 0), i32 %26, i32 %27, i32 %conv59, i32 %29) #9, !dbg !4845
  br label %if.end61, !dbg !4845

if.end61:                                         ; preds = %if.then58, %if.then55
  br label %err, !dbg !4846

if.end62:                                         ; preds = %if.end
  %30 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4847
  %i2c63 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %30, i32 0, i32 0, !dbg !4848
  %31 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c63, align 8, !dbg !4848
  %call64 = call i32 @i2c_transfer(%struct.i2c_adapter* %31, %struct.i2c_msg* %msg_1, i32 1) #8, !dbg !4849
  store i32 %call64, i32* %status, align 4, !dbg !4850
  %32 = load i32, i32* %status, align 4, !dbg !4851
  %cmp65 = icmp slt i32 %32, 1, !dbg !4853
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !4854

if.then67:                                        ; preds = %if.end62
  br label %err, !dbg !4855

if.end68:                                         ; preds = %if.end62
  %33 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4856
  %i2c69 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %33, i32 0, i32 0, !dbg !4857
  %34 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c69, align 8, !dbg !4857
  %call70 = call i32 @i2c_transfer(%struct.i2c_adapter* %34, %struct.i2c_msg* %msg_r, i32 1) #8, !dbg !4858
  store i32 %call70, i32* %status, align 4, !dbg !4859
  %35 = load i32, i32* %status, align 4, !dbg !4860
  %cmp71 = icmp slt i32 %35, 1, !dbg !4862
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !4863

if.then73:                                        ; preds = %if.end68
  br label %err, !dbg !4864

if.end74:                                         ; preds = %if.end68
  %36 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4865
  %conv75 = zext i16 %36 to i32, !dbg !4865
  %shr76 = ashr i32 %conv75, 8, !dbg !4865
  %and77 = and i32 %shr76, 255, !dbg !4865
  %conv78 = trunc i32 %and77 to i8, !dbg !4865
  %arrayidx79 = getelementptr [2 x i8], [2 x i8]* %buf_1, i64 0, i64 0, !dbg !4866
  store i8 %conv78, i8* %arrayidx79, align 1, !dbg !4867
  %37 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4868
  %conv80 = zext i16 %37 to i32, !dbg !4868
  %shr81 = ashr i32 %conv80, 0, !dbg !4868
  %and82 = and i32 %shr81, 255, !dbg !4868
  %conv83 = trunc i32 %and82 to i8, !dbg !4868
  %arrayidx84 = getelementptr [2 x i8], [2 x i8]* %buf_1, i64 0, i64 1, !dbg !4869
  store i8 %conv83, i8* %arrayidx84, align 1, !dbg !4870
  %38 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4871
  %i2c85 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %38, i32 0, i32 0, !dbg !4872
  %39 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c85, align 8, !dbg !4872
  %call86 = call i32 @i2c_transfer(%struct.i2c_adapter* %39, %struct.i2c_msg* %msg_1, i32 1) #8, !dbg !4873
  store i32 %call86, i32* %status, align 4, !dbg !4874
  %40 = load i32, i32* %status, align 4, !dbg !4875
  %cmp87 = icmp slt i32 %40, 1, !dbg !4877
  br i1 %cmp87, label %if.then89, label %if.end96, !dbg !4878

if.then89:                                        ; preds = %if.end74
  %41 = load i32, i32* %status, align 4, !dbg !4879
  %cmp90 = icmp ne i32 %41, -512, !dbg !4882
  br i1 %cmp90, label %if.then92, label %if.end95, !dbg !4883

if.then92:                                        ; preds = %if.then89
  %42 = load i32, i32* %stb0899_i2cdev.addr, align 4, !dbg !4884
  %43 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4885
  %44 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4886
  %conv93 = zext i16 %44 to i32, !dbg !4886
  %45 = load i32, i32* %status, align 4, !dbg !4887
  %call94 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._stb0899_read_s2reg, i64 0, i64 0), i32 %42, i32 %43, i32 %conv93, i32 %45) #9, !dbg !4888
  br label %if.end95, !dbg !4888

if.end95:                                         ; preds = %if.then92, %if.then89
  br label %err, !dbg !4889

if.end96:                                         ; preds = %if.end74
  %46 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4890
  %i2c97 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %46, i32 0, i32 0, !dbg !4891
  %47 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c97, align 8, !dbg !4891
  %call98 = call i32 @i2c_transfer(%struct.i2c_adapter* %47, %struct.i2c_msg* %msg_r, i32 1) #8, !dbg !4892
  store i32 %call98, i32* %status, align 4, !dbg !4893
  %48 = load i32, i32* %status, align 4, !dbg !4894
  %cmp99 = icmp slt i32 %48, 1, !dbg !4896
  br i1 %cmp99, label %if.then101, label %if.end110, !dbg !4897

if.then101:                                       ; preds = %if.end96
  %49 = load i32, i32* %status, align 4, !dbg !4898
  %cmp102 = icmp ne i32 %49, -512, !dbg !4901
  br i1 %cmp102, label %if.then104, label %if.end107, !dbg !4902

if.then104:                                       ; preds = %if.then101
  %50 = load i32, i32* %stb0899_i2cdev.addr, align 4, !dbg !4903
  %51 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4904
  %52 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4905
  %conv105 = zext i16 %52 to i32, !dbg !4905
  %53 = load i32, i32* %status, align 4, !dbg !4906
  %call106 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._stb0899_read_s2reg, i64 0, i64 0), i32 %50, i32 %51, i32 %conv105, i32 %53) #9, !dbg !4907
  br label %if.end107, !dbg !4907

if.end107:                                        ; preds = %if.then104, %if.then101
  %54 = load i32, i32* %status, align 4, !dbg !4908
  %cmp108 = icmp slt i32 %54, 0, !dbg !4909
  br i1 %cmp108, label %cond.true, label %cond.false, !dbg !4908

cond.true:                                        ; preds = %if.end107
  %55 = load i32, i32* %status, align 4, !dbg !4910
  br label %cond.end, !dbg !4908

cond.false:                                       ; preds = %if.end107
  br label %cond.end, !dbg !4908

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %55, %cond.true ], [ -121, %cond.false ], !dbg !4908
  store i32 %cond, i32* %retval, align 4, !dbg !4911
  br label %return, !dbg !4911

if.end110:                                        ; preds = %if.end96
  %arrayidx111 = getelementptr [7 x i8], [7 x i8]* %buf, i64 0, i64 3, !dbg !4912
  %56 = load i8, i8* %arrayidx111, align 1, !dbg !4912
  %conv112 = zext i8 %56 to i32, !dbg !4912
  %shl = shl i32 %conv112, 24, !dbg !4912
  %arrayidx113 = getelementptr [7 x i8], [7 x i8]* %buf, i64 0, i64 2, !dbg !4912
  %57 = load i8, i8* %arrayidx113, align 1, !dbg !4912
  %conv114 = zext i8 %57 to i32, !dbg !4912
  %shl115 = shl i32 %conv114, 16, !dbg !4912
  %or116 = or i32 %shl, %shl115, !dbg !4912
  %arrayidx117 = getelementptr [7 x i8], [7 x i8]* %buf, i64 0, i64 1, !dbg !4912
  %58 = load i8, i8* %arrayidx117, align 1, !dbg !4912
  %conv118 = zext i8 %58 to i32, !dbg !4912
  %shl119 = shl i32 %conv118, 8, !dbg !4912
  %or120 = or i32 %or116, %shl119, !dbg !4912
  %arrayidx121 = getelementptr [7 x i8], [7 x i8]* %buf, i64 0, i64 0, !dbg !4912
  %59 = load i8, i8* %arrayidx121, align 1, !dbg !4912
  %conv122 = zext i8 %59 to i32, !dbg !4912
  %or123 = or i32 %or120, %conv122, !dbg !4912
  store i32 %or123, i32* %data, align 4, !dbg !4913
  %60 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4914
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %60, i32 0, i32 3, !dbg !4914
  %61 = load i32*, i32** %verbose, align 8, !dbg !4914
  %62 = load i32, i32* %61, align 4, !dbg !4914
  %cmp124 = icmp uge i32 %62, 4, !dbg !4914
  %lnot = xor i1 %cmp124, true, !dbg !4914
  %lnot126 = xor i1 %lnot, true, !dbg !4914
  %lnot.ext = zext i1 %lnot126 to i32, !dbg !4914
  %conv127 = sext i32 %lnot.ext to i64, !dbg !4914
  %tobool128 = icmp ne i64 %conv127, 0, !dbg !4914
  br i1 %tobool128, label %if.then129, label %if.end132, !dbg !4916

if.then129:                                       ; preds = %if.end110
  %63 = load i32, i32* %stb0899_i2cdev.addr, align 4, !dbg !4917
  %64 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4918
  %65 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4919
  %conv130 = zext i16 %65 to i32, !dbg !4919
  %66 = load i32, i32* %data, align 4, !dbg !4920
  %call131 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__._stb0899_read_s2reg, i64 0, i64 0), i32 %63, i32 %64, i32 %conv130, i32 %66) #9, !dbg !4921
  br label %if.end132, !dbg !4921

if.end132:                                        ; preds = %if.then129, %if.end110
  %67 = load i32, i32* %data, align 4, !dbg !4922
  store i32 %67, i32* %retval, align 4, !dbg !4923
  br label %return, !dbg !4923

err:                                              ; preds = %if.end95, %if.then73, %if.then67, %if.end61
  call void @llvm.dbg.label(metadata !4924), !dbg !4925
  %68 = load i32, i32* %status, align 4, !dbg !4926
  %cmp133 = icmp slt i32 %68, 0, !dbg !4927
  br i1 %cmp133, label %cond.true135, label %cond.false136, !dbg !4926

cond.true135:                                     ; preds = %err
  %69 = load i32, i32* %status, align 4, !dbg !4928
  br label %cond.end137, !dbg !4926

cond.false136:                                    ; preds = %err
  br label %cond.end137, !dbg !4926

cond.end137:                                      ; preds = %cond.false136, %cond.true135
  %cond138 = phi i32 [ %69, %cond.true135 ], [ -121, %cond.false136 ], !dbg !4926
  store i32 %cond138, i32* %retval, align 4, !dbg !4929
  br label %return, !dbg !4929

return:                                           ; preds = %cond.end137, %if.end132, %cond.end
  %70 = load i32, i32* %retval, align 4, !dbg !4930
  ret i32 %70, !dbg !4930
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noredzone
declare dso_local i32 @i2c_transfer(%struct.i2c_adapter*, %struct.i2c_msg*, i32) #3

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @stb0899_write_s2reg(%struct.stb0899_state* %state, i32 %stb0899_i2cdev, i32 %stb0899_base_addr, i16 zeroext %stb0899_reg_offset, i32 %stb0899_data) #0 !dbg !4931 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stb0899_state*, align 8
  %stb0899_i2cdev.addr = alloca i32, align 4
  %stb0899_base_addr.addr = alloca i32, align 4
  %stb0899_reg_offset.addr = alloca i16, align 2
  %stb0899_data.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %buf_0 = alloca [6 x i8], align 1
  %buf_1 = alloca [6 x i8], align 1
  %msg_0 = alloca %struct.i2c_msg, align 8
  %msg_1 = alloca %struct.i2c_msg, align 8
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !4934, metadata !DIExpression()), !dbg !4935
  store i32 %stb0899_i2cdev, i32* %stb0899_i2cdev.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stb0899_i2cdev.addr, metadata !4936, metadata !DIExpression()), !dbg !4937
  store i32 %stb0899_base_addr, i32* %stb0899_base_addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stb0899_base_addr.addr, metadata !4938, metadata !DIExpression()), !dbg !4939
  store i16 %stb0899_reg_offset, i16* %stb0899_reg_offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %stb0899_reg_offset.addr, metadata !4940, metadata !DIExpression()), !dbg !4941
  store i32 %stb0899_data, i32* %stb0899_data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stb0899_data.addr, metadata !4942, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4944, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.declare(metadata [6 x i8]* %buf_0, metadata !4946, metadata !DIExpression()), !dbg !4947
  %arrayinit.begin = getelementptr inbounds [6 x i8], [6 x i8]* %buf_0, i64 0, i64 0, !dbg !4948
  %0 = load i32, i32* %stb0899_i2cdev.addr, align 4, !dbg !4949
  %shr = lshr i32 %0, 8, !dbg !4949
  %and = and i32 %shr, 255, !dbg !4949
  %conv = trunc i32 %and to i8, !dbg !4949
  store i8 %conv, i8* %arrayinit.begin, align 1, !dbg !4948
  %arrayinit.element = getelementptr inbounds i8, i8* %arrayinit.begin, i64 1, !dbg !4948
  %1 = load i32, i32* %stb0899_i2cdev.addr, align 4, !dbg !4950
  %shr1 = lshr i32 %1, 0, !dbg !4950
  %and2 = and i32 %shr1, 255, !dbg !4950
  %conv3 = trunc i32 %and2 to i8, !dbg !4950
  store i8 %conv3, i8* %arrayinit.element, align 1, !dbg !4948
  %arrayinit.element4 = getelementptr inbounds i8, i8* %arrayinit.element, i64 1, !dbg !4948
  %2 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4951
  %shr5 = lshr i32 %2, 0, !dbg !4951
  %and6 = and i32 %shr5, 255, !dbg !4951
  %conv7 = trunc i32 %and6 to i8, !dbg !4951
  store i8 %conv7, i8* %arrayinit.element4, align 1, !dbg !4948
  %arrayinit.element8 = getelementptr inbounds i8, i8* %arrayinit.element4, i64 1, !dbg !4948
  %3 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4952
  %shr9 = lshr i32 %3, 8, !dbg !4952
  %and10 = and i32 %shr9, 255, !dbg !4952
  %conv11 = trunc i32 %and10 to i8, !dbg !4952
  store i8 %conv11, i8* %arrayinit.element8, align 1, !dbg !4948
  %arrayinit.element12 = getelementptr inbounds i8, i8* %arrayinit.element8, i64 1, !dbg !4948
  %4 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4953
  %shr13 = lshr i32 %4, 16, !dbg !4953
  %and14 = and i32 %shr13, 255, !dbg !4953
  %conv15 = trunc i32 %and14 to i8, !dbg !4953
  store i8 %conv15, i8* %arrayinit.element12, align 1, !dbg !4948
  %arrayinit.element16 = getelementptr inbounds i8, i8* %arrayinit.element12, i64 1, !dbg !4948
  %5 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4954
  %shr17 = lshr i32 %5, 24, !dbg !4954
  %and18 = and i32 %shr17, 255, !dbg !4954
  %conv19 = trunc i32 %and18 to i8, !dbg !4954
  store i8 %conv19, i8* %arrayinit.element16, align 1, !dbg !4948
  call void @llvm.dbg.declare(metadata [6 x i8]* %buf_1, metadata !4955, metadata !DIExpression()), !dbg !4956
  %6 = bitcast [6 x i8]* %buf_1 to i8*, !dbg !4956
  call void @llvm.memset.p0i8.i64(i8* align 1 %6, i8 0, i64 6, i1 false), !dbg !4956
  call void @llvm.dbg.declare(metadata %struct.i2c_msg* %msg_0, metadata !4957, metadata !DIExpression()), !dbg !4958
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_0, i32 0, i32 0, !dbg !4959
  %7 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4960
  %config = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %7, i32 0, i32 1, !dbg !4961
  %8 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !4961
  %demod_address = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %8, i32 0, i32 8, !dbg !4962
  %9 = load i8, i8* %demod_address, align 8, !dbg !4962
  %conv20 = zext i8 %9 to i16, !dbg !4960
  store i16 %conv20, i16* %addr, align 8, !dbg !4959
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_0, i32 0, i32 1, !dbg !4959
  store i16 0, i16* %flags, align 2, !dbg !4959
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_0, i32 0, i32 2, !dbg !4959
  store i16 6, i16* %len, align 4, !dbg !4959
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_0, i32 0, i32 3, !dbg !4959
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %buf_0, i64 0, i64 0, !dbg !4963
  store i8* %arraydecay, i8** %buf, align 8, !dbg !4959
  call void @llvm.dbg.declare(metadata %struct.i2c_msg* %msg_1, metadata !4964, metadata !DIExpression()), !dbg !4965
  %addr21 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_1, i32 0, i32 0, !dbg !4966
  %10 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4967
  %config22 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %10, i32 0, i32 1, !dbg !4968
  %11 = load %struct.stb0899_config*, %struct.stb0899_config** %config22, align 8, !dbg !4968
  %demod_address23 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %11, i32 0, i32 8, !dbg !4969
  %12 = load i8, i8* %demod_address23, align 8, !dbg !4969
  %conv24 = zext i8 %12 to i16, !dbg !4967
  store i16 %conv24, i16* %addr21, align 8, !dbg !4966
  %flags25 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_1, i32 0, i32 1, !dbg !4966
  store i16 0, i16* %flags25, align 2, !dbg !4966
  %len26 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_1, i32 0, i32 2, !dbg !4966
  store i16 6, i16* %len26, align 4, !dbg !4966
  %buf27 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg_1, i32 0, i32 3, !dbg !4966
  %arraydecay28 = getelementptr inbounds [6 x i8], [6 x i8]* %buf_1, i64 0, i64 0, !dbg !4970
  store i8* %arraydecay28, i8** %buf27, align 8, !dbg !4966
  %13 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4971
  %conv29 = zext i16 %13 to i32, !dbg !4971
  %shr30 = ashr i32 %conv29, 8, !dbg !4971
  %and31 = and i32 %shr30, 255, !dbg !4971
  %conv32 = trunc i32 %and31 to i8, !dbg !4971
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %buf_1, i64 0, i64 0, !dbg !4972
  store i8 %conv32, i8* %arrayidx, align 1, !dbg !4973
  %14 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4974
  %conv33 = zext i16 %14 to i32, !dbg !4974
  %shr34 = ashr i32 %conv33, 0, !dbg !4974
  %and35 = and i32 %shr34, 255, !dbg !4974
  %conv36 = trunc i32 %and35 to i8, !dbg !4974
  %arrayidx37 = getelementptr [6 x i8], [6 x i8]* %buf_1, i64 0, i64 1, !dbg !4975
  store i8 %conv36, i8* %arrayidx37, align 1, !dbg !4976
  %15 = load i32, i32* %stb0899_data.addr, align 4, !dbg !4977
  %shr38 = lshr i32 %15, 0, !dbg !4977
  %and39 = and i32 %shr38, 255, !dbg !4977
  %conv40 = trunc i32 %and39 to i8, !dbg !4977
  %arrayidx41 = getelementptr [6 x i8], [6 x i8]* %buf_1, i64 0, i64 2, !dbg !4978
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !4979
  %16 = load i32, i32* %stb0899_data.addr, align 4, !dbg !4980
  %shr42 = lshr i32 %16, 8, !dbg !4980
  %and43 = and i32 %shr42, 255, !dbg !4980
  %conv44 = trunc i32 %and43 to i8, !dbg !4980
  %arrayidx45 = getelementptr [6 x i8], [6 x i8]* %buf_1, i64 0, i64 3, !dbg !4981
  store i8 %conv44, i8* %arrayidx45, align 1, !dbg !4982
  %17 = load i32, i32* %stb0899_data.addr, align 4, !dbg !4983
  %shr46 = lshr i32 %17, 16, !dbg !4983
  %and47 = and i32 %shr46, 255, !dbg !4983
  %conv48 = trunc i32 %and47 to i8, !dbg !4983
  %arrayidx49 = getelementptr [6 x i8], [6 x i8]* %buf_1, i64 0, i64 4, !dbg !4984
  store i8 %conv48, i8* %arrayidx49, align 1, !dbg !4985
  %18 = load i32, i32* %stb0899_data.addr, align 4, !dbg !4986
  %shr50 = lshr i32 %18, 24, !dbg !4986
  %and51 = and i32 %shr50, 255, !dbg !4986
  %conv52 = trunc i32 %and51 to i8, !dbg !4986
  %arrayidx53 = getelementptr [6 x i8], [6 x i8]* %buf_1, i64 0, i64 5, !dbg !4987
  store i8 %conv52, i8* %arrayidx53, align 1, !dbg !4988
  %19 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4989
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %19, i32 0, i32 3, !dbg !4989
  %20 = load i32*, i32** %verbose, align 8, !dbg !4989
  %21 = load i32, i32* %20, align 4, !dbg !4989
  %cmp = icmp uge i32 %21, 4, !dbg !4989
  %lnot = xor i1 %cmp, true, !dbg !4989
  %lnot55 = xor i1 %lnot, true, !dbg !4989
  %lnot.ext = zext i1 %lnot55 to i32, !dbg !4989
  %conv56 = sext i32 %lnot.ext to i64, !dbg !4989
  %tobool = icmp ne i64 %conv56, 0, !dbg !4989
  br i1 %tobool, label %if.then, label %if.end, !dbg !4991

if.then:                                          ; preds = %entry
  %22 = load i32, i32* %stb0899_i2cdev.addr, align 4, !dbg !4992
  %23 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !4993
  %24 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !4994
  %conv57 = zext i16 %24 to i32, !dbg !4994
  %25 = load i32, i32* %stb0899_data.addr, align 4, !dbg !4995
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_write_s2reg, i64 0, i64 0), i32 %22, i32 %23, i32 %conv57, i32 %25) #9, !dbg !4996
  br label %if.end, !dbg !4996

if.end:                                           ; preds = %if.then, %entry
  %26 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !4997
  %i2c = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %26, i32 0, i32 0, !dbg !4998
  %27 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !4998
  %call58 = call i32 @i2c_transfer(%struct.i2c_adapter* %27, %struct.i2c_msg* %msg_0, i32 1) #8, !dbg !4999
  store i32 %call58, i32* %status, align 4, !dbg !5000
  %28 = load i32, i32* %status, align 4, !dbg !5001
  %cmp59 = icmp slt i32 %28, 1, !dbg !5001
  %lnot61 = xor i1 %cmp59, true, !dbg !5001
  %lnot63 = xor i1 %lnot61, true, !dbg !5001
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !5001
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !5001
  %tobool66 = icmp ne i64 %conv65, 0, !dbg !5001
  br i1 %tobool66, label %if.then67, label %if.end74, !dbg !5003

if.then67:                                        ; preds = %if.end
  %29 = load i32, i32* %status, align 4, !dbg !5004
  %cmp68 = icmp ne i32 %29, -512, !dbg !5007
  br i1 %cmp68, label %if.then70, label %if.end73, !dbg !5008

if.then70:                                        ; preds = %if.then67
  %30 = load i32, i32* %stb0899_i2cdev.addr, align 4, !dbg !5009
  %31 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !5010
  %32 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !5011
  %conv71 = zext i16 %32 to i32, !dbg !5011
  %33 = load i32, i32* %stb0899_data.addr, align 4, !dbg !5012
  %34 = load i32, i32* %status, align 4, !dbg !5013
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_write_s2reg, i64 0, i64 0), i32 %30, i32 %31, i32 %conv71, i32 %33, i32 %34) #9, !dbg !5014
  br label %if.end73, !dbg !5014

if.end73:                                         ; preds = %if.then70, %if.then67
  br label %err, !dbg !5015

if.end74:                                         ; preds = %if.end
  %35 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5016
  %i2c75 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %35, i32 0, i32 0, !dbg !5017
  %36 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c75, align 8, !dbg !5017
  %call76 = call i32 @i2c_transfer(%struct.i2c_adapter* %36, %struct.i2c_msg* %msg_1, i32 1) #8, !dbg !5018
  store i32 %call76, i32* %status, align 4, !dbg !5019
  %37 = load i32, i32* %status, align 4, !dbg !5020
  %cmp77 = icmp slt i32 %37, 1, !dbg !5020
  %lnot79 = xor i1 %cmp77, true, !dbg !5020
  %lnot81 = xor i1 %lnot79, true, !dbg !5020
  %lnot.ext82 = zext i1 %lnot81 to i32, !dbg !5020
  %conv83 = sext i32 %lnot.ext82 to i64, !dbg !5020
  %tobool84 = icmp ne i64 %conv83, 0, !dbg !5020
  br i1 %tobool84, label %if.then85, label %if.end94, !dbg !5022

if.then85:                                        ; preds = %if.end74
  %38 = load i32, i32* %status, align 4, !dbg !5023
  %cmp86 = icmp ne i32 %38, -512, !dbg !5026
  br i1 %cmp86, label %if.then88, label %if.end91, !dbg !5027

if.then88:                                        ; preds = %if.then85
  %39 = load i32, i32* %stb0899_i2cdev.addr, align 4, !dbg !5028
  %40 = load i32, i32* %stb0899_base_addr.addr, align 4, !dbg !5029
  %41 = load i16, i16* %stb0899_reg_offset.addr, align 2, !dbg !5030
  %conv89 = zext i16 %41 to i32, !dbg !5030
  %42 = load i32, i32* %stb0899_data.addr, align 4, !dbg !5031
  %43 = load i32, i32* %status, align 4, !dbg !5032
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_write_s2reg, i64 0, i64 0), i32 %39, i32 %40, i32 %conv89, i32 %42, i32 %43) #9, !dbg !5033
  br label %if.end91, !dbg !5033

if.end91:                                         ; preds = %if.then88, %if.then85
  %44 = load i32, i32* %status, align 4, !dbg !5034
  %cmp92 = icmp slt i32 %44, 0, !dbg !5035
  br i1 %cmp92, label %cond.true, label %cond.false, !dbg !5034

cond.true:                                        ; preds = %if.end91
  %45 = load i32, i32* %status, align 4, !dbg !5036
  br label %cond.end, !dbg !5034

cond.false:                                       ; preds = %if.end91
  br label %cond.end, !dbg !5034

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %45, %cond.true ], [ -121, %cond.false ], !dbg !5034
  store i32 %cond, i32* %retval, align 4, !dbg !5037
  br label %return, !dbg !5037

if.end94:                                         ; preds = %if.end74
  store i32 0, i32* %retval, align 4, !dbg !5038
  br label %return, !dbg !5038

err:                                              ; preds = %if.end73
  call void @llvm.dbg.label(metadata !5039), !dbg !5040
  %46 = load i32, i32* %status, align 4, !dbg !5041
  %cmp95 = icmp slt i32 %46, 0, !dbg !5042
  br i1 %cmp95, label %cond.true97, label %cond.false98, !dbg !5041

cond.true97:                                      ; preds = %err
  %47 = load i32, i32* %status, align 4, !dbg !5043
  br label %cond.end99, !dbg !5041

cond.false98:                                     ; preds = %err
  br label %cond.end99, !dbg !5041

cond.end99:                                       ; preds = %cond.false98, %cond.true97
  %cond100 = phi i32 [ %47, %cond.true97 ], [ -121, %cond.false98 ], !dbg !5041
  store i32 %cond100, i32* %retval, align 4, !dbg !5044
  br label %return, !dbg !5044

return:                                           ; preds = %cond.end99, %if.end94, %cond.end
  %48 = load i32, i32* %retval, align 4, !dbg !5045
  ret i32 %48, !dbg !5045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @stb0899_read_regs(%struct.stb0899_state* %state, i32 %reg, i8* %buf, i32 %count) #0 !dbg !5046 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stb0899_state*, align 8
  %reg.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %b0 = alloca [2 x i8], align 1
  %msg = alloca [2 x %struct.i2c_msg], align 16
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !5049, metadata !DIExpression()), !dbg !5050
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !5051, metadata !DIExpression()), !dbg !5052
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !5053, metadata !DIExpression()), !dbg !5054
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5055, metadata !DIExpression()), !dbg !5056
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5057, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.declare(metadata [2 x i8]* %b0, metadata !5059, metadata !DIExpression()), !dbg !5060
  %arrayinit.begin = getelementptr inbounds [2 x i8], [2 x i8]* %b0, i64 0, i64 0, !dbg !5061
  %0 = load i32, i32* %reg.addr, align 4, !dbg !5062
  %shr = lshr i32 %0, 8, !dbg !5063
  %conv = trunc i32 %shr to i8, !dbg !5062
  store i8 %conv, i8* %arrayinit.begin, align 1, !dbg !5061
  %arrayinit.element = getelementptr inbounds i8, i8* %arrayinit.begin, i64 1, !dbg !5061
  %1 = load i32, i32* %reg.addr, align 4, !dbg !5064
  %and = and i32 %1, 255, !dbg !5065
  %conv1 = trunc i32 %and to i8, !dbg !5064
  store i8 %conv1, i8* %arrayinit.element, align 1, !dbg !5061
  call void @llvm.dbg.declare(metadata [2 x %struct.i2c_msg]* %msg, metadata !5066, metadata !DIExpression()), !dbg !5067
  %arrayinit.begin2 = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !5068
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin2, i32 0, i32 0, !dbg !5069
  %2 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5070
  %config = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %2, i32 0, i32 1, !dbg !5071
  %3 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !5071
  %demod_address = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %3, i32 0, i32 8, !dbg !5072
  %4 = load i8, i8* %demod_address, align 8, !dbg !5072
  %conv3 = zext i8 %4 to i16, !dbg !5070
  store i16 %conv3, i16* %addr, align 16, !dbg !5069
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin2, i32 0, i32 1, !dbg !5069
  store i16 0, i16* %flags, align 2, !dbg !5069
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin2, i32 0, i32 2, !dbg !5069
  store i16 2, i16* %len, align 4, !dbg !5069
  %buf4 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin2, i32 0, i32 3, !dbg !5069
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %b0, i64 0, i64 0, !dbg !5073
  store i8* %arraydecay, i8** %buf4, align 8, !dbg !5069
  %arrayinit.element5 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin2, i64 1, !dbg !5068
  %addr6 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element5, i32 0, i32 0, !dbg !5074
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5075
  %config7 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %5, i32 0, i32 1, !dbg !5076
  %6 = load %struct.stb0899_config*, %struct.stb0899_config** %config7, align 8, !dbg !5076
  %demod_address8 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %6, i32 0, i32 8, !dbg !5077
  %7 = load i8, i8* %demod_address8, align 8, !dbg !5077
  %conv9 = zext i8 %7 to i16, !dbg !5075
  store i16 %conv9, i16* %addr6, align 16, !dbg !5074
  %flags10 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element5, i32 0, i32 1, !dbg !5074
  store i16 1, i16* %flags10, align 2, !dbg !5074
  %len11 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element5, i32 0, i32 2, !dbg !5074
  %8 = load i32, i32* %count.addr, align 4, !dbg !5078
  %conv12 = trunc i32 %8 to i16, !dbg !5078
  store i16 %conv12, i16* %len11, align 4, !dbg !5074
  %buf13 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element5, i32 0, i32 3, !dbg !5074
  %9 = load i8*, i8** %buf.addr, align 8, !dbg !5079
  store i8* %9, i8** %buf13, align 8, !dbg !5074
  %10 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5080
  %i2c = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %10, i32 0, i32 0, !dbg !5081
  %11 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !5081
  %arraydecay14 = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !5082
  %call = call i32 @i2c_transfer(%struct.i2c_adapter* %11, %struct.i2c_msg* %arraydecay14, i32 2) #8, !dbg !5083
  store i32 %call, i32* %status, align 4, !dbg !5084
  %12 = load i32, i32* %status, align 4, !dbg !5085
  %cmp = icmp ne i32 %12, 2, !dbg !5087
  br i1 %cmp, label %if.then, label %if.end20, !dbg !5088

if.then:                                          ; preds = %entry
  %13 = load i32, i32* %status, align 4, !dbg !5089
  %cmp16 = icmp ne i32 %13, -512, !dbg !5092
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !5093

if.then18:                                        ; preds = %if.then
  %14 = load i32, i32* %reg.addr, align 4, !dbg !5094
  %15 = load i32, i32* %count.addr, align 4, !dbg !5095
  %16 = load i32, i32* %status, align 4, !dbg !5096
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stb0899_read_regs, i64 0, i64 0), i32 %14, i32 %15, i32 %16) #9, !dbg !5097
  br label %if.end, !dbg !5097

if.end:                                           ; preds = %if.then18, %if.then
  br label %err, !dbg !5098

if.end20:                                         ; preds = %entry
  %17 = load i32, i32* %reg.addr, align 4, !dbg !5099
  %cmp21 = icmp ne i32 %17, 62207, !dbg !5101
  br i1 %cmp21, label %land.lhs.true, label %if.end34, !dbg !5102

land.lhs.true:                                    ; preds = %if.end20
  %18 = load i32, i32* %reg.addr, align 4, !dbg !5103
  %cmp23 = icmp ne i32 %18, 63231, !dbg !5104
  br i1 %cmp23, label %land.lhs.true25, label %if.end34, !dbg !5105

land.lhs.true25:                                  ; preds = %land.lhs.true
  %19 = load i32, i32* %reg.addr, align 4, !dbg !5106
  %and26 = and i32 %19, 65280, !dbg !5107
  %cmp27 = icmp eq i32 %and26, 61952, !dbg !5108
  br i1 %cmp27, label %if.then32, label %lor.lhs.false, !dbg !5109

lor.lhs.false:                                    ; preds = %land.lhs.true25
  %20 = load i32, i32* %reg.addr, align 4, !dbg !5110
  %and29 = and i32 %20, 65280, !dbg !5111
  %cmp30 = icmp eq i32 %and29, 62976, !dbg !5112
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !5113

if.then32:                                        ; preds = %lor.lhs.false, %land.lhs.true25
  %21 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5114
  %22 = load i32, i32* %reg.addr, align 4, !dbg !5115
  %or = or i32 %22, 255, !dbg !5116
  %call33 = call i32 @_stb0899_read_reg(%struct.stb0899_state* %21, i32 %or) #8, !dbg !5117
  br label %if.end34, !dbg !5117

if.end34:                                         ; preds = %if.then32, %lor.lhs.false, %land.lhs.true, %if.end20
  br label %do.body, !dbg !5118

do.body:                                          ; preds = %if.end34
  %23 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5119
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %23, i32 0, i32 3, !dbg !5119
  %24 = load i32*, i32** %verbose, align 8, !dbg !5119
  %25 = load i32, i32* %24, align 4, !dbg !5119
  %cmp35 = icmp ugt i32 %25, 0, !dbg !5119
  br i1 %cmp35, label %land.lhs.true37, label %if.else, !dbg !5119

land.lhs.true37:                                  ; preds = %do.body
  %26 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5119
  %verbose38 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %26, i32 0, i32 3, !dbg !5119
  %27 = load i32*, i32** %verbose38, align 8, !dbg !5119
  %28 = load i32, i32* %27, align 4, !dbg !5119
  %cmp39 = icmp ugt i32 %28, 4, !dbg !5119
  br i1 %cmp39, label %if.then41, label %if.else, !dbg !5124

if.then41:                                        ; preds = %land.lhs.true37
  %29 = load i32, i32* %reg.addr, align 4, !dbg !5119
  %30 = load i32, i32* %count.addr, align 4, !dbg !5119
  %31 = load i8*, i8** %buf.addr, align 8, !dbg !5119
  %call42 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stb0899_read_regs, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stb0899_read_regs, i64 0, i64 0), i32 %29, i32 %30, i8* %31) #9, !dbg !5119
  br label %if.end75, !dbg !5119

if.else:                                          ; preds = %land.lhs.true37, %do.body
  %32 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5125
  %verbose43 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %32, i32 0, i32 3, !dbg !5125
  %33 = load i32*, i32** %verbose43, align 8, !dbg !5125
  %34 = load i32, i32* %33, align 4, !dbg !5125
  %cmp44 = icmp ugt i32 %34, 1, !dbg !5125
  br i1 %cmp44, label %land.lhs.true46, label %if.else52, !dbg !5125

land.lhs.true46:                                  ; preds = %if.else
  %35 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5125
  %verbose47 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %35, i32 0, i32 3, !dbg !5125
  %36 = load i32*, i32** %verbose47, align 8, !dbg !5125
  %37 = load i32, i32* %36, align 4, !dbg !5125
  %cmp48 = icmp ugt i32 %37, 4, !dbg !5125
  br i1 %cmp48, label %if.then50, label %if.else52, !dbg !5119

if.then50:                                        ; preds = %land.lhs.true46
  %38 = load i32, i32* %reg.addr, align 4, !dbg !5125
  %39 = load i32, i32* %count.addr, align 4, !dbg !5125
  %40 = load i8*, i8** %buf.addr, align 8, !dbg !5125
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stb0899_read_regs, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stb0899_read_regs, i64 0, i64 0), i32 %38, i32 %39, i8* %40) #9, !dbg !5125
  br label %if.end74, !dbg !5125

if.else52:                                        ; preds = %land.lhs.true46, %if.else
  %41 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5127
  %verbose53 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %41, i32 0, i32 3, !dbg !5127
  %42 = load i32*, i32** %verbose53, align 8, !dbg !5127
  %43 = load i32, i32* %42, align 4, !dbg !5127
  %cmp54 = icmp ugt i32 %43, 2, !dbg !5127
  br i1 %cmp54, label %land.lhs.true56, label %if.else62, !dbg !5127

land.lhs.true56:                                  ; preds = %if.else52
  %44 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5127
  %verbose57 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %44, i32 0, i32 3, !dbg !5127
  %45 = load i32*, i32** %verbose57, align 8, !dbg !5127
  %46 = load i32, i32* %45, align 4, !dbg !5127
  %cmp58 = icmp ugt i32 %46, 4, !dbg !5127
  br i1 %cmp58, label %if.then60, label %if.else62, !dbg !5125

if.then60:                                        ; preds = %land.lhs.true56
  %47 = load i32, i32* %reg.addr, align 4, !dbg !5127
  %48 = load i32, i32* %count.addr, align 4, !dbg !5127
  %49 = load i8*, i8** %buf.addr, align 8, !dbg !5127
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stb0899_read_regs, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stb0899_read_regs, i64 0, i64 0), i32 %47, i32 %48, i8* %49) #9, !dbg !5127
  br label %if.end73, !dbg !5127

if.else62:                                        ; preds = %land.lhs.true56, %if.else52
  %50 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5129
  %verbose63 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %50, i32 0, i32 3, !dbg !5129
  %51 = load i32*, i32** %verbose63, align 8, !dbg !5129
  %52 = load i32, i32* %51, align 4, !dbg !5129
  %cmp64 = icmp ugt i32 %52, 3, !dbg !5129
  br i1 %cmp64, label %land.lhs.true66, label %if.end72, !dbg !5129

land.lhs.true66:                                  ; preds = %if.else62
  %53 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5129
  %verbose67 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %53, i32 0, i32 3, !dbg !5129
  %54 = load i32*, i32** %verbose67, align 8, !dbg !5129
  %55 = load i32, i32* %54, align 4, !dbg !5129
  %cmp68 = icmp ugt i32 %55, 4, !dbg !5129
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !5127

if.then70:                                        ; preds = %land.lhs.true66
  %56 = load i32, i32* %reg.addr, align 4, !dbg !5129
  %57 = load i32, i32* %count.addr, align 4, !dbg !5129
  %58 = load i8*, i8** %buf.addr, align 8, !dbg !5129
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stb0899_read_regs, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stb0899_read_regs, i64 0, i64 0), i32 %56, i32 %57, i8* %58) #9, !dbg !5129
  br label %if.end72, !dbg !5129

if.end72:                                         ; preds = %if.then70, %land.lhs.true66, %if.else62
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then60
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then50
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then41
  br label %do.end, !dbg !5131

do.end:                                           ; preds = %if.end75
  store i32 0, i32* %retval, align 4, !dbg !5132
  br label %return, !dbg !5132

err:                                              ; preds = %if.end
  call void @llvm.dbg.label(metadata !5133), !dbg !5134
  %59 = load i32, i32* %status, align 4, !dbg !5135
  %cmp76 = icmp slt i32 %59, 0, !dbg !5136
  br i1 %cmp76, label %cond.true, label %cond.false, !dbg !5135

cond.true:                                        ; preds = %err
  %60 = load i32, i32* %status, align 4, !dbg !5137
  br label %cond.end, !dbg !5135

cond.false:                                       ; preds = %err
  br label %cond.end, !dbg !5135

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %60, %cond.true ], [ -121, %cond.false ], !dbg !5135
  store i32 %cond, i32* %retval, align 4, !dbg !5138
  br label %return, !dbg !5138

return:                                           ; preds = %cond.end, %do.end
  %61 = load i32, i32* %retval, align 4, !dbg !5139
  ret i32 %61, !dbg !5139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @stb0899_write_regs(%struct.stb0899_state* %state, i32 %reg, i8* %data, i32 %count) #0 !dbg !5140 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stb0899_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %buf = alloca [64 x i8], align 16
  %i2c_msg = alloca %struct.i2c_msg, align 8
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !5141, metadata !DIExpression()), !dbg !5142
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !5143, metadata !DIExpression()), !dbg !5144
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5145, metadata !DIExpression()), !dbg !5146
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !5147, metadata !DIExpression()), !dbg !5148
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5149, metadata !DIExpression()), !dbg !5150
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !5151, metadata !DIExpression()), !dbg !5153
  call void @llvm.dbg.declare(metadata %struct.i2c_msg* %i2c_msg, metadata !5154, metadata !DIExpression()), !dbg !5155
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %i2c_msg, i32 0, i32 0, !dbg !5156
  %0 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5157
  %config = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %0, i32 0, i32 1, !dbg !5158
  %1 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !5158
  %demod_address = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %1, i32 0, i32 8, !dbg !5159
  %2 = load i8, i8* %demod_address, align 8, !dbg !5159
  %conv = zext i8 %2 to i16, !dbg !5157
  store i16 %conv, i16* %addr, align 8, !dbg !5156
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %i2c_msg, i32 0, i32 1, !dbg !5156
  store i16 0, i16* %flags, align 2, !dbg !5156
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %i2c_msg, i32 0, i32 2, !dbg !5156
  %3 = load i32, i32* %count.addr, align 4, !dbg !5160
  %add = add i32 2, %3, !dbg !5161
  %conv1 = trunc i32 %add to i16, !dbg !5162
  store i16 %conv1, i16* %len, align 4, !dbg !5156
  %buf2 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %i2c_msg, i32 0, i32 3, !dbg !5156
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !5163
  store i8* %arraydecay, i8** %buf2, align 8, !dbg !5156
  %4 = load i32, i32* %count.addr, align 4, !dbg !5164
  %add3 = add i32 2, %4, !dbg !5166
  %conv4 = zext i32 %add3 to i64, !dbg !5167
  %cmp = icmp ugt i64 %conv4, 64, !dbg !5168
  br i1 %cmp, label %if.then, label %if.end, !dbg !5169

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %reg.addr, align 4, !dbg !5170
  %6 = load i32, i32* %count.addr, align 4, !dbg !5172
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i32 %5, i32 %6) #9, !dbg !5173
  store i32 -22, i32* %retval, align 4, !dbg !5174
  br label %return, !dbg !5174

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %reg.addr, align 4, !dbg !5175
  %shr = lshr i32 %7, 8, !dbg !5176
  %conv6 = trunc i32 %shr to i8, !dbg !5175
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !5177
  store i8 %conv6, i8* %arrayidx, align 16, !dbg !5178
  %8 = load i32, i32* %reg.addr, align 4, !dbg !5179
  %and = and i32 %8, 255, !dbg !5180
  %conv7 = trunc i32 %and to i8, !dbg !5179
  %arrayidx8 = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 1, !dbg !5181
  store i8 %conv7, i8* %arrayidx8, align 1, !dbg !5182
  %arrayidx9 = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 2, !dbg !5183
  %9 = load i8*, i8** %data.addr, align 8, !dbg !5184
  %10 = load i32, i32* %count.addr, align 4, !dbg !5185
  %conv10 = zext i32 %10 to i64, !dbg !5185
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arrayidx9, i8* align 1 %9, i64 %conv10, i1 false), !dbg !5186
  br label %do.body, !dbg !5187

do.body:                                          ; preds = %if.end
  %11 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5188
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %11, i32 0, i32 3, !dbg !5188
  %12 = load i32*, i32** %verbose, align 8, !dbg !5188
  %13 = load i32, i32* %12, align 4, !dbg !5188
  %cmp11 = icmp ugt i32 %13, 0, !dbg !5188
  br i1 %cmp11, label %land.lhs.true, label %if.else, !dbg !5188

land.lhs.true:                                    ; preds = %do.body
  %14 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5188
  %verbose13 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %14, i32 0, i32 3, !dbg !5188
  %15 = load i32*, i32** %verbose13, align 8, !dbg !5188
  %16 = load i32, i32* %15, align 4, !dbg !5188
  %cmp14 = icmp ugt i32 %16, 4, !dbg !5188
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !5193

if.then16:                                        ; preds = %land.lhs.true
  %17 = load i32, i32* %reg.addr, align 4, !dbg !5188
  %18 = load i32, i32* %count.addr, align 4, !dbg !5188
  %19 = load i8*, i8** %data.addr, align 8, !dbg !5188
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i32 %17, i32 %18, i8* %19) #9, !dbg !5188
  br label %if.end50, !dbg !5188

if.else:                                          ; preds = %land.lhs.true, %do.body
  %20 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5194
  %verbose18 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %20, i32 0, i32 3, !dbg !5194
  %21 = load i32*, i32** %verbose18, align 8, !dbg !5194
  %22 = load i32, i32* %21, align 4, !dbg !5194
  %cmp19 = icmp ugt i32 %22, 1, !dbg !5194
  br i1 %cmp19, label %land.lhs.true21, label %if.else27, !dbg !5194

land.lhs.true21:                                  ; preds = %if.else
  %23 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5194
  %verbose22 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %23, i32 0, i32 3, !dbg !5194
  %24 = load i32*, i32** %verbose22, align 8, !dbg !5194
  %25 = load i32, i32* %24, align 4, !dbg !5194
  %cmp23 = icmp ugt i32 %25, 4, !dbg !5194
  br i1 %cmp23, label %if.then25, label %if.else27, !dbg !5188

if.then25:                                        ; preds = %land.lhs.true21
  %26 = load i32, i32* %reg.addr, align 4, !dbg !5194
  %27 = load i32, i32* %count.addr, align 4, !dbg !5194
  %28 = load i8*, i8** %data.addr, align 8, !dbg !5194
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i32 %26, i32 %27, i8* %28) #9, !dbg !5194
  br label %if.end49, !dbg !5194

if.else27:                                        ; preds = %land.lhs.true21, %if.else
  %29 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5196
  %verbose28 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %29, i32 0, i32 3, !dbg !5196
  %30 = load i32*, i32** %verbose28, align 8, !dbg !5196
  %31 = load i32, i32* %30, align 4, !dbg !5196
  %cmp29 = icmp ugt i32 %31, 2, !dbg !5196
  br i1 %cmp29, label %land.lhs.true31, label %if.else37, !dbg !5196

land.lhs.true31:                                  ; preds = %if.else27
  %32 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5196
  %verbose32 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %32, i32 0, i32 3, !dbg !5196
  %33 = load i32*, i32** %verbose32, align 8, !dbg !5196
  %34 = load i32, i32* %33, align 4, !dbg !5196
  %cmp33 = icmp ugt i32 %34, 4, !dbg !5196
  br i1 %cmp33, label %if.then35, label %if.else37, !dbg !5194

if.then35:                                        ; preds = %land.lhs.true31
  %35 = load i32, i32* %reg.addr, align 4, !dbg !5196
  %36 = load i32, i32* %count.addr, align 4, !dbg !5196
  %37 = load i8*, i8** %data.addr, align 8, !dbg !5196
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i32 %35, i32 %36, i8* %37) #9, !dbg !5196
  br label %if.end48, !dbg !5196

if.else37:                                        ; preds = %land.lhs.true31, %if.else27
  %38 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5198
  %verbose38 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %38, i32 0, i32 3, !dbg !5198
  %39 = load i32*, i32** %verbose38, align 8, !dbg !5198
  %40 = load i32, i32* %39, align 4, !dbg !5198
  %cmp39 = icmp ugt i32 %40, 3, !dbg !5198
  br i1 %cmp39, label %land.lhs.true41, label %if.end47, !dbg !5198

land.lhs.true41:                                  ; preds = %if.else37
  %41 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5198
  %verbose42 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %41, i32 0, i32 3, !dbg !5198
  %42 = load i32*, i32** %verbose42, align 8, !dbg !5198
  %43 = load i32, i32* %42, align 4, !dbg !5198
  %cmp43 = icmp ugt i32 %43, 4, !dbg !5198
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !5196

if.then45:                                        ; preds = %land.lhs.true41
  %44 = load i32, i32* %reg.addr, align 4, !dbg !5198
  %45 = load i32, i32* %count.addr, align 4, !dbg !5198
  %46 = load i8*, i8** %data.addr, align 8, !dbg !5198
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i32 %44, i32 %45, i8* %46) #9, !dbg !5198
  br label %if.end47, !dbg !5198

if.end47:                                         ; preds = %if.then45, %land.lhs.true41, %if.else37
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then35
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then25
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then16
  br label %do.end, !dbg !5200

do.end:                                           ; preds = %if.end50
  %47 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5201
  %i2c = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %47, i32 0, i32 0, !dbg !5202
  %48 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !5202
  %call51 = call i32 @i2c_transfer(%struct.i2c_adapter* %48, %struct.i2c_msg* %i2c_msg, i32 1) #8, !dbg !5203
  store i32 %call51, i32* %ret, align 4, !dbg !5204
  %49 = load i32, i32* %reg.addr, align 4, !dbg !5205
  %and52 = and i32 %49, 65280, !dbg !5207
  %cmp53 = icmp eq i32 %and52, 61952, !dbg !5208
  br i1 %cmp53, label %if.then58, label %lor.lhs.false, !dbg !5209

lor.lhs.false:                                    ; preds = %do.end
  %50 = load i32, i32* %reg.addr, align 4, !dbg !5210
  %and55 = and i32 %50, 65280, !dbg !5211
  %cmp56 = icmp eq i32 %and55, 62976, !dbg !5212
  br i1 %cmp56, label %if.then58, label %if.end60, !dbg !5213

if.then58:                                        ; preds = %lor.lhs.false, %do.end
  %51 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5214
  %52 = load i32, i32* %reg.addr, align 4, !dbg !5215
  %or = or i32 %52, 255, !dbg !5216
  %call59 = call i32 @stb0899_read_reg(%struct.stb0899_state* %51, i32 %or) #8, !dbg !5217
  br label %if.end60, !dbg !5217

if.end60:                                         ; preds = %if.then58, %lor.lhs.false
  %53 = load i32, i32* %ret, align 4, !dbg !5218
  %cmp61 = icmp ne i32 %53, 1, !dbg !5220
  br i1 %cmp61, label %if.then63, label %if.end123, !dbg !5221

if.then63:                                        ; preds = %if.end60
  %54 = load i32, i32* %ret, align 4, !dbg !5222
  %cmp64 = icmp ne i32 %54, -512, !dbg !5225
  br i1 %cmp64, label %if.then66, label %if.end120, !dbg !5226

if.then66:                                        ; preds = %if.then63
  br label %do.body67, !dbg !5227

do.body67:                                        ; preds = %if.then66
  %55 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5228
  %verbose68 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %55, i32 0, i32 3, !dbg !5228
  %56 = load i32*, i32** %verbose68, align 8, !dbg !5228
  %57 = load i32, i32* %56, align 4, !dbg !5228
  %cmp69 = icmp ugt i32 %57, 0, !dbg !5228
  br i1 %cmp69, label %land.lhs.true71, label %if.else79, !dbg !5228

land.lhs.true71:                                  ; preds = %do.body67
  %58 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5228
  %verbose72 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %58, i32 0, i32 3, !dbg !5228
  %59 = load i32*, i32** %verbose72, align 8, !dbg !5228
  %60 = load i32, i32* %59, align 4, !dbg !5228
  %cmp73 = icmp ugt i32 %60, 0, !dbg !5228
  br i1 %cmp73, label %if.then75, label %if.else79, !dbg !5233

if.then75:                                        ; preds = %land.lhs.true71
  %61 = load i32, i32* %reg.addr, align 4, !dbg !5228
  %62 = load i8*, i8** %data.addr, align 8, !dbg !5228
  %arrayidx76 = getelementptr i8, i8* %62, i64 0, !dbg !5228
  %63 = load i8, i8* %arrayidx76, align 1, !dbg !5228
  %conv77 = zext i8 %63 to i32, !dbg !5228
  %64 = load i32, i32* %count.addr, align 4, !dbg !5228
  %65 = load i32, i32* %ret, align 4, !dbg !5228
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i32 %61, i32 %conv77, i32 %64, i32 %65) #9, !dbg !5228
  br label %if.end118, !dbg !5228

if.else79:                                        ; preds = %land.lhs.true71, %do.body67
  %66 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5234
  %verbose80 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %66, i32 0, i32 3, !dbg !5234
  %67 = load i32*, i32** %verbose80, align 8, !dbg !5234
  %68 = load i32, i32* %67, align 4, !dbg !5234
  %cmp81 = icmp ugt i32 %68, 1, !dbg !5234
  br i1 %cmp81, label %land.lhs.true83, label %if.else91, !dbg !5234

land.lhs.true83:                                  ; preds = %if.else79
  %69 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5234
  %verbose84 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %69, i32 0, i32 3, !dbg !5234
  %70 = load i32*, i32** %verbose84, align 8, !dbg !5234
  %71 = load i32, i32* %70, align 4, !dbg !5234
  %cmp85 = icmp ugt i32 %71, 0, !dbg !5234
  br i1 %cmp85, label %if.then87, label %if.else91, !dbg !5228

if.then87:                                        ; preds = %land.lhs.true83
  %72 = load i32, i32* %reg.addr, align 4, !dbg !5234
  %73 = load i8*, i8** %data.addr, align 8, !dbg !5234
  %arrayidx88 = getelementptr i8, i8* %73, i64 0, !dbg !5234
  %74 = load i8, i8* %arrayidx88, align 1, !dbg !5234
  %conv89 = zext i8 %74 to i32, !dbg !5234
  %75 = load i32, i32* %count.addr, align 4, !dbg !5234
  %76 = load i32, i32* %ret, align 4, !dbg !5234
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i32 %72, i32 %conv89, i32 %75, i32 %76) #9, !dbg !5234
  br label %if.end117, !dbg !5234

if.else91:                                        ; preds = %land.lhs.true83, %if.else79
  %77 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5236
  %verbose92 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %77, i32 0, i32 3, !dbg !5236
  %78 = load i32*, i32** %verbose92, align 8, !dbg !5236
  %79 = load i32, i32* %78, align 4, !dbg !5236
  %cmp93 = icmp ugt i32 %79, 2, !dbg !5236
  br i1 %cmp93, label %land.lhs.true95, label %if.else103, !dbg !5236

land.lhs.true95:                                  ; preds = %if.else91
  %80 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5236
  %verbose96 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %80, i32 0, i32 3, !dbg !5236
  %81 = load i32*, i32** %verbose96, align 8, !dbg !5236
  %82 = load i32, i32* %81, align 4, !dbg !5236
  %cmp97 = icmp ugt i32 %82, 0, !dbg !5236
  br i1 %cmp97, label %if.then99, label %if.else103, !dbg !5234

if.then99:                                        ; preds = %land.lhs.true95
  %83 = load i32, i32* %reg.addr, align 4, !dbg !5236
  %84 = load i8*, i8** %data.addr, align 8, !dbg !5236
  %arrayidx100 = getelementptr i8, i8* %84, i64 0, !dbg !5236
  %85 = load i8, i8* %arrayidx100, align 1, !dbg !5236
  %conv101 = zext i8 %85 to i32, !dbg !5236
  %86 = load i32, i32* %count.addr, align 4, !dbg !5236
  %87 = load i32, i32* %ret, align 4, !dbg !5236
  %call102 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i32 %83, i32 %conv101, i32 %86, i32 %87) #9, !dbg !5236
  br label %if.end116, !dbg !5236

if.else103:                                       ; preds = %land.lhs.true95, %if.else91
  %88 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5238
  %verbose104 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %88, i32 0, i32 3, !dbg !5238
  %89 = load i32*, i32** %verbose104, align 8, !dbg !5238
  %90 = load i32, i32* %89, align 4, !dbg !5238
  %cmp105 = icmp ugt i32 %90, 3, !dbg !5238
  br i1 %cmp105, label %land.lhs.true107, label %if.end115, !dbg !5238

land.lhs.true107:                                 ; preds = %if.else103
  %91 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5238
  %verbose108 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %91, i32 0, i32 3, !dbg !5238
  %92 = load i32*, i32** %verbose108, align 8, !dbg !5238
  %93 = load i32, i32* %92, align 4, !dbg !5238
  %cmp109 = icmp ugt i32 %93, 0, !dbg !5238
  br i1 %cmp109, label %if.then111, label %if.end115, !dbg !5236

if.then111:                                       ; preds = %land.lhs.true107
  %94 = load i32, i32* %reg.addr, align 4, !dbg !5238
  %95 = load i8*, i8** %data.addr, align 8, !dbg !5238
  %arrayidx112 = getelementptr i8, i8* %95, i64 0, !dbg !5238
  %96 = load i8, i8* %arrayidx112, align 1, !dbg !5238
  %conv113 = zext i8 %96 to i32, !dbg !5238
  %97 = load i32, i32* %count.addr, align 4, !dbg !5238
  %98 = load i32, i32* %ret, align 4, !dbg !5238
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_write_regs, i64 0, i64 0), i32 %94, i32 %conv113, i32 %97, i32 %98) #9, !dbg !5238
  br label %if.end115, !dbg !5238

if.end115:                                        ; preds = %if.then111, %land.lhs.true107, %if.else103
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then99
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.then87
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then75
  br label %do.end119, !dbg !5240

do.end119:                                        ; preds = %if.end118
  br label %if.end120, !dbg !5240

if.end120:                                        ; preds = %do.end119, %if.then63
  %99 = load i32, i32* %ret, align 4, !dbg !5241
  %cmp121 = icmp slt i32 %99, 0, !dbg !5242
  br i1 %cmp121, label %cond.true, label %cond.false, !dbg !5241

cond.true:                                        ; preds = %if.end120
  %100 = load i32, i32* %ret, align 4, !dbg !5243
  br label %cond.end, !dbg !5241

cond.false:                                       ; preds = %if.end120
  br label %cond.end, !dbg !5241

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %100, %cond.true ], [ -121, %cond.false ], !dbg !5241
  store i32 %cond, i32* %retval, align 4, !dbg !5244
  br label %return, !dbg !5244

if.end123:                                        ; preds = %if.end60
  store i32 0, i32* %retval, align 4, !dbg !5245
  br label %return, !dbg !5245

return:                                           ; preds = %if.end123, %cond.end, %if.then
  %101 = load i32, i32* %retval, align 4, !dbg !5246
  ret i32 %101, !dbg !5246
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @stb0899_write_reg(%struct.stb0899_state* %state, i32 %reg, i8 zeroext %data) #0 !dbg !5247 {
entry:
  %state.addr = alloca %struct.stb0899_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i8, align 1
  %tmp = alloca i8, align 1
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !5250, metadata !DIExpression()), !dbg !5251
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !5252, metadata !DIExpression()), !dbg !5253
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !5254, metadata !DIExpression()), !dbg !5255
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !5256, metadata !DIExpression()), !dbg !5257
  %0 = load i8, i8* %data.addr, align 1, !dbg !5258
  store i8 %0, i8* %tmp, align 1, !dbg !5257
  %1 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5259
  %2 = load i32, i32* %reg.addr, align 4, !dbg !5260
  %call = call i32 @stb0899_write_regs(%struct.stb0899_state* %1, i32 %2, i8* %tmp, i32 1) #8, !dbg !5261
  ret i32 %call, !dbg !5262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @stb0899_i2c_gate_ctrl(%struct.dvb_frontend* %fe, i32 %enable) #0 !dbg !5263 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %enable.addr = alloca i32, align 4
  %i2c_stat = alloca i32, align 4
  %state = alloca %struct.stb0899_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5264, metadata !DIExpression()), !dbg !5265
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !5266, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.declare(metadata i32* %i2c_stat, metadata !5268, metadata !DIExpression()), !dbg !5269
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !5270, metadata !DIExpression()), !dbg !5271
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5272
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5273
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5273
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !5272
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !5271
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5274
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %3, i32 61738) #8, !dbg !5275
  store i32 %call, i32* %i2c_stat, align 4, !dbg !5276
  %4 = load i32, i32* %i2c_stat, align 4, !dbg !5277
  %cmp = icmp slt i32 %4, 0, !dbg !5279
  br i1 %cmp, label %if.then, label %if.end, !dbg !5280

if.then:                                          ; preds = %entry
  br label %err, !dbg !5281

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %enable.addr, align 4, !dbg !5282
  %tobool = icmp ne i32 %5, 0, !dbg !5282
  br i1 %tobool, label %if.then1, label %if.else39, !dbg !5284

if.then1:                                         ; preds = %if.end
  br label %do.body, !dbg !5285

do.body:                                          ; preds = %if.then1
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5287
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %6, i32 0, i32 3, !dbg !5287
  %7 = load i32*, i32** %verbose, align 8, !dbg !5287
  %8 = load i32, i32* %7, align 4, !dbg !5287
  %cmp2 = icmp ugt i32 %8, 0, !dbg !5287
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !5287

land.lhs.true:                                    ; preds = %do.body
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5287
  %verbose3 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %9, i32 0, i32 3, !dbg !5287
  %10 = load i32*, i32** %verbose3, align 8, !dbg !5287
  %11 = load i32, i32* %10, align 4, !dbg !5287
  %cmp4 = icmp ugt i32 %11, 3, !dbg !5287
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !5292

if.then5:                                         ; preds = %land.lhs.true
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5287
  br label %if.end33, !dbg !5287

if.else:                                          ; preds = %land.lhs.true, %do.body
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5293
  %verbose7 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %12, i32 0, i32 3, !dbg !5293
  %13 = load i32*, i32** %verbose7, align 8, !dbg !5293
  %14 = load i32, i32* %13, align 4, !dbg !5293
  %cmp8 = icmp ugt i32 %14, 1, !dbg !5293
  br i1 %cmp8, label %land.lhs.true9, label %if.else14, !dbg !5293

land.lhs.true9:                                   ; preds = %if.else
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5293
  %verbose10 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %15, i32 0, i32 3, !dbg !5293
  %16 = load i32*, i32** %verbose10, align 8, !dbg !5293
  %17 = load i32, i32* %16, align 4, !dbg !5293
  %cmp11 = icmp ugt i32 %17, 3, !dbg !5293
  br i1 %cmp11, label %if.then12, label %if.else14, !dbg !5287

if.then12:                                        ; preds = %land.lhs.true9
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5293
  br label %if.end32, !dbg !5293

if.else14:                                        ; preds = %land.lhs.true9, %if.else
  %18 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5295
  %verbose15 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %18, i32 0, i32 3, !dbg !5295
  %19 = load i32*, i32** %verbose15, align 8, !dbg !5295
  %20 = load i32, i32* %19, align 4, !dbg !5295
  %cmp16 = icmp ugt i32 %20, 2, !dbg !5295
  br i1 %cmp16, label %land.lhs.true17, label %if.else22, !dbg !5295

land.lhs.true17:                                  ; preds = %if.else14
  %21 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5295
  %verbose18 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %21, i32 0, i32 3, !dbg !5295
  %22 = load i32*, i32** %verbose18, align 8, !dbg !5295
  %23 = load i32, i32* %22, align 4, !dbg !5295
  %cmp19 = icmp ugt i32 %23, 3, !dbg !5295
  br i1 %cmp19, label %if.then20, label %if.else22, !dbg !5293

if.then20:                                        ; preds = %land.lhs.true17
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5295
  br label %if.end31, !dbg !5295

if.else22:                                        ; preds = %land.lhs.true17, %if.else14
  %24 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5297
  %verbose23 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %24, i32 0, i32 3, !dbg !5297
  %25 = load i32*, i32** %verbose23, align 8, !dbg !5297
  %26 = load i32, i32* %25, align 4, !dbg !5297
  %cmp24 = icmp ugt i32 %26, 3, !dbg !5297
  br i1 %cmp24, label %land.lhs.true25, label %if.end30, !dbg !5297

land.lhs.true25:                                  ; preds = %if.else22
  %27 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5297
  %verbose26 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %27, i32 0, i32 3, !dbg !5297
  %28 = load i32*, i32** %verbose26, align 8, !dbg !5297
  %29 = load i32, i32* %28, align 4, !dbg !5297
  %cmp27 = icmp ugt i32 %29, 3, !dbg !5297
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !5295

if.then28:                                        ; preds = %land.lhs.true25
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5297
  br label %if.end30, !dbg !5297

if.end30:                                         ; preds = %if.then28, %land.lhs.true25, %if.else22
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then20
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then12
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then5
  br label %do.end, !dbg !5299

do.end:                                           ; preds = %if.end33
  %30 = load i32, i32* %i2c_stat, align 4, !dbg !5300
  %or = or i32 %30, 128, !dbg !5300
  store i32 %or, i32* %i2c_stat, align 4, !dbg !5300
  %31 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5301
  %32 = load i32, i32* %i2c_stat, align 4, !dbg !5303
  %conv = trunc i32 %32 to i8, !dbg !5303
  %call34 = call i32 @stb0899_write_reg(%struct.stb0899_state* %31, i32 61738, i8 zeroext %conv) #8, !dbg !5304
  %cmp35 = icmp slt i32 %call34, 0, !dbg !5305
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !5306

if.then37:                                        ; preds = %do.end
  br label %err, !dbg !5307

if.end38:                                         ; preds = %do.end
  br label %if.end91, !dbg !5308

if.else39:                                        ; preds = %if.end
  br label %do.body40, !dbg !5309

do.body40:                                        ; preds = %if.else39
  %33 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5311
  %verbose41 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %33, i32 0, i32 3, !dbg !5311
  %34 = load i32*, i32** %verbose41, align 8, !dbg !5311
  %35 = load i32, i32* %34, align 4, !dbg !5311
  %cmp42 = icmp ugt i32 %35, 0, !dbg !5311
  br i1 %cmp42, label %land.lhs.true44, label %if.else50, !dbg !5311

land.lhs.true44:                                  ; preds = %do.body40
  %36 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5311
  %verbose45 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %36, i32 0, i32 3, !dbg !5311
  %37 = load i32*, i32** %verbose45, align 8, !dbg !5311
  %38 = load i32, i32* %37, align 4, !dbg !5311
  %cmp46 = icmp ugt i32 %38, 3, !dbg !5311
  br i1 %cmp46, label %if.then48, label %if.else50, !dbg !5316

if.then48:                                        ; preds = %land.lhs.true44
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5311
  br label %if.end83, !dbg !5311

if.else50:                                        ; preds = %land.lhs.true44, %do.body40
  %39 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5317
  %verbose51 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %39, i32 0, i32 3, !dbg !5317
  %40 = load i32*, i32** %verbose51, align 8, !dbg !5317
  %41 = load i32, i32* %40, align 4, !dbg !5317
  %cmp52 = icmp ugt i32 %41, 1, !dbg !5317
  br i1 %cmp52, label %land.lhs.true54, label %if.else60, !dbg !5317

land.lhs.true54:                                  ; preds = %if.else50
  %42 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5317
  %verbose55 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %42, i32 0, i32 3, !dbg !5317
  %43 = load i32*, i32** %verbose55, align 8, !dbg !5317
  %44 = load i32, i32* %43, align 4, !dbg !5317
  %cmp56 = icmp ugt i32 %44, 3, !dbg !5317
  br i1 %cmp56, label %if.then58, label %if.else60, !dbg !5311

if.then58:                                        ; preds = %land.lhs.true54
  %call59 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5317
  br label %if.end82, !dbg !5317

if.else60:                                        ; preds = %land.lhs.true54, %if.else50
  %45 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5319
  %verbose61 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %45, i32 0, i32 3, !dbg !5319
  %46 = load i32*, i32** %verbose61, align 8, !dbg !5319
  %47 = load i32, i32* %46, align 4, !dbg !5319
  %cmp62 = icmp ugt i32 %47, 2, !dbg !5319
  br i1 %cmp62, label %land.lhs.true64, label %if.else70, !dbg !5319

land.lhs.true64:                                  ; preds = %if.else60
  %48 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5319
  %verbose65 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %48, i32 0, i32 3, !dbg !5319
  %49 = load i32*, i32** %verbose65, align 8, !dbg !5319
  %50 = load i32, i32* %49, align 4, !dbg !5319
  %cmp66 = icmp ugt i32 %50, 3, !dbg !5319
  br i1 %cmp66, label %if.then68, label %if.else70, !dbg !5317

if.then68:                                        ; preds = %land.lhs.true64
  %call69 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5319
  br label %if.end81, !dbg !5319

if.else70:                                        ; preds = %land.lhs.true64, %if.else60
  %51 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5321
  %verbose71 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %51, i32 0, i32 3, !dbg !5321
  %52 = load i32*, i32** %verbose71, align 8, !dbg !5321
  %53 = load i32, i32* %52, align 4, !dbg !5321
  %cmp72 = icmp ugt i32 %53, 3, !dbg !5321
  br i1 %cmp72, label %land.lhs.true74, label %if.end80, !dbg !5321

land.lhs.true74:                                  ; preds = %if.else70
  %54 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5321
  %verbose75 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %54, i32 0, i32 3, !dbg !5321
  %55 = load i32*, i32** %verbose75, align 8, !dbg !5321
  %56 = load i32, i32* %55, align 4, !dbg !5321
  %cmp76 = icmp ugt i32 %56, 3, !dbg !5321
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !5319

if.then78:                                        ; preds = %land.lhs.true74
  %call79 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5321
  br label %if.end80, !dbg !5321

if.end80:                                         ; preds = %if.then78, %land.lhs.true74, %if.else70
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then68
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then58
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then48
  br label %do.end84, !dbg !5323

do.end84:                                         ; preds = %if.end83
  %57 = load i32, i32* %i2c_stat, align 4, !dbg !5324
  %and = and i32 %57, -129, !dbg !5324
  store i32 %and, i32* %i2c_stat, align 4, !dbg !5324
  %58 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5325
  %59 = load i32, i32* %i2c_stat, align 4, !dbg !5327
  %conv85 = trunc i32 %59 to i8, !dbg !5327
  %call86 = call i32 @stb0899_write_reg(%struct.stb0899_state* %58, i32 61738, i8 zeroext %conv85) #8, !dbg !5328
  %cmp87 = icmp slt i32 %call86, 0, !dbg !5329
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !5330

if.then89:                                        ; preds = %do.end84
  br label %err, !dbg !5331

if.end90:                                         ; preds = %do.end84
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end38
  store i32 0, i32* %retval, align 4, !dbg !5332
  br label %return, !dbg !5332

err:                                              ; preds = %if.then89, %if.then37, %if.then
  call void @llvm.dbg.label(metadata !5333), !dbg !5334
  br label %do.body92, !dbg !5335

do.body92:                                        ; preds = %err
  %60 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5336
  %verbose93 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %60, i32 0, i32 3, !dbg !5336
  %61 = load i32*, i32** %verbose93, align 8, !dbg !5336
  %62 = load i32, i32* %61, align 4, !dbg !5336
  %cmp94 = icmp ugt i32 %62, 0, !dbg !5336
  br i1 %cmp94, label %land.lhs.true96, label %if.else102, !dbg !5336

land.lhs.true96:                                  ; preds = %do.body92
  %63 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5336
  %verbose97 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %63, i32 0, i32 3, !dbg !5336
  %64 = load i32*, i32** %verbose97, align 8, !dbg !5336
  %65 = load i32, i32* %64, align 4, !dbg !5336
  %cmp98 = icmp ugt i32 %65, 0, !dbg !5336
  br i1 %cmp98, label %if.then100, label %if.else102, !dbg !5341

if.then100:                                       ; preds = %land.lhs.true96
  %call101 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5336
  br label %if.end135, !dbg !5336

if.else102:                                       ; preds = %land.lhs.true96, %do.body92
  %66 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5342
  %verbose103 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %66, i32 0, i32 3, !dbg !5342
  %67 = load i32*, i32** %verbose103, align 8, !dbg !5342
  %68 = load i32, i32* %67, align 4, !dbg !5342
  %cmp104 = icmp ugt i32 %68, 1, !dbg !5342
  br i1 %cmp104, label %land.lhs.true106, label %if.else112, !dbg !5342

land.lhs.true106:                                 ; preds = %if.else102
  %69 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5342
  %verbose107 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %69, i32 0, i32 3, !dbg !5342
  %70 = load i32*, i32** %verbose107, align 8, !dbg !5342
  %71 = load i32, i32* %70, align 4, !dbg !5342
  %cmp108 = icmp ugt i32 %71, 0, !dbg !5342
  br i1 %cmp108, label %if.then110, label %if.else112, !dbg !5336

if.then110:                                       ; preds = %land.lhs.true106
  %call111 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5342
  br label %if.end134, !dbg !5342

if.else112:                                       ; preds = %land.lhs.true106, %if.else102
  %72 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5344
  %verbose113 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %72, i32 0, i32 3, !dbg !5344
  %73 = load i32*, i32** %verbose113, align 8, !dbg !5344
  %74 = load i32, i32* %73, align 4, !dbg !5344
  %cmp114 = icmp ugt i32 %74, 2, !dbg !5344
  br i1 %cmp114, label %land.lhs.true116, label %if.else122, !dbg !5344

land.lhs.true116:                                 ; preds = %if.else112
  %75 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5344
  %verbose117 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %75, i32 0, i32 3, !dbg !5344
  %76 = load i32*, i32** %verbose117, align 8, !dbg !5344
  %77 = load i32, i32* %76, align 4, !dbg !5344
  %cmp118 = icmp ugt i32 %77, 0, !dbg !5344
  br i1 %cmp118, label %if.then120, label %if.else122, !dbg !5342

if.then120:                                       ; preds = %land.lhs.true116
  %call121 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5344
  br label %if.end133, !dbg !5344

if.else122:                                       ; preds = %land.lhs.true116, %if.else112
  %78 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5346
  %verbose123 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %78, i32 0, i32 3, !dbg !5346
  %79 = load i32*, i32** %verbose123, align 8, !dbg !5346
  %80 = load i32, i32* %79, align 4, !dbg !5346
  %cmp124 = icmp ugt i32 %80, 3, !dbg !5346
  br i1 %cmp124, label %land.lhs.true126, label %if.end132, !dbg !5346

land.lhs.true126:                                 ; preds = %if.else122
  %81 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5346
  %verbose127 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %81, i32 0, i32 3, !dbg !5346
  %82 = load i32*, i32** %verbose127, align 8, !dbg !5346
  %83 = load i32, i32* %82, align 4, !dbg !5346
  %cmp128 = icmp ugt i32 %83, 0, !dbg !5346
  br i1 %cmp128, label %if.then130, label %if.end132, !dbg !5344

if.then130:                                       ; preds = %land.lhs.true126
  %call131 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stb0899_i2c_gate_ctrl, i64 0, i64 0)) #9, !dbg !5346
  br label %if.end132, !dbg !5346

if.end132:                                        ; preds = %if.then130, %land.lhs.true126, %if.else122
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then120
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.then110
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then100
  br label %do.end136, !dbg !5348

do.end136:                                        ; preds = %if.end135
  store i32 -121, i32* %retval, align 4, !dbg !5349
  br label %return, !dbg !5349

return:                                           ; preds = %do.end136, %if.end91
  %84 = load i32, i32* %retval, align 4, !dbg !5350
  ret i32 %84, !dbg !5350
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dvb_frontend* @stb0899_attach(%struct.stb0899_config* %config, %struct.i2c_adapter* %i2c) #0 !dbg !5351 {
entry:
  %retval = alloca %struct.dvb_frontend*, align 8
  %config.addr = alloca %struct.stb0899_config*, align 8
  %i2c.addr = alloca %struct.i2c_adapter*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  store %struct.stb0899_config* %config, %struct.stb0899_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_config** %config.addr, metadata !5354, metadata !DIExpression()), !dbg !5355
  store %struct.i2c_adapter* %i2c, %struct.i2c_adapter** %i2c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c.addr, metadata !5356, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !5358, metadata !DIExpression()), !dbg !5359
  store %struct.stb0899_state* null, %struct.stb0899_state** %state, align 8, !dbg !5359
  %call = call i8* @kzalloc(i64 1464, i32 3264) #8, !dbg !5360
  %0 = bitcast i8* %call to %struct.stb0899_state*, !dbg !5360
  store %struct.stb0899_state* %0, %struct.stb0899_state** %state, align 8, !dbg !5361
  %1 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5362
  %cmp = icmp eq %struct.stb0899_state* %1, null, !dbg !5364
  br i1 %cmp, label %if.then, label %if.end, !dbg !5365

if.then:                                          ; preds = %entry
  br label %error, !dbg !5366

if.end:                                           ; preds = %entry
  %2 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5367
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %2, i32 0, i32 3, !dbg !5368
  store i32* @verbose, i32** %verbose, align 8, !dbg !5369
  %3 = load %struct.stb0899_config*, %struct.stb0899_config** %config.addr, align 8, !dbg !5370
  %4 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5371
  %config1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %4, i32 0, i32 1, !dbg !5372
  store %struct.stb0899_config* %3, %struct.stb0899_config** %config1, align 8, !dbg !5373
  %5 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c.addr, align 8, !dbg !5374
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5375
  %i2c2 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %6, i32 0, i32 0, !dbg !5376
  store %struct.i2c_adapter* %5, %struct.i2c_adapter** %i2c2, align 8, !dbg !5377
  %7 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5378
  %frontend = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %7, i32 0, i32 2, !dbg !5379
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend, i32 0, i32 1, !dbg !5380
  %8 = bitcast %struct.dvb_frontend_ops* %ops to i8*, !dbg !5381
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @stb0899_ops, i32 0, i32 0, i32 0, i32 0), i64 752, i1 false), !dbg !5381
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5382
  %10 = bitcast %struct.stb0899_state* %9 to i8*, !dbg !5382
  %11 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5383
  %frontend3 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %11, i32 0, i32 2, !dbg !5384
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend3, i32 0, i32 3, !dbg !5385
  store i8* %10, i8** %demodulator_priv, align 8, !dbg !5386
  %12 = load %struct.stb0899_config*, %struct.stb0899_config** %config.addr, align 8, !dbg !5387
  %inversion = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %12, i32 0, i32 6, !dbg !5388
  %13 = load i32, i32* %inversion, align 8, !dbg !5388
  %14 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5389
  %internal = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %14, i32 0, i32 4, !dbg !5390
  %inversion4 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %internal, i32 0, i32 28, !dbg !5391
  store i32 %13, i32* %inversion4, align 8, !dbg !5392
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5393
  %frontend5 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %15, i32 0, i32 2, !dbg !5394
  %call6 = call i32 @stb0899_wakeup(%struct.dvb_frontend* %frontend5) #8, !dbg !5395
  %16 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5396
  %call7 = call i32 @stb0899_get_dev_id(%struct.stb0899_state* %16) #8, !dbg !5398
  %cmp8 = icmp eq i32 %call7, -19, !dbg !5399
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !5400

if.then9:                                         ; preds = %if.end
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_attach, i64 0, i64 0)) #9, !dbg !5401
  br label %error, !dbg !5403

if.end11:                                         ; preds = %if.end
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_attach, i64 0, i64 0)) #9, !dbg !5404
  %17 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5405
  %frontend13 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %17, i32 0, i32 2, !dbg !5406
  store %struct.dvb_frontend* %frontend13, %struct.dvb_frontend** %retval, align 8, !dbg !5407
  br label %return, !dbg !5407

error:                                            ; preds = %if.then9, %if.then
  call void @llvm.dbg.label(metadata !5408), !dbg !5409
  %18 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5410
  %19 = bitcast %struct.stb0899_state* %18 to i8*, !dbg !5410
  call void @kfree(i8* %19) #8, !dbg !5411
  store %struct.dvb_frontend* null, %struct.dvb_frontend** %retval, align 8, !dbg !5412
  br label %return, !dbg !5412

return:                                           ; preds = %error, %if.end11
  %20 = load %struct.dvb_frontend*, %struct.dvb_frontend** %retval, align 8, !dbg !5413
  ret %struct.dvb_frontend* %20, !dbg !5413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !5414 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5417, metadata !DIExpression()), !dbg !5421
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5427, metadata !DIExpression()), !dbg !5428
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5429, metadata !DIExpression()), !dbg !5430
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5431, metadata !DIExpression()), !dbg !5432
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5433, metadata !DIExpression()), !dbg !5437
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5439, metadata !DIExpression()), !dbg !5443
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5445, metadata !DIExpression()), !dbg !5449
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5454, metadata !DIExpression()), !dbg !5455
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5456, metadata !DIExpression()), !dbg !5457
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5458, metadata !DIExpression()), !dbg !5459
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5460, metadata !DIExpression()), !dbg !5461
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5462, metadata !DIExpression()), !dbg !5463
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5464, metadata !DIExpression()), !dbg !5465
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5466, metadata !DIExpression()), !dbg !5467
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5468, metadata !DIExpression()), !dbg !5469
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5470, metadata !DIExpression()), !dbg !5471
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5472, metadata !DIExpression()), !dbg !5473
  %0 = load i64, i64* %size.addr, align 8, !dbg !5474
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5475
  %or = or i32 %1, 256, !dbg !5476
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5477
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !5478
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5479

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5480
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5481
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5482

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5483
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5484
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5485
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !5486
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5463
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5487
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5488
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5489
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5490
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5491
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5492
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !5493
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5493
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5493
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5493
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5493
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5494
  br label %kmalloc.exit, !dbg !5494

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5495
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5496
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5496
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5498

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5499
  br label %kmalloc_index.exit.i, !dbg !5499

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5500
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5502
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5503

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5504
  br label %kmalloc_index.exit.i, !dbg !5504

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5505
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5507
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5508

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5509
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5510
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5511

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5512
  br label %kmalloc_index.exit.i, !dbg !5512

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5513
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5515
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5516

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5517
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5518
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5519

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5520
  br label %kmalloc_index.exit.i, !dbg !5520

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5521
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5523
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5524

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5525
  br label %kmalloc_index.exit.i, !dbg !5525

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5526
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5528
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5529

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5530
  br label %kmalloc_index.exit.i, !dbg !5530

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5531
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5533
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5534

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5535
  br label %kmalloc_index.exit.i, !dbg !5535

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5536
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5538
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5539

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5540
  br label %kmalloc_index.exit.i, !dbg !5540

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5541
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5543
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5544

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5545
  br label %kmalloc_index.exit.i, !dbg !5545

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5546
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5548
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5549

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5550
  br label %kmalloc_index.exit.i, !dbg !5550

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5551
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5553
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5554

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5555
  br label %kmalloc_index.exit.i, !dbg !5555

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5556
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5558
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5559

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5560
  br label %kmalloc_index.exit.i, !dbg !5560

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5561
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5563
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5564

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5565
  br label %kmalloc_index.exit.i, !dbg !5565

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5566
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5568
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5569

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5570
  br label %kmalloc_index.exit.i, !dbg !5570

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5571
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5573
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5574

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5575
  br label %kmalloc_index.exit.i, !dbg !5575

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5576
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5578
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5579

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5580
  br label %kmalloc_index.exit.i, !dbg !5580

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5581
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5583
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5584

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5585
  br label %kmalloc_index.exit.i, !dbg !5585

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5586
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5588
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5589

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5590
  br label %kmalloc_index.exit.i, !dbg !5590

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5591
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5593
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5594

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5595
  br label %kmalloc_index.exit.i, !dbg !5595

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5596
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5598
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5599

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5600
  br label %kmalloc_index.exit.i, !dbg !5600

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5601
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5603
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5604

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5605
  br label %kmalloc_index.exit.i, !dbg !5605

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5606
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5608
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5609

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5610
  br label %kmalloc_index.exit.i, !dbg !5610

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5611
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5613
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5614

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5615
  br label %kmalloc_index.exit.i, !dbg !5615

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5616
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5618
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5619

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5620
  br label %kmalloc_index.exit.i, !dbg !5620

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5621
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5623
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5624

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5625
  br label %kmalloc_index.exit.i, !dbg !5625

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5626
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5628
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5629

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5630
  br label %kmalloc_index.exit.i, !dbg !5630

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5631
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5633
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5634

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5635
  br label %kmalloc_index.exit.i, !dbg !5635

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5636
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5638
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5639

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5640
  br label %kmalloc_index.exit.i, !dbg !5640

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !5641, !srcloc !5644
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !5645, !srcloc !5648
  unreachable, !dbg !5649

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5650
  store i32 %45, i32* %index.i, align 4, !dbg !5651
  %46 = load i32, i32* %index.i, align 4, !dbg !5652
  %tobool.i = icmp ne i32 %46, 0, !dbg !5652
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5654

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5655
  br label %kmalloc.exit, !dbg !5655

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5656
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5657
  %and.i.i = and i32 %48, 17, !dbg !5657
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5657
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5657
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5657
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5657
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5659

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5660
  br label %kmalloc_type.exit.i, !dbg !5660

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5661
  %and2.i.i = and i32 %49, 1, !dbg !5662
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5661
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5661
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5661
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5663
  br label %kmalloc_type.exit.i, !dbg !5663

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5664
  %idxprom.i = zext i32 %51 to i64, !dbg !5665
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5665
  %52 = load i32, i32* %index.i, align 4, !dbg !5666
  %idxprom6.i = zext i32 %52 to i64, !dbg !5665
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5665
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5665
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5667
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5668
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5669
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5670
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !5671
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5671
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5671
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5671
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !5671
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5432
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5672
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5673
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5674
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5675
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !5676
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5677
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5678
  store i8* %62, i8** %retval.i, align 8, !dbg !5679
  br label %kmalloc.exit, !dbg !5679

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5680
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5681
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !5682
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5682
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5682
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5682
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !5682
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5683
  br label %kmalloc.exit, !dbg !5683

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5684
  ret i8* %65, !dbg !5685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_wakeup(%struct.dvb_frontend* %fe) #0 !dbg !5686 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %rc = alloca i32, align 4
  %state = alloca %struct.stb0899_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5687, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5689, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !5691, metadata !DIExpression()), !dbg !5692
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5693
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5694
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5694
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !5693
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !5692
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5695
  %call = call i32 @stb0899_write_reg(%struct.stb0899_state* %3, i32 61878, i8 zeroext 2) #8, !dbg !5697
  store i32 %call, i32* %rc, align 4, !dbg !5698
  %tobool = icmp ne i32 %call, 0, !dbg !5698
  br i1 %tobool, label %if.then, label %if.end, !dbg !5699

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %rc, align 4, !dbg !5700
  store i32 %4, i32* %retval, align 4, !dbg !5701
  br label %return, !dbg !5701

if.end:                                           ; preds = %entry
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5702
  %call1 = call i32 @stb0899_write_reg(%struct.stb0899_state* %5, i32 61890, i8 zeroext 0) #8, !dbg !5704
  store i32 %call1, i32* %rc, align 4, !dbg !5705
  %tobool2 = icmp ne i32 %call1, 0, !dbg !5705
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5706

if.then3:                                         ; preds = %if.end
  %6 = load i32, i32* %rc, align 4, !dbg !5707
  store i32 %6, i32* %retval, align 4, !dbg !5708
  br label %return, !dbg !5708

if.end4:                                          ; preds = %if.end
  %7 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5709
  %call5 = call i32 @stb0899_write_reg(%struct.stb0899_state* %7, i32 61891, i8 zeroext 0) #8, !dbg !5711
  store i32 %call5, i32* %rc, align 4, !dbg !5712
  %tobool6 = icmp ne i32 %call5, 0, !dbg !5712
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !5713

if.then7:                                         ; preds = %if.end4
  %8 = load i32, i32* %rc, align 4, !dbg !5714
  store i32 %8, i32* %retval, align 4, !dbg !5715
  br label %return, !dbg !5715

if.end8:                                          ; preds = %if.end4
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5716
  %call9 = call i32 @stb0899_postproc(%struct.stb0899_state* %9, i8 zeroext 0, i32 1) #8, !dbg !5717
  store i32 0, i32* %retval, align 4, !dbg !5718
  br label %return, !dbg !5718

return:                                           ; preds = %if.end8, %if.then7, %if.then3, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !5719
  ret i32 %10, !dbg !5719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_get_dev_id(%struct.stb0899_state* %state) #0 !dbg !5720 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stb0899_state*, align 8
  %chip_id = alloca i8, align 1
  %release = alloca i8, align 1
  %id = alloca i16, align 2
  %demod_ver = alloca i32, align 4
  %fec_ver = alloca i32, align 4
  %demod_str = alloca [5 x i8], align 1
  %fec_str = alloca [5 x i8], align 1
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !5723, metadata !DIExpression()), !dbg !5724
  call void @llvm.dbg.declare(metadata i8* %chip_id, metadata !5725, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.declare(metadata i8* %release, metadata !5727, metadata !DIExpression()), !dbg !5728
  call void @llvm.dbg.declare(metadata i16* %id, metadata !5729, metadata !DIExpression()), !dbg !5730
  call void @llvm.dbg.declare(metadata i32* %demod_ver, metadata !5731, metadata !DIExpression()), !dbg !5732
  store i32 0, i32* %demod_ver, align 4, !dbg !5732
  call void @llvm.dbg.declare(metadata i32* %fec_ver, metadata !5733, metadata !DIExpression()), !dbg !5734
  store i32 0, i32* %fec_ver, align 4, !dbg !5734
  call void @llvm.dbg.declare(metadata [5 x i8]* %demod_str, metadata !5735, metadata !DIExpression()), !dbg !5739
  %0 = bitcast [5 x i8]* %demod_str to i8*, !dbg !5739
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 5, i1 false), !dbg !5739
  call void @llvm.dbg.declare(metadata [5 x i8]* %fec_str, metadata !5740, metadata !DIExpression()), !dbg !5741
  %1 = bitcast [5 x i8]* %fec_str to i8*, !dbg !5741
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 5, i1 false), !dbg !5741
  %2 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5742
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %2, i32 61440) #8, !dbg !5743
  %conv = trunc i32 %call to i16, !dbg !5743
  store i16 %conv, i16* %id, align 2, !dbg !5744
  br label %do.body, !dbg !5745

do.body:                                          ; preds = %entry
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5746
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %3, i32 0, i32 3, !dbg !5746
  %4 = load i32*, i32** %verbose, align 8, !dbg !5746
  %5 = load i32, i32* %4, align 4, !dbg !5746
  %cmp = icmp ugt i32 %5, 0, !dbg !5746
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5746

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5746
  %verbose2 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %6, i32 0, i32 3, !dbg !5746
  %7 = load i32*, i32** %verbose2, align 8, !dbg !5746
  %8 = load i32, i32* %7, align 4, !dbg !5746
  %cmp3 = icmp ugt i32 %8, 3, !dbg !5746
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5751

if.then:                                          ; preds = %land.lhs.true
  %9 = load i16, i16* %id, align 2, !dbg !5746
  %conv5 = zext i16 %9 to i32, !dbg !5746
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.189, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i32 %conv5) #9, !dbg !5746
  br label %if.end41, !dbg !5746

if.else:                                          ; preds = %land.lhs.true, %do.body
  %10 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5752
  %verbose7 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %10, i32 0, i32 3, !dbg !5752
  %11 = load i32*, i32** %verbose7, align 8, !dbg !5752
  %12 = load i32, i32* %11, align 4, !dbg !5752
  %cmp8 = icmp ugt i32 %12, 1, !dbg !5752
  br i1 %cmp8, label %land.lhs.true10, label %if.else17, !dbg !5752

land.lhs.true10:                                  ; preds = %if.else
  %13 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5752
  %verbose11 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %13, i32 0, i32 3, !dbg !5752
  %14 = load i32*, i32** %verbose11, align 8, !dbg !5752
  %15 = load i32, i32* %14, align 4, !dbg !5752
  %cmp12 = icmp ugt i32 %15, 3, !dbg !5752
  br i1 %cmp12, label %if.then14, label %if.else17, !dbg !5746

if.then14:                                        ; preds = %land.lhs.true10
  %16 = load i16, i16* %id, align 2, !dbg !5752
  %conv15 = zext i16 %16 to i32, !dbg !5752
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.190, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i32 %conv15) #9, !dbg !5752
  br label %if.end40, !dbg !5752

if.else17:                                        ; preds = %land.lhs.true10, %if.else
  %17 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5754
  %verbose18 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %17, i32 0, i32 3, !dbg !5754
  %18 = load i32*, i32** %verbose18, align 8, !dbg !5754
  %19 = load i32, i32* %18, align 4, !dbg !5754
  %cmp19 = icmp ugt i32 %19, 2, !dbg !5754
  br i1 %cmp19, label %land.lhs.true21, label %if.else28, !dbg !5754

land.lhs.true21:                                  ; preds = %if.else17
  %20 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5754
  %verbose22 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %20, i32 0, i32 3, !dbg !5754
  %21 = load i32*, i32** %verbose22, align 8, !dbg !5754
  %22 = load i32, i32* %21, align 4, !dbg !5754
  %cmp23 = icmp ugt i32 %22, 3, !dbg !5754
  br i1 %cmp23, label %if.then25, label %if.else28, !dbg !5752

if.then25:                                        ; preds = %land.lhs.true21
  %23 = load i16, i16* %id, align 2, !dbg !5754
  %conv26 = zext i16 %23 to i32, !dbg !5754
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.191, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i32 %conv26) #9, !dbg !5754
  br label %if.end39, !dbg !5754

if.else28:                                        ; preds = %land.lhs.true21, %if.else17
  %24 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5756
  %verbose29 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %24, i32 0, i32 3, !dbg !5756
  %25 = load i32*, i32** %verbose29, align 8, !dbg !5756
  %26 = load i32, i32* %25, align 4, !dbg !5756
  %cmp30 = icmp ugt i32 %26, 3, !dbg !5756
  br i1 %cmp30, label %land.lhs.true32, label %if.end, !dbg !5756

land.lhs.true32:                                  ; preds = %if.else28
  %27 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5756
  %verbose33 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %27, i32 0, i32 3, !dbg !5756
  %28 = load i32*, i32** %verbose33, align 8, !dbg !5756
  %29 = load i32, i32* %28, align 4, !dbg !5756
  %cmp34 = icmp ugt i32 %29, 3, !dbg !5756
  br i1 %cmp34, label %if.then36, label %if.end, !dbg !5754

if.then36:                                        ; preds = %land.lhs.true32
  %30 = load i16, i16* %id, align 2, !dbg !5756
  %conv37 = zext i16 %30 to i32, !dbg !5756
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.192, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i32 %conv37) #9, !dbg !5756
  br label %if.end, !dbg !5756

if.end:                                           ; preds = %if.then36, %land.lhs.true32, %if.else28
  br label %if.end39

if.end39:                                         ; preds = %if.end, %if.then25
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then14
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then
  br label %do.end, !dbg !5758

do.end:                                           ; preds = %if.end41
  %31 = load i16, i16* %id, align 2, !dbg !5759
  %conv42 = zext i16 %31 to i32, !dbg !5759
  %shr = ashr i32 %conv42, 4, !dbg !5759
  %and = and i32 %shr, 15, !dbg !5759
  %conv43 = trunc i32 %and to i8, !dbg !5759
  store i8 %conv43, i8* %chip_id, align 1, !dbg !5760
  %32 = load i16, i16* %id, align 2, !dbg !5761
  %conv44 = zext i16 %32 to i32, !dbg !5761
  %shr45 = ashr i32 %conv44, 0, !dbg !5761
  %and46 = and i32 %shr45, 15, !dbg !5761
  %conv47 = trunc i32 %and46 to i8, !dbg !5761
  store i8 %conv47, i8* %release, align 1, !dbg !5762
  br label %do.body48, !dbg !5763

do.body48:                                        ; preds = %do.end
  %33 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5764
  %verbose49 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %33, i32 0, i32 3, !dbg !5764
  %34 = load i32*, i32** %verbose49, align 8, !dbg !5764
  %35 = load i32, i32* %34, align 4, !dbg !5764
  %cmp50 = icmp ugt i32 %35, 0, !dbg !5764
  br i1 %cmp50, label %land.lhs.true52, label %if.else60, !dbg !5764

land.lhs.true52:                                  ; preds = %do.body48
  %36 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5764
  %verbose53 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %36, i32 0, i32 3, !dbg !5764
  %37 = load i32*, i32** %verbose53, align 8, !dbg !5764
  %38 = load i32, i32* %37, align 4, !dbg !5764
  %cmp54 = icmp ugt i32 %38, 0, !dbg !5764
  br i1 %cmp54, label %if.then56, label %if.else60, !dbg !5769

if.then56:                                        ; preds = %land.lhs.true52
  %39 = load i8, i8* %chip_id, align 1, !dbg !5764
  %conv57 = zext i8 %39 to i32, !dbg !5764
  %40 = load i8, i8* %release, align 1, !dbg !5764
  %conv58 = zext i8 %40 to i32, !dbg !5764
  %call59 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.193, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i32 %conv57, i32 %conv58) #9, !dbg !5764
  br label %if.end99, !dbg !5764

if.else60:                                        ; preds = %land.lhs.true52, %do.body48
  %41 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5770
  %verbose61 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %41, i32 0, i32 3, !dbg !5770
  %42 = load i32*, i32** %verbose61, align 8, !dbg !5770
  %43 = load i32, i32* %42, align 4, !dbg !5770
  %cmp62 = icmp ugt i32 %43, 1, !dbg !5770
  br i1 %cmp62, label %land.lhs.true64, label %if.else72, !dbg !5770

land.lhs.true64:                                  ; preds = %if.else60
  %44 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5770
  %verbose65 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %44, i32 0, i32 3, !dbg !5770
  %45 = load i32*, i32** %verbose65, align 8, !dbg !5770
  %46 = load i32, i32* %45, align 4, !dbg !5770
  %cmp66 = icmp ugt i32 %46, 0, !dbg !5770
  br i1 %cmp66, label %if.then68, label %if.else72, !dbg !5764

if.then68:                                        ; preds = %land.lhs.true64
  %47 = load i8, i8* %chip_id, align 1, !dbg !5770
  %conv69 = zext i8 %47 to i32, !dbg !5770
  %48 = load i8, i8* %release, align 1, !dbg !5770
  %conv70 = zext i8 %48 to i32, !dbg !5770
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.194, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i32 %conv69, i32 %conv70) #9, !dbg !5770
  br label %if.end98, !dbg !5770

if.else72:                                        ; preds = %land.lhs.true64, %if.else60
  %49 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5772
  %verbose73 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %49, i32 0, i32 3, !dbg !5772
  %50 = load i32*, i32** %verbose73, align 8, !dbg !5772
  %51 = load i32, i32* %50, align 4, !dbg !5772
  %cmp74 = icmp ugt i32 %51, 2, !dbg !5772
  br i1 %cmp74, label %land.lhs.true76, label %if.else84, !dbg !5772

land.lhs.true76:                                  ; preds = %if.else72
  %52 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5772
  %verbose77 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %52, i32 0, i32 3, !dbg !5772
  %53 = load i32*, i32** %verbose77, align 8, !dbg !5772
  %54 = load i32, i32* %53, align 4, !dbg !5772
  %cmp78 = icmp ugt i32 %54, 0, !dbg !5772
  br i1 %cmp78, label %if.then80, label %if.else84, !dbg !5770

if.then80:                                        ; preds = %land.lhs.true76
  %55 = load i8, i8* %chip_id, align 1, !dbg !5772
  %conv81 = zext i8 %55 to i32, !dbg !5772
  %56 = load i8, i8* %release, align 1, !dbg !5772
  %conv82 = zext i8 %56 to i32, !dbg !5772
  %call83 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.195, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i32 %conv81, i32 %conv82) #9, !dbg !5772
  br label %if.end97, !dbg !5772

if.else84:                                        ; preds = %land.lhs.true76, %if.else72
  %57 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5774
  %verbose85 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %57, i32 0, i32 3, !dbg !5774
  %58 = load i32*, i32** %verbose85, align 8, !dbg !5774
  %59 = load i32, i32* %58, align 4, !dbg !5774
  %cmp86 = icmp ugt i32 %59, 3, !dbg !5774
  br i1 %cmp86, label %land.lhs.true88, label %if.end96, !dbg !5774

land.lhs.true88:                                  ; preds = %if.else84
  %60 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5774
  %verbose89 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %60, i32 0, i32 3, !dbg !5774
  %61 = load i32*, i32** %verbose89, align 8, !dbg !5774
  %62 = load i32, i32* %61, align 4, !dbg !5774
  %cmp90 = icmp ugt i32 %62, 0, !dbg !5774
  br i1 %cmp90, label %if.then92, label %if.end96, !dbg !5772

if.then92:                                        ; preds = %land.lhs.true88
  %63 = load i8, i8* %chip_id, align 1, !dbg !5774
  %conv93 = zext i8 %63 to i32, !dbg !5774
  %64 = load i8, i8* %release, align 1, !dbg !5774
  %conv94 = zext i8 %64 to i32, !dbg !5774
  %call95 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.196, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i32 %conv93, i32 %conv94) #9, !dbg !5774
  br label %if.end96, !dbg !5774

if.end96:                                         ; preds = %if.then92, %land.lhs.true88, %if.else84
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then80
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then68
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then56
  br label %do.end100, !dbg !5776

do.end100:                                        ; preds = %if.end99
  %65 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5777
  %call101 = call i32 @_stb0899_read_s2reg(%struct.stb0899_state* %65, i32 62460, i32 1024, i16 zeroext -3276) #8, !dbg !5777
  %66 = bitcast [5 x i8]* %demod_str to i8*, !dbg !5778
  call void @CONVERT32(i32 %call101, i8* %66) #8, !dbg !5779
  %67 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5780
  %call102 = call i32 @_stb0899_read_s2reg(%struct.stb0899_state* %67, i32 62460, i32 1024, i16 zeroext -3268) #8, !dbg !5780
  store i32 %call102, i32* %demod_ver, align 4, !dbg !5781
  br label %do.body103, !dbg !5782

do.body103:                                       ; preds = %do.end100
  %68 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5783
  %verbose104 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %68, i32 0, i32 3, !dbg !5783
  %69 = load i32*, i32** %verbose104, align 8, !dbg !5783
  %70 = load i32, i32* %69, align 4, !dbg !5783
  %cmp105 = icmp ugt i32 %70, 0, !dbg !5783
  br i1 %cmp105, label %land.lhs.true107, label %if.else113, !dbg !5783

land.lhs.true107:                                 ; preds = %do.body103
  %71 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5783
  %verbose108 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %71, i32 0, i32 3, !dbg !5783
  %72 = load i32*, i32** %verbose108, align 8, !dbg !5783
  %73 = load i32, i32* %72, align 4, !dbg !5783
  %cmp109 = icmp ugt i32 %73, 0, !dbg !5783
  br i1 %cmp109, label %if.then111, label %if.else113, !dbg !5788

if.then111:                                       ; preds = %land.lhs.true107
  %74 = bitcast [5 x i8]* %demod_str to i8*, !dbg !5783
  %75 = load i32, i32* %demod_ver, align 4, !dbg !5783
  %call112 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.197, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i8* %74, i32 %75) #9, !dbg !5783
  br label %if.end146, !dbg !5783

if.else113:                                       ; preds = %land.lhs.true107, %do.body103
  %76 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5789
  %verbose114 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %76, i32 0, i32 3, !dbg !5789
  %77 = load i32*, i32** %verbose114, align 8, !dbg !5789
  %78 = load i32, i32* %77, align 4, !dbg !5789
  %cmp115 = icmp ugt i32 %78, 1, !dbg !5789
  br i1 %cmp115, label %land.lhs.true117, label %if.else123, !dbg !5789

land.lhs.true117:                                 ; preds = %if.else113
  %79 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5789
  %verbose118 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %79, i32 0, i32 3, !dbg !5789
  %80 = load i32*, i32** %verbose118, align 8, !dbg !5789
  %81 = load i32, i32* %80, align 4, !dbg !5789
  %cmp119 = icmp ugt i32 %81, 0, !dbg !5789
  br i1 %cmp119, label %if.then121, label %if.else123, !dbg !5783

if.then121:                                       ; preds = %land.lhs.true117
  %82 = bitcast [5 x i8]* %demod_str to i8*, !dbg !5789
  %83 = load i32, i32* %demod_ver, align 4, !dbg !5789
  %call122 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.198, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i8* %82, i32 %83) #9, !dbg !5789
  br label %if.end145, !dbg !5789

if.else123:                                       ; preds = %land.lhs.true117, %if.else113
  %84 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5791
  %verbose124 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %84, i32 0, i32 3, !dbg !5791
  %85 = load i32*, i32** %verbose124, align 8, !dbg !5791
  %86 = load i32, i32* %85, align 4, !dbg !5791
  %cmp125 = icmp ugt i32 %86, 2, !dbg !5791
  br i1 %cmp125, label %land.lhs.true127, label %if.else133, !dbg !5791

land.lhs.true127:                                 ; preds = %if.else123
  %87 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5791
  %verbose128 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %87, i32 0, i32 3, !dbg !5791
  %88 = load i32*, i32** %verbose128, align 8, !dbg !5791
  %89 = load i32, i32* %88, align 4, !dbg !5791
  %cmp129 = icmp ugt i32 %89, 0, !dbg !5791
  br i1 %cmp129, label %if.then131, label %if.else133, !dbg !5789

if.then131:                                       ; preds = %land.lhs.true127
  %90 = bitcast [5 x i8]* %demod_str to i8*, !dbg !5791
  %91 = load i32, i32* %demod_ver, align 4, !dbg !5791
  %call132 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.199, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i8* %90, i32 %91) #9, !dbg !5791
  br label %if.end144, !dbg !5791

if.else133:                                       ; preds = %land.lhs.true127, %if.else123
  %92 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5793
  %verbose134 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %92, i32 0, i32 3, !dbg !5793
  %93 = load i32*, i32** %verbose134, align 8, !dbg !5793
  %94 = load i32, i32* %93, align 4, !dbg !5793
  %cmp135 = icmp ugt i32 %94, 3, !dbg !5793
  br i1 %cmp135, label %land.lhs.true137, label %if.end143, !dbg !5793

land.lhs.true137:                                 ; preds = %if.else133
  %95 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5793
  %verbose138 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %95, i32 0, i32 3, !dbg !5793
  %96 = load i32*, i32** %verbose138, align 8, !dbg !5793
  %97 = load i32, i32* %96, align 4, !dbg !5793
  %cmp139 = icmp ugt i32 %97, 0, !dbg !5793
  br i1 %cmp139, label %if.then141, label %if.end143, !dbg !5791

if.then141:                                       ; preds = %land.lhs.true137
  %98 = bitcast [5 x i8]* %demod_str to i8*, !dbg !5793
  %99 = load i32, i32* %demod_ver, align 4, !dbg !5793
  %call142 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.200, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i8* %98, i32 %99) #9, !dbg !5793
  br label %if.end143, !dbg !5793

if.end143:                                        ; preds = %if.then141, %land.lhs.true137, %if.else133
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.then131
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %if.then121
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.then111
  br label %do.end147, !dbg !5795

do.end147:                                        ; preds = %if.end146
  %100 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5796
  %call148 = call i32 @_stb0899_read_s2reg(%struct.stb0899_state* %100, i32 64252, i32 2048, i16 zeroext -1492) #8, !dbg !5796
  %101 = bitcast [5 x i8]* %fec_str to i8*, !dbg !5797
  call void @CONVERT32(i32 %call148, i8* %101) #8, !dbg !5798
  %102 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5799
  %call149 = call i32 @_stb0899_read_s2reg(%struct.stb0899_state* %102, i32 64252, i32 2048, i16 zeroext -1484) #8, !dbg !5799
  store i32 %call149, i32* %fec_ver, align 4, !dbg !5800
  %103 = load i8, i8* %chip_id, align 1, !dbg !5801
  %conv150 = zext i8 %103 to i32, !dbg !5801
  %cmp151 = icmp sgt i32 %conv150, 0, !dbg !5803
  br i1 %cmp151, label %if.end199, label %if.then153, !dbg !5804

if.then153:                                       ; preds = %do.end147
  br label %do.body154, !dbg !5805

do.body154:                                       ; preds = %if.then153
  %104 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5807
  %verbose155 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %104, i32 0, i32 3, !dbg !5807
  %105 = load i32*, i32** %verbose155, align 8, !dbg !5807
  %106 = load i32, i32* %105, align 4, !dbg !5807
  %cmp156 = icmp ugt i32 %106, 0, !dbg !5807
  br i1 %cmp156, label %land.lhs.true158, label %if.else164, !dbg !5807

land.lhs.true158:                                 ; preds = %do.body154
  %107 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5807
  %verbose159 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %107, i32 0, i32 3, !dbg !5807
  %108 = load i32*, i32** %verbose159, align 8, !dbg !5807
  %109 = load i32, i32* %108, align 4, !dbg !5807
  %cmp160 = icmp ugt i32 %109, 0, !dbg !5807
  br i1 %cmp160, label %if.then162, label %if.else164, !dbg !5812

if.then162:                                       ; preds = %land.lhs.true158
  %call163 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.201, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0)) #9, !dbg !5807
  br label %if.end197, !dbg !5807

if.else164:                                       ; preds = %land.lhs.true158, %do.body154
  %110 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5813
  %verbose165 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %110, i32 0, i32 3, !dbg !5813
  %111 = load i32*, i32** %verbose165, align 8, !dbg !5813
  %112 = load i32, i32* %111, align 4, !dbg !5813
  %cmp166 = icmp ugt i32 %112, 1, !dbg !5813
  br i1 %cmp166, label %land.lhs.true168, label %if.else174, !dbg !5813

land.lhs.true168:                                 ; preds = %if.else164
  %113 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5813
  %verbose169 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %113, i32 0, i32 3, !dbg !5813
  %114 = load i32*, i32** %verbose169, align 8, !dbg !5813
  %115 = load i32, i32* %114, align 4, !dbg !5813
  %cmp170 = icmp ugt i32 %115, 0, !dbg !5813
  br i1 %cmp170, label %if.then172, label %if.else174, !dbg !5807

if.then172:                                       ; preds = %land.lhs.true168
  %call173 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.202, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0)) #9, !dbg !5813
  br label %if.end196, !dbg !5813

if.else174:                                       ; preds = %land.lhs.true168, %if.else164
  %116 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5815
  %verbose175 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %116, i32 0, i32 3, !dbg !5815
  %117 = load i32*, i32** %verbose175, align 8, !dbg !5815
  %118 = load i32, i32* %117, align 4, !dbg !5815
  %cmp176 = icmp ugt i32 %118, 2, !dbg !5815
  br i1 %cmp176, label %land.lhs.true178, label %if.else184, !dbg !5815

land.lhs.true178:                                 ; preds = %if.else174
  %119 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5815
  %verbose179 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %119, i32 0, i32 3, !dbg !5815
  %120 = load i32*, i32** %verbose179, align 8, !dbg !5815
  %121 = load i32, i32* %120, align 4, !dbg !5815
  %cmp180 = icmp ugt i32 %121, 0, !dbg !5815
  br i1 %cmp180, label %if.then182, label %if.else184, !dbg !5813

if.then182:                                       ; preds = %land.lhs.true178
  %call183 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.203, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0)) #9, !dbg !5815
  br label %if.end195, !dbg !5815

if.else184:                                       ; preds = %land.lhs.true178, %if.else174
  %122 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5817
  %verbose185 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %122, i32 0, i32 3, !dbg !5817
  %123 = load i32*, i32** %verbose185, align 8, !dbg !5817
  %124 = load i32, i32* %123, align 4, !dbg !5817
  %cmp186 = icmp ugt i32 %124, 3, !dbg !5817
  br i1 %cmp186, label %land.lhs.true188, label %if.end194, !dbg !5817

land.lhs.true188:                                 ; preds = %if.else184
  %125 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5817
  %verbose189 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %125, i32 0, i32 3, !dbg !5817
  %126 = load i32*, i32** %verbose189, align 8, !dbg !5817
  %127 = load i32, i32* %126, align 4, !dbg !5817
  %cmp190 = icmp ugt i32 %127, 0, !dbg !5817
  br i1 %cmp190, label %if.then192, label %if.end194, !dbg !5815

if.then192:                                       ; preds = %land.lhs.true188
  %call193 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.204, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0)) #9, !dbg !5817
  br label %if.end194, !dbg !5817

if.end194:                                        ; preds = %if.then192, %land.lhs.true188, %if.else184
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %if.then182
  br label %if.end196

if.end196:                                        ; preds = %if.end195, %if.then172
  br label %if.end197

if.end197:                                        ; preds = %if.end196, %if.then162
  br label %do.end198, !dbg !5819

do.end198:                                        ; preds = %if.end197
  store i32 -19, i32* %retval, align 4, !dbg !5820
  br label %return, !dbg !5820

if.end199:                                        ; preds = %do.end147
  br label %do.body200, !dbg !5821

do.body200:                                       ; preds = %if.end199
  %128 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5822
  %verbose201 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %128, i32 0, i32 3, !dbg !5822
  %129 = load i32*, i32** %verbose201, align 8, !dbg !5822
  %130 = load i32, i32* %129, align 4, !dbg !5822
  %cmp202 = icmp ugt i32 %130, 0, !dbg !5822
  br i1 %cmp202, label %land.lhs.true204, label %if.else210, !dbg !5822

land.lhs.true204:                                 ; preds = %do.body200
  %131 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5822
  %verbose205 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %131, i32 0, i32 3, !dbg !5822
  %132 = load i32*, i32** %verbose205, align 8, !dbg !5822
  %133 = load i32, i32* %132, align 4, !dbg !5822
  %cmp206 = icmp ugt i32 %133, 0, !dbg !5822
  br i1 %cmp206, label %if.then208, label %if.else210, !dbg !5827

if.then208:                                       ; preds = %land.lhs.true204
  %134 = bitcast [5 x i8]* %fec_str to i8*, !dbg !5822
  %135 = load i32, i32* %fec_ver, align 4, !dbg !5822
  %call209 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.205, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i8* %134, i32 %135) #9, !dbg !5822
  br label %if.end243, !dbg !5822

if.else210:                                       ; preds = %land.lhs.true204, %do.body200
  %136 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5828
  %verbose211 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %136, i32 0, i32 3, !dbg !5828
  %137 = load i32*, i32** %verbose211, align 8, !dbg !5828
  %138 = load i32, i32* %137, align 4, !dbg !5828
  %cmp212 = icmp ugt i32 %138, 1, !dbg !5828
  br i1 %cmp212, label %land.lhs.true214, label %if.else220, !dbg !5828

land.lhs.true214:                                 ; preds = %if.else210
  %139 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5828
  %verbose215 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %139, i32 0, i32 3, !dbg !5828
  %140 = load i32*, i32** %verbose215, align 8, !dbg !5828
  %141 = load i32, i32* %140, align 4, !dbg !5828
  %cmp216 = icmp ugt i32 %141, 0, !dbg !5828
  br i1 %cmp216, label %if.then218, label %if.else220, !dbg !5822

if.then218:                                       ; preds = %land.lhs.true214
  %142 = bitcast [5 x i8]* %fec_str to i8*, !dbg !5828
  %143 = load i32, i32* %fec_ver, align 4, !dbg !5828
  %call219 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.206, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i8* %142, i32 %143) #9, !dbg !5828
  br label %if.end242, !dbg !5828

if.else220:                                       ; preds = %land.lhs.true214, %if.else210
  %144 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5830
  %verbose221 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %144, i32 0, i32 3, !dbg !5830
  %145 = load i32*, i32** %verbose221, align 8, !dbg !5830
  %146 = load i32, i32* %145, align 4, !dbg !5830
  %cmp222 = icmp ugt i32 %146, 2, !dbg !5830
  br i1 %cmp222, label %land.lhs.true224, label %if.else230, !dbg !5830

land.lhs.true224:                                 ; preds = %if.else220
  %147 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5830
  %verbose225 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %147, i32 0, i32 3, !dbg !5830
  %148 = load i32*, i32** %verbose225, align 8, !dbg !5830
  %149 = load i32, i32* %148, align 4, !dbg !5830
  %cmp226 = icmp ugt i32 %149, 0, !dbg !5830
  br i1 %cmp226, label %if.then228, label %if.else230, !dbg !5828

if.then228:                                       ; preds = %land.lhs.true224
  %150 = bitcast [5 x i8]* %fec_str to i8*, !dbg !5830
  %151 = load i32, i32* %fec_ver, align 4, !dbg !5830
  %call229 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.207, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i8* %150, i32 %151) #9, !dbg !5830
  br label %if.end241, !dbg !5830

if.else230:                                       ; preds = %land.lhs.true224, %if.else220
  %152 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5832
  %verbose231 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %152, i32 0, i32 3, !dbg !5832
  %153 = load i32*, i32** %verbose231, align 8, !dbg !5832
  %154 = load i32, i32* %153, align 4, !dbg !5832
  %cmp232 = icmp ugt i32 %154, 3, !dbg !5832
  br i1 %cmp232, label %land.lhs.true234, label %if.end240, !dbg !5832

land.lhs.true234:                                 ; preds = %if.else230
  %155 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !5832
  %verbose235 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %155, i32 0, i32 3, !dbg !5832
  %156 = load i32*, i32** %verbose235, align 8, !dbg !5832
  %157 = load i32, i32* %156, align 4, !dbg !5832
  %cmp236 = icmp ugt i32 %157, 0, !dbg !5832
  br i1 %cmp236, label %if.then238, label %if.end240, !dbg !5830

if.then238:                                       ; preds = %land.lhs.true234
  %158 = bitcast [5 x i8]* %fec_str to i8*, !dbg !5832
  %159 = load i32, i32* %fec_ver, align 4, !dbg !5832
  %call239 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.208, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stb0899_get_dev_id, i64 0, i64 0), i8* %158, i32 %159) #9, !dbg !5832
  br label %if.end240, !dbg !5832

if.end240:                                        ; preds = %if.then238, %land.lhs.true234, %if.else230
  br label %if.end241

if.end241:                                        ; preds = %if.end240, %if.then228
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %if.then218
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.then208
  br label %do.end244, !dbg !5834

do.end244:                                        ; preds = %if.end243
  store i32 0, i32* %retval, align 4, !dbg !5835
  br label %return, !dbg !5835

return:                                           ; preds = %do.end244, %do.end198
  %160 = load i32, i32* %retval, align 4, !dbg !5836
  ret i32 %160, !dbg !5836
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !5837 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5841, metadata !DIExpression()), !dbg !5846
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5848, metadata !DIExpression()), !dbg !5849
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5850, metadata !DIExpression()), !dbg !5851
  %0 = load i64, i64* %size.addr, align 8, !dbg !5852
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !5854
  br i1 %1, label %if.then, label %if.end447, !dbg !5855

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !5856
  %tobool = icmp ne i64 %2, 0, !dbg !5856
  br i1 %tobool, label %if.end, label %if.then1, !dbg !5859

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !5860
  br label %return, !dbg !5860

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !5861
  %cmp = icmp ult i64 %3, 4096, !dbg !5863
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5864

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5865
  br label %return, !dbg !5865

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub = sub i64 %4, 1, !dbg !5866
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !5866
  br i1 %5, label %cond.true, label %cond.false442, !dbg !5866

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub4 = sub i64 %6, 1, !dbg !5866
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !5866
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !5866

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub6 = sub i64 %8, 1, !dbg !5866
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !5866
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !5866

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !5866

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub9 = sub i64 %9, 1, !dbg !5866
  %and = and i64 %sub9, -9223372036854775808, !dbg !5866
  %tobool10 = icmp ne i64 %and, 0, !dbg !5866
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !5866

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !5866

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub13 = sub i64 %10, 1, !dbg !5866
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !5866
  %tobool15 = icmp ne i64 %and14, 0, !dbg !5866
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !5866

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !5866

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub18 = sub i64 %11, 1, !dbg !5866
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !5866
  %tobool20 = icmp ne i64 %and19, 0, !dbg !5866
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !5866

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !5866

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub23 = sub i64 %12, 1, !dbg !5866
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !5866
  %tobool25 = icmp ne i64 %and24, 0, !dbg !5866
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !5866

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !5866

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub28 = sub i64 %13, 1, !dbg !5866
  %and29 = and i64 %sub28, 576460752303423488, !dbg !5866
  %tobool30 = icmp ne i64 %and29, 0, !dbg !5866
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !5866

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !5866

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub33 = sub i64 %14, 1, !dbg !5866
  %and34 = and i64 %sub33, 288230376151711744, !dbg !5866
  %tobool35 = icmp ne i64 %and34, 0, !dbg !5866
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !5866

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !5866

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub38 = sub i64 %15, 1, !dbg !5866
  %and39 = and i64 %sub38, 144115188075855872, !dbg !5866
  %tobool40 = icmp ne i64 %and39, 0, !dbg !5866
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !5866

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !5866

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub43 = sub i64 %16, 1, !dbg !5866
  %and44 = and i64 %sub43, 72057594037927936, !dbg !5866
  %tobool45 = icmp ne i64 %and44, 0, !dbg !5866
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !5866

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !5866

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub48 = sub i64 %17, 1, !dbg !5866
  %and49 = and i64 %sub48, 36028797018963968, !dbg !5866
  %tobool50 = icmp ne i64 %and49, 0, !dbg !5866
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !5866

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !5866

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub53 = sub i64 %18, 1, !dbg !5866
  %and54 = and i64 %sub53, 18014398509481984, !dbg !5866
  %tobool55 = icmp ne i64 %and54, 0, !dbg !5866
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !5866

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !5866

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub58 = sub i64 %19, 1, !dbg !5866
  %and59 = and i64 %sub58, 9007199254740992, !dbg !5866
  %tobool60 = icmp ne i64 %and59, 0, !dbg !5866
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !5866

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !5866

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub63 = sub i64 %20, 1, !dbg !5866
  %and64 = and i64 %sub63, 4503599627370496, !dbg !5866
  %tobool65 = icmp ne i64 %and64, 0, !dbg !5866
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !5866

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !5866

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub68 = sub i64 %21, 1, !dbg !5866
  %and69 = and i64 %sub68, 2251799813685248, !dbg !5866
  %tobool70 = icmp ne i64 %and69, 0, !dbg !5866
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !5866

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !5866

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub73 = sub i64 %22, 1, !dbg !5866
  %and74 = and i64 %sub73, 1125899906842624, !dbg !5866
  %tobool75 = icmp ne i64 %and74, 0, !dbg !5866
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !5866

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !5866

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub78 = sub i64 %23, 1, !dbg !5866
  %and79 = and i64 %sub78, 562949953421312, !dbg !5866
  %tobool80 = icmp ne i64 %and79, 0, !dbg !5866
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !5866

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !5866

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub83 = sub i64 %24, 1, !dbg !5866
  %and84 = and i64 %sub83, 281474976710656, !dbg !5866
  %tobool85 = icmp ne i64 %and84, 0, !dbg !5866
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !5866

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !5866

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub88 = sub i64 %25, 1, !dbg !5866
  %and89 = and i64 %sub88, 140737488355328, !dbg !5866
  %tobool90 = icmp ne i64 %and89, 0, !dbg !5866
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !5866

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !5866

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub93 = sub i64 %26, 1, !dbg !5866
  %and94 = and i64 %sub93, 70368744177664, !dbg !5866
  %tobool95 = icmp ne i64 %and94, 0, !dbg !5866
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !5866

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !5866

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub98 = sub i64 %27, 1, !dbg !5866
  %and99 = and i64 %sub98, 35184372088832, !dbg !5866
  %tobool100 = icmp ne i64 %and99, 0, !dbg !5866
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !5866

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !5866

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub103 = sub i64 %28, 1, !dbg !5866
  %and104 = and i64 %sub103, 17592186044416, !dbg !5866
  %tobool105 = icmp ne i64 %and104, 0, !dbg !5866
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !5866

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !5866

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub108 = sub i64 %29, 1, !dbg !5866
  %and109 = and i64 %sub108, 8796093022208, !dbg !5866
  %tobool110 = icmp ne i64 %and109, 0, !dbg !5866
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !5866

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !5866

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub113 = sub i64 %30, 1, !dbg !5866
  %and114 = and i64 %sub113, 4398046511104, !dbg !5866
  %tobool115 = icmp ne i64 %and114, 0, !dbg !5866
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !5866

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !5866

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub118 = sub i64 %31, 1, !dbg !5866
  %and119 = and i64 %sub118, 2199023255552, !dbg !5866
  %tobool120 = icmp ne i64 %and119, 0, !dbg !5866
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !5866

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !5866

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub123 = sub i64 %32, 1, !dbg !5866
  %and124 = and i64 %sub123, 1099511627776, !dbg !5866
  %tobool125 = icmp ne i64 %and124, 0, !dbg !5866
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !5866

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !5866

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub128 = sub i64 %33, 1, !dbg !5866
  %and129 = and i64 %sub128, 549755813888, !dbg !5866
  %tobool130 = icmp ne i64 %and129, 0, !dbg !5866
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !5866

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !5866

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub133 = sub i64 %34, 1, !dbg !5866
  %and134 = and i64 %sub133, 274877906944, !dbg !5866
  %tobool135 = icmp ne i64 %and134, 0, !dbg !5866
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !5866

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !5866

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub138 = sub i64 %35, 1, !dbg !5866
  %and139 = and i64 %sub138, 137438953472, !dbg !5866
  %tobool140 = icmp ne i64 %and139, 0, !dbg !5866
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !5866

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !5866

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub143 = sub i64 %36, 1, !dbg !5866
  %and144 = and i64 %sub143, 68719476736, !dbg !5866
  %tobool145 = icmp ne i64 %and144, 0, !dbg !5866
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !5866

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !5866

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub148 = sub i64 %37, 1, !dbg !5866
  %and149 = and i64 %sub148, 34359738368, !dbg !5866
  %tobool150 = icmp ne i64 %and149, 0, !dbg !5866
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !5866

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !5866

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub153 = sub i64 %38, 1, !dbg !5866
  %and154 = and i64 %sub153, 17179869184, !dbg !5866
  %tobool155 = icmp ne i64 %and154, 0, !dbg !5866
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !5866

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !5866

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub158 = sub i64 %39, 1, !dbg !5866
  %and159 = and i64 %sub158, 8589934592, !dbg !5866
  %tobool160 = icmp ne i64 %and159, 0, !dbg !5866
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !5866

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !5866

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub163 = sub i64 %40, 1, !dbg !5866
  %and164 = and i64 %sub163, 4294967296, !dbg !5866
  %tobool165 = icmp ne i64 %and164, 0, !dbg !5866
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !5866

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !5866

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub168 = sub i64 %41, 1, !dbg !5866
  %and169 = and i64 %sub168, 2147483648, !dbg !5866
  %tobool170 = icmp ne i64 %and169, 0, !dbg !5866
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !5866

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !5866

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub173 = sub i64 %42, 1, !dbg !5866
  %and174 = and i64 %sub173, 1073741824, !dbg !5866
  %tobool175 = icmp ne i64 %and174, 0, !dbg !5866
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !5866

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !5866

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub178 = sub i64 %43, 1, !dbg !5866
  %and179 = and i64 %sub178, 536870912, !dbg !5866
  %tobool180 = icmp ne i64 %and179, 0, !dbg !5866
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !5866

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !5866

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub183 = sub i64 %44, 1, !dbg !5866
  %and184 = and i64 %sub183, 268435456, !dbg !5866
  %tobool185 = icmp ne i64 %and184, 0, !dbg !5866
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !5866

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !5866

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub188 = sub i64 %45, 1, !dbg !5866
  %and189 = and i64 %sub188, 134217728, !dbg !5866
  %tobool190 = icmp ne i64 %and189, 0, !dbg !5866
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !5866

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !5866

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub193 = sub i64 %46, 1, !dbg !5866
  %and194 = and i64 %sub193, 67108864, !dbg !5866
  %tobool195 = icmp ne i64 %and194, 0, !dbg !5866
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !5866

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !5866

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub198 = sub i64 %47, 1, !dbg !5866
  %and199 = and i64 %sub198, 33554432, !dbg !5866
  %tobool200 = icmp ne i64 %and199, 0, !dbg !5866
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !5866

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !5866

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub203 = sub i64 %48, 1, !dbg !5866
  %and204 = and i64 %sub203, 16777216, !dbg !5866
  %tobool205 = icmp ne i64 %and204, 0, !dbg !5866
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !5866

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !5866

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub208 = sub i64 %49, 1, !dbg !5866
  %and209 = and i64 %sub208, 8388608, !dbg !5866
  %tobool210 = icmp ne i64 %and209, 0, !dbg !5866
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !5866

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !5866

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub213 = sub i64 %50, 1, !dbg !5866
  %and214 = and i64 %sub213, 4194304, !dbg !5866
  %tobool215 = icmp ne i64 %and214, 0, !dbg !5866
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !5866

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !5866

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub218 = sub i64 %51, 1, !dbg !5866
  %and219 = and i64 %sub218, 2097152, !dbg !5866
  %tobool220 = icmp ne i64 %and219, 0, !dbg !5866
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !5866

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !5866

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub223 = sub i64 %52, 1, !dbg !5866
  %and224 = and i64 %sub223, 1048576, !dbg !5866
  %tobool225 = icmp ne i64 %and224, 0, !dbg !5866
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !5866

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !5866

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub228 = sub i64 %53, 1, !dbg !5866
  %and229 = and i64 %sub228, 524288, !dbg !5866
  %tobool230 = icmp ne i64 %and229, 0, !dbg !5866
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !5866

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !5866

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub233 = sub i64 %54, 1, !dbg !5866
  %and234 = and i64 %sub233, 262144, !dbg !5866
  %tobool235 = icmp ne i64 %and234, 0, !dbg !5866
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !5866

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !5866

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub238 = sub i64 %55, 1, !dbg !5866
  %and239 = and i64 %sub238, 131072, !dbg !5866
  %tobool240 = icmp ne i64 %and239, 0, !dbg !5866
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !5866

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !5866

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub243 = sub i64 %56, 1, !dbg !5866
  %and244 = and i64 %sub243, 65536, !dbg !5866
  %tobool245 = icmp ne i64 %and244, 0, !dbg !5866
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !5866

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !5866

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub248 = sub i64 %57, 1, !dbg !5866
  %and249 = and i64 %sub248, 32768, !dbg !5866
  %tobool250 = icmp ne i64 %and249, 0, !dbg !5866
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !5866

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !5866

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub253 = sub i64 %58, 1, !dbg !5866
  %and254 = and i64 %sub253, 16384, !dbg !5866
  %tobool255 = icmp ne i64 %and254, 0, !dbg !5866
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !5866

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !5866

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub258 = sub i64 %59, 1, !dbg !5866
  %and259 = and i64 %sub258, 8192, !dbg !5866
  %tobool260 = icmp ne i64 %and259, 0, !dbg !5866
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !5866

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !5866

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub263 = sub i64 %60, 1, !dbg !5866
  %and264 = and i64 %sub263, 4096, !dbg !5866
  %tobool265 = icmp ne i64 %and264, 0, !dbg !5866
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !5866

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !5866

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub268 = sub i64 %61, 1, !dbg !5866
  %and269 = and i64 %sub268, 2048, !dbg !5866
  %tobool270 = icmp ne i64 %and269, 0, !dbg !5866
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !5866

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !5866

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub273 = sub i64 %62, 1, !dbg !5866
  %and274 = and i64 %sub273, 1024, !dbg !5866
  %tobool275 = icmp ne i64 %and274, 0, !dbg !5866
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !5866

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !5866

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub278 = sub i64 %63, 1, !dbg !5866
  %and279 = and i64 %sub278, 512, !dbg !5866
  %tobool280 = icmp ne i64 %and279, 0, !dbg !5866
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !5866

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !5866

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub283 = sub i64 %64, 1, !dbg !5866
  %and284 = and i64 %sub283, 256, !dbg !5866
  %tobool285 = icmp ne i64 %and284, 0, !dbg !5866
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !5866

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !5866

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub288 = sub i64 %65, 1, !dbg !5866
  %and289 = and i64 %sub288, 128, !dbg !5866
  %tobool290 = icmp ne i64 %and289, 0, !dbg !5866
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !5866

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !5866

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub293 = sub i64 %66, 1, !dbg !5866
  %and294 = and i64 %sub293, 64, !dbg !5866
  %tobool295 = icmp ne i64 %and294, 0, !dbg !5866
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !5866

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !5866

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub298 = sub i64 %67, 1, !dbg !5866
  %and299 = and i64 %sub298, 32, !dbg !5866
  %tobool300 = icmp ne i64 %and299, 0, !dbg !5866
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !5866

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !5866

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub303 = sub i64 %68, 1, !dbg !5866
  %and304 = and i64 %sub303, 16, !dbg !5866
  %tobool305 = icmp ne i64 %and304, 0, !dbg !5866
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !5866

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !5866

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub308 = sub i64 %69, 1, !dbg !5866
  %and309 = and i64 %sub308, 8, !dbg !5866
  %tobool310 = icmp ne i64 %and309, 0, !dbg !5866
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !5866

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !5866

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub313 = sub i64 %70, 1, !dbg !5866
  %and314 = and i64 %sub313, 4, !dbg !5866
  %tobool315 = icmp ne i64 %and314, 0, !dbg !5866
  %71 = zext i1 %tobool315 to i64, !dbg !5866
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !5866
  br label %cond.end, !dbg !5866

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !5866
  br label %cond.end317, !dbg !5866

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !5866
  br label %cond.end319, !dbg !5866

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !5866
  br label %cond.end321, !dbg !5866

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !5866
  br label %cond.end323, !dbg !5866

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !5866
  br label %cond.end325, !dbg !5866

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !5866
  br label %cond.end327, !dbg !5866

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !5866
  br label %cond.end329, !dbg !5866

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !5866
  br label %cond.end331, !dbg !5866

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !5866
  br label %cond.end333, !dbg !5866

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !5866
  br label %cond.end335, !dbg !5866

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !5866
  br label %cond.end337, !dbg !5866

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !5866
  br label %cond.end339, !dbg !5866

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !5866
  br label %cond.end341, !dbg !5866

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !5866
  br label %cond.end343, !dbg !5866

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !5866
  br label %cond.end345, !dbg !5866

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !5866
  br label %cond.end347, !dbg !5866

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !5866
  br label %cond.end349, !dbg !5866

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !5866
  br label %cond.end351, !dbg !5866

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !5866
  br label %cond.end353, !dbg !5866

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !5866
  br label %cond.end355, !dbg !5866

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !5866
  br label %cond.end357, !dbg !5866

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !5866
  br label %cond.end359, !dbg !5866

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !5866
  br label %cond.end361, !dbg !5866

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !5866
  br label %cond.end363, !dbg !5866

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !5866
  br label %cond.end365, !dbg !5866

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !5866
  br label %cond.end367, !dbg !5866

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !5866
  br label %cond.end369, !dbg !5866

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !5866
  br label %cond.end371, !dbg !5866

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !5866
  br label %cond.end373, !dbg !5866

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !5866
  br label %cond.end375, !dbg !5866

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !5866
  br label %cond.end377, !dbg !5866

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !5866
  br label %cond.end379, !dbg !5866

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !5866
  br label %cond.end381, !dbg !5866

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !5866
  br label %cond.end383, !dbg !5866

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !5866
  br label %cond.end385, !dbg !5866

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !5866
  br label %cond.end387, !dbg !5866

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !5866
  br label %cond.end389, !dbg !5866

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !5866
  br label %cond.end391, !dbg !5866

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !5866
  br label %cond.end393, !dbg !5866

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !5866
  br label %cond.end395, !dbg !5866

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !5866
  br label %cond.end397, !dbg !5866

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !5866
  br label %cond.end399, !dbg !5866

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !5866
  br label %cond.end401, !dbg !5866

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !5866
  br label %cond.end403, !dbg !5866

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !5866
  br label %cond.end405, !dbg !5866

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !5866
  br label %cond.end407, !dbg !5866

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !5866
  br label %cond.end409, !dbg !5866

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !5866
  br label %cond.end411, !dbg !5866

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !5866
  br label %cond.end413, !dbg !5866

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !5866
  br label %cond.end415, !dbg !5866

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !5866
  br label %cond.end417, !dbg !5866

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !5866
  br label %cond.end419, !dbg !5866

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !5866
  br label %cond.end421, !dbg !5866

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !5866
  br label %cond.end423, !dbg !5866

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !5866
  br label %cond.end425, !dbg !5866

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !5866
  br label %cond.end427, !dbg !5866

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !5866
  br label %cond.end429, !dbg !5866

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !5866
  br label %cond.end431, !dbg !5866

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !5866
  br label %cond.end433, !dbg !5866

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !5866
  br label %cond.end435, !dbg !5866

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !5866
  br label %cond.end437, !dbg !5866

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !5866
  br label %cond.end440, !dbg !5866

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !5866

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !5866
  br label %cond.end444, !dbg !5866

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !5866
  %sub443 = sub i64 %72, 1, !dbg !5866
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !5866
  br label %cond.end444, !dbg !5866

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !5866
  %sub446 = sub i32 %cond445, 12, !dbg !5867
  %add = add i32 %sub446, 1, !dbg !5868
  store i32 %add, i32* %retval, align 4, !dbg !5869
  br label %return, !dbg !5869

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !5870
  %dec = add i64 %73, -1, !dbg !5870
  store i64 %dec, i64* %size.addr, align 8, !dbg !5870
  %74 = load i64, i64* %size.addr, align 8, !dbg !5871
  %shr = lshr i64 %74, 12, !dbg !5871
  store i64 %shr, i64* %size.addr, align 8, !dbg !5871
  %75 = load i64, i64* %size.addr, align 8, !dbg !5872
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5849
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !5873
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !5874
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #13, !dbg !5873, !srcloc !5875
  store i32 %78, i32* %bitpos.i, align 4, !dbg !5873
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !5876
  %add.i = add i32 %79, 1, !dbg !5877
  store i32 %add.i, i32* %retval, align 4, !dbg !5878
  br label %return, !dbg !5878

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !5879
  ret i32 %80, !dbg !5879
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !5880 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5841, metadata !DIExpression()), !dbg !5884
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5848, metadata !DIExpression()), !dbg !5886
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  %0 = load i64, i64* %n.addr, align 8, !dbg !5889
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5886
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !5890
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !5891
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #13, !dbg !5890, !srcloc !5875
  store i32 %3, i32* %bitpos.i, align 4, !dbg !5890
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !5892
  %add.i = add i32 %4, 1, !dbg !5893
  %sub = sub i32 %add.i, 1, !dbg !5894
  ret i32 %sub, !dbg !5895
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !5896 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !5900, metadata !DIExpression()), !dbg !5901
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !5902, metadata !DIExpression()), !dbg !5903
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5904, metadata !DIExpression()), !dbg !5905
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5906, metadata !DIExpression()), !dbg !5907
  %0 = load i8*, i8** %object.addr, align 8, !dbg !5908
  ret i8* %0, !dbg !5909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stb0899_detach(%struct.dvb_frontend* %fe) #0 !dbg !5910 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5911, metadata !DIExpression()), !dbg !5912
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !5913, metadata !DIExpression()), !dbg !5914
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5915
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5916
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5916
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !5915
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !5914
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5917
  %call = call i32 @stb0899_postproc(%struct.stb0899_state* %3, i8 zeroext 0, i32 0) #8, !dbg !5918
  ret void, !dbg !5919
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stb0899_release(%struct.dvb_frontend* %fe) #0 !dbg !5920 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5921, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !5923, metadata !DIExpression()), !dbg !5924
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5925
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5926
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5926
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !5925
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !5924
  br label %do.body, !dbg !5927

do.body:                                          ; preds = %entry
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5928
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %3, i32 0, i32 3, !dbg !5928
  %4 = load i32*, i32** %verbose, align 8, !dbg !5928
  %5 = load i32, i32* %4, align 4, !dbg !5928
  %cmp = icmp ugt i32 %5, 0, !dbg !5928
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5928

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5928
  %verbose1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %6, i32 0, i32 3, !dbg !5928
  %7 = load i32*, i32** %verbose1, align 8, !dbg !5928
  %8 = load i32, i32* %7, align 4, !dbg !5928
  %cmp2 = icmp ugt i32 %8, 3, !dbg !5928
  br i1 %cmp2, label %if.then, label %if.else, !dbg !5933

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stb0899_release, i64 0, i64 0)) #9, !dbg !5928
  br label %if.end28, !dbg !5928

if.else:                                          ; preds = %land.lhs.true, %do.body
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5934
  %verbose3 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %9, i32 0, i32 3, !dbg !5934
  %10 = load i32*, i32** %verbose3, align 8, !dbg !5934
  %11 = load i32, i32* %10, align 4, !dbg !5934
  %cmp4 = icmp ugt i32 %11, 1, !dbg !5934
  br i1 %cmp4, label %land.lhs.true5, label %if.else10, !dbg !5934

land.lhs.true5:                                   ; preds = %if.else
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5934
  %verbose6 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %12, i32 0, i32 3, !dbg !5934
  %13 = load i32*, i32** %verbose6, align 8, !dbg !5934
  %14 = load i32, i32* %13, align 4, !dbg !5934
  %cmp7 = icmp ugt i32 %14, 3, !dbg !5934
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !5928

if.then8:                                         ; preds = %land.lhs.true5
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stb0899_release, i64 0, i64 0)) #9, !dbg !5934
  br label %if.end27, !dbg !5934

if.else10:                                        ; preds = %land.lhs.true5, %if.else
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5936
  %verbose11 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %15, i32 0, i32 3, !dbg !5936
  %16 = load i32*, i32** %verbose11, align 8, !dbg !5936
  %17 = load i32, i32* %16, align 4, !dbg !5936
  %cmp12 = icmp ugt i32 %17, 2, !dbg !5936
  br i1 %cmp12, label %land.lhs.true13, label %if.else18, !dbg !5936

land.lhs.true13:                                  ; preds = %if.else10
  %18 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5936
  %verbose14 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %18, i32 0, i32 3, !dbg !5936
  %19 = load i32*, i32** %verbose14, align 8, !dbg !5936
  %20 = load i32, i32* %19, align 4, !dbg !5936
  %cmp15 = icmp ugt i32 %20, 3, !dbg !5936
  br i1 %cmp15, label %if.then16, label %if.else18, !dbg !5934

if.then16:                                        ; preds = %land.lhs.true13
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stb0899_release, i64 0, i64 0)) #9, !dbg !5936
  br label %if.end26, !dbg !5936

if.else18:                                        ; preds = %land.lhs.true13, %if.else10
  %21 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5938
  %verbose19 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %21, i32 0, i32 3, !dbg !5938
  %22 = load i32*, i32** %verbose19, align 8, !dbg !5938
  %23 = load i32, i32* %22, align 4, !dbg !5938
  %cmp20 = icmp ugt i32 %23, 3, !dbg !5938
  br i1 %cmp20, label %land.lhs.true21, label %if.end, !dbg !5938

land.lhs.true21:                                  ; preds = %if.else18
  %24 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5938
  %verbose22 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %24, i32 0, i32 3, !dbg !5938
  %25 = load i32*, i32** %verbose22, align 8, !dbg !5938
  %26 = load i32, i32* %25, align 4, !dbg !5938
  %cmp23 = icmp ugt i32 %26, 3, !dbg !5938
  br i1 %cmp23, label %if.then24, label %if.end, !dbg !5936

if.then24:                                        ; preds = %land.lhs.true21
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stb0899_release, i64 0, i64 0)) #9, !dbg !5938
  br label %if.end, !dbg !5938

if.end:                                           ; preds = %if.then24, %land.lhs.true21, %if.else18
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then16
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then8
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  br label %do.end, !dbg !5940

do.end:                                           ; preds = %if.end28
  %27 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5941
  %28 = bitcast %struct.stb0899_state* %27 to i8*, !dbg !5941
  call void @kfree(i8* %28) #8, !dbg !5942
  ret void, !dbg !5943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_init(%struct.dvb_frontend* %fe) #0 !dbg !5944 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %i = alloca i32, align 4
  %state = alloca %struct.stb0899_state*, align 8
  %config = alloca %struct.stb0899_config*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5945, metadata !DIExpression()), !dbg !5946
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5947, metadata !DIExpression()), !dbg !5948
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !5949, metadata !DIExpression()), !dbg !5950
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5951
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5952
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5952
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !5951
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !5950
  call void @llvm.dbg.declare(metadata %struct.stb0899_config** %config, metadata !5953, metadata !DIExpression()), !dbg !5954
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5955
  %config1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %3, i32 0, i32 1, !dbg !5956
  %4 = load %struct.stb0899_config*, %struct.stb0899_config** %config1, align 8, !dbg !5956
  store %struct.stb0899_config* %4, %struct.stb0899_config** %config, align 8, !dbg !5954
  br label %do.body, !dbg !5957

do.body:                                          ; preds = %entry
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5958
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %5, i32 0, i32 3, !dbg !5958
  %6 = load i32*, i32** %verbose, align 8, !dbg !5958
  %7 = load i32, i32* %6, align 4, !dbg !5958
  %cmp = icmp ugt i32 %7, 0, !dbg !5958
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !5958

land.lhs.true:                                    ; preds = %do.body
  %8 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5958
  %verbose2 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %8, i32 0, i32 3, !dbg !5958
  %9 = load i32*, i32** %verbose2, align 8, !dbg !5958
  %10 = load i32, i32* %9, align 4, !dbg !5958
  %cmp3 = icmp ugt i32 %10, 3, !dbg !5958
  br i1 %cmp3, label %if.then, label %if.else, !dbg !5963

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !5958
  br label %if.end29, !dbg !5958

if.else:                                          ; preds = %land.lhs.true, %do.body
  %11 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5964
  %verbose4 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %11, i32 0, i32 3, !dbg !5964
  %12 = load i32*, i32** %verbose4, align 8, !dbg !5964
  %13 = load i32, i32* %12, align 4, !dbg !5964
  %cmp5 = icmp ugt i32 %13, 1, !dbg !5964
  br i1 %cmp5, label %land.lhs.true6, label %if.else11, !dbg !5964

land.lhs.true6:                                   ; preds = %if.else
  %14 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5964
  %verbose7 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %14, i32 0, i32 3, !dbg !5964
  %15 = load i32*, i32** %verbose7, align 8, !dbg !5964
  %16 = load i32, i32* %15, align 4, !dbg !5964
  %cmp8 = icmp ugt i32 %16, 3, !dbg !5964
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !5958

if.then9:                                         ; preds = %land.lhs.true6
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !5964
  br label %if.end28, !dbg !5964

if.else11:                                        ; preds = %land.lhs.true6, %if.else
  %17 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5966
  %verbose12 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %17, i32 0, i32 3, !dbg !5966
  %18 = load i32*, i32** %verbose12, align 8, !dbg !5966
  %19 = load i32, i32* %18, align 4, !dbg !5966
  %cmp13 = icmp ugt i32 %19, 2, !dbg !5966
  br i1 %cmp13, label %land.lhs.true14, label %if.else19, !dbg !5966

land.lhs.true14:                                  ; preds = %if.else11
  %20 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5966
  %verbose15 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %20, i32 0, i32 3, !dbg !5966
  %21 = load i32*, i32** %verbose15, align 8, !dbg !5966
  %22 = load i32, i32* %21, align 4, !dbg !5966
  %cmp16 = icmp ugt i32 %22, 3, !dbg !5966
  br i1 %cmp16, label %if.then17, label %if.else19, !dbg !5964

if.then17:                                        ; preds = %land.lhs.true14
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !5966
  br label %if.end27, !dbg !5966

if.else19:                                        ; preds = %land.lhs.true14, %if.else11
  %23 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5968
  %verbose20 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %23, i32 0, i32 3, !dbg !5968
  %24 = load i32*, i32** %verbose20, align 8, !dbg !5968
  %25 = load i32, i32* %24, align 4, !dbg !5968
  %cmp21 = icmp ugt i32 %25, 3, !dbg !5968
  br i1 %cmp21, label %land.lhs.true22, label %if.end, !dbg !5968

land.lhs.true22:                                  ; preds = %if.else19
  %26 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5968
  %verbose23 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %26, i32 0, i32 3, !dbg !5968
  %27 = load i32*, i32** %verbose23, align 8, !dbg !5968
  %28 = load i32, i32* %27, align 4, !dbg !5968
  %cmp24 = icmp ugt i32 %28, 3, !dbg !5968
  br i1 %cmp24, label %if.then25, label %if.end, !dbg !5966

if.then25:                                        ; preds = %land.lhs.true22
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !5968
  br label %if.end, !dbg !5968

if.end:                                           ; preds = %if.then25, %land.lhs.true22, %if.else19
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then17
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then9
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then
  br label %do.end, !dbg !5970

do.end:                                           ; preds = %if.end29
  br label %do.body30, !dbg !5971

do.body30:                                        ; preds = %do.end
  %29 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5972
  %verbose31 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %29, i32 0, i32 3, !dbg !5972
  %30 = load i32*, i32** %verbose31, align 8, !dbg !5972
  %31 = load i32, i32* %30, align 4, !dbg !5972
  %cmp32 = icmp ugt i32 %31, 0, !dbg !5972
  br i1 %cmp32, label %land.lhs.true33, label %if.else38, !dbg !5972

land.lhs.true33:                                  ; preds = %do.body30
  %32 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5972
  %verbose34 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %32, i32 0, i32 3, !dbg !5972
  %33 = load i32*, i32** %verbose34, align 8, !dbg !5972
  %34 = load i32, i32* %33, align 4, !dbg !5972
  %cmp35 = icmp ugt i32 %34, 3, !dbg !5972
  br i1 %cmp35, label %if.then36, label %if.else38, !dbg !5977

if.then36:                                        ; preds = %land.lhs.true33
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !5972
  br label %if.end65, !dbg !5972

if.else38:                                        ; preds = %land.lhs.true33, %do.body30
  %35 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5978
  %verbose39 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %35, i32 0, i32 3, !dbg !5978
  %36 = load i32*, i32** %verbose39, align 8, !dbg !5978
  %37 = load i32, i32* %36, align 4, !dbg !5978
  %cmp40 = icmp ugt i32 %37, 1, !dbg !5978
  br i1 %cmp40, label %land.lhs.true41, label %if.else46, !dbg !5978

land.lhs.true41:                                  ; preds = %if.else38
  %38 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5978
  %verbose42 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %38, i32 0, i32 3, !dbg !5978
  %39 = load i32*, i32** %verbose42, align 8, !dbg !5978
  %40 = load i32, i32* %39, align 4, !dbg !5978
  %cmp43 = icmp ugt i32 %40, 3, !dbg !5978
  br i1 %cmp43, label %if.then44, label %if.else46, !dbg !5972

if.then44:                                        ; preds = %land.lhs.true41
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !5978
  br label %if.end64, !dbg !5978

if.else46:                                        ; preds = %land.lhs.true41, %if.else38
  %41 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5980
  %verbose47 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %41, i32 0, i32 3, !dbg !5980
  %42 = load i32*, i32** %verbose47, align 8, !dbg !5980
  %43 = load i32, i32* %42, align 4, !dbg !5980
  %cmp48 = icmp ugt i32 %43, 2, !dbg !5980
  br i1 %cmp48, label %land.lhs.true49, label %if.else54, !dbg !5980

land.lhs.true49:                                  ; preds = %if.else46
  %44 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5980
  %verbose50 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %44, i32 0, i32 3, !dbg !5980
  %45 = load i32*, i32** %verbose50, align 8, !dbg !5980
  %46 = load i32, i32* %45, align 4, !dbg !5980
  %cmp51 = icmp ugt i32 %46, 3, !dbg !5980
  br i1 %cmp51, label %if.then52, label %if.else54, !dbg !5978

if.then52:                                        ; preds = %land.lhs.true49
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !5980
  br label %if.end63, !dbg !5980

if.else54:                                        ; preds = %land.lhs.true49, %if.else46
  %47 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5982
  %verbose55 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %47, i32 0, i32 3, !dbg !5982
  %48 = load i32*, i32** %verbose55, align 8, !dbg !5982
  %49 = load i32, i32* %48, align 4, !dbg !5982
  %cmp56 = icmp ugt i32 %49, 3, !dbg !5982
  br i1 %cmp56, label %land.lhs.true57, label %if.end62, !dbg !5982

land.lhs.true57:                                  ; preds = %if.else54
  %50 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5982
  %verbose58 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %50, i32 0, i32 3, !dbg !5982
  %51 = load i32*, i32** %verbose58, align 8, !dbg !5982
  %52 = load i32, i32* %51, align 4, !dbg !5982
  %cmp59 = icmp ugt i32 %52, 3, !dbg !5982
  br i1 %cmp59, label %if.then60, label %if.end62, !dbg !5980

if.then60:                                        ; preds = %land.lhs.true57
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !5982
  br label %if.end62, !dbg !5982

if.end62:                                         ; preds = %if.then60, %land.lhs.true57, %if.else54
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then52
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then44
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then36
  br label %do.end66, !dbg !5984

do.end66:                                         ; preds = %if.end65
  store i32 0, i32* %i, align 4, !dbg !5985
  br label %for.cond, !dbg !5987

for.cond:                                         ; preds = %for.inc, %do.end66
  %53 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !5988
  %init_dev = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %53, i32 0, i32 0, !dbg !5990
  %54 = load %struct.stb0899_s1_reg*, %struct.stb0899_s1_reg** %init_dev, align 8, !dbg !5990
  %55 = load i32, i32* %i, align 4, !dbg !5991
  %idxprom = sext i32 %55 to i64, !dbg !5988
  %arrayidx = getelementptr %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %54, i64 %idxprom, !dbg !5988
  %address = getelementptr inbounds %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %arrayidx, i32 0, i32 0, !dbg !5992
  %56 = load i16, i16* %address, align 2, !dbg !5992
  %conv = zext i16 %56 to i32, !dbg !5988
  %cmp67 = icmp ne i32 %conv, 65535, !dbg !5993
  br i1 %cmp67, label %for.body, label %for.end, !dbg !5994

for.body:                                         ; preds = %for.cond
  %57 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !5995
  %58 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !5996
  %init_dev69 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %58, i32 0, i32 0, !dbg !5997
  %59 = load %struct.stb0899_s1_reg*, %struct.stb0899_s1_reg** %init_dev69, align 8, !dbg !5997
  %60 = load i32, i32* %i, align 4, !dbg !5998
  %idxprom70 = sext i32 %60 to i64, !dbg !5996
  %arrayidx71 = getelementptr %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %59, i64 %idxprom70, !dbg !5996
  %address72 = getelementptr inbounds %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %arrayidx71, i32 0, i32 0, !dbg !5999
  %61 = load i16, i16* %address72, align 2, !dbg !5999
  %conv73 = zext i16 %61 to i32, !dbg !5996
  %62 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6000
  %init_dev74 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %62, i32 0, i32 0, !dbg !6001
  %63 = load %struct.stb0899_s1_reg*, %struct.stb0899_s1_reg** %init_dev74, align 8, !dbg !6001
  %64 = load i32, i32* %i, align 4, !dbg !6002
  %idxprom75 = sext i32 %64 to i64, !dbg !6000
  %arrayidx76 = getelementptr %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %63, i64 %idxprom75, !dbg !6000
  %data = getelementptr inbounds %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %arrayidx76, i32 0, i32 1, !dbg !6003
  %65 = load i8, i8* %data, align 2, !dbg !6003
  %call77 = call i32 @stb0899_write_reg(%struct.stb0899_state* %57, i32 %conv73, i8 zeroext %65) #8, !dbg !6004
  br label %for.inc, !dbg !6004

for.inc:                                          ; preds = %for.body
  %66 = load i32, i32* %i, align 4, !dbg !6005
  %inc = add i32 %66, 1, !dbg !6005
  store i32 %inc, i32* %i, align 4, !dbg !6005
  br label %for.cond, !dbg !6006, !llvm.loop !6007

for.end:                                          ; preds = %for.cond
  br label %do.body78, !dbg !6009

do.body78:                                        ; preds = %for.end
  %67 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6010
  %verbose79 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %67, i32 0, i32 3, !dbg !6010
  %68 = load i32*, i32** %verbose79, align 8, !dbg !6010
  %69 = load i32, i32* %68, align 4, !dbg !6010
  %cmp80 = icmp ugt i32 %69, 0, !dbg !6010
  br i1 %cmp80, label %land.lhs.true82, label %if.else88, !dbg !6010

land.lhs.true82:                                  ; preds = %do.body78
  %70 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6010
  %verbose83 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %70, i32 0, i32 3, !dbg !6010
  %71 = load i32*, i32** %verbose83, align 8, !dbg !6010
  %72 = load i32, i32* %71, align 4, !dbg !6010
  %cmp84 = icmp ugt i32 %72, 3, !dbg !6010
  br i1 %cmp84, label %if.then86, label %if.else88, !dbg !6015

if.then86:                                        ; preds = %land.lhs.true82
  %call87 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6010
  br label %if.end121, !dbg !6010

if.else88:                                        ; preds = %land.lhs.true82, %do.body78
  %73 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6016
  %verbose89 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %73, i32 0, i32 3, !dbg !6016
  %74 = load i32*, i32** %verbose89, align 8, !dbg !6016
  %75 = load i32, i32* %74, align 4, !dbg !6016
  %cmp90 = icmp ugt i32 %75, 1, !dbg !6016
  br i1 %cmp90, label %land.lhs.true92, label %if.else98, !dbg !6016

land.lhs.true92:                                  ; preds = %if.else88
  %76 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6016
  %verbose93 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %76, i32 0, i32 3, !dbg !6016
  %77 = load i32*, i32** %verbose93, align 8, !dbg !6016
  %78 = load i32, i32* %77, align 4, !dbg !6016
  %cmp94 = icmp ugt i32 %78, 3, !dbg !6016
  br i1 %cmp94, label %if.then96, label %if.else98, !dbg !6010

if.then96:                                        ; preds = %land.lhs.true92
  %call97 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6016
  br label %if.end120, !dbg !6016

if.else98:                                        ; preds = %land.lhs.true92, %if.else88
  %79 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6018
  %verbose99 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %79, i32 0, i32 3, !dbg !6018
  %80 = load i32*, i32** %verbose99, align 8, !dbg !6018
  %81 = load i32, i32* %80, align 4, !dbg !6018
  %cmp100 = icmp ugt i32 %81, 2, !dbg !6018
  br i1 %cmp100, label %land.lhs.true102, label %if.else108, !dbg !6018

land.lhs.true102:                                 ; preds = %if.else98
  %82 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6018
  %verbose103 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %82, i32 0, i32 3, !dbg !6018
  %83 = load i32*, i32** %verbose103, align 8, !dbg !6018
  %84 = load i32, i32* %83, align 4, !dbg !6018
  %cmp104 = icmp ugt i32 %84, 3, !dbg !6018
  br i1 %cmp104, label %if.then106, label %if.else108, !dbg !6016

if.then106:                                       ; preds = %land.lhs.true102
  %call107 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6018
  br label %if.end119, !dbg !6018

if.else108:                                       ; preds = %land.lhs.true102, %if.else98
  %85 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6020
  %verbose109 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %85, i32 0, i32 3, !dbg !6020
  %86 = load i32*, i32** %verbose109, align 8, !dbg !6020
  %87 = load i32, i32* %86, align 4, !dbg !6020
  %cmp110 = icmp ugt i32 %87, 3, !dbg !6020
  br i1 %cmp110, label %land.lhs.true112, label %if.end118, !dbg !6020

land.lhs.true112:                                 ; preds = %if.else108
  %88 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6020
  %verbose113 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %88, i32 0, i32 3, !dbg !6020
  %89 = load i32*, i32** %verbose113, align 8, !dbg !6020
  %90 = load i32, i32* %89, align 4, !dbg !6020
  %cmp114 = icmp ugt i32 %90, 3, !dbg !6020
  br i1 %cmp114, label %if.then116, label %if.end118, !dbg !6018

if.then116:                                       ; preds = %land.lhs.true112
  %call117 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6020
  br label %if.end118, !dbg !6020

if.end118:                                        ; preds = %if.then116, %land.lhs.true112, %if.else108
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.then106
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then96
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then86
  br label %do.end122, !dbg !6022

do.end122:                                        ; preds = %if.end121
  store i32 0, i32* %i, align 4, !dbg !6023
  br label %for.cond123, !dbg !6025

for.cond123:                                      ; preds = %for.inc142, %do.end122
  %91 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6026
  %init_s2_demod = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %91, i32 0, i32 1, !dbg !6028
  %92 = load %struct.stb0899_s2_reg*, %struct.stb0899_s2_reg** %init_s2_demod, align 8, !dbg !6028
  %93 = load i32, i32* %i, align 4, !dbg !6029
  %idxprom124 = sext i32 %93 to i64, !dbg !6026
  %arrayidx125 = getelementptr %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %92, i64 %idxprom124, !dbg !6026
  %offset = getelementptr inbounds %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %arrayidx125, i32 0, i32 0, !dbg !6030
  %94 = load i16, i16* %offset, align 4, !dbg !6030
  %conv126 = zext i16 %94 to i32, !dbg !6026
  %cmp127 = icmp ne i32 %conv126, 65535, !dbg !6031
  br i1 %cmp127, label %for.body129, label %for.end144, !dbg !6032

for.body129:                                      ; preds = %for.cond123
  %95 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6033
  %96 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6034
  %init_s2_demod130 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %96, i32 0, i32 1, !dbg !6035
  %97 = load %struct.stb0899_s2_reg*, %struct.stb0899_s2_reg** %init_s2_demod130, align 8, !dbg !6035
  %98 = load i32, i32* %i, align 4, !dbg !6036
  %idxprom131 = sext i32 %98 to i64, !dbg !6034
  %arrayidx132 = getelementptr %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %97, i64 %idxprom131, !dbg !6034
  %base_address = getelementptr inbounds %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %arrayidx132, i32 0, i32 1, !dbg !6037
  %99 = load i32, i32* %base_address, align 4, !dbg !6037
  %100 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6038
  %init_s2_demod133 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %100, i32 0, i32 1, !dbg !6039
  %101 = load %struct.stb0899_s2_reg*, %struct.stb0899_s2_reg** %init_s2_demod133, align 8, !dbg !6039
  %102 = load i32, i32* %i, align 4, !dbg !6040
  %idxprom134 = sext i32 %102 to i64, !dbg !6038
  %arrayidx135 = getelementptr %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %101, i64 %idxprom134, !dbg !6038
  %offset136 = getelementptr inbounds %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %arrayidx135, i32 0, i32 0, !dbg !6041
  %103 = load i16, i16* %offset136, align 4, !dbg !6041
  %104 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6042
  %init_s2_demod137 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %104, i32 0, i32 1, !dbg !6043
  %105 = load %struct.stb0899_s2_reg*, %struct.stb0899_s2_reg** %init_s2_demod137, align 8, !dbg !6043
  %106 = load i32, i32* %i, align 4, !dbg !6044
  %idxprom138 = sext i32 %106 to i64, !dbg !6042
  %arrayidx139 = getelementptr %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %105, i64 %idxprom138, !dbg !6042
  %data140 = getelementptr inbounds %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %arrayidx139, i32 0, i32 2, !dbg !6045
  %107 = load i32, i32* %data140, align 4, !dbg !6045
  %call141 = call i32 @stb0899_write_s2reg(%struct.stb0899_state* %95, i32 62460, i32 %99, i16 zeroext %103, i32 %107) #8, !dbg !6046
  br label %for.inc142, !dbg !6046

for.inc142:                                       ; preds = %for.body129
  %108 = load i32, i32* %i, align 4, !dbg !6047
  %inc143 = add i32 %108, 1, !dbg !6047
  store i32 %inc143, i32* %i, align 4, !dbg !6047
  br label %for.cond123, !dbg !6048, !llvm.loop !6049

for.end144:                                       ; preds = %for.cond123
  br label %do.body145, !dbg !6051

do.body145:                                       ; preds = %for.end144
  %109 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6052
  %verbose146 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %109, i32 0, i32 3, !dbg !6052
  %110 = load i32*, i32** %verbose146, align 8, !dbg !6052
  %111 = load i32, i32* %110, align 4, !dbg !6052
  %cmp147 = icmp ugt i32 %111, 0, !dbg !6052
  br i1 %cmp147, label %land.lhs.true149, label %if.else155, !dbg !6052

land.lhs.true149:                                 ; preds = %do.body145
  %112 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6052
  %verbose150 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %112, i32 0, i32 3, !dbg !6052
  %113 = load i32*, i32** %verbose150, align 8, !dbg !6052
  %114 = load i32, i32* %113, align 4, !dbg !6052
  %cmp151 = icmp ugt i32 %114, 3, !dbg !6052
  br i1 %cmp151, label %if.then153, label %if.else155, !dbg !6057

if.then153:                                       ; preds = %land.lhs.true149
  %call154 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6052
  br label %if.end188, !dbg !6052

if.else155:                                       ; preds = %land.lhs.true149, %do.body145
  %115 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6058
  %verbose156 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %115, i32 0, i32 3, !dbg !6058
  %116 = load i32*, i32** %verbose156, align 8, !dbg !6058
  %117 = load i32, i32* %116, align 4, !dbg !6058
  %cmp157 = icmp ugt i32 %117, 1, !dbg !6058
  br i1 %cmp157, label %land.lhs.true159, label %if.else165, !dbg !6058

land.lhs.true159:                                 ; preds = %if.else155
  %118 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6058
  %verbose160 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %118, i32 0, i32 3, !dbg !6058
  %119 = load i32*, i32** %verbose160, align 8, !dbg !6058
  %120 = load i32, i32* %119, align 4, !dbg !6058
  %cmp161 = icmp ugt i32 %120, 3, !dbg !6058
  br i1 %cmp161, label %if.then163, label %if.else165, !dbg !6052

if.then163:                                       ; preds = %land.lhs.true159
  %call164 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6058
  br label %if.end187, !dbg !6058

if.else165:                                       ; preds = %land.lhs.true159, %if.else155
  %121 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6060
  %verbose166 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %121, i32 0, i32 3, !dbg !6060
  %122 = load i32*, i32** %verbose166, align 8, !dbg !6060
  %123 = load i32, i32* %122, align 4, !dbg !6060
  %cmp167 = icmp ugt i32 %123, 2, !dbg !6060
  br i1 %cmp167, label %land.lhs.true169, label %if.else175, !dbg !6060

land.lhs.true169:                                 ; preds = %if.else165
  %124 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6060
  %verbose170 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %124, i32 0, i32 3, !dbg !6060
  %125 = load i32*, i32** %verbose170, align 8, !dbg !6060
  %126 = load i32, i32* %125, align 4, !dbg !6060
  %cmp171 = icmp ugt i32 %126, 3, !dbg !6060
  br i1 %cmp171, label %if.then173, label %if.else175, !dbg !6058

if.then173:                                       ; preds = %land.lhs.true169
  %call174 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6060
  br label %if.end186, !dbg !6060

if.else175:                                       ; preds = %land.lhs.true169, %if.else165
  %127 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6062
  %verbose176 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %127, i32 0, i32 3, !dbg !6062
  %128 = load i32*, i32** %verbose176, align 8, !dbg !6062
  %129 = load i32, i32* %128, align 4, !dbg !6062
  %cmp177 = icmp ugt i32 %129, 3, !dbg !6062
  br i1 %cmp177, label %land.lhs.true179, label %if.end185, !dbg !6062

land.lhs.true179:                                 ; preds = %if.else175
  %130 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6062
  %verbose180 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %130, i32 0, i32 3, !dbg !6062
  %131 = load i32*, i32** %verbose180, align 8, !dbg !6062
  %132 = load i32, i32* %131, align 4, !dbg !6062
  %cmp181 = icmp ugt i32 %132, 3, !dbg !6062
  br i1 %cmp181, label %if.then183, label %if.end185, !dbg !6060

if.then183:                                       ; preds = %land.lhs.true179
  %call184 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6062
  br label %if.end185, !dbg !6062

if.end185:                                        ; preds = %if.then183, %land.lhs.true179, %if.else175
  br label %if.end186

if.end186:                                        ; preds = %if.end185, %if.then173
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.then163
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.then153
  br label %do.end189, !dbg !6064

do.end189:                                        ; preds = %if.end188
  store i32 0, i32* %i, align 4, !dbg !6065
  br label %for.cond190, !dbg !6067

for.cond190:                                      ; preds = %for.inc208, %do.end189
  %133 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6068
  %init_s1_demod = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %133, i32 0, i32 2, !dbg !6070
  %134 = load %struct.stb0899_s1_reg*, %struct.stb0899_s1_reg** %init_s1_demod, align 8, !dbg !6070
  %135 = load i32, i32* %i, align 4, !dbg !6071
  %idxprom191 = sext i32 %135 to i64, !dbg !6068
  %arrayidx192 = getelementptr %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %134, i64 %idxprom191, !dbg !6068
  %address193 = getelementptr inbounds %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %arrayidx192, i32 0, i32 0, !dbg !6072
  %136 = load i16, i16* %address193, align 2, !dbg !6072
  %conv194 = zext i16 %136 to i32, !dbg !6068
  %cmp195 = icmp ne i32 %conv194, 65535, !dbg !6073
  br i1 %cmp195, label %for.body197, label %for.end210, !dbg !6074

for.body197:                                      ; preds = %for.cond190
  %137 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6075
  %138 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6076
  %init_s1_demod198 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %138, i32 0, i32 2, !dbg !6077
  %139 = load %struct.stb0899_s1_reg*, %struct.stb0899_s1_reg** %init_s1_demod198, align 8, !dbg !6077
  %140 = load i32, i32* %i, align 4, !dbg !6078
  %idxprom199 = sext i32 %140 to i64, !dbg !6076
  %arrayidx200 = getelementptr %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %139, i64 %idxprom199, !dbg !6076
  %address201 = getelementptr inbounds %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %arrayidx200, i32 0, i32 0, !dbg !6079
  %141 = load i16, i16* %address201, align 2, !dbg !6079
  %conv202 = zext i16 %141 to i32, !dbg !6076
  %142 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6080
  %init_s1_demod203 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %142, i32 0, i32 2, !dbg !6081
  %143 = load %struct.stb0899_s1_reg*, %struct.stb0899_s1_reg** %init_s1_demod203, align 8, !dbg !6081
  %144 = load i32, i32* %i, align 4, !dbg !6082
  %idxprom204 = sext i32 %144 to i64, !dbg !6080
  %arrayidx205 = getelementptr %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %143, i64 %idxprom204, !dbg !6080
  %data206 = getelementptr inbounds %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %arrayidx205, i32 0, i32 1, !dbg !6083
  %145 = load i8, i8* %data206, align 2, !dbg !6083
  %call207 = call i32 @stb0899_write_reg(%struct.stb0899_state* %137, i32 %conv202, i8 zeroext %145) #8, !dbg !6084
  br label %for.inc208, !dbg !6084

for.inc208:                                       ; preds = %for.body197
  %146 = load i32, i32* %i, align 4, !dbg !6085
  %inc209 = add i32 %146, 1, !dbg !6085
  store i32 %inc209, i32* %i, align 4, !dbg !6085
  br label %for.cond190, !dbg !6086, !llvm.loop !6087

for.end210:                                       ; preds = %for.cond190
  br label %do.body211, !dbg !6089

do.body211:                                       ; preds = %for.end210
  %147 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6090
  %verbose212 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %147, i32 0, i32 3, !dbg !6090
  %148 = load i32*, i32** %verbose212, align 8, !dbg !6090
  %149 = load i32, i32* %148, align 4, !dbg !6090
  %cmp213 = icmp ugt i32 %149, 0, !dbg !6090
  br i1 %cmp213, label %land.lhs.true215, label %if.else221, !dbg !6090

land.lhs.true215:                                 ; preds = %do.body211
  %150 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6090
  %verbose216 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %150, i32 0, i32 3, !dbg !6090
  %151 = load i32*, i32** %verbose216, align 8, !dbg !6090
  %152 = load i32, i32* %151, align 4, !dbg !6090
  %cmp217 = icmp ugt i32 %152, 3, !dbg !6090
  br i1 %cmp217, label %if.then219, label %if.else221, !dbg !6095

if.then219:                                       ; preds = %land.lhs.true215
  %call220 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6090
  br label %if.end254, !dbg !6090

if.else221:                                       ; preds = %land.lhs.true215, %do.body211
  %153 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6096
  %verbose222 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %153, i32 0, i32 3, !dbg !6096
  %154 = load i32*, i32** %verbose222, align 8, !dbg !6096
  %155 = load i32, i32* %154, align 4, !dbg !6096
  %cmp223 = icmp ugt i32 %155, 1, !dbg !6096
  br i1 %cmp223, label %land.lhs.true225, label %if.else231, !dbg !6096

land.lhs.true225:                                 ; preds = %if.else221
  %156 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6096
  %verbose226 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %156, i32 0, i32 3, !dbg !6096
  %157 = load i32*, i32** %verbose226, align 8, !dbg !6096
  %158 = load i32, i32* %157, align 4, !dbg !6096
  %cmp227 = icmp ugt i32 %158, 3, !dbg !6096
  br i1 %cmp227, label %if.then229, label %if.else231, !dbg !6090

if.then229:                                       ; preds = %land.lhs.true225
  %call230 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6096
  br label %if.end253, !dbg !6096

if.else231:                                       ; preds = %land.lhs.true225, %if.else221
  %159 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6098
  %verbose232 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %159, i32 0, i32 3, !dbg !6098
  %160 = load i32*, i32** %verbose232, align 8, !dbg !6098
  %161 = load i32, i32* %160, align 4, !dbg !6098
  %cmp233 = icmp ugt i32 %161, 2, !dbg !6098
  br i1 %cmp233, label %land.lhs.true235, label %if.else241, !dbg !6098

land.lhs.true235:                                 ; preds = %if.else231
  %162 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6098
  %verbose236 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %162, i32 0, i32 3, !dbg !6098
  %163 = load i32*, i32** %verbose236, align 8, !dbg !6098
  %164 = load i32, i32* %163, align 4, !dbg !6098
  %cmp237 = icmp ugt i32 %164, 3, !dbg !6098
  br i1 %cmp237, label %if.then239, label %if.else241, !dbg !6096

if.then239:                                       ; preds = %land.lhs.true235
  %call240 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6098
  br label %if.end252, !dbg !6098

if.else241:                                       ; preds = %land.lhs.true235, %if.else231
  %165 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6100
  %verbose242 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %165, i32 0, i32 3, !dbg !6100
  %166 = load i32*, i32** %verbose242, align 8, !dbg !6100
  %167 = load i32, i32* %166, align 4, !dbg !6100
  %cmp243 = icmp ugt i32 %167, 3, !dbg !6100
  br i1 %cmp243, label %land.lhs.true245, label %if.end251, !dbg !6100

land.lhs.true245:                                 ; preds = %if.else241
  %168 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6100
  %verbose246 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %168, i32 0, i32 3, !dbg !6100
  %169 = load i32*, i32** %verbose246, align 8, !dbg !6100
  %170 = load i32, i32* %169, align 4, !dbg !6100
  %cmp247 = icmp ugt i32 %170, 3, !dbg !6100
  br i1 %cmp247, label %if.then249, label %if.end251, !dbg !6098

if.then249:                                       ; preds = %land.lhs.true245
  %call250 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6100
  br label %if.end251, !dbg !6100

if.end251:                                        ; preds = %if.then249, %land.lhs.true245, %if.else241
  br label %if.end252

if.end252:                                        ; preds = %if.end251, %if.then239
  br label %if.end253

if.end253:                                        ; preds = %if.end252, %if.then229
  br label %if.end254

if.end254:                                        ; preds = %if.end253, %if.then219
  br label %do.end255, !dbg !6102

do.end255:                                        ; preds = %if.end254
  store i32 0, i32* %i, align 4, !dbg !6103
  br label %for.cond256, !dbg !6105

for.cond256:                                      ; preds = %for.inc277, %do.end255
  %171 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6106
  %init_s2_fec = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %171, i32 0, i32 3, !dbg !6108
  %172 = load %struct.stb0899_s2_reg*, %struct.stb0899_s2_reg** %init_s2_fec, align 8, !dbg !6108
  %173 = load i32, i32* %i, align 4, !dbg !6109
  %idxprom257 = sext i32 %173 to i64, !dbg !6106
  %arrayidx258 = getelementptr %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %172, i64 %idxprom257, !dbg !6106
  %offset259 = getelementptr inbounds %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %arrayidx258, i32 0, i32 0, !dbg !6110
  %174 = load i16, i16* %offset259, align 4, !dbg !6110
  %conv260 = zext i16 %174 to i32, !dbg !6106
  %cmp261 = icmp ne i32 %conv260, 65535, !dbg !6111
  br i1 %cmp261, label %for.body263, label %for.end279, !dbg !6112

for.body263:                                      ; preds = %for.cond256
  %175 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6113
  %176 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6114
  %init_s2_fec264 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %176, i32 0, i32 3, !dbg !6115
  %177 = load %struct.stb0899_s2_reg*, %struct.stb0899_s2_reg** %init_s2_fec264, align 8, !dbg !6115
  %178 = load i32, i32* %i, align 4, !dbg !6116
  %idxprom265 = sext i32 %178 to i64, !dbg !6114
  %arrayidx266 = getelementptr %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %177, i64 %idxprom265, !dbg !6114
  %base_address267 = getelementptr inbounds %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %arrayidx266, i32 0, i32 1, !dbg !6117
  %179 = load i32, i32* %base_address267, align 4, !dbg !6117
  %180 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6118
  %init_s2_fec268 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %180, i32 0, i32 3, !dbg !6119
  %181 = load %struct.stb0899_s2_reg*, %struct.stb0899_s2_reg** %init_s2_fec268, align 8, !dbg !6119
  %182 = load i32, i32* %i, align 4, !dbg !6120
  %idxprom269 = sext i32 %182 to i64, !dbg !6118
  %arrayidx270 = getelementptr %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %181, i64 %idxprom269, !dbg !6118
  %offset271 = getelementptr inbounds %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %arrayidx270, i32 0, i32 0, !dbg !6121
  %183 = load i16, i16* %offset271, align 4, !dbg !6121
  %184 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6122
  %init_s2_fec272 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %184, i32 0, i32 3, !dbg !6123
  %185 = load %struct.stb0899_s2_reg*, %struct.stb0899_s2_reg** %init_s2_fec272, align 8, !dbg !6123
  %186 = load i32, i32* %i, align 4, !dbg !6124
  %idxprom273 = sext i32 %186 to i64, !dbg !6122
  %arrayidx274 = getelementptr %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %185, i64 %idxprom273, !dbg !6122
  %data275 = getelementptr inbounds %struct.stb0899_s2_reg, %struct.stb0899_s2_reg* %arrayidx274, i32 0, i32 2, !dbg !6125
  %187 = load i32, i32* %data275, align 4, !dbg !6125
  %call276 = call i32 @stb0899_write_s2reg(%struct.stb0899_state* %175, i32 64252, i32 %179, i16 zeroext %183, i32 %187) #8, !dbg !6126
  br label %for.inc277, !dbg !6126

for.inc277:                                       ; preds = %for.body263
  %188 = load i32, i32* %i, align 4, !dbg !6127
  %inc278 = add i32 %188, 1, !dbg !6127
  store i32 %inc278, i32* %i, align 4, !dbg !6127
  br label %for.cond256, !dbg !6128, !llvm.loop !6129

for.end279:                                       ; preds = %for.cond256
  br label %do.body280, !dbg !6131

do.body280:                                       ; preds = %for.end279
  %189 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6132
  %verbose281 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %189, i32 0, i32 3, !dbg !6132
  %190 = load i32*, i32** %verbose281, align 8, !dbg !6132
  %191 = load i32, i32* %190, align 4, !dbg !6132
  %cmp282 = icmp ugt i32 %191, 0, !dbg !6132
  br i1 %cmp282, label %land.lhs.true284, label %if.else290, !dbg !6132

land.lhs.true284:                                 ; preds = %do.body280
  %192 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6132
  %verbose285 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %192, i32 0, i32 3, !dbg !6132
  %193 = load i32*, i32** %verbose285, align 8, !dbg !6132
  %194 = load i32, i32* %193, align 4, !dbg !6132
  %cmp286 = icmp ugt i32 %194, 3, !dbg !6132
  br i1 %cmp286, label %if.then288, label %if.else290, !dbg !6137

if.then288:                                       ; preds = %land.lhs.true284
  %call289 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6132
  br label %if.end323, !dbg !6132

if.else290:                                       ; preds = %land.lhs.true284, %do.body280
  %195 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6138
  %verbose291 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %195, i32 0, i32 3, !dbg !6138
  %196 = load i32*, i32** %verbose291, align 8, !dbg !6138
  %197 = load i32, i32* %196, align 4, !dbg !6138
  %cmp292 = icmp ugt i32 %197, 1, !dbg !6138
  br i1 %cmp292, label %land.lhs.true294, label %if.else300, !dbg !6138

land.lhs.true294:                                 ; preds = %if.else290
  %198 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6138
  %verbose295 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %198, i32 0, i32 3, !dbg !6138
  %199 = load i32*, i32** %verbose295, align 8, !dbg !6138
  %200 = load i32, i32* %199, align 4, !dbg !6138
  %cmp296 = icmp ugt i32 %200, 3, !dbg !6138
  br i1 %cmp296, label %if.then298, label %if.else300, !dbg !6132

if.then298:                                       ; preds = %land.lhs.true294
  %call299 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6138
  br label %if.end322, !dbg !6138

if.else300:                                       ; preds = %land.lhs.true294, %if.else290
  %201 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6140
  %verbose301 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %201, i32 0, i32 3, !dbg !6140
  %202 = load i32*, i32** %verbose301, align 8, !dbg !6140
  %203 = load i32, i32* %202, align 4, !dbg !6140
  %cmp302 = icmp ugt i32 %203, 2, !dbg !6140
  br i1 %cmp302, label %land.lhs.true304, label %if.else310, !dbg !6140

land.lhs.true304:                                 ; preds = %if.else300
  %204 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6140
  %verbose305 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %204, i32 0, i32 3, !dbg !6140
  %205 = load i32*, i32** %verbose305, align 8, !dbg !6140
  %206 = load i32, i32* %205, align 4, !dbg !6140
  %cmp306 = icmp ugt i32 %206, 3, !dbg !6140
  br i1 %cmp306, label %if.then308, label %if.else310, !dbg !6138

if.then308:                                       ; preds = %land.lhs.true304
  %call309 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6140
  br label %if.end321, !dbg !6140

if.else310:                                       ; preds = %land.lhs.true304, %if.else300
  %207 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6142
  %verbose311 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %207, i32 0, i32 3, !dbg !6142
  %208 = load i32*, i32** %verbose311, align 8, !dbg !6142
  %209 = load i32, i32* %208, align 4, !dbg !6142
  %cmp312 = icmp ugt i32 %209, 3, !dbg !6142
  br i1 %cmp312, label %land.lhs.true314, label %if.end320, !dbg !6142

land.lhs.true314:                                 ; preds = %if.else310
  %210 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6142
  %verbose315 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %210, i32 0, i32 3, !dbg !6142
  %211 = load i32*, i32** %verbose315, align 8, !dbg !6142
  %212 = load i32, i32* %211, align 4, !dbg !6142
  %cmp316 = icmp ugt i32 %212, 3, !dbg !6142
  br i1 %cmp316, label %if.then318, label %if.end320, !dbg !6140

if.then318:                                       ; preds = %land.lhs.true314
  %call319 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stb0899_init, i64 0, i64 0)) #9, !dbg !6142
  br label %if.end320, !dbg !6142

if.end320:                                        ; preds = %if.then318, %land.lhs.true314, %if.else310
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.then308
  br label %if.end322

if.end322:                                        ; preds = %if.end321, %if.then298
  br label %if.end323

if.end323:                                        ; preds = %if.end322, %if.then288
  br label %do.end324, !dbg !6144

do.end324:                                        ; preds = %if.end323
  store i32 0, i32* %i, align 4, !dbg !6145
  br label %for.cond325, !dbg !6147

for.cond325:                                      ; preds = %for.inc343, %do.end324
  %213 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6148
  %init_tst = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %213, i32 0, i32 4, !dbg !6150
  %214 = load %struct.stb0899_s1_reg*, %struct.stb0899_s1_reg** %init_tst, align 8, !dbg !6150
  %215 = load i32, i32* %i, align 4, !dbg !6151
  %idxprom326 = sext i32 %215 to i64, !dbg !6148
  %arrayidx327 = getelementptr %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %214, i64 %idxprom326, !dbg !6148
  %address328 = getelementptr inbounds %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %arrayidx327, i32 0, i32 0, !dbg !6152
  %216 = load i16, i16* %address328, align 2, !dbg !6152
  %conv329 = zext i16 %216 to i32, !dbg !6148
  %cmp330 = icmp ne i32 %conv329, 65535, !dbg !6153
  br i1 %cmp330, label %for.body332, label %for.end345, !dbg !6154

for.body332:                                      ; preds = %for.cond325
  %217 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6155
  %218 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6156
  %init_tst333 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %218, i32 0, i32 4, !dbg !6157
  %219 = load %struct.stb0899_s1_reg*, %struct.stb0899_s1_reg** %init_tst333, align 8, !dbg !6157
  %220 = load i32, i32* %i, align 4, !dbg !6158
  %idxprom334 = sext i32 %220 to i64, !dbg !6156
  %arrayidx335 = getelementptr %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %219, i64 %idxprom334, !dbg !6156
  %address336 = getelementptr inbounds %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %arrayidx335, i32 0, i32 0, !dbg !6159
  %221 = load i16, i16* %address336, align 2, !dbg !6159
  %conv337 = zext i16 %221 to i32, !dbg !6156
  %222 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !6160
  %init_tst338 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %222, i32 0, i32 4, !dbg !6161
  %223 = load %struct.stb0899_s1_reg*, %struct.stb0899_s1_reg** %init_tst338, align 8, !dbg !6161
  %224 = load i32, i32* %i, align 4, !dbg !6162
  %idxprom339 = sext i32 %224 to i64, !dbg !6160
  %arrayidx340 = getelementptr %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %223, i64 %idxprom339, !dbg !6160
  %data341 = getelementptr inbounds %struct.stb0899_s1_reg, %struct.stb0899_s1_reg* %arrayidx340, i32 0, i32 1, !dbg !6163
  %225 = load i8, i8* %data341, align 2, !dbg !6163
  %call342 = call i32 @stb0899_write_reg(%struct.stb0899_state* %217, i32 %conv337, i8 zeroext %225) #8, !dbg !6164
  br label %for.inc343, !dbg !6164

for.inc343:                                       ; preds = %for.body332
  %226 = load i32, i32* %i, align 4, !dbg !6165
  %inc344 = add i32 %226, 1, !dbg !6165
  store i32 %inc344, i32* %i, align 4, !dbg !6165
  br label %for.cond325, !dbg !6166, !llvm.loop !6167

for.end345:                                       ; preds = %for.cond325
  %227 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6169
  call void @stb0899_init_calc(%struct.stb0899_state* %227) #8, !dbg !6170
  %228 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6171
  %call346 = call i32 @stb0899_diseqc_init(%struct.stb0899_state* %228) #8, !dbg !6172
  ret i32 0, !dbg !6173
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_sleep(%struct.dvb_frontend* %fe) #0 !dbg !6174 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6175, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !6177, metadata !DIExpression()), !dbg !6178
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6179
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6180
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6180
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !6179
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !6178
  br label %do.body, !dbg !6181

do.body:                                          ; preds = %entry
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6182
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %3, i32 0, i32 3, !dbg !6182
  %4 = load i32*, i32** %verbose, align 8, !dbg !6182
  %5 = load i32, i32* %4, align 4, !dbg !6182
  %cmp = icmp ugt i32 %5, 0, !dbg !6182
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6182

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6182
  %verbose1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %6, i32 0, i32 3, !dbg !6182
  %7 = load i32*, i32** %verbose1, align 8, !dbg !6182
  %8 = load i32, i32* %7, align 4, !dbg !6182
  %cmp2 = icmp ugt i32 %8, 3, !dbg !6182
  br i1 %cmp2, label %if.then, label %if.else, !dbg !6187

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stb0899_sleep, i64 0, i64 0)) #9, !dbg !6182
  br label %if.end28, !dbg !6182

if.else:                                          ; preds = %land.lhs.true, %do.body
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6188
  %verbose3 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %9, i32 0, i32 3, !dbg !6188
  %10 = load i32*, i32** %verbose3, align 8, !dbg !6188
  %11 = load i32, i32* %10, align 4, !dbg !6188
  %cmp4 = icmp ugt i32 %11, 1, !dbg !6188
  br i1 %cmp4, label %land.lhs.true5, label %if.else10, !dbg !6188

land.lhs.true5:                                   ; preds = %if.else
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6188
  %verbose6 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %12, i32 0, i32 3, !dbg !6188
  %13 = load i32*, i32** %verbose6, align 8, !dbg !6188
  %14 = load i32, i32* %13, align 4, !dbg !6188
  %cmp7 = icmp ugt i32 %14, 3, !dbg !6188
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !6182

if.then8:                                         ; preds = %land.lhs.true5
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stb0899_sleep, i64 0, i64 0)) #9, !dbg !6188
  br label %if.end27, !dbg !6188

if.else10:                                        ; preds = %land.lhs.true5, %if.else
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6190
  %verbose11 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %15, i32 0, i32 3, !dbg !6190
  %16 = load i32*, i32** %verbose11, align 8, !dbg !6190
  %17 = load i32, i32* %16, align 4, !dbg !6190
  %cmp12 = icmp ugt i32 %17, 2, !dbg !6190
  br i1 %cmp12, label %land.lhs.true13, label %if.else18, !dbg !6190

land.lhs.true13:                                  ; preds = %if.else10
  %18 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6190
  %verbose14 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %18, i32 0, i32 3, !dbg !6190
  %19 = load i32*, i32** %verbose14, align 8, !dbg !6190
  %20 = load i32, i32* %19, align 4, !dbg !6190
  %cmp15 = icmp ugt i32 %20, 3, !dbg !6190
  br i1 %cmp15, label %if.then16, label %if.else18, !dbg !6188

if.then16:                                        ; preds = %land.lhs.true13
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stb0899_sleep, i64 0, i64 0)) #9, !dbg !6190
  br label %if.end26, !dbg !6190

if.else18:                                        ; preds = %land.lhs.true13, %if.else10
  %21 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6192
  %verbose19 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %21, i32 0, i32 3, !dbg !6192
  %22 = load i32*, i32** %verbose19, align 8, !dbg !6192
  %23 = load i32, i32* %22, align 4, !dbg !6192
  %cmp20 = icmp ugt i32 %23, 3, !dbg !6192
  br i1 %cmp20, label %land.lhs.true21, label %if.end, !dbg !6192

land.lhs.true21:                                  ; preds = %if.else18
  %24 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6192
  %verbose22 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %24, i32 0, i32 3, !dbg !6192
  %25 = load i32*, i32** %verbose22, align 8, !dbg !6192
  %26 = load i32, i32* %25, align 4, !dbg !6192
  %cmp23 = icmp ugt i32 %26, 3, !dbg !6192
  br i1 %cmp23, label %if.then24, label %if.end, !dbg !6190

if.then24:                                        ; preds = %land.lhs.true21
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stb0899_sleep, i64 0, i64 0)) #9, !dbg !6192
  br label %if.end, !dbg !6192

if.end:                                           ; preds = %if.then24, %land.lhs.true21, %if.else18
  br label %if.end26

if.end26:                                         ; preds = %if.end, %if.then16
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then8
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then
  br label %do.end, !dbg !6194

do.end:                                           ; preds = %if.end28
  %27 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6195
  %call29 = call i32 @stb0899_postproc(%struct.stb0899_state* %27, i8 zeroext 0, i32 0) #8, !dbg !6196
  ret i32 0, !dbg !6197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_frontend_algo(%struct.dvb_frontend* %fe) #0 !dbg !6198 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6199, metadata !DIExpression()), !dbg !6200
  ret i32 4, !dbg !6201
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_get_frontend(%struct.dvb_frontend* %fe, %struct.dtv_frontend_properties* %p) #0 !dbg !6202 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %p.addr = alloca %struct.dtv_frontend_properties*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  %internal = alloca %struct.stb0899_internal*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6203, metadata !DIExpression()), !dbg !6204
  store %struct.dtv_frontend_properties* %p, %struct.dtv_frontend_properties** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p.addr, metadata !6205, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !6207, metadata !DIExpression()), !dbg !6208
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6209
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6210
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6210
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !6209
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !6208
  call void @llvm.dbg.declare(metadata %struct.stb0899_internal** %internal, metadata !6211, metadata !DIExpression()), !dbg !6213
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6214
  %internal1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %3, i32 0, i32 4, !dbg !6215
  store %struct.stb0899_internal* %internal1, %struct.stb0899_internal** %internal, align 8, !dbg !6213
  br label %do.body, !dbg !6216

do.body:                                          ; preds = %entry
  %4 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6217
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %4, i32 0, i32 3, !dbg !6217
  %5 = load i32*, i32** %verbose, align 8, !dbg !6217
  %6 = load i32, i32* %5, align 4, !dbg !6217
  %cmp = icmp ugt i32 %6, 0, !dbg !6217
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6217

land.lhs.true:                                    ; preds = %do.body
  %7 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6217
  %verbose2 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %7, i32 0, i32 3, !dbg !6217
  %8 = load i32*, i32** %verbose2, align 8, !dbg !6217
  %9 = load i32, i32* %8, align 4, !dbg !6217
  %cmp3 = icmp ugt i32 %9, 3, !dbg !6217
  br i1 %cmp3, label %if.then, label %if.else, !dbg !6222

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_get_frontend, i64 0, i64 0)) #9, !dbg !6217
  br label %if.end29, !dbg !6217

if.else:                                          ; preds = %land.lhs.true, %do.body
  %10 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6223
  %verbose4 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %10, i32 0, i32 3, !dbg !6223
  %11 = load i32*, i32** %verbose4, align 8, !dbg !6223
  %12 = load i32, i32* %11, align 4, !dbg !6223
  %cmp5 = icmp ugt i32 %12, 1, !dbg !6223
  br i1 %cmp5, label %land.lhs.true6, label %if.else11, !dbg !6223

land.lhs.true6:                                   ; preds = %if.else
  %13 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6223
  %verbose7 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %13, i32 0, i32 3, !dbg !6223
  %14 = load i32*, i32** %verbose7, align 8, !dbg !6223
  %15 = load i32, i32* %14, align 4, !dbg !6223
  %cmp8 = icmp ugt i32 %15, 3, !dbg !6223
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !6217

if.then9:                                         ; preds = %land.lhs.true6
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_get_frontend, i64 0, i64 0)) #9, !dbg !6223
  br label %if.end28, !dbg !6223

if.else11:                                        ; preds = %land.lhs.true6, %if.else
  %16 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6225
  %verbose12 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %16, i32 0, i32 3, !dbg !6225
  %17 = load i32*, i32** %verbose12, align 8, !dbg !6225
  %18 = load i32, i32* %17, align 4, !dbg !6225
  %cmp13 = icmp ugt i32 %18, 2, !dbg !6225
  br i1 %cmp13, label %land.lhs.true14, label %if.else19, !dbg !6225

land.lhs.true14:                                  ; preds = %if.else11
  %19 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6225
  %verbose15 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %19, i32 0, i32 3, !dbg !6225
  %20 = load i32*, i32** %verbose15, align 8, !dbg !6225
  %21 = load i32, i32* %20, align 4, !dbg !6225
  %cmp16 = icmp ugt i32 %21, 3, !dbg !6225
  br i1 %cmp16, label %if.then17, label %if.else19, !dbg !6223

if.then17:                                        ; preds = %land.lhs.true14
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_get_frontend, i64 0, i64 0)) #9, !dbg !6225
  br label %if.end27, !dbg !6225

if.else19:                                        ; preds = %land.lhs.true14, %if.else11
  %22 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6227
  %verbose20 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %22, i32 0, i32 3, !dbg !6227
  %23 = load i32*, i32** %verbose20, align 8, !dbg !6227
  %24 = load i32, i32* %23, align 4, !dbg !6227
  %cmp21 = icmp ugt i32 %24, 3, !dbg !6227
  br i1 %cmp21, label %land.lhs.true22, label %if.end, !dbg !6227

land.lhs.true22:                                  ; preds = %if.else19
  %25 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6227
  %verbose23 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %25, i32 0, i32 3, !dbg !6227
  %26 = load i32*, i32** %verbose23, align 8, !dbg !6227
  %27 = load i32, i32* %26, align 4, !dbg !6227
  %cmp24 = icmp ugt i32 %27, 3, !dbg !6227
  br i1 %cmp24, label %if.then25, label %if.end, !dbg !6225

if.then25:                                        ; preds = %land.lhs.true22
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_get_frontend, i64 0, i64 0)) #9, !dbg !6227
  br label %if.end, !dbg !6227

if.end:                                           ; preds = %if.then25, %land.lhs.true22, %if.else19
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then17
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then9
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then
  br label %do.end, !dbg !6229

do.end:                                           ; preds = %if.end29
  %28 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6230
  %srate = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %28, i32 0, i32 2, !dbg !6231
  %29 = load i32, i32* %srate, align 4, !dbg !6231
  %30 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !6232
  %symbol_rate = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %30, i32 0, i32 10, !dbg !6233
  store i32 %29, i32* %symbol_rate, align 4, !dbg !6234
  %31 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6235
  %freq = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %31, i32 0, i32 1, !dbg !6236
  %32 = load i32, i32* %freq, align 4, !dbg !6236
  %33 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !6237
  %frequency = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %33, i32 0, i32 0, !dbg !6238
  store i32 %32, i32* %frequency, align 4, !dbg !6239
  ret i32 0, !dbg !6240
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_read_status(%struct.dvb_frontend* %fe, i32* %status) #0 !dbg !6241 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %status.addr = alloca i32*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  %internal = alloca %struct.stb0899_internal*, align 8
  %reg = alloca i8, align 1
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6242, metadata !DIExpression()), !dbg !6243
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !6244, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !6246, metadata !DIExpression()), !dbg !6247
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6248
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6249
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6249
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !6248
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !6247
  call void @llvm.dbg.declare(metadata %struct.stb0899_internal** %internal, metadata !6250, metadata !DIExpression()), !dbg !6251
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6252
  %internal1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %3, i32 0, i32 4, !dbg !6253
  store %struct.stb0899_internal* %internal1, %struct.stb0899_internal** %internal, align 8, !dbg !6251
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !6254, metadata !DIExpression()), !dbg !6255
  %4 = load i32*, i32** %status.addr, align 8, !dbg !6256
  store i32 0, i32* %4, align 4, !dbg !6257
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6258
  %delsys = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %5, i32 0, i32 5, !dbg !6259
  %6 = load i32, i32* %delsys, align 4, !dbg !6259
  switch i32 %6, label %sw.default [
    i32 5, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb137
  ], !dbg !6260

sw.bb:                                            ; preds = %entry, %entry
  br label %do.body, !dbg !6261

do.body:                                          ; preds = %sw.bb
  %7 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6263
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %7, i32 0, i32 3, !dbg !6263
  %8 = load i32*, i32** %verbose, align 8, !dbg !6263
  %9 = load i32, i32* %8, align 4, !dbg !6263
  %cmp = icmp ugt i32 %9, 0, !dbg !6263
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6263

land.lhs.true:                                    ; preds = %do.body
  %10 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6263
  %verbose2 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %10, i32 0, i32 3, !dbg !6263
  %11 = load i32*, i32** %verbose2, align 8, !dbg !6263
  %12 = load i32, i32* %11, align 4, !dbg !6263
  %cmp3 = icmp ugt i32 %12, 3, !dbg !6263
  br i1 %cmp3, label %if.then, label %if.else, !dbg !6268

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6263
  br label %if.end29, !dbg !6263

if.else:                                          ; preds = %land.lhs.true, %do.body
  %13 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6269
  %verbose4 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %13, i32 0, i32 3, !dbg !6269
  %14 = load i32*, i32** %verbose4, align 8, !dbg !6269
  %15 = load i32, i32* %14, align 4, !dbg !6269
  %cmp5 = icmp ugt i32 %15, 1, !dbg !6269
  br i1 %cmp5, label %land.lhs.true6, label %if.else11, !dbg !6269

land.lhs.true6:                                   ; preds = %if.else
  %16 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6269
  %verbose7 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %16, i32 0, i32 3, !dbg !6269
  %17 = load i32*, i32** %verbose7, align 8, !dbg !6269
  %18 = load i32, i32* %17, align 4, !dbg !6269
  %cmp8 = icmp ugt i32 %18, 3, !dbg !6269
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !6263

if.then9:                                         ; preds = %land.lhs.true6
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6269
  br label %if.end28, !dbg !6269

if.else11:                                        ; preds = %land.lhs.true6, %if.else
  %19 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6271
  %verbose12 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %19, i32 0, i32 3, !dbg !6271
  %20 = load i32*, i32** %verbose12, align 8, !dbg !6271
  %21 = load i32, i32* %20, align 4, !dbg !6271
  %cmp13 = icmp ugt i32 %21, 2, !dbg !6271
  br i1 %cmp13, label %land.lhs.true14, label %if.else19, !dbg !6271

land.lhs.true14:                                  ; preds = %if.else11
  %22 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6271
  %verbose15 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %22, i32 0, i32 3, !dbg !6271
  %23 = load i32*, i32** %verbose15, align 8, !dbg !6271
  %24 = load i32, i32* %23, align 4, !dbg !6271
  %cmp16 = icmp ugt i32 %24, 3, !dbg !6271
  br i1 %cmp16, label %if.then17, label %if.else19, !dbg !6269

if.then17:                                        ; preds = %land.lhs.true14
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6271
  br label %if.end27, !dbg !6271

if.else19:                                        ; preds = %land.lhs.true14, %if.else11
  %25 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6273
  %verbose20 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %25, i32 0, i32 3, !dbg !6273
  %26 = load i32*, i32** %verbose20, align 8, !dbg !6273
  %27 = load i32, i32* %26, align 4, !dbg !6273
  %cmp21 = icmp ugt i32 %27, 3, !dbg !6273
  br i1 %cmp21, label %land.lhs.true22, label %if.end, !dbg !6273

land.lhs.true22:                                  ; preds = %if.else19
  %28 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6273
  %verbose23 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %28, i32 0, i32 3, !dbg !6273
  %29 = load i32*, i32** %verbose23, align 8, !dbg !6273
  %30 = load i32, i32* %29, align 4, !dbg !6273
  %cmp24 = icmp ugt i32 %30, 3, !dbg !6273
  br i1 %cmp24, label %if.then25, label %if.end, !dbg !6271

if.then25:                                        ; preds = %land.lhs.true22
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6273
  br label %if.end, !dbg !6273

if.end:                                           ; preds = %if.then25, %land.lhs.true22, %if.else19
  br label %if.end27

if.end27:                                         ; preds = %if.end, %if.then17
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then9
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then
  br label %do.end, !dbg !6275

do.end:                                           ; preds = %if.end29
  %31 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6276
  %lock = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %31, i32 0, i32 20, !dbg !6278
  %32 = load i32, i32* %lock, align 4, !dbg !6278
  %tobool = icmp ne i32 %32, 0, !dbg !6276
  br i1 %tobool, label %if.then30, label %if.end136, !dbg !6279

if.then30:                                        ; preds = %do.end
  %33 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6280
  %call31 = call i32 @stb0899_read_reg(%struct.stb0899_state* %33, i32 62733) #8, !dbg !6282
  %conv = trunc i32 %call31 to i8, !dbg !6282
  store i8 %conv, i8* %reg, align 1, !dbg !6283
  %34 = load i8, i8* %reg, align 1, !dbg !6284
  %conv32 = zext i8 %34 to i32, !dbg !6284
  %shr = ashr i32 %conv32, 3, !dbg !6284
  %and = and i32 %shr, 1, !dbg !6284
  %tobool33 = icmp ne i32 %and, 0, !dbg !6284
  br i1 %tobool33, label %if.then34, label %if.end135, !dbg !6286

if.then34:                                        ; preds = %if.then30
  br label %do.body35, !dbg !6287

do.body35:                                        ; preds = %if.then34
  %35 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6289
  %verbose36 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %35, i32 0, i32 3, !dbg !6289
  %36 = load i32*, i32** %verbose36, align 8, !dbg !6289
  %37 = load i32, i32* %36, align 4, !dbg !6289
  %cmp37 = icmp ugt i32 %37, 0, !dbg !6289
  br i1 %cmp37, label %land.lhs.true39, label %if.else45, !dbg !6289

land.lhs.true39:                                  ; preds = %do.body35
  %38 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6289
  %verbose40 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %38, i32 0, i32 3, !dbg !6289
  %39 = load i32*, i32** %verbose40, align 8, !dbg !6289
  %40 = load i32, i32* %39, align 4, !dbg !6289
  %cmp41 = icmp ugt i32 %40, 3, !dbg !6289
  br i1 %cmp41, label %if.then43, label %if.else45, !dbg !6294

if.then43:                                        ; preds = %land.lhs.true39
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6289
  br label %if.end78, !dbg !6289

if.else45:                                        ; preds = %land.lhs.true39, %do.body35
  %41 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6295
  %verbose46 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %41, i32 0, i32 3, !dbg !6295
  %42 = load i32*, i32** %verbose46, align 8, !dbg !6295
  %43 = load i32, i32* %42, align 4, !dbg !6295
  %cmp47 = icmp ugt i32 %43, 1, !dbg !6295
  br i1 %cmp47, label %land.lhs.true49, label %if.else55, !dbg !6295

land.lhs.true49:                                  ; preds = %if.else45
  %44 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6295
  %verbose50 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %44, i32 0, i32 3, !dbg !6295
  %45 = load i32*, i32** %verbose50, align 8, !dbg !6295
  %46 = load i32, i32* %45, align 4, !dbg !6295
  %cmp51 = icmp ugt i32 %46, 3, !dbg !6295
  br i1 %cmp51, label %if.then53, label %if.else55, !dbg !6289

if.then53:                                        ; preds = %land.lhs.true49
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6295
  br label %if.end77, !dbg !6295

if.else55:                                        ; preds = %land.lhs.true49, %if.else45
  %47 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6297
  %verbose56 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %47, i32 0, i32 3, !dbg !6297
  %48 = load i32*, i32** %verbose56, align 8, !dbg !6297
  %49 = load i32, i32* %48, align 4, !dbg !6297
  %cmp57 = icmp ugt i32 %49, 2, !dbg !6297
  br i1 %cmp57, label %land.lhs.true59, label %if.else65, !dbg !6297

land.lhs.true59:                                  ; preds = %if.else55
  %50 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6297
  %verbose60 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %50, i32 0, i32 3, !dbg !6297
  %51 = load i32*, i32** %verbose60, align 8, !dbg !6297
  %52 = load i32, i32* %51, align 4, !dbg !6297
  %cmp61 = icmp ugt i32 %52, 3, !dbg !6297
  br i1 %cmp61, label %if.then63, label %if.else65, !dbg !6295

if.then63:                                        ; preds = %land.lhs.true59
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6297
  br label %if.end76, !dbg !6297

if.else65:                                        ; preds = %land.lhs.true59, %if.else55
  %53 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6299
  %verbose66 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %53, i32 0, i32 3, !dbg !6299
  %54 = load i32*, i32** %verbose66, align 8, !dbg !6299
  %55 = load i32, i32* %54, align 4, !dbg !6299
  %cmp67 = icmp ugt i32 %55, 3, !dbg !6299
  br i1 %cmp67, label %land.lhs.true69, label %if.end75, !dbg !6299

land.lhs.true69:                                  ; preds = %if.else65
  %56 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6299
  %verbose70 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %56, i32 0, i32 3, !dbg !6299
  %57 = load i32*, i32** %verbose70, align 8, !dbg !6299
  %58 = load i32, i32* %57, align 4, !dbg !6299
  %cmp71 = icmp ugt i32 %58, 3, !dbg !6299
  br i1 %cmp71, label %if.then73, label %if.end75, !dbg !6297

if.then73:                                        ; preds = %land.lhs.true69
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6299
  br label %if.end75, !dbg !6299

if.end75:                                         ; preds = %if.then73, %land.lhs.true69, %if.else65
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then63
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then53
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then43
  br label %do.end79, !dbg !6301

do.end79:                                         ; preds = %if.end78
  %59 = load i32*, i32** %status.addr, align 8, !dbg !6302
  %60 = load i32, i32* %59, align 4, !dbg !6303
  %or = or i32 %60, 19, !dbg !6303
  store i32 %or, i32* %59, align 4, !dbg !6303
  %61 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6304
  %call80 = call i32 @stb0899_read_reg(%struct.stb0899_state* %61, i32 62860) #8, !dbg !6305
  %conv81 = trunc i32 %call80 to i8, !dbg !6305
  store i8 %conv81, i8* %reg, align 1, !dbg !6306
  %62 = load i8, i8* %reg, align 1, !dbg !6307
  %conv82 = zext i8 %62 to i32, !dbg !6307
  %shr83 = ashr i32 %conv82, 0, !dbg !6307
  %and84 = and i32 %shr83, 31, !dbg !6307
  %tobool85 = icmp ne i32 %and84, 0, !dbg !6307
  br i1 %tobool85, label %if.then86, label %if.end134, !dbg !6309

if.then86:                                        ; preds = %do.end79
  br label %do.body87, !dbg !6310

do.body87:                                        ; preds = %if.then86
  %63 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6312
  %verbose88 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %63, i32 0, i32 3, !dbg !6312
  %64 = load i32*, i32** %verbose88, align 8, !dbg !6312
  %65 = load i32, i32* %64, align 4, !dbg !6312
  %cmp89 = icmp ugt i32 %65, 0, !dbg !6312
  br i1 %cmp89, label %land.lhs.true91, label %if.else97, !dbg !6312

land.lhs.true91:                                  ; preds = %do.body87
  %66 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6312
  %verbose92 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %66, i32 0, i32 3, !dbg !6312
  %67 = load i32*, i32** %verbose92, align 8, !dbg !6312
  %68 = load i32, i32* %67, align 4, !dbg !6312
  %cmp93 = icmp ugt i32 %68, 3, !dbg !6312
  br i1 %cmp93, label %if.then95, label %if.else97, !dbg !6317

if.then95:                                        ; preds = %land.lhs.true91
  %call96 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6312
  br label %if.end130, !dbg !6312

if.else97:                                        ; preds = %land.lhs.true91, %do.body87
  %69 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6318
  %verbose98 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %69, i32 0, i32 3, !dbg !6318
  %70 = load i32*, i32** %verbose98, align 8, !dbg !6318
  %71 = load i32, i32* %70, align 4, !dbg !6318
  %cmp99 = icmp ugt i32 %71, 1, !dbg !6318
  br i1 %cmp99, label %land.lhs.true101, label %if.else107, !dbg !6318

land.lhs.true101:                                 ; preds = %if.else97
  %72 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6318
  %verbose102 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %72, i32 0, i32 3, !dbg !6318
  %73 = load i32*, i32** %verbose102, align 8, !dbg !6318
  %74 = load i32, i32* %73, align 4, !dbg !6318
  %cmp103 = icmp ugt i32 %74, 3, !dbg !6318
  br i1 %cmp103, label %if.then105, label %if.else107, !dbg !6312

if.then105:                                       ; preds = %land.lhs.true101
  %call106 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6318
  br label %if.end129, !dbg !6318

if.else107:                                       ; preds = %land.lhs.true101, %if.else97
  %75 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6320
  %verbose108 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %75, i32 0, i32 3, !dbg !6320
  %76 = load i32*, i32** %verbose108, align 8, !dbg !6320
  %77 = load i32, i32* %76, align 4, !dbg !6320
  %cmp109 = icmp ugt i32 %77, 2, !dbg !6320
  br i1 %cmp109, label %land.lhs.true111, label %if.else117, !dbg !6320

land.lhs.true111:                                 ; preds = %if.else107
  %78 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6320
  %verbose112 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %78, i32 0, i32 3, !dbg !6320
  %79 = load i32*, i32** %verbose112, align 8, !dbg !6320
  %80 = load i32, i32* %79, align 4, !dbg !6320
  %cmp113 = icmp ugt i32 %80, 3, !dbg !6320
  br i1 %cmp113, label %if.then115, label %if.else117, !dbg !6318

if.then115:                                       ; preds = %land.lhs.true111
  %call116 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6320
  br label %if.end128, !dbg !6320

if.else117:                                       ; preds = %land.lhs.true111, %if.else107
  %81 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6322
  %verbose118 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %81, i32 0, i32 3, !dbg !6322
  %82 = load i32*, i32** %verbose118, align 8, !dbg !6322
  %83 = load i32, i32* %82, align 4, !dbg !6322
  %cmp119 = icmp ugt i32 %83, 3, !dbg !6322
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !6322

land.lhs.true121:                                 ; preds = %if.else117
  %84 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6322
  %verbose122 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %84, i32 0, i32 3, !dbg !6322
  %85 = load i32*, i32** %verbose122, align 8, !dbg !6322
  %86 = load i32, i32* %85, align 4, !dbg !6322
  %cmp123 = icmp ugt i32 %86, 3, !dbg !6322
  br i1 %cmp123, label %if.then125, label %if.end127, !dbg !6320

if.then125:                                       ; preds = %land.lhs.true121
  %call126 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6322
  br label %if.end127, !dbg !6322

if.end127:                                        ; preds = %if.then125, %land.lhs.true121, %if.else117
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then115
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then105
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then95
  br label %do.end131, !dbg !6324

do.end131:                                        ; preds = %if.end130
  %87 = load i32*, i32** %status.addr, align 8, !dbg !6325
  %88 = load i32, i32* %87, align 4, !dbg !6326
  %or132 = or i32 %88, 12, !dbg !6326
  store i32 %or132, i32* %87, align 4, !dbg !6326
  %89 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6327
  %call133 = call i32 @stb0899_postproc(%struct.stb0899_state* %89, i8 zeroext 1, i32 1) #8, !dbg !6328
  br label %if.end134, !dbg !6329

if.end134:                                        ; preds = %do.end131, %do.end79
  br label %if.end135, !dbg !6330

if.end135:                                        ; preds = %if.end134, %if.then30
  br label %if.end136, !dbg !6331

if.end136:                                        ; preds = %if.end135, %do.end
  br label %sw.epilog, !dbg !6332

sw.bb137:                                         ; preds = %entry
  br label %do.body138, !dbg !6333

do.body138:                                       ; preds = %sw.bb137
  %90 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6334
  %verbose139 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %90, i32 0, i32 3, !dbg !6334
  %91 = load i32*, i32** %verbose139, align 8, !dbg !6334
  %92 = load i32, i32* %91, align 4, !dbg !6334
  %cmp140 = icmp ugt i32 %92, 0, !dbg !6334
  br i1 %cmp140, label %land.lhs.true142, label %if.else148, !dbg !6334

land.lhs.true142:                                 ; preds = %do.body138
  %93 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6334
  %verbose143 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %93, i32 0, i32 3, !dbg !6334
  %94 = load i32*, i32** %verbose143, align 8, !dbg !6334
  %95 = load i32, i32* %94, align 4, !dbg !6334
  %cmp144 = icmp ugt i32 %95, 3, !dbg !6334
  br i1 %cmp144, label %if.then146, label %if.else148, !dbg !6339

if.then146:                                       ; preds = %land.lhs.true142
  %call147 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6334
  br label %if.end181, !dbg !6334

if.else148:                                       ; preds = %land.lhs.true142, %do.body138
  %96 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6340
  %verbose149 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %96, i32 0, i32 3, !dbg !6340
  %97 = load i32*, i32** %verbose149, align 8, !dbg !6340
  %98 = load i32, i32* %97, align 4, !dbg !6340
  %cmp150 = icmp ugt i32 %98, 1, !dbg !6340
  br i1 %cmp150, label %land.lhs.true152, label %if.else158, !dbg !6340

land.lhs.true152:                                 ; preds = %if.else148
  %99 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6340
  %verbose153 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %99, i32 0, i32 3, !dbg !6340
  %100 = load i32*, i32** %verbose153, align 8, !dbg !6340
  %101 = load i32, i32* %100, align 4, !dbg !6340
  %cmp154 = icmp ugt i32 %101, 3, !dbg !6340
  br i1 %cmp154, label %if.then156, label %if.else158, !dbg !6334

if.then156:                                       ; preds = %land.lhs.true152
  %call157 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6340
  br label %if.end180, !dbg !6340

if.else158:                                       ; preds = %land.lhs.true152, %if.else148
  %102 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6342
  %verbose159 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %102, i32 0, i32 3, !dbg !6342
  %103 = load i32*, i32** %verbose159, align 8, !dbg !6342
  %104 = load i32, i32* %103, align 4, !dbg !6342
  %cmp160 = icmp ugt i32 %104, 2, !dbg !6342
  br i1 %cmp160, label %land.lhs.true162, label %if.else168, !dbg !6342

land.lhs.true162:                                 ; preds = %if.else158
  %105 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6342
  %verbose163 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %105, i32 0, i32 3, !dbg !6342
  %106 = load i32*, i32** %verbose163, align 8, !dbg !6342
  %107 = load i32, i32* %106, align 4, !dbg !6342
  %cmp164 = icmp ugt i32 %107, 3, !dbg !6342
  br i1 %cmp164, label %if.then166, label %if.else168, !dbg !6340

if.then166:                                       ; preds = %land.lhs.true162
  %call167 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6342
  br label %if.end179, !dbg !6342

if.else168:                                       ; preds = %land.lhs.true162, %if.else158
  %108 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6344
  %verbose169 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %108, i32 0, i32 3, !dbg !6344
  %109 = load i32*, i32** %verbose169, align 8, !dbg !6344
  %110 = load i32, i32* %109, align 4, !dbg !6344
  %cmp170 = icmp ugt i32 %110, 3, !dbg !6344
  br i1 %cmp170, label %land.lhs.true172, label %if.end178, !dbg !6344

land.lhs.true172:                                 ; preds = %if.else168
  %111 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6344
  %verbose173 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %111, i32 0, i32 3, !dbg !6344
  %112 = load i32*, i32** %verbose173, align 8, !dbg !6344
  %113 = load i32, i32* %112, align 4, !dbg !6344
  %cmp174 = icmp ugt i32 %113, 3, !dbg !6344
  br i1 %cmp174, label %if.then176, label %if.end178, !dbg !6342

if.then176:                                       ; preds = %land.lhs.true172
  %call177 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6344
  br label %if.end178, !dbg !6344

if.end178:                                        ; preds = %if.then176, %land.lhs.true172, %if.else168
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.then166
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.then156
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.then146
  br label %do.end182, !dbg !6346

do.end182:                                        ; preds = %if.end181
  %114 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6347
  %lock183 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %114, i32 0, i32 20, !dbg !6349
  %115 = load i32, i32* %lock183, align 4, !dbg !6349
  %tobool184 = icmp ne i32 %115, 0, !dbg !6347
  br i1 %tobool184, label %if.then185, label %if.end404, !dbg !6350

if.then185:                                       ; preds = %do.end182
  %116 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6351
  %call186 = call i32 @_stb0899_read_s2reg(%struct.stb0899_state* %116, i32 62460, i32 1024, i16 zeroext -3264) #8, !dbg !6351
  %conv187 = trunc i32 %call186 to i8, !dbg !6351
  store i8 %conv187, i8* %reg, align 1, !dbg !6353
  %117 = load i8, i8* %reg, align 1, !dbg !6354
  %conv188 = zext i8 %117 to i32, !dbg !6354
  %shr189 = ashr i32 %conv188, 0, !dbg !6354
  %and190 = and i32 %shr189, 1, !dbg !6354
  %tobool191 = icmp ne i32 %and190, 0, !dbg !6354
  br i1 %tobool191, label %land.lhs.true192, label %if.end403, !dbg !6356

land.lhs.true192:                                 ; preds = %if.then185
  %118 = load i8, i8* %reg, align 1, !dbg !6357
  %conv193 = zext i8 %118 to i32, !dbg !6357
  %shr194 = ashr i32 %conv193, 1, !dbg !6357
  %and195 = and i32 %shr194, 1, !dbg !6357
  %tobool196 = icmp ne i32 %and195, 0, !dbg !6357
  br i1 %tobool196, label %if.then197, label %if.end403, !dbg !6358

if.then197:                                       ; preds = %land.lhs.true192
  %119 = load i32*, i32** %status.addr, align 8, !dbg !6359
  %120 = load i32, i32* %119, align 4, !dbg !6361
  %or198 = or i32 %120, 2, !dbg !6361
  store i32 %or198, i32* %119, align 4, !dbg !6361
  br label %do.body199, !dbg !6362

do.body199:                                       ; preds = %if.then197
  %121 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6363
  %verbose200 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %121, i32 0, i32 3, !dbg !6363
  %122 = load i32*, i32** %verbose200, align 8, !dbg !6363
  %123 = load i32, i32* %122, align 4, !dbg !6363
  %cmp201 = icmp ugt i32 %123, 0, !dbg !6363
  br i1 %cmp201, label %land.lhs.true203, label %if.else209, !dbg !6363

land.lhs.true203:                                 ; preds = %do.body199
  %124 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6363
  %verbose204 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %124, i32 0, i32 3, !dbg !6363
  %125 = load i32*, i32** %verbose204, align 8, !dbg !6363
  %126 = load i32, i32* %125, align 4, !dbg !6363
  %cmp205 = icmp ugt i32 %126, 3, !dbg !6363
  br i1 %cmp205, label %if.then207, label %if.else209, !dbg !6368

if.then207:                                       ; preds = %land.lhs.true203
  %call208 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6363
  br label %if.end242, !dbg !6363

if.else209:                                       ; preds = %land.lhs.true203, %do.body199
  %127 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6369
  %verbose210 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %127, i32 0, i32 3, !dbg !6369
  %128 = load i32*, i32** %verbose210, align 8, !dbg !6369
  %129 = load i32, i32* %128, align 4, !dbg !6369
  %cmp211 = icmp ugt i32 %129, 1, !dbg !6369
  br i1 %cmp211, label %land.lhs.true213, label %if.else219, !dbg !6369

land.lhs.true213:                                 ; preds = %if.else209
  %130 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6369
  %verbose214 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %130, i32 0, i32 3, !dbg !6369
  %131 = load i32*, i32** %verbose214, align 8, !dbg !6369
  %132 = load i32, i32* %131, align 4, !dbg !6369
  %cmp215 = icmp ugt i32 %132, 3, !dbg !6369
  br i1 %cmp215, label %if.then217, label %if.else219, !dbg !6363

if.then217:                                       ; preds = %land.lhs.true213
  %call218 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6369
  br label %if.end241, !dbg !6369

if.else219:                                       ; preds = %land.lhs.true213, %if.else209
  %133 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6371
  %verbose220 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %133, i32 0, i32 3, !dbg !6371
  %134 = load i32*, i32** %verbose220, align 8, !dbg !6371
  %135 = load i32, i32* %134, align 4, !dbg !6371
  %cmp221 = icmp ugt i32 %135, 2, !dbg !6371
  br i1 %cmp221, label %land.lhs.true223, label %if.else229, !dbg !6371

land.lhs.true223:                                 ; preds = %if.else219
  %136 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6371
  %verbose224 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %136, i32 0, i32 3, !dbg !6371
  %137 = load i32*, i32** %verbose224, align 8, !dbg !6371
  %138 = load i32, i32* %137, align 4, !dbg !6371
  %cmp225 = icmp ugt i32 %138, 3, !dbg !6371
  br i1 %cmp225, label %if.then227, label %if.else229, !dbg !6369

if.then227:                                       ; preds = %land.lhs.true223
  %call228 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6371
  br label %if.end240, !dbg !6371

if.else229:                                       ; preds = %land.lhs.true223, %if.else219
  %139 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6373
  %verbose230 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %139, i32 0, i32 3, !dbg !6373
  %140 = load i32*, i32** %verbose230, align 8, !dbg !6373
  %141 = load i32, i32* %140, align 4, !dbg !6373
  %cmp231 = icmp ugt i32 %141, 3, !dbg !6373
  br i1 %cmp231, label %land.lhs.true233, label %if.end239, !dbg !6373

land.lhs.true233:                                 ; preds = %if.else229
  %142 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6373
  %verbose234 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %142, i32 0, i32 3, !dbg !6373
  %143 = load i32*, i32** %verbose234, align 8, !dbg !6373
  %144 = load i32, i32* %143, align 4, !dbg !6373
  %cmp235 = icmp ugt i32 %144, 3, !dbg !6373
  br i1 %cmp235, label %if.then237, label %if.end239, !dbg !6371

if.then237:                                       ; preds = %land.lhs.true233
  %call238 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6373
  br label %if.end239, !dbg !6373

if.end239:                                        ; preds = %if.then237, %land.lhs.true233, %if.else229
  br label %if.end240

if.end240:                                        ; preds = %if.end239, %if.then227
  br label %if.end241

if.end241:                                        ; preds = %if.end240, %if.then217
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %if.then207
  br label %do.end243, !dbg !6375

do.end243:                                        ; preds = %if.end242
  %145 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6376
  %call244 = call i32 @stb0899_read_reg(%struct.stb0899_state* %145, i32 63001) #8, !dbg !6377
  %conv245 = trunc i32 %call244 to i8, !dbg !6377
  store i8 %conv245, i8* %reg, align 1, !dbg !6378
  %146 = load i8, i8* %reg, align 1, !dbg !6379
  %conv246 = zext i8 %146 to i32, !dbg !6379
  %shr247 = ashr i32 %conv246, 1, !dbg !6379
  %and248 = and i32 %shr247, 1, !dbg !6379
  %tobool249 = icmp ne i32 %and248, 0, !dbg !6379
  br i1 %tobool249, label %if.then250, label %if.end297, !dbg !6381

if.then250:                                       ; preds = %do.end243
  %147 = load i32*, i32** %status.addr, align 8, !dbg !6382
  %148 = load i32, i32* %147, align 4, !dbg !6384
  %or251 = or i32 %148, 16, !dbg !6384
  store i32 %or251, i32* %147, align 4, !dbg !6384
  br label %do.body252, !dbg !6385

do.body252:                                       ; preds = %if.then250
  %149 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6386
  %verbose253 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %149, i32 0, i32 3, !dbg !6386
  %150 = load i32*, i32** %verbose253, align 8, !dbg !6386
  %151 = load i32, i32* %150, align 4, !dbg !6386
  %cmp254 = icmp ugt i32 %151, 0, !dbg !6386
  br i1 %cmp254, label %land.lhs.true256, label %if.else262, !dbg !6386

land.lhs.true256:                                 ; preds = %do.body252
  %152 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6386
  %verbose257 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %152, i32 0, i32 3, !dbg !6386
  %153 = load i32*, i32** %verbose257, align 8, !dbg !6386
  %154 = load i32, i32* %153, align 4, !dbg !6386
  %cmp258 = icmp ugt i32 %154, 3, !dbg !6386
  br i1 %cmp258, label %if.then260, label %if.else262, !dbg !6391

if.then260:                                       ; preds = %land.lhs.true256
  %call261 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6386
  br label %if.end295, !dbg !6386

if.else262:                                       ; preds = %land.lhs.true256, %do.body252
  %155 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6392
  %verbose263 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %155, i32 0, i32 3, !dbg !6392
  %156 = load i32*, i32** %verbose263, align 8, !dbg !6392
  %157 = load i32, i32* %156, align 4, !dbg !6392
  %cmp264 = icmp ugt i32 %157, 1, !dbg !6392
  br i1 %cmp264, label %land.lhs.true266, label %if.else272, !dbg !6392

land.lhs.true266:                                 ; preds = %if.else262
  %158 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6392
  %verbose267 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %158, i32 0, i32 3, !dbg !6392
  %159 = load i32*, i32** %verbose267, align 8, !dbg !6392
  %160 = load i32, i32* %159, align 4, !dbg !6392
  %cmp268 = icmp ugt i32 %160, 3, !dbg !6392
  br i1 %cmp268, label %if.then270, label %if.else272, !dbg !6386

if.then270:                                       ; preds = %land.lhs.true266
  %call271 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6392
  br label %if.end294, !dbg !6392

if.else272:                                       ; preds = %land.lhs.true266, %if.else262
  %161 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6394
  %verbose273 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %161, i32 0, i32 3, !dbg !6394
  %162 = load i32*, i32** %verbose273, align 8, !dbg !6394
  %163 = load i32, i32* %162, align 4, !dbg !6394
  %cmp274 = icmp ugt i32 %163, 2, !dbg !6394
  br i1 %cmp274, label %land.lhs.true276, label %if.else282, !dbg !6394

land.lhs.true276:                                 ; preds = %if.else272
  %164 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6394
  %verbose277 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %164, i32 0, i32 3, !dbg !6394
  %165 = load i32*, i32** %verbose277, align 8, !dbg !6394
  %166 = load i32, i32* %165, align 4, !dbg !6394
  %cmp278 = icmp ugt i32 %166, 3, !dbg !6394
  br i1 %cmp278, label %if.then280, label %if.else282, !dbg !6392

if.then280:                                       ; preds = %land.lhs.true276
  %call281 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6394
  br label %if.end293, !dbg !6394

if.else282:                                       ; preds = %land.lhs.true276, %if.else272
  %167 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6396
  %verbose283 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %167, i32 0, i32 3, !dbg !6396
  %168 = load i32*, i32** %verbose283, align 8, !dbg !6396
  %169 = load i32, i32* %168, align 4, !dbg !6396
  %cmp284 = icmp ugt i32 %169, 3, !dbg !6396
  br i1 %cmp284, label %land.lhs.true286, label %if.end292, !dbg !6396

land.lhs.true286:                                 ; preds = %if.else282
  %170 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6396
  %verbose287 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %170, i32 0, i32 3, !dbg !6396
  %171 = load i32*, i32** %verbose287, align 8, !dbg !6396
  %172 = load i32, i32* %171, align 4, !dbg !6396
  %cmp288 = icmp ugt i32 %172, 3, !dbg !6396
  br i1 %cmp288, label %if.then290, label %if.end292, !dbg !6394

if.then290:                                       ; preds = %land.lhs.true286
  %call291 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6396
  br label %if.end292, !dbg !6396

if.end292:                                        ; preds = %if.then290, %land.lhs.true286, %if.else282
  br label %if.end293

if.end293:                                        ; preds = %if.end292, %if.then280
  br label %if.end294

if.end294:                                        ; preds = %if.end293, %if.then270
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.then260
  br label %do.end296, !dbg !6398

do.end296:                                        ; preds = %if.end295
  br label %if.end297, !dbg !6399

if.end297:                                        ; preds = %do.end296, %do.end243
  %173 = load i8, i8* %reg, align 1, !dbg !6400
  %conv298 = zext i8 %173 to i32, !dbg !6400
  %shr299 = ashr i32 %conv298, 5, !dbg !6400
  %and300 = and i32 %shr299, 1, !dbg !6400
  %tobool301 = icmp ne i32 %and300, 0, !dbg !6400
  br i1 %tobool301, label %if.then302, label %if.end349, !dbg !6402

if.then302:                                       ; preds = %if.end297
  %174 = load i32*, i32** %status.addr, align 8, !dbg !6403
  %175 = load i32, i32* %174, align 4, !dbg !6405
  %or303 = or i32 %175, 4, !dbg !6405
  store i32 %or303, i32* %174, align 4, !dbg !6405
  br label %do.body304, !dbg !6406

do.body304:                                       ; preds = %if.then302
  %176 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6407
  %verbose305 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %176, i32 0, i32 3, !dbg !6407
  %177 = load i32*, i32** %verbose305, align 8, !dbg !6407
  %178 = load i32, i32* %177, align 4, !dbg !6407
  %cmp306 = icmp ugt i32 %178, 0, !dbg !6407
  br i1 %cmp306, label %land.lhs.true308, label %if.else314, !dbg !6407

land.lhs.true308:                                 ; preds = %do.body304
  %179 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6407
  %verbose309 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %179, i32 0, i32 3, !dbg !6407
  %180 = load i32*, i32** %verbose309, align 8, !dbg !6407
  %181 = load i32, i32* %180, align 4, !dbg !6407
  %cmp310 = icmp ugt i32 %181, 3, !dbg !6407
  br i1 %cmp310, label %if.then312, label %if.else314, !dbg !6412

if.then312:                                       ; preds = %land.lhs.true308
  %call313 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6407
  br label %if.end347, !dbg !6407

if.else314:                                       ; preds = %land.lhs.true308, %do.body304
  %182 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6413
  %verbose315 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %182, i32 0, i32 3, !dbg !6413
  %183 = load i32*, i32** %verbose315, align 8, !dbg !6413
  %184 = load i32, i32* %183, align 4, !dbg !6413
  %cmp316 = icmp ugt i32 %184, 1, !dbg !6413
  br i1 %cmp316, label %land.lhs.true318, label %if.else324, !dbg !6413

land.lhs.true318:                                 ; preds = %if.else314
  %185 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6413
  %verbose319 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %185, i32 0, i32 3, !dbg !6413
  %186 = load i32*, i32** %verbose319, align 8, !dbg !6413
  %187 = load i32, i32* %186, align 4, !dbg !6413
  %cmp320 = icmp ugt i32 %187, 3, !dbg !6413
  br i1 %cmp320, label %if.then322, label %if.else324, !dbg !6407

if.then322:                                       ; preds = %land.lhs.true318
  %call323 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6413
  br label %if.end346, !dbg !6413

if.else324:                                       ; preds = %land.lhs.true318, %if.else314
  %188 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6415
  %verbose325 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %188, i32 0, i32 3, !dbg !6415
  %189 = load i32*, i32** %verbose325, align 8, !dbg !6415
  %190 = load i32, i32* %189, align 4, !dbg !6415
  %cmp326 = icmp ugt i32 %190, 2, !dbg !6415
  br i1 %cmp326, label %land.lhs.true328, label %if.else334, !dbg !6415

land.lhs.true328:                                 ; preds = %if.else324
  %191 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6415
  %verbose329 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %191, i32 0, i32 3, !dbg !6415
  %192 = load i32*, i32** %verbose329, align 8, !dbg !6415
  %193 = load i32, i32* %192, align 4, !dbg !6415
  %cmp330 = icmp ugt i32 %193, 3, !dbg !6415
  br i1 %cmp330, label %if.then332, label %if.else334, !dbg !6413

if.then332:                                       ; preds = %land.lhs.true328
  %call333 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6415
  br label %if.end345, !dbg !6415

if.else334:                                       ; preds = %land.lhs.true328, %if.else324
  %194 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6417
  %verbose335 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %194, i32 0, i32 3, !dbg !6417
  %195 = load i32*, i32** %verbose335, align 8, !dbg !6417
  %196 = load i32, i32* %195, align 4, !dbg !6417
  %cmp336 = icmp ugt i32 %196, 3, !dbg !6417
  br i1 %cmp336, label %land.lhs.true338, label %if.end344, !dbg !6417

land.lhs.true338:                                 ; preds = %if.else334
  %197 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6417
  %verbose339 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %197, i32 0, i32 3, !dbg !6417
  %198 = load i32*, i32** %verbose339, align 8, !dbg !6417
  %199 = load i32, i32* %198, align 4, !dbg !6417
  %cmp340 = icmp ugt i32 %199, 3, !dbg !6417
  br i1 %cmp340, label %if.then342, label %if.end344, !dbg !6415

if.then342:                                       ; preds = %land.lhs.true338
  %call343 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6417
  br label %if.end344, !dbg !6417

if.end344:                                        ; preds = %if.then342, %land.lhs.true338, %if.else334
  br label %if.end345

if.end345:                                        ; preds = %if.end344, %if.then332
  br label %if.end346

if.end346:                                        ; preds = %if.end345, %if.then322
  br label %if.end347

if.end347:                                        ; preds = %if.end346, %if.then312
  br label %do.end348, !dbg !6419

do.end348:                                        ; preds = %if.end347
  br label %if.end349, !dbg !6420

if.end349:                                        ; preds = %do.end348, %if.end297
  %200 = load i8, i8* %reg, align 1, !dbg !6421
  %conv350 = zext i8 %200 to i32, !dbg !6421
  %shr351 = ashr i32 %conv350, 4, !dbg !6421
  %and352 = and i32 %shr351, 1, !dbg !6421
  %tobool353 = icmp ne i32 %and352, 0, !dbg !6421
  br i1 %tobool353, label %if.then354, label %if.end402, !dbg !6423

if.then354:                                       ; preds = %if.end349
  %201 = load i32*, i32** %status.addr, align 8, !dbg !6424
  %202 = load i32, i32* %201, align 4, !dbg !6426
  %or355 = or i32 %202, 8, !dbg !6426
  store i32 %or355, i32* %201, align 4, !dbg !6426
  br label %do.body356, !dbg !6427

do.body356:                                       ; preds = %if.then354
  %203 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6428
  %verbose357 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %203, i32 0, i32 3, !dbg !6428
  %204 = load i32*, i32** %verbose357, align 8, !dbg !6428
  %205 = load i32, i32* %204, align 4, !dbg !6428
  %cmp358 = icmp ugt i32 %205, 0, !dbg !6428
  br i1 %cmp358, label %land.lhs.true360, label %if.else366, !dbg !6428

land.lhs.true360:                                 ; preds = %do.body356
  %206 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6428
  %verbose361 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %206, i32 0, i32 3, !dbg !6428
  %207 = load i32*, i32** %verbose361, align 8, !dbg !6428
  %208 = load i32, i32* %207, align 4, !dbg !6428
  %cmp362 = icmp ugt i32 %208, 3, !dbg !6428
  br i1 %cmp362, label %if.then364, label %if.else366, !dbg !6433

if.then364:                                       ; preds = %land.lhs.true360
  %call365 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6428
  br label %if.end399, !dbg !6428

if.else366:                                       ; preds = %land.lhs.true360, %do.body356
  %209 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6434
  %verbose367 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %209, i32 0, i32 3, !dbg !6434
  %210 = load i32*, i32** %verbose367, align 8, !dbg !6434
  %211 = load i32, i32* %210, align 4, !dbg !6434
  %cmp368 = icmp ugt i32 %211, 1, !dbg !6434
  br i1 %cmp368, label %land.lhs.true370, label %if.else376, !dbg !6434

land.lhs.true370:                                 ; preds = %if.else366
  %212 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6434
  %verbose371 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %212, i32 0, i32 3, !dbg !6434
  %213 = load i32*, i32** %verbose371, align 8, !dbg !6434
  %214 = load i32, i32* %213, align 4, !dbg !6434
  %cmp372 = icmp ugt i32 %214, 3, !dbg !6434
  br i1 %cmp372, label %if.then374, label %if.else376, !dbg !6428

if.then374:                                       ; preds = %land.lhs.true370
  %call375 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6434
  br label %if.end398, !dbg !6434

if.else376:                                       ; preds = %land.lhs.true370, %if.else366
  %215 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6436
  %verbose377 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %215, i32 0, i32 3, !dbg !6436
  %216 = load i32*, i32** %verbose377, align 8, !dbg !6436
  %217 = load i32, i32* %216, align 4, !dbg !6436
  %cmp378 = icmp ugt i32 %217, 2, !dbg !6436
  br i1 %cmp378, label %land.lhs.true380, label %if.else386, !dbg !6436

land.lhs.true380:                                 ; preds = %if.else376
  %218 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6436
  %verbose381 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %218, i32 0, i32 3, !dbg !6436
  %219 = load i32*, i32** %verbose381, align 8, !dbg !6436
  %220 = load i32, i32* %219, align 4, !dbg !6436
  %cmp382 = icmp ugt i32 %220, 3, !dbg !6436
  br i1 %cmp382, label %if.then384, label %if.else386, !dbg !6434

if.then384:                                       ; preds = %land.lhs.true380
  %call385 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6436
  br label %if.end397, !dbg !6436

if.else386:                                       ; preds = %land.lhs.true380, %if.else376
  %221 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6438
  %verbose387 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %221, i32 0, i32 3, !dbg !6438
  %222 = load i32*, i32** %verbose387, align 8, !dbg !6438
  %223 = load i32, i32* %222, align 4, !dbg !6438
  %cmp388 = icmp ugt i32 %223, 3, !dbg !6438
  br i1 %cmp388, label %land.lhs.true390, label %if.end396, !dbg !6438

land.lhs.true390:                                 ; preds = %if.else386
  %224 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6438
  %verbose391 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %224, i32 0, i32 3, !dbg !6438
  %225 = load i32*, i32** %verbose391, align 8, !dbg !6438
  %226 = load i32, i32* %225, align 4, !dbg !6438
  %cmp392 = icmp ugt i32 %226, 3, !dbg !6438
  br i1 %cmp392, label %if.then394, label %if.end396, !dbg !6436

if.then394:                                       ; preds = %land.lhs.true390
  %call395 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6438
  br label %if.end396, !dbg !6438

if.end396:                                        ; preds = %if.then394, %land.lhs.true390, %if.else386
  br label %if.end397

if.end397:                                        ; preds = %if.end396, %if.then384
  br label %if.end398

if.end398:                                        ; preds = %if.end397, %if.then374
  br label %if.end399

if.end399:                                        ; preds = %if.end398, %if.then364
  br label %do.end400, !dbg !6440

do.end400:                                        ; preds = %if.end399
  %227 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6441
  %call401 = call i32 @stb0899_postproc(%struct.stb0899_state* %227, i8 zeroext 1, i32 1) #8, !dbg !6442
  br label %if.end402, !dbg !6443

if.end402:                                        ; preds = %do.end400, %if.end349
  br label %if.end403, !dbg !6444

if.end403:                                        ; preds = %if.end402, %land.lhs.true192, %if.then185
  br label %if.end404, !dbg !6445

if.end404:                                        ; preds = %if.end403, %do.end182
  br label %sw.epilog, !dbg !6446

sw.default:                                       ; preds = %entry
  br label %do.body405, !dbg !6447

do.body405:                                       ; preds = %sw.default
  %228 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6448
  %verbose406 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %228, i32 0, i32 3, !dbg !6448
  %229 = load i32*, i32** %verbose406, align 8, !dbg !6448
  %230 = load i32, i32* %229, align 4, !dbg !6448
  %cmp407 = icmp ugt i32 %230, 0, !dbg !6448
  br i1 %cmp407, label %land.lhs.true409, label %if.else415, !dbg !6448

land.lhs.true409:                                 ; preds = %do.body405
  %231 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6448
  %verbose410 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %231, i32 0, i32 3, !dbg !6448
  %232 = load i32*, i32** %verbose410, align 8, !dbg !6448
  %233 = load i32, i32* %232, align 4, !dbg !6448
  %cmp411 = icmp ugt i32 %233, 3, !dbg !6448
  br i1 %cmp411, label %if.then413, label %if.else415, !dbg !6453

if.then413:                                       ; preds = %land.lhs.true409
  %call414 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6448
  br label %if.end448, !dbg !6448

if.else415:                                       ; preds = %land.lhs.true409, %do.body405
  %234 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6454
  %verbose416 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %234, i32 0, i32 3, !dbg !6454
  %235 = load i32*, i32** %verbose416, align 8, !dbg !6454
  %236 = load i32, i32* %235, align 4, !dbg !6454
  %cmp417 = icmp ugt i32 %236, 1, !dbg !6454
  br i1 %cmp417, label %land.lhs.true419, label %if.else425, !dbg !6454

land.lhs.true419:                                 ; preds = %if.else415
  %237 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6454
  %verbose420 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %237, i32 0, i32 3, !dbg !6454
  %238 = load i32*, i32** %verbose420, align 8, !dbg !6454
  %239 = load i32, i32* %238, align 4, !dbg !6454
  %cmp421 = icmp ugt i32 %239, 3, !dbg !6454
  br i1 %cmp421, label %if.then423, label %if.else425, !dbg !6448

if.then423:                                       ; preds = %land.lhs.true419
  %call424 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6454
  br label %if.end447, !dbg !6454

if.else425:                                       ; preds = %land.lhs.true419, %if.else415
  %240 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6456
  %verbose426 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %240, i32 0, i32 3, !dbg !6456
  %241 = load i32*, i32** %verbose426, align 8, !dbg !6456
  %242 = load i32, i32* %241, align 4, !dbg !6456
  %cmp427 = icmp ugt i32 %242, 2, !dbg !6456
  br i1 %cmp427, label %land.lhs.true429, label %if.else435, !dbg !6456

land.lhs.true429:                                 ; preds = %if.else425
  %243 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6456
  %verbose430 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %243, i32 0, i32 3, !dbg !6456
  %244 = load i32*, i32** %verbose430, align 8, !dbg !6456
  %245 = load i32, i32* %244, align 4, !dbg !6456
  %cmp431 = icmp ugt i32 %245, 3, !dbg !6456
  br i1 %cmp431, label %if.then433, label %if.else435, !dbg !6454

if.then433:                                       ; preds = %land.lhs.true429
  %call434 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6456
  br label %if.end446, !dbg !6456

if.else435:                                       ; preds = %land.lhs.true429, %if.else425
  %246 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6458
  %verbose436 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %246, i32 0, i32 3, !dbg !6458
  %247 = load i32*, i32** %verbose436, align 8, !dbg !6458
  %248 = load i32, i32* %247, align 4, !dbg !6458
  %cmp437 = icmp ugt i32 %248, 3, !dbg !6458
  br i1 %cmp437, label %land.lhs.true439, label %if.end445, !dbg !6458

land.lhs.true439:                                 ; preds = %if.else435
  %249 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6458
  %verbose440 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %249, i32 0, i32 3, !dbg !6458
  %250 = load i32*, i32** %verbose440, align 8, !dbg !6458
  %251 = load i32, i32* %250, align 4, !dbg !6458
  %cmp441 = icmp ugt i32 %251, 3, !dbg !6458
  br i1 %cmp441, label %if.then443, label %if.end445, !dbg !6456

if.then443:                                       ; preds = %land.lhs.true439
  %call444 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stb0899_read_status, i64 0, i64 0)) #9, !dbg !6458
  br label %if.end445, !dbg !6458

if.end445:                                        ; preds = %if.then443, %land.lhs.true439, %if.else435
  br label %if.end446

if.end446:                                        ; preds = %if.end445, %if.then433
  br label %if.end447

if.end447:                                        ; preds = %if.end446, %if.then423
  br label %if.end448

if.end448:                                        ; preds = %if.end447, %if.then413
  br label %do.end449, !dbg !6460

do.end449:                                        ; preds = %if.end448
  store i32 -22, i32* %retval, align 4, !dbg !6461
  br label %return, !dbg !6461

sw.epilog:                                        ; preds = %if.end404, %if.end136
  store i32 0, i32* %retval, align 4, !dbg !6462
  br label %return, !dbg !6462

return:                                           ; preds = %sw.epilog, %do.end449
  %252 = load i32, i32* %retval, align 4, !dbg !6463
  ret i32 %252, !dbg !6463
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_read_ber(%struct.dvb_frontend* %fe, i32* %ber) #0 !dbg !6464 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %ber.addr = alloca i32*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  %internal = alloca %struct.stb0899_internal*, align 8
  %lsb = alloca i8, align 1
  %msb = alloca i8, align 1
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6465, metadata !DIExpression()), !dbg !6466
  store i32* %ber, i32** %ber.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ber.addr, metadata !6467, metadata !DIExpression()), !dbg !6468
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !6469, metadata !DIExpression()), !dbg !6470
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6471
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6472
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6472
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !6471
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !6470
  call void @llvm.dbg.declare(metadata %struct.stb0899_internal** %internal, metadata !6473, metadata !DIExpression()), !dbg !6474
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6475
  %internal1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %3, i32 0, i32 4, !dbg !6476
  store %struct.stb0899_internal* %internal1, %struct.stb0899_internal** %internal, align 8, !dbg !6474
  call void @llvm.dbg.declare(metadata i8* %lsb, metadata !6477, metadata !DIExpression()), !dbg !6478
  call void @llvm.dbg.declare(metadata i8* %msb, metadata !6479, metadata !DIExpression()), !dbg !6480
  %4 = load i32*, i32** %ber.addr, align 8, !dbg !6481
  store i32 0, i32* %4, align 4, !dbg !6482
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6483
  %delsys = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %5, i32 0, i32 5, !dbg !6484
  %6 = load i32, i32* %delsys, align 4, !dbg !6484
  switch i32 %6, label %sw.default [
    i32 5, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb16
  ], !dbg !6485

sw.bb:                                            ; preds = %entry, %entry
  %7 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6486
  %lock = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %7, i32 0, i32 20, !dbg !6489
  %8 = load i32, i32* %lock, align 4, !dbg !6489
  %tobool = icmp ne i32 %8, 0, !dbg !6486
  br i1 %tobool, label %if.then, label %if.end15, !dbg !6490

if.then:                                          ; preds = %sw.bb
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6491
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %9, i32 62757) #8, !dbg !6493
  %conv = trunc i32 %call to i8, !dbg !6493
  store i8 %conv, i8* %lsb, align 1, !dbg !6494
  %10 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6495
  %call2 = call i32 @stb0899_read_reg(%struct.stb0899_state* %10, i32 62756) #8, !dbg !6496
  %conv3 = trunc i32 %call2 to i8, !dbg !6496
  store i8 %conv3, i8* %msb, align 1, !dbg !6497
  %11 = load i8, i8* %msb, align 1, !dbg !6498
  %conv4 = zext i8 %11 to i32, !dbg !6498
  %shl = shl i32 %conv4, 8, !dbg !6498
  %12 = load i8, i8* %lsb, align 1, !dbg !6498
  %conv5 = zext i8 %12 to i32, !dbg !6498
  %or = or i32 %shl, %conv5, !dbg !6498
  %13 = load i32*, i32** %ber.addr, align 8, !dbg !6499
  store i32 %or, i32* %13, align 4, !dbg !6500
  %14 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6501
  %v_status = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %14, i32 0, i32 32, !dbg !6501
  %15 = load i8, i8* %v_status, align 4, !dbg !6501
  %conv6 = zext i8 %15 to i32, !dbg !6501
  %shr = ashr i32 %conv6, 4, !dbg !6501
  %and = and i32 %shr, 1, !dbg !6501
  %tobool7 = icmp ne i32 %and, 0, !dbg !6501
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !6503

if.then8:                                         ; preds = %if.then
  %16 = load i32*, i32** %ber.addr, align 8, !dbg !6504
  %17 = load i32, i32* %16, align 4, !dbg !6506
  %mul = mul i32 %17, 9766, !dbg !6506
  store i32 %mul, i32* %16, align 4, !dbg !6506
  %18 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6507
  %err_ctrl = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %18, i32 0, i32 33, !dbg !6507
  %19 = load i8, i8* %err_ctrl, align 1, !dbg !6507
  %conv9 = zext i8 %19 to i32, !dbg !6507
  %shr10 = ashr i32 %conv9, 0, !dbg !6507
  %and11 = and i32 %shr10, 7, !dbg !6507
  %mul12 = mul i32 2, %and11, !dbg !6508
  %shl13 = shl i32 1, %mul12, !dbg !6509
  %add = add i32 -1, %shl13, !dbg !6510
  %20 = load i32*, i32** %ber.addr, align 8, !dbg !6511
  %21 = load i32, i32* %20, align 4, !dbg !6512
  %div = udiv i32 %21, %add, !dbg !6512
  store i32 %div, i32* %20, align 4, !dbg !6512
  %22 = load i32*, i32** %ber.addr, align 8, !dbg !6513
  %23 = load i32, i32* %22, align 4, !dbg !6514
  %div14 = udiv i32 %23, 8, !dbg !6514
  store i32 %div14, i32* %22, align 4, !dbg !6514
  br label %if.end, !dbg !6515

if.end:                                           ; preds = %if.then8, %if.then
  br label %if.end15, !dbg !6516

if.end15:                                         ; preds = %if.end, %sw.bb
  br label %sw.epilog, !dbg !6517

sw.bb16:                                          ; preds = %entry
  %24 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6518
  %lock17 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %24, i32 0, i32 20, !dbg !6520
  %25 = load i32, i32* %lock17, align 4, !dbg !6520
  %tobool18 = icmp ne i32 %25, 0, !dbg !6518
  br i1 %tobool18, label %if.then19, label %if.end38, !dbg !6521

if.then19:                                        ; preds = %sw.bb16
  %26 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6522
  %call20 = call i32 @stb0899_read_reg(%struct.stb0899_state* %26, i32 62757) #8, !dbg !6524
  %conv21 = trunc i32 %call20 to i8, !dbg !6524
  store i8 %conv21, i8* %lsb, align 1, !dbg !6525
  %27 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6526
  %call22 = call i32 @stb0899_read_reg(%struct.stb0899_state* %27, i32 62756) #8, !dbg !6527
  %conv23 = trunc i32 %call22 to i8, !dbg !6527
  store i8 %conv23, i8* %msb, align 1, !dbg !6528
  %28 = load i8, i8* %msb, align 1, !dbg !6529
  %conv24 = zext i8 %28 to i32, !dbg !6529
  %shl25 = shl i32 %conv24, 8, !dbg !6529
  %29 = load i8, i8* %lsb, align 1, !dbg !6529
  %conv26 = zext i8 %29 to i32, !dbg !6529
  %or27 = or i32 %shl25, %conv26, !dbg !6529
  %30 = load i32*, i32** %ber.addr, align 8, !dbg !6530
  store i32 %or27, i32* %30, align 4, !dbg !6531
  %31 = load i32*, i32** %ber.addr, align 8, !dbg !6532
  %32 = load i32, i32* %31, align 4, !dbg !6533
  %mul28 = mul i32 %32, 10000000, !dbg !6533
  store i32 %mul28, i32* %31, align 4, !dbg !6533
  %33 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6534
  %err_ctrl29 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %33, i32 0, i32 33, !dbg !6534
  %34 = load i8, i8* %err_ctrl29, align 1, !dbg !6534
  %conv30 = zext i8 %34 to i32, !dbg !6534
  %shr31 = ashr i32 %conv30, 0, !dbg !6534
  %and32 = and i32 %shr31, 7, !dbg !6534
  %mul33 = mul i32 2, %and32, !dbg !6535
  %add34 = add i32 4, %mul33, !dbg !6536
  %shl35 = shl i32 1, %add34, !dbg !6537
  %add36 = add i32 -1, %shl35, !dbg !6538
  %35 = load i32*, i32** %ber.addr, align 8, !dbg !6539
  %36 = load i32, i32* %35, align 4, !dbg !6540
  %div37 = udiv i32 %36, %add36, !dbg !6540
  store i32 %div37, i32* %35, align 4, !dbg !6540
  br label %if.end38, !dbg !6541

if.end38:                                         ; preds = %if.then19, %sw.bb16
  br label %sw.epilog, !dbg !6542

sw.default:                                       ; preds = %entry
  br label %do.body, !dbg !6543

do.body:                                          ; preds = %sw.default
  %37 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6544
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %37, i32 0, i32 3, !dbg !6544
  %38 = load i32*, i32** %verbose, align 8, !dbg !6544
  %39 = load i32, i32* %38, align 4, !dbg !6544
  %cmp = icmp ugt i32 %39, 0, !dbg !6544
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6544

land.lhs.true:                                    ; preds = %do.body
  %40 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6544
  %verbose40 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %40, i32 0, i32 3, !dbg !6544
  %41 = load i32*, i32** %verbose40, align 8, !dbg !6544
  %42 = load i32, i32* %41, align 4, !dbg !6544
  %cmp41 = icmp ugt i32 %42, 3, !dbg !6544
  br i1 %cmp41, label %if.then43, label %if.else, !dbg !6549

if.then43:                                        ; preds = %land.lhs.true
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_ber, i64 0, i64 0)) #9, !dbg !6544
  br label %if.end77, !dbg !6544

if.else:                                          ; preds = %land.lhs.true, %do.body
  %43 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6550
  %verbose45 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %43, i32 0, i32 3, !dbg !6550
  %44 = load i32*, i32** %verbose45, align 8, !dbg !6550
  %45 = load i32, i32* %44, align 4, !dbg !6550
  %cmp46 = icmp ugt i32 %45, 1, !dbg !6550
  br i1 %cmp46, label %land.lhs.true48, label %if.else54, !dbg !6550

land.lhs.true48:                                  ; preds = %if.else
  %46 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6550
  %verbose49 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %46, i32 0, i32 3, !dbg !6550
  %47 = load i32*, i32** %verbose49, align 8, !dbg !6550
  %48 = load i32, i32* %47, align 4, !dbg !6550
  %cmp50 = icmp ugt i32 %48, 3, !dbg !6550
  br i1 %cmp50, label %if.then52, label %if.else54, !dbg !6544

if.then52:                                        ; preds = %land.lhs.true48
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_ber, i64 0, i64 0)) #9, !dbg !6550
  br label %if.end76, !dbg !6550

if.else54:                                        ; preds = %land.lhs.true48, %if.else
  %49 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6552
  %verbose55 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %49, i32 0, i32 3, !dbg !6552
  %50 = load i32*, i32** %verbose55, align 8, !dbg !6552
  %51 = load i32, i32* %50, align 4, !dbg !6552
  %cmp56 = icmp ugt i32 %51, 2, !dbg !6552
  br i1 %cmp56, label %land.lhs.true58, label %if.else64, !dbg !6552

land.lhs.true58:                                  ; preds = %if.else54
  %52 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6552
  %verbose59 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %52, i32 0, i32 3, !dbg !6552
  %53 = load i32*, i32** %verbose59, align 8, !dbg !6552
  %54 = load i32, i32* %53, align 4, !dbg !6552
  %cmp60 = icmp ugt i32 %54, 3, !dbg !6552
  br i1 %cmp60, label %if.then62, label %if.else64, !dbg !6550

if.then62:                                        ; preds = %land.lhs.true58
  %call63 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_ber, i64 0, i64 0)) #9, !dbg !6552
  br label %if.end75, !dbg !6552

if.else64:                                        ; preds = %land.lhs.true58, %if.else54
  %55 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6554
  %verbose65 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %55, i32 0, i32 3, !dbg !6554
  %56 = load i32*, i32** %verbose65, align 8, !dbg !6554
  %57 = load i32, i32* %56, align 4, !dbg !6554
  %cmp66 = icmp ugt i32 %57, 3, !dbg !6554
  br i1 %cmp66, label %land.lhs.true68, label %if.end74, !dbg !6554

land.lhs.true68:                                  ; preds = %if.else64
  %58 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6554
  %verbose69 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %58, i32 0, i32 3, !dbg !6554
  %59 = load i32*, i32** %verbose69, align 8, !dbg !6554
  %60 = load i32, i32* %59, align 4, !dbg !6554
  %cmp70 = icmp ugt i32 %60, 3, !dbg !6554
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !6552

if.then72:                                        ; preds = %land.lhs.true68
  %call73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_ber, i64 0, i64 0)) #9, !dbg !6554
  br label %if.end74, !dbg !6554

if.end74:                                         ; preds = %if.then72, %land.lhs.true68, %if.else64
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then62
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then52
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then43
  br label %do.end, !dbg !6556

do.end:                                           ; preds = %if.end77
  store i32 -22, i32* %retval, align 4, !dbg !6557
  br label %return, !dbg !6557

sw.epilog:                                        ; preds = %if.end38, %if.end15
  store i32 0, i32* %retval, align 4, !dbg !6558
  br label %return, !dbg !6558

return:                                           ; preds = %sw.epilog, %do.end
  %61 = load i32, i32* %retval, align 4, !dbg !6559
  ret i32 %61, !dbg !6559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_read_signal_strength(%struct.dvb_frontend* %fe, i16* %strength) #0 !dbg !6560 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %strength.addr = alloca i16*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  %internal = alloca %struct.stb0899_internal*, align 8
  %val = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6561, metadata !DIExpression()), !dbg !6562
  store i16* %strength, i16** %strength.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %strength.addr, metadata !6563, metadata !DIExpression()), !dbg !6564
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !6565, metadata !DIExpression()), !dbg !6566
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6567
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6568
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6568
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !6567
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !6566
  call void @llvm.dbg.declare(metadata %struct.stb0899_internal** %internal, metadata !6569, metadata !DIExpression()), !dbg !6570
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6571
  %internal1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %3, i32 0, i32 4, !dbg !6572
  store %struct.stb0899_internal* %internal1, %struct.stb0899_internal** %internal, align 8, !dbg !6570
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6573, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !6575, metadata !DIExpression()), !dbg !6576
  %4 = load i16*, i16** %strength.addr, align 8, !dbg !6577
  store i16 0, i16* %4, align 2, !dbg !6578
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6579
  %delsys = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %5, i32 0, i32 5, !dbg !6580
  %6 = load i32, i32* %delsys, align 4, !dbg !6580
  switch i32 %6, label %sw.default [
    i32 5, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb60
  ], !dbg !6581

sw.bb:                                            ; preds = %entry, %entry
  %7 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6582
  %lock = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %7, i32 0, i32 20, !dbg !6585
  %8 = load i32, i32* %lock, align 4, !dbg !6585
  %tobool = icmp ne i32 %8, 0, !dbg !6582
  br i1 %tobool, label %if.then, label %if.end59, !dbg !6586

if.then:                                          ; preds = %sw.bb
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6587
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %9, i32 62733) #8, !dbg !6589
  store i32 %call, i32* %reg, align 4, !dbg !6590
  %10 = load i32, i32* %reg, align 4, !dbg !6591
  %shr = lshr i32 %10, 3, !dbg !6591
  %and = and i32 %shr, 1, !dbg !6591
  %tobool2 = icmp ne i32 %and, 0, !dbg !6591
  br i1 %tobool2, label %if.then3, label %if.end58, !dbg !6593

if.then3:                                         ; preds = %if.then
  %11 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6594
  %call4 = call i32 @stb0899_read_reg(%struct.stb0899_state* %11, i32 62510) #8, !dbg !6596
  store i32 %call4, i32* %reg, align 4, !dbg !6597
  %12 = load i32, i32* %reg, align 4, !dbg !6598
  %shr5 = lshr i32 %12, 0, !dbg !6598
  %and6 = and i32 %shr5, 255, !dbg !6598
  %conv = trunc i32 %and6 to i8, !dbg !6599
  %conv7 = sext i8 %conv to i32, !dbg !6600
  store i32 %conv7, i32* %val, align 4, !dbg !6601
  %13 = load i32, i32* %val, align 4, !dbg !6602
  %call8 = call i32 @stb0899_table_lookup(%struct.stb0899_tab* getelementptr inbounds ([31 x %struct.stb0899_tab], [31 x %struct.stb0899_tab]* @stb0899_dvbsrf_tab, i64 0, i64 0), i32 30, i32 %13) #8, !dbg !6603
  %conv9 = trunc i32 %call8 to i16, !dbg !6603
  %14 = load i16*, i16** %strength.addr, align 8, !dbg !6604
  store i16 %conv9, i16* %14, align 2, !dbg !6605
  %15 = load i16*, i16** %strength.addr, align 8, !dbg !6606
  %16 = load i16, i16* %15, align 2, !dbg !6607
  %conv10 = zext i16 %16 to i32, !dbg !6607
  %add = add i32 %conv10, 750, !dbg !6607
  %conv11 = trunc i32 %add to i16, !dbg !6607
  store i16 %conv11, i16* %15, align 2, !dbg !6607
  br label %do.body, !dbg !6608

do.body:                                          ; preds = %if.then3
  %17 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6609
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %17, i32 0, i32 3, !dbg !6609
  %18 = load i32*, i32** %verbose, align 8, !dbg !6609
  %19 = load i32, i32* %18, align 4, !dbg !6609
  %cmp = icmp ugt i32 %19, 0, !dbg !6609
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6609

land.lhs.true:                                    ; preds = %do.body
  %20 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6609
  %verbose13 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %20, i32 0, i32 3, !dbg !6609
  %21 = load i32*, i32** %verbose13, align 8, !dbg !6609
  %22 = load i32, i32* %21, align 4, !dbg !6609
  %cmp14 = icmp ugt i32 %22, 3, !dbg !6609
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !6614

if.then16:                                        ; preds = %land.lhs.true
  %23 = load i32, i32* %val, align 4, !dbg !6609
  %and17 = and i32 %23, 255, !dbg !6609
  %24 = load i16*, i16** %strength.addr, align 8, !dbg !6609
  %25 = load i16, i16* %24, align 2, !dbg !6609
  %conv18 = zext i16 %25 to i32, !dbg !6609
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0), i32 %and17, i32 %conv18) #9, !dbg !6609
  br label %if.end57, !dbg !6609

if.else:                                          ; preds = %land.lhs.true, %do.body
  %26 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6615
  %verbose20 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %26, i32 0, i32 3, !dbg !6615
  %27 = load i32*, i32** %verbose20, align 8, !dbg !6615
  %28 = load i32, i32* %27, align 4, !dbg !6615
  %cmp21 = icmp ugt i32 %28, 1, !dbg !6615
  br i1 %cmp21, label %land.lhs.true23, label %if.else31, !dbg !6615

land.lhs.true23:                                  ; preds = %if.else
  %29 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6615
  %verbose24 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %29, i32 0, i32 3, !dbg !6615
  %30 = load i32*, i32** %verbose24, align 8, !dbg !6615
  %31 = load i32, i32* %30, align 4, !dbg !6615
  %cmp25 = icmp ugt i32 %31, 3, !dbg !6615
  br i1 %cmp25, label %if.then27, label %if.else31, !dbg !6609

if.then27:                                        ; preds = %land.lhs.true23
  %32 = load i32, i32* %val, align 4, !dbg !6615
  %and28 = and i32 %32, 255, !dbg !6615
  %33 = load i16*, i16** %strength.addr, align 8, !dbg !6615
  %34 = load i16, i16* %33, align 2, !dbg !6615
  %conv29 = zext i16 %34 to i32, !dbg !6615
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0), i32 %and28, i32 %conv29) #9, !dbg !6615
  br label %if.end56, !dbg !6615

if.else31:                                        ; preds = %land.lhs.true23, %if.else
  %35 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6617
  %verbose32 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %35, i32 0, i32 3, !dbg !6617
  %36 = load i32*, i32** %verbose32, align 8, !dbg !6617
  %37 = load i32, i32* %36, align 4, !dbg !6617
  %cmp33 = icmp ugt i32 %37, 2, !dbg !6617
  br i1 %cmp33, label %land.lhs.true35, label %if.else43, !dbg !6617

land.lhs.true35:                                  ; preds = %if.else31
  %38 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6617
  %verbose36 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %38, i32 0, i32 3, !dbg !6617
  %39 = load i32*, i32** %verbose36, align 8, !dbg !6617
  %40 = load i32, i32* %39, align 4, !dbg !6617
  %cmp37 = icmp ugt i32 %40, 3, !dbg !6617
  br i1 %cmp37, label %if.then39, label %if.else43, !dbg !6615

if.then39:                                        ; preds = %land.lhs.true35
  %41 = load i32, i32* %val, align 4, !dbg !6617
  %and40 = and i32 %41, 255, !dbg !6617
  %42 = load i16*, i16** %strength.addr, align 8, !dbg !6617
  %43 = load i16, i16* %42, align 2, !dbg !6617
  %conv41 = zext i16 %43 to i32, !dbg !6617
  %call42 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0), i32 %and40, i32 %conv41) #9, !dbg !6617
  br label %if.end55, !dbg !6617

if.else43:                                        ; preds = %land.lhs.true35, %if.else31
  %44 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6619
  %verbose44 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %44, i32 0, i32 3, !dbg !6619
  %45 = load i32*, i32** %verbose44, align 8, !dbg !6619
  %46 = load i32, i32* %45, align 4, !dbg !6619
  %cmp45 = icmp ugt i32 %46, 3, !dbg !6619
  br i1 %cmp45, label %land.lhs.true47, label %if.end, !dbg !6619

land.lhs.true47:                                  ; preds = %if.else43
  %47 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6619
  %verbose48 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %47, i32 0, i32 3, !dbg !6619
  %48 = load i32*, i32** %verbose48, align 8, !dbg !6619
  %49 = load i32, i32* %48, align 4, !dbg !6619
  %cmp49 = icmp ugt i32 %49, 3, !dbg !6619
  br i1 %cmp49, label %if.then51, label %if.end, !dbg !6617

if.then51:                                        ; preds = %land.lhs.true47
  %50 = load i32, i32* %val, align 4, !dbg !6619
  %and52 = and i32 %50, 255, !dbg !6619
  %51 = load i16*, i16** %strength.addr, align 8, !dbg !6619
  %52 = load i16, i16* %51, align 2, !dbg !6619
  %conv53 = zext i16 %52 to i32, !dbg !6619
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0), i32 %and52, i32 %conv53) #9, !dbg !6619
  br label %if.end, !dbg !6619

if.end:                                           ; preds = %if.then51, %land.lhs.true47, %if.else43
  br label %if.end55

if.end55:                                         ; preds = %if.end, %if.then39
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then27
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then16
  br label %do.end, !dbg !6621

do.end:                                           ; preds = %if.end57
  br label %if.end58, !dbg !6622

if.end58:                                         ; preds = %do.end, %if.then
  br label %if.end59, !dbg !6623

if.end59:                                         ; preds = %if.end58, %sw.bb
  br label %sw.epilog, !dbg !6624

sw.bb60:                                          ; preds = %entry
  %53 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6625
  %lock61 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %53, i32 0, i32 20, !dbg !6627
  %54 = load i32, i32* %lock61, align 4, !dbg !6627
  %tobool62 = icmp ne i32 %54, 0, !dbg !6625
  br i1 %tobool62, label %if.then63, label %if.end125, !dbg !6628

if.then63:                                        ; preds = %sw.bb60
  %55 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6629
  %call64 = call i32 @_stb0899_read_s2reg(%struct.stb0899_state* %55, i32 62460, i32 0, i16 zeroext -3316) #8, !dbg !6629
  store i32 %call64, i32* %reg, align 4, !dbg !6631
  %56 = load i32, i32* %reg, align 4, !dbg !6632
  %shr65 = lshr i32 %56, 0, !dbg !6632
  %and66 = and i32 %shr65, 16383, !dbg !6632
  store i32 %and66, i32* %val, align 4, !dbg !6633
  %57 = load i32, i32* %val, align 4, !dbg !6634
  %call67 = call i32 @stb0899_table_lookup(%struct.stb0899_tab* getelementptr inbounds ([24 x %struct.stb0899_tab], [24 x %struct.stb0899_tab]* @stb0899_dvbs2rf_tab, i64 0, i64 0), i32 23, i32 %57) #8, !dbg !6635
  %conv68 = trunc i32 %call67 to i16, !dbg !6635
  %58 = load i16*, i16** %strength.addr, align 8, !dbg !6636
  store i16 %conv68, i16* %58, align 2, !dbg !6637
  %59 = load i16*, i16** %strength.addr, align 8, !dbg !6638
  %60 = load i16, i16* %59, align 2, !dbg !6639
  %conv69 = zext i16 %60 to i32, !dbg !6639
  %add70 = add i32 %conv69, 950, !dbg !6639
  %conv71 = trunc i32 %add70 to i16, !dbg !6639
  store i16 %conv71, i16* %59, align 2, !dbg !6639
  br label %do.body72, !dbg !6640

do.body72:                                        ; preds = %if.then63
  %61 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6641
  %verbose73 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %61, i32 0, i32 3, !dbg !6641
  %62 = load i32*, i32** %verbose73, align 8, !dbg !6641
  %63 = load i32, i32* %62, align 4, !dbg !6641
  %cmp74 = icmp ugt i32 %63, 0, !dbg !6641
  br i1 %cmp74, label %land.lhs.true76, label %if.else84, !dbg !6641

land.lhs.true76:                                  ; preds = %do.body72
  %64 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6641
  %verbose77 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %64, i32 0, i32 3, !dbg !6641
  %65 = load i32*, i32** %verbose77, align 8, !dbg !6641
  %66 = load i32, i32* %65, align 4, !dbg !6641
  %cmp78 = icmp ugt i32 %66, 3, !dbg !6641
  br i1 %cmp78, label %if.then80, label %if.else84, !dbg !6646

if.then80:                                        ; preds = %land.lhs.true76
  %67 = load i32, i32* %val, align 4, !dbg !6641
  %and81 = and i32 %67, 16383, !dbg !6641
  %68 = load i16*, i16** %strength.addr, align 8, !dbg !6641
  %69 = load i16, i16* %68, align 2, !dbg !6641
  %conv82 = zext i16 %69 to i32, !dbg !6641
  %call83 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0), i32 %and81, i32 %conv82) #9, !dbg !6641
  br label %if.end123, !dbg !6641

if.else84:                                        ; preds = %land.lhs.true76, %do.body72
  %70 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6647
  %verbose85 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %70, i32 0, i32 3, !dbg !6647
  %71 = load i32*, i32** %verbose85, align 8, !dbg !6647
  %72 = load i32, i32* %71, align 4, !dbg !6647
  %cmp86 = icmp ugt i32 %72, 1, !dbg !6647
  br i1 %cmp86, label %land.lhs.true88, label %if.else96, !dbg !6647

land.lhs.true88:                                  ; preds = %if.else84
  %73 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6647
  %verbose89 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %73, i32 0, i32 3, !dbg !6647
  %74 = load i32*, i32** %verbose89, align 8, !dbg !6647
  %75 = load i32, i32* %74, align 4, !dbg !6647
  %cmp90 = icmp ugt i32 %75, 3, !dbg !6647
  br i1 %cmp90, label %if.then92, label %if.else96, !dbg !6641

if.then92:                                        ; preds = %land.lhs.true88
  %76 = load i32, i32* %val, align 4, !dbg !6647
  %and93 = and i32 %76, 16383, !dbg !6647
  %77 = load i16*, i16** %strength.addr, align 8, !dbg !6647
  %78 = load i16, i16* %77, align 2, !dbg !6647
  %conv94 = zext i16 %78 to i32, !dbg !6647
  %call95 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0), i32 %and93, i32 %conv94) #9, !dbg !6647
  br label %if.end122, !dbg !6647

if.else96:                                        ; preds = %land.lhs.true88, %if.else84
  %79 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6649
  %verbose97 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %79, i32 0, i32 3, !dbg !6649
  %80 = load i32*, i32** %verbose97, align 8, !dbg !6649
  %81 = load i32, i32* %80, align 4, !dbg !6649
  %cmp98 = icmp ugt i32 %81, 2, !dbg !6649
  br i1 %cmp98, label %land.lhs.true100, label %if.else108, !dbg !6649

land.lhs.true100:                                 ; preds = %if.else96
  %82 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6649
  %verbose101 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %82, i32 0, i32 3, !dbg !6649
  %83 = load i32*, i32** %verbose101, align 8, !dbg !6649
  %84 = load i32, i32* %83, align 4, !dbg !6649
  %cmp102 = icmp ugt i32 %84, 3, !dbg !6649
  br i1 %cmp102, label %if.then104, label %if.else108, !dbg !6647

if.then104:                                       ; preds = %land.lhs.true100
  %85 = load i32, i32* %val, align 4, !dbg !6649
  %and105 = and i32 %85, 16383, !dbg !6649
  %86 = load i16*, i16** %strength.addr, align 8, !dbg !6649
  %87 = load i16, i16* %86, align 2, !dbg !6649
  %conv106 = zext i16 %87 to i32, !dbg !6649
  %call107 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0), i32 %and105, i32 %conv106) #9, !dbg !6649
  br label %if.end121, !dbg !6649

if.else108:                                       ; preds = %land.lhs.true100, %if.else96
  %88 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6651
  %verbose109 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %88, i32 0, i32 3, !dbg !6651
  %89 = load i32*, i32** %verbose109, align 8, !dbg !6651
  %90 = load i32, i32* %89, align 4, !dbg !6651
  %cmp110 = icmp ugt i32 %90, 3, !dbg !6651
  br i1 %cmp110, label %land.lhs.true112, label %if.end120, !dbg !6651

land.lhs.true112:                                 ; preds = %if.else108
  %91 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6651
  %verbose113 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %91, i32 0, i32 3, !dbg !6651
  %92 = load i32*, i32** %verbose113, align 8, !dbg !6651
  %93 = load i32, i32* %92, align 4, !dbg !6651
  %cmp114 = icmp ugt i32 %93, 3, !dbg !6651
  br i1 %cmp114, label %if.then116, label %if.end120, !dbg !6649

if.then116:                                       ; preds = %land.lhs.true112
  %94 = load i32, i32* %val, align 4, !dbg !6651
  %and117 = and i32 %94, 16383, !dbg !6651
  %95 = load i16*, i16** %strength.addr, align 8, !dbg !6651
  %96 = load i16, i16* %95, align 2, !dbg !6651
  %conv118 = zext i16 %96 to i32, !dbg !6651
  %call119 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0), i32 %and117, i32 %conv118) #9, !dbg !6651
  br label %if.end120, !dbg !6651

if.end120:                                        ; preds = %if.then116, %land.lhs.true112, %if.else108
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then104
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then92
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then80
  br label %do.end124, !dbg !6653

do.end124:                                        ; preds = %if.end123
  br label %if.end125, !dbg !6654

if.end125:                                        ; preds = %do.end124, %sw.bb60
  br label %sw.epilog, !dbg !6655

sw.default:                                       ; preds = %entry
  br label %do.body126, !dbg !6656

do.body126:                                       ; preds = %sw.default
  %97 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6657
  %verbose127 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %97, i32 0, i32 3, !dbg !6657
  %98 = load i32*, i32** %verbose127, align 8, !dbg !6657
  %99 = load i32, i32* %98, align 4, !dbg !6657
  %cmp128 = icmp ugt i32 %99, 0, !dbg !6657
  br i1 %cmp128, label %land.lhs.true130, label %if.else136, !dbg !6657

land.lhs.true130:                                 ; preds = %do.body126
  %100 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6657
  %verbose131 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %100, i32 0, i32 3, !dbg !6657
  %101 = load i32*, i32** %verbose131, align 8, !dbg !6657
  %102 = load i32, i32* %101, align 4, !dbg !6657
  %cmp132 = icmp ugt i32 %102, 3, !dbg !6657
  br i1 %cmp132, label %if.then134, label %if.else136, !dbg !6662

if.then134:                                       ; preds = %land.lhs.true130
  %call135 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0)) #9, !dbg !6657
  br label %if.end169, !dbg !6657

if.else136:                                       ; preds = %land.lhs.true130, %do.body126
  %103 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6663
  %verbose137 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %103, i32 0, i32 3, !dbg !6663
  %104 = load i32*, i32** %verbose137, align 8, !dbg !6663
  %105 = load i32, i32* %104, align 4, !dbg !6663
  %cmp138 = icmp ugt i32 %105, 1, !dbg !6663
  br i1 %cmp138, label %land.lhs.true140, label %if.else146, !dbg !6663

land.lhs.true140:                                 ; preds = %if.else136
  %106 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6663
  %verbose141 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %106, i32 0, i32 3, !dbg !6663
  %107 = load i32*, i32** %verbose141, align 8, !dbg !6663
  %108 = load i32, i32* %107, align 4, !dbg !6663
  %cmp142 = icmp ugt i32 %108, 3, !dbg !6663
  br i1 %cmp142, label %if.then144, label %if.else146, !dbg !6657

if.then144:                                       ; preds = %land.lhs.true140
  %call145 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0)) #9, !dbg !6663
  br label %if.end168, !dbg !6663

if.else146:                                       ; preds = %land.lhs.true140, %if.else136
  %109 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6665
  %verbose147 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %109, i32 0, i32 3, !dbg !6665
  %110 = load i32*, i32** %verbose147, align 8, !dbg !6665
  %111 = load i32, i32* %110, align 4, !dbg !6665
  %cmp148 = icmp ugt i32 %111, 2, !dbg !6665
  br i1 %cmp148, label %land.lhs.true150, label %if.else156, !dbg !6665

land.lhs.true150:                                 ; preds = %if.else146
  %112 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6665
  %verbose151 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %112, i32 0, i32 3, !dbg !6665
  %113 = load i32*, i32** %verbose151, align 8, !dbg !6665
  %114 = load i32, i32* %113, align 4, !dbg !6665
  %cmp152 = icmp ugt i32 %114, 3, !dbg !6665
  br i1 %cmp152, label %if.then154, label %if.else156, !dbg !6663

if.then154:                                       ; preds = %land.lhs.true150
  %call155 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0)) #9, !dbg !6665
  br label %if.end167, !dbg !6665

if.else156:                                       ; preds = %land.lhs.true150, %if.else146
  %115 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6667
  %verbose157 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %115, i32 0, i32 3, !dbg !6667
  %116 = load i32*, i32** %verbose157, align 8, !dbg !6667
  %117 = load i32, i32* %116, align 4, !dbg !6667
  %cmp158 = icmp ugt i32 %117, 3, !dbg !6667
  br i1 %cmp158, label %land.lhs.true160, label %if.end166, !dbg !6667

land.lhs.true160:                                 ; preds = %if.else156
  %118 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6667
  %verbose161 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %118, i32 0, i32 3, !dbg !6667
  %119 = load i32*, i32** %verbose161, align 8, !dbg !6667
  %120 = load i32, i32* %119, align 4, !dbg !6667
  %cmp162 = icmp ugt i32 %120, 3, !dbg !6667
  br i1 %cmp162, label %if.then164, label %if.end166, !dbg !6665

if.then164:                                       ; preds = %land.lhs.true160
  %call165 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.stb0899_read_signal_strength, i64 0, i64 0)) #9, !dbg !6667
  br label %if.end166, !dbg !6667

if.end166:                                        ; preds = %if.then164, %land.lhs.true160, %if.else156
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.then154
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %if.then144
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.then134
  br label %do.end170, !dbg !6669

do.end170:                                        ; preds = %if.end169
  store i32 -22, i32* %retval, align 4, !dbg !6670
  br label %return, !dbg !6670

sw.epilog:                                        ; preds = %if.end125, %if.end59
  store i32 0, i32* %retval, align 4, !dbg !6671
  br label %return, !dbg !6671

return:                                           ; preds = %sw.epilog, %do.end170
  %121 = load i32, i32* %retval, align 4, !dbg !6672
  ret i32 %121, !dbg !6672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_read_snr(%struct.dvb_frontend* %fe, i16* %snr) #0 !dbg !6673 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %snr.addr = alloca i16*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  %internal = alloca %struct.stb0899_internal*, align 8
  %val = alloca i32, align 4
  %quant = alloca i32, align 4
  %quantn = alloca i32, align 4
  %est = alloca i32, align 4
  %estn = alloca i32, align 4
  %buf = alloca [2 x i8], align 1
  %reg = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6674, metadata !DIExpression()), !dbg !6675
  store i16* %snr, i16** %snr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %snr.addr, metadata !6676, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !6678, metadata !DIExpression()), !dbg !6679
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6680
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6681
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6681
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !6680
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !6679
  call void @llvm.dbg.declare(metadata %struct.stb0899_internal** %internal, metadata !6682, metadata !DIExpression()), !dbg !6683
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6684
  %internal1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %3, i32 0, i32 4, !dbg !6685
  store %struct.stb0899_internal* %internal1, %struct.stb0899_internal** %internal, align 8, !dbg !6683
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6686, metadata !DIExpression()), !dbg !6687
  call void @llvm.dbg.declare(metadata i32* %quant, metadata !6688, metadata !DIExpression()), !dbg !6689
  call void @llvm.dbg.declare(metadata i32* %quantn, metadata !6690, metadata !DIExpression()), !dbg !6691
  store i32 -1, i32* %quantn, align 4, !dbg !6691
  call void @llvm.dbg.declare(metadata i32* %est, metadata !6692, metadata !DIExpression()), !dbg !6693
  call void @llvm.dbg.declare(metadata i32* %estn, metadata !6694, metadata !DIExpression()), !dbg !6695
  store i32 -1, i32* %estn, align 4, !dbg !6695
  call void @llvm.dbg.declare(metadata [2 x i8]* %buf, metadata !6696, metadata !DIExpression()), !dbg !6697
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !6698, metadata !DIExpression()), !dbg !6699
  %4 = load i16*, i16** %snr.addr, align 8, !dbg !6700
  store i16 0, i16* %4, align 2, !dbg !6701
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6702
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %5, i32 62733) #8, !dbg !6703
  store i32 %call, i32* %reg, align 4, !dbg !6704
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6705
  %delsys = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %6, i32 0, i32 5, !dbg !6706
  %7 = load i32, i32* %delsys, align 4, !dbg !6706
  switch i32 %7, label %sw.default [
    i32 5, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb69
  ], !dbg !6707

sw.bb:                                            ; preds = %entry, %entry
  %8 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6708
  %lock = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %8, i32 0, i32 20, !dbg !6711
  %9 = load i32, i32* %lock, align 4, !dbg !6711
  %tobool = icmp ne i32 %9, 0, !dbg !6708
  br i1 %tobool, label %if.then, label %if.end68, !dbg !6712

if.then:                                          ; preds = %sw.bb
  %10 = load i32, i32* %reg, align 4, !dbg !6713
  %shr = lshr i32 %10, 3, !dbg !6713
  %and = and i32 %shr, 1, !dbg !6713
  %tobool2 = icmp ne i32 %and, 0, !dbg !6713
  br i1 %tobool2, label %if.then3, label %if.end67, !dbg !6716

if.then3:                                         ; preds = %if.then
  %11 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6717
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !6719
  %call4 = call i32 @stb0899_read_regs(%struct.stb0899_state* %11, i32 62528, i8* %arraydecay, i32 2) #8, !dbg !6720
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !6721
  %12 = load i8, i8* %arrayidx, align 1, !dbg !6721
  %conv = zext i8 %12 to i32, !dbg !6721
  %shl = shl i32 %conv, 8, !dbg !6721
  %arrayidx5 = getelementptr [2 x i8], [2 x i8]* %buf, i64 0, i64 1, !dbg !6721
  %13 = load i8, i8* %arrayidx5, align 1, !dbg !6721
  %conv6 = zext i8 %13 to i32, !dbg !6721
  %or = or i32 %shl, %conv6, !dbg !6721
  store i32 %or, i32* %val, align 4, !dbg !6722
  %14 = load i32, i32* %val, align 4, !dbg !6723
  %call7 = call i32 @stb0899_table_lookup(%struct.stb0899_tab* getelementptr inbounds ([20 x %struct.stb0899_tab], [20 x %struct.stb0899_tab]* @stb0899_cn_tab, i64 0, i64 0), i32 19, i32 %14) #8, !dbg !6724
  %conv8 = trunc i32 %call7 to i16, !dbg !6724
  %15 = load i16*, i16** %snr.addr, align 8, !dbg !6725
  store i16 %conv8, i16* %15, align 2, !dbg !6726
  br label %do.body, !dbg !6727

do.body:                                          ; preds = %if.then3
  %16 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6728
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %16, i32 0, i32 3, !dbg !6728
  %17 = load i32*, i32** %verbose, align 8, !dbg !6728
  %18 = load i32, i32* %17, align 4, !dbg !6728
  %cmp = icmp ugt i32 %18, 0, !dbg !6728
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6728

land.lhs.true:                                    ; preds = %do.body
  %19 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6728
  %verbose10 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %19, i32 0, i32 3, !dbg !6728
  %20 = load i32*, i32** %verbose10, align 8, !dbg !6728
  %21 = load i32, i32* %20, align 4, !dbg !6728
  %cmp11 = icmp ugt i32 %21, 3, !dbg !6728
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !6733

if.then13:                                        ; preds = %land.lhs.true
  %arrayidx14 = getelementptr [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !6728
  %22 = load i8, i8* %arrayidx14, align 1, !dbg !6728
  %conv15 = zext i8 %22 to i32, !dbg !6728
  %arrayidx16 = getelementptr [2 x i8], [2 x i8]* %buf, i64 0, i64 1, !dbg !6728
  %23 = load i8, i8* %arrayidx16, align 1, !dbg !6728
  %conv17 = zext i8 %23 to i32, !dbg !6728
  %24 = load i32, i32* %val, align 4, !dbg !6728
  %25 = load i16*, i16** %snr.addr, align 8, !dbg !6728
  %26 = load i16, i16* %25, align 2, !dbg !6728
  %conv18 = zext i16 %26 to i32, !dbg !6728
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0), i32 %conv15, i32 %conv17, i32 %24, i32 %conv18) #9, !dbg !6728
  br label %if.end66, !dbg !6728

if.else:                                          ; preds = %land.lhs.true, %do.body
  %27 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6734
  %verbose20 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %27, i32 0, i32 3, !dbg !6734
  %28 = load i32*, i32** %verbose20, align 8, !dbg !6734
  %29 = load i32, i32* %28, align 4, !dbg !6734
  %cmp21 = icmp ugt i32 %29, 1, !dbg !6734
  br i1 %cmp21, label %land.lhs.true23, label %if.else34, !dbg !6734

land.lhs.true23:                                  ; preds = %if.else
  %30 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6734
  %verbose24 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %30, i32 0, i32 3, !dbg !6734
  %31 = load i32*, i32** %verbose24, align 8, !dbg !6734
  %32 = load i32, i32* %31, align 4, !dbg !6734
  %cmp25 = icmp ugt i32 %32, 3, !dbg !6734
  br i1 %cmp25, label %if.then27, label %if.else34, !dbg !6728

if.then27:                                        ; preds = %land.lhs.true23
  %arrayidx28 = getelementptr [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !6734
  %33 = load i8, i8* %arrayidx28, align 1, !dbg !6734
  %conv29 = zext i8 %33 to i32, !dbg !6734
  %arrayidx30 = getelementptr [2 x i8], [2 x i8]* %buf, i64 0, i64 1, !dbg !6734
  %34 = load i8, i8* %arrayidx30, align 1, !dbg !6734
  %conv31 = zext i8 %34 to i32, !dbg !6734
  %35 = load i32, i32* %val, align 4, !dbg !6734
  %36 = load i16*, i16** %snr.addr, align 8, !dbg !6734
  %37 = load i16, i16* %36, align 2, !dbg !6734
  %conv32 = zext i16 %37 to i32, !dbg !6734
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0), i32 %conv29, i32 %conv31, i32 %35, i32 %conv32) #9, !dbg !6734
  br label %if.end65, !dbg !6734

if.else34:                                        ; preds = %land.lhs.true23, %if.else
  %38 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6736
  %verbose35 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %38, i32 0, i32 3, !dbg !6736
  %39 = load i32*, i32** %verbose35, align 8, !dbg !6736
  %40 = load i32, i32* %39, align 4, !dbg !6736
  %cmp36 = icmp ugt i32 %40, 2, !dbg !6736
  br i1 %cmp36, label %land.lhs.true38, label %if.else49, !dbg !6736

land.lhs.true38:                                  ; preds = %if.else34
  %41 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6736
  %verbose39 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %41, i32 0, i32 3, !dbg !6736
  %42 = load i32*, i32** %verbose39, align 8, !dbg !6736
  %43 = load i32, i32* %42, align 4, !dbg !6736
  %cmp40 = icmp ugt i32 %43, 3, !dbg !6736
  br i1 %cmp40, label %if.then42, label %if.else49, !dbg !6734

if.then42:                                        ; preds = %land.lhs.true38
  %arrayidx43 = getelementptr [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !6736
  %44 = load i8, i8* %arrayidx43, align 1, !dbg !6736
  %conv44 = zext i8 %44 to i32, !dbg !6736
  %arrayidx45 = getelementptr [2 x i8], [2 x i8]* %buf, i64 0, i64 1, !dbg !6736
  %45 = load i8, i8* %arrayidx45, align 1, !dbg !6736
  %conv46 = zext i8 %45 to i32, !dbg !6736
  %46 = load i32, i32* %val, align 4, !dbg !6736
  %47 = load i16*, i16** %snr.addr, align 8, !dbg !6736
  %48 = load i16, i16* %47, align 2, !dbg !6736
  %conv47 = zext i16 %48 to i32, !dbg !6736
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0), i32 %conv44, i32 %conv46, i32 %46, i32 %conv47) #9, !dbg !6736
  br label %if.end64, !dbg !6736

if.else49:                                        ; preds = %land.lhs.true38, %if.else34
  %49 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6738
  %verbose50 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %49, i32 0, i32 3, !dbg !6738
  %50 = load i32*, i32** %verbose50, align 8, !dbg !6738
  %51 = load i32, i32* %50, align 4, !dbg !6738
  %cmp51 = icmp ugt i32 %51, 3, !dbg !6738
  br i1 %cmp51, label %land.lhs.true53, label %if.end, !dbg !6738

land.lhs.true53:                                  ; preds = %if.else49
  %52 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6738
  %verbose54 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %52, i32 0, i32 3, !dbg !6738
  %53 = load i32*, i32** %verbose54, align 8, !dbg !6738
  %54 = load i32, i32* %53, align 4, !dbg !6738
  %cmp55 = icmp ugt i32 %54, 3, !dbg !6738
  br i1 %cmp55, label %if.then57, label %if.end, !dbg !6736

if.then57:                                        ; preds = %land.lhs.true53
  %arrayidx58 = getelementptr [2 x i8], [2 x i8]* %buf, i64 0, i64 0, !dbg !6738
  %55 = load i8, i8* %arrayidx58, align 1, !dbg !6738
  %conv59 = zext i8 %55 to i32, !dbg !6738
  %arrayidx60 = getelementptr [2 x i8], [2 x i8]* %buf, i64 0, i64 1, !dbg !6738
  %56 = load i8, i8* %arrayidx60, align 1, !dbg !6738
  %conv61 = zext i8 %56 to i32, !dbg !6738
  %57 = load i32, i32* %val, align 4, !dbg !6738
  %58 = load i16*, i16** %snr.addr, align 8, !dbg !6738
  %59 = load i16, i16* %58, align 2, !dbg !6738
  %conv62 = zext i16 %59 to i32, !dbg !6738
  %call63 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0), i32 %conv59, i32 %conv61, i32 %57, i32 %conv62) #9, !dbg !6738
  br label %if.end, !dbg !6738

if.end:                                           ; preds = %if.then57, %land.lhs.true53, %if.else49
  br label %if.end64

if.end64:                                         ; preds = %if.end, %if.then42
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then27
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then13
  br label %do.end, !dbg !6740

do.end:                                           ; preds = %if.end66
  br label %if.end67, !dbg !6741

if.end67:                                         ; preds = %do.end, %if.then
  br label %if.end68, !dbg !6742

if.end68:                                         ; preds = %if.end67, %sw.bb
  br label %sw.epilog, !dbg !6743

sw.bb69:                                          ; preds = %entry
  %60 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !6744
  %lock70 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %60, i32 0, i32 20, !dbg !6746
  %61 = load i32, i32* %lock70, align 4, !dbg !6746
  %tobool71 = icmp ne i32 %61, 0, !dbg !6744
  br i1 %tobool71, label %if.then72, label %if.end137, !dbg !6747

if.then72:                                        ; preds = %sw.bb69
  %62 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6748
  %call73 = call i32 @_stb0899_read_s2reg(%struct.stb0899_state* %62, i32 62460, i32 1024, i16 zeroext -3296) #8, !dbg !6748
  store i32 %call73, i32* %reg, align 4, !dbg !6750
  %63 = load i32, i32* %reg, align 4, !dbg !6751
  %shr74 = lshr i32 %63, 3, !dbg !6751
  %and75 = and i32 %shr74, 255, !dbg !6751
  store i32 %and75, i32* %quant, align 4, !dbg !6752
  %64 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6753
  %call76 = call i32 @_stb0899_read_s2reg(%struct.stb0899_state* %64, i32 62460, i32 1024, i16 zeroext -3284) #8, !dbg !6753
  store i32 %call76, i32* %reg, align 4, !dbg !6754
  %65 = load i32, i32* %reg, align 4, !dbg !6755
  %shr77 = lshr i32 %65, 7, !dbg !6755
  %and78 = and i32 %shr77, 524287, !dbg !6755
  store i32 %and78, i32* %est, align 4, !dbg !6756
  %66 = load i32, i32* %est, align 4, !dbg !6757
  %cmp79 = icmp eq i32 %66, 1, !dbg !6759
  br i1 %cmp79, label %if.then81, label %if.else82, !dbg !6760

if.then81:                                        ; preds = %if.then72
  store i32 301, i32* %val, align 4, !dbg !6761
  br label %if.end90, !dbg !6762

if.else82:                                        ; preds = %if.then72
  %67 = load i32, i32* %est, align 4, !dbg !6763
  %cmp83 = icmp eq i32 %67, 2, !dbg !6765
  br i1 %cmp83, label %if.then85, label %if.else86, !dbg !6766

if.then85:                                        ; preds = %if.else82
  store i32 270, i32* %val, align 4, !dbg !6767
  br label %if.end89, !dbg !6768

if.else86:                                        ; preds = %if.else82
  %68 = load i32, i32* %quant, align 4, !dbg !6769
  %mul = mul i32 %68, 100, !dbg !6771
  %call87 = call i32 @stb0899_table_lookup(%struct.stb0899_tab* getelementptr inbounds ([39 x %struct.stb0899_tab], [39 x %struct.stb0899_tab]* @stb0899_quant_tab, i64 0, i64 0), i32 38, i32 %mul) #8, !dbg !6772
  store i32 %call87, i32* %quantn, align 4, !dbg !6773
  %69 = load i32, i32* %est, align 4, !dbg !6774
  %call88 = call i32 @stb0899_table_lookup(%struct.stb0899_tab* getelementptr inbounds ([37 x %struct.stb0899_tab], [37 x %struct.stb0899_tab]* @stb0899_est_tab, i64 0, i64 0), i32 36, i32 %69) #8, !dbg !6775
  store i32 %call88, i32* %estn, align 4, !dbg !6776
  %70 = load i32, i32* %quantn, align 4, !dbg !6777
  %71 = load i32, i32* %estn, align 4, !dbg !6778
  %sub = sub i32 %70, %71, !dbg !6779
  %div = udiv i32 %sub, 10, !dbg !6780
  store i32 %div, i32* %val, align 4, !dbg !6781
  br label %if.end89

if.end89:                                         ; preds = %if.else86, %if.then85
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then81
  %72 = load i32, i32* %val, align 4, !dbg !6782
  %conv91 = trunc i32 %72 to i16, !dbg !6782
  %73 = load i16*, i16** %snr.addr, align 8, !dbg !6783
  store i16 %conv91, i16* %73, align 2, !dbg !6784
  br label %do.body92, !dbg !6785

do.body92:                                        ; preds = %if.end90
  %74 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6786
  %verbose93 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %74, i32 0, i32 3, !dbg !6786
  %75 = load i32*, i32** %verbose93, align 8, !dbg !6786
  %76 = load i32, i32* %75, align 4, !dbg !6786
  %cmp94 = icmp ugt i32 %76, 0, !dbg !6786
  br i1 %cmp94, label %land.lhs.true96, label %if.else102, !dbg !6786

land.lhs.true96:                                  ; preds = %do.body92
  %77 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6786
  %verbose97 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %77, i32 0, i32 3, !dbg !6786
  %78 = load i32*, i32** %verbose97, align 8, !dbg !6786
  %79 = load i32, i32* %78, align 4, !dbg !6786
  %cmp98 = icmp ugt i32 %79, 3, !dbg !6786
  br i1 %cmp98, label %if.then100, label %if.else102, !dbg !6791

if.then100:                                       ; preds = %land.lhs.true96
  %80 = load i32, i32* %quant, align 4, !dbg !6786
  %81 = load i32, i32* %quantn, align 4, !dbg !6786
  %82 = load i32, i32* %est, align 4, !dbg !6786
  %83 = load i32, i32* %estn, align 4, !dbg !6786
  %84 = load i32, i32* %val, align 4, !dbg !6786
  %call101 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0), i32 %80, i32 %81, i32 %82, i32 %83, i32 %84) #9, !dbg !6786
  br label %if.end135, !dbg !6786

if.else102:                                       ; preds = %land.lhs.true96, %do.body92
  %85 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6792
  %verbose103 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %85, i32 0, i32 3, !dbg !6792
  %86 = load i32*, i32** %verbose103, align 8, !dbg !6792
  %87 = load i32, i32* %86, align 4, !dbg !6792
  %cmp104 = icmp ugt i32 %87, 1, !dbg !6792
  br i1 %cmp104, label %land.lhs.true106, label %if.else112, !dbg !6792

land.lhs.true106:                                 ; preds = %if.else102
  %88 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6792
  %verbose107 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %88, i32 0, i32 3, !dbg !6792
  %89 = load i32*, i32** %verbose107, align 8, !dbg !6792
  %90 = load i32, i32* %89, align 4, !dbg !6792
  %cmp108 = icmp ugt i32 %90, 3, !dbg !6792
  br i1 %cmp108, label %if.then110, label %if.else112, !dbg !6786

if.then110:                                       ; preds = %land.lhs.true106
  %91 = load i32, i32* %quant, align 4, !dbg !6792
  %92 = load i32, i32* %quantn, align 4, !dbg !6792
  %93 = load i32, i32* %est, align 4, !dbg !6792
  %94 = load i32, i32* %estn, align 4, !dbg !6792
  %95 = load i32, i32* %val, align 4, !dbg !6792
  %call111 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0), i32 %91, i32 %92, i32 %93, i32 %94, i32 %95) #9, !dbg !6792
  br label %if.end134, !dbg !6792

if.else112:                                       ; preds = %land.lhs.true106, %if.else102
  %96 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6794
  %verbose113 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %96, i32 0, i32 3, !dbg !6794
  %97 = load i32*, i32** %verbose113, align 8, !dbg !6794
  %98 = load i32, i32* %97, align 4, !dbg !6794
  %cmp114 = icmp ugt i32 %98, 2, !dbg !6794
  br i1 %cmp114, label %land.lhs.true116, label %if.else122, !dbg !6794

land.lhs.true116:                                 ; preds = %if.else112
  %99 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6794
  %verbose117 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %99, i32 0, i32 3, !dbg !6794
  %100 = load i32*, i32** %verbose117, align 8, !dbg !6794
  %101 = load i32, i32* %100, align 4, !dbg !6794
  %cmp118 = icmp ugt i32 %101, 3, !dbg !6794
  br i1 %cmp118, label %if.then120, label %if.else122, !dbg !6792

if.then120:                                       ; preds = %land.lhs.true116
  %102 = load i32, i32* %quant, align 4, !dbg !6794
  %103 = load i32, i32* %quantn, align 4, !dbg !6794
  %104 = load i32, i32* %est, align 4, !dbg !6794
  %105 = load i32, i32* %estn, align 4, !dbg !6794
  %106 = load i32, i32* %val, align 4, !dbg !6794
  %call121 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0), i32 %102, i32 %103, i32 %104, i32 %105, i32 %106) #9, !dbg !6794
  br label %if.end133, !dbg !6794

if.else122:                                       ; preds = %land.lhs.true116, %if.else112
  %107 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6796
  %verbose123 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %107, i32 0, i32 3, !dbg !6796
  %108 = load i32*, i32** %verbose123, align 8, !dbg !6796
  %109 = load i32, i32* %108, align 4, !dbg !6796
  %cmp124 = icmp ugt i32 %109, 3, !dbg !6796
  br i1 %cmp124, label %land.lhs.true126, label %if.end132, !dbg !6796

land.lhs.true126:                                 ; preds = %if.else122
  %110 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6796
  %verbose127 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %110, i32 0, i32 3, !dbg !6796
  %111 = load i32*, i32** %verbose127, align 8, !dbg !6796
  %112 = load i32, i32* %111, align 4, !dbg !6796
  %cmp128 = icmp ugt i32 %112, 3, !dbg !6796
  br i1 %cmp128, label %if.then130, label %if.end132, !dbg !6794

if.then130:                                       ; preds = %land.lhs.true126
  %113 = load i32, i32* %quant, align 4, !dbg !6796
  %114 = load i32, i32* %quantn, align 4, !dbg !6796
  %115 = load i32, i32* %est, align 4, !dbg !6796
  %116 = load i32, i32* %estn, align 4, !dbg !6796
  %117 = load i32, i32* %val, align 4, !dbg !6796
  %call131 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0), i32 %113, i32 %114, i32 %115, i32 %116, i32 %117) #9, !dbg !6796
  br label %if.end132, !dbg !6796

if.end132:                                        ; preds = %if.then130, %land.lhs.true126, %if.else122
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then120
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.then110
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then100
  br label %do.end136, !dbg !6798

do.end136:                                        ; preds = %if.end135
  br label %if.end137, !dbg !6799

if.end137:                                        ; preds = %do.end136, %sw.bb69
  br label %sw.epilog, !dbg !6800

sw.default:                                       ; preds = %entry
  br label %do.body138, !dbg !6801

do.body138:                                       ; preds = %sw.default
  %118 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6802
  %verbose139 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %118, i32 0, i32 3, !dbg !6802
  %119 = load i32*, i32** %verbose139, align 8, !dbg !6802
  %120 = load i32, i32* %119, align 4, !dbg !6802
  %cmp140 = icmp ugt i32 %120, 0, !dbg !6802
  br i1 %cmp140, label %land.lhs.true142, label %if.else148, !dbg !6802

land.lhs.true142:                                 ; preds = %do.body138
  %121 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6802
  %verbose143 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %121, i32 0, i32 3, !dbg !6802
  %122 = load i32*, i32** %verbose143, align 8, !dbg !6802
  %123 = load i32, i32* %122, align 4, !dbg !6802
  %cmp144 = icmp ugt i32 %123, 3, !dbg !6802
  br i1 %cmp144, label %if.then146, label %if.else148, !dbg !6807

if.then146:                                       ; preds = %land.lhs.true142
  %call147 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0)) #9, !dbg !6802
  br label %if.end181, !dbg !6802

if.else148:                                       ; preds = %land.lhs.true142, %do.body138
  %124 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6808
  %verbose149 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %124, i32 0, i32 3, !dbg !6808
  %125 = load i32*, i32** %verbose149, align 8, !dbg !6808
  %126 = load i32, i32* %125, align 4, !dbg !6808
  %cmp150 = icmp ugt i32 %126, 1, !dbg !6808
  br i1 %cmp150, label %land.lhs.true152, label %if.else158, !dbg !6808

land.lhs.true152:                                 ; preds = %if.else148
  %127 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6808
  %verbose153 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %127, i32 0, i32 3, !dbg !6808
  %128 = load i32*, i32** %verbose153, align 8, !dbg !6808
  %129 = load i32, i32* %128, align 4, !dbg !6808
  %cmp154 = icmp ugt i32 %129, 3, !dbg !6808
  br i1 %cmp154, label %if.then156, label %if.else158, !dbg !6802

if.then156:                                       ; preds = %land.lhs.true152
  %call157 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0)) #9, !dbg !6808
  br label %if.end180, !dbg !6808

if.else158:                                       ; preds = %land.lhs.true152, %if.else148
  %130 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6810
  %verbose159 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %130, i32 0, i32 3, !dbg !6810
  %131 = load i32*, i32** %verbose159, align 8, !dbg !6810
  %132 = load i32, i32* %131, align 4, !dbg !6810
  %cmp160 = icmp ugt i32 %132, 2, !dbg !6810
  br i1 %cmp160, label %land.lhs.true162, label %if.else168, !dbg !6810

land.lhs.true162:                                 ; preds = %if.else158
  %133 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6810
  %verbose163 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %133, i32 0, i32 3, !dbg !6810
  %134 = load i32*, i32** %verbose163, align 8, !dbg !6810
  %135 = load i32, i32* %134, align 4, !dbg !6810
  %cmp164 = icmp ugt i32 %135, 3, !dbg !6810
  br i1 %cmp164, label %if.then166, label %if.else168, !dbg !6808

if.then166:                                       ; preds = %land.lhs.true162
  %call167 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0)) #9, !dbg !6810
  br label %if.end179, !dbg !6810

if.else168:                                       ; preds = %land.lhs.true162, %if.else158
  %136 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6812
  %verbose169 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %136, i32 0, i32 3, !dbg !6812
  %137 = load i32*, i32** %verbose169, align 8, !dbg !6812
  %138 = load i32, i32* %137, align 4, !dbg !6812
  %cmp170 = icmp ugt i32 %138, 3, !dbg !6812
  br i1 %cmp170, label %land.lhs.true172, label %if.end178, !dbg !6812

land.lhs.true172:                                 ; preds = %if.else168
  %139 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6812
  %verbose173 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %139, i32 0, i32 3, !dbg !6812
  %140 = load i32*, i32** %verbose173, align 8, !dbg !6812
  %141 = load i32, i32* %140, align 4, !dbg !6812
  %cmp174 = icmp ugt i32 %141, 3, !dbg !6812
  br i1 %cmp174, label %if.then176, label %if.end178, !dbg !6810

if.then176:                                       ; preds = %land.lhs.true172
  %call177 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_read_snr, i64 0, i64 0)) #9, !dbg !6812
  br label %if.end178, !dbg !6812

if.end178:                                        ; preds = %if.then176, %land.lhs.true172, %if.else168
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.then166
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.then156
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.then146
  br label %do.end182, !dbg !6814

do.end182:                                        ; preds = %if.end181
  store i32 -22, i32* %retval, align 4, !dbg !6815
  br label %return, !dbg !6815

sw.epilog:                                        ; preds = %if.end137, %if.end68
  store i32 0, i32* %retval, align 4, !dbg !6816
  br label %return, !dbg !6816

return:                                           ; preds = %sw.epilog, %do.end182
  %142 = load i32, i32* %retval, align 4, !dbg !6817
  ret i32 %142, !dbg !6817
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_send_diseqc_msg(%struct.dvb_frontend* %fe, %struct.dvb_diseqc_master_cmd* %cmd) #0 !dbg !6818 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %cmd.addr = alloca %struct.dvb_diseqc_master_cmd*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  %reg = alloca i8, align 1
  %i = alloca i8, align 1
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6819, metadata !DIExpression()), !dbg !6820
  store %struct.dvb_diseqc_master_cmd* %cmd, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_diseqc_master_cmd** %cmd.addr, metadata !6821, metadata !DIExpression()), !dbg !6822
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !6823, metadata !DIExpression()), !dbg !6824
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6825
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6826
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6826
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !6825
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !6824
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !6827, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.declare(metadata i8* %i, metadata !6829, metadata !DIExpression()), !dbg !6830
  %3 = load %struct.dvb_diseqc_master_cmd*, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8, !dbg !6831
  %msg_len = getelementptr inbounds %struct.dvb_diseqc_master_cmd, %struct.dvb_diseqc_master_cmd* %3, i32 0, i32 1, !dbg !6833
  %4 = load i8, i8* %msg_len, align 1, !dbg !6833
  %conv = zext i8 %4 to i64, !dbg !6831
  %cmp = icmp ugt i64 %conv, 6, !dbg !6834
  br i1 %cmp, label %if.then, label %if.end, !dbg !6835

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6836
  br label %return, !dbg !6836

if.end:                                           ; preds = %entry
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6837
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %5, i32 61600) #8, !dbg !6838
  %conv2 = trunc i32 %call to i8, !dbg !6838
  store i8 %conv2, i8* %reg, align 1, !dbg !6839
  %6 = load i8, i8* %reg, align 1, !dbg !6840
  %conv3 = zext i8 %6 to i32, !dbg !6840
  %and = and i32 %conv3, -5, !dbg !6840
  %or = or i32 %and, 4, !dbg !6840
  %conv4 = trunc i32 %or to i8, !dbg !6840
  store i8 %conv4, i8* %reg, align 1, !dbg !6840
  %7 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6841
  %8 = load i8, i8* %reg, align 1, !dbg !6842
  %call5 = call i32 @stb0899_write_reg(%struct.stb0899_state* %7, i32 61600, i8 zeroext %8) #8, !dbg !6843
  store i8 0, i8* %i, align 1, !dbg !6844
  br label %for.cond, !dbg !6846

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i8, i8* %i, align 1, !dbg !6847
  %conv6 = zext i8 %9 to i32, !dbg !6847
  %10 = load %struct.dvb_diseqc_master_cmd*, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8, !dbg !6849
  %msg_len7 = getelementptr inbounds %struct.dvb_diseqc_master_cmd, %struct.dvb_diseqc_master_cmd* %10, i32 0, i32 1, !dbg !6850
  %11 = load i8, i8* %msg_len7, align 1, !dbg !6850
  %conv8 = zext i8 %11 to i32, !dbg !6849
  %cmp9 = icmp slt i32 %conv6, %conv8, !dbg !6851
  br i1 %cmp9, label %for.body, label %for.end, !dbg !6852

for.body:                                         ; preds = %for.cond
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6853
  %call11 = call i32 @stb0899_wait_diseqc_fifo_empty(%struct.stb0899_state* %12, i32 100) #8, !dbg !6856
  %cmp12 = icmp slt i32 %call11, 0, !dbg !6857
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !6858

if.then14:                                        ; preds = %for.body
  store i32 -110, i32* %retval, align 4, !dbg !6859
  br label %return, !dbg !6859

if.end15:                                         ; preds = %for.body
  %13 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6860
  %14 = load %struct.dvb_diseqc_master_cmd*, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8, !dbg !6861
  %msg = getelementptr inbounds %struct.dvb_diseqc_master_cmd, %struct.dvb_diseqc_master_cmd* %14, i32 0, i32 0, !dbg !6862
  %15 = load i8, i8* %i, align 1, !dbg !6863
  %idxprom = zext i8 %15 to i64, !dbg !6861
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msg, i64 0, i64 %idxprom, !dbg !6861
  %16 = load i8, i8* %arrayidx, align 1, !dbg !6861
  %call16 = call i32 @stb0899_write_reg(%struct.stb0899_state* %13, i32 61607, i8 zeroext %16) #8, !dbg !6864
  br label %for.inc, !dbg !6865

for.inc:                                          ; preds = %if.end15
  %17 = load i8, i8* %i, align 1, !dbg !6866
  %inc = add i8 %17, 1, !dbg !6866
  store i8 %inc, i8* %i, align 1, !dbg !6866
  br label %for.cond, !dbg !6867, !llvm.loop !6868

for.end:                                          ; preds = %for.cond
  %18 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6870
  %call17 = call i32 @stb0899_read_reg(%struct.stb0899_state* %18, i32 61600) #8, !dbg !6871
  %conv18 = trunc i32 %call17 to i8, !dbg !6871
  store i8 %conv18, i8* %reg, align 1, !dbg !6872
  %19 = load i8, i8* %reg, align 1, !dbg !6873
  %conv19 = zext i8 %19 to i32, !dbg !6873
  %and20 = and i32 %conv19, -5, !dbg !6873
  %conv21 = trunc i32 %and20 to i8, !dbg !6873
  store i8 %conv21, i8* %reg, align 1, !dbg !6873
  %20 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6874
  %21 = load i8, i8* %reg, align 1, !dbg !6875
  %call22 = call i32 @stb0899_write_reg(%struct.stb0899_state* %20, i32 61600, i8 zeroext %21) #8, !dbg !6876
  call void @msleep(i32 100) #8, !dbg !6877
  store i32 0, i32* %retval, align 4, !dbg !6878
  br label %return, !dbg !6878

return:                                           ; preds = %for.end, %if.then14, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !6879
  ret i32 %22, !dbg !6879
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_recv_slave_reply(%struct.dvb_frontend* %fe, %struct.dvb_diseqc_slave_reply* %reply) #0 !dbg !6880 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %reply.addr = alloca %struct.dvb_diseqc_slave_reply*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  %reg = alloca i8, align 1
  %length = alloca i8, align 1
  %i = alloca i8, align 1
  %result = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6881, metadata !DIExpression()), !dbg !6882
  store %struct.dvb_diseqc_slave_reply* %reply, %struct.dvb_diseqc_slave_reply** %reply.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_diseqc_slave_reply** %reply.addr, metadata !6883, metadata !DIExpression()), !dbg !6884
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !6885, metadata !DIExpression()), !dbg !6886
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6887
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6888
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6888
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !6887
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !6886
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !6889, metadata !DIExpression()), !dbg !6890
  call void @llvm.dbg.declare(metadata i8* %length, metadata !6891, metadata !DIExpression()), !dbg !6892
  store i8 0, i8* %length, align 1, !dbg !6892
  call void @llvm.dbg.declare(metadata i8* %i, metadata !6893, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6895, metadata !DIExpression()), !dbg !6896
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6897
  %call = call i32 @stb0899_wait_diseqc_rxidle(%struct.stb0899_state* %3, i32 100) #8, !dbg !6899
  %cmp = icmp slt i32 %call, 0, !dbg !6900
  br i1 %cmp, label %if.then, label %if.end, !dbg !6901

if.then:                                          ; preds = %entry
  store i32 -110, i32* %retval, align 4, !dbg !6902
  br label %return, !dbg !6902

if.end:                                           ; preds = %entry
  %4 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6903
  %call1 = call i32 @stb0899_read_reg(%struct.stb0899_state* %4, i32 61604) #8, !dbg !6904
  %conv = trunc i32 %call1 to i8, !dbg !6904
  store i8 %conv, i8* %reg, align 1, !dbg !6905
  %5 = load i8, i8* %reg, align 1, !dbg !6906
  %conv2 = zext i8 %5 to i32, !dbg !6906
  %shr = ashr i32 %conv2, 7, !dbg !6906
  %and = and i32 %shr, 1, !dbg !6906
  %tobool = icmp ne i32 %and, 0, !dbg !6906
  br i1 %tobool, label %if.then3, label %if.end21, !dbg !6908

if.then3:                                         ; preds = %if.end
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6909
  %call4 = call i32 @stb0899_read_reg(%struct.stb0899_state* %6, i32 61605) #8, !dbg !6911
  %conv5 = trunc i32 %call4 to i8, !dbg !6911
  store i8 %conv5, i8* %reg, align 1, !dbg !6912
  %7 = load i8, i8* %reg, align 1, !dbg !6913
  %conv6 = zext i8 %7 to i32, !dbg !6913
  %shr7 = ashr i32 %conv6, 0, !dbg !6913
  %and8 = and i32 %shr7, 15, !dbg !6913
  %conv9 = trunc i32 %and8 to i8, !dbg !6913
  store i8 %conv9, i8* %length, align 1, !dbg !6914
  %8 = load i8, i8* %length, align 1, !dbg !6915
  %conv10 = zext i8 %8 to i64, !dbg !6915
  %cmp11 = icmp ugt i64 %conv10, 4, !dbg !6917
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !6918

if.then13:                                        ; preds = %if.then3
  store i32 -75, i32* %result, align 4, !dbg !6919
  br label %exit, !dbg !6921

if.end14:                                         ; preds = %if.then3
  %9 = load i8, i8* %length, align 1, !dbg !6922
  %10 = load %struct.dvb_diseqc_slave_reply*, %struct.dvb_diseqc_slave_reply** %reply.addr, align 8, !dbg !6923
  %msg_len = getelementptr inbounds %struct.dvb_diseqc_slave_reply, %struct.dvb_diseqc_slave_reply* %10, i32 0, i32 1, !dbg !6924
  store i8 %9, i8* %msg_len, align 4, !dbg !6925
  store i8 0, i8* %i, align 1, !dbg !6926
  br label %for.cond, !dbg !6928

for.cond:                                         ; preds = %for.inc, %if.end14
  %11 = load i8, i8* %i, align 1, !dbg !6929
  %conv15 = zext i8 %11 to i32, !dbg !6929
  %12 = load i8, i8* %length, align 1, !dbg !6931
  %conv16 = zext i8 %12 to i32, !dbg !6931
  %cmp17 = icmp slt i32 %conv15, %conv16, !dbg !6932
  br i1 %cmp17, label %for.body, label %for.end, !dbg !6933

for.body:                                         ; preds = %for.cond
  %13 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6934
  %call19 = call i32 @stb0899_read_reg(%struct.stb0899_state* %13, i32 61607) #8, !dbg !6935
  %conv20 = trunc i32 %call19 to i8, !dbg !6935
  %14 = load %struct.dvb_diseqc_slave_reply*, %struct.dvb_diseqc_slave_reply** %reply.addr, align 8, !dbg !6936
  %msg = getelementptr inbounds %struct.dvb_diseqc_slave_reply, %struct.dvb_diseqc_slave_reply* %14, i32 0, i32 0, !dbg !6937
  %15 = load i8, i8* %i, align 1, !dbg !6938
  %idxprom = zext i8 %15 to i64, !dbg !6936
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %msg, i64 0, i64 %idxprom, !dbg !6936
  store i8 %conv20, i8* %arrayidx, align 1, !dbg !6939
  br label %for.inc, !dbg !6936

for.inc:                                          ; preds = %for.body
  %16 = load i8, i8* %i, align 1, !dbg !6940
  %inc = add i8 %16, 1, !dbg !6940
  store i8 %inc, i8* %i, align 1, !dbg !6940
  br label %for.cond, !dbg !6941, !llvm.loop !6942

for.end:                                          ; preds = %for.cond
  br label %if.end21, !dbg !6944

if.end21:                                         ; preds = %for.end, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6945
  br label %return, !dbg !6945

exit:                                             ; preds = %if.then13
  call void @llvm.dbg.label(metadata !6946), !dbg !6947
  %17 = load i32, i32* %result, align 4, !dbg !6948
  store i32 %17, i32* %retval, align 4, !dbg !6949
  br label %return, !dbg !6949

return:                                           ; preds = %exit, %if.end21, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !6950
  ret i32 %18, !dbg !6950
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_send_diseqc_burst(%struct.dvb_frontend* %fe, i32 %burst) #0 !dbg !6951 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %burst.addr = alloca i32, align 4
  %state = alloca %struct.stb0899_state*, align 8
  %reg = alloca i8, align 1
  %old_state = alloca i8, align 1
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6952, metadata !DIExpression()), !dbg !6953
  store i32 %burst, i32* %burst.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %burst.addr, metadata !6954, metadata !DIExpression()), !dbg !6955
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !6956, metadata !DIExpression()), !dbg !6957
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6958
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6959
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6959
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !6958
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !6957
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !6960, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.declare(metadata i8* %old_state, metadata !6962, metadata !DIExpression()), !dbg !6963
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6964
  %call = call i32 @stb0899_wait_diseqc_txidle(%struct.stb0899_state* %3, i32 100) #8, !dbg !6966
  %cmp = icmp slt i32 %call, 0, !dbg !6967
  br i1 %cmp, label %if.then, label %if.end, !dbg !6968

if.then:                                          ; preds = %entry
  store i32 -110, i32* %retval, align 4, !dbg !6969
  br label %return, !dbg !6969

if.end:                                           ; preds = %entry
  %4 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6970
  %call1 = call i32 @stb0899_read_reg(%struct.stb0899_state* %4, i32 61600) #8, !dbg !6971
  %conv = trunc i32 %call1 to i8, !dbg !6971
  store i8 %conv, i8* %reg, align 1, !dbg !6972
  %5 = load i8, i8* %reg, align 1, !dbg !6973
  store i8 %5, i8* %old_state, align 1, !dbg !6974
  %6 = load i8, i8* %reg, align 1, !dbg !6975
  %conv2 = zext i8 %6 to i32, !dbg !6975
  %and = and i32 %conv2, -4, !dbg !6975
  %or = or i32 %and, 3, !dbg !6975
  %conv3 = trunc i32 %or to i8, !dbg !6975
  store i8 %conv3, i8* %reg, align 1, !dbg !6975
  %7 = load i8, i8* %reg, align 1, !dbg !6976
  %conv4 = zext i8 %7 to i32, !dbg !6976
  %and5 = and i32 %conv4, -5, !dbg !6976
  %or6 = or i32 %and5, 4, !dbg !6976
  %conv7 = trunc i32 %or6 to i8, !dbg !6976
  store i8 %conv7, i8* %reg, align 1, !dbg !6976
  %8 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6977
  %9 = load i8, i8* %reg, align 1, !dbg !6978
  %call8 = call i32 @stb0899_write_reg(%struct.stb0899_state* %8, i32 61600, i8 zeroext %9) #8, !dbg !6979
  %10 = load i32, i32* %burst.addr, align 4, !dbg !6980
  switch i32 %10, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
  ], !dbg !6981

sw.bb:                                            ; preds = %if.end
  %11 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6982
  %call9 = call i32 @stb0899_write_reg(%struct.stb0899_state* %11, i32 61607, i8 zeroext 0) #8, !dbg !6984
  br label %sw.epilog, !dbg !6985

sw.bb10:                                          ; preds = %if.end
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6986
  %call11 = call i32 @stb0899_write_reg(%struct.stb0899_state* %12, i32 61607, i8 zeroext -1) #8, !dbg !6987
  br label %sw.epilog, !dbg !6988

sw.epilog:                                        ; preds = %if.end, %sw.bb10, %sw.bb
  %13 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6989
  %call12 = call i32 @stb0899_read_reg(%struct.stb0899_state* %13, i32 61600) #8, !dbg !6990
  %conv13 = trunc i32 %call12 to i8, !dbg !6990
  store i8 %conv13, i8* %reg, align 1, !dbg !6991
  %14 = load i8, i8* %reg, align 1, !dbg !6992
  %conv14 = zext i8 %14 to i32, !dbg !6992
  %and15 = and i32 %conv14, -5, !dbg !6992
  %conv16 = trunc i32 %and15 to i8, !dbg !6992
  store i8 %conv16, i8* %reg, align 1, !dbg !6992
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6993
  %16 = load i8, i8* %reg, align 1, !dbg !6994
  %call17 = call i32 @stb0899_write_reg(%struct.stb0899_state* %15, i32 61600, i8 zeroext %16) #8, !dbg !6995
  %17 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !6996
  %call18 = call i32 @stb0899_wait_diseqc_txidle(%struct.stb0899_state* %17, i32 100) #8, !dbg !6998
  %cmp19 = icmp slt i32 %call18, 0, !dbg !6999
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !7000

if.then21:                                        ; preds = %sw.epilog
  store i32 -110, i32* %retval, align 4, !dbg !7001
  br label %return, !dbg !7001

if.end22:                                         ; preds = %sw.epilog
  %18 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7002
  %19 = load i8, i8* %old_state, align 1, !dbg !7003
  %call23 = call i32 @stb0899_write_reg(%struct.stb0899_state* %18, i32 61600, i8 zeroext %19) #8, !dbg !7004
  store i32 0, i32* %retval, align 4, !dbg !7005
  br label %return, !dbg !7005

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !7006
  ret i32 %20, !dbg !7006
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_set_tone(%struct.dvb_frontend* %fe, i32 %tone) #0 !dbg !7007 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %tone.addr = alloca i32, align 4
  %state = alloca %struct.stb0899_state*, align 8
  %internal = alloca %struct.stb0899_internal*, align 8
  %div = alloca i8, align 1
  %reg = alloca i8, align 1
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !7008, metadata !DIExpression()), !dbg !7009
  store i32 %tone, i32* %tone.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tone.addr, metadata !7010, metadata !DIExpression()), !dbg !7011
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !7012, metadata !DIExpression()), !dbg !7013
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7014
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !7015
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !7015
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !7014
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !7013
  call void @llvm.dbg.declare(metadata %struct.stb0899_internal** %internal, metadata !7016, metadata !DIExpression()), !dbg !7017
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7018
  %internal1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %3, i32 0, i32 4, !dbg !7019
  store %struct.stb0899_internal* %internal1, %struct.stb0899_internal** %internal, align 8, !dbg !7017
  call void @llvm.dbg.declare(metadata i8* %div, metadata !7020, metadata !DIExpression()), !dbg !7021
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !7022, metadata !DIExpression()), !dbg !7023
  %4 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7024
  %call = call i32 @stb0899_wait_diseqc_txidle(%struct.stb0899_state* %4, i32 100) #8, !dbg !7026
  %cmp = icmp slt i32 %call, 0, !dbg !7027
  br i1 %cmp, label %if.then, label %if.end, !dbg !7028

if.then:                                          ; preds = %entry
  store i32 -110, i32* %retval, align 4, !dbg !7029
  br label %return, !dbg !7029

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %tone.addr, align 4, !dbg !7030
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb14
  ], !dbg !7031

sw.bb:                                            ; preds = %if.end
  %6 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7032
  %master_clk = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %6, i32 0, i32 0, !dbg !7034
  %7 = load i32, i32* %master_clk, align 4, !dbg !7034
  %div2 = udiv i32 %7, 100, !dbg !7035
  %div3 = udiv i32 %div2, 5632, !dbg !7036
  %conv = trunc i32 %div3 to i8, !dbg !7037
  store i8 %conv, i8* %div, align 1, !dbg !7038
  %8 = load i8, i8* %div, align 1, !dbg !7039
  %conv4 = zext i8 %8 to i32, !dbg !7039
  %add = add i32 %conv4, 5, !dbg !7040
  %div5 = sdiv i32 %add, 10, !dbg !7041
  %conv6 = trunc i32 %div5 to i8, !dbg !7042
  store i8 %conv6, i8* %div, align 1, !dbg !7043
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7044
  %call7 = call i32 @stb0899_write_reg(%struct.stb0899_state* %9, i32 61791, i8 zeroext 102) #8, !dbg !7045
  %10 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7046
  %call8 = call i32 @stb0899_read_reg(%struct.stb0899_state* %10, i32 61712) #8, !dbg !7047
  %conv9 = trunc i32 %call8 to i8, !dbg !7047
  store i8 %conv9, i8* %reg, align 1, !dbg !7048
  %11 = load i8, i8* %reg, align 1, !dbg !7049
  %conv10 = zext i8 %11 to i32, !dbg !7049
  %and = and i32 %conv10, -113, !dbg !7049
  %or = or i32 %and, 48, !dbg !7049
  %conv11 = trunc i32 %or to i8, !dbg !7049
  store i8 %conv11, i8* %reg, align 1, !dbg !7049
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7050
  %13 = load i8, i8* %reg, align 1, !dbg !7051
  %call12 = call i32 @stb0899_write_reg(%struct.stb0899_state* %12, i32 61712, i8 zeroext %13) #8, !dbg !7052
  %14 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7053
  %15 = load i8, i8* %div, align 1, !dbg !7054
  %call13 = call i32 @stb0899_write_reg(%struct.stb0899_state* %14, i32 61713, i8 zeroext %15) #8, !dbg !7055
  br label %sw.epilog, !dbg !7056

sw.bb14:                                          ; preds = %if.end
  %16 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7057
  %call15 = call i32 @stb0899_write_reg(%struct.stb0899_state* %16, i32 61791, i8 zeroext 32) #8, !dbg !7058
  br label %sw.epilog, !dbg !7059

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7060
  br label %return, !dbg !7060

sw.epilog:                                        ; preds = %sw.bb14, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !7061
  br label %return, !dbg !7061

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !7062
  ret i32 %17, !dbg !7062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_set_voltage(%struct.dvb_frontend* %fe, i32 %voltage) #0 !dbg !7063 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %voltage.addr = alloca i32, align 4
  %state = alloca %struct.stb0899_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !7064, metadata !DIExpression()), !dbg !7065
  store i32 %voltage, i32* %voltage.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %voltage.addr, metadata !7066, metadata !DIExpression()), !dbg !7067
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !7068, metadata !DIExpression()), !dbg !7069
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7070
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !7071
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !7071
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !7070
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !7069
  %3 = load i32, i32* %voltage.addr, align 4, !dbg !7072
  switch i32 %3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 2, label %sw.bb7
  ], !dbg !7073

sw.bb:                                            ; preds = %entry
  %4 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7074
  %call = call i32 @stb0899_write_reg(%struct.stb0899_state* %4, i32 61760, i8 zeroext -126) #8, !dbg !7076
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7077
  %call1 = call i32 @stb0899_write_reg(%struct.stb0899_state* %5, i32 61761, i8 zeroext 2) #8, !dbg !7078
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7079
  %call2 = call i32 @stb0899_write_reg(%struct.stb0899_state* %6, i32 61762, i8 zeroext 0) #8, !dbg !7080
  br label %sw.epilog, !dbg !7081

sw.bb3:                                           ; preds = %entry
  %7 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7082
  %call4 = call i32 @stb0899_write_reg(%struct.stb0899_state* %7, i32 61760, i8 zeroext 2) #8, !dbg !7083
  %8 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7084
  %call5 = call i32 @stb0899_write_reg(%struct.stb0899_state* %8, i32 61761, i8 zeroext 2) #8, !dbg !7085
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7086
  %call6 = call i32 @stb0899_write_reg(%struct.stb0899_state* %9, i32 61762, i8 zeroext -126) #8, !dbg !7087
  br label %sw.epilog, !dbg !7088

sw.bb7:                                           ; preds = %entry
  %10 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7089
  %call8 = call i32 @stb0899_write_reg(%struct.stb0899_state* %10, i32 61760, i8 zeroext -126) #8, !dbg !7090
  %11 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7091
  %call9 = call i32 @stb0899_write_reg(%struct.stb0899_state* %11, i32 61761, i8 zeroext -126) #8, !dbg !7092
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7093
  %call10 = call i32 @stb0899_write_reg(%struct.stb0899_state* %12, i32 61762, i8 zeroext -126) #8, !dbg !7094
  br label %sw.epilog, !dbg !7095

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7096
  br label %return, !dbg !7096

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb3, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !7097
  br label %return, !dbg !7097

return:                                           ; preds = %sw.epilog, %sw.default
  %13 = load i32, i32* %retval, align 4, !dbg !7098
  ret i32 %13, !dbg !7098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_search(%struct.dvb_frontend* %fe) #0 !dbg !7099 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.stb0899_state*, align 8
  %i_params = alloca %struct.stb0899_params*, align 8
  %internal = alloca %struct.stb0899_internal*, align 8
  %config = alloca %struct.stb0899_config*, align 8
  %props = alloca %struct.dtv_frontend_properties*, align 8
  %SearchRange = alloca i32, align 4
  %gain = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !7100, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state, metadata !7102, metadata !DIExpression()), !dbg !7103
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7104
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !7105
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !7105
  %2 = bitcast i8* %1 to %struct.stb0899_state*, !dbg !7104
  store %struct.stb0899_state* %2, %struct.stb0899_state** %state, align 8, !dbg !7103
  call void @llvm.dbg.declare(metadata %struct.stb0899_params** %i_params, metadata !7106, metadata !DIExpression()), !dbg !7108
  %3 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7109
  %params = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %3, i32 0, i32 6, !dbg !7110
  store %struct.stb0899_params* %params, %struct.stb0899_params** %i_params, align 8, !dbg !7108
  call void @llvm.dbg.declare(metadata %struct.stb0899_internal** %internal, metadata !7111, metadata !DIExpression()), !dbg !7112
  %4 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7113
  %internal1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %4, i32 0, i32 4, !dbg !7114
  store %struct.stb0899_internal* %internal1, %struct.stb0899_internal** %internal, align 8, !dbg !7112
  call void @llvm.dbg.declare(metadata %struct.stb0899_config** %config, metadata !7115, metadata !DIExpression()), !dbg !7116
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7117
  %config2 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %5, i32 0, i32 1, !dbg !7118
  %6 = load %struct.stb0899_config*, %struct.stb0899_config** %config2, align 8, !dbg !7118
  store %struct.stb0899_config* %6, %struct.stb0899_config** %config, align 8, !dbg !7116
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %props, metadata !7119, metadata !DIExpression()), !dbg !7120
  %7 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7121
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %7, i32 0, i32 8, !dbg !7122
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %props, align 8, !dbg !7120
  call void @llvm.dbg.declare(metadata i32* %SearchRange, metadata !7123, metadata !DIExpression()), !dbg !7124
  call void @llvm.dbg.declare(metadata i32* %gain, metadata !7125, metadata !DIExpression()), !dbg !7126
  %8 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %props, align 8, !dbg !7127
  %frequency = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %8, i32 0, i32 0, !dbg !7128
  %9 = load i32, i32* %frequency, align 4, !dbg !7128
  %10 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7129
  %freq = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %10, i32 0, i32 0, !dbg !7130
  store i32 %9, i32* %freq, align 4, !dbg !7131
  %11 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %props, align 8, !dbg !7132
  %symbol_rate = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %11, i32 0, i32 10, !dbg !7133
  %12 = load i32, i32* %symbol_rate, align 4, !dbg !7133
  %13 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7134
  %srate = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %13, i32 0, i32 1, !dbg !7135
  store i32 %12, i32* %srate, align 4, !dbg !7136
  %14 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %props, align 8, !dbg !7137
  %delivery_system = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %14, i32 0, i32 15, !dbg !7138
  %15 = load i32, i32* %delivery_system, align 4, !dbg !7138
  %16 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7139
  %delsys = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %16, i32 0, i32 5, !dbg !7140
  store i32 %15, i32* %delsys, align 4, !dbg !7141
  br label %do.body, !dbg !7142

do.body:                                          ; preds = %entry
  %17 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7143
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %17, i32 0, i32 3, !dbg !7143
  %18 = load i32*, i32** %verbose, align 8, !dbg !7143
  %19 = load i32, i32* %18, align 4, !dbg !7143
  %cmp = icmp ugt i32 %19, 0, !dbg !7143
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7143

land.lhs.true:                                    ; preds = %do.body
  %20 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7143
  %verbose3 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %20, i32 0, i32 3, !dbg !7143
  %21 = load i32*, i32** %verbose3, align 8, !dbg !7143
  %22 = load i32, i32* %21, align 4, !dbg !7143
  %cmp4 = icmp ugt i32 %22, 3, !dbg !7143
  br i1 %cmp4, label %if.then, label %if.else, !dbg !7148

if.then:                                          ; preds = %land.lhs.true
  %23 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7143
  %delsys5 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %23, i32 0, i32 5, !dbg !7143
  %24 = load i32, i32* %delsys5, align 4, !dbg !7143
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.141, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0), i32 %24) #9, !dbg !7143
  br label %if.end34, !dbg !7143

if.else:                                          ; preds = %land.lhs.true, %do.body
  %25 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7149
  %verbose6 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %25, i32 0, i32 3, !dbg !7149
  %26 = load i32*, i32** %verbose6, align 8, !dbg !7149
  %27 = load i32, i32* %26, align 4, !dbg !7149
  %cmp7 = icmp ugt i32 %27, 1, !dbg !7149
  br i1 %cmp7, label %land.lhs.true8, label %if.else14, !dbg !7149

land.lhs.true8:                                   ; preds = %if.else
  %28 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7149
  %verbose9 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %28, i32 0, i32 3, !dbg !7149
  %29 = load i32*, i32** %verbose9, align 8, !dbg !7149
  %30 = load i32, i32* %29, align 4, !dbg !7149
  %cmp10 = icmp ugt i32 %30, 3, !dbg !7149
  br i1 %cmp10, label %if.then11, label %if.else14, !dbg !7143

if.then11:                                        ; preds = %land.lhs.true8
  %31 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7149
  %delsys12 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %31, i32 0, i32 5, !dbg !7149
  %32 = load i32, i32* %delsys12, align 4, !dbg !7149
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0), i32 %32) #9, !dbg !7149
  br label %if.end33, !dbg !7149

if.else14:                                        ; preds = %land.lhs.true8, %if.else
  %33 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7151
  %verbose15 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %33, i32 0, i32 3, !dbg !7151
  %34 = load i32*, i32** %verbose15, align 8, !dbg !7151
  %35 = load i32, i32* %34, align 4, !dbg !7151
  %cmp16 = icmp ugt i32 %35, 2, !dbg !7151
  br i1 %cmp16, label %land.lhs.true17, label %if.else23, !dbg !7151

land.lhs.true17:                                  ; preds = %if.else14
  %36 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7151
  %verbose18 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %36, i32 0, i32 3, !dbg !7151
  %37 = load i32*, i32** %verbose18, align 8, !dbg !7151
  %38 = load i32, i32* %37, align 4, !dbg !7151
  %cmp19 = icmp ugt i32 %38, 3, !dbg !7151
  br i1 %cmp19, label %if.then20, label %if.else23, !dbg !7149

if.then20:                                        ; preds = %land.lhs.true17
  %39 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7151
  %delsys21 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %39, i32 0, i32 5, !dbg !7151
  %40 = load i32, i32* %delsys21, align 4, !dbg !7151
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0), i32 %40) #9, !dbg !7151
  br label %if.end32, !dbg !7151

if.else23:                                        ; preds = %land.lhs.true17, %if.else14
  %41 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7153
  %verbose24 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %41, i32 0, i32 3, !dbg !7153
  %42 = load i32*, i32** %verbose24, align 8, !dbg !7153
  %43 = load i32, i32* %42, align 4, !dbg !7153
  %cmp25 = icmp ugt i32 %43, 3, !dbg !7153
  br i1 %cmp25, label %land.lhs.true26, label %if.end, !dbg !7153

land.lhs.true26:                                  ; preds = %if.else23
  %44 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7153
  %verbose27 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %44, i32 0, i32 3, !dbg !7153
  %45 = load i32*, i32** %verbose27, align 8, !dbg !7153
  %46 = load i32, i32* %45, align 4, !dbg !7153
  %cmp28 = icmp ugt i32 %46, 3, !dbg !7153
  br i1 %cmp28, label %if.then29, label %if.end, !dbg !7151

if.then29:                                        ; preds = %land.lhs.true26
  %47 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7153
  %delsys30 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %47, i32 0, i32 5, !dbg !7153
  %48 = load i32, i32* %delsys30, align 4, !dbg !7153
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0), i32 %48) #9, !dbg !7153
  br label %if.end, !dbg !7153

if.end:                                           ; preds = %if.then29, %land.lhs.true26, %if.else23
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then20
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then11
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then
  br label %do.end, !dbg !7155

do.end:                                           ; preds = %if.end34
  store i32 10000000, i32* %SearchRange, align 4, !dbg !7156
  br label %do.body35, !dbg !7157

do.body35:                                        ; preds = %do.end
  %49 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7158
  %verbose36 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %49, i32 0, i32 3, !dbg !7158
  %50 = load i32*, i32** %verbose36, align 8, !dbg !7158
  %51 = load i32, i32* %50, align 4, !dbg !7158
  %cmp37 = icmp ugt i32 %51, 0, !dbg !7158
  br i1 %cmp37, label %land.lhs.true38, label %if.else45, !dbg !7158

land.lhs.true38:                                  ; preds = %do.body35
  %52 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7158
  %verbose39 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %52, i32 0, i32 3, !dbg !7158
  %53 = load i32*, i32** %verbose39, align 8, !dbg !7158
  %54 = load i32, i32* %53, align 4, !dbg !7158
  %cmp40 = icmp ugt i32 %54, 3, !dbg !7158
  br i1 %cmp40, label %if.then41, label %if.else45, !dbg !7163

if.then41:                                        ; preds = %land.lhs.true38
  %55 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7158
  %freq42 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %55, i32 0, i32 0, !dbg !7158
  %56 = load i32, i32* %freq42, align 4, !dbg !7158
  %57 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7158
  %srate43 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %57, i32 0, i32 1, !dbg !7158
  %58 = load i32, i32* %srate43, align 4, !dbg !7158
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0), i32 %56, i32 %58) #9, !dbg !7158
  br label %if.end78, !dbg !7158

if.else45:                                        ; preds = %land.lhs.true38, %do.body35
  %59 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7164
  %verbose46 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %59, i32 0, i32 3, !dbg !7164
  %60 = load i32*, i32** %verbose46, align 8, !dbg !7164
  %61 = load i32, i32* %60, align 4, !dbg !7164
  %cmp47 = icmp ugt i32 %61, 1, !dbg !7164
  br i1 %cmp47, label %land.lhs.true48, label %if.else55, !dbg !7164

land.lhs.true48:                                  ; preds = %if.else45
  %62 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7164
  %verbose49 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %62, i32 0, i32 3, !dbg !7164
  %63 = load i32*, i32** %verbose49, align 8, !dbg !7164
  %64 = load i32, i32* %63, align 4, !dbg !7164
  %cmp50 = icmp ugt i32 %64, 3, !dbg !7164
  br i1 %cmp50, label %if.then51, label %if.else55, !dbg !7158

if.then51:                                        ; preds = %land.lhs.true48
  %65 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7164
  %freq52 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %65, i32 0, i32 0, !dbg !7164
  %66 = load i32, i32* %freq52, align 4, !dbg !7164
  %67 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7164
  %srate53 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %67, i32 0, i32 1, !dbg !7164
  %68 = load i32, i32* %srate53, align 4, !dbg !7164
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0), i32 %66, i32 %68) #9, !dbg !7164
  br label %if.end77, !dbg !7164

if.else55:                                        ; preds = %land.lhs.true48, %if.else45
  %69 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7166
  %verbose56 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %69, i32 0, i32 3, !dbg !7166
  %70 = load i32*, i32** %verbose56, align 8, !dbg !7166
  %71 = load i32, i32* %70, align 4, !dbg !7166
  %cmp57 = icmp ugt i32 %71, 2, !dbg !7166
  br i1 %cmp57, label %land.lhs.true58, label %if.else65, !dbg !7166

land.lhs.true58:                                  ; preds = %if.else55
  %72 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7166
  %verbose59 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %72, i32 0, i32 3, !dbg !7166
  %73 = load i32*, i32** %verbose59, align 8, !dbg !7166
  %74 = load i32, i32* %73, align 4, !dbg !7166
  %cmp60 = icmp ugt i32 %74, 3, !dbg !7166
  br i1 %cmp60, label %if.then61, label %if.else65, !dbg !7164

if.then61:                                        ; preds = %land.lhs.true58
  %75 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7166
  %freq62 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %75, i32 0, i32 0, !dbg !7166
  %76 = load i32, i32* %freq62, align 4, !dbg !7166
  %77 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7166
  %srate63 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %77, i32 0, i32 1, !dbg !7166
  %78 = load i32, i32* %srate63, align 4, !dbg !7166
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0), i32 %76, i32 %78) #9, !dbg !7166
  br label %if.end76, !dbg !7166

if.else65:                                        ; preds = %land.lhs.true58, %if.else55
  %79 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7168
  %verbose66 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %79, i32 0, i32 3, !dbg !7168
  %80 = load i32*, i32** %verbose66, align 8, !dbg !7168
  %81 = load i32, i32* %80, align 4, !dbg !7168
  %cmp67 = icmp ugt i32 %81, 3, !dbg !7168
  br i1 %cmp67, label %land.lhs.true68, label %if.end75, !dbg !7168

land.lhs.true68:                                  ; preds = %if.else65
  %82 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7168
  %verbose69 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %82, i32 0, i32 3, !dbg !7168
  %83 = load i32*, i32** %verbose69, align 8, !dbg !7168
  %84 = load i32, i32* %83, align 4, !dbg !7168
  %cmp70 = icmp ugt i32 %84, 3, !dbg !7168
  br i1 %cmp70, label %if.then71, label %if.end75, !dbg !7166

if.then71:                                        ; preds = %land.lhs.true68
  %85 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7168
  %freq72 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %85, i32 0, i32 0, !dbg !7168
  %86 = load i32, i32* %freq72, align 4, !dbg !7168
  %87 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7168
  %srate73 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %87, i32 0, i32 1, !dbg !7168
  %88 = load i32, i32* %srate73, align 4, !dbg !7168
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0), i32 %86, i32 %88) #9, !dbg !7168
  br label %if.end75, !dbg !7168

if.end75:                                         ; preds = %if.then71, %land.lhs.true68, %if.else65
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then61
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then51
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then41
  br label %do.end79, !dbg !7170

do.end79:                                         ; preds = %if.end78
  %89 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7171
  %srate80 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %89, i32 0, i32 1, !dbg !7171
  %90 = load i32, i32* %srate80, align 4, !dbg !7171
  %cmp81 = icmp ule i32 1000000, %90, !dbg !7171
  br i1 %cmp81, label %land.lhs.true82, label %lor.lhs.false, !dbg !7171

land.lhs.true82:                                  ; preds = %do.end79
  %91 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7171
  %srate83 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %91, i32 0, i32 1, !dbg !7171
  %92 = load i32, i32* %srate83, align 4, !dbg !7171
  %cmp84 = icmp ule i32 %92, 45000000, !dbg !7171
  br i1 %cmp84, label %cond.true, label %lor.lhs.false, !dbg !7171

lor.lhs.false:                                    ; preds = %land.lhs.true82, %do.end79
  %93 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7171
  %srate85 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %93, i32 0, i32 1, !dbg !7171
  %94 = load i32, i32* %srate85, align 4, !dbg !7171
  %cmp86 = icmp ule i32 45000000, %94, !dbg !7171
  br i1 %cmp86, label %land.lhs.true87, label %cond.false, !dbg !7171

land.lhs.true87:                                  ; preds = %lor.lhs.false
  %95 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7171
  %srate88 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %95, i32 0, i32 1, !dbg !7171
  %96 = load i32, i32* %srate88, align 4, !dbg !7171
  %cmp89 = icmp ule i32 %96, 1000000, !dbg !7171
  br i1 %cmp89, label %cond.true, label %cond.false, !dbg !7173

cond.true:                                        ; preds = %land.lhs.true87, %land.lhs.true82
  br i1 true, label %if.then90, label %if.end485, !dbg !7171

cond.false:                                       ; preds = %land.lhs.true87, %lor.lhs.false
  br i1 false, label %if.then90, label %if.end485, !dbg !7173

if.then90:                                        ; preds = %cond.false, %cond.true
  br label %do.body91, !dbg !7174

do.body91:                                        ; preds = %if.then90
  %97 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7176
  %verbose92 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %97, i32 0, i32 3, !dbg !7176
  %98 = load i32*, i32** %verbose92, align 8, !dbg !7176
  %99 = load i32, i32* %98, align 4, !dbg !7176
  %cmp93 = icmp ugt i32 %99, 0, !dbg !7176
  br i1 %cmp93, label %land.lhs.true94, label %if.else99, !dbg !7176

land.lhs.true94:                                  ; preds = %do.body91
  %100 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7176
  %verbose95 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %100, i32 0, i32 3, !dbg !7176
  %101 = load i32*, i32** %verbose95, align 8, !dbg !7176
  %102 = load i32, i32* %101, align 4, !dbg !7176
  %cmp96 = icmp ugt i32 %102, 3, !dbg !7176
  br i1 %cmp96, label %if.then97, label %if.else99, !dbg !7181

if.then97:                                        ; preds = %land.lhs.true94
  %call98 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7176
  br label %if.end126, !dbg !7176

if.else99:                                        ; preds = %land.lhs.true94, %do.body91
  %103 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7182
  %verbose100 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %103, i32 0, i32 3, !dbg !7182
  %104 = load i32*, i32** %verbose100, align 8, !dbg !7182
  %105 = load i32, i32* %104, align 4, !dbg !7182
  %cmp101 = icmp ugt i32 %105, 1, !dbg !7182
  br i1 %cmp101, label %land.lhs.true102, label %if.else107, !dbg !7182

land.lhs.true102:                                 ; preds = %if.else99
  %106 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7182
  %verbose103 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %106, i32 0, i32 3, !dbg !7182
  %107 = load i32*, i32** %verbose103, align 8, !dbg !7182
  %108 = load i32, i32* %107, align 4, !dbg !7182
  %cmp104 = icmp ugt i32 %108, 3, !dbg !7182
  br i1 %cmp104, label %if.then105, label %if.else107, !dbg !7176

if.then105:                                       ; preds = %land.lhs.true102
  %call106 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7182
  br label %if.end125, !dbg !7182

if.else107:                                       ; preds = %land.lhs.true102, %if.else99
  %109 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7184
  %verbose108 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %109, i32 0, i32 3, !dbg !7184
  %110 = load i32*, i32** %verbose108, align 8, !dbg !7184
  %111 = load i32, i32* %110, align 4, !dbg !7184
  %cmp109 = icmp ugt i32 %111, 2, !dbg !7184
  br i1 %cmp109, label %land.lhs.true110, label %if.else115, !dbg !7184

land.lhs.true110:                                 ; preds = %if.else107
  %112 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7184
  %verbose111 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %112, i32 0, i32 3, !dbg !7184
  %113 = load i32*, i32** %verbose111, align 8, !dbg !7184
  %114 = load i32, i32* %113, align 4, !dbg !7184
  %cmp112 = icmp ugt i32 %114, 3, !dbg !7184
  br i1 %cmp112, label %if.then113, label %if.else115, !dbg !7182

if.then113:                                       ; preds = %land.lhs.true110
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.151, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7184
  br label %if.end124, !dbg !7184

if.else115:                                       ; preds = %land.lhs.true110, %if.else107
  %115 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7186
  %verbose116 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %115, i32 0, i32 3, !dbg !7186
  %116 = load i32*, i32** %verbose116, align 8, !dbg !7186
  %117 = load i32, i32* %116, align 4, !dbg !7186
  %cmp117 = icmp ugt i32 %117, 3, !dbg !7186
  br i1 %cmp117, label %land.lhs.true118, label %if.end123, !dbg !7186

land.lhs.true118:                                 ; preds = %if.else115
  %118 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7186
  %verbose119 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %118, i32 0, i32 3, !dbg !7186
  %119 = load i32*, i32** %verbose119, align 8, !dbg !7186
  %120 = load i32, i32* %119, align 4, !dbg !7186
  %cmp120 = icmp ugt i32 %120, 3, !dbg !7186
  br i1 %cmp120, label %if.then121, label %if.end123, !dbg !7184

if.then121:                                       ; preds = %land.lhs.true118
  %call122 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7186
  br label %if.end123, !dbg !7186

if.end123:                                        ; preds = %if.then121, %land.lhs.true118, %if.else115
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then113
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.then105
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then97
  br label %do.end127, !dbg !7188

do.end127:                                        ; preds = %if.end126
  %121 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7189
  call void @stb0899_set_delivery(%struct.stb0899_state* %121) #8, !dbg !7190
  %122 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7191
  %config128 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %122, i32 0, i32 1, !dbg !7193
  %123 = load %struct.stb0899_config*, %struct.stb0899_config** %config128, align 8, !dbg !7193
  %tuner_set_rfsiggain = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %123, i32 0, i32 38, !dbg !7194
  %124 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_rfsiggain, align 8, !dbg !7194
  %tobool = icmp ne i32 (%struct.dvb_frontend*, i32)* %124, null, !dbg !7191
  br i1 %tobool, label %if.then129, label %if.end143, !dbg !7195

if.then129:                                       ; preds = %do.end127
  %125 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7196
  %srate130 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %125, i32 0, i32 2, !dbg !7199
  %126 = load i32, i32* %srate130, align 4, !dbg !7199
  %cmp131 = icmp ugt i32 %126, 15000000, !dbg !7200
  br i1 %cmp131, label %if.then132, label %if.else133, !dbg !7201

if.then132:                                       ; preds = %if.then129
  store i32 8, i32* %gain, align 4, !dbg !7202
  br label %if.end139, !dbg !7203

if.else133:                                       ; preds = %if.then129
  %127 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7204
  %srate134 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %127, i32 0, i32 2, !dbg !7206
  %128 = load i32, i32* %srate134, align 4, !dbg !7206
  %cmp135 = icmp ugt i32 %128, 5000000, !dbg !7207
  br i1 %cmp135, label %if.then136, label %if.else137, !dbg !7208

if.then136:                                       ; preds = %if.else133
  store i32 12, i32* %gain, align 4, !dbg !7209
  br label %if.end138, !dbg !7210

if.else137:                                       ; preds = %if.else133
  store i32 14, i32* %gain, align 4, !dbg !7211
  br label %if.end138

if.end138:                                        ; preds = %if.else137, %if.then136
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then132
  %129 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7212
  %config140 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %129, i32 0, i32 1, !dbg !7213
  %130 = load %struct.stb0899_config*, %struct.stb0899_config** %config140, align 8, !dbg !7213
  %tuner_set_rfsiggain141 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %130, i32 0, i32 38, !dbg !7214
  %131 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_rfsiggain141, align 8, !dbg !7214
  %132 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7215
  %133 = load i32, i32* %gain, align 4, !dbg !7216
  %call142 = call i32 %131(%struct.dvb_frontend* %132, i32 %133) #8, !dbg !7212
  br label %if.end143, !dbg !7217

if.end143:                                        ; preds = %if.end139, %do.end127
  %134 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7218
  %srate144 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %134, i32 0, i32 1, !dbg !7220
  %135 = load i32, i32* %srate144, align 4, !dbg !7220
  %cmp145 = icmp ule i32 %135, 5000000, !dbg !7221
  br i1 %cmp145, label %if.then146, label %if.else147, !dbg !7222

if.then146:                                       ; preds = %if.end143
  %136 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7223
  %137 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !7224
  %lo_clk = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %137, i32 0, i32 19, !dbg !7225
  %138 = load i32, i32* %lo_clk, align 4, !dbg !7225
  call void @stb0899_set_mclk(%struct.stb0899_state* %136, i32 %138) #8, !dbg !7226
  br label %if.end148, !dbg !7226

if.else147:                                       ; preds = %if.end143
  %139 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7227
  %140 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !7228
  %hi_clk = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %140, i32 0, i32 20, !dbg !7229
  %141 = load i32, i32* %hi_clk, align 8, !dbg !7229
  call void @stb0899_set_mclk(%struct.stb0899_state* %139, i32 %141) #8, !dbg !7230
  br label %if.end148

if.end148:                                        ; preds = %if.else147, %if.then146
  %142 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7231
  %delsys149 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %142, i32 0, i32 5, !dbg !7232
  %143 = load i32, i32* %delsys149, align 4, !dbg !7232
  switch i32 %143, label %sw.default [
    i32 5, label %sw.bb
    i32 4, label %sw.bb
    i32 6, label %sw.bb311
  ], !dbg !7233

sw.bb:                                            ; preds = %if.end148, %if.end148
  br label %do.body150, !dbg !7234

do.body150:                                       ; preds = %sw.bb
  %144 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7236
  %verbose151 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %144, i32 0, i32 3, !dbg !7236
  %145 = load i32*, i32** %verbose151, align 8, !dbg !7236
  %146 = load i32, i32* %145, align 4, !dbg !7236
  %cmp152 = icmp ugt i32 %146, 0, !dbg !7236
  br i1 %cmp152, label %land.lhs.true153, label %if.else158, !dbg !7236

land.lhs.true153:                                 ; preds = %do.body150
  %147 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7236
  %verbose154 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %147, i32 0, i32 3, !dbg !7236
  %148 = load i32*, i32** %verbose154, align 8, !dbg !7236
  %149 = load i32, i32* %148, align 4, !dbg !7236
  %cmp155 = icmp ugt i32 %149, 3, !dbg !7236
  br i1 %cmp155, label %if.then156, label %if.else158, !dbg !7241

if.then156:                                       ; preds = %land.lhs.true153
  %call157 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.153, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7236
  br label %if.end185, !dbg !7236

if.else158:                                       ; preds = %land.lhs.true153, %do.body150
  %150 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7242
  %verbose159 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %150, i32 0, i32 3, !dbg !7242
  %151 = load i32*, i32** %verbose159, align 8, !dbg !7242
  %152 = load i32, i32* %151, align 4, !dbg !7242
  %cmp160 = icmp ugt i32 %152, 1, !dbg !7242
  br i1 %cmp160, label %land.lhs.true161, label %if.else166, !dbg !7242

land.lhs.true161:                                 ; preds = %if.else158
  %153 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7242
  %verbose162 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %153, i32 0, i32 3, !dbg !7242
  %154 = load i32*, i32** %verbose162, align 8, !dbg !7242
  %155 = load i32, i32* %154, align 4, !dbg !7242
  %cmp163 = icmp ugt i32 %155, 3, !dbg !7242
  br i1 %cmp163, label %if.then164, label %if.else166, !dbg !7236

if.then164:                                       ; preds = %land.lhs.true161
  %call165 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7242
  br label %if.end184, !dbg !7242

if.else166:                                       ; preds = %land.lhs.true161, %if.else158
  %156 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7244
  %verbose167 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %156, i32 0, i32 3, !dbg !7244
  %157 = load i32*, i32** %verbose167, align 8, !dbg !7244
  %158 = load i32, i32* %157, align 4, !dbg !7244
  %cmp168 = icmp ugt i32 %158, 2, !dbg !7244
  br i1 %cmp168, label %land.lhs.true169, label %if.else174, !dbg !7244

land.lhs.true169:                                 ; preds = %if.else166
  %159 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7244
  %verbose170 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %159, i32 0, i32 3, !dbg !7244
  %160 = load i32*, i32** %verbose170, align 8, !dbg !7244
  %161 = load i32, i32* %160, align 4, !dbg !7244
  %cmp171 = icmp ugt i32 %161, 3, !dbg !7244
  br i1 %cmp171, label %if.then172, label %if.else174, !dbg !7242

if.then172:                                       ; preds = %land.lhs.true169
  %call173 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7244
  br label %if.end183, !dbg !7244

if.else174:                                       ; preds = %land.lhs.true169, %if.else166
  %162 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7246
  %verbose175 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %162, i32 0, i32 3, !dbg !7246
  %163 = load i32*, i32** %verbose175, align 8, !dbg !7246
  %164 = load i32, i32* %163, align 4, !dbg !7246
  %cmp176 = icmp ugt i32 %164, 3, !dbg !7246
  br i1 %cmp176, label %land.lhs.true177, label %if.end182, !dbg !7246

land.lhs.true177:                                 ; preds = %if.else174
  %165 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7246
  %verbose178 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %165, i32 0, i32 3, !dbg !7246
  %166 = load i32*, i32** %verbose178, align 8, !dbg !7246
  %167 = load i32, i32* %166, align 4, !dbg !7246
  %cmp179 = icmp ugt i32 %167, 3, !dbg !7246
  br i1 %cmp179, label %if.then180, label %if.end182, !dbg !7244

if.then180:                                       ; preds = %land.lhs.true177
  %call181 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7246
  br label %if.end182, !dbg !7246

if.end182:                                        ; preds = %if.then180, %land.lhs.true177, %if.else174
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.then172
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %if.then164
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.then156
  br label %do.end186, !dbg !7248

do.end186:                                        ; preds = %if.end185
  %168 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7249
  %freq187 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %168, i32 0, i32 0, !dbg !7250
  %169 = load i32, i32* %freq187, align 4, !dbg !7250
  %170 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7251
  %freq188 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %170, i32 0, i32 1, !dbg !7252
  store i32 %169, i32* %freq188, align 4, !dbg !7253
  %171 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7254
  %srate189 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %171, i32 0, i32 1, !dbg !7255
  %172 = load i32, i32* %srate189, align 4, !dbg !7255
  %173 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7256
  %srate190 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %173, i32 0, i32 2, !dbg !7257
  store i32 %172, i32* %srate190, align 4, !dbg !7258
  %174 = load i32, i32* %SearchRange, align 4, !dbg !7259
  %add = add i32 %174, 1500000, !dbg !7260
  %175 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7261
  %srate191 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %175, i32 0, i32 1, !dbg !7262
  %176 = load i32, i32* %srate191, align 4, !dbg !7262
  %div = udiv i32 %176, 5, !dbg !7263
  %add192 = add i32 %add, %div, !dbg !7264
  %177 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7265
  %srch_range = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %177, i32 0, i32 4, !dbg !7266
  store i32 %add192, i32* %srch_range, align 4, !dbg !7267
  %178 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7268
  %derot_percent = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %178, i32 0, i32 12, !dbg !7269
  store i16 30, i16* %derot_percent, align 2, !dbg !7270
  %179 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7271
  %frontend = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %179, i32 0, i32 2, !dbg !7272
  %call193 = call i32 @stb0899_i2c_gate_ctrl(%struct.dvb_frontend* %frontend, i32 1) #8, !dbg !7273
  %180 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7274
  %config194 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %180, i32 0, i32 1, !dbg !7276
  %181 = load %struct.stb0899_config*, %struct.stb0899_config** %config194, align 8, !dbg !7276
  %tuner_set_bandwidth = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %181, i32 0, i32 36, !dbg !7277
  %182 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth, align 8, !dbg !7277
  %tobool195 = icmp ne i32 (%struct.dvb_frontend*, i32)* %182, null, !dbg !7274
  br i1 %tobool195, label %if.then196, label %if.end204, !dbg !7278

if.then196:                                       ; preds = %do.end186
  %183 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7279
  %config197 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %183, i32 0, i32 1, !dbg !7280
  %184 = load %struct.stb0899_config*, %struct.stb0899_config** %config197, align 8, !dbg !7280
  %tuner_set_bandwidth198 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %184, i32 0, i32 36, !dbg !7281
  %185 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth198, align 8, !dbg !7281
  %186 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7282
  %187 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7283
  %call199 = call i64 @stb0899_carr_width(%struct.stb0899_state* %187) #8, !dbg !7284
  %188 = load i32, i32* %SearchRange, align 4, !dbg !7285
  %conv = zext i32 %188 to i64, !dbg !7285
  %add200 = add i64 %call199, %conv, !dbg !7286
  %mul = mul i64 13, %add200, !dbg !7287
  %div201 = sdiv i64 %mul, 10, !dbg !7288
  %conv202 = trunc i64 %div201 to i32, !dbg !7289
  %call203 = call i32 %185(%struct.dvb_frontend* %186, i32 %conv202) #8, !dbg !7279
  br label %if.end204, !dbg !7279

if.end204:                                        ; preds = %if.then196, %do.end186
  %189 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7290
  %config205 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %189, i32 0, i32 1, !dbg !7292
  %190 = load %struct.stb0899_config*, %struct.stb0899_config** %config205, align 8, !dbg !7292
  %tuner_get_bandwidth = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %190, i32 0, i32 37, !dbg !7293
  %191 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_bandwidth, align 8, !dbg !7293
  %tobool206 = icmp ne i32 (%struct.dvb_frontend*, i32*)* %191, null, !dbg !7290
  br i1 %tobool206, label %if.then207, label %if.end211, !dbg !7294

if.then207:                                       ; preds = %if.end204
  %192 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7295
  %config208 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %192, i32 0, i32 1, !dbg !7296
  %193 = load %struct.stb0899_config*, %struct.stb0899_config** %config208, align 8, !dbg !7296
  %tuner_get_bandwidth209 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %193, i32 0, i32 37, !dbg !7297
  %194 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_bandwidth209, align 8, !dbg !7297
  %195 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7298
  %196 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7299
  %tuner_bw = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %196, i32 0, i32 8, !dbg !7300
  %call210 = call i32 %194(%struct.dvb_frontend* %195, i32* %tuner_bw) #8, !dbg !7295
  br label %if.end211, !dbg !7295

if.end211:                                        ; preds = %if.then207, %if.end204
  %197 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7301
  %frontend212 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %197, i32 0, i32 2, !dbg !7302
  %call213 = call i32 @stb0899_i2c_gate_ctrl(%struct.dvb_frontend* %frontend212, i32 0) #8, !dbg !7303
  %198 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7304
  %call214 = call i32 @stb0899_write_reg(%struct.stb0899_state* %198, i32 61783, i8 zeroext 17) #8, !dbg !7305
  br label %do.body215, !dbg !7306

do.body215:                                       ; preds = %if.end211
  %199 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7307
  %verbose216 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %199, i32 0, i32 3, !dbg !7307
  %200 = load i32*, i32** %verbose216, align 8, !dbg !7307
  %201 = load i32, i32* %200, align 4, !dbg !7307
  %cmp217 = icmp ugt i32 %201, 0, !dbg !7307
  br i1 %cmp217, label %land.lhs.true219, label %if.else225, !dbg !7307

land.lhs.true219:                                 ; preds = %do.body215
  %202 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7307
  %verbose220 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %202, i32 0, i32 3, !dbg !7307
  %203 = load i32*, i32** %verbose220, align 8, !dbg !7307
  %204 = load i32, i32* %203, align 4, !dbg !7307
  %cmp221 = icmp ugt i32 %204, 3, !dbg !7307
  br i1 %cmp221, label %if.then223, label %if.else225, !dbg !7312

if.then223:                                       ; preds = %land.lhs.true219
  %call224 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7307
  br label %if.end258, !dbg !7307

if.else225:                                       ; preds = %land.lhs.true219, %do.body215
  %205 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7313
  %verbose226 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %205, i32 0, i32 3, !dbg !7313
  %206 = load i32*, i32** %verbose226, align 8, !dbg !7313
  %207 = load i32, i32* %206, align 4, !dbg !7313
  %cmp227 = icmp ugt i32 %207, 1, !dbg !7313
  br i1 %cmp227, label %land.lhs.true229, label %if.else235, !dbg !7313

land.lhs.true229:                                 ; preds = %if.else225
  %208 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7313
  %verbose230 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %208, i32 0, i32 3, !dbg !7313
  %209 = load i32*, i32** %verbose230, align 8, !dbg !7313
  %210 = load i32, i32* %209, align 4, !dbg !7313
  %cmp231 = icmp ugt i32 %210, 3, !dbg !7313
  br i1 %cmp231, label %if.then233, label %if.else235, !dbg !7307

if.then233:                                       ; preds = %land.lhs.true229
  %call234 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7313
  br label %if.end257, !dbg !7313

if.else235:                                       ; preds = %land.lhs.true229, %if.else225
  %211 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7315
  %verbose236 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %211, i32 0, i32 3, !dbg !7315
  %212 = load i32*, i32** %verbose236, align 8, !dbg !7315
  %213 = load i32, i32* %212, align 4, !dbg !7315
  %cmp237 = icmp ugt i32 %213, 2, !dbg !7315
  br i1 %cmp237, label %land.lhs.true239, label %if.else245, !dbg !7315

land.lhs.true239:                                 ; preds = %if.else235
  %214 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7315
  %verbose240 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %214, i32 0, i32 3, !dbg !7315
  %215 = load i32*, i32** %verbose240, align 8, !dbg !7315
  %216 = load i32, i32* %215, align 4, !dbg !7315
  %cmp241 = icmp ugt i32 %216, 3, !dbg !7315
  br i1 %cmp241, label %if.then243, label %if.else245, !dbg !7313

if.then243:                                       ; preds = %land.lhs.true239
  %call244 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7315
  br label %if.end256, !dbg !7315

if.else245:                                       ; preds = %land.lhs.true239, %if.else235
  %217 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7317
  %verbose246 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %217, i32 0, i32 3, !dbg !7317
  %218 = load i32*, i32** %verbose246, align 8, !dbg !7317
  %219 = load i32, i32* %218, align 4, !dbg !7317
  %cmp247 = icmp ugt i32 %219, 3, !dbg !7317
  br i1 %cmp247, label %land.lhs.true249, label %if.end255, !dbg !7317

land.lhs.true249:                                 ; preds = %if.else245
  %220 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7317
  %verbose250 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %220, i32 0, i32 3, !dbg !7317
  %221 = load i32*, i32** %verbose250, align 8, !dbg !7317
  %222 = load i32, i32* %221, align 4, !dbg !7317
  %cmp251 = icmp ugt i32 %222, 3, !dbg !7317
  br i1 %cmp251, label %if.then253, label %if.end255, !dbg !7315

if.then253:                                       ; preds = %land.lhs.true249
  %call254 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7317
  br label %if.end255, !dbg !7317

if.end255:                                        ; preds = %if.then253, %land.lhs.true249, %if.else245
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %if.then243
  br label %if.end257

if.end257:                                        ; preds = %if.end256, %if.then233
  br label %if.end258

if.end258:                                        ; preds = %if.end257, %if.then223
  br label %do.end259, !dbg !7319

do.end259:                                        ; preds = %if.end258
  %223 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7320
  %call260 = call i32 @stb0899_dvbs_algo(%struct.stb0899_state* %223) #8, !dbg !7322
  %cmp261 = icmp eq i32 %call260, 13, !dbg !7323
  br i1 %cmp261, label %if.then263, label %if.else309, !dbg !7324

if.then263:                                       ; preds = %do.end259
  %224 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7325
  %lock = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %224, i32 0, i32 20, !dbg !7327
  store i32 1, i32* %lock, align 4, !dbg !7328
  br label %do.body264, !dbg !7329

do.body264:                                       ; preds = %if.then263
  %225 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7330
  %verbose265 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %225, i32 0, i32 3, !dbg !7330
  %226 = load i32*, i32** %verbose265, align 8, !dbg !7330
  %227 = load i32, i32* %226, align 4, !dbg !7330
  %cmp266 = icmp ugt i32 %227, 0, !dbg !7330
  br i1 %cmp266, label %land.lhs.true268, label %if.else274, !dbg !7330

land.lhs.true268:                                 ; preds = %do.body264
  %228 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7330
  %verbose269 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %228, i32 0, i32 3, !dbg !7330
  %229 = load i32*, i32** %verbose269, align 8, !dbg !7330
  %230 = load i32, i32* %229, align 4, !dbg !7330
  %cmp270 = icmp ugt i32 %230, 3, !dbg !7330
  br i1 %cmp270, label %if.then272, label %if.else274, !dbg !7335

if.then272:                                       ; preds = %land.lhs.true268
  %call273 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7330
  br label %if.end307, !dbg !7330

if.else274:                                       ; preds = %land.lhs.true268, %do.body264
  %231 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7336
  %verbose275 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %231, i32 0, i32 3, !dbg !7336
  %232 = load i32*, i32** %verbose275, align 8, !dbg !7336
  %233 = load i32, i32* %232, align 4, !dbg !7336
  %cmp276 = icmp ugt i32 %233, 1, !dbg !7336
  br i1 %cmp276, label %land.lhs.true278, label %if.else284, !dbg !7336

land.lhs.true278:                                 ; preds = %if.else274
  %234 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7336
  %verbose279 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %234, i32 0, i32 3, !dbg !7336
  %235 = load i32*, i32** %verbose279, align 8, !dbg !7336
  %236 = load i32, i32* %235, align 4, !dbg !7336
  %cmp280 = icmp ugt i32 %236, 3, !dbg !7336
  br i1 %cmp280, label %if.then282, label %if.else284, !dbg !7330

if.then282:                                       ; preds = %land.lhs.true278
  %call283 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7336
  br label %if.end306, !dbg !7336

if.else284:                                       ; preds = %land.lhs.true278, %if.else274
  %237 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7338
  %verbose285 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %237, i32 0, i32 3, !dbg !7338
  %238 = load i32*, i32** %verbose285, align 8, !dbg !7338
  %239 = load i32, i32* %238, align 4, !dbg !7338
  %cmp286 = icmp ugt i32 %239, 2, !dbg !7338
  br i1 %cmp286, label %land.lhs.true288, label %if.else294, !dbg !7338

land.lhs.true288:                                 ; preds = %if.else284
  %240 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7338
  %verbose289 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %240, i32 0, i32 3, !dbg !7338
  %241 = load i32*, i32** %verbose289, align 8, !dbg !7338
  %242 = load i32, i32* %241, align 4, !dbg !7338
  %cmp290 = icmp ugt i32 %242, 3, !dbg !7338
  br i1 %cmp290, label %if.then292, label %if.else294, !dbg !7336

if.then292:                                       ; preds = %land.lhs.true288
  %call293 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7338
  br label %if.end305, !dbg !7338

if.else294:                                       ; preds = %land.lhs.true288, %if.else284
  %243 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7340
  %verbose295 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %243, i32 0, i32 3, !dbg !7340
  %244 = load i32*, i32** %verbose295, align 8, !dbg !7340
  %245 = load i32, i32* %244, align 4, !dbg !7340
  %cmp296 = icmp ugt i32 %245, 3, !dbg !7340
  br i1 %cmp296, label %land.lhs.true298, label %if.end304, !dbg !7340

land.lhs.true298:                                 ; preds = %if.else294
  %246 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7340
  %verbose299 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %246, i32 0, i32 3, !dbg !7340
  %247 = load i32*, i32** %verbose299, align 8, !dbg !7340
  %248 = load i32, i32* %247, align 4, !dbg !7340
  %cmp300 = icmp ugt i32 %248, 3, !dbg !7340
  br i1 %cmp300, label %if.then302, label %if.end304, !dbg !7338

if.then302:                                       ; preds = %land.lhs.true298
  %call303 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7340
  br label %if.end304, !dbg !7340

if.end304:                                        ; preds = %if.then302, %land.lhs.true298, %if.else294
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %if.then292
  br label %if.end306

if.end306:                                        ; preds = %if.end305, %if.then282
  br label %if.end307

if.end307:                                        ; preds = %if.end306, %if.then272
  br label %do.end308, !dbg !7342

do.end308:                                        ; preds = %if.end307
  store i32 1, i32* %retval, align 4, !dbg !7343
  br label %return, !dbg !7343

if.else309:                                       ; preds = %do.end259
  %249 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7344
  %lock310 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %249, i32 0, i32 20, !dbg !7346
  store i32 0, i32* %lock310, align 4, !dbg !7347
  store i32 4, i32* %retval, align 4, !dbg !7348
  br label %return, !dbg !7348

sw.bb311:                                         ; preds = %if.end148
  %250 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7349
  %freq312 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %250, i32 0, i32 0, !dbg !7350
  %251 = load i32, i32* %freq312, align 4, !dbg !7350
  %252 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7351
  %freq313 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %252, i32 0, i32 1, !dbg !7352
  store i32 %251, i32* %freq313, align 4, !dbg !7353
  %253 = load %struct.stb0899_params*, %struct.stb0899_params** %i_params, align 8, !dbg !7354
  %srate314 = getelementptr inbounds %struct.stb0899_params, %struct.stb0899_params* %253, i32 0, i32 1, !dbg !7355
  %254 = load i32, i32* %srate314, align 4, !dbg !7355
  %255 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7356
  %srate315 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %255, i32 0, i32 2, !dbg !7357
  store i32 %254, i32* %srate315, align 4, !dbg !7358
  %256 = load i32, i32* %SearchRange, align 4, !dbg !7359
  %257 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7360
  %srch_range316 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %257, i32 0, i32 4, !dbg !7361
  store i32 %256, i32* %srch_range316, align 4, !dbg !7362
  %258 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7363
  %frontend317 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %258, i32 0, i32 2, !dbg !7364
  %call318 = call i32 @stb0899_i2c_gate_ctrl(%struct.dvb_frontend* %frontend317, i32 1) #8, !dbg !7365
  %259 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7366
  %config319 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %259, i32 0, i32 1, !dbg !7368
  %260 = load %struct.stb0899_config*, %struct.stb0899_config** %config319, align 8, !dbg !7368
  %tuner_set_bandwidth320 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %260, i32 0, i32 36, !dbg !7369
  %261 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth320, align 8, !dbg !7369
  %tobool321 = icmp ne i32 (%struct.dvb_frontend*, i32)* %261, null, !dbg !7366
  br i1 %tobool321, label %if.then322, label %if.end330, !dbg !7370

if.then322:                                       ; preds = %sw.bb311
  %262 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7371
  %config323 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %262, i32 0, i32 1, !dbg !7372
  %263 = load %struct.stb0899_config*, %struct.stb0899_config** %config323, align 8, !dbg !7372
  %tuner_set_bandwidth324 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %263, i32 0, i32 36, !dbg !7373
  %264 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth324, align 8, !dbg !7373
  %265 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7374
  %266 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7375
  %call325 = call i64 @stb0899_carr_width(%struct.stb0899_state* %266) #8, !dbg !7376
  %267 = load i32, i32* %SearchRange, align 4, !dbg !7377
  %conv326 = zext i32 %267 to i64, !dbg !7377
  %add327 = add i64 %call325, %conv326, !dbg !7378
  %conv328 = trunc i64 %add327 to i32, !dbg !7379
  %call329 = call i32 %264(%struct.dvb_frontend* %265, i32 %conv328) #8, !dbg !7371
  br label %if.end330, !dbg !7371

if.end330:                                        ; preds = %if.then322, %sw.bb311
  %268 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7380
  %config331 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %268, i32 0, i32 1, !dbg !7382
  %269 = load %struct.stb0899_config*, %struct.stb0899_config** %config331, align 8, !dbg !7382
  %tuner_get_bandwidth332 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %269, i32 0, i32 37, !dbg !7383
  %270 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_bandwidth332, align 8, !dbg !7383
  %tobool333 = icmp ne i32 (%struct.dvb_frontend*, i32*)* %270, null, !dbg !7380
  br i1 %tobool333, label %if.then334, label %if.end339, !dbg !7384

if.then334:                                       ; preds = %if.end330
  %271 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7385
  %config335 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %271, i32 0, i32 1, !dbg !7386
  %272 = load %struct.stb0899_config*, %struct.stb0899_config** %config335, align 8, !dbg !7386
  %tuner_get_bandwidth336 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %272, i32 0, i32 37, !dbg !7387
  %273 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_bandwidth336, align 8, !dbg !7387
  %274 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7388
  %275 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7389
  %tuner_bw337 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %275, i32 0, i32 8, !dbg !7390
  %call338 = call i32 %273(%struct.dvb_frontend* %274, i32* %tuner_bw337) #8, !dbg !7385
  br label %if.end339, !dbg !7385

if.end339:                                        ; preds = %if.then334, %if.end330
  %276 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7391
  %frontend340 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %276, i32 0, i32 2, !dbg !7392
  %call341 = call i32 @stb0899_i2c_gate_ctrl(%struct.dvb_frontend* %frontend340, i32 0) #8, !dbg !7393
  %277 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7394
  %call342 = call i32 @stb0899_write_reg(%struct.stb0899_state* %277, i32 61783, i8 zeroext 28) #8, !dbg !7395
  %278 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7396
  call void @stb0899_set_iterations(%struct.stb0899_state* %278) #8, !dbg !7397
  br label %do.body343, !dbg !7398

do.body343:                                       ; preds = %if.end339
  %279 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7399
  %verbose344 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %279, i32 0, i32 3, !dbg !7399
  %280 = load i32*, i32** %verbose344, align 8, !dbg !7399
  %281 = load i32, i32* %280, align 4, !dbg !7399
  %cmp345 = icmp ugt i32 %281, 0, !dbg !7399
  br i1 %cmp345, label %land.lhs.true347, label %if.else353, !dbg !7399

land.lhs.true347:                                 ; preds = %do.body343
  %282 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7399
  %verbose348 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %282, i32 0, i32 3, !dbg !7399
  %283 = load i32*, i32** %verbose348, align 8, !dbg !7399
  %284 = load i32, i32* %283, align 4, !dbg !7399
  %cmp349 = icmp ugt i32 %284, 3, !dbg !7399
  br i1 %cmp349, label %if.then351, label %if.else353, !dbg !7404

if.then351:                                       ; preds = %land.lhs.true347
  %call352 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.165, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7399
  br label %if.end386, !dbg !7399

if.else353:                                       ; preds = %land.lhs.true347, %do.body343
  %285 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7405
  %verbose354 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %285, i32 0, i32 3, !dbg !7405
  %286 = load i32*, i32** %verbose354, align 8, !dbg !7405
  %287 = load i32, i32* %286, align 4, !dbg !7405
  %cmp355 = icmp ugt i32 %287, 1, !dbg !7405
  br i1 %cmp355, label %land.lhs.true357, label %if.else363, !dbg !7405

land.lhs.true357:                                 ; preds = %if.else353
  %288 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7405
  %verbose358 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %288, i32 0, i32 3, !dbg !7405
  %289 = load i32*, i32** %verbose358, align 8, !dbg !7405
  %290 = load i32, i32* %289, align 4, !dbg !7405
  %cmp359 = icmp ugt i32 %290, 3, !dbg !7405
  br i1 %cmp359, label %if.then361, label %if.else363, !dbg !7399

if.then361:                                       ; preds = %land.lhs.true357
  %call362 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.166, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7405
  br label %if.end385, !dbg !7405

if.else363:                                       ; preds = %land.lhs.true357, %if.else353
  %291 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7407
  %verbose364 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %291, i32 0, i32 3, !dbg !7407
  %292 = load i32*, i32** %verbose364, align 8, !dbg !7407
  %293 = load i32, i32* %292, align 4, !dbg !7407
  %cmp365 = icmp ugt i32 %293, 2, !dbg !7407
  br i1 %cmp365, label %land.lhs.true367, label %if.else373, !dbg !7407

land.lhs.true367:                                 ; preds = %if.else363
  %294 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7407
  %verbose368 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %294, i32 0, i32 3, !dbg !7407
  %295 = load i32*, i32** %verbose368, align 8, !dbg !7407
  %296 = load i32, i32* %295, align 4, !dbg !7407
  %cmp369 = icmp ugt i32 %296, 3, !dbg !7407
  br i1 %cmp369, label %if.then371, label %if.else373, !dbg !7405

if.then371:                                       ; preds = %land.lhs.true367
  %call372 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.167, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7407
  br label %if.end384, !dbg !7407

if.else373:                                       ; preds = %land.lhs.true367, %if.else363
  %297 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7409
  %verbose374 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %297, i32 0, i32 3, !dbg !7409
  %298 = load i32*, i32** %verbose374, align 8, !dbg !7409
  %299 = load i32, i32* %298, align 4, !dbg !7409
  %cmp375 = icmp ugt i32 %299, 3, !dbg !7409
  br i1 %cmp375, label %land.lhs.true377, label %if.end383, !dbg !7409

land.lhs.true377:                                 ; preds = %if.else373
  %300 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7409
  %verbose378 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %300, i32 0, i32 3, !dbg !7409
  %301 = load i32*, i32** %verbose378, align 8, !dbg !7409
  %302 = load i32, i32* %301, align 4, !dbg !7409
  %cmp379 = icmp ugt i32 %302, 3, !dbg !7409
  br i1 %cmp379, label %if.then381, label %if.end383, !dbg !7407

if.then381:                                       ; preds = %land.lhs.true377
  %call382 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.168, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7409
  br label %if.end383, !dbg !7409

if.end383:                                        ; preds = %if.then381, %land.lhs.true377, %if.else373
  br label %if.end384

if.end384:                                        ; preds = %if.end383, %if.then371
  br label %if.end385

if.end385:                                        ; preds = %if.end384, %if.then361
  br label %if.end386

if.end386:                                        ; preds = %if.end385, %if.then351
  br label %do.end387, !dbg !7411

do.end387:                                        ; preds = %if.end386
  %303 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7412
  %call388 = call i32 @stb0899_dvbs2_algo(%struct.stb0899_state* %303) #8, !dbg !7414
  %cmp389 = icmp eq i32 %call388, 16, !dbg !7415
  br i1 %cmp389, label %if.then391, label %if.else438, !dbg !7416

if.then391:                                       ; preds = %do.end387
  %304 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7417
  %lock392 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %304, i32 0, i32 20, !dbg !7419
  store i32 1, i32* %lock392, align 4, !dbg !7420
  br label %do.body393, !dbg !7421

do.body393:                                       ; preds = %if.then391
  %305 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7422
  %verbose394 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %305, i32 0, i32 3, !dbg !7422
  %306 = load i32*, i32** %verbose394, align 8, !dbg !7422
  %307 = load i32, i32* %306, align 4, !dbg !7422
  %cmp395 = icmp ugt i32 %307, 0, !dbg !7422
  br i1 %cmp395, label %land.lhs.true397, label %if.else403, !dbg !7422

land.lhs.true397:                                 ; preds = %do.body393
  %308 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7422
  %verbose398 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %308, i32 0, i32 3, !dbg !7422
  %309 = load i32*, i32** %verbose398, align 8, !dbg !7422
  %310 = load i32, i32* %309, align 4, !dbg !7422
  %cmp399 = icmp ugt i32 %310, 3, !dbg !7422
  br i1 %cmp399, label %if.then401, label %if.else403, !dbg !7427

if.then401:                                       ; preds = %land.lhs.true397
  %call402 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7422
  br label %if.end436, !dbg !7422

if.else403:                                       ; preds = %land.lhs.true397, %do.body393
  %311 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7428
  %verbose404 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %311, i32 0, i32 3, !dbg !7428
  %312 = load i32*, i32** %verbose404, align 8, !dbg !7428
  %313 = load i32, i32* %312, align 4, !dbg !7428
  %cmp405 = icmp ugt i32 %313, 1, !dbg !7428
  br i1 %cmp405, label %land.lhs.true407, label %if.else413, !dbg !7428

land.lhs.true407:                                 ; preds = %if.else403
  %314 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7428
  %verbose408 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %314, i32 0, i32 3, !dbg !7428
  %315 = load i32*, i32** %verbose408, align 8, !dbg !7428
  %316 = load i32, i32* %315, align 4, !dbg !7428
  %cmp409 = icmp ugt i32 %316, 3, !dbg !7428
  br i1 %cmp409, label %if.then411, label %if.else413, !dbg !7422

if.then411:                                       ; preds = %land.lhs.true407
  %call412 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7428
  br label %if.end435, !dbg !7428

if.else413:                                       ; preds = %land.lhs.true407, %if.else403
  %317 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7430
  %verbose414 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %317, i32 0, i32 3, !dbg !7430
  %318 = load i32*, i32** %verbose414, align 8, !dbg !7430
  %319 = load i32, i32* %318, align 4, !dbg !7430
  %cmp415 = icmp ugt i32 %319, 2, !dbg !7430
  br i1 %cmp415, label %land.lhs.true417, label %if.else423, !dbg !7430

land.lhs.true417:                                 ; preds = %if.else413
  %320 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7430
  %verbose418 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %320, i32 0, i32 3, !dbg !7430
  %321 = load i32*, i32** %verbose418, align 8, !dbg !7430
  %322 = load i32, i32* %321, align 4, !dbg !7430
  %cmp419 = icmp ugt i32 %322, 3, !dbg !7430
  br i1 %cmp419, label %if.then421, label %if.else423, !dbg !7428

if.then421:                                       ; preds = %land.lhs.true417
  %call422 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7430
  br label %if.end434, !dbg !7430

if.else423:                                       ; preds = %land.lhs.true417, %if.else413
  %323 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7432
  %verbose424 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %323, i32 0, i32 3, !dbg !7432
  %324 = load i32*, i32** %verbose424, align 8, !dbg !7432
  %325 = load i32, i32* %324, align 4, !dbg !7432
  %cmp425 = icmp ugt i32 %325, 3, !dbg !7432
  br i1 %cmp425, label %land.lhs.true427, label %if.end433, !dbg !7432

land.lhs.true427:                                 ; preds = %if.else423
  %326 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7432
  %verbose428 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %326, i32 0, i32 3, !dbg !7432
  %327 = load i32*, i32** %verbose428, align 8, !dbg !7432
  %328 = load i32, i32* %327, align 4, !dbg !7432
  %cmp429 = icmp ugt i32 %328, 3, !dbg !7432
  br i1 %cmp429, label %if.then431, label %if.end433, !dbg !7430

if.then431:                                       ; preds = %land.lhs.true427
  %call432 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7432
  br label %if.end433, !dbg !7432

if.end433:                                        ; preds = %if.then431, %land.lhs.true427, %if.else423
  br label %if.end434

if.end434:                                        ; preds = %if.end433, %if.then421
  br label %if.end435

if.end435:                                        ; preds = %if.end434, %if.then411
  br label %if.end436

if.end436:                                        ; preds = %if.end435, %if.then401
  br label %do.end437, !dbg !7434

do.end437:                                        ; preds = %if.end436
  store i32 1, i32* %retval, align 4, !dbg !7435
  br label %return, !dbg !7435

if.else438:                                       ; preds = %do.end387
  %329 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7436
  %lock439 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %329, i32 0, i32 20, !dbg !7438
  store i32 0, i32* %lock439, align 4, !dbg !7439
  store i32 4, i32* %retval, align 4, !dbg !7440
  br label %return, !dbg !7440

sw.default:                                       ; preds = %if.end148
  br label %do.body440, !dbg !7441

do.body440:                                       ; preds = %sw.default
  %330 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7442
  %verbose441 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %330, i32 0, i32 3, !dbg !7442
  %331 = load i32*, i32** %verbose441, align 8, !dbg !7442
  %332 = load i32, i32* %331, align 4, !dbg !7442
  %cmp442 = icmp ugt i32 %332, 0, !dbg !7442
  br i1 %cmp442, label %land.lhs.true444, label %if.else450, !dbg !7442

land.lhs.true444:                                 ; preds = %do.body440
  %333 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7442
  %verbose445 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %333, i32 0, i32 3, !dbg !7442
  %334 = load i32*, i32** %verbose445, align 8, !dbg !7442
  %335 = load i32, i32* %334, align 4, !dbg !7442
  %cmp446 = icmp ugt i32 %335, 0, !dbg !7442
  br i1 %cmp446, label %if.then448, label %if.else450, !dbg !7447

if.then448:                                       ; preds = %land.lhs.true444
  %call449 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7442
  br label %if.end483, !dbg !7442

if.else450:                                       ; preds = %land.lhs.true444, %do.body440
  %336 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7448
  %verbose451 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %336, i32 0, i32 3, !dbg !7448
  %337 = load i32*, i32** %verbose451, align 8, !dbg !7448
  %338 = load i32, i32* %337, align 4, !dbg !7448
  %cmp452 = icmp ugt i32 %338, 1, !dbg !7448
  br i1 %cmp452, label %land.lhs.true454, label %if.else460, !dbg !7448

land.lhs.true454:                                 ; preds = %if.else450
  %339 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7448
  %verbose455 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %339, i32 0, i32 3, !dbg !7448
  %340 = load i32*, i32** %verbose455, align 8, !dbg !7448
  %341 = load i32, i32* %340, align 4, !dbg !7448
  %cmp456 = icmp ugt i32 %341, 0, !dbg !7448
  br i1 %cmp456, label %if.then458, label %if.else460, !dbg !7442

if.then458:                                       ; preds = %land.lhs.true454
  %call459 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7448
  br label %if.end482, !dbg !7448

if.else460:                                       ; preds = %land.lhs.true454, %if.else450
  %342 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7450
  %verbose461 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %342, i32 0, i32 3, !dbg !7450
  %343 = load i32*, i32** %verbose461, align 8, !dbg !7450
  %344 = load i32, i32* %343, align 4, !dbg !7450
  %cmp462 = icmp ugt i32 %344, 2, !dbg !7450
  br i1 %cmp462, label %land.lhs.true464, label %if.else470, !dbg !7450

land.lhs.true464:                                 ; preds = %if.else460
  %345 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7450
  %verbose465 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %345, i32 0, i32 3, !dbg !7450
  %346 = load i32*, i32** %verbose465, align 8, !dbg !7450
  %347 = load i32, i32* %346, align 4, !dbg !7450
  %cmp466 = icmp ugt i32 %347, 0, !dbg !7450
  br i1 %cmp466, label %if.then468, label %if.else470, !dbg !7448

if.then468:                                       ; preds = %land.lhs.true464
  %call469 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7450
  br label %if.end481, !dbg !7450

if.else470:                                       ; preds = %land.lhs.true464, %if.else460
  %348 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7452
  %verbose471 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %348, i32 0, i32 3, !dbg !7452
  %349 = load i32*, i32** %verbose471, align 8, !dbg !7452
  %350 = load i32, i32* %349, align 4, !dbg !7452
  %cmp472 = icmp ugt i32 %350, 3, !dbg !7452
  br i1 %cmp472, label %land.lhs.true474, label %if.end480, !dbg !7452

land.lhs.true474:                                 ; preds = %if.else470
  %351 = load %struct.stb0899_state*, %struct.stb0899_state** %state, align 8, !dbg !7452
  %verbose475 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %351, i32 0, i32 3, !dbg !7452
  %352 = load i32*, i32** %verbose475, align 8, !dbg !7452
  %353 = load i32, i32* %352, align 4, !dbg !7452
  %cmp476 = icmp ugt i32 %353, 0, !dbg !7452
  br i1 %cmp476, label %if.then478, label %if.end480, !dbg !7450

if.then478:                                       ; preds = %land.lhs.true474
  %call479 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stb0899_search, i64 0, i64 0)) #9, !dbg !7452
  br label %if.end480, !dbg !7452

if.end480:                                        ; preds = %if.then478, %land.lhs.true474, %if.else470
  br label %if.end481

if.end481:                                        ; preds = %if.end480, %if.then468
  br label %if.end482

if.end482:                                        ; preds = %if.end481, %if.then458
  br label %if.end483

if.end483:                                        ; preds = %if.end482, %if.then448
  br label %do.end484, !dbg !7454

do.end484:                                        ; preds = %if.end483
  store i32 8, i32* %retval, align 4, !dbg !7455
  br label %return, !dbg !7455

if.end485:                                        ; preds = %cond.false, %cond.true
  store i32 -2147483648, i32* %retval, align 4, !dbg !7456
  br label %return, !dbg !7456

return:                                           ; preds = %if.end485, %do.end484, %if.else438, %do.end437, %if.else309, %do.end308
  %354 = load i32, i32* %retval, align 4, !dbg !7457
  ret i32 %354, !dbg !7457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_postproc(%struct.stb0899_state* %state, i8 zeroext %ctl, i32 %enable) #0 !dbg !7458 {
entry:
  %state.addr = alloca %struct.stb0899_state*, align 8
  %ctl.addr = alloca i8, align 1
  %enable.addr = alloca i32, align 4
  %config = alloca %struct.stb0899_config*, align 8
  %postproc = alloca %struct.stb0899_postproc*, align 8
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !7461, metadata !DIExpression()), !dbg !7462
  store i8 %ctl, i8* %ctl.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ctl.addr, metadata !7463, metadata !DIExpression()), !dbg !7464
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !7465, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.declare(metadata %struct.stb0899_config** %config, metadata !7467, metadata !DIExpression()), !dbg !7468
  %0 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7469
  %config1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %0, i32 0, i32 1, !dbg !7470
  %1 = load %struct.stb0899_config*, %struct.stb0899_config** %config1, align 8, !dbg !7470
  store %struct.stb0899_config* %1, %struct.stb0899_config** %config, align 8, !dbg !7468
  call void @llvm.dbg.declare(metadata %struct.stb0899_postproc** %postproc, metadata !7471, metadata !DIExpression()), !dbg !7472
  %2 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !7473
  %postproc2 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %2, i32 0, i32 5, !dbg !7474
  %3 = load %struct.stb0899_postproc*, %struct.stb0899_postproc** %postproc2, align 8, !dbg !7474
  store %struct.stb0899_postproc* %3, %struct.stb0899_postproc** %postproc, align 8, !dbg !7472
  %4 = load %struct.stb0899_postproc*, %struct.stb0899_postproc** %postproc, align 8, !dbg !7475
  %tobool = icmp ne %struct.stb0899_postproc* %4, null, !dbg !7475
  br i1 %tobool, label %if.then, label %if.end36, !dbg !7477

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %enable.addr, align 4, !dbg !7478
  %tobool3 = icmp ne i32 %5, 0, !dbg !7478
  br i1 %tobool3, label %if.then4, label %if.else15, !dbg !7481

if.then4:                                         ; preds = %if.then
  %6 = load %struct.stb0899_postproc*, %struct.stb0899_postproc** %postproc, align 8, !dbg !7482
  %7 = load i8, i8* %ctl.addr, align 1, !dbg !7485
  %idxprom = zext i8 %7 to i64, !dbg !7482
  %arrayidx = getelementptr %struct.stb0899_postproc, %struct.stb0899_postproc* %6, i64 %idxprom, !dbg !7482
  %level = getelementptr inbounds %struct.stb0899_postproc, %struct.stb0899_postproc* %arrayidx, i32 0, i32 1, !dbg !7486
  %8 = load i8, i8* %level, align 2, !dbg !7486
  %conv = zext i8 %8 to i32, !dbg !7482
  %cmp = icmp eq i32 %conv, 1, !dbg !7487
  br i1 %cmp, label %if.then6, label %if.else, !dbg !7488

if.then6:                                         ; preds = %if.then4
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7489
  %10 = load %struct.stb0899_postproc*, %struct.stb0899_postproc** %postproc, align 8, !dbg !7490
  %11 = load i8, i8* %ctl.addr, align 1, !dbg !7491
  %idxprom7 = zext i8 %11 to i64, !dbg !7490
  %arrayidx8 = getelementptr %struct.stb0899_postproc, %struct.stb0899_postproc* %10, i64 %idxprom7, !dbg !7490
  %gpio = getelementptr inbounds %struct.stb0899_postproc, %struct.stb0899_postproc* %arrayidx8, i32 0, i32 0, !dbg !7492
  %12 = load i16, i16* %gpio, align 2, !dbg !7492
  %conv9 = zext i16 %12 to i32, !dbg !7490
  %call = call i32 @stb0899_write_reg(%struct.stb0899_state* %9, i32 %conv9, i8 zeroext 2) #8, !dbg !7493
  br label %if.end, !dbg !7493

if.else:                                          ; preds = %if.then4
  %13 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7494
  %14 = load %struct.stb0899_postproc*, %struct.stb0899_postproc** %postproc, align 8, !dbg !7495
  %15 = load i8, i8* %ctl.addr, align 1, !dbg !7496
  %idxprom10 = zext i8 %15 to i64, !dbg !7495
  %arrayidx11 = getelementptr %struct.stb0899_postproc, %struct.stb0899_postproc* %14, i64 %idxprom10, !dbg !7495
  %gpio12 = getelementptr inbounds %struct.stb0899_postproc, %struct.stb0899_postproc* %arrayidx11, i32 0, i32 0, !dbg !7497
  %16 = load i16, i16* %gpio12, align 2, !dbg !7497
  %conv13 = zext i16 %16 to i32, !dbg !7495
  %call14 = call i32 @stb0899_write_reg(%struct.stb0899_state* %13, i32 %conv13, i8 zeroext -126) #8, !dbg !7498
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  br label %if.end35, !dbg !7499

if.else15:                                        ; preds = %if.then
  %17 = load %struct.stb0899_postproc*, %struct.stb0899_postproc** %postproc, align 8, !dbg !7500
  %18 = load i8, i8* %ctl.addr, align 1, !dbg !7503
  %idxprom16 = zext i8 %18 to i64, !dbg !7500
  %arrayidx17 = getelementptr %struct.stb0899_postproc, %struct.stb0899_postproc* %17, i64 %idxprom16, !dbg !7500
  %level18 = getelementptr inbounds %struct.stb0899_postproc, %struct.stb0899_postproc* %arrayidx17, i32 0, i32 1, !dbg !7504
  %19 = load i8, i8* %level18, align 2, !dbg !7504
  %conv19 = zext i8 %19 to i32, !dbg !7500
  %cmp20 = icmp eq i32 %conv19, 1, !dbg !7505
  br i1 %cmp20, label %if.then22, label %if.else28, !dbg !7506

if.then22:                                        ; preds = %if.else15
  %20 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7507
  %21 = load %struct.stb0899_postproc*, %struct.stb0899_postproc** %postproc, align 8, !dbg !7508
  %22 = load i8, i8* %ctl.addr, align 1, !dbg !7509
  %idxprom23 = zext i8 %22 to i64, !dbg !7508
  %arrayidx24 = getelementptr %struct.stb0899_postproc, %struct.stb0899_postproc* %21, i64 %idxprom23, !dbg !7508
  %gpio25 = getelementptr inbounds %struct.stb0899_postproc, %struct.stb0899_postproc* %arrayidx24, i32 0, i32 0, !dbg !7510
  %23 = load i16, i16* %gpio25, align 2, !dbg !7510
  %conv26 = zext i16 %23 to i32, !dbg !7508
  %call27 = call i32 @stb0899_write_reg(%struct.stb0899_state* %20, i32 %conv26, i8 zeroext -126) #8, !dbg !7511
  br label %if.end34, !dbg !7511

if.else28:                                        ; preds = %if.else15
  %24 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7512
  %25 = load %struct.stb0899_postproc*, %struct.stb0899_postproc** %postproc, align 8, !dbg !7513
  %26 = load i8, i8* %ctl.addr, align 1, !dbg !7514
  %idxprom29 = zext i8 %26 to i64, !dbg !7513
  %arrayidx30 = getelementptr %struct.stb0899_postproc, %struct.stb0899_postproc* %25, i64 %idxprom29, !dbg !7513
  %gpio31 = getelementptr inbounds %struct.stb0899_postproc, %struct.stb0899_postproc* %arrayidx30, i32 0, i32 0, !dbg !7515
  %27 = load i16, i16* %gpio31, align 2, !dbg !7515
  %conv32 = zext i16 %27 to i32, !dbg !7513
  %call33 = call i32 @stb0899_write_reg(%struct.stb0899_state* %24, i32 %conv32, i8 zeroext 2) #8, !dbg !7516
  br label %if.end34

if.end34:                                         ; preds = %if.else28, %if.then22
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.end
  br label %if.end36, !dbg !7517

if.end36:                                         ; preds = %if.end35, %entry
  ret i32 0, !dbg !7518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stb0899_init_calc(%struct.stb0899_state* %state) #0 !dbg !7519 {
entry:
  %state.addr = alloca %struct.stb0899_state*, align 8
  %internal = alloca %struct.stb0899_internal*, align 8
  %master_clk = alloca i32, align 4
  %agc = alloca [2 x i8], align 1
  %reg = alloca i32, align 4
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !7522, metadata !DIExpression()), !dbg !7523
  call void @llvm.dbg.declare(metadata %struct.stb0899_internal** %internal, metadata !7524, metadata !DIExpression()), !dbg !7525
  %0 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7526
  %internal1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %0, i32 0, i32 4, !dbg !7527
  store %struct.stb0899_internal* %internal1, %struct.stb0899_internal** %internal, align 8, !dbg !7525
  call void @llvm.dbg.declare(metadata i32* %master_clk, metadata !7528, metadata !DIExpression()), !dbg !7529
  call void @llvm.dbg.declare(metadata [2 x i8]* %agc, metadata !7530, metadata !DIExpression()), !dbg !7531
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !7532, metadata !DIExpression()), !dbg !7533
  %1 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7534
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %agc, i64 0, i64 0, !dbg !7535
  %call = call i32 @stb0899_read_regs(%struct.stb0899_state* %1, i32 62483, i8* %arraydecay, i32 2) #8, !dbg !7536
  %2 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7537
  %call2 = call i32 @stb0899_get_mclk(%struct.stb0899_state* %2) #8, !dbg !7538
  store i32 %call2, i32* %master_clk, align 4, !dbg !7539
  %3 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7540
  %t_agc1 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %3, i32 0, i32 18, !dbg !7541
  store i16 0, i16* %t_agc1, align 2, !dbg !7542
  %4 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7543
  %t_agc2 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %4, i32 0, i32 19, !dbg !7544
  store i16 0, i16* %t_agc2, align 4, !dbg !7545
  %5 = load i32, i32* %master_clk, align 4, !dbg !7546
  %6 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7547
  %master_clk3 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %6, i32 0, i32 0, !dbg !7548
  store i32 %5, i32* %master_clk3, align 4, !dbg !7549
  %7 = load i32, i32* %master_clk, align 4, !dbg !7550
  %conv = sext i32 %7 to i64, !dbg !7550
  %div = sdiv i64 %conv, 65536, !dbg !7551
  %conv4 = trunc i64 %div to i32, !dbg !7550
  %8 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7552
  %mclk = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %8, i32 0, i32 9, !dbg !7553
  store i32 %conv4, i32* %mclk, align 4, !dbg !7554
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7555
  %call5 = call i32 @stb0899_get_alpha(%struct.stb0899_state* %9) #8, !dbg !7556
  %10 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7557
  %rolloff = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %10, i32 0, i32 10, !dbg !7558
  store i32 %call5, i32* %rolloff, align 4, !dbg !7559
  %11 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7560
  %agc_gain = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %11, i32 0, i32 22, !dbg !7561
  store i32 8154, i32* %agc_gain, align 4, !dbg !7562
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7563
  %call6 = call i32 @_stb0899_read_s2reg(%struct.stb0899_state* %12, i32 62460, i32 0, i16 zeroext -3296) #8, !dbg !7563
  store i32 %call6, i32* %reg, align 4, !dbg !7564
  %13 = load i32, i32* %reg, align 4, !dbg !7565
  %and = and i32 %13, -134209537, !dbg !7565
  %14 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7565
  %agc_gain7 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %14, i32 0, i32 22, !dbg !7565
  %15 = load i32, i32* %agc_gain7, align 4, !dbg !7565
  %shl = shl i32 %15, 13, !dbg !7565
  %or = or i32 %and, %shl, !dbg !7565
  store i32 %or, i32* %reg, align 4, !dbg !7565
  %16 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7566
  %17 = load i32, i32* %reg, align 4, !dbg !7567
  %call8 = call i32 @stb0899_write_s2reg(%struct.stb0899_state* %16, i32 62460, i32 0, i16 zeroext -3296, i32 %17) #8, !dbg !7568
  %18 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7569
  %call9 = call i32 @_stb0899_read_s2reg(%struct.stb0899_state* %18, i32 62460, i32 32, i16 zeroext -3236) #8, !dbg !7569
  store i32 %call9, i32* %reg, align 4, !dbg !7570
  %19 = load i32, i32* %reg, align 4, !dbg !7571
  %shr = lshr i32 %19, 0, !dbg !7571
  %and10 = and i32 %shr, 3, !dbg !7571
  %20 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7572
  %rrc_alpha = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %20, i32 0, i32 27, !dbg !7573
  store i32 %and10, i32* %rrc_alpha, align 4, !dbg !7574
  %21 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7575
  %center_freq = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %21, i32 0, i32 23, !dbg !7576
  store i32 0, i32* %center_freq, align 4, !dbg !7577
  %22 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7578
  %av_frame_coarse = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %22, i32 0, i32 24, !dbg !7579
  store i32 10, i32* %av_frame_coarse, align 4, !dbg !7580
  %23 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7581
  %av_frame_fine = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %23, i32 0, i32 25, !dbg !7582
  store i32 20, i32* %av_frame_fine, align 4, !dbg !7583
  %24 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !7584
  %step_size = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %24, i32 0, i32 26, !dbg !7585
  store i16 2, i16* %step_size, align 4, !dbg !7586
  ret void, !dbg !7587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_diseqc_init(%struct.stb0899_state* %state) #0 !dbg !7588 {
entry:
  %state.addr = alloca %struct.stb0899_state*, align 8
  %f22_tx = alloca i8, align 1
  %reg = alloca i8, align 1
  %mclk = alloca i32, align 4
  %tx_freq = alloca i32, align 4
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !7589, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.declare(metadata i8* %f22_tx, metadata !7591, metadata !DIExpression()), !dbg !7592
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !7593, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.declare(metadata i32* %mclk, metadata !7595, metadata !DIExpression()), !dbg !7596
  call void @llvm.dbg.declare(metadata i32* %tx_freq, metadata !7597, metadata !DIExpression()), !dbg !7598
  store i32 22000, i32* %tx_freq, align 4, !dbg !7598
  %0 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7599
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %0, i32 61601) #8, !dbg !7600
  %conv = trunc i32 %call to i8, !dbg !7600
  store i8 %conv, i8* %reg, align 1, !dbg !7601
  %1 = load i8, i8* %reg, align 1, !dbg !7602
  %conv1 = zext i8 %1 to i32, !dbg !7602
  %and = and i32 %conv1, -33, !dbg !7602
  %conv2 = trunc i32 %and to i8, !dbg !7602
  store i8 %conv2, i8* %reg, align 1, !dbg !7602
  %2 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7603
  %3 = load i8, i8* %reg, align 1, !dbg !7604
  %call3 = call i32 @stb0899_write_reg(%struct.stb0899_state* %2, i32 61601, i8 zeroext %3) #8, !dbg !7605
  %4 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7606
  %call4 = call i32 @stb0899_read_reg(%struct.stb0899_state* %4, i32 61600) #8, !dbg !7607
  %conv5 = trunc i32 %call4 to i8, !dbg !7607
  store i8 %conv5, i8* %reg, align 1, !dbg !7608
  %5 = load i8, i8* %reg, align 1, !dbg !7609
  %conv6 = zext i8 %5 to i32, !dbg !7609
  %and7 = and i32 %conv6, -65, !dbg !7609
  %or = or i32 %and7, 64, !dbg !7609
  %conv8 = trunc i32 %or to i8, !dbg !7609
  store i8 %conv8, i8* %reg, align 1, !dbg !7609
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7610
  %7 = load i8, i8* %reg, align 1, !dbg !7611
  %call9 = call i32 @stb0899_write_reg(%struct.stb0899_state* %6, i32 61600, i8 zeroext %7) #8, !dbg !7612
  %8 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7613
  %call10 = call i32 @stb0899_read_reg(%struct.stb0899_state* %8, i32 61600) #8, !dbg !7614
  %conv11 = trunc i32 %call10 to i8, !dbg !7614
  store i8 %conv11, i8* %reg, align 1, !dbg !7615
  %9 = load i8, i8* %reg, align 1, !dbg !7616
  %conv12 = zext i8 %9 to i32, !dbg !7616
  %and13 = and i32 %conv12, -65, !dbg !7616
  %conv14 = trunc i32 %and13 to i8, !dbg !7616
  store i8 %conv14, i8* %reg, align 1, !dbg !7616
  %10 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7617
  %11 = load i8, i8* %reg, align 1, !dbg !7618
  %call15 = call i32 @stb0899_write_reg(%struct.stb0899_state* %10, i32 61600, i8 zeroext %11) #8, !dbg !7619
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7620
  %call16 = call i32 @stb0899_get_mclk(%struct.stb0899_state* %12) #8, !dbg !7621
  store i32 %call16, i32* %mclk, align 4, !dbg !7622
  %13 = load i32, i32* %mclk, align 4, !dbg !7623
  %14 = load i32, i32* %tx_freq, align 4, !dbg !7624
  %mul = mul i32 %14, 32, !dbg !7625
  %div = udiv i32 %13, %mul, !dbg !7626
  %conv17 = trunc i32 %div to i8, !dbg !7623
  store i8 %conv17, i8* %f22_tx, align 1, !dbg !7627
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7628
  %16 = load i8, i8* %f22_tx, align 1, !dbg !7629
  %call18 = call i32 @stb0899_write_reg(%struct.stb0899_state* %15, i32 61609, i8 zeroext %16) #8, !dbg !7630
  %17 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7631
  %rx_freq = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %17, i32 0, i32 7, !dbg !7632
  store i32 20000, i32* %rx_freq, align 4, !dbg !7633
  ret i32 0, !dbg !7634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_get_mclk(%struct.stb0899_state* %state) #0 !dbg !7635 {
entry:
  %state.addr = alloca %struct.stb0899_state*, align 8
  %mclk = alloca i32, align 4
  %div = alloca i32, align 4
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !7638, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.declare(metadata i32* %mclk, metadata !7640, metadata !DIExpression()), !dbg !7641
  store i32 0, i32* %mclk, align 4, !dbg !7641
  call void @llvm.dbg.declare(metadata i32* %div, metadata !7642, metadata !DIExpression()), !dbg !7643
  store i32 0, i32* %div, align 4, !dbg !7643
  %0 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7644
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %0, i32 61875) #8, !dbg !7645
  store i32 %call, i32* %div, align 4, !dbg !7646
  %1 = load i32, i32* %div, align 4, !dbg !7647
  %add = add i32 %1, 1, !dbg !7648
  %2 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7649
  %config = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %2, i32 0, i32 1, !dbg !7650
  %3 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !7650
  %xtal_freq = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %3, i32 0, i32 7, !dbg !7651
  %4 = load i32, i32* %xtal_freq, align 4, !dbg !7651
  %mul = mul i32 %add, %4, !dbg !7652
  %div1 = udiv i32 %mul, 6, !dbg !7653
  store i32 %div1, i32* %mclk, align 4, !dbg !7654
  br label %do.body, !dbg !7655

do.body:                                          ; preds = %entry
  %5 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7656
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %5, i32 0, i32 3, !dbg !7656
  %6 = load i32*, i32** %verbose, align 8, !dbg !7656
  %7 = load i32, i32* %6, align 4, !dbg !7656
  %cmp = icmp ugt i32 %7, 0, !dbg !7656
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7656

land.lhs.true:                                    ; preds = %do.body
  %8 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7656
  %verbose2 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %8, i32 0, i32 3, !dbg !7656
  %9 = load i32*, i32** %verbose2, align 8, !dbg !7656
  %10 = load i32, i32* %9, align 4, !dbg !7656
  %cmp3 = icmp ugt i32 %10, 3, !dbg !7656
  br i1 %cmp3, label %if.then, label %if.else, !dbg !7661

if.then:                                          ; preds = %land.lhs.true
  %11 = load i32, i32* %div, align 4, !dbg !7656
  %12 = load i32, i32* %mclk, align 4, !dbg !7656
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_get_mclk, i64 0, i64 0), i32 %11, i32 %12) #9, !dbg !7656
  br label %if.end30, !dbg !7656

if.else:                                          ; preds = %land.lhs.true, %do.body
  %13 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7662
  %verbose5 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %13, i32 0, i32 3, !dbg !7662
  %14 = load i32*, i32** %verbose5, align 8, !dbg !7662
  %15 = load i32, i32* %14, align 4, !dbg !7662
  %cmp6 = icmp ugt i32 %15, 1, !dbg !7662
  br i1 %cmp6, label %land.lhs.true7, label %if.else12, !dbg !7662

land.lhs.true7:                                   ; preds = %if.else
  %16 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7662
  %verbose8 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %16, i32 0, i32 3, !dbg !7662
  %17 = load i32*, i32** %verbose8, align 8, !dbg !7662
  %18 = load i32, i32* %17, align 4, !dbg !7662
  %cmp9 = icmp ugt i32 %18, 3, !dbg !7662
  br i1 %cmp9, label %if.then10, label %if.else12, !dbg !7656

if.then10:                                        ; preds = %land.lhs.true7
  %19 = load i32, i32* %div, align 4, !dbg !7662
  %20 = load i32, i32* %mclk, align 4, !dbg !7662
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_get_mclk, i64 0, i64 0), i32 %19, i32 %20) #9, !dbg !7662
  br label %if.end29, !dbg !7662

if.else12:                                        ; preds = %land.lhs.true7, %if.else
  %21 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7664
  %verbose13 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %21, i32 0, i32 3, !dbg !7664
  %22 = load i32*, i32** %verbose13, align 8, !dbg !7664
  %23 = load i32, i32* %22, align 4, !dbg !7664
  %cmp14 = icmp ugt i32 %23, 2, !dbg !7664
  br i1 %cmp14, label %land.lhs.true15, label %if.else20, !dbg !7664

land.lhs.true15:                                  ; preds = %if.else12
  %24 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7664
  %verbose16 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %24, i32 0, i32 3, !dbg !7664
  %25 = load i32*, i32** %verbose16, align 8, !dbg !7664
  %26 = load i32, i32* %25, align 4, !dbg !7664
  %cmp17 = icmp ugt i32 %26, 3, !dbg !7664
  br i1 %cmp17, label %if.then18, label %if.else20, !dbg !7662

if.then18:                                        ; preds = %land.lhs.true15
  %27 = load i32, i32* %div, align 4, !dbg !7664
  %28 = load i32, i32* %mclk, align 4, !dbg !7664
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_get_mclk, i64 0, i64 0), i32 %27, i32 %28) #9, !dbg !7664
  br label %if.end28, !dbg !7664

if.else20:                                        ; preds = %land.lhs.true15, %if.else12
  %29 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7666
  %verbose21 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %29, i32 0, i32 3, !dbg !7666
  %30 = load i32*, i32** %verbose21, align 8, !dbg !7666
  %31 = load i32, i32* %30, align 4, !dbg !7666
  %cmp22 = icmp ugt i32 %31, 3, !dbg !7666
  br i1 %cmp22, label %land.lhs.true23, label %if.end, !dbg !7666

land.lhs.true23:                                  ; preds = %if.else20
  %32 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7666
  %verbose24 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %32, i32 0, i32 3, !dbg !7666
  %33 = load i32*, i32** %verbose24, align 8, !dbg !7666
  %34 = load i32, i32* %33, align 4, !dbg !7666
  %cmp25 = icmp ugt i32 %34, 3, !dbg !7666
  br i1 %cmp25, label %if.then26, label %if.end, !dbg !7664

if.then26:                                        ; preds = %land.lhs.true23
  %35 = load i32, i32* %div, align 4, !dbg !7666
  %36 = load i32, i32* %mclk, align 4, !dbg !7666
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_get_mclk, i64 0, i64 0), i32 %35, i32 %36) #9, !dbg !7666
  br label %if.end, !dbg !7666

if.end:                                           ; preds = %if.then26, %land.lhs.true23, %if.else20
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then18
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then10
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then
  br label %do.end, !dbg !7668

do.end:                                           ; preds = %if.end30
  %37 = load i32, i32* %mclk, align 4, !dbg !7669
  ret i32 %37, !dbg !7670
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_get_alpha(%struct.stb0899_state* %state) #0 !dbg !7671 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stb0899_state*, align 8
  %mode_coeff = alloca i8, align 1
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !7672, metadata !DIExpression()), !dbg !7673
  call void @llvm.dbg.declare(metadata i8* %mode_coeff, metadata !7674, metadata !DIExpression()), !dbg !7675
  %0 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7676
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %0, i32 62478) #8, !dbg !7677
  %conv = trunc i32 %call to i8, !dbg !7677
  store i8 %conv, i8* %mode_coeff, align 1, !dbg !7678
  %1 = load i8, i8* %mode_coeff, align 1, !dbg !7679
  %conv1 = zext i8 %1 to i32, !dbg !7679
  %shr = ashr i32 %conv1, 0, !dbg !7679
  %and = and i32 %shr, 1, !dbg !7679
  %cmp = icmp eq i32 %and, 1, !dbg !7681
  br i1 %cmp, label %if.then, label %if.else, !dbg !7682

if.then:                                          ; preds = %entry
  store i32 20, i32* %retval, align 4, !dbg !7683
  br label %return, !dbg !7683

if.else:                                          ; preds = %entry
  store i32 35, i32* %retval, align 4, !dbg !7684
  br label %return, !dbg !7684

return:                                           ; preds = %if.else, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !7685
  ret i32 %2, !dbg !7685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_table_lookup(%struct.stb0899_tab* %tab, i32 %max, i32 %val) #0 !dbg !7686 {
entry:
  %tab.addr = alloca %struct.stb0899_tab*, align 8
  %max.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %res = alloca i32, align 4
  %min = alloca i32, align 4
  %med = alloca i32, align 4
  store %struct.stb0899_tab* %tab, %struct.stb0899_tab** %tab.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_tab** %tab.addr, metadata !7690, metadata !DIExpression()), !dbg !7691
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !7692, metadata !DIExpression()), !dbg !7693
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !7694, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.declare(metadata i32* %res, metadata !7696, metadata !DIExpression()), !dbg !7697
  store i32 0, i32* %res, align 4, !dbg !7697
  call void @llvm.dbg.declare(metadata i32* %min, metadata !7698, metadata !DIExpression()), !dbg !7699
  store i32 0, i32* %min, align 4, !dbg !7699
  call void @llvm.dbg.declare(metadata i32* %med, metadata !7700, metadata !DIExpression()), !dbg !7701
  %0 = load i32, i32* %val.addr, align 4, !dbg !7702
  %1 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7704
  %2 = load i32, i32* %min, align 4, !dbg !7705
  %idxprom = sext i32 %2 to i64, !dbg !7704
  %arrayidx = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %1, i64 %idxprom, !dbg !7704
  %read = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx, i32 0, i32 1, !dbg !7706
  %3 = load i32, i32* %read, align 4, !dbg !7706
  %cmp = icmp slt i32 %0, %3, !dbg !7707
  br i1 %cmp, label %if.then, label %if.else, !dbg !7708

if.then:                                          ; preds = %entry
  %4 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7709
  %5 = load i32, i32* %min, align 4, !dbg !7710
  %idxprom1 = sext i32 %5 to i64, !dbg !7709
  %arrayidx2 = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %4, i64 %idxprom1, !dbg !7709
  %real = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx2, i32 0, i32 0, !dbg !7711
  %6 = load i32, i32* %real, align 4, !dbg !7711
  store i32 %6, i32* %res, align 4, !dbg !7712
  br label %if.end47, !dbg !7713

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %val.addr, align 4, !dbg !7714
  %8 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7716
  %9 = load i32, i32* %max.addr, align 4, !dbg !7717
  %idxprom3 = sext i32 %9 to i64, !dbg !7716
  %arrayidx4 = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %8, i64 %idxprom3, !dbg !7716
  %read5 = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx4, i32 0, i32 1, !dbg !7718
  %10 = load i32, i32* %read5, align 4, !dbg !7718
  %cmp6 = icmp sge i32 %7, %10, !dbg !7719
  br i1 %cmp6, label %if.then7, label %if.else11, !dbg !7720

if.then7:                                         ; preds = %if.else
  %11 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7721
  %12 = load i32, i32* %max.addr, align 4, !dbg !7722
  %idxprom8 = sext i32 %12 to i64, !dbg !7721
  %arrayidx9 = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %11, i64 %idxprom8, !dbg !7721
  %real10 = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx9, i32 0, i32 0, !dbg !7723
  %13 = load i32, i32* %real10, align 4, !dbg !7723
  store i32 %13, i32* %res, align 4, !dbg !7724
  br label %if.end46, !dbg !7725

if.else11:                                        ; preds = %if.else
  br label %while.cond, !dbg !7726

while.cond:                                       ; preds = %if.end, %if.else11
  %14 = load i32, i32* %max.addr, align 4, !dbg !7728
  %15 = load i32, i32* %min, align 4, !dbg !7729
  %sub = sub i32 %14, %15, !dbg !7730
  %cmp12 = icmp sgt i32 %sub, 1, !dbg !7731
  br i1 %cmp12, label %while.body, label %while.end, !dbg !7726

while.body:                                       ; preds = %while.cond
  %16 = load i32, i32* %max.addr, align 4, !dbg !7732
  %17 = load i32, i32* %min, align 4, !dbg !7734
  %add = add i32 %16, %17, !dbg !7735
  %div = sdiv i32 %add, 2, !dbg !7736
  store i32 %div, i32* %med, align 4, !dbg !7737
  %18 = load i32, i32* %val.addr, align 4, !dbg !7738
  %19 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7740
  %20 = load i32, i32* %min, align 4, !dbg !7741
  %idxprom13 = sext i32 %20 to i64, !dbg !7740
  %arrayidx14 = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %19, i64 %idxprom13, !dbg !7740
  %read15 = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx14, i32 0, i32 1, !dbg !7742
  %21 = load i32, i32* %read15, align 4, !dbg !7742
  %cmp16 = icmp sge i32 %18, %21, !dbg !7743
  br i1 %cmp16, label %land.lhs.true, label %if.else22, !dbg !7744

land.lhs.true:                                    ; preds = %while.body
  %22 = load i32, i32* %val.addr, align 4, !dbg !7745
  %23 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7746
  %24 = load i32, i32* %med, align 4, !dbg !7747
  %idxprom17 = sext i32 %24 to i64, !dbg !7746
  %arrayidx18 = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %23, i64 %idxprom17, !dbg !7746
  %read19 = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx18, i32 0, i32 1, !dbg !7748
  %25 = load i32, i32* %read19, align 4, !dbg !7748
  %cmp20 = icmp slt i32 %22, %25, !dbg !7749
  br i1 %cmp20, label %if.then21, label %if.else22, !dbg !7750

if.then21:                                        ; preds = %land.lhs.true
  %26 = load i32, i32* %med, align 4, !dbg !7751
  store i32 %26, i32* %max.addr, align 4, !dbg !7752
  br label %if.end, !dbg !7753

if.else22:                                        ; preds = %land.lhs.true, %while.body
  %27 = load i32, i32* %med, align 4, !dbg !7754
  store i32 %27, i32* %min, align 4, !dbg !7755
  br label %if.end

if.end:                                           ; preds = %if.else22, %if.then21
  br label %while.cond, !dbg !7726, !llvm.loop !7756

while.end:                                        ; preds = %while.cond
  %28 = load i32, i32* %val.addr, align 4, !dbg !7758
  %29 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7759
  %30 = load i32, i32* %min, align 4, !dbg !7760
  %idxprom23 = sext i32 %30 to i64, !dbg !7759
  %arrayidx24 = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %29, i64 %idxprom23, !dbg !7759
  %read25 = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx24, i32 0, i32 1, !dbg !7761
  %31 = load i32, i32* %read25, align 4, !dbg !7761
  %sub26 = sub i32 %28, %31, !dbg !7762
  %32 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7763
  %33 = load i32, i32* %max.addr, align 4, !dbg !7764
  %idxprom27 = sext i32 %33 to i64, !dbg !7763
  %arrayidx28 = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %32, i64 %idxprom27, !dbg !7763
  %real29 = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx28, i32 0, i32 0, !dbg !7765
  %34 = load i32, i32* %real29, align 4, !dbg !7765
  %35 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7766
  %36 = load i32, i32* %min, align 4, !dbg !7767
  %idxprom30 = sext i32 %36 to i64, !dbg !7766
  %arrayidx31 = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %35, i64 %idxprom30, !dbg !7766
  %real32 = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx31, i32 0, i32 0, !dbg !7768
  %37 = load i32, i32* %real32, align 4, !dbg !7768
  %sub33 = sub i32 %34, %37, !dbg !7769
  %mul = mul i32 %sub26, %sub33, !dbg !7770
  %38 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7771
  %39 = load i32, i32* %max.addr, align 4, !dbg !7772
  %idxprom34 = sext i32 %39 to i64, !dbg !7771
  %arrayidx35 = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %38, i64 %idxprom34, !dbg !7771
  %read36 = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx35, i32 0, i32 1, !dbg !7773
  %40 = load i32, i32* %read36, align 4, !dbg !7773
  %41 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7774
  %42 = load i32, i32* %min, align 4, !dbg !7775
  %idxprom37 = sext i32 %42 to i64, !dbg !7774
  %arrayidx38 = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %41, i64 %idxprom37, !dbg !7774
  %read39 = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx38, i32 0, i32 1, !dbg !7776
  %43 = load i32, i32* %read39, align 4, !dbg !7776
  %sub40 = sub i32 %40, %43, !dbg !7777
  %div41 = sdiv i32 %mul, %sub40, !dbg !7778
  %44 = load %struct.stb0899_tab*, %struct.stb0899_tab** %tab.addr, align 8, !dbg !7779
  %45 = load i32, i32* %min, align 4, !dbg !7780
  %idxprom42 = sext i32 %45 to i64, !dbg !7779
  %arrayidx43 = getelementptr %struct.stb0899_tab, %struct.stb0899_tab* %44, i64 %idxprom42, !dbg !7779
  %real44 = getelementptr inbounds %struct.stb0899_tab, %struct.stb0899_tab* %arrayidx43, i32 0, i32 0, !dbg !7781
  %46 = load i32, i32* %real44, align 4, !dbg !7781
  %add45 = add i32 %div41, %46, !dbg !7782
  store i32 %add45, i32* %res, align 4, !dbg !7783
  br label %if.end46

if.end46:                                         ; preds = %while.end, %if.then7
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then
  %47 = load i32, i32* %res, align 4, !dbg !7784
  ret i32 %47, !dbg !7785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_wait_diseqc_fifo_empty(%struct.stb0899_state* %state, i32 %timeout) #0 !dbg !7786 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stb0899_state*, align 8
  %timeout.addr = alloca i32, align 4
  %reg = alloca i8, align 1
  %start = alloca i64, align 8
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !7789, metadata !DIExpression()), !dbg !7790
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !7791, metadata !DIExpression()), !dbg !7792
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !7793, metadata !DIExpression()), !dbg !7794
  store i8 0, i8* %reg, align 1, !dbg !7794
  call void @llvm.dbg.declare(metadata i64* %start, metadata !7795, metadata !DIExpression()), !dbg !7796
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !7797
  store i64 %0, i64* %start, align 8, !dbg !7796
  br label %while.body, !dbg !7798

while.body:                                       ; preds = %entry, %if.end45
  %1 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7799
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %1, i32 61608) #8, !dbg !7801
  %conv = trunc i32 %call to i8, !dbg !7801
  store i8 %conv, i8* %reg, align 1, !dbg !7802
  %2 = load i8, i8* %reg, align 1, !dbg !7803
  %conv1 = zext i8 %2 to i32, !dbg !7803
  %shr = ashr i32 %conv1, 6, !dbg !7803
  %and = and i32 %shr, 1, !dbg !7803
  %tobool = icmp ne i32 %and, 0, !dbg !7803
  br i1 %tobool, label %if.end, label %if.then, !dbg !7805

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !7806

if.end:                                           ; preds = %while.body
  %3 = load i64, i64* %start, align 8, !dbg !7807
  %4 = load i32, i32* %timeout.addr, align 4, !dbg !7807
  %conv2 = sext i32 %4 to i64, !dbg !7807
  %add = add i64 %3, %conv2, !dbg !7807
  %5 = load volatile i64, i64* @jiffies, align 8, !dbg !7807
  %sub = sub i64 %add, %5, !dbg !7807
  %cmp = icmp slt i64 %sub, 0, !dbg !7807
  br i1 %cmp, label %if.then4, label %if.end45, !dbg !7809

if.then4:                                         ; preds = %if.end
  br label %do.body, !dbg !7810

do.body:                                          ; preds = %if.then4
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7812
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %6, i32 0, i32 3, !dbg !7812
  %7 = load i32*, i32** %verbose, align 8, !dbg !7812
  %8 = load i32, i32* %7, align 4, !dbg !7812
  %cmp5 = icmp ugt i32 %8, 0, !dbg !7812
  br i1 %cmp5, label %land.lhs.true, label %if.else, !dbg !7812

land.lhs.true:                                    ; preds = %do.body
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7812
  %verbose7 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %9, i32 0, i32 3, !dbg !7812
  %10 = load i32*, i32** %verbose7, align 8, !dbg !7812
  %11 = load i32, i32* %10, align 4, !dbg !7812
  %cmp8 = icmp ugt i32 %11, 0, !dbg !7812
  br i1 %cmp8, label %if.then10, label %if.else, !dbg !7817

if.then10:                                        ; preds = %land.lhs.true
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.stb0899_wait_diseqc_fifo_empty, i64 0, i64 0)) #9, !dbg !7812
  br label %if.end44, !dbg !7812

if.else:                                          ; preds = %land.lhs.true, %do.body
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7818
  %verbose12 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %12, i32 0, i32 3, !dbg !7818
  %13 = load i32*, i32** %verbose12, align 8, !dbg !7818
  %14 = load i32, i32* %13, align 4, !dbg !7818
  %cmp13 = icmp ugt i32 %14, 1, !dbg !7818
  br i1 %cmp13, label %land.lhs.true15, label %if.else21, !dbg !7818

land.lhs.true15:                                  ; preds = %if.else
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7818
  %verbose16 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %15, i32 0, i32 3, !dbg !7818
  %16 = load i32*, i32** %verbose16, align 8, !dbg !7818
  %17 = load i32, i32* %16, align 4, !dbg !7818
  %cmp17 = icmp ugt i32 %17, 0, !dbg !7818
  br i1 %cmp17, label %if.then19, label %if.else21, !dbg !7812

if.then19:                                        ; preds = %land.lhs.true15
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.stb0899_wait_diseqc_fifo_empty, i64 0, i64 0)) #9, !dbg !7818
  br label %if.end43, !dbg !7818

if.else21:                                        ; preds = %land.lhs.true15, %if.else
  %18 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7820
  %verbose22 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %18, i32 0, i32 3, !dbg !7820
  %19 = load i32*, i32** %verbose22, align 8, !dbg !7820
  %20 = load i32, i32* %19, align 4, !dbg !7820
  %cmp23 = icmp ugt i32 %20, 2, !dbg !7820
  br i1 %cmp23, label %land.lhs.true25, label %if.else31, !dbg !7820

land.lhs.true25:                                  ; preds = %if.else21
  %21 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7820
  %verbose26 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %21, i32 0, i32 3, !dbg !7820
  %22 = load i32*, i32** %verbose26, align 8, !dbg !7820
  %23 = load i32, i32* %22, align 4, !dbg !7820
  %cmp27 = icmp ugt i32 %23, 0, !dbg !7820
  br i1 %cmp27, label %if.then29, label %if.else31, !dbg !7818

if.then29:                                        ; preds = %land.lhs.true25
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.stb0899_wait_diseqc_fifo_empty, i64 0, i64 0)) #9, !dbg !7820
  br label %if.end42, !dbg !7820

if.else31:                                        ; preds = %land.lhs.true25, %if.else21
  %24 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7822
  %verbose32 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %24, i32 0, i32 3, !dbg !7822
  %25 = load i32*, i32** %verbose32, align 8, !dbg !7822
  %26 = load i32, i32* %25, align 4, !dbg !7822
  %cmp33 = icmp ugt i32 %26, 3, !dbg !7822
  br i1 %cmp33, label %land.lhs.true35, label %if.end41, !dbg !7822

land.lhs.true35:                                  ; preds = %if.else31
  %27 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7822
  %verbose36 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %27, i32 0, i32 3, !dbg !7822
  %28 = load i32*, i32** %verbose36, align 8, !dbg !7822
  %29 = load i32, i32* %28, align 4, !dbg !7822
  %cmp37 = icmp ugt i32 %29, 0, !dbg !7822
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !7820

if.then39:                                        ; preds = %land.lhs.true35
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.stb0899_wait_diseqc_fifo_empty, i64 0, i64 0)) #9, !dbg !7822
  br label %if.end41, !dbg !7822

if.end41:                                         ; preds = %if.then39, %land.lhs.true35, %if.else31
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then29
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then19
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then10
  br label %do.end, !dbg !7824

do.end:                                           ; preds = %if.end44
  store i32 -110, i32* %retval, align 4, !dbg !7825
  br label %return, !dbg !7825

if.end45:                                         ; preds = %if.end
  br label %while.body, !dbg !7798, !llvm.loop !7826

while.end:                                        ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !7828
  br label %return, !dbg !7828

return:                                           ; preds = %while.end, %do.end
  %30 = load i32, i32* %retval, align 4, !dbg !7829
  ret i32 %30, !dbg !7829
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_wait_diseqc_rxidle(%struct.stb0899_state* %state, i32 %timeout) #0 !dbg !7830 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stb0899_state*, align 8
  %timeout.addr = alloca i32, align 4
  %reg = alloca i8, align 1
  %start = alloca i64, align 8
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !7831, metadata !DIExpression()), !dbg !7832
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !7833, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !7835, metadata !DIExpression()), !dbg !7836
  store i8 0, i8* %reg, align 1, !dbg !7836
  call void @llvm.dbg.declare(metadata i64* %start, metadata !7837, metadata !DIExpression()), !dbg !7838
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !7839
  store i64 %0, i64* %start, align 8, !dbg !7838
  br label %while.cond, !dbg !7840

while.cond:                                       ; preds = %if.end43, %entry
  %1 = load i8, i8* %reg, align 1, !dbg !7841
  %conv = zext i8 %1 to i32, !dbg !7841
  %shr = ashr i32 %conv, 7, !dbg !7841
  %and = and i32 %shr, 1, !dbg !7841
  %tobool = icmp ne i32 %and, 0, !dbg !7842
  %lnot = xor i1 %tobool, true, !dbg !7842
  br i1 %lnot, label %while.body, label %while.end, !dbg !7840

while.body:                                       ; preds = %while.cond
  %2 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7843
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %2, i32 61604) #8, !dbg !7845
  %conv1 = trunc i32 %call to i8, !dbg !7845
  store i8 %conv1, i8* %reg, align 1, !dbg !7846
  %3 = load i64, i64* %start, align 8, !dbg !7847
  %4 = load i32, i32* %timeout.addr, align 4, !dbg !7847
  %conv2 = sext i32 %4 to i64, !dbg !7847
  %add = add i64 %3, %conv2, !dbg !7847
  %5 = load volatile i64, i64* @jiffies, align 8, !dbg !7847
  %sub = sub i64 %add, %5, !dbg !7847
  %cmp = icmp slt i64 %sub, 0, !dbg !7847
  br i1 %cmp, label %if.then, label %if.end43, !dbg !7849

if.then:                                          ; preds = %while.body
  br label %do.body, !dbg !7850

do.body:                                          ; preds = %if.then
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7852
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %6, i32 0, i32 3, !dbg !7852
  %7 = load i32*, i32** %verbose, align 8, !dbg !7852
  %8 = load i32, i32* %7, align 4, !dbg !7852
  %cmp4 = icmp ugt i32 %8, 0, !dbg !7852
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !7852

land.lhs.true:                                    ; preds = %do.body
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7852
  %verbose6 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %9, i32 0, i32 3, !dbg !7852
  %10 = load i32*, i32** %verbose6, align 8, !dbg !7852
  %11 = load i32, i32* %10, align 4, !dbg !7852
  %cmp7 = icmp ugt i32 %11, 0, !dbg !7852
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !7857

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stb0899_wait_diseqc_rxidle, i64 0, i64 0)) #9, !dbg !7852
  br label %if.end42, !dbg !7852

if.else:                                          ; preds = %land.lhs.true, %do.body
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7858
  %verbose11 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %12, i32 0, i32 3, !dbg !7858
  %13 = load i32*, i32** %verbose11, align 8, !dbg !7858
  %14 = load i32, i32* %13, align 4, !dbg !7858
  %cmp12 = icmp ugt i32 %14, 1, !dbg !7858
  br i1 %cmp12, label %land.lhs.true14, label %if.else20, !dbg !7858

land.lhs.true14:                                  ; preds = %if.else
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7858
  %verbose15 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %15, i32 0, i32 3, !dbg !7858
  %16 = load i32*, i32** %verbose15, align 8, !dbg !7858
  %17 = load i32, i32* %16, align 4, !dbg !7858
  %cmp16 = icmp ugt i32 %17, 0, !dbg !7858
  br i1 %cmp16, label %if.then18, label %if.else20, !dbg !7852

if.then18:                                        ; preds = %land.lhs.true14
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stb0899_wait_diseqc_rxidle, i64 0, i64 0)) #9, !dbg !7858
  br label %if.end41, !dbg !7858

if.else20:                                        ; preds = %land.lhs.true14, %if.else
  %18 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7860
  %verbose21 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %18, i32 0, i32 3, !dbg !7860
  %19 = load i32*, i32** %verbose21, align 8, !dbg !7860
  %20 = load i32, i32* %19, align 4, !dbg !7860
  %cmp22 = icmp ugt i32 %20, 2, !dbg !7860
  br i1 %cmp22, label %land.lhs.true24, label %if.else30, !dbg !7860

land.lhs.true24:                                  ; preds = %if.else20
  %21 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7860
  %verbose25 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %21, i32 0, i32 3, !dbg !7860
  %22 = load i32*, i32** %verbose25, align 8, !dbg !7860
  %23 = load i32, i32* %22, align 4, !dbg !7860
  %cmp26 = icmp ugt i32 %23, 0, !dbg !7860
  br i1 %cmp26, label %if.then28, label %if.else30, !dbg !7858

if.then28:                                        ; preds = %land.lhs.true24
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stb0899_wait_diseqc_rxidle, i64 0, i64 0)) #9, !dbg !7860
  br label %if.end40, !dbg !7860

if.else30:                                        ; preds = %land.lhs.true24, %if.else20
  %24 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7862
  %verbose31 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %24, i32 0, i32 3, !dbg !7862
  %25 = load i32*, i32** %verbose31, align 8, !dbg !7862
  %26 = load i32, i32* %25, align 4, !dbg !7862
  %cmp32 = icmp ugt i32 %26, 3, !dbg !7862
  br i1 %cmp32, label %land.lhs.true34, label %if.end, !dbg !7862

land.lhs.true34:                                  ; preds = %if.else30
  %27 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7862
  %verbose35 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %27, i32 0, i32 3, !dbg !7862
  %28 = load i32*, i32** %verbose35, align 8, !dbg !7862
  %29 = load i32, i32* %28, align 4, !dbg !7862
  %cmp36 = icmp ugt i32 %29, 0, !dbg !7862
  br i1 %cmp36, label %if.then38, label %if.end, !dbg !7860

if.then38:                                        ; preds = %land.lhs.true34
  %call39 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stb0899_wait_diseqc_rxidle, i64 0, i64 0)) #9, !dbg !7862
  br label %if.end, !dbg !7862

if.end:                                           ; preds = %if.then38, %land.lhs.true34, %if.else30
  br label %if.end40

if.end40:                                         ; preds = %if.end, %if.then28
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then18
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then9
  br label %do.end, !dbg !7864

do.end:                                           ; preds = %if.end42
  store i32 -110, i32* %retval, align 4, !dbg !7865
  br label %return, !dbg !7865

if.end43:                                         ; preds = %while.body
  call void @msleep(i32 10) #8, !dbg !7866
  br label %while.cond, !dbg !7840, !llvm.loop !7867

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !7869
  br label %return, !dbg !7869

return:                                           ; preds = %while.end, %do.end
  %30 = load i32, i32* %retval, align 4, !dbg !7870
  ret i32 %30, !dbg !7870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stb0899_wait_diseqc_txidle(%struct.stb0899_state* %state, i32 %timeout) #0 !dbg !7871 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stb0899_state*, align 8
  %timeout.addr = alloca i32, align 4
  %reg = alloca i8, align 1
  %start = alloca i64, align 8
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !7872, metadata !DIExpression()), !dbg !7873
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !7874, metadata !DIExpression()), !dbg !7875
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !7876, metadata !DIExpression()), !dbg !7877
  store i8 0, i8* %reg, align 1, !dbg !7877
  call void @llvm.dbg.declare(metadata i64* %start, metadata !7878, metadata !DIExpression()), !dbg !7879
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !7880
  store i64 %0, i64* %start, align 8, !dbg !7879
  br label %while.cond, !dbg !7881

while.cond:                                       ; preds = %if.end43, %entry
  %1 = load i8, i8* %reg, align 1, !dbg !7882
  %conv = zext i8 %1 to i32, !dbg !7882
  %shr = ashr i32 %conv, 5, !dbg !7882
  %and = and i32 %shr, 1, !dbg !7882
  %tobool = icmp ne i32 %and, 0, !dbg !7883
  %lnot = xor i1 %tobool, true, !dbg !7883
  br i1 %lnot, label %while.body, label %while.end, !dbg !7881

while.body:                                       ; preds = %while.cond
  %2 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7884
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %2, i32 61608) #8, !dbg !7886
  %conv1 = trunc i32 %call to i8, !dbg !7886
  store i8 %conv1, i8* %reg, align 1, !dbg !7887
  %3 = load i64, i64* %start, align 8, !dbg !7888
  %4 = load i32, i32* %timeout.addr, align 4, !dbg !7888
  %conv2 = sext i32 %4 to i64, !dbg !7888
  %add = add i64 %3, %conv2, !dbg !7888
  %5 = load volatile i64, i64* @jiffies, align 8, !dbg !7888
  %sub = sub i64 %add, %5, !dbg !7888
  %cmp = icmp slt i64 %sub, 0, !dbg !7888
  br i1 %cmp, label %if.then, label %if.end43, !dbg !7890

if.then:                                          ; preds = %while.body
  br label %do.body, !dbg !7891

do.body:                                          ; preds = %if.then
  %6 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7893
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %6, i32 0, i32 3, !dbg !7893
  %7 = load i32*, i32** %verbose, align 8, !dbg !7893
  %8 = load i32, i32* %7, align 4, !dbg !7893
  %cmp4 = icmp ugt i32 %8, 0, !dbg !7893
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !7893

land.lhs.true:                                    ; preds = %do.body
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7893
  %verbose6 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %9, i32 0, i32 3, !dbg !7893
  %10 = load i32*, i32** %verbose6, align 8, !dbg !7893
  %11 = load i32, i32* %10, align 4, !dbg !7893
  %cmp7 = icmp ugt i32 %11, 0, !dbg !7893
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !7898

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.137, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stb0899_wait_diseqc_txidle, i64 0, i64 0)) #9, !dbg !7893
  br label %if.end42, !dbg !7893

if.else:                                          ; preds = %land.lhs.true, %do.body
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7899
  %verbose11 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %12, i32 0, i32 3, !dbg !7899
  %13 = load i32*, i32** %verbose11, align 8, !dbg !7899
  %14 = load i32, i32* %13, align 4, !dbg !7899
  %cmp12 = icmp ugt i32 %14, 1, !dbg !7899
  br i1 %cmp12, label %land.lhs.true14, label %if.else20, !dbg !7899

land.lhs.true14:                                  ; preds = %if.else
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7899
  %verbose15 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %15, i32 0, i32 3, !dbg !7899
  %16 = load i32*, i32** %verbose15, align 8, !dbg !7899
  %17 = load i32, i32* %16, align 4, !dbg !7899
  %cmp16 = icmp ugt i32 %17, 0, !dbg !7899
  br i1 %cmp16, label %if.then18, label %if.else20, !dbg !7893

if.then18:                                        ; preds = %land.lhs.true14
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stb0899_wait_diseqc_txidle, i64 0, i64 0)) #9, !dbg !7899
  br label %if.end41, !dbg !7899

if.else20:                                        ; preds = %land.lhs.true14, %if.else
  %18 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7901
  %verbose21 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %18, i32 0, i32 3, !dbg !7901
  %19 = load i32*, i32** %verbose21, align 8, !dbg !7901
  %20 = load i32, i32* %19, align 4, !dbg !7901
  %cmp22 = icmp ugt i32 %20, 2, !dbg !7901
  br i1 %cmp22, label %land.lhs.true24, label %if.else30, !dbg !7901

land.lhs.true24:                                  ; preds = %if.else20
  %21 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7901
  %verbose25 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %21, i32 0, i32 3, !dbg !7901
  %22 = load i32*, i32** %verbose25, align 8, !dbg !7901
  %23 = load i32, i32* %22, align 4, !dbg !7901
  %cmp26 = icmp ugt i32 %23, 0, !dbg !7901
  br i1 %cmp26, label %if.then28, label %if.else30, !dbg !7899

if.then28:                                        ; preds = %land.lhs.true24
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stb0899_wait_diseqc_txidle, i64 0, i64 0)) #9, !dbg !7901
  br label %if.end40, !dbg !7901

if.else30:                                        ; preds = %land.lhs.true24, %if.else20
  %24 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7903
  %verbose31 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %24, i32 0, i32 3, !dbg !7903
  %25 = load i32*, i32** %verbose31, align 8, !dbg !7903
  %26 = load i32, i32* %25, align 4, !dbg !7903
  %cmp32 = icmp ugt i32 %26, 3, !dbg !7903
  br i1 %cmp32, label %land.lhs.true34, label %if.end, !dbg !7903

land.lhs.true34:                                  ; preds = %if.else30
  %27 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7903
  %verbose35 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %27, i32 0, i32 3, !dbg !7903
  %28 = load i32*, i32** %verbose35, align 8, !dbg !7903
  %29 = load i32, i32* %28, align 4, !dbg !7903
  %cmp36 = icmp ugt i32 %29, 0, !dbg !7903
  br i1 %cmp36, label %if.then38, label %if.end, !dbg !7901

if.then38:                                        ; preds = %land.lhs.true34
  %call39 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stb0899_wait_diseqc_txidle, i64 0, i64 0)) #9, !dbg !7903
  br label %if.end, !dbg !7903

if.end:                                           ; preds = %if.then38, %land.lhs.true34, %if.else30
  br label %if.end40

if.end40:                                         ; preds = %if.end, %if.then28
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then18
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then9
  br label %do.end, !dbg !7905

do.end:                                           ; preds = %if.end42
  store i32 -110, i32* %retval, align 4, !dbg !7906
  br label %return, !dbg !7906

if.end43:                                         ; preds = %while.body
  call void @msleep(i32 10) #8, !dbg !7907
  br label %while.cond, !dbg !7881, !llvm.loop !7908

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !7910
  br label %return, !dbg !7910

return:                                           ; preds = %while.end, %do.end
  %30 = load i32, i32* %retval, align 4, !dbg !7911
  ret i32 %30, !dbg !7911
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stb0899_set_delivery(%struct.stb0899_state* %state) #0 !dbg !7912 {
entry:
  %state.addr = alloca %struct.stb0899_state*, align 8
  %reg = alloca i8, align 1
  %stop_clk = alloca [2 x i8], align 1
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !7913, metadata !DIExpression()), !dbg !7914
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !7915, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.declare(metadata [2 x i8]* %stop_clk, metadata !7917, metadata !DIExpression()), !dbg !7918
  %0 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7919
  %call = call i32 @stb0899_read_reg(%struct.stb0899_state* %0, i32 61890) #8, !dbg !7920
  %conv = trunc i32 %call to i8, !dbg !7920
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !7921
  store i8 %conv, i8* %arrayidx, align 1, !dbg !7922
  %1 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7923
  %call1 = call i32 @stb0899_read_reg(%struct.stb0899_state* %1, i32 61891) #8, !dbg !7924
  %conv2 = trunc i32 %call1 to i8, !dbg !7924
  %arrayidx3 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !7925
  store i8 %conv2, i8* %arrayidx3, align 1, !dbg !7926
  %2 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7927
  %delsys = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %2, i32 0, i32 5, !dbg !7928
  %3 = load i32, i32* %delsys, align 4, !dbg !7928
  switch i32 %3, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb107
    i32 4, label %sw.bb168
  ], !dbg !7929

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !7930

do.body:                                          ; preds = %sw.bb
  %4 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7932
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %4, i32 0, i32 3, !dbg !7932
  %5 = load i32*, i32** %verbose, align 8, !dbg !7932
  %6 = load i32, i32* %5, align 4, !dbg !7932
  %cmp = icmp ugt i32 %6, 0, !dbg !7932
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7932

land.lhs.true:                                    ; preds = %do.body
  %7 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7932
  %verbose5 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %7, i32 0, i32 3, !dbg !7932
  %8 = load i32*, i32** %verbose5, align 8, !dbg !7932
  %9 = load i32, i32* %8, align 4, !dbg !7932
  %cmp6 = icmp ugt i32 %9, 3, !dbg !7932
  br i1 %cmp6, label %if.then, label %if.else, !dbg !7937

if.then:                                          ; preds = %land.lhs.true
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.173, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_set_delivery, i64 0, i64 0)) #9, !dbg !7932
  br label %if.end40, !dbg !7932

if.else:                                          ; preds = %land.lhs.true, %do.body
  %10 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7938
  %verbose9 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %10, i32 0, i32 3, !dbg !7938
  %11 = load i32*, i32** %verbose9, align 8, !dbg !7938
  %12 = load i32, i32* %11, align 4, !dbg !7938
  %cmp10 = icmp ugt i32 %12, 1, !dbg !7938
  br i1 %cmp10, label %land.lhs.true12, label %if.else18, !dbg !7938

land.lhs.true12:                                  ; preds = %if.else
  %13 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7938
  %verbose13 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %13, i32 0, i32 3, !dbg !7938
  %14 = load i32*, i32** %verbose13, align 8, !dbg !7938
  %15 = load i32, i32* %14, align 4, !dbg !7938
  %cmp14 = icmp ugt i32 %15, 3, !dbg !7938
  br i1 %cmp14, label %if.then16, label %if.else18, !dbg !7932

if.then16:                                        ; preds = %land.lhs.true12
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.174, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_set_delivery, i64 0, i64 0)) #9, !dbg !7938
  br label %if.end39, !dbg !7938

if.else18:                                        ; preds = %land.lhs.true12, %if.else
  %16 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7940
  %verbose19 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %16, i32 0, i32 3, !dbg !7940
  %17 = load i32*, i32** %verbose19, align 8, !dbg !7940
  %18 = load i32, i32* %17, align 4, !dbg !7940
  %cmp20 = icmp ugt i32 %18, 2, !dbg !7940
  br i1 %cmp20, label %land.lhs.true22, label %if.else28, !dbg !7940

land.lhs.true22:                                  ; preds = %if.else18
  %19 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7940
  %verbose23 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %19, i32 0, i32 3, !dbg !7940
  %20 = load i32*, i32** %verbose23, align 8, !dbg !7940
  %21 = load i32, i32* %20, align 4, !dbg !7940
  %cmp24 = icmp ugt i32 %21, 3, !dbg !7940
  br i1 %cmp24, label %if.then26, label %if.else28, !dbg !7938

if.then26:                                        ; preds = %land.lhs.true22
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.175, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_set_delivery, i64 0, i64 0)) #9, !dbg !7940
  br label %if.end38, !dbg !7940

if.else28:                                        ; preds = %land.lhs.true22, %if.else18
  %22 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7942
  %verbose29 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %22, i32 0, i32 3, !dbg !7942
  %23 = load i32*, i32** %verbose29, align 8, !dbg !7942
  %24 = load i32, i32* %23, align 4, !dbg !7942
  %cmp30 = icmp ugt i32 %24, 3, !dbg !7942
  br i1 %cmp30, label %land.lhs.true32, label %if.end, !dbg !7942

land.lhs.true32:                                  ; preds = %if.else28
  %25 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7942
  %verbose33 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %25, i32 0, i32 3, !dbg !7942
  %26 = load i32*, i32** %verbose33, align 8, !dbg !7942
  %27 = load i32, i32* %26, align 4, !dbg !7942
  %cmp34 = icmp ugt i32 %27, 3, !dbg !7942
  br i1 %cmp34, label %if.then36, label %if.end, !dbg !7940

if.then36:                                        ; preds = %land.lhs.true32
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_set_delivery, i64 0, i64 0)) #9, !dbg !7942
  br label %if.end, !dbg !7942

if.end:                                           ; preds = %if.then36, %land.lhs.true32, %if.else28
  br label %if.end38

if.end38:                                         ; preds = %if.end, %if.then26
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then16
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then
  br label %do.end, !dbg !7944

do.end:                                           ; preds = %if.end40
  %28 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7945
  %call41 = call i32 @stb0899_read_reg(%struct.stb0899_state* %28, i32 62771) #8, !dbg !7946
  %conv42 = trunc i32 %call41 to i8, !dbg !7946
  store i8 %conv42, i8* %reg, align 1, !dbg !7947
  %29 = load i8, i8* %reg, align 1, !dbg !7948
  %conv43 = zext i8 %29 to i32, !dbg !7948
  %and = and i32 %conv43, -5, !dbg !7948
  %conv44 = trunc i32 %and to i8, !dbg !7948
  store i8 %conv44, i8* %reg, align 1, !dbg !7948
  %30 = load i8, i8* %reg, align 1, !dbg !7949
  %conv45 = zext i8 %30 to i32, !dbg !7949
  %and46 = and i32 %conv45, -9, !dbg !7949
  %or = or i32 %and46, 8, !dbg !7949
  %conv47 = trunc i32 %or to i8, !dbg !7949
  store i8 %conv47, i8* %reg, align 1, !dbg !7949
  %31 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7950
  %32 = load i8, i8* %reg, align 1, !dbg !7951
  %call48 = call i32 @stb0899_write_reg(%struct.stb0899_state* %31, i32 62771, i8 zeroext %32) #8, !dbg !7952
  %33 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7953
  %call49 = call i32 @stb0899_write_reg(%struct.stb0899_state* %33, i32 62792, i8 zeroext -79) #8, !dbg !7954
  %34 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7955
  %call50 = call i32 @stb0899_write_reg(%struct.stb0899_state* %34, i32 62793, i8 zeroext 64) #8, !dbg !7956
  %35 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7957
  %call51 = call i32 @stb0899_write_reg(%struct.stb0899_state* %35, i32 62794, i8 zeroext 66) #8, !dbg !7958
  %36 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7959
  %call52 = call i32 @stb0899_write_reg(%struct.stb0899_state* %36, i32 62795, i8 zeroext 18) #8, !dbg !7960
  %37 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7961
  %call53 = call i32 @stb0899_read_reg(%struct.stb0899_state* %37, i32 65297) #8, !dbg !7962
  %conv54 = trunc i32 %call53 to i8, !dbg !7962
  store i8 %conv54, i8* %reg, align 1, !dbg !7963
  %38 = load i8, i8* %reg, align 1, !dbg !7964
  %conv55 = zext i8 %38 to i32, !dbg !7964
  %and56 = and i32 %conv55, -129, !dbg !7964
  %or57 = or i32 %and56, 128, !dbg !7964
  %conv58 = trunc i32 %or57 to i8, !dbg !7964
  store i8 %conv58, i8* %reg, align 1, !dbg !7964
  %39 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7965
  %40 = load i8, i8* %reg, align 1, !dbg !7966
  %call59 = call i32 @stb0899_write_reg(%struct.stb0899_state* %39, i32 65297, i8 zeroext %40) #8, !dbg !7967
  %arrayidx60 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !7968
  %41 = load i8, i8* %arrayidx60, align 1, !dbg !7968
  %conv61 = zext i8 %41 to i32, !dbg !7968
  %and62 = and i32 %conv61, -33, !dbg !7968
  %or63 = or i32 %and62, 32, !dbg !7968
  %conv64 = trunc i32 %or63 to i8, !dbg !7968
  %arrayidx65 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !7968
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !7968
  %arrayidx66 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !7969
  %42 = load i8, i8* %arrayidx66, align 1, !dbg !7969
  %conv67 = zext i8 %42 to i32, !dbg !7969
  %and68 = and i32 %conv67, -17, !dbg !7969
  %or69 = or i32 %and68, 16, !dbg !7969
  %conv70 = trunc i32 %or69 to i8, !dbg !7969
  %arrayidx71 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !7969
  store i8 %conv70, i8* %arrayidx71, align 1, !dbg !7969
  %arrayidx72 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !7970
  %43 = load i8, i8* %arrayidx72, align 1, !dbg !7970
  %conv73 = zext i8 %43 to i32, !dbg !7970
  %and74 = and i32 %conv73, -9, !dbg !7970
  %or75 = or i32 %and74, 8, !dbg !7970
  %conv76 = trunc i32 %or75 to i8, !dbg !7970
  %arrayidx77 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !7970
  store i8 %conv76, i8* %arrayidx77, align 1, !dbg !7970
  %arrayidx78 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !7971
  %44 = load i8, i8* %arrayidx78, align 1, !dbg !7971
  %conv79 = zext i8 %44 to i32, !dbg !7971
  %and80 = and i32 %conv79, -3, !dbg !7971
  %or81 = or i32 %and80, 2, !dbg !7971
  %conv82 = trunc i32 %or81 to i8, !dbg !7971
  %arrayidx83 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !7971
  store i8 %conv82, i8* %arrayidx83, align 1, !dbg !7971
  %arrayidx84 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !7972
  %45 = load i8, i8* %arrayidx84, align 1, !dbg !7972
  %conv85 = zext i8 %45 to i32, !dbg !7972
  %and86 = and i32 %conv85, -2, !dbg !7972
  %or87 = or i32 %and86, 1, !dbg !7972
  %conv88 = trunc i32 %or87 to i8, !dbg !7972
  %arrayidx89 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !7972
  store i8 %conv88, i8* %arrayidx89, align 1, !dbg !7972
  %arrayidx90 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !7973
  %46 = load i8, i8* %arrayidx90, align 1, !dbg !7973
  %conv91 = zext i8 %46 to i32, !dbg !7973
  %and92 = and i32 %conv91, -65, !dbg !7973
  %or93 = or i32 %and92, 64, !dbg !7973
  %conv94 = trunc i32 %or93 to i8, !dbg !7973
  %arrayidx95 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !7973
  store i8 %conv94, i8* %arrayidx95, align 1, !dbg !7973
  %arrayidx96 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !7974
  %47 = load i8, i8* %arrayidx96, align 1, !dbg !7974
  %conv97 = zext i8 %47 to i32, !dbg !7974
  %and98 = and i32 %conv97, -5, !dbg !7974
  %conv99 = trunc i32 %and98 to i8, !dbg !7974
  %arrayidx100 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !7974
  store i8 %conv99, i8* %arrayidx100, align 1, !dbg !7974
  %arrayidx101 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !7975
  %48 = load i8, i8* %arrayidx101, align 1, !dbg !7975
  %conv102 = zext i8 %48 to i32, !dbg !7975
  %and103 = and i32 %conv102, -5, !dbg !7975
  %or104 = or i32 %and103, 4, !dbg !7975
  %conv105 = trunc i32 %or104 to i8, !dbg !7975
  %arrayidx106 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !7975
  store i8 %conv105, i8* %arrayidx106, align 1, !dbg !7975
  br label %sw.epilog, !dbg !7976

sw.bb107:                                         ; preds = %entry
  %49 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7977
  %call108 = call i32 @stb0899_read_reg(%struct.stb0899_state* %49, i32 62771) #8, !dbg !7978
  %conv109 = trunc i32 %call108 to i8, !dbg !7978
  store i8 %conv109, i8* %reg, align 1, !dbg !7979
  %50 = load i8, i8* %reg, align 1, !dbg !7980
  %conv110 = zext i8 %50 to i32, !dbg !7980
  %and111 = and i32 %conv110, -5, !dbg !7980
  %conv112 = trunc i32 %and111 to i8, !dbg !7980
  store i8 %conv112, i8* %reg, align 1, !dbg !7980
  %51 = load i8, i8* %reg, align 1, !dbg !7981
  %conv113 = zext i8 %51 to i32, !dbg !7981
  %and114 = and i32 %conv113, -9, !dbg !7981
  %conv115 = trunc i32 %and114 to i8, !dbg !7981
  store i8 %conv115, i8* %reg, align 1, !dbg !7981
  %52 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7982
  %53 = load i8, i8* %reg, align 1, !dbg !7983
  %call116 = call i32 @stb0899_write_reg(%struct.stb0899_state* %52, i32 62771, i8 zeroext %53) #8, !dbg !7984
  %54 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7985
  %call117 = call i32 @stb0899_write_reg(%struct.stb0899_state* %54, i32 62792, i8 zeroext -79) #8, !dbg !7986
  %55 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7987
  %call118 = call i32 @stb0899_write_reg(%struct.stb0899_state* %55, i32 62793, i8 zeroext 66) #8, !dbg !7988
  %56 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7989
  %call119 = call i32 @stb0899_write_reg(%struct.stb0899_state* %56, i32 62794, i8 zeroext 64) #8, !dbg !7990
  %57 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7991
  %call120 = call i32 @stb0899_write_reg(%struct.stb0899_state* %57, i32 62795, i8 zeroext 2) #8, !dbg !7992
  %58 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7993
  %call121 = call i32 @stb0899_read_reg(%struct.stb0899_state* %58, i32 65297) #8, !dbg !7994
  %conv122 = trunc i32 %call121 to i8, !dbg !7994
  store i8 %conv122, i8* %reg, align 1, !dbg !7995
  %59 = load i8, i8* %reg, align 1, !dbg !7996
  %conv123 = zext i8 %59 to i32, !dbg !7996
  %and124 = and i32 %conv123, -129, !dbg !7996
  %conv125 = trunc i32 %and124 to i8, !dbg !7996
  store i8 %conv125, i8* %reg, align 1, !dbg !7996
  %60 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !7997
  %61 = load i8, i8* %reg, align 1, !dbg !7998
  %call126 = call i32 @stb0899_write_reg(%struct.stb0899_state* %60, i32 65297, i8 zeroext %61) #8, !dbg !7999
  %arrayidx127 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8000
  %62 = load i8, i8* %arrayidx127, align 1, !dbg !8000
  %conv128 = zext i8 %62 to i32, !dbg !8000
  %and129 = and i32 %conv128, -33, !dbg !8000
  %or130 = or i32 %and129, 32, !dbg !8000
  %conv131 = trunc i32 %or130 to i8, !dbg !8000
  %arrayidx132 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8000
  store i8 %conv131, i8* %arrayidx132, align 1, !dbg !8000
  %arrayidx133 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8001
  %63 = load i8, i8* %arrayidx133, align 1, !dbg !8001
  %conv134 = zext i8 %63 to i32, !dbg !8001
  %and135 = and i32 %conv134, -17, !dbg !8001
  %conv136 = trunc i32 %and135 to i8, !dbg !8001
  %arrayidx137 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8001
  store i8 %conv136, i8* %arrayidx137, align 1, !dbg !8001
  %arrayidx138 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8002
  %64 = load i8, i8* %arrayidx138, align 1, !dbg !8002
  %conv139 = zext i8 %64 to i32, !dbg !8002
  %and140 = and i32 %conv139, -9, !dbg !8002
  %conv141 = trunc i32 %and140 to i8, !dbg !8002
  %arrayidx142 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8002
  store i8 %conv141, i8* %arrayidx142, align 1, !dbg !8002
  %arrayidx143 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8003
  %65 = load i8, i8* %arrayidx143, align 1, !dbg !8003
  %conv144 = zext i8 %65 to i32, !dbg !8003
  %and145 = and i32 %conv144, -3, !dbg !8003
  %conv146 = trunc i32 %and145 to i8, !dbg !8003
  %arrayidx147 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8003
  store i8 %conv146, i8* %arrayidx147, align 1, !dbg !8003
  %arrayidx148 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8004
  %66 = load i8, i8* %arrayidx148, align 1, !dbg !8004
  %conv149 = zext i8 %66 to i32, !dbg !8004
  %and150 = and i32 %conv149, -2, !dbg !8004
  %conv151 = trunc i32 %and150 to i8, !dbg !8004
  %arrayidx152 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8004
  store i8 %conv151, i8* %arrayidx152, align 1, !dbg !8004
  %arrayidx153 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8005
  %67 = load i8, i8* %arrayidx153, align 1, !dbg !8005
  %conv154 = zext i8 %67 to i32, !dbg !8005
  %and155 = and i32 %conv154, -65, !dbg !8005
  %conv156 = trunc i32 %and155 to i8, !dbg !8005
  %arrayidx157 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8005
  store i8 %conv156, i8* %arrayidx157, align 1, !dbg !8005
  %arrayidx158 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8006
  %68 = load i8, i8* %arrayidx158, align 1, !dbg !8006
  %conv159 = zext i8 %68 to i32, !dbg !8006
  %and160 = and i32 %conv159, -5, !dbg !8006
  %conv161 = trunc i32 %and160 to i8, !dbg !8006
  %arrayidx162 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8006
  store i8 %conv161, i8* %arrayidx162, align 1, !dbg !8006
  %arrayidx163 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8007
  %69 = load i8, i8* %arrayidx163, align 1, !dbg !8007
  %conv164 = zext i8 %69 to i32, !dbg !8007
  %and165 = and i32 %conv164, -5, !dbg !8007
  %conv166 = trunc i32 %and165 to i8, !dbg !8007
  %arrayidx167 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8007
  store i8 %conv166, i8* %arrayidx167, align 1, !dbg !8007
  br label %sw.epilog, !dbg !8008

sw.bb168:                                         ; preds = %entry
  %70 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8009
  %call169 = call i32 @stb0899_read_reg(%struct.stb0899_state* %70, i32 62771) #8, !dbg !8010
  %conv170 = trunc i32 %call169 to i8, !dbg !8010
  store i8 %conv170, i8* %reg, align 1, !dbg !8011
  %71 = load i8, i8* %reg, align 1, !dbg !8012
  %conv171 = zext i8 %71 to i32, !dbg !8012
  %and172 = and i32 %conv171, -5, !dbg !8012
  %or173 = or i32 %and172, 4, !dbg !8012
  %conv174 = trunc i32 %or173 to i8, !dbg !8012
  store i8 %conv174, i8* %reg, align 1, !dbg !8012
  %72 = load i8, i8* %reg, align 1, !dbg !8013
  %conv175 = zext i8 %72 to i32, !dbg !8013
  %and176 = and i32 %conv175, -9, !dbg !8013
  %or177 = or i32 %and176, 8, !dbg !8013
  %conv178 = trunc i32 %or177 to i8, !dbg !8013
  store i8 %conv178, i8* %reg, align 1, !dbg !8013
  %73 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8014
  %74 = load i8, i8* %reg, align 1, !dbg !8015
  %call179 = call i32 @stb0899_write_reg(%struct.stb0899_state* %73, i32 62771, i8 zeroext %74) #8, !dbg !8016
  %75 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8017
  %call180 = call i32 @stb0899_write_reg(%struct.stb0899_state* %75, i32 62792, i8 zeroext -95) #8, !dbg !8018
  %76 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8019
  %call181 = call i32 @stb0899_write_reg(%struct.stb0899_state* %76, i32 62793, i8 zeroext 97) #8, !dbg !8020
  %77 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8021
  %call182 = call i32 @stb0899_write_reg(%struct.stb0899_state* %77, i32 62794, i8 zeroext 66) #8, !dbg !8022
  %78 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8023
  %call183 = call i32 @stb0899_read_reg(%struct.stb0899_state* %78, i32 65297) #8, !dbg !8024
  %conv184 = trunc i32 %call183 to i8, !dbg !8024
  store i8 %conv184, i8* %reg, align 1, !dbg !8025
  %79 = load i8, i8* %reg, align 1, !dbg !8026
  %conv185 = zext i8 %79 to i32, !dbg !8026
  %and186 = and i32 %conv185, -129, !dbg !8026
  %or187 = or i32 %and186, 128, !dbg !8026
  %conv188 = trunc i32 %or187 to i8, !dbg !8026
  store i8 %conv188, i8* %reg, align 1, !dbg !8026
  %80 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8027
  %81 = load i8, i8* %reg, align 1, !dbg !8028
  %call189 = call i32 @stb0899_write_reg(%struct.stb0899_state* %80, i32 65297, i8 zeroext %81) #8, !dbg !8029
  %arrayidx190 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8030
  %82 = load i8, i8* %arrayidx190, align 1, !dbg !8030
  %conv191 = zext i8 %82 to i32, !dbg !8030
  %and192 = and i32 %conv191, -33, !dbg !8030
  %or193 = or i32 %and192, 32, !dbg !8030
  %conv194 = trunc i32 %or193 to i8, !dbg !8030
  %arrayidx195 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8030
  store i8 %conv194, i8* %arrayidx195, align 1, !dbg !8030
  %arrayidx196 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8031
  %83 = load i8, i8* %arrayidx196, align 1, !dbg !8031
  %conv197 = zext i8 %83 to i32, !dbg !8031
  %and198 = and i32 %conv197, -17, !dbg !8031
  %or199 = or i32 %and198, 16, !dbg !8031
  %conv200 = trunc i32 %or199 to i8, !dbg !8031
  %arrayidx201 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8031
  store i8 %conv200, i8* %arrayidx201, align 1, !dbg !8031
  %arrayidx202 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8032
  %84 = load i8, i8* %arrayidx202, align 1, !dbg !8032
  %conv203 = zext i8 %84 to i32, !dbg !8032
  %and204 = and i32 %conv203, -9, !dbg !8032
  %or205 = or i32 %and204, 8, !dbg !8032
  %conv206 = trunc i32 %or205 to i8, !dbg !8032
  %arrayidx207 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8032
  store i8 %conv206, i8* %arrayidx207, align 1, !dbg !8032
  %arrayidx208 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8033
  %85 = load i8, i8* %arrayidx208, align 1, !dbg !8033
  %conv209 = zext i8 %85 to i32, !dbg !8033
  %and210 = and i32 %conv209, -3, !dbg !8033
  %or211 = or i32 %and210, 2, !dbg !8033
  %conv212 = trunc i32 %or211 to i8, !dbg !8033
  %arrayidx213 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8033
  store i8 %conv212, i8* %arrayidx213, align 1, !dbg !8033
  %arrayidx214 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8034
  %86 = load i8, i8* %arrayidx214, align 1, !dbg !8034
  %conv215 = zext i8 %86 to i32, !dbg !8034
  %and216 = and i32 %conv215, -2, !dbg !8034
  %or217 = or i32 %and216, 1, !dbg !8034
  %conv218 = trunc i32 %or217 to i8, !dbg !8034
  %arrayidx219 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8034
  store i8 %conv218, i8* %arrayidx219, align 1, !dbg !8034
  %arrayidx220 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8035
  %87 = load i8, i8* %arrayidx220, align 1, !dbg !8035
  %conv221 = zext i8 %87 to i32, !dbg !8035
  %and222 = and i32 %conv221, -5, !dbg !8035
  %conv223 = trunc i32 %and222 to i8, !dbg !8035
  %arrayidx224 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8035
  store i8 %conv223, i8* %arrayidx224, align 1, !dbg !8035
  %arrayidx225 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8036
  %88 = load i8, i8* %arrayidx225, align 1, !dbg !8036
  %conv226 = zext i8 %88 to i32, !dbg !8036
  %and227 = and i32 %conv226, -5, !dbg !8036
  %or228 = or i32 %and227, 4, !dbg !8036
  %conv229 = trunc i32 %or228 to i8, !dbg !8036
  %arrayidx230 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 1, !dbg !8036
  store i8 %conv229, i8* %arrayidx230, align 1, !dbg !8036
  br label %sw.epilog, !dbg !8037

sw.default:                                       ; preds = %entry
  br label %do.body231, !dbg !8038

do.body231:                                       ; preds = %sw.default
  %89 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8039
  %verbose232 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %89, i32 0, i32 3, !dbg !8039
  %90 = load i32*, i32** %verbose232, align 8, !dbg !8039
  %91 = load i32, i32* %90, align 4, !dbg !8039
  %cmp233 = icmp ugt i32 %91, 0, !dbg !8039
  br i1 %cmp233, label %land.lhs.true235, label %if.else241, !dbg !8039

land.lhs.true235:                                 ; preds = %do.body231
  %92 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8039
  %verbose236 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %92, i32 0, i32 3, !dbg !8039
  %93 = load i32*, i32** %verbose236, align 8, !dbg !8039
  %94 = load i32, i32* %93, align 4, !dbg !8039
  %cmp237 = icmp ugt i32 %94, 0, !dbg !8039
  br i1 %cmp237, label %if.then239, label %if.else241, !dbg !8044

if.then239:                                       ; preds = %land.lhs.true235
  %call240 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_set_delivery, i64 0, i64 0)) #9, !dbg !8039
  br label %if.end274, !dbg !8039

if.else241:                                       ; preds = %land.lhs.true235, %do.body231
  %95 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8045
  %verbose242 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %95, i32 0, i32 3, !dbg !8045
  %96 = load i32*, i32** %verbose242, align 8, !dbg !8045
  %97 = load i32, i32* %96, align 4, !dbg !8045
  %cmp243 = icmp ugt i32 %97, 1, !dbg !8045
  br i1 %cmp243, label %land.lhs.true245, label %if.else251, !dbg !8045

land.lhs.true245:                                 ; preds = %if.else241
  %98 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8045
  %verbose246 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %98, i32 0, i32 3, !dbg !8045
  %99 = load i32*, i32** %verbose246, align 8, !dbg !8045
  %100 = load i32, i32* %99, align 4, !dbg !8045
  %cmp247 = icmp ugt i32 %100, 0, !dbg !8045
  br i1 %cmp247, label %if.then249, label %if.else251, !dbg !8039

if.then249:                                       ; preds = %land.lhs.true245
  %call250 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_set_delivery, i64 0, i64 0)) #9, !dbg !8045
  br label %if.end273, !dbg !8045

if.else251:                                       ; preds = %land.lhs.true245, %if.else241
  %101 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8047
  %verbose252 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %101, i32 0, i32 3, !dbg !8047
  %102 = load i32*, i32** %verbose252, align 8, !dbg !8047
  %103 = load i32, i32* %102, align 4, !dbg !8047
  %cmp253 = icmp ugt i32 %103, 2, !dbg !8047
  br i1 %cmp253, label %land.lhs.true255, label %if.else261, !dbg !8047

land.lhs.true255:                                 ; preds = %if.else251
  %104 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8047
  %verbose256 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %104, i32 0, i32 3, !dbg !8047
  %105 = load i32*, i32** %verbose256, align 8, !dbg !8047
  %106 = load i32, i32* %105, align 4, !dbg !8047
  %cmp257 = icmp ugt i32 %106, 0, !dbg !8047
  br i1 %cmp257, label %if.then259, label %if.else261, !dbg !8045

if.then259:                                       ; preds = %land.lhs.true255
  %call260 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_set_delivery, i64 0, i64 0)) #9, !dbg !8047
  br label %if.end272, !dbg !8047

if.else261:                                       ; preds = %land.lhs.true255, %if.else251
  %107 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8049
  %verbose262 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %107, i32 0, i32 3, !dbg !8049
  %108 = load i32*, i32** %verbose262, align 8, !dbg !8049
  %109 = load i32, i32* %108, align 4, !dbg !8049
  %cmp263 = icmp ugt i32 %109, 3, !dbg !8049
  br i1 %cmp263, label %land.lhs.true265, label %if.end271, !dbg !8049

land.lhs.true265:                                 ; preds = %if.else261
  %110 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8049
  %verbose266 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %110, i32 0, i32 3, !dbg !8049
  %111 = load i32*, i32** %verbose266, align 8, !dbg !8049
  %112 = load i32, i32* %111, align 4, !dbg !8049
  %cmp267 = icmp ugt i32 %112, 0, !dbg !8049
  br i1 %cmp267, label %if.then269, label %if.end271, !dbg !8047

if.then269:                                       ; preds = %land.lhs.true265
  %call270 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stb0899_set_delivery, i64 0, i64 0)) #9, !dbg !8049
  br label %if.end271, !dbg !8049

if.end271:                                        ; preds = %if.then269, %land.lhs.true265, %if.else261
  br label %if.end272

if.end272:                                        ; preds = %if.end271, %if.then259
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.then249
  br label %if.end274

if.end274:                                        ; preds = %if.end273, %if.then239
  br label %do.end275, !dbg !8051

do.end275:                                        ; preds = %if.end274
  br label %sw.epilog, !dbg !8052

sw.epilog:                                        ; preds = %do.end275, %sw.bb168, %sw.bb107, %do.end
  %arrayidx276 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8053
  %113 = load i8, i8* %arrayidx276, align 1, !dbg !8053
  %conv277 = zext i8 %113 to i32, !dbg !8053
  %and278 = and i32 %conv277, -3, !dbg !8053
  %conv279 = trunc i32 %and278 to i8, !dbg !8053
  %arrayidx280 = getelementptr [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8053
  store i8 %conv279, i8* %arrayidx280, align 1, !dbg !8053
  %114 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8054
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %stop_clk, i64 0, i64 0, !dbg !8055
  %call281 = call i32 @stb0899_write_regs(%struct.stb0899_state* %114, i32 61890, i8* %arraydecay, i32 2) #8, !dbg !8056
  ret void, !dbg !8057
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stb0899_set_mclk(%struct.stb0899_state* %state, i32 %Mclk) #0 !dbg !8058 {
entry:
  %state.addr = alloca %struct.stb0899_state*, align 8
  %Mclk.addr = alloca i32, align 4
  %internal = alloca %struct.stb0899_internal*, align 8
  %mdiv = alloca i8, align 1
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !8061, metadata !DIExpression()), !dbg !8062
  store i32 %Mclk, i32* %Mclk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %Mclk.addr, metadata !8063, metadata !DIExpression()), !dbg !8064
  call void @llvm.dbg.declare(metadata %struct.stb0899_internal** %internal, metadata !8065, metadata !DIExpression()), !dbg !8066
  %0 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8067
  %internal1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %0, i32 0, i32 4, !dbg !8068
  store %struct.stb0899_internal* %internal1, %struct.stb0899_internal** %internal, align 8, !dbg !8066
  call void @llvm.dbg.declare(metadata i8* %mdiv, metadata !8069, metadata !DIExpression()), !dbg !8070
  store i8 0, i8* %mdiv, align 1, !dbg !8070
  br label %do.body, !dbg !8071

do.body:                                          ; preds = %entry
  %1 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8072
  %verbose = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %1, i32 0, i32 3, !dbg !8072
  %2 = load i32*, i32** %verbose, align 8, !dbg !8072
  %3 = load i32, i32* %2, align 4, !dbg !8072
  %cmp = icmp ugt i32 %3, 0, !dbg !8072
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !8072

land.lhs.true:                                    ; preds = %do.body
  %4 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8072
  %verbose2 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %4, i32 0, i32 3, !dbg !8072
  %5 = load i32*, i32** %verbose2, align 8, !dbg !8072
  %6 = load i32, i32* %5, align 4, !dbg !8072
  %cmp3 = icmp ugt i32 %6, 3, !dbg !8072
  br i1 %cmp3, label %if.then, label %if.else, !dbg !8077

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8072
  %config = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %7, i32 0, i32 1, !dbg !8072
  %8 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !8072
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.177, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), %struct.stb0899_config* %8) #9, !dbg !8072
  br label %if.end32, !dbg !8072

if.else:                                          ; preds = %land.lhs.true, %do.body
  %9 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8078
  %verbose4 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %9, i32 0, i32 3, !dbg !8078
  %10 = load i32*, i32** %verbose4, align 8, !dbg !8078
  %11 = load i32, i32* %10, align 4, !dbg !8078
  %cmp5 = icmp ugt i32 %11, 1, !dbg !8078
  br i1 %cmp5, label %land.lhs.true6, label %if.else12, !dbg !8078

land.lhs.true6:                                   ; preds = %if.else
  %12 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8078
  %verbose7 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %12, i32 0, i32 3, !dbg !8078
  %13 = load i32*, i32** %verbose7, align 8, !dbg !8078
  %14 = load i32, i32* %13, align 4, !dbg !8078
  %cmp8 = icmp ugt i32 %14, 3, !dbg !8078
  br i1 %cmp8, label %if.then9, label %if.else12, !dbg !8072

if.then9:                                         ; preds = %land.lhs.true6
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8078
  %config10 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %15, i32 0, i32 1, !dbg !8078
  %16 = load %struct.stb0899_config*, %struct.stb0899_config** %config10, align 8, !dbg !8078
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.178, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), %struct.stb0899_config* %16) #9, !dbg !8078
  br label %if.end31, !dbg !8078

if.else12:                                        ; preds = %land.lhs.true6, %if.else
  %17 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8080
  %verbose13 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %17, i32 0, i32 3, !dbg !8080
  %18 = load i32*, i32** %verbose13, align 8, !dbg !8080
  %19 = load i32, i32* %18, align 4, !dbg !8080
  %cmp14 = icmp ugt i32 %19, 2, !dbg !8080
  br i1 %cmp14, label %land.lhs.true15, label %if.else21, !dbg !8080

land.lhs.true15:                                  ; preds = %if.else12
  %20 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8080
  %verbose16 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %20, i32 0, i32 3, !dbg !8080
  %21 = load i32*, i32** %verbose16, align 8, !dbg !8080
  %22 = load i32, i32* %21, align 4, !dbg !8080
  %cmp17 = icmp ugt i32 %22, 3, !dbg !8080
  br i1 %cmp17, label %if.then18, label %if.else21, !dbg !8078

if.then18:                                        ; preds = %land.lhs.true15
  %23 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8080
  %config19 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %23, i32 0, i32 1, !dbg !8080
  %24 = load %struct.stb0899_config*, %struct.stb0899_config** %config19, align 8, !dbg !8080
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.179, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), %struct.stb0899_config* %24) #9, !dbg !8080
  br label %if.end30, !dbg !8080

if.else21:                                        ; preds = %land.lhs.true15, %if.else12
  %25 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8082
  %verbose22 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %25, i32 0, i32 3, !dbg !8082
  %26 = load i32*, i32** %verbose22, align 8, !dbg !8082
  %27 = load i32, i32* %26, align 4, !dbg !8082
  %cmp23 = icmp ugt i32 %27, 3, !dbg !8082
  br i1 %cmp23, label %land.lhs.true24, label %if.end, !dbg !8082

land.lhs.true24:                                  ; preds = %if.else21
  %28 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8082
  %verbose25 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %28, i32 0, i32 3, !dbg !8082
  %29 = load i32*, i32** %verbose25, align 8, !dbg !8082
  %30 = load i32, i32* %29, align 4, !dbg !8082
  %cmp26 = icmp ugt i32 %30, 3, !dbg !8082
  br i1 %cmp26, label %if.then27, label %if.end, !dbg !8080

if.then27:                                        ; preds = %land.lhs.true24
  %31 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8082
  %config28 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %31, i32 0, i32 1, !dbg !8082
  %32 = load %struct.stb0899_config*, %struct.stb0899_config** %config28, align 8, !dbg !8082
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.180, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), %struct.stb0899_config* %32) #9, !dbg !8082
  br label %if.end, !dbg !8082

if.end:                                           ; preds = %if.then27, %land.lhs.true24, %if.else21
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then18
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then9
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then
  br label %do.end, !dbg !8084

do.end:                                           ; preds = %if.end32
  %33 = load i32, i32* %Mclk.addr, align 4, !dbg !8085
  %mul = mul i32 6, %33, !dbg !8086
  %34 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8087
  %config33 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %34, i32 0, i32 1, !dbg !8088
  %35 = load %struct.stb0899_config*, %struct.stb0899_config** %config33, align 8, !dbg !8088
  %xtal_freq = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %35, i32 0, i32 7, !dbg !8089
  %36 = load i32, i32* %xtal_freq, align 4, !dbg !8089
  %div = udiv i32 %mul, %36, !dbg !8090
  %sub = sub i32 %div, 1, !dbg !8091
  %conv = trunc i32 %sub to i8, !dbg !8092
  store i8 %conv, i8* %mdiv, align 1, !dbg !8093
  br label %do.body34, !dbg !8094

do.body34:                                        ; preds = %do.end
  %37 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8095
  %verbose35 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %37, i32 0, i32 3, !dbg !8095
  %38 = load i32*, i32** %verbose35, align 8, !dbg !8095
  %39 = load i32, i32* %38, align 4, !dbg !8095
  %cmp36 = icmp ugt i32 %39, 0, !dbg !8095
  br i1 %cmp36, label %land.lhs.true38, label %if.else45, !dbg !8095

land.lhs.true38:                                  ; preds = %do.body34
  %40 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8095
  %verbose39 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %40, i32 0, i32 3, !dbg !8095
  %41 = load i32*, i32** %verbose39, align 8, !dbg !8095
  %42 = load i32, i32* %41, align 4, !dbg !8095
  %cmp40 = icmp ugt i32 %42, 3, !dbg !8095
  br i1 %cmp40, label %if.then42, label %if.else45, !dbg !8100

if.then42:                                        ; preds = %land.lhs.true38
  %43 = load i8, i8* %mdiv, align 1, !dbg !8095
  %conv43 = zext i8 %43 to i32, !dbg !8095
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.181, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), i32 %conv43) #9, !dbg !8095
  br label %if.end81, !dbg !8095

if.else45:                                        ; preds = %land.lhs.true38, %do.body34
  %44 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8101
  %verbose46 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %44, i32 0, i32 3, !dbg !8101
  %45 = load i32*, i32** %verbose46, align 8, !dbg !8101
  %46 = load i32, i32* %45, align 4, !dbg !8101
  %cmp47 = icmp ugt i32 %46, 1, !dbg !8101
  br i1 %cmp47, label %land.lhs.true49, label %if.else56, !dbg !8101

land.lhs.true49:                                  ; preds = %if.else45
  %47 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8101
  %verbose50 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %47, i32 0, i32 3, !dbg !8101
  %48 = load i32*, i32** %verbose50, align 8, !dbg !8101
  %49 = load i32, i32* %48, align 4, !dbg !8101
  %cmp51 = icmp ugt i32 %49, 3, !dbg !8101
  br i1 %cmp51, label %if.then53, label %if.else56, !dbg !8095

if.then53:                                        ; preds = %land.lhs.true49
  %50 = load i8, i8* %mdiv, align 1, !dbg !8101
  %conv54 = zext i8 %50 to i32, !dbg !8101
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.182, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), i32 %conv54) #9, !dbg !8101
  br label %if.end80, !dbg !8101

if.else56:                                        ; preds = %land.lhs.true49, %if.else45
  %51 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8103
  %verbose57 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %51, i32 0, i32 3, !dbg !8103
  %52 = load i32*, i32** %verbose57, align 8, !dbg !8103
  %53 = load i32, i32* %52, align 4, !dbg !8103
  %cmp58 = icmp ugt i32 %53, 2, !dbg !8103
  br i1 %cmp58, label %land.lhs.true60, label %if.else67, !dbg !8103

land.lhs.true60:                                  ; preds = %if.else56
  %54 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8103
  %verbose61 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %54, i32 0, i32 3, !dbg !8103
  %55 = load i32*, i32** %verbose61, align 8, !dbg !8103
  %56 = load i32, i32* %55, align 4, !dbg !8103
  %cmp62 = icmp ugt i32 %56, 3, !dbg !8103
  br i1 %cmp62, label %if.then64, label %if.else67, !dbg !8101

if.then64:                                        ; preds = %land.lhs.true60
  %57 = load i8, i8* %mdiv, align 1, !dbg !8103
  %conv65 = zext i8 %57 to i32, !dbg !8103
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.183, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), i32 %conv65) #9, !dbg !8103
  br label %if.end79, !dbg !8103

if.else67:                                        ; preds = %land.lhs.true60, %if.else56
  %58 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8105
  %verbose68 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %58, i32 0, i32 3, !dbg !8105
  %59 = load i32*, i32** %verbose68, align 8, !dbg !8105
  %60 = load i32, i32* %59, align 4, !dbg !8105
  %cmp69 = icmp ugt i32 %60, 3, !dbg !8105
  br i1 %cmp69, label %land.lhs.true71, label %if.end78, !dbg !8105

land.lhs.true71:                                  ; preds = %if.else67
  %61 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8105
  %verbose72 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %61, i32 0, i32 3, !dbg !8105
  %62 = load i32*, i32** %verbose72, align 8, !dbg !8105
  %63 = load i32, i32* %62, align 4, !dbg !8105
  %cmp73 = icmp ugt i32 %63, 3, !dbg !8105
  br i1 %cmp73, label %if.then75, label %if.end78, !dbg !8103

if.then75:                                        ; preds = %land.lhs.true71
  %64 = load i8, i8* %mdiv, align 1, !dbg !8105
  %conv76 = zext i8 %64 to i32, !dbg !8105
  %call77 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.184, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), i32 %conv76) #9, !dbg !8105
  br label %if.end78, !dbg !8105

if.end78:                                         ; preds = %if.then75, %land.lhs.true71, %if.else67
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then64
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then53
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then42
  br label %do.end82, !dbg !8107

do.end82:                                         ; preds = %if.end81
  %65 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8108
  %66 = load i8, i8* %mdiv, align 1, !dbg !8109
  %call83 = call i32 @stb0899_write_reg(%struct.stb0899_state* %65, i32 61875, i8 zeroext %66) #8, !dbg !8110
  %67 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8111
  %call84 = call i32 @stb0899_get_mclk(%struct.stb0899_state* %67) #8, !dbg !8112
  %68 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !8113
  %master_clk = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %68, i32 0, i32 0, !dbg !8114
  store i32 %call84, i32* %master_clk, align 4, !dbg !8115
  br label %do.body85, !dbg !8116

do.body85:                                        ; preds = %do.end82
  %69 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8117
  %verbose86 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %69, i32 0, i32 3, !dbg !8117
  %70 = load i32*, i32** %verbose86, align 8, !dbg !8117
  %71 = load i32, i32* %70, align 4, !dbg !8117
  %cmp87 = icmp ugt i32 %71, 0, !dbg !8117
  br i1 %cmp87, label %land.lhs.true89, label %if.else96, !dbg !8117

land.lhs.true89:                                  ; preds = %do.body85
  %72 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8117
  %verbose90 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %72, i32 0, i32 3, !dbg !8117
  %73 = load i32*, i32** %verbose90, align 8, !dbg !8117
  %74 = load i32, i32* %73, align 4, !dbg !8117
  %cmp91 = icmp ugt i32 %74, 3, !dbg !8117
  br i1 %cmp91, label %if.then93, label %if.else96, !dbg !8122

if.then93:                                        ; preds = %land.lhs.true89
  %75 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !8117
  %master_clk94 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %75, i32 0, i32 0, !dbg !8117
  %76 = load i32, i32* %master_clk94, align 4, !dbg !8117
  %call95 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.185, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), i32 %76) #9, !dbg !8117
  br label %if.end132, !dbg !8117

if.else96:                                        ; preds = %land.lhs.true89, %do.body85
  %77 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8123
  %verbose97 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %77, i32 0, i32 3, !dbg !8123
  %78 = load i32*, i32** %verbose97, align 8, !dbg !8123
  %79 = load i32, i32* %78, align 4, !dbg !8123
  %cmp98 = icmp ugt i32 %79, 1, !dbg !8123
  br i1 %cmp98, label %land.lhs.true100, label %if.else107, !dbg !8123

land.lhs.true100:                                 ; preds = %if.else96
  %80 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8123
  %verbose101 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %80, i32 0, i32 3, !dbg !8123
  %81 = load i32*, i32** %verbose101, align 8, !dbg !8123
  %82 = load i32, i32* %81, align 4, !dbg !8123
  %cmp102 = icmp ugt i32 %82, 3, !dbg !8123
  br i1 %cmp102, label %if.then104, label %if.else107, !dbg !8117

if.then104:                                       ; preds = %land.lhs.true100
  %83 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !8123
  %master_clk105 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %83, i32 0, i32 0, !dbg !8123
  %84 = load i32, i32* %master_clk105, align 4, !dbg !8123
  %call106 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.186, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), i32 %84) #9, !dbg !8123
  br label %if.end131, !dbg !8123

if.else107:                                       ; preds = %land.lhs.true100, %if.else96
  %85 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8125
  %verbose108 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %85, i32 0, i32 3, !dbg !8125
  %86 = load i32*, i32** %verbose108, align 8, !dbg !8125
  %87 = load i32, i32* %86, align 4, !dbg !8125
  %cmp109 = icmp ugt i32 %87, 2, !dbg !8125
  br i1 %cmp109, label %land.lhs.true111, label %if.else118, !dbg !8125

land.lhs.true111:                                 ; preds = %if.else107
  %88 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8125
  %verbose112 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %88, i32 0, i32 3, !dbg !8125
  %89 = load i32*, i32** %verbose112, align 8, !dbg !8125
  %90 = load i32, i32* %89, align 4, !dbg !8125
  %cmp113 = icmp ugt i32 %90, 3, !dbg !8125
  br i1 %cmp113, label %if.then115, label %if.else118, !dbg !8123

if.then115:                                       ; preds = %land.lhs.true111
  %91 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !8125
  %master_clk116 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %91, i32 0, i32 0, !dbg !8125
  %92 = load i32, i32* %master_clk116, align 4, !dbg !8125
  %call117 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.187, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), i32 %92) #9, !dbg !8125
  br label %if.end130, !dbg !8125

if.else118:                                       ; preds = %land.lhs.true111, %if.else107
  %93 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8127
  %verbose119 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %93, i32 0, i32 3, !dbg !8127
  %94 = load i32*, i32** %verbose119, align 8, !dbg !8127
  %95 = load i32, i32* %94, align 4, !dbg !8127
  %cmp120 = icmp ugt i32 %95, 3, !dbg !8127
  br i1 %cmp120, label %land.lhs.true122, label %if.end129, !dbg !8127

land.lhs.true122:                                 ; preds = %if.else118
  %96 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8127
  %verbose123 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %96, i32 0, i32 3, !dbg !8127
  %97 = load i32*, i32** %verbose123, align 8, !dbg !8127
  %98 = load i32, i32* %97, align 4, !dbg !8127
  %cmp124 = icmp ugt i32 %98, 3, !dbg !8127
  br i1 %cmp124, label %if.then126, label %if.end129, !dbg !8125

if.then126:                                       ; preds = %land.lhs.true122
  %99 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !8127
  %master_clk127 = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %99, i32 0, i32 0, !dbg !8127
  %100 = load i32, i32* %master_clk127, align 4, !dbg !8127
  %call128 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.188, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stb0899_set_mclk, i64 0, i64 0), i32 %100) #9, !dbg !8127
  br label %if.end129, !dbg !8127

if.end129:                                        ; preds = %if.then126, %land.lhs.true122, %if.else118
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then115
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then104
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.then93
  br label %do.end133, !dbg !8129

do.end133:                                        ; preds = %if.end132
  ret void, !dbg !8130
}

; Function Attrs: noredzone
declare dso_local i64 @stb0899_carr_width(%struct.stb0899_state*) #3

; Function Attrs: noredzone
declare dso_local i32 @stb0899_dvbs_algo(%struct.stb0899_state*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stb0899_set_iterations(%struct.stb0899_state* %state) #0 !dbg !8131 {
entry:
  %state.addr = alloca %struct.stb0899_state*, align 8
  %internal = alloca %struct.stb0899_internal*, align 8
  %config = alloca %struct.stb0899_config*, align 8
  %iter_scale = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.stb0899_state* %state, %struct.stb0899_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stb0899_state** %state.addr, metadata !8132, metadata !DIExpression()), !dbg !8133
  call void @llvm.dbg.declare(metadata %struct.stb0899_internal** %internal, metadata !8134, metadata !DIExpression()), !dbg !8135
  %0 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8136
  %internal1 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %0, i32 0, i32 4, !dbg !8137
  store %struct.stb0899_internal* %internal1, %struct.stb0899_internal** %internal, align 8, !dbg !8135
  call void @llvm.dbg.declare(metadata %struct.stb0899_config** %config, metadata !8138, metadata !DIExpression()), !dbg !8139
  %1 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8140
  %config2 = getelementptr inbounds %struct.stb0899_state, %struct.stb0899_state* %1, i32 0, i32 1, !dbg !8141
  %2 = load %struct.stb0899_config*, %struct.stb0899_config** %config2, align 8, !dbg !8141
  store %struct.stb0899_config* %2, %struct.stb0899_config** %config, align 8, !dbg !8139
  call void @llvm.dbg.declare(metadata i32* %iter_scale, metadata !8142, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !8144, metadata !DIExpression()), !dbg !8145
  %3 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !8146
  %master_clk = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %3, i32 0, i32 0, !dbg !8147
  %4 = load i32, i32* %master_clk, align 4, !dbg !8147
  %div = udiv i32 %4, 1000, !dbg !8148
  %mul = mul i32 17, %div, !dbg !8149
  store i32 %mul, i32* %iter_scale, align 4, !dbg !8150
  %5 = load i32, i32* %iter_scale, align 4, !dbg !8151
  %add = add i32 %5, 410000, !dbg !8151
  store i32 %add, i32* %iter_scale, align 4, !dbg !8151
  %6 = load %struct.stb0899_internal*, %struct.stb0899_internal** %internal, align 8, !dbg !8152
  %srate = getelementptr inbounds %struct.stb0899_internal, %struct.stb0899_internal* %6, i32 0, i32 2, !dbg !8153
  %7 = load i32, i32* %srate, align 4, !dbg !8153
  %div3 = udiv i32 %7, 1000000, !dbg !8154
  %8 = load i32, i32* %iter_scale, align 4, !dbg !8155
  %div4 = udiv i32 %8, %div3, !dbg !8155
  store i32 %div4, i32* %iter_scale, align 4, !dbg !8155
  %9 = load i32, i32* %iter_scale, align 4, !dbg !8156
  %div5 = sdiv i32 %9, 1000, !dbg !8156
  store i32 %div5, i32* %iter_scale, align 4, !dbg !8156
  %10 = load i32, i32* %iter_scale, align 4, !dbg !8157
  %11 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !8159
  %ldpc_max_iter = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %11, i32 0, i32 33, !dbg !8160
  %12 = load i32, i32* %ldpc_max_iter, align 4, !dbg !8160
  %cmp = icmp ugt i32 %10, %12, !dbg !8161
  br i1 %cmp, label %if.then, label %if.end, !dbg !8162

if.then:                                          ; preds = %entry
  %13 = load %struct.stb0899_config*, %struct.stb0899_config** %config, align 8, !dbg !8163
  %ldpc_max_iter6 = getelementptr inbounds %struct.stb0899_config, %struct.stb0899_config* %13, i32 0, i32 33, !dbg !8164
  %14 = load i32, i32* %ldpc_max_iter6, align 4, !dbg !8164
  store i32 %14, i32* %iter_scale, align 4, !dbg !8165
  br label %if.end, !dbg !8166

if.end:                                           ; preds = %if.then, %entry
  %15 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8167
  %call = call i32 @_stb0899_read_s2reg(%struct.stb0899_state* %15, i32 64252, i32 0, i16 zeroext -1524) #8, !dbg !8167
  store i32 %call, i32* %reg, align 4, !dbg !8168
  %16 = load i32, i32* %reg, align 4, !dbg !8169
  %and = and i32 %16, -256, !dbg !8169
  %17 = load i32, i32* %iter_scale, align 4, !dbg !8169
  %shl = shl i32 %17, 0, !dbg !8169
  %or = or i32 %and, %shl, !dbg !8169
  store i32 %or, i32* %reg, align 4, !dbg !8169
  %18 = load %struct.stb0899_state*, %struct.stb0899_state** %state.addr, align 8, !dbg !8170
  %19 = load i32, i32* %reg, align 4, !dbg !8171
  %call7 = call i32 @stb0899_write_s2reg(%struct.stb0899_state* %18, i32 64252, i32 0, i16 zeroext -1524, i32 %19) #8, !dbg !8172
  ret void, !dbg !8173
}

; Function Attrs: noredzone
declare dso_local i32 @stb0899_dvbs2_algo(%struct.stb0899_state*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @CONVERT32(i32 %x, i8* %str) #0 !dbg !8174 {
entry:
  %x.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !8177, metadata !DIExpression()), !dbg !8178
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !8179, metadata !DIExpression()), !dbg !8180
  %0 = load i32, i32* %x.addr, align 4, !dbg !8181
  %shr = lshr i32 %0, 24, !dbg !8182
  %and = and i32 %shr, 255, !dbg !8183
  %conv = trunc i32 %and to i8, !dbg !8184
  %1 = load i8*, i8** %str.addr, align 8, !dbg !8185
  %incdec.ptr = getelementptr i8, i8* %1, i32 1, !dbg !8185
  store i8* %incdec.ptr, i8** %str.addr, align 8, !dbg !8185
  store i8 %conv, i8* %1, align 1, !dbg !8186
  %2 = load i32, i32* %x.addr, align 4, !dbg !8187
  %shr1 = lshr i32 %2, 16, !dbg !8188
  %and2 = and i32 %shr1, 255, !dbg !8189
  %conv3 = trunc i32 %and2 to i8, !dbg !8190
  %3 = load i8*, i8** %str.addr, align 8, !dbg !8191
  %incdec.ptr4 = getelementptr i8, i8* %3, i32 1, !dbg !8191
  store i8* %incdec.ptr4, i8** %str.addr, align 8, !dbg !8191
  store i8 %conv3, i8* %3, align 1, !dbg !8192
  %4 = load i32, i32* %x.addr, align 4, !dbg !8193
  %shr5 = lshr i32 %4, 8, !dbg !8194
  %and6 = and i32 %shr5, 255, !dbg !8195
  %conv7 = trunc i32 %and6 to i8, !dbg !8196
  %5 = load i8*, i8** %str.addr, align 8, !dbg !8197
  %incdec.ptr8 = getelementptr i8, i8* %5, i32 1, !dbg !8197
  store i8* %incdec.ptr8, i8** %str.addr, align 8, !dbg !8197
  store i8 %conv7, i8* %5, align 1, !dbg !8198
  %6 = load i32, i32* %x.addr, align 4, !dbg !8199
  %shr9 = lshr i32 %6, 0, !dbg !8200
  %and10 = and i32 %shr9, 255, !dbg !8201
  %conv11 = trunc i32 %and10 to i8, !dbg !8202
  %7 = load i8*, i8** %str.addr, align 8, !dbg !8203
  %incdec.ptr12 = getelementptr i8, i8* %7, i32 1, !dbg !8203
  store i8* %incdec.ptr12, i8** %str.addr, align 8, !dbg !8203
  store i8 %conv11, i8* %7, align 1, !dbg !8204
  %8 = load i8*, i8** %str.addr, align 8, !dbg !8205
  store i8 0, i8* %8, align 1, !dbg !8206
  ret void, !dbg !8207
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noredzone }
attributes #9 = { cold noredzone }
attributes #10 = { nounwind }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }
attributes #13 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4399, !4400, !4401, !4402}
!llvm.ident = !{!4403}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_verbose", scope: !2, file: !3, line: 28, type: !4398, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !365, globals: !379, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/media/dvb-frontends/stb0899_drv.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !30, !39, !47, !53, !59, !66, !74, !80, !94, !100, !134, !144, !151, !167, !172, !176, !181, !196, !207, !220, !227, !232, !238, !259, !265, !269, !277, !289, !298, !318, !323, !354, !358}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !6, line: 65, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !19, line: 54, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !25, line: 26, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !31, line: 296, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36, !37, !38}
!33 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !40, line: 9, baseType: !7, size: 32, elements: !41)
!40 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!41 = !{!42, !43, !44, !45, !46}
!42 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!46 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!47 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !48, line: 16, baseType: !7, size: 32, elements: !49)
!48 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!49 = !{!50, !51, !52}
!50 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!51 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!52 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!53 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !54, line: 44, baseType: !7, size: 32, elements: !55)
!54 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!55 = !{!56, !57, !58}
!56 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!59 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !60, line: 343, baseType: !7, size: 32, elements: !61)
!60 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!61 = !{!62, !63, !64, !65}
!62 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!63 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!64 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!65 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !67, line: 524, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71, !72, !73}
!69 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!73 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!74 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !67, line: 502, baseType: !7, size: 32, elements: !75)
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!77 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!78 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!79 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !81, line: 76, baseType: !7, size: 32, elements: !82)
!81 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!82 = !{!83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93}
!83 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!84 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!85 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!86 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!87 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!88 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!89 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!90 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!91 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!92 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!93 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!94 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stb0899_inversion", file: !95, line: 35, baseType: !96, size: 32, elements: !97)
!95 = !DIFile(filename: "drivers/media/dvb-frontends/stb0899_drv.h", directory: "/home/lizy2001/genbc/linux")
!96 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!97 = !{!98, !99}
!98 = !DIEnumerator(name: "IQ_SWAP_OFF", value: 1)
!99 = !DIEnumerator(name: "IQ_SWAP_ON", value: -1)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_caps", file: !101, line: 72, baseType: !7, size: 32, elements: !102)
!101 = !DIFile(filename: "./include/uapi/linux/dvb/frontend.h", directory: "/home/lizy2001/genbc/linux")
!102 = !{!103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!103 = !DIEnumerator(name: "FE_IS_STUPID", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "FE_CAN_INVERSION_AUTO", value: 1, isUnsigned: true)
!105 = !DIEnumerator(name: "FE_CAN_FEC_1_2", value: 2, isUnsigned: true)
!106 = !DIEnumerator(name: "FE_CAN_FEC_2_3", value: 4, isUnsigned: true)
!107 = !DIEnumerator(name: "FE_CAN_FEC_3_4", value: 8, isUnsigned: true)
!108 = !DIEnumerator(name: "FE_CAN_FEC_4_5", value: 16, isUnsigned: true)
!109 = !DIEnumerator(name: "FE_CAN_FEC_5_6", value: 32, isUnsigned: true)
!110 = !DIEnumerator(name: "FE_CAN_FEC_6_7", value: 64, isUnsigned: true)
!111 = !DIEnumerator(name: "FE_CAN_FEC_7_8", value: 128, isUnsigned: true)
!112 = !DIEnumerator(name: "FE_CAN_FEC_8_9", value: 256, isUnsigned: true)
!113 = !DIEnumerator(name: "FE_CAN_FEC_AUTO", value: 512, isUnsigned: true)
!114 = !DIEnumerator(name: "FE_CAN_QPSK", value: 1024, isUnsigned: true)
!115 = !DIEnumerator(name: "FE_CAN_QAM_16", value: 2048, isUnsigned: true)
!116 = !DIEnumerator(name: "FE_CAN_QAM_32", value: 4096, isUnsigned: true)
!117 = !DIEnumerator(name: "FE_CAN_QAM_64", value: 8192, isUnsigned: true)
!118 = !DIEnumerator(name: "FE_CAN_QAM_128", value: 16384, isUnsigned: true)
!119 = !DIEnumerator(name: "FE_CAN_QAM_256", value: 32768, isUnsigned: true)
!120 = !DIEnumerator(name: "FE_CAN_QAM_AUTO", value: 65536, isUnsigned: true)
!121 = !DIEnumerator(name: "FE_CAN_TRANSMISSION_MODE_AUTO", value: 131072, isUnsigned: true)
!122 = !DIEnumerator(name: "FE_CAN_BANDWIDTH_AUTO", value: 262144, isUnsigned: true)
!123 = !DIEnumerator(name: "FE_CAN_GUARD_INTERVAL_AUTO", value: 524288, isUnsigned: true)
!124 = !DIEnumerator(name: "FE_CAN_HIERARCHY_AUTO", value: 1048576, isUnsigned: true)
!125 = !DIEnumerator(name: "FE_CAN_8VSB", value: 2097152, isUnsigned: true)
!126 = !DIEnumerator(name: "FE_CAN_16VSB", value: 4194304, isUnsigned: true)
!127 = !DIEnumerator(name: "FE_HAS_EXTENDED_CAPS", value: 8388608, isUnsigned: true)
!128 = !DIEnumerator(name: "FE_CAN_MULTISTREAM", value: 67108864, isUnsigned: true)
!129 = !DIEnumerator(name: "FE_CAN_TURBO_FEC", value: 134217728, isUnsigned: true)
!130 = !DIEnumerator(name: "FE_CAN_2G_MODULATION", value: 268435456, isUnsigned: true)
!131 = !DIEnumerator(name: "FE_NEEDS_BENDING", value: 536870912, isUnsigned: true)
!132 = !DIEnumerator(name: "FE_CAN_RECOVER", value: 1073741824, isUnsigned: true)
!133 = !DIEnumerator(name: "FE_CAN_MUTE_TS", value: 2147483648, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_status", file: !101, line: 252, baseType: !7, size: 32, elements: !135)
!135 = !{!136, !137, !138, !139, !140, !141, !142, !143}
!136 = !DIEnumerator(name: "FE_NONE", value: 0, isUnsigned: true)
!137 = !DIEnumerator(name: "FE_HAS_SIGNAL", value: 1, isUnsigned: true)
!138 = !DIEnumerator(name: "FE_HAS_CARRIER", value: 2, isUnsigned: true)
!139 = !DIEnumerator(name: "FE_HAS_VITERBI", value: 4, isUnsigned: true)
!140 = !DIEnumerator(name: "FE_HAS_SYNC", value: 8, isUnsigned: true)
!141 = !DIEnumerator(name: "FE_HAS_LOCK", value: 16, isUnsigned: true)
!142 = !DIEnumerator(name: "FE_TIMEDOUT", value: 32, isUnsigned: true)
!143 = !DIEnumerator(name: "FE_REINIT", value: 64, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvbfe_algo", file: !145, line: 144, baseType: !7, size: 32, elements: !146)
!145 = !DIFile(filename: "./include/media/dvb_frontend.h", directory: "/home/lizy2001/genbc/linux")
!146 = !{!147, !148, !149, !150}
!147 = !DIEnumerator(name: "DVBFE_ALGO_HW", value: 1, isUnsigned: true)
!148 = !DIEnumerator(name: "DVBFE_ALGO_SW", value: 2, isUnsigned: true)
!149 = !DIEnumerator(name: "DVBFE_ALGO_CUSTOM", value: 4, isUnsigned: true)
!150 = !DIEnumerator(name: "DVBFE_ALGO_RECOVERY", value: 2147483648, isUnsigned: true)
!151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_modulation", file: !101, line: 338, baseType: !7, size: 32, elements: !152)
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!153 = !DIEnumerator(name: "QPSK", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "QAM_16", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "QAM_32", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "QAM_64", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "QAM_128", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "QAM_256", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "QAM_AUTO", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "VSB_8", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "VSB_16", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "PSK_8", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "APSK_16", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "APSK_32", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "DQPSK", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "QAM_4_NR", value: 13, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_voltage", file: !101, line: 208, baseType: !7, size: 32, elements: !168)
!168 = !{!169, !170, !171}
!169 = !DIEnumerator(name: "SEC_VOLTAGE_13", value: 0, isUnsigned: true)
!170 = !DIEnumerator(name: "SEC_VOLTAGE_18", value: 1, isUnsigned: true)
!171 = !DIEnumerator(name: "SEC_VOLTAGE_OFF", value: 2, isUnsigned: true)
!172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_tone_mode", file: !101, line: 220, baseType: !7, size: 32, elements: !173)
!173 = !{!174, !175}
!174 = !DIEnumerator(name: "SEC_TONE_ON", value: 0, isUnsigned: true)
!175 = !DIEnumerator(name: "SEC_TONE_OFF", value: 1, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_spectral_inversion", file: !101, line: 276, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180}
!178 = !DIEnumerator(name: "INVERSION_OFF", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "INVERSION_ON", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "INVERSION_AUTO", value: 2, isUnsigned: true)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_code_rate", file: !101, line: 302, baseType: !7, size: 32, elements: !182)
!182 = !{!183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195}
!183 = !DIEnumerator(name: "FEC_NONE", value: 0, isUnsigned: true)
!184 = !DIEnumerator(name: "FEC_1_2", value: 1, isUnsigned: true)
!185 = !DIEnumerator(name: "FEC_2_3", value: 2, isUnsigned: true)
!186 = !DIEnumerator(name: "FEC_3_4", value: 3, isUnsigned: true)
!187 = !DIEnumerator(name: "FEC_4_5", value: 4, isUnsigned: true)
!188 = !DIEnumerator(name: "FEC_5_6", value: 5, isUnsigned: true)
!189 = !DIEnumerator(name: "FEC_6_7", value: 6, isUnsigned: true)
!190 = !DIEnumerator(name: "FEC_7_8", value: 7, isUnsigned: true)
!191 = !DIEnumerator(name: "FEC_8_9", value: 8, isUnsigned: true)
!192 = !DIEnumerator(name: "FEC_AUTO", value: 9, isUnsigned: true)
!193 = !DIEnumerator(name: "FEC_3_5", value: 10, isUnsigned: true)
!194 = !DIEnumerator(name: "FEC_9_10", value: 11, isUnsigned: true)
!195 = !DIEnumerator(name: "FEC_2_5", value: 12, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_transmit_mode", file: !101, line: 381, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202, !203, !204, !205, !206}
!198 = !DIEnumerator(name: "TRANSMISSION_MODE_2K", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "TRANSMISSION_MODE_8K", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TRANSMISSION_MODE_AUTO", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "TRANSMISSION_MODE_4K", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "TRANSMISSION_MODE_1K", value: 4, isUnsigned: true)
!203 = !DIEnumerator(name: "TRANSMISSION_MODE_16K", value: 5, isUnsigned: true)
!204 = !DIEnumerator(name: "TRANSMISSION_MODE_32K", value: 6, isUnsigned: true)
!205 = !DIEnumerator(name: "TRANSMISSION_MODE_C1", value: 7, isUnsigned: true)
!206 = !DIEnumerator(name: "TRANSMISSION_MODE_C3780", value: 8, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_guard_interval", file: !101, line: 410, baseType: !7, size: 32, elements: !208)
!208 = !{!209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219}
!209 = !DIEnumerator(name: "GUARD_INTERVAL_1_32", value: 0, isUnsigned: true)
!210 = !DIEnumerator(name: "GUARD_INTERVAL_1_16", value: 1, isUnsigned: true)
!211 = !DIEnumerator(name: "GUARD_INTERVAL_1_8", value: 2, isUnsigned: true)
!212 = !DIEnumerator(name: "GUARD_INTERVAL_1_4", value: 3, isUnsigned: true)
!213 = !DIEnumerator(name: "GUARD_INTERVAL_AUTO", value: 4, isUnsigned: true)
!214 = !DIEnumerator(name: "GUARD_INTERVAL_1_128", value: 5, isUnsigned: true)
!215 = !DIEnumerator(name: "GUARD_INTERVAL_19_128", value: 6, isUnsigned: true)
!216 = !DIEnumerator(name: "GUARD_INTERVAL_19_256", value: 7, isUnsigned: true)
!217 = !DIEnumerator(name: "GUARD_INTERVAL_PN420", value: 8, isUnsigned: true)
!218 = !DIEnumerator(name: "GUARD_INTERVAL_PN595", value: 9, isUnsigned: true)
!219 = !DIEnumerator(name: "GUARD_INTERVAL_PN945", value: 10, isUnsigned: true)
!220 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_hierarchy", file: !101, line: 434, baseType: !7, size: 32, elements: !221)
!221 = !{!222, !223, !224, !225, !226}
!222 = !DIEnumerator(name: "HIERARCHY_NONE", value: 0, isUnsigned: true)
!223 = !DIEnumerator(name: "HIERARCHY_1", value: 1, isUnsigned: true)
!224 = !DIEnumerator(name: "HIERARCHY_2", value: 2, isUnsigned: true)
!225 = !DIEnumerator(name: "HIERARCHY_4", value: 3, isUnsigned: true)
!226 = !DIEnumerator(name: "HIERARCHY_AUTO", value: 4, isUnsigned: true)
!227 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_pilot", file: !101, line: 562, baseType: !7, size: 32, elements: !228)
!228 = !{!229, !230, !231}
!229 = !DIEnumerator(name: "PILOT_ON", value: 0, isUnsigned: true)
!230 = !DIEnumerator(name: "PILOT_OFF", value: 1, isUnsigned: true)
!231 = !DIEnumerator(name: "PILOT_AUTO", value: 2, isUnsigned: true)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_rolloff", file: !101, line: 579, baseType: !7, size: 32, elements: !233)
!233 = !{!234, !235, !236, !237}
!234 = !DIEnumerator(name: "ROLLOFF_35", value: 0, isUnsigned: true)
!235 = !DIEnumerator(name: "ROLLOFF_20", value: 1, isUnsigned: true)
!236 = !DIEnumerator(name: "ROLLOFF_25", value: 2, isUnsigned: true)
!237 = !DIEnumerator(name: "ROLLOFF_AUTO", value: 3, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_delivery_system", file: !101, line: 628, baseType: !7, size: 32, elements: !239)
!239 = !{!240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258}
!240 = !DIEnumerator(name: "SYS_UNDEFINED", value: 0, isUnsigned: true)
!241 = !DIEnumerator(name: "SYS_DVBC_ANNEX_A", value: 1, isUnsigned: true)
!242 = !DIEnumerator(name: "SYS_DVBC_ANNEX_B", value: 2, isUnsigned: true)
!243 = !DIEnumerator(name: "SYS_DVBT", value: 3, isUnsigned: true)
!244 = !DIEnumerator(name: "SYS_DSS", value: 4, isUnsigned: true)
!245 = !DIEnumerator(name: "SYS_DVBS", value: 5, isUnsigned: true)
!246 = !DIEnumerator(name: "SYS_DVBS2", value: 6, isUnsigned: true)
!247 = !DIEnumerator(name: "SYS_DVBH", value: 7, isUnsigned: true)
!248 = !DIEnumerator(name: "SYS_ISDBT", value: 8, isUnsigned: true)
!249 = !DIEnumerator(name: "SYS_ISDBS", value: 9, isUnsigned: true)
!250 = !DIEnumerator(name: "SYS_ISDBC", value: 10, isUnsigned: true)
!251 = !DIEnumerator(name: "SYS_ATSC", value: 11, isUnsigned: true)
!252 = !DIEnumerator(name: "SYS_ATSCMH", value: 12, isUnsigned: true)
!253 = !DIEnumerator(name: "SYS_DTMB", value: 13, isUnsigned: true)
!254 = !DIEnumerator(name: "SYS_CMMB", value: 14, isUnsigned: true)
!255 = !DIEnumerator(name: "SYS_DAB", value: 15, isUnsigned: true)
!256 = !DIEnumerator(name: "SYS_DVBT2", value: 16, isUnsigned: true)
!257 = !DIEnumerator(name: "SYS_TURBO", value: 17, isUnsigned: true)
!258 = !DIEnumerator(name: "SYS_DVBC_ANNEX_C", value: 18, isUnsigned: true)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_interleaving", file: !101, line: 451, baseType: !7, size: 32, elements: !260)
!260 = !{!261, !262, !263, !264}
!261 = !DIEnumerator(name: "INTERLEAVING_NONE", value: 0, isUnsigned: true)
!262 = !DIEnumerator(name: "INTERLEAVING_AUTO", value: 1, isUnsigned: true)
!263 = !DIEnumerator(name: "INTERLEAVING_240", value: 2, isUnsigned: true)
!264 = !DIEnumerator(name: "INTERLEAVING_720", value: 3, isUnsigned: true)
!265 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_mini_cmd", file: !101, line: 233, baseType: !7, size: 32, elements: !266)
!266 = !{!267, !268}
!267 = !DIEnumerator(name: "SEC_MINI_A", value: 0, isUnsigned: true)
!268 = !DIEnumerator(name: "SEC_MINI_B", value: 1, isUnsigned: true)
!269 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvbfe_search", file: !145, line: 173, baseType: !7, size: 32, elements: !270)
!270 = !{!271, !272, !273, !274, !275, !276}
!271 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_SUCCESS", value: 1, isUnsigned: true)
!272 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_ASLEEP", value: 2, isUnsigned: true)
!273 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_FAILED", value: 4, isUnsigned: true)
!274 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_INVALID", value: 8, isUnsigned: true)
!275 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_AGAIN", value: 16, isUnsigned: true)
!276 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_ERROR", value: 2147483648, isUnsigned: true)
!277 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvb_device_type", file: !278, line: 57, baseType: !7, size: 32, elements: !279)
!278 = !DIFile(filename: "./include/media/dvbdev.h", directory: "/home/lizy2001/genbc/linux")
!279 = !{!280, !281, !282, !283, !284, !285, !286, !287, !288}
!280 = !DIEnumerator(name: "DVB_DEVICE_SEC", value: 0, isUnsigned: true)
!281 = !DIEnumerator(name: "DVB_DEVICE_FRONTEND", value: 1, isUnsigned: true)
!282 = !DIEnumerator(name: "DVB_DEVICE_DEMUX", value: 2, isUnsigned: true)
!283 = !DIEnumerator(name: "DVB_DEVICE_DVR", value: 3, isUnsigned: true)
!284 = !DIEnumerator(name: "DVB_DEVICE_CA", value: 4, isUnsigned: true)
!285 = !DIEnumerator(name: "DVB_DEVICE_NET", value: 5, isUnsigned: true)
!286 = !DIEnumerator(name: "DVB_DEVICE_VIDEO", value: 6, isUnsigned: true)
!287 = !DIEnumerator(name: "DVB_DEVICE_AUDIO", value: 7, isUnsigned: true)
!288 = !DIEnumerator(name: "DVB_DEVICE_OSD", value: 8, isUnsigned: true)
!289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stb0899_fec", file: !290, line: 135, baseType: !7, size: 32, elements: !291)
!290 = !DIFile(filename: "drivers/media/dvb-frontends/stb0899_priv.h", directory: "/home/lizy2001/genbc/linux")
!291 = !{!292, !293, !294, !295, !296, !297}
!292 = !DIEnumerator(name: "STB0899_FEC_1_2", value: 13, isUnsigned: true)
!293 = !DIEnumerator(name: "STB0899_FEC_2_3", value: 18, isUnsigned: true)
!294 = !DIEnumerator(name: "STB0899_FEC_3_4", value: 21, isUnsigned: true)
!295 = !DIEnumerator(name: "STB0899_FEC_5_6", value: 24, isUnsigned: true)
!296 = !DIEnumerator(name: "STB0899_FEC_6_7", value: 25, isUnsigned: true)
!297 = !DIEnumerator(name: "STB0899_FEC_7_8", value: 26, isUnsigned: true)
!298 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stb0899_status", file: !290, line: 66, baseType: !7, size: 32, elements: !299)
!299 = !{!300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317}
!300 = !DIEnumerator(name: "NOAGC1", value: 0, isUnsigned: true)
!301 = !DIEnumerator(name: "AGC1OK", value: 1, isUnsigned: true)
!302 = !DIEnumerator(name: "NOTIMING", value: 2, isUnsigned: true)
!303 = !DIEnumerator(name: "ANALOGCARRIER", value: 3, isUnsigned: true)
!304 = !DIEnumerator(name: "TIMINGOK", value: 4, isUnsigned: true)
!305 = !DIEnumerator(name: "NOAGC2", value: 5, isUnsigned: true)
!306 = !DIEnumerator(name: "AGC2OK", value: 6, isUnsigned: true)
!307 = !DIEnumerator(name: "NOCARRIER", value: 7, isUnsigned: true)
!308 = !DIEnumerator(name: "CARRIEROK", value: 8, isUnsigned: true)
!309 = !DIEnumerator(name: "NODATA", value: 9, isUnsigned: true)
!310 = !DIEnumerator(name: "FALSELOCK", value: 10, isUnsigned: true)
!311 = !DIEnumerator(name: "DATAOK", value: 11, isUnsigned: true)
!312 = !DIEnumerator(name: "OUTOFRANGE", value: 12, isUnsigned: true)
!313 = !DIEnumerator(name: "RANGEOK", value: 13, isUnsigned: true)
!314 = !DIEnumerator(name: "DVBS2_DEMOD_LOCK", value: 14, isUnsigned: true)
!315 = !DIEnumerator(name: "DVBS2_DEMOD_NOLOCK", value: 15, isUnsigned: true)
!316 = !DIEnumerator(name: "DVBS2_FEC_LOCK", value: 16, isUnsigned: true)
!317 = !DIEnumerator(name: "DVBS2_FEC_NOLOCK", value: 17, isUnsigned: true)
!318 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stb0899_alpha", file: !290, line: 124, baseType: !7, size: 32, elements: !319)
!319 = !{!320, !321, !322}
!320 = !DIEnumerator(name: "RRC_20", value: 0, isUnsigned: true)
!321 = !DIEnumerator(name: "RRC_25", value: 1, isUnsigned: true)
!322 = !DIEnumerator(name: "RRC_35", value: 2, isUnsigned: true)
!323 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stb0899_modcod", file: !290, line: 87, baseType: !7, size: 32, elements: !324)
!324 = !{!325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353}
!325 = !DIEnumerator(name: "STB0899_DUMMY_PLF", value: 0, isUnsigned: true)
!326 = !DIEnumerator(name: "STB0899_QPSK_14", value: 1, isUnsigned: true)
!327 = !DIEnumerator(name: "STB0899_QPSK_13", value: 2, isUnsigned: true)
!328 = !DIEnumerator(name: "STB0899_QPSK_25", value: 3, isUnsigned: true)
!329 = !DIEnumerator(name: "STB0899_QPSK_12", value: 4, isUnsigned: true)
!330 = !DIEnumerator(name: "STB0899_QPSK_35", value: 5, isUnsigned: true)
!331 = !DIEnumerator(name: "STB0899_QPSK_23", value: 6, isUnsigned: true)
!332 = !DIEnumerator(name: "STB0899_QPSK_34", value: 7, isUnsigned: true)
!333 = !DIEnumerator(name: "STB0899_QPSK_45", value: 8, isUnsigned: true)
!334 = !DIEnumerator(name: "STB0899_QPSK_56", value: 9, isUnsigned: true)
!335 = !DIEnumerator(name: "STB0899_QPSK_89", value: 10, isUnsigned: true)
!336 = !DIEnumerator(name: "STB0899_QPSK_910", value: 11, isUnsigned: true)
!337 = !DIEnumerator(name: "STB0899_8PSK_35", value: 12, isUnsigned: true)
!338 = !DIEnumerator(name: "STB0899_8PSK_23", value: 13, isUnsigned: true)
!339 = !DIEnumerator(name: "STB0899_8PSK_34", value: 14, isUnsigned: true)
!340 = !DIEnumerator(name: "STB0899_8PSK_56", value: 15, isUnsigned: true)
!341 = !DIEnumerator(name: "STB0899_8PSK_89", value: 16, isUnsigned: true)
!342 = !DIEnumerator(name: "STB0899_8PSK_910", value: 17, isUnsigned: true)
!343 = !DIEnumerator(name: "STB0899_16APSK_23", value: 18, isUnsigned: true)
!344 = !DIEnumerator(name: "STB0899_16APSK_34", value: 19, isUnsigned: true)
!345 = !DIEnumerator(name: "STB0899_16APSK_45", value: 20, isUnsigned: true)
!346 = !DIEnumerator(name: "STB0899_16APSK_56", value: 21, isUnsigned: true)
!347 = !DIEnumerator(name: "STB0899_16APSK_89", value: 22, isUnsigned: true)
!348 = !DIEnumerator(name: "STB0899_16APSK_910", value: 23, isUnsigned: true)
!349 = !DIEnumerator(name: "STB0899_32APSK_34", value: 24, isUnsigned: true)
!350 = !DIEnumerator(name: "STB0899_32APSK_45", value: 25, isUnsigned: true)
!351 = !DIEnumerator(name: "STB0899_32APSK_56", value: 26, isUnsigned: true)
!352 = !DIEnumerator(name: "STB0899_32APSK_89", value: 27, isUnsigned: true)
!353 = !DIEnumerator(name: "STB0899_32APSK_910", value: 28, isUnsigned: true)
!354 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stb0899_frame", file: !290, line: 119, baseType: !7, size: 32, elements: !355)
!355 = !{!356, !357}
!356 = !DIEnumerator(name: "STB0899_LONG_FRAME", value: 0, isUnsigned: true)
!357 = !DIEnumerator(name: "STB0899_SHORT_FRAME", value: 1, isUnsigned: true)
!358 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !359, line: 305, baseType: !7, size: 32, elements: !360)
!359 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!360 = !{!361, !362, !363, !364}
!361 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!362 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!363 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!364 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!365 = !{!366, !368, !7, !369, !373, !96, !376, !377}
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !367, line: 148, baseType: !7)
!367 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !370, line: 20, baseType: !371)
!370 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!371 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !372, line: 26, baseType: !96)
!372 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !370, line: 16, baseType: !374)
!374 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !372, line: 20, baseType: !375)
!375 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!376 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!379 = !{!380, !444, !449, !454, !459, !464, !469, !0, !474, !476, !4370, !4380, !4385, !4388, !4393}
!380 = !DIGlobalVariableExpression(var: !381, expr: !DIExpression())
!381 = distinct !DIGlobalVariable(name: "__param_verbose", scope: !2, file: !3, line: 28, type: !382, isLocal: true, isDefinition: true, align: 64)
!382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !383)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !384, line: 69, size: 320, elements: !385)
!384 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!385 = !{!386, !389, !393, !412, !417, !418, !422}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !383, file: !384, line: 70, baseType: !387, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !378)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !383, file: !384, line: 71, baseType: !390, size: 64, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !392, line: 76, flags: DIFlagFwdDecl)
!392 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!393 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !383, file: !384, line: 72, baseType: !394, size: 64, offset: 128)
!394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !384, line: 47, size: 256, elements: !397)
!397 = !{!398, !399, !404, !408}
!398 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !396, file: !384, line: 49, baseType: !7, size: 32)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !396, file: !384, line: 51, baseType: !400, size: 64, offset: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = !DISubroutineType(types: !402)
!402 = !{!96, !387, !403}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !396, file: !384, line: 53, baseType: !405, size: 64, offset: 128)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{!96, !377, !403}
!408 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !396, file: !384, line: 55, baseType: !409, size: 64, offset: 192)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!410 = !DISubroutineType(types: !411)
!411 = !{null, !368}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !383, file: !384, line: 73, baseType: !413, size: 16, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !414)
!414 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !370, line: 19, baseType: !415)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !372, line: 24, baseType: !416)
!416 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !383, file: !384, line: 74, baseType: !373, size: 8, offset: 208)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !383, file: !384, line: 75, baseType: !419, size: 8, offset: 216)
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !370, line: 17, baseType: !420)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !372, line: 21, baseType: !421)
!421 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!422 = !DIDerivedType(tag: DW_TAG_member, scope: !383, file: !384, line: 76, baseType: !423, size: 64, offset: 256)
!423 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !383, file: !384, line: 76, size: 64, elements: !424)
!424 = !{!425, !426, !433}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !423, file: !384, line: 77, baseType: !368, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !423, file: !384, line: 78, baseType: !427, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !429)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !384, line: 86, size: 128, elements: !430)
!430 = !{!431, !432}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !429, file: !384, line: 87, baseType: !7, size: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !429, file: !384, line: 88, baseType: !377, size: 64, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !423, file: !384, line: 79, baseType: !434, size: 64)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !384, line: 92, size: 256, elements: !437)
!437 = !{!438, !439, !440, !442, !443}
!438 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !436, file: !384, line: 94, baseType: !7, size: 32)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !436, file: !384, line: 95, baseType: !7, size: 32, offset: 32)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !436, file: !384, line: 96, baseType: !441, size: 64, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !436, file: !384, line: 97, baseType: !394, size: 64, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !436, file: !384, line: 98, baseType: !368, size: 64, offset: 192)
!444 = !DIGlobalVariableExpression(var: !445, expr: !DIExpression())
!445 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_verbosetype220", scope: !2, file: !3, line: 28, type: !446, isLocal: true, isDefinition: true, align: 8)
!446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 232, elements: !447)
!447 = !{!448}
!448 = !DISubrange(count: 29)
!449 = !DIGlobalVariableExpression(var: !450, expr: !DIExpression())
!450 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_verbose221", scope: !2, file: !3, line: 1642, type: !451, isLocal: true, isDefinition: true, align: 8)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 328, elements: !452)
!452 = !{!453}
!453 = !DISubrange(count: 41)
!454 = !DIGlobalVariableExpression(var: !455, expr: !DIExpression())
!455 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author222", scope: !2, file: !3, line: 1643, type: !456, isLocal: true, isDefinition: true, align: 8)
!456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 224, elements: !457)
!457 = !{!458}
!458 = !DISubrange(count: 28)
!459 = !DIGlobalVariableExpression(var: !460, expr: !DIExpression())
!460 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description223", scope: !2, file: !3, line: 1644, type: !461, isLocal: true, isDefinition: true, align: 8)
!461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 376, elements: !462)
!462 = !{!463}
!463 = !DISubrange(count: 47)
!464 = !DIGlobalVariableExpression(var: !465, expr: !DIExpression())
!465 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file224", scope: !2, file: !3, line: 1645, type: !466, isLocal: true, isDefinition: true, align: 8)
!466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 392, elements: !467)
!467 = !{!468}
!468 = !DISubrange(count: 49)
!469 = !DIGlobalVariableExpression(var: !470, expr: !DIExpression())
!470 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license225", scope: !2, file: !3, line: 1645, type: !471, isLocal: true, isDefinition: true, align: 8)
!471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 160, elements: !472)
!472 = !{!473}
!473 = !DISubrange(count: 20)
!474 = !DIGlobalVariableExpression(var: !475, expr: !DIExpression())
!475 = distinct !DIGlobalVariable(name: "verbose", scope: !2, file: !3, line: 27, type: !7, isLocal: true, isDefinition: true)
!476 = !DIGlobalVariableExpression(var: !477, expr: !DIExpression())
!477 = distinct !DIGlobalVariable(name: "stb0899_ops", scope: !2, file: !3, line: 1571, type: !478, isLocal: true, isDefinition: true)
!478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !479)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_ops", file: !145, line: 435, size: 6016, elements: !480)
!480 = !{!481, !498, !502, !4193, !4194, !4195, !4199, !4200, !4206, !4211, !4215, !4216, !4226, !4231, !4235, !4239, !4244, !4245, !4246, !4247, !4257, !4268, !4272, !4276, !4280, !4284, !4288, !4292, !4293, !4294, !4298, !4352}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !479, file: !145, line: 436, baseType: !482, size: 1280)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_internal_info", file: !145, line: 338, size: 1280, elements: !483)
!483 = !{!484, !488, !491, !492, !493, !494, !495, !496, !497}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !482, file: !145, line: 339, baseType: !485, size: 1024)
!485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1024, elements: !486)
!486 = !{!487}
!487 = !DISubrange(count: 128)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_min_hz", scope: !482, file: !145, line: 340, baseType: !489, size: 32, offset: 1024)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !370, line: 21, baseType: !490)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !372, line: 27, baseType: !7)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_max_hz", scope: !482, file: !145, line: 341, baseType: !489, size: 32, offset: 1056)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_stepsize_hz", scope: !482, file: !145, line: 342, baseType: !489, size: 32, offset: 1088)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_tolerance_hz", scope: !482, file: !145, line: 343, baseType: !489, size: 32, offset: 1120)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_min", scope: !482, file: !145, line: 344, baseType: !489, size: 32, offset: 1152)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_max", scope: !482, file: !145, line: 345, baseType: !489, size: 32, offset: 1184)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_tolerance", scope: !482, file: !145, line: 346, baseType: !489, size: 32, offset: 1216)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !482, file: !145, line: 347, baseType: !100, size: 32, offset: 1248)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "delsys", scope: !479, file: !145, line: 438, baseType: !499, size: 64, offset: 1280)
!499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 64, elements: !500)
!500 = !{!501}
!501 = !DISubrange(count: 8)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !479, file: !145, line: 440, baseType: !503, size: 64, offset: 1344)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DISubroutineType(types: !505)
!505 = !{null, !506}
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend", file: !145, line: 686, size: 10240, elements: !508)
!508 = !{!509, !523, !524, !4109, !4110, !4111, !4112, !4113, !4114, !4187, !4191, !4192}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !507, file: !145, line: 687, baseType: !510, size: 32)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !511, line: 19, size: 32, elements: !512)
!511 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!512 = !{!513}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !510, file: !511, line: 20, baseType: !514, size: 32)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !515, line: 113, baseType: !516)
!515 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !515, line: 111, size: 32, elements: !517)
!517 = !{!518}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !516, file: !515, line: 112, baseType: !519, size: 32)
!519 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !367, line: 168, baseType: !520)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !367, line: 166, size: 32, elements: !521)
!521 = !{!522}
!522 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !520, file: !367, line: 167, baseType: !96, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !507, file: !145, line: 688, baseType: !479, size: 6016, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "dvb", scope: !507, file: !145, line: 689, baseType: !525, size: 64, offset: 6080)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_adapter", file: !278, line: 101, size: 960, elements: !527)
!527 = !{!528, !529, !535, !536, !537, !541, !542, !4087, !4088, !4089, !4108}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !526, file: !278, line: 102, baseType: !96, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "list_head", scope: !526, file: !278, line: 103, baseType: !530, size: 128, offset: 64)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !367, line: 178, size: 128, elements: !531)
!531 = !{!532, !534}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !530, file: !367, line: 179, baseType: !533, size: 64)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !530, file: !367, line: 179, baseType: !533, size: 64, offset: 64)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "device_list", scope: !526, file: !278, line: 104, baseType: !530, size: 128, offset: 192)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !526, file: !278, line: 105, baseType: !387, size: 64, offset: 320)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "proposed_mac", scope: !526, file: !278, line: 106, baseType: !538, size: 48, offset: 384)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 48, elements: !539)
!539 = !{!540}
!540 = !DISubrange(count: 6)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !526, file: !278, line: 107, baseType: !368, size: 64, offset: 448)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !526, file: !278, line: 109, baseType: !543, size: 64, offset: 512)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !60, line: 461, size: 5568, elements: !545)
!545 = !{!546, !3544, !3545, !3548, !3549, !3600, !3688, !3689, !3690, !3691, !3692, !3701, !3806, !3819, !4014, !4015, !4019, !4021, !4022, !4023, !4027, !4033, !4034, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4075, !4076, !4077, !4080, !4083, !4084, !4085, !4086}
!546 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !544, file: !60, line: 462, baseType: !547, size: 512)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !548, line: 64, size: 512, elements: !549)
!548 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!549 = !{!550, !551, !552, !554, !613, !3399, !3538, !3539, !3540, !3541, !3542, !3543}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !547, file: !548, line: 65, baseType: !387, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !547, file: !548, line: 66, baseType: !530, size: 128, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !547, file: !548, line: 67, baseType: !553, size: 64, offset: 192)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !547, file: !548, line: 68, baseType: !555, size: 64, offset: 256)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !548, line: 192, size: 704, elements: !557)
!557 = !{!558, !559, !575, !576}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !556, file: !548, line: 193, baseType: !530, size: 128)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !556, file: !548, line: 194, baseType: !560, offset: 128)
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !561, line: 83, baseType: !562)
!561 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !561, line: 71, elements: !563)
!563 = !{!564}
!564 = !DIDerivedType(tag: DW_TAG_member, scope: !562, file: !561, line: 72, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !562, file: !561, line: 72, elements: !566)
!566 = !{!567}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !565, file: !561, line: 73, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !561, line: 20, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !568, file: !561, line: 21, baseType: !571)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !572, line: 25, baseType: !573)
!572 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 25, elements: !574)
!574 = !{}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !556, file: !548, line: 195, baseType: !547, size: 512, offset: 128)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !556, file: !548, line: 196, baseType: !577, size: 64, offset: 640)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !579)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !548, line: 156, size: 192, elements: !580)
!580 = !{!581, !586, !591}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !579, file: !548, line: 157, baseType: !582, size: 64)
!582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DISubroutineType(types: !585)
!585 = !{!96, !555, !553}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !579, file: !548, line: 158, baseType: !587, size: 64, offset: 64)
!587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !588)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DISubroutineType(types: !590)
!590 = !{!387, !555, !553}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !579, file: !548, line: 159, baseType: !592, size: 64, offset: 128)
!592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !593)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = !DISubroutineType(types: !595)
!595 = !{!96, !555, !553, !596}
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !548, line: 148, size: 20736, elements: !598)
!598 = !{!599, !603, !607, !608, !612}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !597, file: !548, line: 149, baseType: !600, size: 192)
!600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 192, elements: !601)
!601 = !{!602}
!602 = !DISubrange(count: 3)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !597, file: !548, line: 150, baseType: !604, size: 4096, offset: 192)
!604 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 4096, elements: !605)
!605 = !{!606}
!606 = !DISubrange(count: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !597, file: !548, line: 151, baseType: !96, size: 32, offset: 4288)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !597, file: !548, line: 152, baseType: !609, size: 16384, offset: 4320)
!609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 16384, elements: !610)
!610 = !{!611}
!611 = !DISubrange(count: 2048)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !597, file: !548, line: 153, baseType: !96, size: 32, offset: 20704)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !547, file: !548, line: 69, baseType: !614, size: 64, offset: 320)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !548, line: 138, size: 448, elements: !616)
!616 = !{!617, !621, !649, !651, !3361, !3389, !3393}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !615, file: !548, line: 139, baseType: !618, size: 64)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = !DISubroutineType(types: !620)
!620 = !{null, !553}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !615, file: !548, line: 140, baseType: !622, size: 64, offset: 64)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !624)
!624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !625, line: 230, size: 128, elements: !626)
!625 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!626 = !{!627, !641}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !624, file: !625, line: 231, baseType: !628, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DISubroutineType(types: !630)
!630 = !{!631, !553, !635, !377}
!631 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !367, line: 60, baseType: !632)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !633, line: 73, baseType: !634)
!633 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !633, line: 15, baseType: !376)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !625, line: 30, size: 128, elements: !637)
!637 = !{!638, !639}
!638 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !636, file: !625, line: 31, baseType: !387, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !636, file: !625, line: 32, baseType: !640, size: 16, offset: 64)
!640 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !367, line: 19, baseType: !416)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !624, file: !625, line: 232, baseType: !642, size: 64, offset: 64)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DISubroutineType(types: !644)
!644 = !{!631, !553, !635, !387, !645}
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !367, line: 55, baseType: !646)
!646 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !633, line: 72, baseType: !647)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !633, line: 16, baseType: !648)
!648 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !615, file: !548, line: 141, baseType: !650, size: 64, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !615, file: !548, line: 142, baseType: !652, size: 64, offset: 192)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !625, line: 84, size: 320, elements: !656)
!656 = !{!657, !658, !662, !3358, !3359}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !655, file: !625, line: 85, baseType: !387, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !655, file: !625, line: 86, baseType: !659, size: 64, offset: 64)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{!640, !553, !635, !96}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !655, file: !625, line: 88, baseType: !663, size: 64, offset: 128)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DISubroutineType(types: !665)
!665 = !{!640, !553, !666, !96}
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !625, line: 168, size: 448, elements: !668)
!668 = !{!669, !670, !671, !672, !3353, !3354}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !667, file: !625, line: 169, baseType: !636, size: 128)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !667, file: !625, line: 170, baseType: !645, size: 64, offset: 128)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !667, file: !625, line: 171, baseType: !368, size: 64, offset: 192)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !667, file: !625, line: 172, baseType: !673, size: 64, offset: 256)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DISubroutineType(types: !675)
!675 = !{!631, !676, !553, !666, !377, !847, !645}
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !31, line: 916, size: 1856, align: 32, elements: !678)
!678 = !{!679, !697, !3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3336, !3337, !3346, !3347, !3348, !3349, !3350, !3351, !3352}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !677, file: !31, line: 920, baseType: !680, size: 128)
!680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !677, file: !31, line: 917, size: 128, elements: !681)
!681 = !{!682, !688}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !680, file: !31, line: 918, baseType: !683, size: 64)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !684, line: 58, size: 64, elements: !685)
!684 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!685 = !{!686}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !683, file: !684, line: 59, baseType: !687, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !680, file: !31, line: 919, baseType: !689, size: 128, align: 64)
!689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !367, line: 216, size: 128, align: 64, elements: !690)
!690 = !{!691, !693}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !689, file: !367, line: 217, baseType: !692, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !689, file: !367, line: 218, baseType: !694, size: 64, offset: 64)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DISubroutineType(types: !696)
!696 = !{null, !692}
!697 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !677, file: !31, line: 921, baseType: !698, size: 128, offset: 128)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !699, line: 8, size: 128, elements: !700)
!699 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!700 = !{!701, !705}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !698, file: !699, line: 9, baseType: !702, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !704, line: 18, flags: DIFlagFwdDecl)
!704 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!705 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !698, file: !699, line: 10, baseType: !706, size: 64, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !707, size: 64)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !704, line: 89, size: 1536, elements: !708)
!708 = !{!709, !710, !720, !728, !729, !747, !3287, !3289, !3301, !3302, !3303, !3304, !3305, !3310, !3311, !3312}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !707, file: !704, line: 91, baseType: !7, size: 32)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !707, file: !704, line: 92, baseType: !711, size: 32, offset: 32)
!711 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !712, line: 277, baseType: !713)
!712 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !712, line: 277, size: 32, elements: !714)
!714 = !{!715}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !713, file: !712, line: 277, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !712, line: 70, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !712, line: 65, size: 32, elements: !718)
!718 = !{!719}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !717, file: !712, line: 66, baseType: !7, size: 32)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !707, file: !704, line: 93, baseType: !721, size: 128, offset: 64)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !722, line: 38, size: 128, elements: !723)
!722 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!723 = !{!724, !726}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !721, file: !722, line: 39, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !721, file: !722, line: 39, baseType: !727, size: 64, offset: 64)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !707, file: !704, line: 94, baseType: !706, size: 64, offset: 192)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !707, file: !704, line: 95, baseType: !730, size: 128, offset: 256)
!730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !704, line: 47, size: 128, elements: !731)
!731 = !{!732, !744}
!732 = !DIDerivedType(tag: DW_TAG_member, scope: !730, file: !704, line: 48, baseType: !733, size: 64)
!733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !730, file: !704, line: 48, size: 64, elements: !734)
!734 = !{!735, !740}
!735 = !DIDerivedType(tag: DW_TAG_member, scope: !733, file: !704, line: 49, baseType: !736, size: 64)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !733, file: !704, line: 49, size: 64, elements: !737)
!737 = !{!738, !739}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !736, file: !704, line: 50, baseType: !489, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !736, file: !704, line: 50, baseType: !489, size: 32, offset: 32)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !733, file: !704, line: 52, baseType: !741, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !370, line: 23, baseType: !742)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !372, line: 31, baseType: !743)
!743 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !730, file: !704, line: 54, baseType: !745, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!746 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !707, file: !704, line: 96, baseType: !748, size: 64, offset: 384)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !31, line: 610, size: 4224, elements: !750)
!750 = !{!751, !752, !753, !761, !768, !769, !914, !2981, !2982, !2983, !2989, !2990, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3255, !3263, !3264, !3265, !3283, !3284, !3285, !3286}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !749, file: !31, line: 611, baseType: !640, size: 16)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !749, file: !31, line: 612, baseType: !416, size: 16, offset: 16)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !749, file: !31, line: 613, baseType: !754, size: 32, offset: 32)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !755, line: 23, baseType: !756)
!755 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!756 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !755, line: 21, size: 32, elements: !757)
!757 = !{!758}
!758 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !756, file: !755, line: 22, baseType: !759, size: 32)
!759 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !367, line: 32, baseType: !760)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !633, line: 49, baseType: !7)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !749, file: !31, line: 614, baseType: !762, size: 32, offset: 64)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !755, line: 28, baseType: !763)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !755, line: 26, size: 32, elements: !764)
!764 = !{!765}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !763, file: !755, line: 27, baseType: !766, size: 32)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !367, line: 33, baseType: !767)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !633, line: 50, baseType: !7)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !749, file: !31, line: 615, baseType: !7, size: 32, offset: 96)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !749, file: !31, line: 622, baseType: !770, size: 64, offset: 128)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !771, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !772)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !31, line: 1864, size: 1536, align: 512, elements: !773)
!773 = !{!774, !778, !788, !792, !798, !802, !808, !812, !816, !820, !824, !825, !831, !835, !861, !890, !894, !900, !905, !909, !910}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !772, file: !31, line: 1865, baseType: !775, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DISubroutineType(types: !777)
!777 = !{!706, !748, !706, !7}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !772, file: !31, line: 1866, baseType: !779, size: 64, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{!387, !706, !748, !782}
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !784, line: 10, size: 128, elements: !785)
!784 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!785 = !{!786, !787}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !783, file: !784, line: 11, baseType: !409, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !783, file: !784, line: 12, baseType: !368, size: 64, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !772, file: !31, line: 1867, baseType: !789, size: 64, offset: 128)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = !DISubroutineType(types: !791)
!791 = !{!96, !748, !96}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !772, file: !31, line: 1868, baseType: !793, size: 64, offset: 192)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DISubroutineType(types: !795)
!795 = !{!796, !748, !96}
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !31, line: 581, flags: DIFlagFwdDecl)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !772, file: !31, line: 1870, baseType: !799, size: 64, offset: 256)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = !DISubroutineType(types: !801)
!801 = !{!96, !706, !377, !96}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !772, file: !31, line: 1872, baseType: !803, size: 64, offset: 320)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = !DISubroutineType(types: !805)
!805 = !{!96, !748, !706, !640, !806}
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !367, line: 30, baseType: !807)
!807 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !772, file: !31, line: 1873, baseType: !809, size: 64, offset: 384)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!96, !706, !748, !706}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !772, file: !31, line: 1874, baseType: !813, size: 64, offset: 448)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DISubroutineType(types: !815)
!815 = !{!96, !748, !706}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !772, file: !31, line: 1875, baseType: !817, size: 64, offset: 512)
!817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!818 = !DISubroutineType(types: !819)
!819 = !{!96, !748, !706, !387}
!820 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !772, file: !31, line: 1876, baseType: !821, size: 64, offset: 576)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DISubroutineType(types: !823)
!823 = !{!96, !748, !706, !640}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !772, file: !31, line: 1877, baseType: !813, size: 64, offset: 640)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !772, file: !31, line: 1878, baseType: !826, size: 64, offset: 704)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = !DISubroutineType(types: !828)
!828 = !{!96, !748, !706, !640, !829}
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !367, line: 16, baseType: !830)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !367, line: 13, baseType: !489)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !772, file: !31, line: 1879, baseType: !832, size: 64, offset: 768)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{!96, !748, !706, !748, !706, !7}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !772, file: !31, line: 1881, baseType: !836, size: 64, offset: 832)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DISubroutineType(types: !838)
!838 = !{!96, !706, !839}
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !31, line: 219, size: 640, elements: !841)
!841 = !{!842, !843, !844, !845, !846, !850, !858, !859, !860}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !840, file: !31, line: 220, baseType: !7, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !840, file: !31, line: 221, baseType: !640, size: 16, offset: 32)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !840, file: !31, line: 222, baseType: !754, size: 32, offset: 64)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !840, file: !31, line: 223, baseType: !762, size: 32, offset: 96)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !840, file: !31, line: 224, baseType: !847, size: 64, offset: 128)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !367, line: 46, baseType: !848)
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !633, line: 88, baseType: !849)
!849 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !840, file: !31, line: 225, baseType: !851, size: 128, offset: 192)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !852, line: 13, size: 128, elements: !853)
!852 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!853 = !{!854, !857}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !851, file: !852, line: 14, baseType: !855, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !852, line: 8, baseType: !856)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !372, line: 30, baseType: !849)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !851, file: !852, line: 15, baseType: !376, size: 64, offset: 64)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !840, file: !31, line: 226, baseType: !851, size: 128, offset: 320)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !840, file: !31, line: 227, baseType: !851, size: 128, offset: 448)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !840, file: !31, line: 234, baseType: !676, size: 64, offset: 576)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !772, file: !31, line: 1882, baseType: !862, size: 64, offset: 896)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DISubroutineType(types: !864)
!864 = !{!96, !865, !867, !489, !7}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !869, line: 22, size: 1152, elements: !870)
!869 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!870 = !{!871, !872, !873, !874, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !868, file: !869, line: 23, baseType: !489, size: 32)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !868, file: !869, line: 24, baseType: !640, size: 16, offset: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !868, file: !869, line: 25, baseType: !7, size: 32, offset: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !868, file: !869, line: 26, baseType: !875, size: 32, offset: 96)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !367, line: 104, baseType: !489)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !868, file: !869, line: 27, baseType: !741, size: 64, offset: 128)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !868, file: !869, line: 28, baseType: !741, size: 64, offset: 192)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !868, file: !869, line: 37, baseType: !741, size: 64, offset: 256)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !868, file: !869, line: 38, baseType: !829, size: 32, offset: 320)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !868, file: !869, line: 39, baseType: !829, size: 32, offset: 352)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !868, file: !869, line: 40, baseType: !754, size: 32, offset: 384)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !868, file: !869, line: 41, baseType: !762, size: 32, offset: 416)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !868, file: !869, line: 42, baseType: !847, size: 64, offset: 448)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !868, file: !869, line: 43, baseType: !851, size: 128, offset: 512)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !868, file: !869, line: 44, baseType: !851, size: 128, offset: 640)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !868, file: !869, line: 45, baseType: !851, size: 128, offset: 768)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !868, file: !869, line: 46, baseType: !851, size: 128, offset: 896)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !868, file: !869, line: 47, baseType: !741, size: 64, offset: 1024)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !868, file: !869, line: 48, baseType: !741, size: 64, offset: 1088)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !772, file: !31, line: 1883, baseType: !891, size: 64, offset: 960)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DISubroutineType(types: !893)
!893 = !{!631, !706, !377, !645}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !772, file: !31, line: 1884, baseType: !895, size: 64, offset: 1024)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{!96, !748, !898, !741, !741}
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !31, line: 50, flags: DIFlagFwdDecl)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !772, file: !31, line: 1886, baseType: !901, size: 64, offset: 1088)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{!96, !748, !904, !96}
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !772, file: !31, line: 1887, baseType: !906, size: 64, offset: 1152)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DISubroutineType(types: !908)
!908 = !{!96, !748, !706, !676, !7, !640}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !772, file: !31, line: 1890, baseType: !821, size: 64, offset: 1216)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !772, file: !31, line: 1891, baseType: !911, size: 64, offset: 1280)
!911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !912, size: 64)
!912 = !DISubroutineType(types: !913)
!913 = !{!96, !748, !796, !96}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !749, file: !31, line: 623, baseType: !915, size: 64, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !31, line: 1416, size: 9472, elements: !917)
!917 = !{!918, !919, !920, !921, !922, !923, !970, !2589, !2671, !2754, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2770, !2774, !2775, !2778, !2779, !2782, !2783, !2784, !2825, !2851, !2852, !2853, !2854, !2855, !2856, !2859, !2861, !2868, !2869, !2871, !2872, !2873, !2932, !2933, !2948, !2949, !2950, !2951, !2952, !2955, !2956, !2957, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !916, file: !31, line: 1417, baseType: !530, size: 128)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !916, file: !31, line: 1418, baseType: !829, size: 32, offset: 128)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !916, file: !31, line: 1419, baseType: !421, size: 8, offset: 160)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !916, file: !31, line: 1420, baseType: !648, size: 64, offset: 192)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !916, file: !31, line: 1421, baseType: !847, size: 64, offset: 256)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !916, file: !31, line: 1422, baseType: !924, size: 64, offset: 320)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !31, line: 2228, size: 576, elements: !926)
!926 = !{!927, !928, !929, !936, !940, !944, !948, !949, !950, !960, !963, !964, !965, !967, !968, !969}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !925, file: !31, line: 2229, baseType: !387, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !925, file: !31, line: 2230, baseType: !96, size: 32, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !925, file: !31, line: 2238, baseType: !930, size: 64, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DISubroutineType(types: !932)
!932 = !{!96, !933}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !935, line: 28, flags: DIFlagFwdDecl)
!935 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!936 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !925, file: !31, line: 2239, baseType: !937, size: 64, offset: 192)
!937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !938, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !939)
!939 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !31, line: 70, flags: DIFlagFwdDecl)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !925, file: !31, line: 2240, baseType: !941, size: 64, offset: 256)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{!706, !924, !96, !387, !368}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !925, file: !31, line: 2242, baseType: !945, size: 64, offset: 320)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{null, !915}
!948 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !925, file: !31, line: 2243, baseType: !390, size: 64, offset: 384)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !925, file: !31, line: 2244, baseType: !924, size: 64, offset: 448)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !925, file: !31, line: 2245, baseType: !951, size: 64, offset: 512)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !367, line: 182, size: 64, elements: !952)
!952 = !{!953}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !951, file: !367, line: 183, baseType: !954, size: 64)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !367, line: 186, size: 128, elements: !956)
!956 = !{!957, !958}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !955, file: !367, line: 187, baseType: !954, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !955, file: !367, line: 187, baseType: !959, size: 64, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !925, file: !31, line: 2247, baseType: !961, offset: 576)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !962, line: 187, elements: !574)
!962 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!963 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !925, file: !31, line: 2248, baseType: !961, offset: 576)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !925, file: !31, line: 2249, baseType: !961, offset: 576)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !925, file: !31, line: 2250, baseType: !966, offset: 576)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !961, elements: !601)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !925, file: !31, line: 2252, baseType: !961, offset: 576)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !925, file: !31, line: 2253, baseType: !961, offset: 576)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !925, file: !31, line: 2254, baseType: !961, offset: 576)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !916, file: !31, line: 1423, baseType: !971, size: 64, offset: 384)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !31, line: 1935, size: 1472, elements: !974)
!974 = !{!975, !979, !983, !984, !988, !994, !998, !999, !1000, !1004, !1008, !1009, !1010, !1011, !1017, !1022, !1023, !1030, !1031, !1032, !1033, !2573, !2588}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !973, file: !31, line: 1936, baseType: !976, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = !DISubroutineType(types: !978)
!978 = !{!748, !915}
!979 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !973, file: !31, line: 1937, baseType: !980, size: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DISubroutineType(types: !982)
!982 = !{null, !748}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !973, file: !31, line: 1938, baseType: !980, size: 64, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !973, file: !31, line: 1940, baseType: !985, size: 64, offset: 192)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{null, !748, !96}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !973, file: !31, line: 1941, baseType: !989, size: 64, offset: 256)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DISubroutineType(types: !991)
!991 = !{!96, !748, !992}
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !31, line: 289, flags: DIFlagFwdDecl)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !973, file: !31, line: 1942, baseType: !995, size: 64, offset: 320)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!96, !748}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !973, file: !31, line: 1943, baseType: !980, size: 64, offset: 384)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !973, file: !31, line: 1944, baseType: !945, size: 64, offset: 448)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !973, file: !31, line: 1945, baseType: !1001, size: 64, offset: 512)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!96, !915, !96}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !973, file: !31, line: 1946, baseType: !1005, size: 64, offset: 576)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!96, !915}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !973, file: !31, line: 1947, baseType: !1005, size: 64, offset: 640)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !973, file: !31, line: 1948, baseType: !1005, size: 64, offset: 704)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !973, file: !31, line: 1949, baseType: !1005, size: 64, offset: 768)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !973, file: !31, line: 1950, baseType: !1012, size: 64, offset: 832)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!96, !706, !1015}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !31, line: 57, flags: DIFlagFwdDecl)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !973, file: !31, line: 1951, baseType: !1018, size: 64, offset: 896)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!96, !915, !1021, !377}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !96, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !973, file: !31, line: 1952, baseType: !945, size: 64, offset: 960)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !973, file: !31, line: 1954, baseType: !1024, size: 64, offset: 1024)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!96, !1027, !706}
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1029, line: 539, flags: DIFlagFwdDecl)
!1029 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !973, file: !31, line: 1955, baseType: !1024, size: 64, offset: 1088)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !973, file: !31, line: 1956, baseType: !1024, size: 64, offset: 1152)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !973, file: !31, line: 1957, baseType: !1024, size: 64, offset: 1216)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !973, file: !31, line: 1963, baseType: !1034, size: 64, offset: 1280)
!1034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1035, size: 64)
!1035 = !DISubroutineType(types: !1036)
!1036 = !{!96, !915, !1037, !366}
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1039, line: 68, size: 512, align: 128, elements: !1040)
!1039 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1040 = !{!1041, !1042, !2565, !2572}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1038, file: !1039, line: 69, baseType: !648, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, scope: !1038, file: !1039, line: 77, baseType: !1043, size: 320, offset: 64)
!1043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1038, file: !1039, line: 77, size: 320, elements: !1044)
!1044 = !{!1045, !1226, !1231, !1259, !1267, !1273, !2557, !2564}
!1045 = !DIDerivedType(tag: DW_TAG_member, scope: !1043, file: !1039, line: 78, baseType: !1046, size: 320)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1043, file: !1039, line: 78, size: 320, elements: !1047)
!1047 = !{!1048, !1049, !1224, !1225}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1046, file: !1039, line: 84, baseType: !530, size: 128)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1046, file: !1039, line: 86, baseType: !1050, size: 64, offset: 128)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !31, line: 451, size: 1216, align: 64, elements: !1052)
!1052 = !{!1053, !1054, !1061, !1062, !1063, !1078, !1094, !1095, !1096, !1097, !1217, !1218, !1221, !1222, !1223}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1051, file: !31, line: 452, baseType: !748, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1051, file: !31, line: 453, baseType: !1055, size: 128, offset: 64)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1056, line: 292, size: 128, elements: !1057)
!1056 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1057 = !{!1058, !1059, !1060}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1055, file: !1056, line: 293, baseType: !560)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1055, file: !1056, line: 295, baseType: !366, size: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1055, file: !1056, line: 296, baseType: !368, size: 64, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1051, file: !31, line: 454, baseType: !366, size: 32, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1051, file: !31, line: 455, baseType: !519, size: 32, offset: 224)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1051, file: !31, line: 460, baseType: !1064, size: 128, offset: 256)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1065, line: 125, size: 128, elements: !1066)
!1065 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1066 = !{!1067, !1077}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1064, file: !1065, line: 126, baseType: !1068, size: 64)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1065, line: 31, size: 64, elements: !1069)
!1069 = !{!1070}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1068, file: !1065, line: 32, baseType: !1071, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1065, line: 24, size: 192, align: 64, elements: !1073)
!1073 = !{!1074, !1075, !1076}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1072, file: !1065, line: 25, baseType: !648, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1072, file: !1065, line: 26, baseType: !1071, size: 64, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1072, file: !1065, line: 27, baseType: !1071, size: 64, offset: 128)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1064, file: !1065, line: 127, baseType: !1071, size: 64, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1051, file: !31, line: 461, baseType: !1079, size: 256, offset: 384)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1080, line: 35, size: 256, elements: !1081)
!1080 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1081 = !{!1082, !1090, !1091, !1093}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1079, file: !1080, line: 36, baseType: !1083, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1084, line: 13, baseType: !1085)
!1084 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1085 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !367, line: 175, baseType: !1086)
!1086 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !367, line: 173, size: 64, elements: !1087)
!1087 = !{!1088}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1086, file: !367, line: 174, baseType: !1089, size: 64)
!1089 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !370, line: 22, baseType: !856)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1079, file: !1080, line: 42, baseType: !1083, size: 64, offset: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1079, file: !1080, line: 46, baseType: !1092, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !561, line: 29, baseType: !568)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1079, file: !1080, line: 47, baseType: !530, size: 128, offset: 128)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1051, file: !31, line: 462, baseType: !648, size: 64, offset: 640)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1051, file: !31, line: 463, baseType: !648, size: 64, offset: 704)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1051, file: !31, line: 464, baseType: !648, size: 64, offset: 768)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1051, file: !31, line: 465, baseType: !1098, size: 64, offset: 832)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1100)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !31, line: 367, size: 1408, elements: !1101)
!1101 = !{!1102, !1106, !1110, !1114, !1118, !1122, !1128, !1134, !1138, !1143, !1147, !1151, !1155, !1181, !1185, !1191, !1192, !1193, !1197, !1202, !1206, !1213}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1100, file: !31, line: 368, baseType: !1103, size: 64)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!96, !1037, !992}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1100, file: !31, line: 369, baseType: !1107, size: 64, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!96, !676, !1037}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1100, file: !31, line: 372, baseType: !1111, size: 64, offset: 128)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!96, !1050, !992}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1100, file: !31, line: 375, baseType: !1115, size: 64, offset: 192)
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!96, !1037}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1100, file: !31, line: 381, baseType: !1119, size: 64, offset: 256)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!96, !676, !1050, !533, !7}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1100, file: !31, line: 383, baseType: !1123, size: 64, offset: 320)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DISubroutineType(types: !1125)
!1125 = !{null, !1126}
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !31, line: 290, flags: DIFlagFwdDecl)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1100, file: !31, line: 385, baseType: !1129, size: 64, offset: 384)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!96, !676, !1050, !847, !7, !7, !1132, !1133}
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1100, file: !31, line: 388, baseType: !1135, size: 64, offset: 448)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = !DISubroutineType(types: !1137)
!1137 = !{!96, !676, !1050, !847, !7, !7, !1037, !368}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1100, file: !31, line: 393, baseType: !1139, size: 64, offset: 512)
!1139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1140, size: 64)
!1140 = !DISubroutineType(types: !1141)
!1141 = !{!1142, !1050, !1142}
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !367, line: 125, baseType: !741)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1100, file: !31, line: 394, baseType: !1144, size: 64, offset: 576)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = !DISubroutineType(types: !1146)
!1146 = !{null, !1037, !7, !7}
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1100, file: !31, line: 395, baseType: !1148, size: 64, offset: 640)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!96, !1037, !366}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1100, file: !31, line: 396, baseType: !1152, size: 64, offset: 704)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = !DISubroutineType(types: !1154)
!1154 = !{null, !1037}
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1100, file: !31, line: 397, baseType: !1156, size: 64, offset: 768)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!631, !1159, !1179}
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !31, line: 320, size: 384, elements: !1161)
!1161 = !{!1162, !1163, !1164, !1168, !1169, !1170, !1171, !1172}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1160, file: !31, line: 321, baseType: !676, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1160, file: !31, line: 326, baseType: !847, size: 64, offset: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1160, file: !31, line: 327, baseType: !1165, size: 64, offset: 128)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{null, !1159, !376, !376}
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1160, file: !31, line: 328, baseType: !368, size: 64, offset: 192)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1160, file: !31, line: 329, baseType: !96, size: 32, offset: 256)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1160, file: !31, line: 330, baseType: !414, size: 16, offset: 288)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1160, file: !31, line: 331, baseType: !414, size: 16, offset: 304)
!1172 = !DIDerivedType(tag: DW_TAG_member, scope: !1160, file: !31, line: 332, baseType: !1173, size: 64, offset: 320)
!1173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1160, file: !31, line: 332, size: 64, elements: !1174)
!1174 = !{!1175, !1176}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1173, file: !31, line: 333, baseType: !7, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1173, file: !31, line: 334, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !31, line: 334, flags: DIFlagFwdDecl)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !31, line: 64, flags: DIFlagFwdDecl)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1100, file: !31, line: 402, baseType: !1182, size: 64, offset: 832)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1183 = !DISubroutineType(types: !1184)
!1184 = !{!96, !1050, !1037, !1037, !11}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1100, file: !31, line: 404, baseType: !1186, size: 64, offset: 896)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!806, !1037, !1189}
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1190, line: 305, baseType: !7)
!1190 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1100, file: !31, line: 405, baseType: !1152, size: 64, offset: 960)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1100, file: !31, line: 406, baseType: !1115, size: 64, offset: 1024)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1100, file: !31, line: 407, baseType: !1194, size: 64, offset: 1088)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!96, !1037, !648, !648}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1100, file: !31, line: 409, baseType: !1198, size: 64, offset: 1152)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{null, !1037, !1201, !1201}
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1100, file: !31, line: 410, baseType: !1203, size: 64, offset: 1216)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!96, !1050, !1037}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1100, file: !31, line: 413, baseType: !1207, size: 64, offset: 1280)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!96, !1210, !676, !1212}
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !31, line: 61, flags: DIFlagFwdDecl)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1100, file: !31, line: 415, baseType: !1214, size: 64, offset: 1344)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1215, size: 64)
!1215 = !DISubroutineType(types: !1216)
!1216 = !{null, !676}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1051, file: !31, line: 466, baseType: !648, size: 64, offset: 896)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1051, file: !31, line: 467, baseType: !1219, size: 32, offset: 960)
!1219 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1220, line: 8, baseType: !489)
!1220 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1051, file: !31, line: 468, baseType: !560, offset: 992)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1051, file: !31, line: 469, baseType: !530, size: 128, offset: 1024)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1051, file: !31, line: 470, baseType: !368, size: 64, offset: 1152)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1046, file: !1039, line: 87, baseType: !648, size: 64, offset: 192)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1046, file: !1039, line: 94, baseType: !648, size: 64, offset: 256)
!1226 = !DIDerivedType(tag: DW_TAG_member, scope: !1043, file: !1039, line: 96, baseType: !1227, size: 64)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1043, file: !1039, line: 96, size: 64, elements: !1228)
!1228 = !{!1229}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1227, file: !1039, line: 101, baseType: !1230, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !367, line: 143, baseType: !741)
!1231 = !DIDerivedType(tag: DW_TAG_member, scope: !1043, file: !1039, line: 103, baseType: !1232, size: 320)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1043, file: !1039, line: 103, size: 320, elements: !1233)
!1233 = !{!1234, !1244, !1247, !1248}
!1234 = !DIDerivedType(tag: DW_TAG_member, scope: !1232, file: !1039, line: 104, baseType: !1235, size: 128)
!1235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1232, file: !1039, line: 104, size: 128, elements: !1236)
!1236 = !{!1237, !1238}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1235, file: !1039, line: 105, baseType: !530, size: 128)
!1238 = !DIDerivedType(tag: DW_TAG_member, scope: !1235, file: !1039, line: 106, baseType: !1239, size: 128)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1235, file: !1039, line: 106, size: 128, elements: !1240)
!1240 = !{!1241, !1242, !1243}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1239, file: !1039, line: 107, baseType: !1037, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1239, file: !1039, line: 109, baseType: !96, size: 32, offset: 64)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1239, file: !1039, line: 110, baseType: !96, size: 32, offset: 96)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1232, file: !1039, line: 117, baseType: !1245, size: 64, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1039, line: 117, flags: DIFlagFwdDecl)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1232, file: !1039, line: 119, baseType: !368, size: 64, offset: 192)
!1248 = !DIDerivedType(tag: DW_TAG_member, scope: !1232, file: !1039, line: 120, baseType: !1249, size: 64, offset: 256)
!1249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1232, file: !1039, line: 120, size: 64, elements: !1250)
!1250 = !{!1251, !1252, !1253}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1249, file: !1039, line: 121, baseType: !368, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1249, file: !1039, line: 122, baseType: !648, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, scope: !1249, file: !1039, line: 123, baseType: !1254, size: 32)
!1254 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1249, file: !1039, line: 123, size: 32, elements: !1255)
!1255 = !{!1256, !1257, !1258}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1254, file: !1039, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1254, file: !1039, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1254, file: !1039, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1259 = !DIDerivedType(tag: DW_TAG_member, scope: !1043, file: !1039, line: 130, baseType: !1260, size: 192)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1043, file: !1039, line: 130, size: 192, elements: !1261)
!1261 = !{!1262, !1263, !1264, !1265, !1266}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1260, file: !1039, line: 131, baseType: !648, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1260, file: !1039, line: 134, baseType: !421, size: 8, offset: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1260, file: !1039, line: 135, baseType: !421, size: 8, offset: 72)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1260, file: !1039, line: 136, baseType: !519, size: 32, offset: 96)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1260, file: !1039, line: 137, baseType: !7, size: 32, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, scope: !1043, file: !1039, line: 139, baseType: !1268, size: 256)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1043, file: !1039, line: 139, size: 256, elements: !1269)
!1269 = !{!1270, !1271, !1272}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1268, file: !1039, line: 140, baseType: !648, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1268, file: !1039, line: 141, baseType: !519, size: 32, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1268, file: !1039, line: 143, baseType: !530, size: 128, offset: 128)
!1273 = !DIDerivedType(tag: DW_TAG_member, scope: !1043, file: !1039, line: 145, baseType: !1274, size: 256)
!1274 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1043, file: !1039, line: 145, size: 256, elements: !1275)
!1275 = !{!1276, !1277, !1279, !1280, !2556}
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1274, file: !1039, line: 146, baseType: !648, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1274, file: !1039, line: 147, baseType: !1278, size: 64, offset: 64)
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1029, line: 509, baseType: !1037)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1274, file: !1039, line: 148, baseType: !648, size: 64, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_member, scope: !1274, file: !1039, line: 149, baseType: !1281, size: 64, offset: 192)
!1281 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1274, file: !1039, line: 149, size: 64, elements: !1282)
!1282 = !{!1283, !2555}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1281, file: !1039, line: 150, baseType: !1284, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1039, line: 388, size: 7296, elements: !1286)
!1286 = !{!1287, !2551}
!1287 = !DIDerivedType(tag: DW_TAG_member, scope: !1285, file: !1039, line: 389, baseType: !1288, size: 7296)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1285, file: !1039, line: 389, size: 7296, elements: !1289)
!1289 = !{!1290, !1328, !1329, !1330, !1334, !1335, !1336, !1337, !1338, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1379, !1387, !1390, !1436, !1437, !2535, !2536, !2539, !2540, !2541, !2544, !2545, !2546, !2549, !2550}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1288, file: !1039, line: 390, baseType: !1291, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1039, line: 305, size: 1472, elements: !1293)
!1293 = !{!1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1308, !1309, !1314, !1315, !1318, !1322, !1323, !1324, !1325, !1326}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1292, file: !1039, line: 308, baseType: !648, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1292, file: !1039, line: 309, baseType: !648, size: 64, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1292, file: !1039, line: 313, baseType: !1291, size: 64, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1292, file: !1039, line: 313, baseType: !1291, size: 64, offset: 192)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1292, file: !1039, line: 315, baseType: !1072, size: 192, align: 64, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1292, file: !1039, line: 323, baseType: !648, size: 64, offset: 448)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1292, file: !1039, line: 327, baseType: !1284, size: 64, offset: 512)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1292, file: !1039, line: 333, baseType: !1302, size: 64, offset: 576)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1029, line: 284, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1029, line: 284, size: 64, elements: !1304)
!1304 = !{!1305}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1303, file: !1029, line: 284, baseType: !1306, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1307, line: 19, baseType: !648)
!1307 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1292, file: !1039, line: 334, baseType: !648, size: 64, offset: 640)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1292, file: !1039, line: 343, baseType: !1310, size: 256, offset: 704)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1292, file: !1039, line: 340, size: 256, elements: !1311)
!1311 = !{!1312, !1313}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1310, file: !1039, line: 341, baseType: !1072, size: 192, align: 64)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1310, file: !1039, line: 342, baseType: !648, size: 64, offset: 192)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1292, file: !1039, line: 351, baseType: !530, size: 128, offset: 960)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1292, file: !1039, line: 353, baseType: !1316, size: 64, offset: 1088)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1039, line: 353, flags: DIFlagFwdDecl)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1292, file: !1039, line: 356, baseType: !1319, size: 64, offset: 1152)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1321)
!1321 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !1039, line: 356, flags: DIFlagFwdDecl)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1292, file: !1039, line: 359, baseType: !648, size: 64, offset: 1216)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1292, file: !1039, line: 361, baseType: !676, size: 64, offset: 1280)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1292, file: !1039, line: 362, baseType: !368, size: 64, offset: 1344)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1292, file: !1039, line: 365, baseType: !1083, size: 64, offset: 1408)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1292, file: !1039, line: 373, baseType: !1327, offset: 1472)
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1039, line: 296, elements: !574)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1288, file: !1039, line: 391, baseType: !1068, size: 64, offset: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1288, file: !1039, line: 392, baseType: !741, size: 64, offset: 128)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1288, file: !1039, line: 394, baseType: !1331, size: 64, offset: 192)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{!648, !676, !648, !648, !648, !648}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1288, file: !1039, line: 398, baseType: !648, size: 64, offset: 256)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1288, file: !1039, line: 399, baseType: !648, size: 64, offset: 320)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1288, file: !1039, line: 405, baseType: !648, size: 64, offset: 384)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1288, file: !1039, line: 406, baseType: !648, size: 64, offset: 448)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1288, file: !1039, line: 407, baseType: !1339, size: 64, offset: 512)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1029, line: 286, baseType: !1341)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1029, line: 286, size: 64, elements: !1342)
!1342 = !{!1343}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1341, file: !1029, line: 286, baseType: !1344, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1307, line: 18, baseType: !648)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1288, file: !1039, line: 416, baseType: !519, size: 32, offset: 576)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1288, file: !1039, line: 428, baseType: !519, size: 32, offset: 608)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1288, file: !1039, line: 437, baseType: !519, size: 32, offset: 640)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1288, file: !1039, line: 447, baseType: !519, size: 32, offset: 672)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1288, file: !1039, line: 450, baseType: !1083, size: 64, offset: 704)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1288, file: !1039, line: 452, baseType: !96, size: 32, offset: 768)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1288, file: !1039, line: 454, baseType: !560, offset: 800)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1288, file: !1039, line: 457, baseType: !1079, size: 256, offset: 832)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1288, file: !1039, line: 459, baseType: !530, size: 128, offset: 1088)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1288, file: !1039, line: 466, baseType: !648, size: 64, offset: 1216)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1288, file: !1039, line: 467, baseType: !648, size: 64, offset: 1280)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1288, file: !1039, line: 469, baseType: !648, size: 64, offset: 1344)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1288, file: !1039, line: 470, baseType: !648, size: 64, offset: 1408)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1288, file: !1039, line: 471, baseType: !1085, size: 64, offset: 1472)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1288, file: !1039, line: 472, baseType: !648, size: 64, offset: 1536)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1288, file: !1039, line: 473, baseType: !648, size: 64, offset: 1600)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1288, file: !1039, line: 474, baseType: !648, size: 64, offset: 1664)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1288, file: !1039, line: 475, baseType: !648, size: 64, offset: 1728)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1288, file: !1039, line: 477, baseType: !560, offset: 1792)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1288, file: !1039, line: 478, baseType: !648, size: 64, offset: 1792)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1288, file: !1039, line: 478, baseType: !648, size: 64, offset: 1856)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1288, file: !1039, line: 478, baseType: !648, size: 64, offset: 1920)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1288, file: !1039, line: 478, baseType: !648, size: 64, offset: 1984)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1288, file: !1039, line: 479, baseType: !648, size: 64, offset: 2048)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1288, file: !1039, line: 479, baseType: !648, size: 64, offset: 2112)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1288, file: !1039, line: 479, baseType: !648, size: 64, offset: 2176)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1288, file: !1039, line: 480, baseType: !648, size: 64, offset: 2240)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1288, file: !1039, line: 480, baseType: !648, size: 64, offset: 2304)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1288, file: !1039, line: 480, baseType: !648, size: 64, offset: 2368)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1288, file: !1039, line: 480, baseType: !648, size: 64, offset: 2432)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1288, file: !1039, line: 482, baseType: !1376, size: 2816, offset: 2496)
!1376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 2816, elements: !1377)
!1377 = !{!1378}
!1378 = !DISubrange(count: 44)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1288, file: !1039, line: 488, baseType: !1380, size: 256, offset: 5312)
!1380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1381, line: 60, size: 256, elements: !1382)
!1381 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1382 = !{!1383}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1380, file: !1381, line: 61, baseType: !1384, size: 256)
!1384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1083, size: 256, elements: !1385)
!1385 = !{!1386}
!1386 = !DISubrange(count: 4)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1288, file: !1039, line: 490, baseType: !1388, size: 64, offset: 5568)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 64)
!1389 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1039, line: 490, flags: DIFlagFwdDecl)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1288, file: !1039, line: 493, baseType: !1391, size: 896, offset: 5632)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1392, line: 53, baseType: !1393)
!1392 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1392, line: 13, size: 896, elements: !1394)
!1394 = !{!1395, !1396, !1397, !1398, !1401, !1402, !1409, !1410, !1430, !1431, !1432}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1393, file: !1392, line: 18, baseType: !741, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1393, file: !1392, line: 28, baseType: !1085, size: 64, offset: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1393, file: !1392, line: 31, baseType: !1079, size: 256, offset: 128)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1393, file: !1392, line: 32, baseType: !1399, size: 64, offset: 384)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1392, line: 32, flags: DIFlagFwdDecl)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1393, file: !1392, line: 37, baseType: !416, size: 16, offset: 448)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1393, file: !1392, line: 40, baseType: !1403, size: 192, offset: 512)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1404, line: 53, size: 192, elements: !1405)
!1404 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1405 = !{!1406, !1407, !1408}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1403, file: !1404, line: 54, baseType: !1083, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1403, file: !1404, line: 55, baseType: !560, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1403, file: !1404, line: 59, baseType: !530, size: 128, offset: 64)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1393, file: !1392, line: 41, baseType: !368, size: 64, offset: 704)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1393, file: !1392, line: 42, baseType: !1411, size: 64, offset: 768)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1413)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1414, line: 13, size: 896, elements: !1415)
!1414 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1415 = !{!1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1413, file: !1414, line: 14, baseType: !368, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1413, file: !1414, line: 15, baseType: !648, size: 64, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1413, file: !1414, line: 17, baseType: !648, size: 64, offset: 128)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1413, file: !1414, line: 17, baseType: !648, size: 64, offset: 192)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1413, file: !1414, line: 19, baseType: !376, size: 64, offset: 256)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1413, file: !1414, line: 21, baseType: !376, size: 64, offset: 320)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1413, file: !1414, line: 22, baseType: !376, size: 64, offset: 384)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1413, file: !1414, line: 23, baseType: !376, size: 64, offset: 448)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1413, file: !1414, line: 24, baseType: !376, size: 64, offset: 512)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1413, file: !1414, line: 25, baseType: !376, size: 64, offset: 576)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1413, file: !1414, line: 26, baseType: !376, size: 64, offset: 640)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1413, file: !1414, line: 27, baseType: !376, size: 64, offset: 704)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1413, file: !1414, line: 28, baseType: !376, size: 64, offset: 768)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1413, file: !1414, line: 29, baseType: !376, size: 64, offset: 832)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1393, file: !1392, line: 44, baseType: !519, size: 32, offset: 832)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1393, file: !1392, line: 50, baseType: !414, size: 16, offset: 864)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1393, file: !1392, line: 51, baseType: !1433, size: 16, offset: 880)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !370, line: 18, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !372, line: 23, baseType: !1435)
!1435 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1288, file: !1039, line: 495, baseType: !648, size: 64, offset: 6528)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1288, file: !1039, line: 497, baseType: !1438, size: 64, offset: 6592)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1039, line: 381, size: 384, elements: !1440)
!1440 = !{!1441, !1442, !2534}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1439, file: !1039, line: 382, baseType: !519, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1439, file: !1039, line: 383, baseType: !1443, size: 128, offset: 64)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1039, line: 376, size: 128, elements: !1444)
!1444 = !{!1445, !2532}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1443, file: !1039, line: 377, baseType: !1446, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1448, line: 640, size: 48640, elements: !1449)
!1448 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1449 = !{!1450, !1456, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1471, !1489, !1500, !1581, !1582, !1583, !1594, !1595, !1597, !1598, !1599, !1600, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1682, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1720, !1722, !1723, !1724, !1736, !1737, !1738, !1739, !1740, !1741, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1765, !1770, !1952, !1953, !1954, !1955, !1959, !1962, !1965, !1968, !1971, !1975, !2076, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2122, !2123, !2124, !2125, !2126, !2131, !2132, !2133, !2136, !2137, !2140, !2143, !2146, !2149, !2192, !2195, !2196, !2275, !2276, !2279, !2280, !2283, !2284, !2285, !2289, !2290, !2291, !2304, !2305, !2306, !2316, !2321, !2324, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1447, file: !1448, line: 646, baseType: !1451, size: 128)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1452, line: 56, size: 128, elements: !1453)
!1452 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1453 = !{!1454, !1455}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1451, file: !1452, line: 57, baseType: !648, size: 64)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1451, file: !1452, line: 58, baseType: !489, size: 32, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1447, file: !1448, line: 649, baseType: !1457, size: 64, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !376)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1447, file: !1448, line: 657, baseType: !368, size: 64, offset: 192)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1447, file: !1448, line: 658, baseType: !514, size: 32, offset: 256)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1447, file: !1448, line: 660, baseType: !7, size: 32, offset: 288)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1447, file: !1448, line: 661, baseType: !7, size: 32, offset: 320)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1447, file: !1448, line: 684, baseType: !96, size: 32, offset: 352)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1447, file: !1448, line: 686, baseType: !96, size: 32, offset: 384)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1447, file: !1448, line: 687, baseType: !96, size: 32, offset: 416)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1447, file: !1448, line: 688, baseType: !96, size: 32, offset: 448)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1447, file: !1448, line: 689, baseType: !7, size: 32, offset: 480)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1447, file: !1448, line: 691, baseType: !1468, size: 64, offset: 512)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1470)
!1470 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1448, line: 691, flags: DIFlagFwdDecl)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1447, file: !1448, line: 692, baseType: !1472, size: 832, offset: 576)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1448, line: 451, size: 832, elements: !1473)
!1473 = !{!1474, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1472, file: !1448, line: 453, baseType: !1475, size: 128)
!1475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1448, line: 325, size: 128, elements: !1476)
!1476 = !{!1477, !1478}
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1475, file: !1448, line: 326, baseType: !648, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1475, file: !1448, line: 327, baseType: !489, size: 32, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1472, file: !1448, line: 454, baseType: !1072, size: 192, align: 64, offset: 128)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1472, file: !1448, line: 455, baseType: !530, size: 128, offset: 320)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1472, file: !1448, line: 456, baseType: !7, size: 32, offset: 448)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1472, file: !1448, line: 458, baseType: !741, size: 64, offset: 512)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1472, file: !1448, line: 459, baseType: !741, size: 64, offset: 576)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1472, file: !1448, line: 460, baseType: !741, size: 64, offset: 640)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1472, file: !1448, line: 461, baseType: !741, size: 64, offset: 704)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1472, file: !1448, line: 463, baseType: !741, size: 64, offset: 768)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1472, file: !1448, line: 465, baseType: !1488, offset: 832)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1448, line: 415, elements: !574)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1447, file: !1448, line: 693, baseType: !1490, size: 384, offset: 1408)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1448, line: 489, size: 384, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1496, !1497, !1498}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1490, file: !1448, line: 490, baseType: !530, size: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1490, file: !1448, line: 491, baseType: !648, size: 64, offset: 128)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1490, file: !1448, line: 492, baseType: !648, size: 64, offset: 192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1490, file: !1448, line: 493, baseType: !7, size: 32, offset: 256)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1490, file: !1448, line: 494, baseType: !416, size: 16, offset: 288)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1490, file: !1448, line: 495, baseType: !416, size: 16, offset: 304)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1490, file: !1448, line: 497, baseType: !1499, size: 64, offset: 320)
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1490, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1447, file: !1448, line: 697, baseType: !1501, size: 1792, offset: 1792)
!1501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1448, line: 507, size: 1792, elements: !1502)
!1502 = !{!1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1578, !1579}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1501, file: !1448, line: 508, baseType: !1072, size: 192, align: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1501, file: !1448, line: 515, baseType: !741, size: 64, offset: 192)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1501, file: !1448, line: 516, baseType: !741, size: 64, offset: 256)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1501, file: !1448, line: 517, baseType: !741, size: 64, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1501, file: !1448, line: 518, baseType: !741, size: 64, offset: 384)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1501, file: !1448, line: 519, baseType: !741, size: 64, offset: 448)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1501, file: !1448, line: 526, baseType: !1089, size: 64, offset: 512)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1501, file: !1448, line: 527, baseType: !741, size: 64, offset: 576)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1501, file: !1448, line: 528, baseType: !7, size: 32, offset: 640)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1501, file: !1448, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1501, file: !1448, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1501, file: !1448, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1501, file: !1448, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1501, file: !1448, line: 563, baseType: !1517, size: 512, offset: 704)
!1517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !6, line: 118, size: 512, elements: !1518)
!1518 = !{!1519, !1527, !1528, !1533, !1574, !1575, !1576, !1577}
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1517, file: !6, line: 119, baseType: !1520, size: 256)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1521, line: 9, size: 256, elements: !1522)
!1521 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1522 = !{!1523, !1524}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1520, file: !1521, line: 10, baseType: !1072, size: 192, align: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1520, file: !1521, line: 11, baseType: !1525, size: 64, offset: 192)
!1525 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1526, line: 29, baseType: !1089)
!1526 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1517, file: !6, line: 120, baseType: !1525, size: 64, offset: 256)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1517, file: !6, line: 121, baseType: !1529, size: 64, offset: 320)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!5, !1532}
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1517, size: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1517, file: !6, line: 122, baseType: !1534, size: 64, offset: 384)
!1534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1535, size: 64)
!1535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !6, line: 159, size: 512, align: 512, elements: !1536)
!1536 = !{!1537, !1555, !1556, !1559, !1564, !1565, !1569, !1573}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1535, file: !6, line: 160, baseType: !1538, size: 64)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !6, line: 214, size: 4608, align: 512, elements: !1540)
!1540 = !{!1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1539, file: !6, line: 215, baseType: !1092)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1539, file: !6, line: 216, baseType: !7, size: 32)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1539, file: !6, line: 217, baseType: !7, size: 32, offset: 32)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1539, file: !6, line: 218, baseType: !7, size: 32, offset: 64)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1539, file: !6, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1539, file: !6, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1539, file: !6, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1539, file: !6, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1539, file: !6, line: 233, baseType: !1525, size: 64, offset: 128)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1539, file: !6, line: 234, baseType: !1532, size: 64, offset: 192)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1539, file: !6, line: 235, baseType: !1525, size: 64, offset: 256)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1539, file: !6, line: 236, baseType: !1532, size: 64, offset: 320)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1539, file: !6, line: 237, baseType: !1554, size: 4096, offset: 512)
!1554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1535, size: 4096, elements: !500)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1535, file: !6, line: 161, baseType: !7, size: 32, offset: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1535, file: !6, line: 162, baseType: !1557, size: 32, offset: 96)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !367, line: 27, baseType: !1558)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !633, line: 96, baseType: !96)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1535, file: !6, line: 163, baseType: !1560, size: 32, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !712, line: 276, baseType: !1561)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !712, line: 276, size: 32, elements: !1562)
!1562 = !{!1563}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1561, file: !712, line: 276, baseType: !716, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1535, file: !6, line: 164, baseType: !1532, size: 64, offset: 192)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1535, file: !6, line: 165, baseType: !1566, size: 128, offset: 256)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1521, line: 14, size: 128, elements: !1567)
!1567 = !{!1568}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1566, file: !1521, line: 15, baseType: !1064, size: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1535, file: !6, line: 166, baseType: !1570, size: 64, offset: 384)
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DISubroutineType(types: !1572)
!1572 = !{!1525}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1535, file: !6, line: 167, baseType: !1525, size: 64, offset: 448)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1517, file: !6, line: 123, baseType: !419, size: 8, offset: 448)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1517, file: !6, line: 124, baseType: !419, size: 8, offset: 456)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1517, file: !6, line: 125, baseType: !419, size: 8, offset: 464)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1517, file: !6, line: 126, baseType: !419, size: 8, offset: 472)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1501, file: !1448, line: 572, baseType: !1517, size: 512, offset: 1216)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1501, file: !1448, line: 580, baseType: !1580, size: 64, offset: 1728)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1447, file: !1448, line: 721, baseType: !7, size: 32, offset: 3584)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1447, file: !1448, line: 722, baseType: !96, size: 32, offset: 3616)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1447, file: !1448, line: 723, baseType: !1584, size: 64, offset: 3648)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1586)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1587, line: 17, baseType: !1588)
!1587 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1587, line: 17, size: 64, elements: !1589)
!1589 = !{!1590}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1588, file: !1587, line: 17, baseType: !1591, size: 64)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, size: 64, elements: !1592)
!1592 = !{!1593}
!1593 = !DISubrange(count: 1)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1447, file: !1448, line: 724, baseType: !1586, size: 64, offset: 3712)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1447, file: !1448, line: 749, baseType: !1596, offset: 3776)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1448, line: 290, elements: !574)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1447, file: !1448, line: 751, baseType: !530, size: 128, offset: 3776)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1447, file: !1448, line: 757, baseType: !1284, size: 64, offset: 3904)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1447, file: !1448, line: 758, baseType: !1284, size: 64, offset: 3968)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1447, file: !1448, line: 761, baseType: !1601, size: 320, offset: 4032)
!1601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1381, line: 34, size: 320, elements: !1602)
!1602 = !{!1603, !1604}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1601, file: !1381, line: 35, baseType: !741, size: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1601, file: !1381, line: 36, baseType: !1605, size: 256, offset: 64)
!1605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1291, size: 256, elements: !1385)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1447, file: !1448, line: 766, baseType: !96, size: 32, offset: 4352)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1447, file: !1448, line: 767, baseType: !96, size: 32, offset: 4384)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1447, file: !1448, line: 768, baseType: !96, size: 32, offset: 4416)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1447, file: !1448, line: 770, baseType: !96, size: 32, offset: 4448)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1447, file: !1448, line: 772, baseType: !648, size: 64, offset: 4480)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1447, file: !1448, line: 775, baseType: !7, size: 32, offset: 4544)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1447, file: !1448, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1447, file: !1448, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1447, file: !1448, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1447, file: !1448, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1447, file: !1448, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1447, file: !1448, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1447, file: !1448, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1447, file: !1448, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1447, file: !1448, line: 831, baseType: !648, size: 64, offset: 4672)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1447, file: !1448, line: 833, baseType: !1622, size: 384, offset: 4736)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !48, line: 25, size: 384, elements: !1623)
!1623 = !{!1624, !1629}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1622, file: !48, line: 26, baseType: !1625, size: 64)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!376, !1628}
!1628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, scope: !1622, file: !48, line: 27, baseType: !1630, size: 320, offset: 64)
!1630 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1622, file: !48, line: 27, size: 320, elements: !1631)
!1631 = !{!1632, !1642, !1667}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1630, file: !48, line: 36, baseType: !1633, size: 320)
!1633 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1630, file: !48, line: 29, size: 320, elements: !1634)
!1634 = !{!1635, !1637, !1638, !1639, !1640, !1641}
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1633, file: !48, line: 30, baseType: !1636, size: 64)
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1633, file: !48, line: 31, baseType: !489, size: 32, offset: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1633, file: !48, line: 32, baseType: !489, size: 32, offset: 96)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1633, file: !48, line: 33, baseType: !489, size: 32, offset: 128)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1633, file: !48, line: 34, baseType: !741, size: 64, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1633, file: !48, line: 35, baseType: !1636, size: 64, offset: 256)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1630, file: !48, line: 46, baseType: !1643, size: 192)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1630, file: !48, line: 38, size: 192, elements: !1644)
!1644 = !{!1645, !1646, !1647, !1666}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1643, file: !48, line: 39, baseType: !1557, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1643, file: !48, line: 40, baseType: !47, size: 32, offset: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, scope: !1643, file: !48, line: 41, baseType: !1648, size: 64, offset: 64)
!1648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1643, file: !48, line: 41, size: 64, elements: !1649)
!1649 = !{!1650, !1658}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1648, file: !48, line: 42, baseType: !1651, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1653, line: 7, size: 128, elements: !1654)
!1653 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1654 = !{!1655, !1657}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1652, file: !1653, line: 8, baseType: !1656, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !633, line: 93, baseType: !849)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1652, file: !1653, line: 9, baseType: !849, size: 64, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1648, file: !48, line: 43, baseType: !1659, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1661, line: 7, size: 64, elements: !1662)
!1661 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1662 = !{!1663, !1665}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1660, file: !1661, line: 8, baseType: !1664, size: 32)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1661, line: 5, baseType: !369)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1660, file: !1661, line: 9, baseType: !369, size: 32, offset: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1643, file: !48, line: 45, baseType: !741, size: 64, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1630, file: !48, line: 54, baseType: !1668, size: 256)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1630, file: !48, line: 48, size: 256, elements: !1669)
!1669 = !{!1670, !1678, !1679, !1680, !1681}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1668, file: !48, line: 49, baseType: !1671, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1673, line: 36, size: 64, elements: !1674)
!1673 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1674 = !{!1675, !1676, !1677}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1672, file: !1673, line: 37, baseType: !96, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1672, file: !1673, line: 38, baseType: !1435, size: 16, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1672, file: !1673, line: 39, baseType: !1435, size: 16, offset: 48)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1668, file: !48, line: 50, baseType: !96, size: 32, offset: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1668, file: !48, line: 51, baseType: !96, size: 32, offset: 96)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1668, file: !48, line: 52, baseType: !648, size: 64, offset: 128)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1668, file: !48, line: 53, baseType: !648, size: 64, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1447, file: !1448, line: 835, baseType: !1683, size: 32, offset: 5120)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !367, line: 22, baseType: !1684)
!1684 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !633, line: 28, baseType: !96)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1447, file: !1448, line: 836, baseType: !1683, size: 32, offset: 5152)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1447, file: !1448, line: 840, baseType: !648, size: 64, offset: 5184)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1447, file: !1448, line: 849, baseType: !1446, size: 64, offset: 5248)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1447, file: !1448, line: 852, baseType: !1446, size: 64, offset: 5312)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1447, file: !1448, line: 857, baseType: !530, size: 128, offset: 5376)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1447, file: !1448, line: 858, baseType: !530, size: 128, offset: 5504)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1447, file: !1448, line: 859, baseType: !1446, size: 64, offset: 5632)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1447, file: !1448, line: 867, baseType: !530, size: 128, offset: 5696)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1447, file: !1448, line: 868, baseType: !530, size: 128, offset: 5824)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1447, file: !1448, line: 871, baseType: !1695, size: 64, offset: 5952)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !40, line: 59, size: 768, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701, !1703, !1704, !1711, !1712}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1696, file: !40, line: 61, baseType: !514, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1696, file: !40, line: 62, baseType: !7, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1696, file: !40, line: 63, baseType: !560, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1696, file: !40, line: 65, baseType: !1702, size: 256, offset: 64)
!1702 = !DICompositeType(tag: DW_TAG_array_type, baseType: !951, size: 256, elements: !1385)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1696, file: !40, line: 66, baseType: !951, size: 64, offset: 320)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1696, file: !40, line: 68, baseType: !1705, size: 128, offset: 384)
!1705 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1706, line: 40, baseType: !1707)
!1706 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1706, line: 36, size: 128, elements: !1708)
!1708 = !{!1709, !1710}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1707, file: !1706, line: 37, baseType: !560)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1707, file: !1706, line: 38, baseType: !530, size: 128)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1696, file: !40, line: 69, baseType: !689, size: 128, align: 64, offset: 512)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1696, file: !40, line: 70, baseType: !1713, size: 128, offset: 640)
!1713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1714, size: 128, elements: !1592)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !40, line: 54, size: 128, elements: !1715)
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1714, file: !40, line: 55, baseType: !96, size: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1714, file: !40, line: 56, baseType: !1718, size: 64, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !40, line: 56, flags: DIFlagFwdDecl)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1447, file: !1448, line: 872, baseType: !1721, size: 512, offset: 6016)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, size: 512, elements: !1385)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1447, file: !1448, line: 873, baseType: !530, size: 128, offset: 6528)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1447, file: !1448, line: 874, baseType: !530, size: 128, offset: 6656)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1447, file: !1448, line: 876, baseType: !1725, size: 64, offset: 6784)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 64)
!1726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1727, line: 26, size: 192, elements: !1728)
!1727 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1728 = !{!1729, !1730}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1726, file: !1727, line: 27, baseType: !7, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1726, file: !1727, line: 28, baseType: !1731, size: 128, offset: 64)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1732, line: 43, size: 128, elements: !1733)
!1732 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1733 = !{!1734, !1735}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1731, file: !1732, line: 44, baseType: !1092)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1731, file: !1732, line: 45, baseType: !530, size: 128)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1447, file: !1448, line: 879, baseType: !1021, size: 64, offset: 6848)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1447, file: !1448, line: 882, baseType: !1021, size: 64, offset: 6912)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1447, file: !1448, line: 884, baseType: !741, size: 64, offset: 6976)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1447, file: !1448, line: 885, baseType: !741, size: 64, offset: 7040)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1447, file: !1448, line: 890, baseType: !741, size: 64, offset: 7104)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1447, file: !1448, line: 891, baseType: !1742, size: 128, offset: 7168)
!1742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1448, line: 242, size: 128, elements: !1743)
!1743 = !{!1744, !1745, !1746}
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1742, file: !1448, line: 244, baseType: !741, size: 64)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1742, file: !1448, line: 245, baseType: !741, size: 64, offset: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1742, file: !1448, line: 246, baseType: !1092, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1447, file: !1448, line: 900, baseType: !648, size: 64, offset: 7296)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1447, file: !1448, line: 901, baseType: !648, size: 64, offset: 7360)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1447, file: !1448, line: 904, baseType: !741, size: 64, offset: 7424)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1447, file: !1448, line: 907, baseType: !741, size: 64, offset: 7488)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1447, file: !1448, line: 910, baseType: !648, size: 64, offset: 7552)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1447, file: !1448, line: 911, baseType: !648, size: 64, offset: 7616)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1447, file: !1448, line: 914, baseType: !1754, size: 640, offset: 7680)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1755, line: 123, size: 640, elements: !1756)
!1755 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1756 = !{!1757, !1763, !1764}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1754, file: !1755, line: 124, baseType: !1758, size: 576)
!1758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1759, size: 576, elements: !601)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1755, line: 108, size: 192, elements: !1760)
!1760 = !{!1761, !1762}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1759, file: !1755, line: 109, baseType: !741, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1759, file: !1755, line: 110, baseType: !1566, size: 128, offset: 64)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1754, file: !1755, line: 125, baseType: !7, size: 32, offset: 576)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1754, file: !1755, line: 126, baseType: !7, size: 32, offset: 608)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1447, file: !1448, line: 917, baseType: !1766, size: 192, offset: 8320)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1755, line: 134, size: 192, elements: !1767)
!1767 = !{!1768, !1769}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1766, file: !1755, line: 135, baseType: !689, size: 128, align: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1766, file: !1755, line: 136, baseType: !7, size: 32, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1447, file: !1448, line: 923, baseType: !1771, size: 64, offset: 8512)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1773)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1774, line: 111, size: 1280, elements: !1775)
!1774 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1775 = !{!1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1795, !1796, !1797, !1798, !1799, !1800, !1905, !1906, !1907, !1908, !1934, !1937, !1947}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1773, file: !1774, line: 112, baseType: !519, size: 32)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1773, file: !1774, line: 120, baseType: !754, size: 32, offset: 32)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1773, file: !1774, line: 121, baseType: !762, size: 32, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1773, file: !1774, line: 122, baseType: !754, size: 32, offset: 96)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1773, file: !1774, line: 123, baseType: !762, size: 32, offset: 128)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1773, file: !1774, line: 124, baseType: !754, size: 32, offset: 160)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1773, file: !1774, line: 125, baseType: !762, size: 32, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1773, file: !1774, line: 126, baseType: !754, size: 32, offset: 224)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1773, file: !1774, line: 127, baseType: !762, size: 32, offset: 256)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1773, file: !1774, line: 128, baseType: !7, size: 32, offset: 288)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1773, file: !1774, line: 129, baseType: !1787, size: 64, offset: 320)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1788, line: 26, baseType: !1789)
!1788 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1788, line: 24, size: 64, elements: !1790)
!1790 = !{!1791}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1789, file: !1788, line: 25, baseType: !1792, size: 64)
!1792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !490, size: 64, elements: !1793)
!1793 = !{!1794}
!1794 = !DISubrange(count: 2)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1773, file: !1774, line: 130, baseType: !1787, size: 64, offset: 384)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1773, file: !1774, line: 131, baseType: !1787, size: 64, offset: 448)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1773, file: !1774, line: 132, baseType: !1787, size: 64, offset: 512)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1773, file: !1774, line: 133, baseType: !1787, size: 64, offset: 576)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1773, file: !1774, line: 135, baseType: !421, size: 8, offset: 640)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1773, file: !1774, line: 137, baseType: !1801, size: 64, offset: 704)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1803, line: 189, size: 1664, elements: !1804)
!1803 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1804 = !{!1805, !1806, !1809, !1814, !1815, !1818, !1819, !1824, !1825, !1826, !1827, !1829, !1830, !1831, !1832, !1833, !1869, !1890}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1802, file: !1803, line: 190, baseType: !514, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1802, file: !1803, line: 191, baseType: !1807, size: 32, offset: 32)
!1807 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1803, line: 28, baseType: !1808)
!1808 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !367, line: 98, baseType: !369)
!1809 = !DIDerivedType(tag: DW_TAG_member, scope: !1802, file: !1803, line: 192, baseType: !1810, size: 192, offset: 64)
!1810 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1802, file: !1803, line: 192, size: 192, elements: !1811)
!1811 = !{!1812, !1813}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1810, file: !1803, line: 193, baseType: !530, size: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1810, file: !1803, line: 194, baseType: !1072, size: 192, align: 64)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1802, file: !1803, line: 199, baseType: !1079, size: 256, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1802, file: !1803, line: 200, baseType: !1816, size: 64, offset: 512)
!1816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1817 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1803, line: 200, flags: DIFlagFwdDecl)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1802, file: !1803, line: 201, baseType: !368, size: 64, offset: 576)
!1819 = !DIDerivedType(tag: DW_TAG_member, scope: !1802, file: !1803, line: 202, baseType: !1820, size: 64, offset: 640)
!1820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1802, file: !1803, line: 202, size: 64, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1820, file: !1803, line: 203, baseType: !855, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1820, file: !1803, line: 204, baseType: !855, size: 64)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1802, file: !1803, line: 206, baseType: !855, size: 64, offset: 704)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1802, file: !1803, line: 207, baseType: !754, size: 32, offset: 768)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1802, file: !1803, line: 208, baseType: !762, size: 32, offset: 800)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1802, file: !1803, line: 209, baseType: !1828, size: 32, offset: 832)
!1828 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1803, line: 31, baseType: !875)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1802, file: !1803, line: 210, baseType: !416, size: 16, offset: 864)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1802, file: !1803, line: 211, baseType: !416, size: 16, offset: 880)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1802, file: !1803, line: 215, baseType: !1435, size: 16, offset: 896)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1802, file: !1803, line: 222, baseType: !648, size: 64, offset: 960)
!1833 = !DIDerivedType(tag: DW_TAG_member, scope: !1802, file: !1803, line: 239, baseType: !1834, size: 320, offset: 1024)
!1834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1802, file: !1803, line: 239, size: 320, elements: !1835)
!1835 = !{!1836, !1861}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1834, file: !1803, line: 240, baseType: !1837, size: 320)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1803, line: 108, size: 320, elements: !1838)
!1838 = !{!1839, !1840, !1850, !1853, !1860}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1837, file: !1803, line: 110, baseType: !648, size: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, scope: !1837, file: !1803, line: 111, baseType: !1841, size: 64, offset: 64)
!1841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1837, file: !1803, line: 111, size: 64, elements: !1842)
!1842 = !{!1843, !1849}
!1843 = !DIDerivedType(tag: DW_TAG_member, scope: !1841, file: !1803, line: 112, baseType: !1844, size: 64)
!1844 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1841, file: !1803, line: 112, size: 64, elements: !1845)
!1845 = !{!1846, !1847}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1844, file: !1803, line: 114, baseType: !414, size: 16)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1844, file: !1803, line: 115, baseType: !1848, size: 48, offset: 16)
!1848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 48, elements: !539)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1841, file: !1803, line: 121, baseType: !648, size: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1837, file: !1803, line: 123, baseType: !1851, size: 64, offset: 128)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1803, line: 96, flags: DIFlagFwdDecl)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1837, file: !1803, line: 124, baseType: !1854, size: 64, offset: 192)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1803, line: 102, size: 192, elements: !1856)
!1856 = !{!1857, !1858, !1859}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1855, file: !1803, line: 103, baseType: !689, size: 128, align: 64)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1855, file: !1803, line: 104, baseType: !514, size: 32, offset: 128)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1855, file: !1803, line: 105, baseType: !806, size: 8, offset: 160)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1837, file: !1803, line: 125, baseType: !387, size: 64, offset: 256)
!1861 = !DIDerivedType(tag: DW_TAG_member, scope: !1834, file: !1803, line: 241, baseType: !1862, size: 320)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1834, file: !1803, line: 241, size: 320, elements: !1863)
!1863 = !{!1864, !1865, !1866, !1867, !1868}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1862, file: !1803, line: 242, baseType: !648, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1862, file: !1803, line: 243, baseType: !648, size: 64, offset: 64)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1862, file: !1803, line: 244, baseType: !1851, size: 64, offset: 128)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1862, file: !1803, line: 245, baseType: !1854, size: 64, offset: 192)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1862, file: !1803, line: 246, baseType: !377, size: 64, offset: 256)
!1869 = !DIDerivedType(tag: DW_TAG_member, scope: !1802, file: !1803, line: 254, baseType: !1870, size: 256, offset: 1344)
!1870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1802, file: !1803, line: 254, size: 256, elements: !1871)
!1871 = !{!1872, !1878}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1870, file: !1803, line: 255, baseType: !1873, size: 256)
!1873 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1803, line: 128, size: 256, elements: !1874)
!1874 = !{!1875, !1876}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1873, file: !1803, line: 129, baseType: !368, size: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1873, file: !1803, line: 130, baseType: !1877, size: 256)
!1877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !368, size: 256, elements: !1385)
!1878 = !DIDerivedType(tag: DW_TAG_member, scope: !1870, file: !1803, line: 256, baseType: !1879, size: 256)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1870, file: !1803, line: 256, size: 256, elements: !1880)
!1880 = !{!1881, !1882}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1879, file: !1803, line: 258, baseType: !530, size: 128)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1879, file: !1803, line: 259, baseType: !1883, size: 128, offset: 128)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1884, line: 22, size: 128, elements: !1885)
!1884 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1885 = !{!1886, !1889}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1883, file: !1884, line: 23, baseType: !1887, size: 64)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1884, line: 23, flags: DIFlagFwdDecl)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1883, file: !1884, line: 24, baseType: !648, size: 64, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1802, file: !1803, line: 274, baseType: !1891, size: 64, offset: 1600)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1803, line: 170, size: 192, elements: !1893)
!1893 = !{!1894, !1903, !1904}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1892, file: !1803, line: 171, baseType: !1895, size: 64)
!1895 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1803, line: 165, baseType: !1896)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!96, !1801, !1899, !1901, !1801}
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1852)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1873)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1892, file: !1803, line: 172, baseType: !1801, size: 64, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1892, file: !1803, line: 173, baseType: !1851, size: 64, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1773, file: !1774, line: 138, baseType: !1801, size: 64, offset: 768)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1773, file: !1774, line: 139, baseType: !1801, size: 64, offset: 832)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1773, file: !1774, line: 140, baseType: !1801, size: 64, offset: 896)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1773, file: !1774, line: 145, baseType: !1909, size: 64, offset: 960)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1911, line: 13, size: 896, elements: !1912)
!1911 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1912 = !{!1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1910, file: !1911, line: 14, baseType: !514, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1910, file: !1911, line: 15, baseType: !519, size: 32, offset: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1910, file: !1911, line: 16, baseType: !519, size: 32, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1910, file: !1911, line: 21, baseType: !1083, size: 64, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1910, file: !1911, line: 27, baseType: !648, size: 64, offset: 192)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1910, file: !1911, line: 28, baseType: !648, size: 64, offset: 256)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1910, file: !1911, line: 29, baseType: !1083, size: 64, offset: 320)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1910, file: !1911, line: 32, baseType: !955, size: 128, offset: 384)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1910, file: !1911, line: 33, baseType: !754, size: 32, offset: 512)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1910, file: !1911, line: 37, baseType: !1083, size: 64, offset: 576)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1910, file: !1911, line: 44, baseType: !1924, size: 256, offset: 640)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1925, line: 15, size: 256, elements: !1926)
!1925 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1926 = !{!1927, !1928, !1929, !1930, !1931, !1932, !1933}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1924, file: !1925, line: 16, baseType: !1092)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1924, file: !1925, line: 18, baseType: !96, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1924, file: !1925, line: 19, baseType: !96, size: 32, offset: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1924, file: !1925, line: 20, baseType: !96, size: 32, offset: 64)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1924, file: !1925, line: 21, baseType: !96, size: 32, offset: 96)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1924, file: !1925, line: 22, baseType: !648, size: 64, offset: 128)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1924, file: !1925, line: 23, baseType: !648, size: 64, offset: 192)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1773, file: !1774, line: 146, baseType: !1935, size: 64, offset: 1024)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1936 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !755, line: 18, flags: DIFlagFwdDecl)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1773, file: !1774, line: 147, baseType: !1938, size: 64, offset: 1088)
!1938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1939, size: 64)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1774, line: 25, size: 64, elements: !1940)
!1940 = !{!1941, !1942, !1943}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1939, file: !1774, line: 26, baseType: !519, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1939, file: !1774, line: 27, baseType: !96, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1939, file: !1774, line: 28, baseType: !1944, offset: 64)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, elements: !1945)
!1945 = !{!1946}
!1946 = !DISubrange(count: 0)
!1947 = !DIDerivedType(tag: DW_TAG_member, scope: !1773, file: !1774, line: 149, baseType: !1948, size: 128, offset: 1152)
!1948 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1773, file: !1774, line: 149, size: 128, elements: !1949)
!1949 = !{!1950, !1951}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1948, file: !1774, line: 150, baseType: !96, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1948, file: !1774, line: 151, baseType: !689, size: 128, align: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1447, file: !1448, line: 926, baseType: !1771, size: 64, offset: 8576)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1447, file: !1448, line: 929, baseType: !1771, size: 64, offset: 8640)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1447, file: !1448, line: 933, baseType: !1801, size: 64, offset: 8704)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1447, file: !1448, line: 943, baseType: !1956, size: 128, offset: 8768)
!1956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 128, elements: !1957)
!1957 = !{!1958}
!1958 = !DISubrange(count: 16)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1447, file: !1448, line: 945, baseType: !1960, size: 64, offset: 8896)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1448, line: 49, flags: DIFlagFwdDecl)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1447, file: !1448, line: 956, baseType: !1963, size: 64, offset: 8960)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1448, line: 45, flags: DIFlagFwdDecl)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1447, file: !1448, line: 959, baseType: !1966, size: 64, offset: 9024)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1448, line: 959, flags: DIFlagFwdDecl)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1447, file: !1448, line: 962, baseType: !1969, size: 64, offset: 9088)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1448, line: 66, flags: DIFlagFwdDecl)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1447, file: !1448, line: 966, baseType: !1972, size: 64, offset: 9152)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 64)
!1973 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1974, line: 35, flags: DIFlagFwdDecl)
!1974 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1447, file: !1448, line: 969, baseType: !1976, size: 64, offset: 9216)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1978, line: 82, size: 7296, elements: !1979)
!1978 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1979 = !{!1980, !1981, !1982, !1983, !1984, !1985, !1986, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2015, !2024, !2025, !2027, !2028, !2029, !2032, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2062, !2063, !2070, !2071, !2072, !2073, !2074, !2075}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1977, file: !1978, line: 83, baseType: !514, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1977, file: !1978, line: 84, baseType: !519, size: 32, offset: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1977, file: !1978, line: 85, baseType: !96, size: 32, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1977, file: !1978, line: 86, baseType: !530, size: 128, offset: 128)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1977, file: !1978, line: 88, baseType: !1705, size: 128, offset: 256)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1977, file: !1978, line: 91, baseType: !1446, size: 64, offset: 384)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1977, file: !1978, line: 94, baseType: !1987, size: 192, offset: 448)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1988, line: 30, size: 192, elements: !1989)
!1988 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1989 = !{!1990, !1991}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1987, file: !1988, line: 31, baseType: !530, size: 128)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1987, file: !1988, line: 32, baseType: !1992, size: 64, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1993, line: 25, baseType: !1994)
!1993 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1993, line: 23, size: 64, elements: !1995)
!1995 = !{!1996}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1994, file: !1993, line: 24, baseType: !1591, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1977, file: !1978, line: 97, baseType: !951, size: 64, offset: 640)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1977, file: !1978, line: 100, baseType: !96, size: 32, offset: 704)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1977, file: !1978, line: 106, baseType: !96, size: 32, offset: 736)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1977, file: !1978, line: 107, baseType: !1446, size: 64, offset: 768)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1977, file: !1978, line: 110, baseType: !96, size: 32, offset: 832)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1977, file: !1978, line: 111, baseType: !7, size: 32, offset: 864)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1977, file: !1978, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1977, file: !1978, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1977, file: !1978, line: 128, baseType: !96, size: 32, offset: 928)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1977, file: !1978, line: 129, baseType: !530, size: 128, offset: 960)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1977, file: !1978, line: 132, baseType: !1517, size: 512, offset: 1088)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1977, file: !1978, line: 133, baseType: !1525, size: 64, offset: 1600)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1977, file: !1978, line: 140, baseType: !2010, size: 256, offset: 1664)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2011, size: 256, elements: !1793)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1978, line: 38, size: 128, elements: !2012)
!2012 = !{!2013, !2014}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2011, file: !1978, line: 39, baseType: !741, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2011, file: !1978, line: 40, baseType: !741, size: 64, offset: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1977, file: !1978, line: 146, baseType: !2016, size: 192, offset: 1920)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1978, line: 66, size: 192, elements: !2017)
!2017 = !{!2018}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2016, file: !1978, line: 67, baseType: !2019, size: 192)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1978, line: 47, size: 192, elements: !2020)
!2020 = !{!2021, !2022, !2023}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2019, file: !1978, line: 48, baseType: !1085, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2019, file: !1978, line: 49, baseType: !1085, size: 64, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2019, file: !1978, line: 50, baseType: !1085, size: 64, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1977, file: !1978, line: 150, baseType: !1754, size: 640, offset: 2112)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1977, file: !1978, line: 153, baseType: !2026, size: 256, offset: 2752)
!2026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1695, size: 256, elements: !1385)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1977, file: !1978, line: 159, baseType: !1695, size: 64, offset: 3008)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1977, file: !1978, line: 162, baseType: !96, size: 32, offset: 3072)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1977, file: !1978, line: 164, baseType: !2030, size: 64, offset: 3136)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1978, line: 164, flags: DIFlagFwdDecl)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1977, file: !1978, line: 175, baseType: !2033, size: 32, offset: 3200)
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !712, line: 805, baseType: !2034)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !712, line: 798, size: 32, elements: !2035)
!2035 = !{!2036, !2037}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2034, file: !712, line: 803, baseType: !711, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2034, file: !712, line: 804, baseType: !560, offset: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1977, file: !1978, line: 176, baseType: !741, size: 64, offset: 3264)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1977, file: !1978, line: 176, baseType: !741, size: 64, offset: 3328)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1977, file: !1978, line: 176, baseType: !741, size: 64, offset: 3392)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1977, file: !1978, line: 176, baseType: !741, size: 64, offset: 3456)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1977, file: !1978, line: 177, baseType: !741, size: 64, offset: 3520)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1977, file: !1978, line: 178, baseType: !741, size: 64, offset: 3584)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1977, file: !1978, line: 179, baseType: !1742, size: 128, offset: 3648)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1977, file: !1978, line: 180, baseType: !648, size: 64, offset: 3776)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1977, file: !1978, line: 180, baseType: !648, size: 64, offset: 3840)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1977, file: !1978, line: 180, baseType: !648, size: 64, offset: 3904)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1977, file: !1978, line: 180, baseType: !648, size: 64, offset: 3968)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1977, file: !1978, line: 181, baseType: !648, size: 64, offset: 4032)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1977, file: !1978, line: 181, baseType: !648, size: 64, offset: 4096)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1977, file: !1978, line: 181, baseType: !648, size: 64, offset: 4160)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1977, file: !1978, line: 181, baseType: !648, size: 64, offset: 4224)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1977, file: !1978, line: 182, baseType: !648, size: 64, offset: 4288)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1977, file: !1978, line: 182, baseType: !648, size: 64, offset: 4352)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1977, file: !1978, line: 182, baseType: !648, size: 64, offset: 4416)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1977, file: !1978, line: 182, baseType: !648, size: 64, offset: 4480)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1977, file: !1978, line: 183, baseType: !648, size: 64, offset: 4544)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1977, file: !1978, line: 183, baseType: !648, size: 64, offset: 4608)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1977, file: !1978, line: 184, baseType: !2060, offset: 4672)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2061, line: 12, elements: !574)
!2061 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1977, file: !1978, line: 192, baseType: !743, size: 64, offset: 4672)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1977, file: !1978, line: 203, baseType: !2064, size: 2048, offset: 4736)
!2064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2065, size: 2048, elements: !1957)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2066, line: 43, size: 128, elements: !2067)
!2066 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2067 = !{!2068, !2069}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2065, file: !2066, line: 44, baseType: !647, size: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2065, file: !2066, line: 45, baseType: !647, size: 64, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1977, file: !1978, line: 220, baseType: !806, size: 8, offset: 6784)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1977, file: !1978, line: 221, baseType: !1435, size: 16, offset: 6800)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1977, file: !1978, line: 222, baseType: !1435, size: 16, offset: 6816)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1977, file: !1978, line: 224, baseType: !1284, size: 64, offset: 6848)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1977, file: !1978, line: 227, baseType: !1403, size: 192, offset: 6912)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1977, file: !1978, line: 233, baseType: !1403, size: 192, offset: 7104)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1447, file: !1448, line: 970, baseType: !2077, size: 64, offset: 9280)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1978, line: 20, size: 16576, elements: !2079)
!2079 = !{!2080, !2081, !2082, !2083}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2078, file: !1978, line: 21, baseType: !560)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2078, file: !1978, line: 22, baseType: !514, size: 32)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2078, file: !1978, line: 23, baseType: !1705, size: 128, offset: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2078, file: !1978, line: 24, baseType: !2084, size: 16384, offset: 192)
!2084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2085, size: 16384, elements: !605)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1988, line: 49, size: 256, elements: !2086)
!2086 = !{!2087}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2085, file: !1988, line: 50, baseType: !2088, size: 256)
!2088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1988, line: 35, size: 256, elements: !2089)
!2089 = !{!2090, !2097, !2098, !2104}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2088, file: !1988, line: 37, baseType: !2091, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2092, line: 19, baseType: !2093)
!2092 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2092, line: 18, baseType: !2095)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{null, !96}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2088, file: !1988, line: 38, baseType: !648, size: 64, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2088, file: !1988, line: 44, baseType: !2099, size: 64, offset: 128)
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2092, line: 22, baseType: !2100)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2092, line: 21, baseType: !2102)
!2102 = !DISubroutineType(types: !2103)
!2103 = !{null}
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2088, file: !1988, line: 46, baseType: !1992, size: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1447, file: !1448, line: 971, baseType: !1992, size: 64, offset: 9344)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1447, file: !1448, line: 972, baseType: !1992, size: 64, offset: 9408)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1447, file: !1448, line: 974, baseType: !1992, size: 64, offset: 9472)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1447, file: !1448, line: 975, baseType: !1987, size: 192, offset: 9536)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1447, file: !1448, line: 976, baseType: !648, size: 64, offset: 9728)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1447, file: !1448, line: 977, baseType: !645, size: 64, offset: 9792)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1447, file: !1448, line: 978, baseType: !7, size: 32, offset: 9856)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1447, file: !1448, line: 980, baseType: !692, size: 64, offset: 9920)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1447, file: !1448, line: 989, baseType: !2114, size: 128, offset: 9984)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2115, line: 35, size: 128, elements: !2116)
!2115 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2116 = !{!2117, !2118, !2119}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2114, file: !2115, line: 36, baseType: !96, size: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2114, file: !2115, line: 37, baseType: !519, size: 32, offset: 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2114, file: !2115, line: 38, baseType: !2120, size: 64, offset: 64)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2115, line: 23, flags: DIFlagFwdDecl)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1447, file: !1448, line: 992, baseType: !741, size: 64, offset: 10112)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1447, file: !1448, line: 993, baseType: !741, size: 64, offset: 10176)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1447, file: !1448, line: 996, baseType: !560, offset: 10240)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1447, file: !1448, line: 999, baseType: !1092, offset: 10240)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1447, file: !1448, line: 1001, baseType: !2127, size: 64, offset: 10240)
!2127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1448, line: 636, size: 64, elements: !2128)
!2128 = !{!2129}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2127, file: !1448, line: 637, baseType: !2130, size: 64)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1447, file: !1448, line: 1005, baseType: !1064, size: 128, offset: 10304)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1447, file: !1448, line: 1007, baseType: !1446, size: 64, offset: 10432)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1447, file: !1448, line: 1009, baseType: !2134, size: 64, offset: 10496)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!2135 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1448, line: 1009, flags: DIFlagFwdDecl)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1447, file: !1448, line: 1043, baseType: !368, size: 64, offset: 10560)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1447, file: !1448, line: 1046, baseType: !2138, size: 64, offset: 10624)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 64)
!2139 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1448, line: 41, flags: DIFlagFwdDecl)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1447, file: !1448, line: 1050, baseType: !2141, size: 64, offset: 10688)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1448, line: 42, flags: DIFlagFwdDecl)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1447, file: !1448, line: 1054, baseType: !2144, size: 64, offset: 10752)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1448, line: 55, flags: DIFlagFwdDecl)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1447, file: !1448, line: 1056, baseType: !2147, size: 64, offset: 10816)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1448, line: 40, flags: DIFlagFwdDecl)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1447, file: !1448, line: 1058, baseType: !2150, size: 64, offset: 10880)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2152, line: 99, size: 704, elements: !2153)
!2152 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2153 = !{!2154, !2155, !2156, !2157, !2158, !2159, !2160, !2179, !2180}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2151, file: !2152, line: 100, baseType: !1083, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2151, file: !2152, line: 101, baseType: !519, size: 32, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2151, file: !2152, line: 102, baseType: !519, size: 32, offset: 96)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2151, file: !2152, line: 105, baseType: !560, offset: 128)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2151, file: !2152, line: 107, baseType: !416, size: 16, offset: 128)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2151, file: !2152, line: 109, baseType: !1055, size: 128, offset: 192)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2151, file: !2152, line: 110, baseType: !2161, size: 64, offset: 320)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2152, line: 73, size: 448, elements: !2163)
!2163 = !{!2164, !2167, !2168, !2173, !2178}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2162, file: !2152, line: 74, baseType: !2165, size: 64)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2152, line: 74, flags: DIFlagFwdDecl)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2162, file: !2152, line: 75, baseType: !2150, size: 64, offset: 64)
!2168 = !DIDerivedType(tag: DW_TAG_member, scope: !2162, file: !2152, line: 83, baseType: !2169, size: 128, offset: 128)
!2169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2162, file: !2152, line: 83, size: 128, elements: !2170)
!2170 = !{!2171, !2172}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2169, file: !2152, line: 84, baseType: !530, size: 128)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2169, file: !2152, line: 85, baseType: !1245, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_member, scope: !2162, file: !2152, line: 87, baseType: !2174, size: 128, offset: 256)
!2174 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2162, file: !2152, line: 87, size: 128, elements: !2175)
!2175 = !{!2176, !2177}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2174, file: !2152, line: 88, baseType: !955, size: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2174, file: !2152, line: 89, baseType: !689, size: 128, align: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2162, file: !2152, line: 92, baseType: !7, size: 32, offset: 384)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2151, file: !2152, line: 111, baseType: !951, size: 64, offset: 384)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2151, file: !2152, line: 113, baseType: !2181, size: 256, offset: 448)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2182, line: 102, size: 256, elements: !2183)
!2182 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2183 = !{!2184, !2185, !2186}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2181, file: !2182, line: 103, baseType: !1083, size: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2181, file: !2182, line: 104, baseType: !530, size: 128, offset: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2181, file: !2182, line: 105, baseType: !2187, size: 64, offset: 192)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2182, line: 21, baseType: !2188)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DISubroutineType(types: !2190)
!2190 = !{null, !2191}
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1447, file: !1448, line: 1061, baseType: !2193, size: 64, offset: 10944)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1448, line: 43, flags: DIFlagFwdDecl)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1447, file: !1448, line: 1064, baseType: !648, size: 64, offset: 11008)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1447, file: !1448, line: 1065, baseType: !2197, size: 64, offset: 11072)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1988, line: 14, baseType: !2199)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1988, line: 12, size: 384, elements: !2200)
!2200 = !{!2201}
!2201 = !DIDerivedType(tag: DW_TAG_member, scope: !2199, file: !1988, line: 13, baseType: !2202, size: 384)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2199, file: !1988, line: 13, size: 384, elements: !2203)
!2203 = !{!2204, !2205, !2206, !2207}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2202, file: !1988, line: 13, baseType: !96, size: 32)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2202, file: !1988, line: 13, baseType: !96, size: 32, offset: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2202, file: !1988, line: 13, baseType: !96, size: 32, offset: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2202, file: !1988, line: 13, baseType: !2208, size: 256, offset: 128)
!2208 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2209, line: 32, size: 256, elements: !2210)
!2209 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2210 = !{!2211, !2216, !2229, !2235, !2244, !2264, !2269}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2208, file: !2209, line: 37, baseType: !2212, size: 64)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2208, file: !2209, line: 34, size: 64, elements: !2213)
!2213 = !{!2214, !2215}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2212, file: !2209, line: 35, baseType: !1684, size: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2212, file: !2209, line: 36, baseType: !760, size: 32, offset: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2208, file: !2209, line: 45, baseType: !2217, size: 192)
!2217 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2208, file: !2209, line: 40, size: 192, elements: !2218)
!2218 = !{!2219, !2221, !2222, !2228}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2217, file: !2209, line: 41, baseType: !2220, size: 32)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !633, line: 95, baseType: !96)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2217, file: !2209, line: 42, baseType: !96, size: 32, offset: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2217, file: !2209, line: 43, baseType: !2223, size: 64, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2209, line: 11, baseType: !2224)
!2224 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2209, line: 8, size: 64, elements: !2225)
!2225 = !{!2226, !2227}
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2224, file: !2209, line: 9, baseType: !96, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2224, file: !2209, line: 10, baseType: !368, size: 64)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2217, file: !2209, line: 44, baseType: !96, size: 32, offset: 128)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2208, file: !2209, line: 52, baseType: !2230, size: 128)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2208, file: !2209, line: 48, size: 128, elements: !2231)
!2231 = !{!2232, !2233, !2234}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2230, file: !2209, line: 49, baseType: !1684, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2230, file: !2209, line: 50, baseType: !760, size: 32, offset: 32)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2230, file: !2209, line: 51, baseType: !2223, size: 64, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2208, file: !2209, line: 61, baseType: !2236, size: 256)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2208, file: !2209, line: 55, size: 256, elements: !2237)
!2237 = !{!2238, !2239, !2240, !2241, !2243}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2236, file: !2209, line: 56, baseType: !1684, size: 32)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2236, file: !2209, line: 57, baseType: !760, size: 32, offset: 32)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2236, file: !2209, line: 58, baseType: !96, size: 32, offset: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2236, file: !2209, line: 59, baseType: !2242, size: 64, offset: 128)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !633, line: 94, baseType: !634)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2236, file: !2209, line: 60, baseType: !2242, size: 64, offset: 192)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2208, file: !2209, line: 95, baseType: !2245, size: 256)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2208, file: !2209, line: 64, size: 256, elements: !2246)
!2246 = !{!2247, !2248}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2245, file: !2209, line: 65, baseType: !368, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, scope: !2245, file: !2209, line: 77, baseType: !2249, size: 192, offset: 64)
!2249 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2245, file: !2209, line: 77, size: 192, elements: !2250)
!2250 = !{!2251, !2252, !2259}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2249, file: !2209, line: 82, baseType: !1435, size: 16)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2249, file: !2209, line: 88, baseType: !2253, size: 192)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2249, file: !2209, line: 84, size: 192, elements: !2254)
!2254 = !{!2255, !2257, !2258}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2253, file: !2209, line: 85, baseType: !2256, size: 64)
!2256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 64, elements: !500)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2253, file: !2209, line: 86, baseType: !368, size: 64, offset: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2253, file: !2209, line: 87, baseType: !368, size: 64, offset: 128)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2249, file: !2209, line: 93, baseType: !2260, size: 96)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2249, file: !2209, line: 90, size: 96, elements: !2261)
!2261 = !{!2262, !2263}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2260, file: !2209, line: 91, baseType: !2256, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2260, file: !2209, line: 92, baseType: !490, size: 32, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2208, file: !2209, line: 101, baseType: !2265, size: 128)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2208, file: !2209, line: 98, size: 128, elements: !2266)
!2266 = !{!2267, !2268}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2265, file: !2209, line: 99, baseType: !376, size: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2265, file: !2209, line: 100, baseType: !96, size: 32, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2208, file: !2209, line: 108, baseType: !2270, size: 128)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2208, file: !2209, line: 104, size: 128, elements: !2271)
!2271 = !{!2272, !2273, !2274}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2270, file: !2209, line: 105, baseType: !368, size: 64)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2270, file: !2209, line: 106, baseType: !96, size: 32, offset: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2270, file: !2209, line: 107, baseType: !7, size: 32, offset: 96)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1447, file: !1448, line: 1067, baseType: !2060, offset: 11136)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1447, file: !1448, line: 1099, baseType: !2277, size: 64, offset: 11136)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2278, size: 64)
!2278 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1448, line: 56, flags: DIFlagFwdDecl)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1447, file: !1448, line: 1103, baseType: !530, size: 128, offset: 11200)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1447, file: !1448, line: 1104, baseType: !2281, size: 64, offset: 11328)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1448, line: 46, flags: DIFlagFwdDecl)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1447, file: !1448, line: 1105, baseType: !1403, size: 192, offset: 11392)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1447, file: !1448, line: 1106, baseType: !7, size: 32, offset: 11584)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1447, file: !1448, line: 1109, baseType: !2286, size: 128, offset: 11648)
!2286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2287, size: 128, elements: !1793)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!2288 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1448, line: 51, flags: DIFlagFwdDecl)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1447, file: !1448, line: 1110, baseType: !1403, size: 192, offset: 11776)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1447, file: !1448, line: 1111, baseType: !530, size: 128, offset: 11968)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1447, file: !1448, line: 1173, baseType: !2292, size: 64, offset: 12096)
!2292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2293, size: 64)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2294, line: 62, size: 256, align: 256, elements: !2295)
!2294 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2295 = !{!2296, !2297, !2298, !2303}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2293, file: !2294, line: 75, baseType: !490, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2293, file: !2294, line: 90, baseType: !490, size: 32, offset: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2293, file: !2294, line: 124, baseType: !2299, size: 64, offset: 64)
!2299 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2293, file: !2294, line: 109, size: 64, elements: !2300)
!2300 = !{!2301, !2302}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2299, file: !2294, line: 110, baseType: !742, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2299, file: !2294, line: 112, baseType: !742, size: 64)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2293, file: !2294, line: 144, baseType: !490, size: 32, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1447, file: !1448, line: 1174, baseType: !489, size: 32, offset: 12160)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1447, file: !1448, line: 1179, baseType: !648, size: 64, offset: 12224)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1447, file: !1448, line: 1182, baseType: !2307, size: 128, offset: 12288)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1381, line: 76, size: 128, elements: !2308)
!2308 = !{!2309, !2314, !2315}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2307, file: !1381, line: 85, baseType: !2310, size: 64)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2311, line: 7, size: 64, elements: !2312)
!2311 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2312 = !{!2313}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2310, file: !2311, line: 12, baseType: !1588, size: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2307, file: !1381, line: 88, baseType: !806, size: 8, offset: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2307, file: !1381, line: 95, baseType: !806, size: 8, offset: 72)
!2316 = !DIDerivedType(tag: DW_TAG_member, scope: !1447, file: !1448, line: 1184, baseType: !2317, size: 128, offset: 12416)
!2317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1447, file: !1448, line: 1184, size: 128, elements: !2318)
!2318 = !{!2319, !2320}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2317, file: !1448, line: 1185, baseType: !514, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2317, file: !1448, line: 1186, baseType: !689, size: 128, align: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1447, file: !1448, line: 1190, baseType: !2322, size: 64, offset: 12544)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!2323 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1448, line: 53, flags: DIFlagFwdDecl)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1447, file: !1448, line: 1192, baseType: !2325, size: 128, offset: 12608)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1381, line: 64, size: 128, elements: !2326)
!2326 = !{!2327, !2328, !2329}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2325, file: !1381, line: 65, baseType: !1037, size: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2325, file: !1381, line: 67, baseType: !490, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2325, file: !1381, line: 68, baseType: !490, size: 32, offset: 96)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1447, file: !1448, line: 1206, baseType: !96, size: 32, offset: 12736)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1447, file: !1448, line: 1207, baseType: !96, size: 32, offset: 12768)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1447, file: !1448, line: 1209, baseType: !648, size: 64, offset: 12800)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1447, file: !1448, line: 1219, baseType: !741, size: 64, offset: 12864)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1447, file: !1448, line: 1220, baseType: !741, size: 64, offset: 12928)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1447, file: !1448, line: 1317, baseType: !96, size: 32, offset: 12992)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1447, file: !1448, line: 1319, baseType: !1446, size: 64, offset: 13056)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1447, file: !1448, line: 1322, baseType: !2338, size: 64, offset: 13120)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 64)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2340, line: 56, size: 512, elements: !2341)
!2340 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2341 = !{!2342, !2343, !2344, !2345, !2346, !2347, !2348, !2350}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2339, file: !2340, line: 57, baseType: !2338, size: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2339, file: !2340, line: 58, baseType: !368, size: 64, offset: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2339, file: !2340, line: 59, baseType: !648, size: 64, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2339, file: !2340, line: 60, baseType: !648, size: 64, offset: 192)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2339, file: !2340, line: 61, baseType: !1132, size: 64, offset: 256)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2339, file: !2340, line: 62, baseType: !7, size: 32, offset: 320)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2339, file: !2340, line: 63, baseType: !2349, size: 64, offset: 384)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !367, line: 153, baseType: !741)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2339, file: !2340, line: 64, baseType: !2351, size: 64, offset: 448)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1447, file: !1448, line: 1326, baseType: !514, size: 32, offset: 13184)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1447, file: !1448, line: 1342, baseType: !368, size: 64, offset: 13248)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1447, file: !1448, line: 1343, baseType: !742, size: 64, offset: 13312)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1447, file: !1448, line: 1344, baseType: !741, size: 64, offset: 13376)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1447, file: !1448, line: 1345, baseType: !742, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1447, file: !1448, line: 1346, baseType: !742, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1447, file: !1448, line: 1347, baseType: !742, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1447, file: !1448, line: 1348, baseType: !689, size: 128, align: 64, offset: 13504)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1447, file: !1448, line: 1358, baseType: !2362, size: 34816, offset: 13824)
!2362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2363, line: 485, size: 34816, elements: !2364)
!2363 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2364 = !{!2365, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2394, !2395, !2396, !2397, !2398, !2399, !2402, !2403, !2404}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2362, file: !2363, line: 487, baseType: !2366, size: 192)
!2366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2367, size: 192, elements: !601)
!2367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2368, line: 16, size: 64, elements: !2369)
!2368 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2369 = !{!2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2367, file: !2368, line: 17, baseType: !414, size: 16)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2367, file: !2368, line: 18, baseType: !414, size: 16, offset: 16)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2367, file: !2368, line: 19, baseType: !414, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2367, file: !2368, line: 19, baseType: !414, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2367, file: !2368, line: 19, baseType: !414, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2367, file: !2368, line: 19, baseType: !414, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2367, file: !2368, line: 19, baseType: !414, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2367, file: !2368, line: 20, baseType: !414, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2367, file: !2368, line: 20, baseType: !414, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2367, file: !2368, line: 20, baseType: !414, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2367, file: !2368, line: 20, baseType: !414, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2367, file: !2368, line: 20, baseType: !414, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2367, file: !2368, line: 20, baseType: !414, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2362, file: !2363, line: 491, baseType: !648, size: 64, offset: 192)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2362, file: !2363, line: 495, baseType: !416, size: 16, offset: 256)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2362, file: !2363, line: 496, baseType: !416, size: 16, offset: 272)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2362, file: !2363, line: 497, baseType: !416, size: 16, offset: 288)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2362, file: !2363, line: 498, baseType: !416, size: 16, offset: 304)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2362, file: !2363, line: 502, baseType: !648, size: 64, offset: 320)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2362, file: !2363, line: 503, baseType: !648, size: 64, offset: 384)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2362, file: !2363, line: 514, baseType: !2391, size: 256, offset: 448)
!2391 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2392, size: 256, elements: !1385)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 64)
!2393 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2363, line: 483, flags: DIFlagFwdDecl)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2362, file: !2363, line: 516, baseType: !648, size: 64, offset: 704)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2362, file: !2363, line: 518, baseType: !648, size: 64, offset: 768)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2362, file: !2363, line: 520, baseType: !648, size: 64, offset: 832)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2362, file: !2363, line: 521, baseType: !648, size: 64, offset: 896)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2362, file: !2363, line: 522, baseType: !648, size: 64, offset: 960)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2362, file: !2363, line: 528, baseType: !2400, size: 64, offset: 1024)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2363, line: 10, flags: DIFlagFwdDecl)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2362, file: !2363, line: 535, baseType: !648, size: 64, offset: 1088)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2362, file: !2363, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2362, file: !2363, line: 540, baseType: !2405, size: 33280, offset: 1536)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2406, line: 317, size: 33280, elements: !2407)
!2406 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2407 = !{!2408, !2409, !2410}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2405, file: !2406, line: 330, baseType: !7, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2405, file: !2406, line: 337, baseType: !648, size: 64, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2405, file: !2406, line: 348, baseType: !2411, size: 32768, offset: 512)
!2411 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2406, line: 304, size: 32768, elements: !2412)
!2412 = !{!2413, !2426, !2465, !2515, !2528}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2411, file: !2406, line: 305, baseType: !2414, size: 896)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2406, line: 12, size: 896, elements: !2415)
!2415 = !{!2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2425}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2414, file: !2406, line: 13, baseType: !489, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2414, file: !2406, line: 14, baseType: !489, size: 32, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2414, file: !2406, line: 15, baseType: !489, size: 32, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2414, file: !2406, line: 16, baseType: !489, size: 32, offset: 96)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2414, file: !2406, line: 17, baseType: !489, size: 32, offset: 128)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2414, file: !2406, line: 18, baseType: !489, size: 32, offset: 160)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2414, file: !2406, line: 19, baseType: !489, size: 32, offset: 192)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2414, file: !2406, line: 22, baseType: !2424, size: 640, offset: 224)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 640, elements: !472)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2414, file: !2406, line: 25, baseType: !489, size: 32, offset: 864)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2411, file: !2406, line: 306, baseType: !2427, size: 4096, align: 128)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2406, line: 34, size: 4096, align: 128, elements: !2428)
!2428 = !{!2429, !2430, !2431, !2432, !2433, !2448, !2449, !2450, !2454, !2456, !2460}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2427, file: !2406, line: 35, baseType: !414, size: 16)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2427, file: !2406, line: 36, baseType: !414, size: 16, offset: 16)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2427, file: !2406, line: 37, baseType: !414, size: 16, offset: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2427, file: !2406, line: 38, baseType: !414, size: 16, offset: 48)
!2433 = !DIDerivedType(tag: DW_TAG_member, scope: !2427, file: !2406, line: 39, baseType: !2434, size: 128, offset: 64)
!2434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2427, file: !2406, line: 39, size: 128, elements: !2435)
!2435 = !{!2436, !2441}
!2436 = !DIDerivedType(tag: DW_TAG_member, scope: !2434, file: !2406, line: 40, baseType: !2437, size: 128)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2434, file: !2406, line: 40, size: 128, elements: !2438)
!2438 = !{!2439, !2440}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2437, file: !2406, line: 41, baseType: !741, size: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2437, file: !2406, line: 42, baseType: !741, size: 64, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, scope: !2434, file: !2406, line: 44, baseType: !2442, size: 128)
!2442 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2434, file: !2406, line: 44, size: 128, elements: !2443)
!2443 = !{!2444, !2445, !2446, !2447}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2442, file: !2406, line: 45, baseType: !489, size: 32)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2442, file: !2406, line: 46, baseType: !489, size: 32, offset: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2442, file: !2406, line: 47, baseType: !489, size: 32, offset: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2442, file: !2406, line: 48, baseType: !489, size: 32, offset: 96)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2427, file: !2406, line: 51, baseType: !489, size: 32, offset: 192)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2427, file: !2406, line: 52, baseType: !489, size: 32, offset: 224)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2427, file: !2406, line: 55, baseType: !2451, size: 1024, offset: 256)
!2451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 1024, elements: !2452)
!2452 = !{!2453}
!2453 = !DISubrange(count: 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2427, file: !2406, line: 58, baseType: !2455, size: 2048, offset: 1280)
!2455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 2048, elements: !605)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2427, file: !2406, line: 60, baseType: !2457, size: 384, offset: 3328)
!2457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 384, elements: !2458)
!2458 = !{!2459}
!2459 = !DISubrange(count: 12)
!2460 = !DIDerivedType(tag: DW_TAG_member, scope: !2427, file: !2406, line: 62, baseType: !2461, size: 384, offset: 3712)
!2461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2427, file: !2406, line: 62, size: 384, elements: !2462)
!2462 = !{!2463, !2464}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2461, file: !2406, line: 63, baseType: !2457, size: 384)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2461, file: !2406, line: 64, baseType: !2457, size: 384)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2411, file: !2406, line: 307, baseType: !2466, size: 1088)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2406, line: 79, size: 1088, elements: !2467)
!2467 = !{!2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2514}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2466, file: !2406, line: 80, baseType: !489, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2466, file: !2406, line: 81, baseType: !489, size: 32, offset: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2466, file: !2406, line: 82, baseType: !489, size: 32, offset: 64)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2466, file: !2406, line: 83, baseType: !489, size: 32, offset: 96)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2466, file: !2406, line: 84, baseType: !489, size: 32, offset: 128)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2466, file: !2406, line: 85, baseType: !489, size: 32, offset: 160)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2466, file: !2406, line: 86, baseType: !489, size: 32, offset: 192)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2466, file: !2406, line: 88, baseType: !2424, size: 640, offset: 224)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2466, file: !2406, line: 89, baseType: !419, size: 8, offset: 864)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2466, file: !2406, line: 90, baseType: !419, size: 8, offset: 872)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2466, file: !2406, line: 91, baseType: !419, size: 8, offset: 880)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2466, file: !2406, line: 92, baseType: !419, size: 8, offset: 888)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2466, file: !2406, line: 93, baseType: !419, size: 8, offset: 896)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2466, file: !2406, line: 94, baseType: !419, size: 8, offset: 904)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2466, file: !2406, line: 95, baseType: !2483, size: 64, offset: 960)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2484, size: 64)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2485, line: 11, size: 128, elements: !2486)
!2485 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2486 = !{!2487, !2488}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2484, file: !2485, line: 12, baseType: !376, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2484, file: !2485, line: 13, baseType: !2489, size: 64, offset: 64)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2491, line: 56, size: 1344, elements: !2492)
!2491 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2492 = !{!2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2490, file: !2491, line: 61, baseType: !648, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2490, file: !2491, line: 62, baseType: !648, size: 64, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2490, file: !2491, line: 63, baseType: !648, size: 64, offset: 128)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2490, file: !2491, line: 64, baseType: !648, size: 64, offset: 192)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2490, file: !2491, line: 65, baseType: !648, size: 64, offset: 256)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2490, file: !2491, line: 66, baseType: !648, size: 64, offset: 320)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2490, file: !2491, line: 68, baseType: !648, size: 64, offset: 384)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2490, file: !2491, line: 69, baseType: !648, size: 64, offset: 448)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2490, file: !2491, line: 70, baseType: !648, size: 64, offset: 512)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2490, file: !2491, line: 71, baseType: !648, size: 64, offset: 576)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2490, file: !2491, line: 72, baseType: !648, size: 64, offset: 640)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2490, file: !2491, line: 73, baseType: !648, size: 64, offset: 704)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2490, file: !2491, line: 74, baseType: !648, size: 64, offset: 768)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2490, file: !2491, line: 75, baseType: !648, size: 64, offset: 832)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2490, file: !2491, line: 76, baseType: !648, size: 64, offset: 896)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2490, file: !2491, line: 81, baseType: !648, size: 64, offset: 960)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2490, file: !2491, line: 83, baseType: !648, size: 64, offset: 1024)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2490, file: !2491, line: 84, baseType: !648, size: 64, offset: 1088)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2490, file: !2491, line: 85, baseType: !648, size: 64, offset: 1152)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2490, file: !2491, line: 86, baseType: !648, size: 64, offset: 1216)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2490, file: !2491, line: 87, baseType: !648, size: 64, offset: 1280)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2466, file: !2406, line: 96, baseType: !489, size: 32, offset: 1024)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2411, file: !2406, line: 308, baseType: !2516, size: 4608, align: 512)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2406, line: 289, size: 4608, align: 512, elements: !2517)
!2517 = !{!2518, !2519, !2526}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2516, file: !2406, line: 290, baseType: !2427, size: 4096, align: 128)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2516, file: !2406, line: 291, baseType: !2520, size: 512, offset: 4096)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2406, line: 268, size: 512, elements: !2521)
!2521 = !{!2522, !2523, !2524}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2520, file: !2406, line: 269, baseType: !741, size: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2520, file: !2406, line: 270, baseType: !741, size: 64, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2520, file: !2406, line: 271, baseType: !2525, size: 384, offset: 128)
!2525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !741, size: 384, elements: !539)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2516, file: !2406, line: 292, baseType: !2527, offset: 4608)
!2527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, elements: !1945)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2411, file: !2406, line: 309, baseType: !2529, size: 32768)
!2529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 32768, elements: !2530)
!2530 = !{!2531}
!2531 = !DISubrange(count: 4096)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1443, file: !1039, line: 378, baseType: !2533, size: 64, offset: 64)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1443, size: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1439, file: !1039, line: 384, baseType: !1726, size: 192, offset: 192)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1288, file: !1039, line: 500, baseType: !560, offset: 6656)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1288, file: !1039, line: 501, baseType: !2537, size: 64, offset: 6656)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2538 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1039, line: 387, flags: DIFlagFwdDecl)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1288, file: !1039, line: 516, baseType: !1935, size: 64, offset: 6720)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1288, file: !1039, line: 519, baseType: !676, size: 64, offset: 6784)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1288, file: !1039, line: 521, baseType: !2542, size: 64, offset: 6848)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 64)
!2543 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1039, line: 521, flags: DIFlagFwdDecl)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1288, file: !1039, line: 545, baseType: !519, size: 32, offset: 6912)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1288, file: !1039, line: 548, baseType: !806, size: 8, offset: 6944)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1288, file: !1039, line: 550, baseType: !2547, offset: 6952)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2548, line: 142, elements: !574)
!2548 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1288, file: !1039, line: 554, baseType: !2181, size: 256, offset: 6976)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1288, file: !1039, line: 557, baseType: !489, size: 32, offset: 7232)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1285, file: !1039, line: 565, baseType: !2552, offset: 7296)
!2552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !648, elements: !2553)
!2553 = !{!2554}
!2554 = !DISubrange(count: -1)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1281, file: !1039, line: 151, baseType: !519, size: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1274, file: !1039, line: 156, baseType: !560, offset: 256)
!2557 = !DIDerivedType(tag: DW_TAG_member, scope: !1043, file: !1039, line: 159, baseType: !2558, size: 128)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1043, file: !1039, line: 159, size: 128, elements: !2559)
!2559 = !{!2560, !2563}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2558, file: !1039, line: 161, baseType: !2561, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !1039, line: 161, flags: DIFlagFwdDecl)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2558, file: !1039, line: 162, baseType: !368, size: 64, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1043, file: !1039, line: 176, baseType: !689, size: 128, align: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, scope: !1038, file: !1039, line: 179, baseType: !2566, size: 32, offset: 384)
!2566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1038, file: !1039, line: 179, size: 32, elements: !2567)
!2567 = !{!2568, !2569, !2570, !2571}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2566, file: !1039, line: 184, baseType: !519, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2566, file: !1039, line: 192, baseType: !7, size: 32)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2566, file: !1039, line: 194, baseType: !7, size: 32)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2566, file: !1039, line: 195, baseType: !96, size: 32)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1038, file: !1039, line: 199, baseType: !519, size: 32, offset: 416)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !973, file: !31, line: 1964, baseType: !2574, size: 64, offset: 1344)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2575 = !DISubroutineType(types: !2576)
!2576 = !{!376, !915, !2577}
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2579, line: 12, size: 256, elements: !2580)
!2579 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2580 = !{!2581, !2582, !2583, !2584, !2585}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2578, file: !2579, line: 13, baseType: !366, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2578, file: !2579, line: 16, baseType: !96, size: 32, offset: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2578, file: !2579, line: 23, baseType: !648, size: 64, offset: 64)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2578, file: !2579, line: 30, baseType: !648, size: 64, offset: 128)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2578, file: !2579, line: 33, baseType: !2586, size: 64, offset: 192)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2587 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1039, line: 27, flags: DIFlagFwdDecl)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !973, file: !31, line: 1966, baseType: !2574, size: 64, offset: 1408)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !916, file: !31, line: 1424, baseType: !2590, size: 64, offset: 448)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2592)
!2592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !19, line: 322, size: 704, elements: !2593)
!2593 = !{!2594, !2640, !2644, !2648, !2649, !2650, !2651, !2652, !2657, !2662, !2666}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2592, file: !19, line: 323, baseType: !2595, size: 64)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = !DISubroutineType(types: !2597)
!2597 = !{!96, !2598}
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !19, line: 294, size: 1600, elements: !2600)
!2600 = !{!2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2625, !2626, !2627}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2599, file: !19, line: 295, baseType: !955, size: 128)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2599, file: !19, line: 296, baseType: !530, size: 128, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2599, file: !19, line: 297, baseType: !530, size: 128, offset: 256)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2599, file: !19, line: 298, baseType: !530, size: 128, offset: 384)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2599, file: !19, line: 299, baseType: !1403, size: 192, offset: 512)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2599, file: !19, line: 300, baseType: !560, offset: 704)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2599, file: !19, line: 301, baseType: !519, size: 32, offset: 704)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2599, file: !19, line: 302, baseType: !915, size: 64, offset: 768)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2599, file: !19, line: 303, baseType: !2610, size: 64, offset: 832)
!2610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !19, line: 68, size: 64, elements: !2611)
!2611 = !{!2612, !2624}
!2612 = !DIDerivedType(tag: DW_TAG_member, scope: !2610, file: !19, line: 69, baseType: !2613, size: 32)
!2613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2610, file: !19, line: 69, size: 32, elements: !2614)
!2614 = !{!2615, !2616, !2617}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2613, file: !19, line: 70, baseType: !754, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2613, file: !19, line: 71, baseType: !762, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2613, file: !19, line: 72, baseType: !2618, size: 32)
!2618 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2619, line: 24, baseType: !2620)
!2619 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2619, line: 22, size: 32, elements: !2621)
!2621 = !{!2622}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2620, file: !2619, line: 23, baseType: !2623, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2619, line: 20, baseType: !760)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2610, file: !19, line: 74, baseType: !18, size: 32, offset: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2599, file: !19, line: 304, baseType: !847, size: 64, offset: 896)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2599, file: !19, line: 305, baseType: !648, size: 64, offset: 960)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2599, file: !19, line: 306, baseType: !2628, size: 576, offset: 1024)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !19, line: 205, size: 576, elements: !2629)
!2629 = !{!2630, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2628, file: !19, line: 206, baseType: !2631, size: 64)
!2631 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !19, line: 66, baseType: !849)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2628, file: !19, line: 207, baseType: !2631, size: 64, offset: 64)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2628, file: !19, line: 208, baseType: !2631, size: 64, offset: 128)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2628, file: !19, line: 209, baseType: !2631, size: 64, offset: 192)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2628, file: !19, line: 210, baseType: !2631, size: 64, offset: 256)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2628, file: !19, line: 211, baseType: !2631, size: 64, offset: 320)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2628, file: !19, line: 212, baseType: !2631, size: 64, offset: 384)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2628, file: !19, line: 213, baseType: !855, size: 64, offset: 448)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2628, file: !19, line: 214, baseType: !855, size: 64, offset: 512)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2592, file: !19, line: 324, baseType: !2641, size: 64, offset: 64)
!2641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2642, size: 64)
!2642 = !DISubroutineType(types: !2643)
!2643 = !{!2598, !915, !96}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2592, file: !19, line: 325, baseType: !2645, size: 64, offset: 128)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{null, !2598}
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2592, file: !19, line: 326, baseType: !2595, size: 64, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2592, file: !19, line: 327, baseType: !2595, size: 64, offset: 256)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2592, file: !19, line: 328, baseType: !2595, size: 64, offset: 320)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2592, file: !19, line: 329, baseType: !1001, size: 64, offset: 384)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2592, file: !19, line: 332, baseType: !2653, size: 64, offset: 448)
!2653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2654 = !DISubroutineType(types: !2655)
!2655 = !{!2656, !748}
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2592, file: !19, line: 333, baseType: !2658, size: 64, offset: 512)
!2658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2659, size: 64)
!2659 = !DISubroutineType(types: !2660)
!2660 = !{!96, !748, !2661}
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2592, file: !19, line: 335, baseType: !2663, size: 64, offset: 576)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!96, !748, !2656}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2592, file: !19, line: 337, baseType: !2667, size: 64, offset: 640)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{!96, !915, !2670}
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !916, file: !31, line: 1425, baseType: !2672, size: 64, offset: 512)
!2672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2673, size: 64)
!2673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2674)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !19, line: 428, size: 704, elements: !2675)
!2675 = !{!2676, !2680, !2681, !2685, !2686, !2687, !2702, !2725, !2729, !2730, !2753}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2674, file: !19, line: 429, baseType: !2677, size: 64)
!2677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2678, size: 64)
!2678 = !DISubroutineType(types: !2679)
!2679 = !{!96, !915, !96, !96, !865}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2674, file: !19, line: 430, baseType: !1001, size: 64, offset: 64)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2674, file: !19, line: 431, baseType: !2682, size: 64, offset: 128)
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = !DISubroutineType(types: !2684)
!2684 = !{!96, !915, !7}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2674, file: !19, line: 432, baseType: !2682, size: 64, offset: 192)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2674, file: !19, line: 433, baseType: !1001, size: 64, offset: 256)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2674, file: !19, line: 434, baseType: !2688, size: 64, offset: 320)
!2688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2689, size: 64)
!2689 = !DISubroutineType(types: !2690)
!2690 = !{!96, !915, !96, !2691}
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !19, line: 415, size: 256, elements: !2693)
!2693 = !{!2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2692, file: !19, line: 416, baseType: !96, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2692, file: !19, line: 417, baseType: !7, size: 32, offset: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2692, file: !19, line: 418, baseType: !7, size: 32, offset: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2692, file: !19, line: 420, baseType: !7, size: 32, offset: 96)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2692, file: !19, line: 421, baseType: !7, size: 32, offset: 128)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2692, file: !19, line: 422, baseType: !7, size: 32, offset: 160)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2692, file: !19, line: 423, baseType: !7, size: 32, offset: 192)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2692, file: !19, line: 424, baseType: !7, size: 32, offset: 224)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2674, file: !19, line: 435, baseType: !2703, size: 64, offset: 384)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{!96, !915, !2610, !2706}
!2706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2707, size: 64)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !19, line: 343, size: 960, elements: !2708)
!2708 = !{!2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2707, file: !19, line: 344, baseType: !96, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2707, file: !19, line: 345, baseType: !741, size: 64, offset: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2707, file: !19, line: 346, baseType: !741, size: 64, offset: 128)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2707, file: !19, line: 347, baseType: !741, size: 64, offset: 192)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2707, file: !19, line: 348, baseType: !741, size: 64, offset: 256)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2707, file: !19, line: 349, baseType: !741, size: 64, offset: 320)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2707, file: !19, line: 350, baseType: !741, size: 64, offset: 384)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2707, file: !19, line: 351, baseType: !1089, size: 64, offset: 448)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2707, file: !19, line: 353, baseType: !1089, size: 64, offset: 512)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2707, file: !19, line: 354, baseType: !96, size: 32, offset: 576)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2707, file: !19, line: 355, baseType: !96, size: 32, offset: 608)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2707, file: !19, line: 356, baseType: !741, size: 64, offset: 640)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2707, file: !19, line: 357, baseType: !741, size: 64, offset: 704)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2707, file: !19, line: 358, baseType: !741, size: 64, offset: 768)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2707, file: !19, line: 359, baseType: !1089, size: 64, offset: 832)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2707, file: !19, line: 360, baseType: !96, size: 32, offset: 896)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2674, file: !19, line: 436, baseType: !2726, size: 64, offset: 448)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = !DISubroutineType(types: !2728)
!2728 = !{!96, !915, !2670, !2706}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2674, file: !19, line: 438, baseType: !2703, size: 64, offset: 512)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2674, file: !19, line: 439, baseType: !2731, size: 64, offset: 576)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!96, !915, !2734}
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !19, line: 409, size: 1408, elements: !2736)
!2736 = !{!2737, !2738}
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2735, file: !19, line: 410, baseType: !7, size: 32)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2735, file: !19, line: 411, baseType: !2739, size: 1344, offset: 64)
!2739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2740, size: 1344, elements: !601)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !19, line: 395, size: 448, elements: !2741)
!2741 = !{!2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2752}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2740, file: !19, line: 396, baseType: !7, size: 32)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2740, file: !19, line: 397, baseType: !7, size: 32, offset: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2740, file: !19, line: 399, baseType: !7, size: 32, offset: 64)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2740, file: !19, line: 400, baseType: !7, size: 32, offset: 96)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2740, file: !19, line: 401, baseType: !7, size: 32, offset: 128)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2740, file: !19, line: 402, baseType: !7, size: 32, offset: 160)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2740, file: !19, line: 403, baseType: !7, size: 32, offset: 192)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2740, file: !19, line: 404, baseType: !743, size: 64, offset: 256)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2740, file: !19, line: 405, baseType: !2751, size: 64, offset: 320)
!2751 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !367, line: 126, baseType: !741)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2740, file: !19, line: 406, baseType: !2751, size: 64, offset: 384)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2674, file: !19, line: 440, baseType: !2682, size: 64, offset: 640)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !916, file: !31, line: 1426, baseType: !2755, size: 64, offset: 576)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2757)
!2757 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !31, line: 49, flags: DIFlagFwdDecl)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !916, file: !31, line: 1427, baseType: !648, size: 64, offset: 640)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !916, file: !31, line: 1428, baseType: !648, size: 64, offset: 704)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !916, file: !31, line: 1429, baseType: !648, size: 64, offset: 768)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !916, file: !31, line: 1430, baseType: !706, size: 64, offset: 832)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !916, file: !31, line: 1431, baseType: !1079, size: 256, offset: 896)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !916, file: !31, line: 1432, baseType: !96, size: 32, offset: 1152)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !916, file: !31, line: 1433, baseType: !519, size: 32, offset: 1184)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !916, file: !31, line: 1437, baseType: !2766, size: 64, offset: 1216)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2769)
!2769 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !31, line: 1437, flags: DIFlagFwdDecl)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !916, file: !31, line: 1449, baseType: !2771, size: 64, offset: 1280)
!2771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !722, line: 34, size: 64, elements: !2772)
!2772 = !{!2773}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2771, file: !722, line: 35, baseType: !725, size: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !916, file: !31, line: 1450, baseType: !530, size: 128, offset: 1344)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !916, file: !31, line: 1451, baseType: !2776, size: 64, offset: 1472)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !31, line: 699, flags: DIFlagFwdDecl)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !916, file: !31, line: 1452, baseType: !2147, size: 64, offset: 1536)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !916, file: !31, line: 1453, baseType: !2780, size: 64, offset: 1600)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2781, size: 64)
!2781 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !31, line: 1453, flags: DIFlagFwdDecl)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !916, file: !31, line: 1454, baseType: !955, size: 128, offset: 1664)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !916, file: !31, line: 1455, baseType: !7, size: 32, offset: 1792)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !916, file: !31, line: 1456, baseType: !2785, size: 2432, offset: 1856)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !19, line: 518, size: 2432, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2791, !2823}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2785, file: !19, line: 519, baseType: !7, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2785, file: !19, line: 520, baseType: !1079, size: 256, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2785, file: !19, line: 521, baseType: !2790, size: 192, offset: 320)
!2790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !748, size: 192, elements: !601)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2785, file: !19, line: 522, baseType: !2792, size: 1728, offset: 512)
!2792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2793, size: 1728, elements: !601)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !19, line: 222, size: 576, elements: !2794)
!2794 = !{!2795, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2793, file: !19, line: 223, baseType: !2796, size: 64)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64)
!2797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !19, line: 443, size: 256, elements: !2798)
!2798 = !{!2799, !2800, !2813, !2814}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2797, file: !19, line: 444, baseType: !96, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2797, file: !19, line: 445, baseType: !2801, size: 64, offset: 64)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 64)
!2802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2803)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !19, line: 310, size: 512, elements: !2804)
!2804 = !{!2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2803, file: !19, line: 311, baseType: !1001, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2803, file: !19, line: 312, baseType: !1001, size: 64, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2803, file: !19, line: 313, baseType: !1001, size: 64, offset: 128)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2803, file: !19, line: 314, baseType: !1001, size: 64, offset: 192)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2803, file: !19, line: 315, baseType: !2595, size: 64, offset: 256)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2803, file: !19, line: 316, baseType: !2595, size: 64, offset: 320)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2803, file: !19, line: 317, baseType: !2595, size: 64, offset: 384)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2803, file: !19, line: 318, baseType: !2667, size: 64, offset: 448)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2797, file: !19, line: 446, baseType: !390, size: 64, offset: 128)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2797, file: !19, line: 447, baseType: !2796, size: 64, offset: 192)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2793, file: !19, line: 224, baseType: !96, size: 32, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2793, file: !19, line: 226, baseType: !530, size: 128, offset: 128)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2793, file: !19, line: 227, baseType: !648, size: 64, offset: 256)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2793, file: !19, line: 228, baseType: !7, size: 32, offset: 320)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2793, file: !19, line: 229, baseType: !7, size: 32, offset: 352)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2793, file: !19, line: 230, baseType: !2631, size: 64, offset: 384)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2793, file: !19, line: 231, baseType: !2631, size: 64, offset: 448)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2793, file: !19, line: 232, baseType: !368, size: 64, offset: 512)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2785, file: !19, line: 523, baseType: !2824, size: 192, offset: 2240)
!2824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2801, size: 192, elements: !601)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !916, file: !31, line: 1458, baseType: !2826, size: 2112, offset: 4288)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !31, line: 1410, size: 2112, elements: !2827)
!2827 = !{!2828, !2829, !2830}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2826, file: !31, line: 1411, baseType: !96, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2826, file: !31, line: 1412, baseType: !1705, size: 128, offset: 64)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2826, file: !31, line: 1413, baseType: !2831, size: 1920, offset: 192)
!2831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2832, size: 1920, elements: !601)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2833, line: 12, size: 640, elements: !2834)
!2833 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2834 = !{!2835, !2843, !2844, !2849, !2850}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2832, file: !2833, line: 13, baseType: !2836, size: 320)
!2836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2837, line: 17, size: 320, elements: !2838)
!2837 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2838 = !{!2839, !2840, !2841, !2842}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2836, file: !2837, line: 18, baseType: !96, size: 32)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2836, file: !2837, line: 19, baseType: !96, size: 32, offset: 32)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2836, file: !2837, line: 20, baseType: !1705, size: 128, offset: 64)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2836, file: !2837, line: 22, baseType: !689, size: 128, align: 64, offset: 192)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2832, file: !2833, line: 14, baseType: !441, size: 64, offset: 320)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2832, file: !2833, line: 15, baseType: !2845, size: 64, offset: 384)
!2845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2846, line: 16, size: 64, elements: !2847)
!2846 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2847 = !{!2848}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2845, file: !2846, line: 17, baseType: !1446, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2832, file: !2833, line: 16, baseType: !1705, size: 128, offset: 448)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2832, file: !2833, line: 17, baseType: !519, size: 32, offset: 576)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !916, file: !31, line: 1465, baseType: !368, size: 64, offset: 6400)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !916, file: !31, line: 1468, baseType: !489, size: 32, offset: 6464)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !916, file: !31, line: 1470, baseType: !855, size: 64, offset: 6528)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !916, file: !31, line: 1471, baseType: !855, size: 64, offset: 6592)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !916, file: !31, line: 1473, baseType: !490, size: 32, offset: 6656)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !916, file: !31, line: 1474, baseType: !2857, size: 64, offset: 6720)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !31, line: 603, flags: DIFlagFwdDecl)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !916, file: !31, line: 1477, baseType: !2860, size: 256, offset: 6784)
!2860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 256, elements: !2452)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !916, file: !31, line: 1478, baseType: !2862, size: 128, offset: 7040)
!2862 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2863, line: 18, baseType: !2864)
!2863 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2863, line: 16, size: 128, elements: !2865)
!2865 = !{!2866}
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2864, file: !2863, line: 17, baseType: !2867, size: 128)
!2867 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 128, elements: !1957)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !916, file: !31, line: 1480, baseType: !7, size: 32, offset: 7168)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !916, file: !31, line: 1481, baseType: !2870, size: 32, offset: 7200)
!2870 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !367, line: 150, baseType: !7)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !916, file: !31, line: 1487, baseType: !1403, size: 192, offset: 7232)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !916, file: !31, line: 1493, baseType: !387, size: 64, offset: 7424)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !916, file: !31, line: 1495, baseType: !2874, size: 64, offset: 7488)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 64)
!2875 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2876)
!2876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !704, line: 135, size: 1024, align: 512, elements: !2877)
!2877 = !{!2878, !2882, !2883, !2890, !2896, !2900, !2904, !2908, !2909, !2913, !2917, !2922, !2926}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2876, file: !704, line: 136, baseType: !2879, size: 64)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{!96, !706, !7}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2876, file: !704, line: 137, baseType: !2879, size: 64, offset: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2876, file: !704, line: 138, baseType: !2884, size: 64, offset: 128)
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2885, size: 64)
!2885 = !DISubroutineType(types: !2886)
!2886 = !{!96, !2887, !2889}
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !707)
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2876, file: !704, line: 139, baseType: !2891, size: 64, offset: 192)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!96, !2887, !7, !387, !2894}
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !730)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2876, file: !704, line: 141, baseType: !2897, size: 64, offset: 256)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!96, !2887}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2876, file: !704, line: 142, baseType: !2901, size: 64, offset: 320)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!96, !706}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2876, file: !704, line: 143, baseType: !2905, size: 64, offset: 384)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{null, !706}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2876, file: !704, line: 144, baseType: !2905, size: 64, offset: 448)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2876, file: !704, line: 145, baseType: !2910, size: 64, offset: 512)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{null, !706, !748}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2876, file: !704, line: 146, baseType: !2914, size: 64, offset: 576)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!377, !706, !377, !96}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2876, file: !704, line: 147, baseType: !2918, size: 64, offset: 640)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 64)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{!702, !2921}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2876, file: !704, line: 148, baseType: !2923, size: 64, offset: 704)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DISubroutineType(types: !2925)
!2925 = !{!96, !865, !806}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2876, file: !704, line: 149, baseType: !2927, size: 64, offset: 768)
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2928, size: 64)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!706, !706, !2930}
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !749)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !916, file: !31, line: 1500, baseType: !96, size: 32, offset: 7552)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !916, file: !31, line: 1502, baseType: !2934, size: 448, offset: 7616)
!2934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2579, line: 60, size: 448, elements: !2935)
!2935 = !{!2936, !2941, !2942, !2943, !2944, !2945, !2946}
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2934, file: !2579, line: 61, baseType: !2937, size: 64)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{!648, !2940, !2577}
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2934, file: !2579, line: 63, baseType: !2937, size: 64, offset: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2934, file: !2579, line: 66, baseType: !376, size: 64, offset: 128)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2934, file: !2579, line: 67, baseType: !96, size: 32, offset: 192)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2934, file: !2579, line: 68, baseType: !7, size: 32, offset: 224)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2934, file: !2579, line: 71, baseType: !530, size: 128, offset: 256)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2934, file: !2579, line: 77, baseType: !2947, size: 64, offset: 384)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !916, file: !31, line: 1505, baseType: !1083, size: 64, offset: 8064)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !916, file: !31, line: 1508, baseType: !1083, size: 64, offset: 8128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !916, file: !31, line: 1511, baseType: !96, size: 32, offset: 8192)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !916, file: !31, line: 1514, baseType: !1219, size: 32, offset: 8224)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !916, file: !31, line: 1517, baseType: !2953, size: 64, offset: 8256)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2182, line: 18, flags: DIFlagFwdDecl)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !916, file: !31, line: 1518, baseType: !951, size: 64, offset: 8320)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !916, file: !31, line: 1525, baseType: !1935, size: 64, offset: 8384)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !916, file: !31, line: 1532, baseType: !2958, size: 64, offset: 8448)
!2958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2959, line: 52, size: 64, elements: !2960)
!2959 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2960 = !{!2961}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2958, file: !2959, line: 53, baseType: !2962, size: 64)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2959, line: 40, size: 256, elements: !2964)
!2964 = !{!2965, !2966, !2971}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2963, file: !2959, line: 42, baseType: !560)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2963, file: !2959, line: 44, baseType: !2967, size: 192)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2959, line: 28, size: 192, elements: !2968)
!2968 = !{!2969, !2970}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2967, file: !2959, line: 29, baseType: !530, size: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2967, file: !2959, line: 31, baseType: !376, size: 64, offset: 128)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2963, file: !2959, line: 49, baseType: !376, size: 64, offset: 192)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !916, file: !31, line: 1533, baseType: !2958, size: 64, offset: 8512)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !916, file: !31, line: 1534, baseType: !689, size: 128, align: 64, offset: 8576)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !916, file: !31, line: 1535, baseType: !2181, size: 256, offset: 8704)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !916, file: !31, line: 1537, baseType: !1403, size: 192, offset: 8960)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !916, file: !31, line: 1542, baseType: !96, size: 32, offset: 9152)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !916, file: !31, line: 1545, baseType: !560, offset: 9184)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !916, file: !31, line: 1546, baseType: !530, size: 128, offset: 9216)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !916, file: !31, line: 1548, baseType: !560, offset: 9344)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !916, file: !31, line: 1549, baseType: !530, size: 128, offset: 9344)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !749, file: !31, line: 624, baseType: !1050, size: 64, offset: 256)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !749, file: !31, line: 631, baseType: !648, size: 64, offset: 320)
!2983 = !DIDerivedType(tag: DW_TAG_member, scope: !749, file: !31, line: 639, baseType: !2984, size: 32, offset: 384)
!2984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !749, file: !31, line: 639, size: 32, elements: !2985)
!2985 = !{!2986, !2988}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2984, file: !31, line: 640, baseType: !2987, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2984, file: !31, line: 641, baseType: !7, size: 32)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !749, file: !31, line: 643, baseType: !829, size: 32, offset: 416)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !749, file: !31, line: 644, baseType: !847, size: 64, offset: 448)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !749, file: !31, line: 645, baseType: !851, size: 128, offset: 512)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !749, file: !31, line: 646, baseType: !851, size: 128, offset: 640)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !749, file: !31, line: 647, baseType: !851, size: 128, offset: 768)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !749, file: !31, line: 648, baseType: !560, offset: 896)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !749, file: !31, line: 649, baseType: !416, size: 16, offset: 896)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !749, file: !31, line: 650, baseType: !419, size: 8, offset: 912)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !749, file: !31, line: 651, baseType: !419, size: 8, offset: 920)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !749, file: !31, line: 652, baseType: !2751, size: 64, offset: 960)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !749, file: !31, line: 659, baseType: !648, size: 64, offset: 1024)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !749, file: !31, line: 660, baseType: !1079, size: 256, offset: 1088)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !749, file: !31, line: 662, baseType: !648, size: 64, offset: 1344)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !749, file: !31, line: 663, baseType: !648, size: 64, offset: 1408)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !749, file: !31, line: 665, baseType: !955, size: 128, offset: 1472)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !749, file: !31, line: 666, baseType: !530, size: 128, offset: 1600)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !749, file: !31, line: 675, baseType: !530, size: 128, offset: 1728)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !749, file: !31, line: 676, baseType: !530, size: 128, offset: 1856)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !749, file: !31, line: 677, baseType: !530, size: 128, offset: 1984)
!3008 = !DIDerivedType(tag: DW_TAG_member, scope: !749, file: !31, line: 678, baseType: !3009, size: 128, offset: 2112)
!3009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !749, file: !31, line: 678, size: 128, elements: !3010)
!3010 = !{!3011, !3012}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3009, file: !31, line: 679, baseType: !951, size: 64)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3009, file: !31, line: 680, baseType: !689, size: 128, align: 64)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !749, file: !31, line: 682, baseType: !1085, size: 64, offset: 2240)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !749, file: !31, line: 683, baseType: !1085, size: 64, offset: 2304)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !749, file: !31, line: 684, baseType: !519, size: 32, offset: 2368)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !749, file: !31, line: 685, baseType: !519, size: 32, offset: 2400)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !749, file: !31, line: 686, baseType: !519, size: 32, offset: 2432)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !749, file: !31, line: 688, baseType: !519, size: 32, offset: 2464)
!3019 = !DIDerivedType(tag: DW_TAG_member, scope: !749, file: !31, line: 690, baseType: !3020, size: 64, offset: 2496)
!3020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !749, file: !31, line: 690, size: 64, elements: !3021)
!3021 = !{!3022, !3254}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3020, file: !31, line: 691, baseType: !3023, size: 64)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3025)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !31, line: 1822, size: 2048, elements: !3026)
!3026 = !{!3027, !3028, !3032, !3037, !3041, !3042, !3043, !3047, !3060, !3061, !3078, !3082, !3083, !3087, !3088, !3092, !3097, !3098, !3102, !3106, !3214, !3218, !3219, !3223, !3224, !3228, !3232, !3237, !3241, !3245, !3249, !3253}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3025, file: !31, line: 1823, baseType: !390, size: 64)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3025, file: !31, line: 1824, baseType: !3029, size: 64, offset: 64)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = !DISubroutineType(types: !3031)
!3031 = !{!847, !676, !847, !96}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3025, file: !31, line: 1825, baseType: !3033, size: 64, offset: 128)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!631, !676, !377, !645, !3036}
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3025, file: !31, line: 1826, baseType: !3038, size: 64, offset: 192)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DISubroutineType(types: !3040)
!3040 = !{!631, !676, !387, !645, !3036}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3025, file: !31, line: 1827, baseType: !1156, size: 64, offset: 256)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3025, file: !31, line: 1828, baseType: !1156, size: 64, offset: 320)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3025, file: !31, line: 1829, baseType: !3044, size: 64, offset: 384)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{!96, !1159, !806}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3025, file: !31, line: 1830, baseType: !3048, size: 64, offset: 448)
!3048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 64)
!3049 = !DISubroutineType(types: !3050)
!3050 = !{!96, !676, !3051}
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !31, line: 1776, size: 128, elements: !3053)
!3053 = !{!3054, !3059}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3052, file: !31, line: 1777, baseType: !3055, size: 64)
!3055 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !31, line: 1773, baseType: !3056)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!96, !3051, !387, !96, !847, !741, !7}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3052, file: !31, line: 1778, baseType: !847, size: 64, offset: 64)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3025, file: !31, line: 1831, baseType: !3048, size: 64, offset: 512)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3025, file: !31, line: 1832, baseType: !3062, size: 64, offset: 576)
!3062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3063, size: 64)
!3063 = !DISubroutineType(types: !3064)
!3064 = !{!3065, !676, !3067}
!3065 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3066, line: 52, baseType: !7)
!3066 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !3069, line: 43, size: 128, elements: !3070)
!3069 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!3070 = !{!3071, !3077}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !3068, file: !3069, line: 44, baseType: !3072, size: 64)
!3072 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !3069, line: 37, baseType: !3073)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{null, !676, !3076, !3067}
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !3068, file: !3069, line: 45, baseType: !3065, size: 32, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3025, file: !31, line: 1833, baseType: !3079, size: 64, offset: 640)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!376, !676, !7, !648}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3025, file: !31, line: 1834, baseType: !3079, size: 64, offset: 704)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3025, file: !31, line: 1835, baseType: !3084, size: 64, offset: 768)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = !DISubroutineType(types: !3086)
!3086 = !{!96, !676, !1291}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3025, file: !31, line: 1836, baseType: !648, size: 64, offset: 832)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3025, file: !31, line: 1837, baseType: !3089, size: 64, offset: 896)
!3089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3090, size: 64)
!3090 = !DISubroutineType(types: !3091)
!3091 = !{!96, !748, !676}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3025, file: !31, line: 1838, baseType: !3093, size: 64, offset: 960)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = !DISubroutineType(types: !3095)
!3095 = !{!96, !676, !3096}
!3096 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !31, line: 1007, baseType: !368)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3025, file: !31, line: 1839, baseType: !3089, size: 64, offset: 1024)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3025, file: !31, line: 1840, baseType: !3099, size: 64, offset: 1088)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{!96, !676, !847, !847, !96}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3025, file: !31, line: 1841, baseType: !3103, size: 64, offset: 1152)
!3103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3104, size: 64)
!3104 = !DISubroutineType(types: !3105)
!3105 = !{!96, !96, !676, !96}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3025, file: !31, line: 1842, baseType: !3107, size: 64, offset: 1216)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!96, !676, !96, !3110}
!3110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3111, size: 64)
!3111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !31, line: 1062, size: 1664, elements: !3112)
!3112 = !{!3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127, !3144, !3145, !3146, !3159, !3190}
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3111, file: !31, line: 1063, baseType: !3110, size: 64)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3111, file: !31, line: 1064, baseType: !530, size: 128, offset: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3111, file: !31, line: 1065, baseType: !955, size: 128, offset: 192)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3111, file: !31, line: 1066, baseType: !530, size: 128, offset: 320)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3111, file: !31, line: 1069, baseType: !530, size: 128, offset: 448)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3111, file: !31, line: 1072, baseType: !3096, size: 64, offset: 576)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3111, file: !31, line: 1073, baseType: !7, size: 32, offset: 640)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3111, file: !31, line: 1074, baseType: !421, size: 8, offset: 672)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3111, file: !31, line: 1075, baseType: !7, size: 32, offset: 704)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3111, file: !31, line: 1076, baseType: !96, size: 32, offset: 736)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3111, file: !31, line: 1077, baseType: !1705, size: 128, offset: 768)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3111, file: !31, line: 1078, baseType: !676, size: 64, offset: 896)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3111, file: !31, line: 1079, baseType: !847, size: 64, offset: 960)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3111, file: !31, line: 1080, baseType: !847, size: 64, offset: 1024)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3111, file: !31, line: 1082, baseType: !3128, size: 64, offset: 1088)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !31, line: 1314, size: 320, elements: !3130)
!3130 = !{!3131, !3139, !3140, !3141, !3142, !3143}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3129, file: !31, line: 1315, baseType: !3132)
!3132 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3133, line: 20, baseType: !3134)
!3133 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3133, line: 11, elements: !3135)
!3135 = !{!3136}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3134, file: !3133, line: 12, baseType: !3137)
!3137 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !572, line: 33, baseType: !3138)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 31, elements: !574)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3129, file: !31, line: 1316, baseType: !96, size: 32)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3129, file: !31, line: 1317, baseType: !96, size: 32, offset: 32)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3129, file: !31, line: 1318, baseType: !3128, size: 64, offset: 64)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3129, file: !31, line: 1319, baseType: !676, size: 64, offset: 128)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3129, file: !31, line: 1320, baseType: !689, size: 128, align: 64, offset: 192)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3111, file: !31, line: 1084, baseType: !648, size: 64, offset: 1152)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3111, file: !31, line: 1085, baseType: !648, size: 64, offset: 1216)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3111, file: !31, line: 1087, baseType: !3147, size: 64, offset: 1280)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 64)
!3148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3149)
!3149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !31, line: 1011, size: 128, elements: !3150)
!3150 = !{!3151, !3155}
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3149, file: !31, line: 1012, baseType: !3152, size: 64)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{null, !3110, !3110}
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3149, file: !31, line: 1013, baseType: !3156, size: 64, offset: 64)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{null, !3110}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3111, file: !31, line: 1088, baseType: !3160, size: 64, offset: 1344)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3162)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !31, line: 1016, size: 512, elements: !3163)
!3163 = !{!3164, !3168, !3172, !3173, !3177, !3181, !3185, !3189}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3162, file: !31, line: 1017, baseType: !3165, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!3096, !3096}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3162, file: !31, line: 1018, baseType: !3169, size: 64, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{null, !3096}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3162, file: !31, line: 1019, baseType: !3156, size: 64, offset: 128)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3162, file: !31, line: 1020, baseType: !3174, size: 64, offset: 192)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = !DISubroutineType(types: !3176)
!3176 = !{!96, !3110, !96}
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3162, file: !31, line: 1021, baseType: !3178, size: 64, offset: 256)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{!806, !3110}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3162, file: !31, line: 1022, baseType: !3182, size: 64, offset: 320)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{!96, !3110, !96, !533}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3162, file: !31, line: 1023, baseType: !3186, size: 64, offset: 384)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{null, !3110, !1133}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3162, file: !31, line: 1024, baseType: !3178, size: 64, offset: 448)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3111, file: !31, line: 1097, baseType: !3191, size: 256, offset: 1408)
!3191 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3111, file: !31, line: 1089, size: 256, elements: !3192)
!3192 = !{!3193, !3202, !3208}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3191, file: !31, line: 1090, baseType: !3194, size: 256)
!3194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3195, line: 10, size: 256, elements: !3196)
!3195 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3196 = !{!3197, !3198, !3201}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3194, file: !3195, line: 11, baseType: !489, size: 32)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3194, file: !3195, line: 12, baseType: !3199, size: 64, offset: 64)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3195, line: 5, flags: DIFlagFwdDecl)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3194, file: !3195, line: 13, baseType: !530, size: 128, offset: 128)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3191, file: !31, line: 1091, baseType: !3203, size: 64)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3195, line: 17, size: 64, elements: !3204)
!3204 = !{!3205}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3203, file: !3195, line: 18, baseType: !3206, size: 64)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3195, line: 16, flags: DIFlagFwdDecl)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3191, file: !31, line: 1096, baseType: !3209, size: 192)
!3209 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3191, file: !31, line: 1092, size: 192, elements: !3210)
!3210 = !{!3211, !3212, !3213}
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3209, file: !31, line: 1093, baseType: !530, size: 128)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3209, file: !31, line: 1094, baseType: !96, size: 32, offset: 128)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3209, file: !31, line: 1095, baseType: !7, size: 32, offset: 160)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3025, file: !31, line: 1843, baseType: !3215, size: 64, offset: 1280)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = !DISubroutineType(types: !3217)
!3217 = !{!631, !676, !1037, !96, !645, !3036, !96}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3025, file: !31, line: 1844, baseType: !1331, size: 64, offset: 1344)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3025, file: !31, line: 1845, baseType: !3220, size: 64, offset: 1408)
!3220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3221, size: 64)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!96, !96}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3025, file: !31, line: 1846, baseType: !3107, size: 64, offset: 1472)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3025, file: !31, line: 1847, baseType: !3225, size: 64, offset: 1536)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{!631, !2322, !676, !3036, !645, !7}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3025, file: !31, line: 1848, baseType: !3229, size: 64, offset: 1600)
!3229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3230, size: 64)
!3230 = !DISubroutineType(types: !3231)
!3231 = !{!631, !676, !3036, !2322, !645, !7}
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3025, file: !31, line: 1849, baseType: !3233, size: 64, offset: 1664)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = !DISubroutineType(types: !3235)
!3235 = !{!96, !676, !376, !3236, !1133}
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3025, file: !31, line: 1850, baseType: !3238, size: 64, offset: 1728)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = !DISubroutineType(types: !3240)
!3240 = !{!376, !676, !96, !847, !847}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3025, file: !31, line: 1852, baseType: !3242, size: 64, offset: 1792)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{null, !1027, !676}
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3025, file: !31, line: 1856, baseType: !3246, size: 64, offset: 1856)
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 64)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{!631, !676, !847, !676, !847, !645, !7}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3025, file: !31, line: 1858, baseType: !3250, size: 64, offset: 1920)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3251, size: 64)
!3251 = !DISubroutineType(types: !3252)
!3252 = !{!847, !676, !847, !676, !847, !847, !7}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3025, file: !31, line: 1861, baseType: !3099, size: 64, offset: 1984)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3020, file: !31, line: 692, baseType: !980, size: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !749, file: !31, line: 694, baseType: !3256, size: 64, offset: 2560)
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 64)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !31, line: 1100, size: 384, elements: !3258)
!3258 = !{!3259, !3260, !3261, !3262}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3257, file: !31, line: 1101, baseType: !560)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3257, file: !31, line: 1102, baseType: !530, size: 128)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3257, file: !31, line: 1103, baseType: !530, size: 128, offset: 128)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3257, file: !31, line: 1104, baseType: !530, size: 128, offset: 256)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !749, file: !31, line: 695, baseType: !1051, size: 1216, align: 64, offset: 2624)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !749, file: !31, line: 696, baseType: !530, size: 128, offset: 3840)
!3265 = !DIDerivedType(tag: DW_TAG_member, scope: !749, file: !31, line: 697, baseType: !3266, size: 64, offset: 3968)
!3266 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !749, file: !31, line: 697, size: 64, elements: !3267)
!3267 = !{!3268, !3269, !3270, !3281, !3282}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3266, file: !31, line: 698, baseType: !2322, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3266, file: !31, line: 699, baseType: !2776, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3266, file: !31, line: 700, baseType: !3271, size: 64)
!3271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3272, size: 64)
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3273, line: 14, size: 832, elements: !3274)
!3273 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3274 = !{!3275, !3276, !3277, !3278, !3279, !3280}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3272, file: !3273, line: 15, baseType: !547, size: 512)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3272, file: !3273, line: 16, baseType: !390, size: 64, offset: 512)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3272, file: !3273, line: 17, baseType: !3023, size: 64, offset: 576)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3272, file: !3273, line: 18, baseType: !530, size: 128, offset: 640)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3272, file: !3273, line: 19, baseType: !829, size: 32, offset: 768)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3272, file: !3273, line: 20, baseType: !7, size: 32, offset: 800)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3266, file: !31, line: 701, baseType: !377, size: 64)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3266, file: !31, line: 702, baseType: !7, size: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !749, file: !31, line: 705, baseType: !490, size: 32, offset: 4032)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !749, file: !31, line: 708, baseType: !490, size: 32, offset: 4064)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !749, file: !31, line: 709, baseType: !2857, size: 64, offset: 4096)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !749, file: !31, line: 720, baseType: !368, size: 64, offset: 4160)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !707, file: !704, line: 98, baseType: !3288, size: 256, offset: 448)
!3288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 256, elements: !2452)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !707, file: !704, line: 101, baseType: !3290, size: 32, offset: 704)
!3290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3291, line: 25, size: 32, elements: !3292)
!3291 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3292 = !{!3293}
!3293 = !DIDerivedType(tag: DW_TAG_member, scope: !3290, file: !3291, line: 26, baseType: !3294, size: 32)
!3294 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3290, file: !3291, line: 26, size: 32, elements: !3295)
!3295 = !{!3296}
!3296 = !DIDerivedType(tag: DW_TAG_member, scope: !3294, file: !3291, line: 30, baseType: !3297, size: 32)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3294, file: !3291, line: 30, size: 32, elements: !3298)
!3298 = !{!3299, !3300}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3297, file: !3291, line: 31, baseType: !560)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3297, file: !3291, line: 32, baseType: !96, size: 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !707, file: !704, line: 102, baseType: !2874, size: 64, offset: 768)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !707, file: !704, line: 103, baseType: !915, size: 64, offset: 832)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !707, file: !704, line: 104, baseType: !648, size: 64, offset: 896)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !707, file: !704, line: 105, baseType: !368, size: 64, offset: 960)
!3305 = !DIDerivedType(tag: DW_TAG_member, scope: !707, file: !704, line: 107, baseType: !3306, size: 128, offset: 1024)
!3306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !707, file: !704, line: 107, size: 128, elements: !3307)
!3307 = !{!3308, !3309}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3306, file: !704, line: 108, baseType: !530, size: 128)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3306, file: !704, line: 109, baseType: !3076, size: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !707, file: !704, line: 111, baseType: !530, size: 128, offset: 1152)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !707, file: !704, line: 112, baseType: !530, size: 128, offset: 1280)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !707, file: !704, line: 120, baseType: !3313, size: 128, offset: 1408)
!3313 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !707, file: !704, line: 116, size: 128, elements: !3314)
!3314 = !{!3315, !3316, !3317}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3313, file: !704, line: 117, baseType: !955, size: 128)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3313, file: !704, line: 118, baseType: !721, size: 128)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3313, file: !704, line: 119, baseType: !689, size: 128, align: 64)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !677, file: !31, line: 922, baseType: !748, size: 64, offset: 256)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !677, file: !31, line: 923, baseType: !3023, size: 64, offset: 320)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !677, file: !31, line: 929, baseType: !560, offset: 384)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !677, file: !31, line: 930, baseType: !30, size: 32, offset: 384)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !677, file: !31, line: 931, baseType: !1083, size: 64, offset: 448)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !677, file: !31, line: 932, baseType: !7, size: 32, offset: 512)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !677, file: !31, line: 933, baseType: !2870, size: 32, offset: 544)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !677, file: !31, line: 934, baseType: !1403, size: 192, offset: 576)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !677, file: !31, line: 935, baseType: !847, size: 64, offset: 768)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !677, file: !31, line: 936, baseType: !3328, size: 192, offset: 832)
!3328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !31, line: 885, size: 192, elements: !3329)
!3329 = !{!3330, !3331, !3332, !3333, !3334, !3335}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3328, file: !31, line: 886, baseType: !3132)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3328, file: !31, line: 887, baseType: !1695, size: 64)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3328, file: !31, line: 888, baseType: !39, size: 32, offset: 64)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3328, file: !31, line: 889, baseType: !754, size: 32, offset: 96)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3328, file: !31, line: 889, baseType: !754, size: 32, offset: 128)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3328, file: !31, line: 890, baseType: !96, size: 32, offset: 160)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !677, file: !31, line: 937, baseType: !1771, size: 64, offset: 1024)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !677, file: !31, line: 938, baseType: !3338, size: 256, offset: 1088)
!3338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !31, line: 896, size: 256, elements: !3339)
!3339 = !{!3340, !3341, !3342, !3343, !3344, !3345}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3338, file: !31, line: 897, baseType: !648, size: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3338, file: !31, line: 898, baseType: !7, size: 32, offset: 64)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3338, file: !31, line: 899, baseType: !7, size: 32, offset: 96)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3338, file: !31, line: 902, baseType: !7, size: 32, offset: 128)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3338, file: !31, line: 903, baseType: !7, size: 32, offset: 160)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3338, file: !31, line: 904, baseType: !847, size: 64, offset: 192)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !677, file: !31, line: 940, baseType: !741, size: 64, offset: 1344)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !677, file: !31, line: 945, baseType: !368, size: 64, offset: 1408)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !677, file: !31, line: 949, baseType: !530, size: 128, offset: 1472)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !677, file: !31, line: 950, baseType: !530, size: 128, offset: 1600)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !677, file: !31, line: 952, baseType: !1050, size: 64, offset: 1728)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !677, file: !31, line: 953, baseType: !1219, size: 32, offset: 1792)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !677, file: !31, line: 954, baseType: !1219, size: 32, offset: 1824)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !667, file: !625, line: 174, baseType: !673, size: 64, offset: 320)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !667, file: !625, line: 176, baseType: !3355, size: 64, offset: 384)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!96, !676, !553, !666, !1291}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !655, file: !625, line: 90, baseType: !650, size: 64, offset: 192)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !655, file: !625, line: 91, baseType: !3360, size: 64, offset: 256)
!3360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !615, file: !548, line: 143, baseType: !3362, size: 64, offset: 256)
!3362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3363, size: 64)
!3363 = !DISubroutineType(types: !3364)
!3364 = !{!3365, !553}
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3367)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !25, line: 39, size: 384, elements: !3368)
!3368 = !{!3369, !3370, !3374, !3378, !3384, !3388}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3367, file: !25, line: 40, baseType: !24, size: 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3367, file: !25, line: 41, baseType: !3371, size: 64, offset: 64)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = !DISubroutineType(types: !3373)
!3373 = !{!806}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3367, file: !25, line: 42, baseType: !3375, size: 64, offset: 128)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{!368}
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3367, file: !25, line: 43, baseType: !3379, size: 64, offset: 192)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = !DISubroutineType(types: !3381)
!3381 = !{!2351, !3382}
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !25, line: 19, flags: DIFlagFwdDecl)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3367, file: !25, line: 44, baseType: !3385, size: 64, offset: 256)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3386, size: 64)
!3386 = !DISubroutineType(types: !3387)
!3387 = !{!2351}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3367, file: !25, line: 45, baseType: !409, size: 64, offset: 320)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !615, file: !548, line: 144, baseType: !3390, size: 64, offset: 320)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{!2351, !553}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !615, file: !548, line: 145, baseType: !3394, size: 64, offset: 384)
!3394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3395, size: 64)
!3395 = !DISubroutineType(types: !3396)
!3396 = !{null, !553, !3397, !3398}
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !547, file: !548, line: 70, baseType: !3400, size: 64, offset: 384)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !935, line: 123, size: 1024, elements: !3402)
!3402 = !{!3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3531, !3532, !3533, !3534, !3535}
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3401, file: !935, line: 124, baseType: !519, size: 32)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3401, file: !935, line: 125, baseType: !519, size: 32, offset: 32)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3401, file: !935, line: 135, baseType: !3400, size: 64, offset: 64)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3401, file: !935, line: 136, baseType: !387, size: 64, offset: 128)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3401, file: !935, line: 138, baseType: !1072, size: 192, align: 64, offset: 192)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3401, file: !935, line: 140, baseType: !2351, size: 64, offset: 384)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3401, file: !935, line: 141, baseType: !7, size: 32, offset: 448)
!3410 = !DIDerivedType(tag: DW_TAG_member, scope: !3401, file: !935, line: 142, baseType: !3411, size: 256, offset: 512)
!3411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3401, file: !935, line: 142, size: 256, elements: !3412)
!3412 = !{!3413, !3459, !3463}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3411, file: !935, line: 143, baseType: !3414, size: 192)
!3414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !935, line: 91, size: 192, elements: !3415)
!3415 = !{!3416, !3417, !3418}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3414, file: !935, line: 92, baseType: !648, size: 64)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3414, file: !935, line: 94, baseType: !1068, size: 64, offset: 64)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3414, file: !935, line: 100, baseType: !3419, size: 64, offset: 128)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !935, line: 180, size: 704, elements: !3421)
!3421 = !{!3422, !3423, !3424, !3431, !3432, !3433, !3457, !3458}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3420, file: !935, line: 182, baseType: !3400, size: 64)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3420, file: !935, line: 183, baseType: !7, size: 32, offset: 64)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3420, file: !935, line: 186, baseType: !3425, size: 192, offset: 128)
!3425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3426, line: 19, size: 192, elements: !3427)
!3426 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3427 = !{!3428, !3429, !3430}
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3425, file: !3426, line: 20, baseType: !1055, size: 128)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3425, file: !3426, line: 21, baseType: !7, size: 32, offset: 128)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3425, file: !3426, line: 22, baseType: !7, size: 32, offset: 160)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3420, file: !935, line: 187, baseType: !489, size: 32, offset: 320)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3420, file: !935, line: 188, baseType: !489, size: 32, offset: 352)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3420, file: !935, line: 189, baseType: !3434, size: 64, offset: 384)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !935, line: 168, size: 320, elements: !3436)
!3436 = !{!3437, !3441, !3445, !3449, !3453}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3435, file: !935, line: 169, baseType: !3438, size: 64)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3439, size: 64)
!3439 = !DISubroutineType(types: !3440)
!3440 = !{!96, !1027, !3419}
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3435, file: !935, line: 171, baseType: !3442, size: 64, offset: 64)
!3442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3443, size: 64)
!3443 = !DISubroutineType(types: !3444)
!3444 = !{!96, !3400, !387, !640}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3435, file: !935, line: 173, baseType: !3446, size: 64, offset: 128)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 64)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{!96, !3400}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3435, file: !935, line: 174, baseType: !3450, size: 64, offset: 192)
!3450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3451, size: 64)
!3451 = !DISubroutineType(types: !3452)
!3452 = !{!96, !3400, !3400, !387}
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3435, file: !935, line: 176, baseType: !3454, size: 64, offset: 256)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = !DISubroutineType(types: !3456)
!3456 = !{!96, !1027, !3400, !3419}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3420, file: !935, line: 192, baseType: !530, size: 128, offset: 448)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3420, file: !935, line: 194, baseType: !1705, size: 128, offset: 576)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3411, file: !935, line: 144, baseType: !3460, size: 64)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !935, line: 103, size: 64, elements: !3461)
!3461 = !{!3462}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3460, file: !935, line: 104, baseType: !3400, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3411, file: !935, line: 145, baseType: !3464, size: 256)
!3464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !935, line: 107, size: 256, elements: !3465)
!3465 = !{!3466, !3526, !3529, !3530}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3464, file: !935, line: 108, baseType: !3467, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3469)
!3469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !935, line: 217, size: 768, elements: !3470)
!3470 = !{!3471, !3491, !3495, !3499, !3503, !3507, !3511, !3515, !3516, !3517, !3518, !3522}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3469, file: !935, line: 222, baseType: !3472, size: 64)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DISubroutineType(types: !3474)
!3474 = !{!96, !3475}
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !935, line: 197, size: 1088, elements: !3477)
!3477 = !{!3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3476, file: !935, line: 199, baseType: !3400, size: 64)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3476, file: !935, line: 200, baseType: !676, size: 64, offset: 64)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3476, file: !935, line: 201, baseType: !1027, size: 64, offset: 128)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3476, file: !935, line: 202, baseType: !368, size: 64, offset: 192)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3476, file: !935, line: 205, baseType: !1403, size: 192, offset: 256)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3476, file: !935, line: 206, baseType: !1403, size: 192, offset: 448)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3476, file: !935, line: 207, baseType: !96, size: 32, offset: 640)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3476, file: !935, line: 208, baseType: !530, size: 128, offset: 704)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3476, file: !935, line: 209, baseType: !377, size: 64, offset: 832)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3476, file: !935, line: 211, baseType: !645, size: 64, offset: 896)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3476, file: !935, line: 212, baseType: !806, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3476, file: !935, line: 213, baseType: !806, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3476, file: !935, line: 214, baseType: !1319, size: 64, offset: 1024)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3469, file: !935, line: 223, baseType: !3492, size: 64, offset: 64)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{null, !3475}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3469, file: !935, line: 236, baseType: !3496, size: 64, offset: 128)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{!96, !1027, !368}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3469, file: !935, line: 238, baseType: !3500, size: 64, offset: 192)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{!368, !1027, !3036}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3469, file: !935, line: 239, baseType: !3504, size: 64, offset: 256)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{!368, !1027, !368, !3036}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3469, file: !935, line: 240, baseType: !3508, size: 64, offset: 320)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DISubroutineType(types: !3510)
!3510 = !{null, !1027, !368}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3469, file: !935, line: 242, baseType: !3512, size: 64, offset: 384)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{!631, !3475, !377, !645, !847}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3469, file: !935, line: 252, baseType: !645, size: 64, offset: 448)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3469, file: !935, line: 259, baseType: !806, size: 8, offset: 512)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3469, file: !935, line: 260, baseType: !3512, size: 64, offset: 576)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3469, file: !935, line: 263, baseType: !3519, size: 64, offset: 640)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{!3065, !3475, !3067}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3469, file: !935, line: 266, baseType: !3523, size: 64, offset: 704)
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!96, !3475, !1291}
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3464, file: !935, line: 109, baseType: !3527, size: 64, offset: 64)
!3527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3528, size: 64)
!3528 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !935, line: 31, flags: DIFlagFwdDecl)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3464, file: !935, line: 110, baseType: !847, size: 64, offset: 128)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3464, file: !935, line: 111, baseType: !3400, size: 64, offset: 192)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3401, file: !935, line: 148, baseType: !368, size: 64, offset: 768)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3401, file: !935, line: 154, baseType: !741, size: 64, offset: 832)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3401, file: !935, line: 156, baseType: !416, size: 16, offset: 896)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3401, file: !935, line: 157, baseType: !640, size: 16, offset: 912)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3401, file: !935, line: 158, baseType: !3536, size: 64, offset: 960)
!3536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3537 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !935, line: 32, flags: DIFlagFwdDecl)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !547, file: !548, line: 71, baseType: !510, size: 32, offset: 448)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !547, file: !548, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !547, file: !548, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !547, file: !548, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !547, file: !548, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !547, file: !548, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !544, file: !60, line: 463, baseType: !543, size: 64, offset: 512)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !544, file: !60, line: 465, baseType: !3546, size: 64, offset: 576)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !60, line: 36, flags: DIFlagFwdDecl)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !544, file: !60, line: 467, baseType: !387, size: 64, offset: 640)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !544, file: !60, line: 468, baseType: !3550, size: 64, offset: 704)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3552)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !60, line: 87, size: 384, elements: !3553)
!3553 = !{!3554, !3555, !3556, !3560, !3565, !3569}
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3552, file: !60, line: 88, baseType: !387, size: 64)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3552, file: !60, line: 89, baseType: !652, size: 64, offset: 64)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3552, file: !60, line: 90, baseType: !3557, size: 64, offset: 128)
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = !DISubroutineType(types: !3559)
!3559 = !{!96, !543, !596}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3552, file: !60, line: 91, baseType: !3561, size: 64, offset: 192)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{!377, !543, !3564, !3397, !3398}
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !640, size: 64)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3552, file: !60, line: 93, baseType: !3566, size: 64, offset: 256)
!3566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3567, size: 64)
!3567 = !DISubroutineType(types: !3568)
!3568 = !{null, !543}
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3552, file: !60, line: 95, baseType: !3570, size: 64, offset: 320)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3572)
!3572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !67, line: 278, size: 1472, elements: !3573)
!3573 = !{!3574, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3590, !3591, !3592, !3593, !3594, !3595, !3596, !3597, !3598, !3599}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3572, file: !67, line: 279, baseType: !3575, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{!96, !543}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3572, file: !67, line: 280, baseType: !3566, size: 64, offset: 64)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3572, file: !67, line: 281, baseType: !3575, size: 64, offset: 128)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3572, file: !67, line: 282, baseType: !3575, size: 64, offset: 192)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3572, file: !67, line: 283, baseType: !3575, size: 64, offset: 256)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3572, file: !67, line: 284, baseType: !3575, size: 64, offset: 320)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3572, file: !67, line: 285, baseType: !3575, size: 64, offset: 384)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3572, file: !67, line: 286, baseType: !3575, size: 64, offset: 448)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3572, file: !67, line: 287, baseType: !3575, size: 64, offset: 512)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3572, file: !67, line: 288, baseType: !3575, size: 64, offset: 576)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3572, file: !67, line: 289, baseType: !3575, size: 64, offset: 640)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3572, file: !67, line: 290, baseType: !3575, size: 64, offset: 704)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3572, file: !67, line: 291, baseType: !3575, size: 64, offset: 768)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3572, file: !67, line: 292, baseType: !3575, size: 64, offset: 832)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3572, file: !67, line: 293, baseType: !3575, size: 64, offset: 896)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3572, file: !67, line: 294, baseType: !3575, size: 64, offset: 960)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3572, file: !67, line: 295, baseType: !3575, size: 64, offset: 1024)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3572, file: !67, line: 296, baseType: !3575, size: 64, offset: 1088)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3572, file: !67, line: 297, baseType: !3575, size: 64, offset: 1152)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3572, file: !67, line: 298, baseType: !3575, size: 64, offset: 1216)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3572, file: !67, line: 299, baseType: !3575, size: 64, offset: 1280)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3572, file: !67, line: 300, baseType: !3575, size: 64, offset: 1344)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3572, file: !67, line: 301, baseType: !3575, size: 64, offset: 1408)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !544, file: !60, line: 470, baseType: !3601, size: 64, offset: 768)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3603, line: 82, size: 1408, elements: !3604)
!3603 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3604 = !{!3605, !3606, !3607, !3608, !3609, !3610, !3611, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3683, !3686, !3687}
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3602, file: !3603, line: 83, baseType: !387, size: 64)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3602, file: !3603, line: 84, baseType: !387, size: 64, offset: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3602, file: !3603, line: 85, baseType: !543, size: 64, offset: 128)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3602, file: !3603, line: 86, baseType: !652, size: 64, offset: 192)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3602, file: !3603, line: 87, baseType: !652, size: 64, offset: 256)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3602, file: !3603, line: 88, baseType: !652, size: 64, offset: 320)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3602, file: !3603, line: 90, baseType: !3612, size: 64, offset: 384)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3613, size: 64)
!3613 = !DISubroutineType(types: !3614)
!3614 = !{!96, !543, !3615}
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !54, line: 95, size: 1152, elements: !3617)
!3617 = !{!3618, !3619, !3620, !3621, !3622, !3623, !3624, !3634, !3647, !3648, !3649, !3650, !3651, !3659, !3660, !3661, !3662, !3663, !3664}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3616, file: !54, line: 96, baseType: !387, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3616, file: !54, line: 97, baseType: !3601, size: 64, offset: 64)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3616, file: !54, line: 99, baseType: !390, size: 64, offset: 128)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3616, file: !54, line: 100, baseType: !387, size: 64, offset: 192)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3616, file: !54, line: 102, baseType: !806, size: 8, offset: 256)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3616, file: !54, line: 103, baseType: !53, size: 32, offset: 288)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3616, file: !54, line: 105, baseType: !3625, size: 64, offset: 320)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3627)
!3627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3628, line: 262, size: 1600, elements: !3629)
!3628 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3629 = !{!3630, !3631, !3632, !3633}
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3627, file: !3628, line: 263, baseType: !2860, size: 256)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3627, file: !3628, line: 264, baseType: !2860, size: 256, offset: 256)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3627, file: !3628, line: 265, baseType: !485, size: 1024, offset: 512)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3627, file: !3628, line: 266, baseType: !2351, size: 64, offset: 1536)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3616, file: !54, line: 106, baseType: !3635, size: 64, offset: 384)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3637)
!3637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3628, line: 210, size: 256, elements: !3638)
!3638 = !{!3639, !3643, !3645, !3646}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3637, file: !3628, line: 211, baseType: !3640, size: 72)
!3640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 72, elements: !3641)
!3641 = !{!3642}
!3642 = !DISubrange(count: 9)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3637, file: !3628, line: 212, baseType: !3644, size: 64, offset: 128)
!3644 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3628, line: 14, baseType: !648)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3637, file: !3628, line: 213, baseType: !490, size: 32, offset: 192)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3637, file: !3628, line: 214, baseType: !490, size: 32, offset: 224)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3616, file: !54, line: 108, baseType: !3575, size: 64, offset: 448)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3616, file: !54, line: 109, baseType: !3566, size: 64, offset: 512)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3616, file: !54, line: 110, baseType: !3575, size: 64, offset: 576)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3616, file: !54, line: 111, baseType: !3566, size: 64, offset: 640)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3616, file: !54, line: 112, baseType: !3652, size: 64, offset: 704)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 64)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!96, !543, !3655}
!3655 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !67, line: 52, baseType: !3656)
!3656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !67, line: 50, size: 32, elements: !3657)
!3657 = !{!3658}
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3656, file: !67, line: 51, baseType: !96, size: 32)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3616, file: !54, line: 113, baseType: !3575, size: 64, offset: 768)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3616, file: !54, line: 114, baseType: !652, size: 64, offset: 832)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3616, file: !54, line: 115, baseType: !652, size: 64, offset: 896)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3616, file: !54, line: 117, baseType: !3570, size: 64, offset: 960)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3616, file: !54, line: 118, baseType: !3566, size: 64, offset: 1024)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3616, file: !54, line: 120, baseType: !3665, size: 64, offset: 1088)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 64)
!3666 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !54, line: 120, flags: DIFlagFwdDecl)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3602, file: !3603, line: 91, baseType: !3557, size: 64, offset: 448)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3602, file: !3603, line: 92, baseType: !3575, size: 64, offset: 512)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3602, file: !3603, line: 93, baseType: !3566, size: 64, offset: 576)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3602, file: !3603, line: 94, baseType: !3575, size: 64, offset: 640)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3602, file: !3603, line: 95, baseType: !3566, size: 64, offset: 704)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3602, file: !3603, line: 97, baseType: !3575, size: 64, offset: 768)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3602, file: !3603, line: 98, baseType: !3575, size: 64, offset: 832)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3602, file: !3603, line: 100, baseType: !3652, size: 64, offset: 896)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3602, file: !3603, line: 101, baseType: !3575, size: 64, offset: 960)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3602, file: !3603, line: 103, baseType: !3575, size: 64, offset: 1024)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3602, file: !3603, line: 105, baseType: !3575, size: 64, offset: 1088)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3602, file: !3603, line: 107, baseType: !3570, size: 64, offset: 1152)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3602, file: !3603, line: 109, baseType: !3680, size: 64, offset: 1216)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3681, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3682)
!3682 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3603, line: 109, flags: DIFlagFwdDecl)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3602, file: !3603, line: 111, baseType: !3684, size: 64, offset: 1280)
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3603, line: 111, flags: DIFlagFwdDecl)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3602, file: !3603, line: 112, baseType: !961, offset: 1344)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3602, file: !3603, line: 114, baseType: !806, size: 8, offset: 1344)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !544, file: !60, line: 471, baseType: !3615, size: 64, offset: 832)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !544, file: !60, line: 473, baseType: !368, size: 64, offset: 896)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !544, file: !60, line: 475, baseType: !368, size: 64, offset: 960)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !544, file: !60, line: 480, baseType: !1403, size: 192, offset: 1024)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !544, file: !60, line: 484, baseType: !3693, size: 576, offset: 1216)
!3693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !60, line: 361, size: 576, elements: !3694)
!3694 = !{!3695, !3696, !3697, !3698, !3699, !3700}
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3693, file: !60, line: 362, baseType: !530, size: 128)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3693, file: !60, line: 363, baseType: !530, size: 128, offset: 128)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3693, file: !60, line: 364, baseType: !530, size: 128, offset: 256)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3693, file: !60, line: 365, baseType: !530, size: 128, offset: 384)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3693, file: !60, line: 366, baseType: !806, size: 8, offset: 512)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3693, file: !60, line: 367, baseType: !59, size: 32, offset: 544)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !544, file: !60, line: 485, baseType: !3702, size: 2304, offset: 1792)
!3702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !67, line: 565, size: 2304, elements: !3703)
!3703 = !{!3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3757, !3758, !3759, !3760, !3761, !3762, !3763, !3764, !3765, !3766, !3767, !3768, !3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3799, !3803}
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3702, file: !67, line: 566, baseType: !3655, size: 32)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3702, file: !67, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3702, file: !67, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3702, file: !67, line: 569, baseType: !806, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3702, file: !67, line: 570, baseType: !806, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3702, file: !67, line: 571, baseType: !806, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3702, file: !67, line: 572, baseType: !806, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3702, file: !67, line: 573, baseType: !806, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3702, file: !67, line: 574, baseType: !806, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3702, file: !67, line: 575, baseType: !806, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3702, file: !67, line: 576, baseType: !806, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3702, file: !67, line: 577, baseType: !489, size: 32, offset: 64)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3702, file: !67, line: 578, baseType: !560, offset: 96)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3702, file: !67, line: 580, baseType: !530, size: 128, offset: 128)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3702, file: !67, line: 581, baseType: !1726, size: 192, offset: 256)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3702, file: !67, line: 582, baseType: !3720, size: 64, offset: 448)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 64)
!3721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3722, line: 43, size: 1472, elements: !3723)
!3722 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3723 = !{!3724, !3725, !3726, !3727, !3728, !3731, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3721, file: !3722, line: 44, baseType: !387, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3721, file: !3722, line: 45, baseType: !96, size: 32, offset: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3721, file: !3722, line: 46, baseType: !530, size: 128, offset: 128)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3721, file: !3722, line: 47, baseType: !560, offset: 256)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3721, file: !3722, line: 48, baseType: !3729, size: 64, offset: 256)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !67, line: 533, flags: DIFlagFwdDecl)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3721, file: !3722, line: 49, baseType: !3732, size: 320, offset: 320)
!3732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3733, line: 11, size: 320, elements: !3734)
!3733 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3734 = !{!3735, !3736, !3737, !3742}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3732, file: !3733, line: 16, baseType: !955, size: 128)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3732, file: !3733, line: 17, baseType: !648, size: 64, offset: 128)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3732, file: !3733, line: 18, baseType: !3738, size: 64, offset: 192)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = !DISubroutineType(types: !3740)
!3740 = !{null, !3741}
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3732, size: 64)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3732, file: !3733, line: 19, baseType: !489, size: 32, offset: 256)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3721, file: !3722, line: 50, baseType: !648, size: 64, offset: 640)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3721, file: !3722, line: 51, baseType: !1525, size: 64, offset: 704)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3721, file: !3722, line: 52, baseType: !1525, size: 64, offset: 768)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3721, file: !3722, line: 53, baseType: !1525, size: 64, offset: 832)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3721, file: !3722, line: 54, baseType: !1525, size: 64, offset: 896)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3721, file: !3722, line: 55, baseType: !1525, size: 64, offset: 960)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3721, file: !3722, line: 56, baseType: !648, size: 64, offset: 1024)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3721, file: !3722, line: 57, baseType: !648, size: 64, offset: 1088)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3721, file: !3722, line: 58, baseType: !648, size: 64, offset: 1152)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3721, file: !3722, line: 59, baseType: !648, size: 64, offset: 1216)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3721, file: !3722, line: 60, baseType: !648, size: 64, offset: 1280)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3721, file: !3722, line: 61, baseType: !543, size: 64, offset: 1344)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3721, file: !3722, line: 62, baseType: !806, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3721, file: !3722, line: 63, baseType: !806, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3702, file: !67, line: 583, baseType: !806, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3702, file: !67, line: 584, baseType: !806, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3702, file: !67, line: 585, baseType: !806, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3702, file: !67, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3702, file: !67, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3702, file: !67, line: 592, baseType: !1517, size: 512, offset: 576)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3702, file: !67, line: 593, baseType: !741, size: 64, offset: 1088)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3702, file: !67, line: 594, baseType: !2181, size: 256, offset: 1152)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3702, file: !67, line: 595, baseType: !1705, size: 128, offset: 1408)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3702, file: !67, line: 596, baseType: !3729, size: 64, offset: 1536)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3702, file: !67, line: 597, baseType: !519, size: 32, offset: 1600)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3702, file: !67, line: 598, baseType: !519, size: 32, offset: 1632)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3702, file: !67, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3702, file: !67, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3702, file: !67, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3702, file: !67, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3702, file: !67, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3702, file: !67, line: 604, baseType: !806, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3702, file: !67, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3702, file: !67, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3702, file: !67, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3702, file: !67, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3702, file: !67, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3702, file: !67, line: 610, baseType: !7, size: 32, offset: 1696)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3702, file: !67, line: 611, baseType: !66, size: 32, offset: 1728)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3702, file: !67, line: 612, baseType: !74, size: 32, offset: 1760)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3702, file: !67, line: 613, baseType: !96, size: 32, offset: 1792)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3702, file: !67, line: 614, baseType: !96, size: 32, offset: 1824)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3702, file: !67, line: 615, baseType: !741, size: 64, offset: 1856)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3702, file: !67, line: 616, baseType: !741, size: 64, offset: 1920)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3702, file: !67, line: 617, baseType: !741, size: 64, offset: 1984)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3702, file: !67, line: 618, baseType: !741, size: 64, offset: 2048)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3702, file: !67, line: 620, baseType: !3790, size: 64, offset: 2112)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 64)
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !67, line: 536, size: 256, elements: !3792)
!3792 = !{!3793, !3794, !3795, !3796}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3791, file: !67, line: 537, baseType: !560)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3791, file: !67, line: 538, baseType: !7, size: 32)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3791, file: !67, line: 540, baseType: !530, size: 128, offset: 64)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3791, file: !67, line: 543, baseType: !3797, size: 64, offset: 192)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64)
!3798 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !67, line: 534, flags: DIFlagFwdDecl)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3702, file: !67, line: 621, baseType: !3800, size: 64, offset: 2176)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{null, !543, !369}
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3702, file: !67, line: 622, baseType: !3804, size: 64, offset: 2240)
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !67, line: 622, flags: DIFlagFwdDecl)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !544, file: !60, line: 486, baseType: !3807, size: 64, offset: 4096)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !67, line: 642, size: 1792, elements: !3809)
!3809 = !{!3810, !3811, !3812, !3816, !3817, !3818}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3808, file: !67, line: 643, baseType: !3572, size: 1472)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3808, file: !67, line: 644, baseType: !3575, size: 64, offset: 1472)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3808, file: !67, line: 645, baseType: !3813, size: 64, offset: 1536)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 64)
!3814 = !DISubroutineType(types: !3815)
!3815 = !{null, !543, !806}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3808, file: !67, line: 646, baseType: !3575, size: 64, offset: 1600)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3808, file: !67, line: 647, baseType: !3566, size: 64, offset: 1664)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3808, file: !67, line: 648, baseType: !3566, size: 64, offset: 1728)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !544, file: !60, line: 493, baseType: !3820, size: 64, offset: 4160)
!3820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3821, size: 64)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !81, line: 162, size: 1088, elements: !3822)
!3822 = !{!3823, !3824, !3825, !3998, !3999, !4000, !4001, !4002, !4003, !4006, !4007, !4008, !4009, !4010, !4011, !4012}
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3821, file: !81, line: 163, baseType: !530, size: 128)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3821, file: !81, line: 164, baseType: !387, size: 64, offset: 128)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3821, file: !81, line: 165, baseType: !3826, size: 64, offset: 192)
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3827, size: 64)
!3827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3828)
!3828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !81, line: 105, size: 640, elements: !3829)
!3829 = !{!3830, !3948, !3959, !3964, !3968, !3975, !3979, !3983, !3990, !3994}
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3828, file: !81, line: 106, baseType: !3831, size: 64)
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = !DISubroutineType(types: !3833)
!3833 = !{!96, !3820, !3834, !80}
!3834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3835, size: 64)
!3835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3836, line: 51, size: 1344, elements: !3837)
!3836 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3837 = !{!3838, !3839, !3841, !3842, !3932, !3941, !3942, !3943, !3944, !3945, !3946, !3947}
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3835, file: !3836, line: 52, baseType: !387, size: 64)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3835, file: !3836, line: 53, baseType: !3840, size: 32, offset: 64)
!3840 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3836, line: 28, baseType: !489)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3835, file: !3836, line: 54, baseType: !387, size: 64, offset: 128)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3835, file: !3836, line: 55, baseType: !3843, size: 192, offset: 192)
!3843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3844, line: 17, size: 192, elements: !3845)
!3844 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3845 = !{!3846, !3848, !3931}
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3843, file: !3844, line: 18, baseType: !3847, size: 64)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3843, size: 64)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3843, file: !3844, line: 19, baseType: !3849, size: 64, offset: 64)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3851)
!3851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3844, line: 110, size: 1152, elements: !3852)
!3852 = !{!3853, !3857, !3861, !3867, !3873, !3877, !3881, !3886, !3890, !3891, !3895, !3899, !3903, !3914, !3915, !3916, !3917, !3927}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3851, file: !3844, line: 111, baseType: !3854, size: 64)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{!3847, !3847}
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3851, file: !3844, line: 112, baseType: !3858, size: 64, offset: 64)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = !DISubroutineType(types: !3860)
!3860 = !{null, !3847}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3851, file: !3844, line: 113, baseType: !3862, size: 64, offset: 128)
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = !DISubroutineType(types: !3864)
!3864 = !{!806, !3865}
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3843)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3851, file: !3844, line: 114, baseType: !3868, size: 64, offset: 192)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{!2351, !3865, !3871}
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !544)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3851, file: !3844, line: 116, baseType: !3874, size: 64, offset: 256)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DISubroutineType(types: !3876)
!3876 = !{!806, !3865, !387}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3851, file: !3844, line: 118, baseType: !3878, size: 64, offset: 320)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{!96, !3865, !387, !7, !368, !645}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3851, file: !3844, line: 123, baseType: !3882, size: 64, offset: 384)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{!96, !3865, !387, !3885, !645}
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3851, file: !3844, line: 126, baseType: !3887, size: 64, offset: 448)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{!387, !3865}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3851, file: !3844, line: 127, baseType: !3887, size: 64, offset: 512)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3851, file: !3844, line: 128, baseType: !3892, size: 64, offset: 576)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!3847, !3865}
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3851, file: !3844, line: 130, baseType: !3896, size: 64, offset: 640)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{!3847, !3865, !3847}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3851, file: !3844, line: 133, baseType: !3900, size: 64, offset: 704)
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = !DISubroutineType(types: !3902)
!3902 = !{!3847, !3865, !387}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3851, file: !3844, line: 135, baseType: !3904, size: 64, offset: 768)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!96, !3865, !387, !387, !7, !7, !3907}
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3844, line: 43, size: 640, elements: !3909)
!3909 = !{!3910, !3911, !3912}
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3908, file: !3844, line: 44, baseType: !3847, size: 64)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3908, file: !3844, line: 45, baseType: !7, size: 32, offset: 64)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3908, file: !3844, line: 46, baseType: !3913, size: 512, offset: 128)
!3913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !741, size: 512, elements: !500)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3851, file: !3844, line: 140, baseType: !3896, size: 64, offset: 832)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3851, file: !3844, line: 143, baseType: !3892, size: 64, offset: 896)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3851, file: !3844, line: 145, baseType: !3854, size: 64, offset: 960)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3851, file: !3844, line: 146, baseType: !3918, size: 64, offset: 1024)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DISubroutineType(types: !3920)
!3920 = !{!96, !3865, !3921}
!3921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3922, size: 64)
!3922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3844, line: 29, size: 128, elements: !3923)
!3923 = !{!3924, !3925, !3926}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3922, file: !3844, line: 30, baseType: !7, size: 32)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3922, file: !3844, line: 31, baseType: !7, size: 32, offset: 32)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3922, file: !3844, line: 32, baseType: !3865, size: 64, offset: 64)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3851, file: !3844, line: 148, baseType: !3928, size: 64, offset: 1088)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{!96, !3865, !543}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3843, file: !3844, line: 20, baseType: !543, size: 64, offset: 128)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3835, file: !3836, line: 57, baseType: !3933, size: 64, offset: 384)
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3934, size: 64)
!3934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3836, line: 31, size: 704, elements: !3935)
!3935 = !{!3936, !3937, !3938, !3939, !3940}
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3934, file: !3836, line: 32, baseType: !377, size: 64)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3934, file: !3836, line: 33, baseType: !96, size: 32, offset: 64)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3934, file: !3836, line: 34, baseType: !368, size: 64, offset: 128)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3934, file: !3836, line: 35, baseType: !3933, size: 64, offset: 192)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3934, file: !3836, line: 43, baseType: !667, size: 448, offset: 256)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3835, file: !3836, line: 58, baseType: !3933, size: 64, offset: 448)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3835, file: !3836, line: 59, baseType: !3834, size: 64, offset: 512)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3835, file: !3836, line: 60, baseType: !3834, size: 64, offset: 576)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3835, file: !3836, line: 61, baseType: !3834, size: 64, offset: 640)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3835, file: !3836, line: 63, baseType: !547, size: 512, offset: 704)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3835, file: !3836, line: 65, baseType: !648, size: 64, offset: 1216)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3835, file: !3836, line: 66, baseType: !368, size: 64, offset: 1280)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3828, file: !81, line: 108, baseType: !3949, size: 64, offset: 64)
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DISubroutineType(types: !3951)
!3951 = !{!96, !3820, !3952, !80}
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !81, line: 63, size: 640, elements: !3954)
!3954 = !{!3955, !3956, !3957}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3953, file: !81, line: 64, baseType: !3847, size: 64)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3953, file: !81, line: 65, baseType: !96, size: 32, offset: 64)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3953, file: !81, line: 66, baseType: !3958, size: 512, offset: 96)
!3958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 512, elements: !1957)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3828, file: !81, line: 110, baseType: !3960, size: 64, offset: 128)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{!96, !3820, !7, !3963}
!3963 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !367, line: 164, baseType: !648)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3828, file: !81, line: 111, baseType: !3965, size: 64, offset: 192)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{null, !3820, !7}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3828, file: !81, line: 112, baseType: !3969, size: 64, offset: 256)
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = !DISubroutineType(types: !3971)
!3971 = !{!96, !3820, !3834, !3972, !7, !3974, !441}
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !489)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3828, file: !81, line: 117, baseType: !3976, size: 64, offset: 320)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = !DISubroutineType(types: !3978)
!3978 = !{!96, !3820, !7, !7, !368}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3828, file: !81, line: 119, baseType: !3980, size: 64, offset: 384)
!3980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3981, size: 64)
!3981 = !DISubroutineType(types: !3982)
!3982 = !{null, !3820, !7, !7}
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3828, file: !81, line: 121, baseType: !3984, size: 64, offset: 448)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!96, !3820, !3987, !806}
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3989, line: 11, flags: DIFlagFwdDecl)
!3989 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3828, file: !81, line: 122, baseType: !3991, size: 64, offset: 512)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{null, !3820, !3987}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3828, file: !81, line: 123, baseType: !3995, size: 64, offset: 576)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!96, !3820, !3952, !3974, !441}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3821, file: !81, line: 166, baseType: !368, size: 64, offset: 256)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3821, file: !81, line: 167, baseType: !7, size: 32, offset: 320)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3821, file: !81, line: 168, baseType: !7, size: 32, offset: 352)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3821, file: !81, line: 171, baseType: !3847, size: 64, offset: 384)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3821, file: !81, line: 172, baseType: !80, size: 32, offset: 448)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3821, file: !81, line: 173, baseType: !4004, size: 64, offset: 512)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !81, line: 134, flags: DIFlagFwdDecl)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3821, file: !81, line: 175, baseType: !3820, size: 64, offset: 576)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3821, file: !81, line: 182, baseType: !3963, size: 64, offset: 640)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3821, file: !81, line: 183, baseType: !7, size: 32, offset: 704)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3821, file: !81, line: 184, baseType: !7, size: 32, offset: 736)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3821, file: !81, line: 185, baseType: !1055, size: 128, offset: 768)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3821, file: !81, line: 186, baseType: !1403, size: 192, offset: 896)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3821, file: !81, line: 187, baseType: !4013, offset: 1088)
!4013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2553)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !544, file: !60, line: 499, baseType: !530, size: 128, offset: 4224)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !544, file: !60, line: 502, baseType: !4016, size: 64, offset: 4352)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4018)
!4018 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !60, line: 502, flags: DIFlagFwdDecl)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !544, file: !60, line: 504, baseType: !4020, size: 64, offset: 4416)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !544, file: !60, line: 505, baseType: !741, size: 64, offset: 4480)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !544, file: !60, line: 510, baseType: !741, size: 64, offset: 4544)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !544, file: !60, line: 511, baseType: !4024, size: 64, offset: 4608)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4026)
!4026 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !60, line: 511, flags: DIFlagFwdDecl)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !544, file: !60, line: 513, baseType: !4028, size: 64, offset: 4672)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !60, line: 288, size: 128, elements: !4030)
!4030 = !{!4031, !4032}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4029, file: !60, line: 293, baseType: !7, size: 32)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4029, file: !60, line: 294, baseType: !648, size: 64, offset: 64)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !544, file: !60, line: 515, baseType: !530, size: 128, offset: 4736)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !544, file: !60, line: 526, baseType: !4035, offset: 4864)
!4035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4036, line: 5, elements: !574)
!4036 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !544, file: !60, line: 528, baseType: !3834, size: 64, offset: 4864)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !544, file: !60, line: 529, baseType: !3847, size: 64, offset: 4928)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !544, file: !60, line: 534, baseType: !829, size: 32, offset: 4992)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !544, file: !60, line: 535, baseType: !489, size: 32, offset: 5024)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !544, file: !60, line: 537, baseType: !560, offset: 5056)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !544, file: !60, line: 538, baseType: !530, size: 128, offset: 5056)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !544, file: !60, line: 540, baseType: !4044, size: 64, offset: 5184)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4046, line: 54, size: 960, elements: !4047)
!4046 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4047 = !{!4048, !4049, !4050, !4051, !4052, !4053, !4054, !4058, !4062, !4063, !4064, !4065, !4069, !4073, !4074}
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4045, file: !4046, line: 55, baseType: !387, size: 64)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4045, file: !4046, line: 56, baseType: !390, size: 64, offset: 64)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4045, file: !4046, line: 58, baseType: !652, size: 64, offset: 128)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4045, file: !4046, line: 59, baseType: !652, size: 64, offset: 192)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4045, file: !4046, line: 60, baseType: !553, size: 64, offset: 256)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4045, file: !4046, line: 62, baseType: !3557, size: 64, offset: 320)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4045, file: !4046, line: 63, baseType: !4055, size: 64, offset: 384)
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DISubroutineType(types: !4057)
!4057 = !{!377, !543, !3564}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4045, file: !4046, line: 65, baseType: !4059, size: 64, offset: 448)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{null, !4044}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4045, file: !4046, line: 66, baseType: !3566, size: 64, offset: 512)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4045, file: !4046, line: 68, baseType: !3575, size: 64, offset: 576)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4045, file: !4046, line: 70, baseType: !3365, size: 64, offset: 640)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4045, file: !4046, line: 71, baseType: !4066, size: 64, offset: 704)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{!2351, !543}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4045, file: !4046, line: 73, baseType: !4070, size: 64, offset: 768)
!4070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4071 = !DISubroutineType(types: !4072)
!4072 = !{null, !543, !3397, !3398}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4045, file: !4046, line: 75, baseType: !3570, size: 64, offset: 832)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4045, file: !4046, line: 77, baseType: !3684, size: 64, offset: 896)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !544, file: !60, line: 541, baseType: !652, size: 64, offset: 5248)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !544, file: !60, line: 543, baseType: !3566, size: 64, offset: 5312)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !544, file: !60, line: 544, baseType: !4078, size: 64, offset: 5376)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !60, line: 45, flags: DIFlagFwdDecl)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !544, file: !60, line: 545, baseType: !4081, size: 64, offset: 5440)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !60, line: 47, flags: DIFlagFwdDecl)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !544, file: !60, line: 547, baseType: !806, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !544, file: !60, line: 548, baseType: !806, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !544, file: !60, line: 549, baseType: !806, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !544, file: !60, line: 550, baseType: !806, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !526, file: !278, line: 111, baseType: !390, size: 64, offset: 576)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_shared", scope: !526, file: !278, line: 113, baseType: !96, size: 32, offset: 640)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_dvbdev", scope: !526, file: !278, line: 114, baseType: !4090, size: 64, offset: 704)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_device", file: !278, line: 157, size: 704, elements: !4092)
!4092 = !{!4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4107}
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "list_head", scope: !4091, file: !278, line: 158, baseType: !530, size: 128)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !4091, file: !278, line: 159, baseType: !3023, size: 64, offset: 128)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "adapter", scope: !4091, file: !278, line: 160, baseType: !525, size: 64, offset: 192)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4091, file: !278, line: 161, baseType: !277, size: 32, offset: 256)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4091, file: !278, line: 162, baseType: !96, size: 32, offset: 288)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4091, file: !278, line: 163, baseType: !489, size: 32, offset: 320)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !4091, file: !278, line: 167, baseType: !96, size: 32, offset: 352)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !4091, file: !278, line: 168, baseType: !96, size: 32, offset: 384)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !4091, file: !278, line: 169, baseType: !96, size: 32, offset: 416)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4091, file: !278, line: 171, baseType: !1705, size: 128, offset: 448)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "kernel_ioctl", scope: !4091, file: !278, line: 173, baseType: !4104, size: 64, offset: 576)
!4104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4105, size: 64)
!4105 = !DISubroutineType(types: !4106)
!4106 = !{!96, !676, !7, !368}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4091, file: !278, line: 187, baseType: !368, size: 64, offset: 640)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_lock", scope: !526, file: !278, line: 115, baseType: !1403, size: 192, offset: 768)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "demodulator_priv", scope: !507, file: !145, line: 690, baseType: !368, size: 64, offset: 6144)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_priv", scope: !507, file: !145, line: 691, baseType: !368, size: 64, offset: 6208)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "frontend_priv", scope: !507, file: !145, line: 692, baseType: !368, size: 64, offset: 6272)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "sec_priv", scope: !507, file: !145, line: 693, baseType: !368, size: 64, offset: 6336)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "analog_demod_priv", scope: !507, file: !145, line: 694, baseType: !368, size: 64, offset: 6400)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "dtv_property_cache", scope: !507, file: !145, line: 695, baseType: !4115, size: 3648, offset: 6464)
!4115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_frontend_properties", file: !145, line: 586, size: 3648, elements: !4116)
!4116 = !{!4117, !4118, !4119, !4120, !4121, !4122, !4123, !4124, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4180, !4181, !4182, !4183, !4184, !4185, !4186}
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !4115, file: !145, line: 587, baseType: !489, size: 32)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !4115, file: !145, line: 588, baseType: !151, size: 32, offset: 32)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "voltage", scope: !4115, file: !145, line: 590, baseType: !167, size: 32, offset: 64)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "sectone", scope: !4115, file: !145, line: 591, baseType: !172, size: 32, offset: 96)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "inversion", scope: !4115, file: !145, line: 592, baseType: !176, size: 32, offset: 128)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "fec_inner", scope: !4115, file: !145, line: 593, baseType: !181, size: 32, offset: 160)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_mode", scope: !4115, file: !145, line: 594, baseType: !196, size: 32, offset: 192)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_hz", scope: !4115, file: !145, line: 595, baseType: !489, size: 32, offset: 224)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "guard_interval", scope: !4115, file: !145, line: 596, baseType: !207, size: 32, offset: 256)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "hierarchy", scope: !4115, file: !145, line: 597, baseType: !220, size: 32, offset: 288)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate", scope: !4115, file: !145, line: 598, baseType: !489, size: 32, offset: 320)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "code_rate_HP", scope: !4115, file: !145, line: 599, baseType: !181, size: 32, offset: 352)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "code_rate_LP", scope: !4115, file: !145, line: 600, baseType: !181, size: 32, offset: 384)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "pilot", scope: !4115, file: !145, line: 602, baseType: !227, size: 32, offset: 416)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "rolloff", scope: !4115, file: !145, line: 603, baseType: !232, size: 32, offset: 448)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "delivery_system", scope: !4115, file: !145, line: 605, baseType: !238, size: 32, offset: 480)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "interleaving", scope: !4115, file: !145, line: 607, baseType: !259, size: 32, offset: 512)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_partial_reception", scope: !4115, file: !145, line: 610, baseType: !419, size: 8, offset: 544)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_mode", scope: !4115, file: !145, line: 611, baseType: !419, size: 8, offset: 552)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_subchannel", scope: !4115, file: !145, line: 612, baseType: !419, size: 8, offset: 560)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_segment_idx", scope: !4115, file: !145, line: 613, baseType: !489, size: 32, offset: 576)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_segment_count", scope: !4115, file: !145, line: 614, baseType: !489, size: 32, offset: 608)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_layer_enabled", scope: !4115, file: !145, line: 615, baseType: !419, size: 8, offset: 640)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !4115, file: !145, line: 621, baseType: !4141, size: 384, offset: 672)
!4141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4142, size: 384, elements: !601)
!4142 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4115, file: !145, line: 616, size: 128, elements: !4143)
!4143 = !{!4144, !4145, !4146, !4147}
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "segment_count", scope: !4142, file: !145, line: 617, baseType: !419, size: 8)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !4142, file: !145, line: 618, baseType: !181, size: 32, offset: 32)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !4142, file: !145, line: 619, baseType: !151, size: 32, offset: 64)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "interleaving", scope: !4142, file: !145, line: 620, baseType: !419, size: 8, offset: 96)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !4115, file: !145, line: 624, baseType: !489, size: 32, offset: 1056)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "scrambling_sequence_index", scope: !4115, file: !145, line: 627, baseType: !489, size: 32, offset: 1088)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_fic_ver", scope: !4115, file: !145, line: 630, baseType: !419, size: 8, offset: 1120)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_parade_id", scope: !4115, file: !145, line: 631, baseType: !419, size: 8, offset: 1128)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_nog", scope: !4115, file: !145, line: 632, baseType: !419, size: 8, offset: 1136)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_tnog", scope: !4115, file: !145, line: 633, baseType: !419, size: 8, offset: 1144)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sgn", scope: !4115, file: !145, line: 634, baseType: !419, size: 8, offset: 1152)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_prc", scope: !4115, file: !145, line: 635, baseType: !419, size: 8, offset: 1160)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_frame_mode", scope: !4115, file: !145, line: 637, baseType: !419, size: 8, offset: 1168)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_frame_ensemble", scope: !4115, file: !145, line: 638, baseType: !419, size: 8, offset: 1176)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_code_mode_pri", scope: !4115, file: !145, line: 639, baseType: !419, size: 8, offset: 1184)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_code_mode_sec", scope: !4115, file: !145, line: 640, baseType: !419, size: 8, offset: 1192)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_block_mode", scope: !4115, file: !145, line: 641, baseType: !419, size: 8, offset: 1200)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_a", scope: !4115, file: !145, line: 642, baseType: !419, size: 8, offset: 1208)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_b", scope: !4115, file: !145, line: 643, baseType: !419, size: 8, offset: 1216)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_c", scope: !4115, file: !145, line: 644, baseType: !419, size: 8, offset: 1224)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_d", scope: !4115, file: !145, line: 645, baseType: !419, size: 8, offset: 1232)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "lna", scope: !4115, file: !145, line: 647, baseType: !489, size: 32, offset: 1248)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !4115, file: !145, line: 650, baseType: !4167, size: 296, offset: 1280)
!4167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_fe_stats", file: !101, line: 825, size: 296, elements: !4168)
!4168 = !{!4169, !4170}
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4167, file: !101, line: 826, baseType: !420, size: 8)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !4167, file: !101, line: 827, baseType: !4171, size: 288, offset: 8)
!4171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4172, size: 288, elements: !1385)
!4172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_stats", file: !101, line: 803, size: 72, elements: !4173)
!4173 = !{!4174, !4175}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !4172, file: !101, line: 804, baseType: !420, size: 8)
!4175 = !DIDerivedType(tag: DW_TAG_member, scope: !4172, file: !101, line: 805, baseType: !4176, size: 64, offset: 8)
!4176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4172, file: !101, line: 805, size: 64, elements: !4177)
!4177 = !{!4178, !4179}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "uvalue", scope: !4176, file: !101, line: 806, baseType: !742, size: 64)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "svalue", scope: !4176, file: !101, line: 807, baseType: !856, size: 64)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "cnr", scope: !4115, file: !145, line: 651, baseType: !4167, size: 296, offset: 1576)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "pre_bit_error", scope: !4115, file: !145, line: 652, baseType: !4167, size: 296, offset: 1872)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "pre_bit_count", scope: !4115, file: !145, line: 653, baseType: !4167, size: 296, offset: 2168)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "post_bit_error", scope: !4115, file: !145, line: 654, baseType: !4167, size: 296, offset: 2464)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "post_bit_count", scope: !4115, file: !145, line: 655, baseType: !4167, size: 296, offset: 2760)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "block_error", scope: !4115, file: !145, line: 656, baseType: !4167, size: 296, offset: 3056)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "block_count", scope: !4115, file: !145, line: 657, baseType: !4167, size: 296, offset: 3352)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !507, file: !145, line: 698, baseType: !4188, size: 64, offset: 10112)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!96, !368, !96, !96, !96}
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !507, file: !145, line: 699, baseType: !96, size: 32, offset: 10176)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !507, file: !145, line: 700, baseType: !7, size: 32, offset: 10208)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !479, file: !145, line: 441, baseType: !503, size: 64, offset: 1408)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "release_sec", scope: !479, file: !145, line: 442, baseType: !503, size: 64, offset: 1472)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !479, file: !145, line: 444, baseType: !4196, size: 64, offset: 1536)
!4196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4197, size: 64)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{!96, !506}
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !479, file: !145, line: 445, baseType: !4196, size: 64, offset: 1600)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !479, file: !145, line: 447, baseType: !4201, size: 64, offset: 1664)
!4201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4202, size: 64)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!96, !506, !4204, !96}
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !479, file: !145, line: 450, baseType: !4207, size: 64, offset: 1728)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!96, !506, !806, !7, !441, !4210}
!4210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "get_frontend_algo", scope: !479, file: !145, line: 457, baseType: !4212, size: 64, offset: 1792)
!4212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4213, size: 64)
!4213 = !DISubroutineType(types: !4214)
!4214 = !{!144, !506}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "set_frontend", scope: !479, file: !145, line: 460, baseType: !4196, size: 64, offset: 1856)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "get_tune_settings", scope: !479, file: !145, line: 461, baseType: !4217, size: 64, offset: 1920)
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4218, size: 64)
!4218 = !DISubroutineType(types: !4219)
!4219 = !{!96, !506, !4220}
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_tune_settings", file: !145, line: 69, size: 96, elements: !4222)
!4222 = !{!4223, !4224, !4225}
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "min_delay_ms", scope: !4221, file: !145, line: 70, baseType: !96, size: 32)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "step_size", scope: !4221, file: !145, line: 71, baseType: !96, size: 32, offset: 32)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "max_drift", scope: !4221, file: !145, line: 72, baseType: !96, size: 32, offset: 64)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "get_frontend", scope: !479, file: !145, line: 463, baseType: !4227, size: 64, offset: 1984)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{!96, !506, !4230}
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "read_status", scope: !479, file: !145, line: 466, baseType: !4232, size: 64, offset: 2048)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = !DISubroutineType(types: !4234)
!4234 = !{!96, !506, !4210}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "read_ber", scope: !479, file: !145, line: 467, baseType: !4236, size: 64, offset: 2112)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!96, !506, !1636}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "read_signal_strength", scope: !479, file: !145, line: 468, baseType: !4240, size: 64, offset: 2176)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4241 = !DISubroutineType(types: !4242)
!4242 = !{!96, !506, !4243}
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "read_snr", scope: !479, file: !145, line: 469, baseType: !4240, size: 64, offset: 2240)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "read_ucblocks", scope: !479, file: !145, line: 470, baseType: !4236, size: 64, offset: 2304)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_reset_overload", scope: !479, file: !145, line: 472, baseType: !4196, size: 64, offset: 2368)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_send_master_cmd", scope: !479, file: !145, line: 473, baseType: !4248, size: 64, offset: 2432)
!4248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4249, size: 64)
!4249 = !DISubroutineType(types: !4250)
!4250 = !{!96, !506, !4251}
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_diseqc_master_cmd", file: !101, line: 173, size: 56, elements: !4253)
!4253 = !{!4254, !4256}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4252, file: !101, line: 174, baseType: !4255, size: 48)
!4255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 48, elements: !539)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !4252, file: !101, line: 175, baseType: !420, size: 8, offset: 48)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_recv_slave_reply", scope: !479, file: !145, line: 474, baseType: !4258, size: 64, offset: 2496)
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4259, size: 64)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{!96, !506, !4261}
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_diseqc_slave_reply", file: !101, line: 195, size: 96, elements: !4263)
!4263 = !{!4264, !4266, !4267}
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4262, file: !101, line: 196, baseType: !4265, size: 32)
!4265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 32, elements: !1385)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !4262, file: !101, line: 197, baseType: !420, size: 8, offset: 32)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4262, file: !101, line: 198, baseType: !96, size: 32, offset: 64)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_send_burst", scope: !479, file: !145, line: 475, baseType: !4269, size: 64, offset: 2560)
!4269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4270, size: 64)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{!96, !506, !265}
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "set_tone", scope: !479, file: !145, line: 477, baseType: !4273, size: 64, offset: 2624)
!4273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4274, size: 64)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!96, !506, !172}
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "set_voltage", scope: !479, file: !145, line: 478, baseType: !4277, size: 64, offset: 2688)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!96, !506, !167}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "enable_high_lnb_voltage", scope: !479, file: !145, line: 480, baseType: !4281, size: 64, offset: 2752)
!4281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4282, size: 64)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{!96, !506, !376}
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "dishnetwork_send_legacy_command", scope: !479, file: !145, line: 481, baseType: !4285, size: 64, offset: 2816)
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4286, size: 64)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!96, !506, !648}
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_gate_ctrl", scope: !479, file: !145, line: 482, baseType: !4289, size: 64, offset: 2880)
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DISubroutineType(types: !4291)
!4291 = !{!96, !506, !96}
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "ts_bus_ctrl", scope: !479, file: !145, line: 483, baseType: !4289, size: 64, offset: 2944)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "set_lna", scope: !479, file: !145, line: 484, baseType: !4196, size: 64, offset: 3008)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "search", scope: !479, file: !145, line: 490, baseType: !4295, size: 64, offset: 3072)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = !DISubroutineType(types: !4297)
!4297 = !{!269, !506}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_ops", scope: !479, file: !145, line: 492, baseType: !4299, size: 2304, offset: 3136)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_tuner_ops", file: !145, line: 226, size: 2304, elements: !4300)
!4300 = !{!4301, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4328, !4332, !4333, !4334, !4335, !4336, !4337, !4342, !4347, !4351}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4299, file: !145, line: 228, baseType: !4302, size: 1216)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_tuner_info", file: !145, line: 88, size: 1216, elements: !4303)
!4303 = !{!4304, !4305, !4306, !4307, !4308, !4309, !4310}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4302, file: !145, line: 89, baseType: !485, size: 1024)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_min_hz", scope: !4302, file: !145, line: 91, baseType: !489, size: 32, offset: 1024)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_max_hz", scope: !4302, file: !145, line: 92, baseType: !489, size: 32, offset: 1056)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_step_hz", scope: !4302, file: !145, line: 93, baseType: !489, size: 32, offset: 1088)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_min", scope: !4302, file: !145, line: 95, baseType: !489, size: 32, offset: 1120)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_max", scope: !4302, file: !145, line: 96, baseType: !489, size: 32, offset: 1152)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_step", scope: !4302, file: !145, line: 97, baseType: !489, size: 32, offset: 1184)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4299, file: !145, line: 230, baseType: !503, size: 64, offset: 1216)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !4299, file: !145, line: 231, baseType: !4196, size: 64, offset: 1280)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !4299, file: !145, line: 232, baseType: !4196, size: 64, offset: 1344)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4299, file: !145, line: 233, baseType: !4196, size: 64, offset: 1408)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4299, file: !145, line: 234, baseType: !4196, size: 64, offset: 1472)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "set_params", scope: !4299, file: !145, line: 237, baseType: !4196, size: 64, offset: 1536)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "set_analog_params", scope: !4299, file: !145, line: 238, baseType: !4318, size: 64, offset: 1600)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{!96, !506, !4321}
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_parameters", file: !145, line: 114, size: 192, elements: !4323)
!4323 = !{!4324, !4325, !4326, !4327}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !4322, file: !145, line: 115, baseType: !7, size: 32)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4322, file: !145, line: 116, baseType: !7, size: 32, offset: 32)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "audmode", scope: !4322, file: !145, line: 117, baseType: !7, size: 32, offset: 64)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "std", scope: !4322, file: !145, line: 118, baseType: !741, size: 64, offset: 128)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !4299, file: !145, line: 240, baseType: !4329, size: 64, offset: 1664)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DISubroutineType(types: !4331)
!4331 = !{!96, !506, !368}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "get_frequency", scope: !4299, file: !145, line: 242, baseType: !4236, size: 64, offset: 1728)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "get_bandwidth", scope: !4299, file: !145, line: 243, baseType: !4236, size: 64, offset: 1792)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "get_if_frequency", scope: !4299, file: !145, line: 244, baseType: !4236, size: 64, offset: 1856)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !4299, file: !145, line: 248, baseType: !4236, size: 64, offset: 1920)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "get_rf_strength", scope: !4299, file: !145, line: 249, baseType: !4240, size: 64, offset: 1984)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "get_afc", scope: !4299, file: !145, line: 250, baseType: !4338, size: 64, offset: 2048)
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4339, size: 64)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{!96, !506, !4341}
!4341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "calc_regs", scope: !4299, file: !145, line: 258, baseType: !4343, size: 64, offset: 2112)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 64)
!4344 = !DISubroutineType(types: !4345)
!4345 = !{!96, !506, !4346, !96}
!4346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !419, size: 64)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "set_frequency", scope: !4299, file: !145, line: 267, baseType: !4348, size: 64, offset: 2176)
!4348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4349, size: 64)
!4349 = !DISubroutineType(types: !4350)
!4350 = !{!96, !506, !489}
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "set_bandwidth", scope: !4299, file: !145, line: 268, baseType: !4348, size: 64, offset: 2240)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "analog_ops", scope: !479, file: !145, line: 493, baseType: !4353, size: 576, offset: 5440)
!4353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_demod_ops", file: !145, line: 302, size: 576, elements: !4354)
!4354 = !{!4355, !4359, !4363, !4364, !4365, !4366, !4367, !4368, !4369}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4353, file: !145, line: 304, baseType: !4356, size: 64)
!4356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_demod_info", file: !145, line: 276, size: 64, elements: !4357)
!4357 = !{!4358}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4356, file: !145, line: 277, baseType: !377, size: 64)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "set_params", scope: !4353, file: !145, line: 306, baseType: !4360, size: 64, offset: 64)
!4360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4361, size: 64)
!4361 = !DISubroutineType(types: !4362)
!4362 = !{null, !506, !4321}
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "has_signal", scope: !4353, file: !145, line: 308, baseType: !4240, size: 64, offset: 128)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "get_afc", scope: !4353, file: !145, line: 309, baseType: !4338, size: 64, offset: 192)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_status", scope: !4353, file: !145, line: 310, baseType: !503, size: 64, offset: 256)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "standby", scope: !4353, file: !145, line: 311, baseType: !503, size: 64, offset: 320)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4353, file: !145, line: 312, baseType: !503, size: 64, offset: 384)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_gate_ctrl", scope: !4353, file: !145, line: 313, baseType: !4289, size: 64, offset: 448)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !4353, file: !145, line: 316, baseType: !4329, size: 64, offset: 512)
!4370 = !DIGlobalVariableExpression(var: !4371, expr: !DIExpression())
!4371 = distinct !DIGlobalVariable(name: "stb0899_dvbsrf_tab", scope: !2, file: !3, line: 61, type: !4372, isLocal: true, isDefinition: true)
!4372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4373, size: 1984, elements: !4378)
!4373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4374)
!4374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stb0899_tab", file: !290, line: 130, size: 64, elements: !4375)
!4375 = !{!4376, !4377}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !4374, file: !290, line: 131, baseType: !369, size: 32)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4374, file: !290, line: 132, baseType: !369, size: 32, offset: 32)
!4378 = !{!4379}
!4379 = !DISubrange(count: 31)
!4380 = !DIGlobalVariableExpression(var: !4381, expr: !DIExpression())
!4381 = distinct !DIGlobalVariable(name: "stb0899_dvbs2rf_tab", scope: !2, file: !3, line: 102, type: !4382, isLocal: true, isDefinition: true)
!4382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4373, size: 1536, elements: !4383)
!4383 = !{!4384}
!4384 = !DISubrange(count: 24)
!4385 = !DIGlobalVariableExpression(var: !4386, expr: !DIExpression())
!4386 = distinct !DIGlobalVariable(name: "stb0899_cn_tab", scope: !2, file: !3, line: 31, type: !4387, isLocal: true, isDefinition: true)
!4387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4373, size: 1280, elements: !472)
!4388 = !DIGlobalVariableExpression(var: !4389, expr: !DIExpression())
!4389 = distinct !DIGlobalVariable(name: "stb0899_quant_tab", scope: !2, file: !3, line: 130, type: !4390, isLocal: true, isDefinition: true)
!4390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4374, size: 2496, elements: !4391)
!4391 = !{!4392}
!4392 = !DISubrange(count: 39)
!4393 = !DIGlobalVariableExpression(var: !4394, expr: !DIExpression())
!4394 = distinct !DIGlobalVariable(name: "stb0899_est_tab", scope: !2, file: !3, line: 173, type: !4395, isLocal: true, isDefinition: true)
!4395 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4374, size: 2368, elements: !4396)
!4396 = !{!4397}
!4397 = !DISubrange(count: 37)
!4398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 128, elements: !1957)
!4399 = !{i32 7, !"Dwarf Version", i32 4}
!4400 = !{i32 2, !"Debug Info Version", i32 3}
!4401 = !{i32 1, !"wchar_size", i32 2}
!4402 = !{i32 1, !"Code Model", i32 2}
!4403 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4404 = distinct !DISubprogram(name: "stb0899_read_reg", scope: !3, file: !3, line: 250, type: !4405, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !574)
!4405 = !DISubroutineType(types: !4406)
!4406 = !{!96, !4407, !7}
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 64)
!4408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stb0899_state", file: !290, line: 197, size: 11712, elements: !4409)
!4409 = !{!4410, !4533, !4595, !4596, !4597, !4634, !4635, !4641, !4642}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "i2c", scope: !4408, file: !290, line: 198, baseType: !4411, size: 64)
!4411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4412, size: 64)
!4412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter", file: !4413, line: 695, size: 7552, elements: !4414)
!4413 = !DIFile(filename: "./include/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!4414 = !{!4415, !4416, !4417, !4454, !4455, !4469, !4476, !4477, !4478, !4479, !4480, !4481, !4482, !4486, !4487, !4488, !4489, !4521, !4532}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4412, file: !4413, line: 696, baseType: !390, size: 64)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4412, file: !4413, line: 697, baseType: !7, size: 32, offset: 64)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !4412, file: !4413, line: 698, baseType: !4418, size: 64, offset: 128)
!4418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4419, size: 64)
!4419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4420)
!4420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_algorithm", file: !4413, line: 519, size: 320, elements: !4421)
!4421 = !{!4422, !4435, !4436, !4449, !4450}
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer", scope: !4420, file: !4413, line: 529, baseType: !4423, size: 64)
!4423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4424, size: 64)
!4424 = !DISubroutineType(types: !4425)
!4425 = !{!96, !4411, !4426, !96}
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_msg", file: !4428, line: 69, size: 128, elements: !4429)
!4428 = !DIFile(filename: "./include/uapi/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!4429 = !{!4430, !4431, !4432, !4433}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4427, file: !4428, line: 70, baseType: !415, size: 16)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4427, file: !4428, line: 71, baseType: !415, size: 16, offset: 16)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4427, file: !4428, line: 84, baseType: !415, size: 16, offset: 32)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4427, file: !4428, line: 85, baseType: !4434, size: 64, offset: 64)
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer_atomic", scope: !4420, file: !4413, line: 531, baseType: !4423, size: 64, offset: 64)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer", scope: !4420, file: !4413, line: 533, baseType: !4437, size: 64, offset: 128)
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4438, size: 64)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{!96, !4411, !414, !416, !378, !419, !96, !4440}
!4440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4441, size: 64)
!4441 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "i2c_smbus_data", file: !4428, line: 135, size: 272, elements: !4442)
!4442 = !{!4443, !4444, !4445}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !4441, file: !4428, line: 136, baseType: !420, size: 8)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !4441, file: !4428, line: 137, baseType: !415, size: 16)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4441, file: !4428, line: 138, baseType: !4446, size: 272)
!4446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !420, size: 272, elements: !4447)
!4447 = !{!4448}
!4448 = !DISubrange(count: 34)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer_atomic", scope: !4420, file: !4413, line: 536, baseType: !4437, size: 64, offset: 192)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "functionality", scope: !4420, file: !4413, line: 541, baseType: !4451, size: 64, offset: 256)
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4452, size: 64)
!4452 = !DISubroutineType(types: !4453)
!4453 = !{!489, !4411}
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "algo_data", scope: !4412, file: !4413, line: 699, baseType: !368, size: 64, offset: 192)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "lock_ops", scope: !4412, file: !4413, line: 702, baseType: !4456, size: 64, offset: 256)
!4456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4457, size: 64)
!4457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4458)
!4458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_lock_operations", file: !4413, line: 557, size: 192, elements: !4459)
!4459 = !{!4460, !4464, !4468}
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "lock_bus", scope: !4458, file: !4413, line: 558, baseType: !4461, size: 64)
!4461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4462, size: 64)
!4462 = !DISubroutineType(types: !4463)
!4463 = !{null, !4411, !7}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "trylock_bus", scope: !4458, file: !4413, line: 559, baseType: !4465, size: 64, offset: 64)
!4465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4466, size: 64)
!4466 = !DISubroutineType(types: !4467)
!4467 = !{!96, !4411, !7}
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_bus", scope: !4458, file: !4413, line: 560, baseType: !4461, size: 64, offset: 128)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock", scope: !4412, file: !4413, line: 703, baseType: !4470, size: 192, offset: 320)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex", file: !4471, line: 30, size: 192, elements: !4472)
!4471 = !DIFile(filename: "./include/linux/rtmutex.h", directory: "/home/lizy2001/genbc/linux")
!4472 = !{!4473, !4474, !4475}
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !4470, file: !4471, line: 31, baseType: !1092)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4470, file: !4471, line: 32, baseType: !1064, size: 128)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4470, file: !4471, line: 33, baseType: !1446, size: 64, offset: 128)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "mux_lock", scope: !4412, file: !4413, line: 704, baseType: !4470, size: 192, offset: 512)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4412, file: !4413, line: 706, baseType: !96, size: 32, offset: 704)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !4412, file: !4413, line: 707, baseType: !96, size: 32, offset: 736)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4412, file: !4413, line: 708, baseType: !544, size: 5568, offset: 768)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "locked_flags", scope: !4412, file: !4413, line: 709, baseType: !648, size: 64, offset: 6336)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !4412, file: !4413, line: 713, baseType: !96, size: 32, offset: 6400)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4412, file: !4413, line: 714, baseType: !4483, size: 384, offset: 6432)
!4483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 384, elements: !4484)
!4484 = !{!4485}
!4485 = !DISubrange(count: 48)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "dev_released", scope: !4412, file: !4413, line: 715, baseType: !1726, size: 192, offset: 6848)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients_lock", scope: !4412, file: !4413, line: 717, baseType: !1403, size: 192, offset: 7040)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients", scope: !4412, file: !4413, line: 718, baseType: !530, size: 128, offset: 7232)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "bus_recovery_info", scope: !4412, file: !4413, line: 720, baseType: !4490, size: 64, offset: 7360)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_bus_recovery_info", file: !4413, line: 618, size: 832, elements: !4492)
!4492 = !{!4493, !4497, !4498, !4502, !4503, !4504, !4505, !4509, !4510, !4513, !4514, !4517, !4520}
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "recover_bus", scope: !4491, file: !4413, line: 619, baseType: !4494, size: 64)
!4494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4495, size: 64)
!4495 = !DISubroutineType(types: !4496)
!4496 = !{!96, !4411}
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "get_scl", scope: !4491, file: !4413, line: 621, baseType: !4494, size: 64, offset: 64)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "set_scl", scope: !4491, file: !4413, line: 622, baseType: !4499, size: 64, offset: 128)
!4499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4500, size: 64)
!4500 = !DISubroutineType(types: !4501)
!4501 = !{null, !4411, !96}
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "get_sda", scope: !4491, file: !4413, line: 623, baseType: !4494, size: 64, offset: 192)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "set_sda", scope: !4491, file: !4413, line: 624, baseType: !4499, size: 64, offset: 256)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "get_bus_free", scope: !4491, file: !4413, line: 625, baseType: !4494, size: 64, offset: 320)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_recovery", scope: !4491, file: !4413, line: 627, baseType: !4506, size: 64, offset: 384)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4507 = !DISubroutineType(types: !4508)
!4508 = !{null, !4411}
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_recovery", scope: !4491, file: !4413, line: 628, baseType: !4506, size: 64, offset: 448)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "scl_gpiod", scope: !4491, file: !4413, line: 631, baseType: !4511, size: 64, offset: 512)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !4413, line: 631, flags: DIFlagFwdDecl)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "sda_gpiod", scope: !4491, file: !4413, line: 632, baseType: !4511, size: 64, offset: 576)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "pinctrl", scope: !4491, file: !4413, line: 633, baseType: !4515, size: 64, offset: 640)
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4516, size: 64)
!4516 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl", file: !4413, line: 633, flags: DIFlagFwdDecl)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "pins_default", scope: !4491, file: !4413, line: 634, baseType: !4518, size: 64, offset: 704)
!4518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4519, size: 64)
!4519 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !4413, line: 634, flags: DIFlagFwdDecl)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "pins_gpio", scope: !4491, file: !4413, line: 635, baseType: !4518, size: 64, offset: 768)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !4412, file: !4413, line: 721, baseType: !4522, size: 64, offset: 7424)
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 64)
!4523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4524)
!4524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter_quirks", file: !4413, line: 664, size: 192, elements: !4525)
!4525 = !{!4526, !4527, !4528, !4529, !4530, !4531}
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4524, file: !4413, line: 665, baseType: !741, size: 64)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_msgs", scope: !4524, file: !4413, line: 666, baseType: !96, size: 32, offset: 64)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_len", scope: !4524, file: !4413, line: 667, baseType: !414, size: 16, offset: 96)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "max_read_len", scope: !4524, file: !4413, line: 668, baseType: !414, size: 16, offset: 112)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_1st_msg_len", scope: !4524, file: !4413, line: 669, baseType: !414, size: 16, offset: 128)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_2nd_msg_len", scope: !4524, file: !4413, line: 670, baseType: !414, size: 16, offset: 144)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "host_notify_domain", scope: !4412, file: !4413, line: 723, baseType: !3820, size: 64, offset: 7488)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !4408, file: !290, line: 199, baseType: !4534, size: 64, offset: 64)
!4534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4535, size: 64)
!4535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stb0899_config", file: !95, line: 81, size: 1344, elements: !4536)
!4536 = !{!4537, !4544, !4552, !4553, !4554, !4555, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594}
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "init_dev", scope: !4535, file: !95, line: 82, baseType: !4538, size: 64)
!4538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4539, size: 64)
!4539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4540)
!4540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stb0899_s1_reg", file: !95, line: 24, size: 32, elements: !4541)
!4541 = !{!4542, !4543}
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4540, file: !95, line: 25, baseType: !414, size: 16)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4540, file: !95, line: 26, baseType: !419, size: 8, offset: 16)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "init_s2_demod", scope: !4535, file: !95, line: 83, baseType: !4545, size: 64, offset: 64)
!4545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4546, size: 64)
!4546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4547)
!4547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stb0899_s2_reg", file: !95, line: 29, size: 96, elements: !4548)
!4548 = !{!4549, !4550, !4551}
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4547, file: !95, line: 30, baseType: !414, size: 16)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !4547, file: !95, line: 31, baseType: !489, size: 32, offset: 32)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4547, file: !95, line: 32, baseType: !489, size: 32, offset: 64)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "init_s1_demod", scope: !4535, file: !95, line: 84, baseType: !4538, size: 64, offset: 128)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "init_s2_fec", scope: !4535, file: !95, line: 85, baseType: !4545, size: 64, offset: 192)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "init_tst", scope: !4535, file: !95, line: 86, baseType: !4538, size: 64, offset: 256)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "postproc", scope: !4535, file: !95, line: 88, baseType: !4556, size: 64, offset: 320)
!4556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4557, size: 64)
!4557 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4558)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stb0899_postproc", file: !95, line: 76, size: 32, elements: !4559)
!4559 = !{!4560, !4561}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "gpio", scope: !4558, file: !95, line: 77, baseType: !414, size: 16)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4558, file: !95, line: 78, baseType: !419, size: 8, offset: 16)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "inversion", scope: !4535, file: !95, line: 90, baseType: !94, size: 32, offset: 384)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "xtal_freq", scope: !4535, file: !95, line: 92, baseType: !489, size: 32, offset: 416)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "demod_address", scope: !4535, file: !95, line: 94, baseType: !419, size: 8, offset: 448)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "ts_output_mode", scope: !4535, file: !95, line: 95, baseType: !419, size: 8, offset: 456)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "block_sync_mode", scope: !4535, file: !95, line: 96, baseType: !419, size: 8, offset: 464)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "ts_pfbit_toggle", scope: !4535, file: !95, line: 97, baseType: !419, size: 8, offset: 472)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "clock_polarity", scope: !4535, file: !95, line: 99, baseType: !419, size: 8, offset: 480)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "data_clk_parity", scope: !4535, file: !95, line: 100, baseType: !419, size: 8, offset: 488)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "fec_mode", scope: !4535, file: !95, line: 101, baseType: !419, size: 8, offset: 496)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "data_output_ctl", scope: !4535, file: !95, line: 102, baseType: !419, size: 8, offset: 504)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "data_fifo_mode", scope: !4535, file: !95, line: 103, baseType: !419, size: 8, offset: 512)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "out_rate_comp", scope: !4535, file: !95, line: 104, baseType: !419, size: 8, offset: 520)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_repeater", scope: !4535, file: !95, line: 105, baseType: !419, size: 8, offset: 528)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "lo_clk", scope: !4535, file: !95, line: 107, baseType: !96, size: 32, offset: 544)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "hi_clk", scope: !4535, file: !95, line: 108, baseType: !96, size: 32, offset: 576)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "esno_ave", scope: !4535, file: !95, line: 110, baseType: !489, size: 32, offset: 608)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "esno_quant", scope: !4535, file: !95, line: 111, baseType: !489, size: 32, offset: 640)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "avframes_coarse", scope: !4535, file: !95, line: 112, baseType: !489, size: 32, offset: 672)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "avframes_fine", scope: !4535, file: !95, line: 113, baseType: !489, size: 32, offset: 704)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "miss_threshold", scope: !4535, file: !95, line: 114, baseType: !489, size: 32, offset: 736)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "uwp_threshold_acq", scope: !4535, file: !95, line: 115, baseType: !489, size: 32, offset: 768)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "uwp_threshold_track", scope: !4535, file: !95, line: 116, baseType: !489, size: 32, offset: 800)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "uwp_threshold_sof", scope: !4535, file: !95, line: 117, baseType: !489, size: 32, offset: 832)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "sof_search_timeout", scope: !4535, file: !95, line: 118, baseType: !489, size: 32, offset: 864)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "btr_nco_bits", scope: !4535, file: !95, line: 120, baseType: !489, size: 32, offset: 896)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "btr_gain_shift_offset", scope: !4535, file: !95, line: 121, baseType: !489, size: 32, offset: 928)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "crl_nco_bits", scope: !4535, file: !95, line: 122, baseType: !489, size: 32, offset: 960)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "ldpc_max_iter", scope: !4535, file: !95, line: 123, baseType: !489, size: 32, offset: 992)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_set_frequency", scope: !4535, file: !95, line: 125, baseType: !4348, size: 64, offset: 1024)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_get_frequency", scope: !4535, file: !95, line: 126, baseType: !4236, size: 64, offset: 1088)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_set_bandwidth", scope: !4535, file: !95, line: 127, baseType: !4348, size: 64, offset: 1152)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_get_bandwidth", scope: !4535, file: !95, line: 128, baseType: !4236, size: 64, offset: 1216)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_set_rfsiggain", scope: !4535, file: !95, line: 129, baseType: !4348, size: 64, offset: 1280)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "frontend", scope: !4408, file: !290, line: 200, baseType: !507, size: 10240, offset: 128)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !4408, file: !290, line: 202, baseType: !1636, size: 64, offset: 10368)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !4408, file: !290, line: 204, baseType: !4598, size: 928, offset: 10432)
!4598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stb0899_internal", file: !290, line: 150, size: 928, elements: !4599)
!4599 = !{!4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "master_clk", scope: !4598, file: !290, line: 151, baseType: !489, size: 32)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !4598, file: !290, line: 152, baseType: !489, size: 32, offset: 32)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "srate", scope: !4598, file: !290, line: 153, baseType: !489, size: 32, offset: 64)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "fecrate", scope: !4598, file: !290, line: 154, baseType: !289, size: 32, offset: 96)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "srch_range", scope: !4598, file: !290, line: 155, baseType: !369, size: 32, offset: 128)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "sub_range", scope: !4598, file: !290, line: 156, baseType: !369, size: 32, offset: 160)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_step", scope: !4598, file: !290, line: 157, baseType: !369, size: 32, offset: 192)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_offst", scope: !4598, file: !290, line: 158, baseType: !369, size: 32, offset: 224)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_bw", scope: !4598, file: !290, line: 159, baseType: !489, size: 32, offset: 256)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "mclk", scope: !4598, file: !290, line: 161, baseType: !369, size: 32, offset: 288)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "rolloff", scope: !4598, file: !290, line: 162, baseType: !369, size: 32, offset: 320)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "derot_freq", scope: !4598, file: !290, line: 164, baseType: !1433, size: 16, offset: 352)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "derot_percent", scope: !4598, file: !290, line: 165, baseType: !1433, size: 16, offset: 368)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !4598, file: !290, line: 167, baseType: !1433, size: 16, offset: 384)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "derot_step", scope: !4598, file: !290, line: 168, baseType: !1433, size: 16, offset: 400)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "t_derot", scope: !4598, file: !290, line: 169, baseType: !1433, size: 16, offset: 416)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "t_data", scope: !4598, file: !290, line: 170, baseType: !1433, size: 16, offset: 432)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "sub_dir", scope: !4598, file: !290, line: 171, baseType: !1433, size: 16, offset: 448)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "t_agc1", scope: !4598, file: !290, line: 173, baseType: !1433, size: 16, offset: 464)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "t_agc2", scope: !4598, file: !290, line: 174, baseType: !1433, size: 16, offset: 480)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4598, file: !290, line: 176, baseType: !489, size: 32, offset: 512)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4598, file: !290, line: 177, baseType: !298, size: 32, offset: 544)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "agc_gain", scope: !4598, file: !290, line: 180, baseType: !369, size: 32, offset: 576)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "center_freq", scope: !4598, file: !290, line: 181, baseType: !369, size: 32, offset: 608)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "av_frame_coarse", scope: !4598, file: !290, line: 182, baseType: !369, size: 32, offset: 640)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "av_frame_fine", scope: !4598, file: !290, line: 183, baseType: !369, size: 32, offset: 672)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "step_size", scope: !4598, file: !290, line: 185, baseType: !1433, size: 16, offset: 704)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "rrc_alpha", scope: !4598, file: !290, line: 187, baseType: !318, size: 32, offset: 736)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "inversion", scope: !4598, file: !290, line: 188, baseType: !94, size: 32, offset: 768)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "modcod", scope: !4598, file: !290, line: 189, baseType: !323, size: 32, offset: 800)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "pilots", scope: !4598, file: !290, line: 190, baseType: !419, size: 8, offset: 832)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length", scope: !4598, file: !290, line: 192, baseType: !354, size: 32, offset: 864)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "v_status", scope: !4598, file: !290, line: 193, baseType: !419, size: 8, offset: 896)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "err_ctrl", scope: !4598, file: !290, line: 194, baseType: !419, size: 8, offset: 904)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "delsys", scope: !4408, file: !290, line: 207, baseType: !238, size: 32, offset: 11360)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !4408, file: !290, line: 208, baseType: !4636, size: 96, offset: 11392)
!4636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stb0899_params", file: !290, line: 144, size: 96, elements: !4637)
!4637 = !{!4638, !4639, !4640}
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !4636, file: !290, line: 145, baseType: !489, size: 32)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "srate", scope: !4636, file: !290, line: 146, baseType: !489, size: 32, offset: 32)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "fecrate", scope: !4636, file: !290, line: 147, baseType: !181, size: 32, offset: 64)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "rx_freq", scope: !4408, file: !290, line: 210, baseType: !489, size: 32, offset: 11488)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "search_lock", scope: !4408, file: !290, line: 211, baseType: !1403, size: 192, offset: 11520)
!4643 = !DILocalVariable(name: "state", arg: 1, scope: !4404, file: !3, line: 250, type: !4407)
!4644 = !DILocation(line: 250, column: 44, scope: !4404)
!4645 = !DILocalVariable(name: "reg", arg: 2, scope: !4404, file: !3, line: 250, type: !7)
!4646 = !DILocation(line: 250, column: 64, scope: !4404)
!4647 = !DILocalVariable(name: "result", scope: !4404, file: !3, line: 252, type: !96)
!4648 = !DILocation(line: 252, column: 6, scope: !4404)
!4649 = !DILocation(line: 254, column: 29, scope: !4404)
!4650 = !DILocation(line: 254, column: 36, scope: !4404)
!4651 = !DILocation(line: 254, column: 11, scope: !4404)
!4652 = !DILocation(line: 254, column: 9, scope: !4404)
!4653 = !DILocation(line: 260, column: 7, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 260, column: 6)
!4655 = !DILocation(line: 260, column: 11, scope: !4654)
!4656 = !DILocation(line: 260, column: 22, scope: !4654)
!4657 = !DILocation(line: 260, column: 26, scope: !4654)
!4658 = !DILocation(line: 260, column: 30, scope: !4654)
!4659 = !DILocation(line: 260, column: 41, scope: !4654)
!4660 = !DILocation(line: 261, column: 9, scope: !4654)
!4661 = !DILocation(line: 261, column: 13, scope: !4654)
!4662 = !DILocation(line: 261, column: 23, scope: !4654)
!4663 = !DILocation(line: 261, column: 34, scope: !4654)
!4664 = !DILocation(line: 261, column: 39, scope: !4654)
!4665 = !DILocation(line: 261, column: 43, scope: !4654)
!4666 = !DILocation(line: 261, column: 53, scope: !4654)
!4667 = !DILocation(line: 260, column: 6, scope: !4404)
!4668 = !DILocation(line: 262, column: 21, scope: !4654)
!4669 = !DILocation(line: 262, column: 29, scope: !4654)
!4670 = !DILocation(line: 262, column: 33, scope: !4654)
!4671 = !DILocation(line: 262, column: 3, scope: !4654)
!4672 = !DILocation(line: 264, column: 9, scope: !4404)
!4673 = !DILocation(line: 264, column: 2, scope: !4404)
!4674 = distinct !DISubprogram(name: "_stb0899_read_reg", scope: !3, file: !3, line: 213, type: !4405, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!4675 = !DILocalVariable(name: "state", arg: 1, scope: !4674, file: !3, line: 213, type: !4407)
!4676 = !DILocation(line: 213, column: 52, scope: !4674)
!4677 = !DILocalVariable(name: "reg", arg: 2, scope: !4674, file: !3, line: 213, type: !7)
!4678 = !DILocation(line: 213, column: 72, scope: !4674)
!4679 = !DILocalVariable(name: "ret", scope: !4674, file: !3, line: 215, type: !96)
!4680 = !DILocation(line: 215, column: 6, scope: !4674)
!4681 = !DILocalVariable(name: "b0", scope: !4674, file: !3, line: 217, type: !4682)
!4682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 16, elements: !1793)
!4683 = !DILocation(line: 217, column: 5, scope: !4674)
!4684 = !DILocation(line: 217, column: 12, scope: !4674)
!4685 = !DILocation(line: 217, column: 14, scope: !4674)
!4686 = !DILocation(line: 217, column: 18, scope: !4674)
!4687 = !DILocation(line: 217, column: 24, scope: !4674)
!4688 = !DILocation(line: 217, column: 28, scope: !4674)
!4689 = !DILocalVariable(name: "buf", scope: !4674, file: !3, line: 218, type: !419)
!4690 = !DILocation(line: 218, column: 5, scope: !4674)
!4691 = !DILocalVariable(name: "msg", scope: !4674, file: !3, line: 220, type: !4692)
!4692 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4427, size: 256, elements: !1793)
!4693 = !DILocation(line: 220, column: 17, scope: !4674)
!4694 = !DILocation(line: 220, column: 25, scope: !4674)
!4695 = !DILocation(line: 221, column: 3, scope: !4674)
!4696 = !DILocation(line: 222, column: 12, scope: !4674)
!4697 = !DILocation(line: 222, column: 19, scope: !4674)
!4698 = !DILocation(line: 222, column: 27, scope: !4674)
!4699 = !DILocation(line: 224, column: 11, scope: !4674)
!4700 = !DILocation(line: 226, column: 5, scope: !4674)
!4701 = !DILocation(line: 227, column: 12, scope: !4674)
!4702 = !DILocation(line: 227, column: 19, scope: !4674)
!4703 = !DILocation(line: 227, column: 27, scope: !4674)
!4704 = !DILocation(line: 234, column: 21, scope: !4674)
!4705 = !DILocation(line: 234, column: 28, scope: !4674)
!4706 = !DILocation(line: 234, column: 33, scope: !4674)
!4707 = !DILocation(line: 234, column: 8, scope: !4674)
!4708 = !DILocation(line: 234, column: 6, scope: !4674)
!4709 = !DILocation(line: 235, column: 6, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 235, column: 6)
!4711 = !DILocation(line: 235, column: 10, scope: !4710)
!4712 = !DILocation(line: 235, column: 6, scope: !4674)
!4713 = !DILocation(line: 236, column: 7, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 236, column: 7)
!4715 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 235, column: 16)
!4716 = !DILocation(line: 236, column: 11, scope: !4714)
!4717 = !DILocation(line: 236, column: 7, scope: !4715)
!4718 = !DILocation(line: 237, column: 4, scope: !4714)
!4719 = !DILocation(line: 237, column: 4, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 237, column: 4)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 237, column: 4)
!4722 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 237, column: 4)
!4723 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 237, column: 4)
!4724 = !DILocation(line: 237, column: 4, scope: !4721)
!4725 = !DILocation(line: 237, column: 4, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 237, column: 4)
!4727 = !DILocation(line: 237, column: 4, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4726, file: !3, line: 237, column: 4)
!4729 = !DILocation(line: 237, column: 4, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 237, column: 4)
!4731 = !DILocation(line: 237, column: 4, scope: !4723)
!4732 = !DILocation(line: 241, column: 10, scope: !4715)
!4733 = !DILocation(line: 241, column: 14, scope: !4715)
!4734 = !DILocation(line: 241, column: 20, scope: !4715)
!4735 = !DILocation(line: 241, column: 3, scope: !4715)
!4736 = !DILocation(line: 243, column: 6, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4674, file: !3, line: 243, column: 6)
!4738 = !DILocation(line: 243, column: 6, scope: !4674)
!4739 = !DILocation(line: 244, column: 3, scope: !4737)
!4740 = !DILocation(line: 244, column: 3, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !3, line: 244, column: 3)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !3, line: 244, column: 3)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !3, line: 244, column: 3)
!4744 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 244, column: 3)
!4745 = !DILocation(line: 244, column: 3, scope: !4742)
!4746 = !DILocation(line: 244, column: 3, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4741, file: !3, line: 244, column: 3)
!4748 = !DILocation(line: 244, column: 3, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 244, column: 3)
!4750 = !DILocation(line: 244, column: 3, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4749, file: !3, line: 244, column: 3)
!4752 = !DILocation(line: 244, column: 3, scope: !4744)
!4753 = !DILocation(line: 247, column: 23, scope: !4674)
!4754 = !DILocation(line: 247, column: 9, scope: !4674)
!4755 = !DILocation(line: 247, column: 2, scope: !4674)
!4756 = !DILocation(line: 248, column: 1, scope: !4674)
!4757 = distinct !DISubprogram(name: "_stb0899_read_s2reg", scope: !3, file: !3, line: 267, type: !4758, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !574)
!4758 = !DISubroutineType(types: !4759)
!4759 = !{!489, !4407, !489, !489, !414}
!4760 = !DILocalVariable(name: "state", arg: 1, scope: !4757, file: !3, line: 267, type: !4407)
!4761 = !DILocation(line: 267, column: 47, scope: !4757)
!4762 = !DILocalVariable(name: "stb0899_i2cdev", arg: 2, scope: !4757, file: !3, line: 268, type: !489)
!4763 = !DILocation(line: 268, column: 8, scope: !4757)
!4764 = !DILocalVariable(name: "stb0899_base_addr", arg: 3, scope: !4757, file: !3, line: 269, type: !489)
!4765 = !DILocation(line: 269, column: 8, scope: !4757)
!4766 = !DILocalVariable(name: "stb0899_reg_offset", arg: 4, scope: !4757, file: !3, line: 270, type: !414)
!4767 = !DILocation(line: 270, column: 8, scope: !4757)
!4768 = !DILocalVariable(name: "status", scope: !4757, file: !3, line: 272, type: !96)
!4769 = !DILocation(line: 272, column: 6, scope: !4757)
!4770 = !DILocalVariable(name: "data", scope: !4757, file: !3, line: 273, type: !489)
!4771 = !DILocation(line: 273, column: 6, scope: !4757)
!4772 = !DILocalVariable(name: "buf", scope: !4757, file: !3, line: 274, type: !4773)
!4773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 56, elements: !4774)
!4774 = !{!4775}
!4775 = !DISubrange(count: 7)
!4776 = !DILocation(line: 274, column: 5, scope: !4757)
!4777 = !DILocalVariable(name: "tmpaddr", scope: !4757, file: !3, line: 275, type: !414)
!4778 = !DILocation(line: 275, column: 6, scope: !4757)
!4779 = !DILocalVariable(name: "buf_0", scope: !4757, file: !3, line: 277, type: !538)
!4780 = !DILocation(line: 277, column: 5, scope: !4757)
!4781 = !DILocation(line: 277, column: 15, scope: !4757)
!4782 = !DILocation(line: 278, column: 3, scope: !4757)
!4783 = !DILocation(line: 279, column: 3, scope: !4757)
!4784 = !DILocation(line: 280, column: 3, scope: !4757)
!4785 = !DILocation(line: 281, column: 3, scope: !4757)
!4786 = !DILocation(line: 282, column: 3, scope: !4757)
!4787 = !DILocation(line: 283, column: 3, scope: !4757)
!4788 = !DILocalVariable(name: "buf_1", scope: !4757, file: !3, line: 285, type: !4682)
!4789 = !DILocation(line: 285, column: 5, scope: !4757)
!4790 = !DILocalVariable(name: "msg_0", scope: !4757, file: !3, line: 290, type: !4427)
!4791 = !DILocation(line: 290, column: 17, scope: !4757)
!4792 = !DILocation(line: 290, column: 25, scope: !4757)
!4793 = !DILocation(line: 291, column: 11, scope: !4757)
!4794 = !DILocation(line: 291, column: 18, scope: !4757)
!4795 = !DILocation(line: 291, column: 26, scope: !4757)
!4796 = !DILocation(line: 293, column: 10, scope: !4757)
!4797 = !DILocalVariable(name: "msg_1", scope: !4757, file: !3, line: 297, type: !4427)
!4798 = !DILocation(line: 297, column: 17, scope: !4757)
!4799 = !DILocation(line: 297, column: 25, scope: !4757)
!4800 = !DILocation(line: 298, column: 11, scope: !4757)
!4801 = !DILocation(line: 298, column: 18, scope: !4757)
!4802 = !DILocation(line: 298, column: 26, scope: !4757)
!4803 = !DILocation(line: 300, column: 10, scope: !4757)
!4804 = !DILocalVariable(name: "msg_r", scope: !4757, file: !3, line: 304, type: !4427)
!4805 = !DILocation(line: 304, column: 17, scope: !4757)
!4806 = !DILocation(line: 304, column: 25, scope: !4757)
!4807 = !DILocation(line: 305, column: 11, scope: !4757)
!4808 = !DILocation(line: 305, column: 18, scope: !4757)
!4809 = !DILocation(line: 305, column: 26, scope: !4757)
!4810 = !DILocation(line: 307, column: 10, scope: !4757)
!4811 = !DILocation(line: 311, column: 12, scope: !4757)
!4812 = !DILocation(line: 311, column: 31, scope: !4757)
!4813 = !DILocation(line: 311, column: 10, scope: !4757)
!4814 = !DILocation(line: 312, column: 8, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 312, column: 6)
!4816 = !DILocation(line: 312, column: 27, scope: !4815)
!4817 = !DILocation(line: 312, column: 6, scope: !4757)
!4818 = !DILocation(line: 313, column: 13, scope: !4815)
!4819 = !DILocation(line: 313, column: 32, scope: !4815)
!4820 = !DILocation(line: 313, column: 11, scope: !4815)
!4821 = !DILocation(line: 313, column: 3, scope: !4815)
!4822 = !DILocation(line: 315, column: 13, scope: !4757)
!4823 = !DILocation(line: 315, column: 2, scope: !4757)
!4824 = !DILocation(line: 315, column: 11, scope: !4757)
!4825 = !DILocation(line: 316, column: 13, scope: !4757)
!4826 = !DILocation(line: 316, column: 2, scope: !4757)
!4827 = !DILocation(line: 316, column: 11, scope: !4757)
!4828 = !DILocation(line: 318, column: 24, scope: !4757)
!4829 = !DILocation(line: 318, column: 31, scope: !4757)
!4830 = !DILocation(line: 318, column: 11, scope: !4757)
!4831 = !DILocation(line: 318, column: 9, scope: !4757)
!4832 = !DILocation(line: 319, column: 6, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 319, column: 6)
!4834 = !DILocation(line: 319, column: 13, scope: !4833)
!4835 = !DILocation(line: 319, column: 6, scope: !4757)
!4836 = !DILocation(line: 320, column: 7, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4838, file: !3, line: 320, column: 7)
!4838 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 319, column: 18)
!4839 = !DILocation(line: 320, column: 14, scope: !4837)
!4840 = !DILocation(line: 320, column: 7, scope: !4838)
!4841 = !DILocation(line: 322, column: 21, scope: !4837)
!4842 = !DILocation(line: 322, column: 37, scope: !4837)
!4843 = !DILocation(line: 322, column: 56, scope: !4837)
!4844 = !DILocation(line: 322, column: 76, scope: !4837)
!4845 = !DILocation(line: 321, column: 4, scope: !4837)
!4846 = !DILocation(line: 324, column: 3, scope: !4838)
!4847 = !DILocation(line: 328, column: 24, scope: !4757)
!4848 = !DILocation(line: 328, column: 31, scope: !4757)
!4849 = !DILocation(line: 328, column: 11, scope: !4757)
!4850 = !DILocation(line: 328, column: 9, scope: !4757)
!4851 = !DILocation(line: 329, column: 6, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 329, column: 6)
!4853 = !DILocation(line: 329, column: 13, scope: !4852)
!4854 = !DILocation(line: 329, column: 6, scope: !4757)
!4855 = !DILocation(line: 330, column: 3, scope: !4852)
!4856 = !DILocation(line: 332, column: 24, scope: !4757)
!4857 = !DILocation(line: 332, column: 31, scope: !4757)
!4858 = !DILocation(line: 332, column: 11, scope: !4757)
!4859 = !DILocation(line: 332, column: 9, scope: !4757)
!4860 = !DILocation(line: 333, column: 6, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 333, column: 6)
!4862 = !DILocation(line: 333, column: 13, scope: !4861)
!4863 = !DILocation(line: 333, column: 6, scope: !4757)
!4864 = !DILocation(line: 334, column: 3, scope: !4861)
!4865 = !DILocation(line: 336, column: 13, scope: !4757)
!4866 = !DILocation(line: 336, column: 2, scope: !4757)
!4867 = !DILocation(line: 336, column: 11, scope: !4757)
!4868 = !DILocation(line: 337, column: 13, scope: !4757)
!4869 = !DILocation(line: 337, column: 2, scope: !4757)
!4870 = !DILocation(line: 337, column: 11, scope: !4757)
!4871 = !DILocation(line: 340, column: 24, scope: !4757)
!4872 = !DILocation(line: 340, column: 31, scope: !4757)
!4873 = !DILocation(line: 340, column: 11, scope: !4757)
!4874 = !DILocation(line: 340, column: 9, scope: !4757)
!4875 = !DILocation(line: 341, column: 6, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 341, column: 6)
!4877 = !DILocation(line: 341, column: 13, scope: !4876)
!4878 = !DILocation(line: 341, column: 6, scope: !4757)
!4879 = !DILocation(line: 342, column: 7, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 342, column: 7)
!4881 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 341, column: 18)
!4882 = !DILocation(line: 342, column: 14, scope: !4880)
!4883 = !DILocation(line: 342, column: 7, scope: !4881)
!4884 = !DILocation(line: 344, column: 21, scope: !4880)
!4885 = !DILocation(line: 344, column: 37, scope: !4880)
!4886 = !DILocation(line: 344, column: 56, scope: !4880)
!4887 = !DILocation(line: 344, column: 76, scope: !4880)
!4888 = !DILocation(line: 343, column: 4, scope: !4880)
!4889 = !DILocation(line: 345, column: 3, scope: !4881)
!4890 = !DILocation(line: 348, column: 24, scope: !4757)
!4891 = !DILocation(line: 348, column: 31, scope: !4757)
!4892 = !DILocation(line: 348, column: 11, scope: !4757)
!4893 = !DILocation(line: 348, column: 9, scope: !4757)
!4894 = !DILocation(line: 349, column: 6, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 349, column: 6)
!4896 = !DILocation(line: 349, column: 13, scope: !4895)
!4897 = !DILocation(line: 349, column: 6, scope: !4757)
!4898 = !DILocation(line: 350, column: 7, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4900, file: !3, line: 350, column: 7)
!4900 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 349, column: 18)
!4901 = !DILocation(line: 350, column: 14, scope: !4899)
!4902 = !DILocation(line: 350, column: 7, scope: !4900)
!4903 = !DILocation(line: 352, column: 21, scope: !4899)
!4904 = !DILocation(line: 352, column: 37, scope: !4899)
!4905 = !DILocation(line: 352, column: 56, scope: !4899)
!4906 = !DILocation(line: 352, column: 76, scope: !4899)
!4907 = !DILocation(line: 351, column: 4, scope: !4899)
!4908 = !DILocation(line: 353, column: 10, scope: !4900)
!4909 = !DILocation(line: 353, column: 17, scope: !4900)
!4910 = !DILocation(line: 353, column: 23, scope: !4900)
!4911 = !DILocation(line: 353, column: 3, scope: !4900)
!4912 = !DILocation(line: 356, column: 9, scope: !4757)
!4913 = !DILocation(line: 356, column: 7, scope: !4757)
!4914 = !DILocation(line: 357, column: 6, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 357, column: 6)
!4916 = !DILocation(line: 357, column: 6, scope: !4757)
!4917 = !DILocation(line: 359, column: 20, scope: !4915)
!4918 = !DILocation(line: 359, column: 36, scope: !4915)
!4919 = !DILocation(line: 359, column: 55, scope: !4915)
!4920 = !DILocation(line: 359, column: 75, scope: !4915)
!4921 = !DILocation(line: 358, column: 3, scope: !4915)
!4922 = !DILocation(line: 361, column: 9, scope: !4757)
!4923 = !DILocation(line: 361, column: 2, scope: !4757)
!4924 = !DILabel(scope: !4757, name: "err", file: !3, line: 363)
!4925 = !DILocation(line: 363, column: 1, scope: !4757)
!4926 = !DILocation(line: 364, column: 9, scope: !4757)
!4927 = !DILocation(line: 364, column: 16, scope: !4757)
!4928 = !DILocation(line: 364, column: 22, scope: !4757)
!4929 = !DILocation(line: 364, column: 2, scope: !4757)
!4930 = !DILocation(line: 365, column: 1, scope: !4757)
!4931 = distinct !DISubprogram(name: "stb0899_write_s2reg", scope: !3, file: !3, line: 367, type: !4932, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !574)
!4932 = !DISubroutineType(types: !4933)
!4933 = !{!96, !4407, !489, !489, !414, !489}
!4934 = !DILocalVariable(name: "state", arg: 1, scope: !4931, file: !3, line: 367, type: !4407)
!4935 = !DILocation(line: 367, column: 47, scope: !4931)
!4936 = !DILocalVariable(name: "stb0899_i2cdev", arg: 2, scope: !4931, file: !3, line: 368, type: !489)
!4937 = !DILocation(line: 368, column: 8, scope: !4931)
!4938 = !DILocalVariable(name: "stb0899_base_addr", arg: 3, scope: !4931, file: !3, line: 369, type: !489)
!4939 = !DILocation(line: 369, column: 8, scope: !4931)
!4940 = !DILocalVariable(name: "stb0899_reg_offset", arg: 4, scope: !4931, file: !3, line: 370, type: !414)
!4941 = !DILocation(line: 370, column: 8, scope: !4931)
!4942 = !DILocalVariable(name: "stb0899_data", arg: 5, scope: !4931, file: !3, line: 371, type: !489)
!4943 = !DILocation(line: 371, column: 8, scope: !4931)
!4944 = !DILocalVariable(name: "status", scope: !4931, file: !3, line: 373, type: !96)
!4945 = !DILocation(line: 373, column: 6, scope: !4931)
!4946 = !DILocalVariable(name: "buf_0", scope: !4931, file: !3, line: 376, type: !538)
!4947 = !DILocation(line: 376, column: 5, scope: !4931)
!4948 = !DILocation(line: 376, column: 15, scope: !4931)
!4949 = !DILocation(line: 377, column: 3, scope: !4931)
!4950 = !DILocation(line: 378, column: 3, scope: !4931)
!4951 = !DILocation(line: 379, column: 3, scope: !4931)
!4952 = !DILocation(line: 380, column: 3, scope: !4931)
!4953 = !DILocation(line: 381, column: 3, scope: !4931)
!4954 = !DILocation(line: 382, column: 3, scope: !4931)
!4955 = !DILocalVariable(name: "buf_1", scope: !4931, file: !3, line: 384, type: !538)
!4956 = !DILocation(line: 384, column: 5, scope: !4931)
!4957 = !DILocalVariable(name: "msg_0", scope: !4931, file: !3, line: 393, type: !4427)
!4958 = !DILocation(line: 393, column: 17, scope: !4931)
!4959 = !DILocation(line: 393, column: 25, scope: !4931)
!4960 = !DILocation(line: 394, column: 11, scope: !4931)
!4961 = !DILocation(line: 394, column: 18, scope: !4931)
!4962 = !DILocation(line: 394, column: 26, scope: !4931)
!4963 = !DILocation(line: 396, column: 10, scope: !4931)
!4964 = !DILocalVariable(name: "msg_1", scope: !4931, file: !3, line: 400, type: !4427)
!4965 = !DILocation(line: 400, column: 17, scope: !4931)
!4966 = !DILocation(line: 400, column: 25, scope: !4931)
!4967 = !DILocation(line: 401, column: 11, scope: !4931)
!4968 = !DILocation(line: 401, column: 18, scope: !4931)
!4969 = !DILocation(line: 401, column: 26, scope: !4931)
!4970 = !DILocation(line: 403, column: 10, scope: !4931)
!4971 = !DILocation(line: 407, column: 13, scope: !4931)
!4972 = !DILocation(line: 407, column: 2, scope: !4931)
!4973 = !DILocation(line: 407, column: 11, scope: !4931)
!4974 = !DILocation(line: 408, column: 13, scope: !4931)
!4975 = !DILocation(line: 408, column: 2, scope: !4931)
!4976 = !DILocation(line: 408, column: 11, scope: !4931)
!4977 = !DILocation(line: 409, column: 13, scope: !4931)
!4978 = !DILocation(line: 409, column: 2, scope: !4931)
!4979 = !DILocation(line: 409, column: 11, scope: !4931)
!4980 = !DILocation(line: 410, column: 13, scope: !4931)
!4981 = !DILocation(line: 410, column: 2, scope: !4931)
!4982 = !DILocation(line: 410, column: 11, scope: !4931)
!4983 = !DILocation(line: 411, column: 13, scope: !4931)
!4984 = !DILocation(line: 411, column: 2, scope: !4931)
!4985 = !DILocation(line: 411, column: 11, scope: !4931)
!4986 = !DILocation(line: 412, column: 13, scope: !4931)
!4987 = !DILocation(line: 412, column: 2, scope: !4931)
!4988 = !DILocation(line: 412, column: 11, scope: !4931)
!4989 = !DILocation(line: 414, column: 6, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 414, column: 6)
!4991 = !DILocation(line: 414, column: 6, scope: !4931)
!4992 = !DILocation(line: 416, column: 20, scope: !4990)
!4993 = !DILocation(line: 416, column: 36, scope: !4990)
!4994 = !DILocation(line: 416, column: 55, scope: !4990)
!4995 = !DILocation(line: 416, column: 75, scope: !4990)
!4996 = !DILocation(line: 415, column: 3, scope: !4990)
!4997 = !DILocation(line: 418, column: 24, scope: !4931)
!4998 = !DILocation(line: 418, column: 31, scope: !4931)
!4999 = !DILocation(line: 418, column: 11, scope: !4931)
!5000 = !DILocation(line: 418, column: 9, scope: !4931)
!5001 = !DILocation(line: 419, column: 6, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 419, column: 6)
!5003 = !DILocation(line: 419, column: 6, scope: !4931)
!5004 = !DILocation(line: 420, column: 7, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 420, column: 7)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 419, column: 28)
!5007 = !DILocation(line: 420, column: 14, scope: !5005)
!5008 = !DILocation(line: 420, column: 7, scope: !5006)
!5009 = !DILocation(line: 422, column: 21, scope: !5005)
!5010 = !DILocation(line: 422, column: 37, scope: !5005)
!5011 = !DILocation(line: 422, column: 56, scope: !5005)
!5012 = !DILocation(line: 422, column: 76, scope: !5005)
!5013 = !DILocation(line: 422, column: 90, scope: !5005)
!5014 = !DILocation(line: 421, column: 4, scope: !5005)
!5015 = !DILocation(line: 423, column: 3, scope: !5006)
!5016 = !DILocation(line: 425, column: 24, scope: !4931)
!5017 = !DILocation(line: 425, column: 31, scope: !4931)
!5018 = !DILocation(line: 425, column: 11, scope: !4931)
!5019 = !DILocation(line: 425, column: 9, scope: !4931)
!5020 = !DILocation(line: 426, column: 6, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 426, column: 6)
!5022 = !DILocation(line: 426, column: 6, scope: !4931)
!5023 = !DILocation(line: 427, column: 7, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5025, file: !3, line: 427, column: 7)
!5025 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 426, column: 28)
!5026 = !DILocation(line: 427, column: 14, scope: !5024)
!5027 = !DILocation(line: 427, column: 7, scope: !5025)
!5028 = !DILocation(line: 429, column: 21, scope: !5024)
!5029 = !DILocation(line: 429, column: 37, scope: !5024)
!5030 = !DILocation(line: 429, column: 56, scope: !5024)
!5031 = !DILocation(line: 429, column: 76, scope: !5024)
!5032 = !DILocation(line: 429, column: 90, scope: !5024)
!5033 = !DILocation(line: 428, column: 4, scope: !5024)
!5034 = !DILocation(line: 431, column: 10, scope: !5025)
!5035 = !DILocation(line: 431, column: 17, scope: !5025)
!5036 = !DILocation(line: 431, column: 23, scope: !5025)
!5037 = !DILocation(line: 431, column: 3, scope: !5025)
!5038 = !DILocation(line: 434, column: 2, scope: !4931)
!5039 = !DILabel(scope: !4931, name: "err", file: !3, line: 436)
!5040 = !DILocation(line: 436, column: 1, scope: !4931)
!5041 = !DILocation(line: 437, column: 9, scope: !4931)
!5042 = !DILocation(line: 437, column: 16, scope: !4931)
!5043 = !DILocation(line: 437, column: 22, scope: !4931)
!5044 = !DILocation(line: 437, column: 2, scope: !4931)
!5045 = !DILocation(line: 438, column: 1, scope: !4931)
!5046 = distinct !DISubprogram(name: "stb0899_read_regs", scope: !3, file: !3, line: 440, type: !5047, scopeLine: 441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5047 = !DISubroutineType(types: !5048)
!5048 = !{!96, !4407, !7, !4346, !489}
!5049 = !DILocalVariable(name: "state", arg: 1, scope: !5046, file: !3, line: 440, type: !4407)
!5050 = !DILocation(line: 440, column: 45, scope: !5046)
!5051 = !DILocalVariable(name: "reg", arg: 2, scope: !5046, file: !3, line: 440, type: !7)
!5052 = !DILocation(line: 440, column: 65, scope: !5046)
!5053 = !DILocalVariable(name: "buf", arg: 3, scope: !5046, file: !3, line: 440, type: !4346)
!5054 = !DILocation(line: 440, column: 74, scope: !5046)
!5055 = !DILocalVariable(name: "count", arg: 4, scope: !5046, file: !3, line: 440, type: !489)
!5056 = !DILocation(line: 440, column: 83, scope: !5046)
!5057 = !DILocalVariable(name: "status", scope: !5046, file: !3, line: 442, type: !96)
!5058 = !DILocation(line: 442, column: 6, scope: !5046)
!5059 = !DILocalVariable(name: "b0", scope: !5046, file: !3, line: 444, type: !4682)
!5060 = !DILocation(line: 444, column: 5, scope: !5046)
!5061 = !DILocation(line: 444, column: 12, scope: !5046)
!5062 = !DILocation(line: 444, column: 14, scope: !5046)
!5063 = !DILocation(line: 444, column: 18, scope: !5046)
!5064 = !DILocation(line: 444, column: 24, scope: !5046)
!5065 = !DILocation(line: 444, column: 28, scope: !5046)
!5066 = !DILocalVariable(name: "msg", scope: !5046, file: !3, line: 446, type: !4692)
!5067 = !DILocation(line: 446, column: 17, scope: !5046)
!5068 = !DILocation(line: 446, column: 25, scope: !5046)
!5069 = !DILocation(line: 447, column: 3, scope: !5046)
!5070 = !DILocation(line: 448, column: 12, scope: !5046)
!5071 = !DILocation(line: 448, column: 19, scope: !5046)
!5072 = !DILocation(line: 448, column: 27, scope: !5046)
!5073 = !DILocation(line: 450, column: 11, scope: !5046)
!5074 = !DILocation(line: 452, column: 5, scope: !5046)
!5075 = !DILocation(line: 453, column: 12, scope: !5046)
!5076 = !DILocation(line: 453, column: 19, scope: !5046)
!5077 = !DILocation(line: 453, column: 27, scope: !5046)
!5078 = !DILocation(line: 456, column: 11, scope: !5046)
!5079 = !DILocation(line: 455, column: 11, scope: !5046)
!5080 = !DILocation(line: 460, column: 24, scope: !5046)
!5081 = !DILocation(line: 460, column: 31, scope: !5046)
!5082 = !DILocation(line: 460, column: 36, scope: !5046)
!5083 = !DILocation(line: 460, column: 11, scope: !5046)
!5084 = !DILocation(line: 460, column: 9, scope: !5046)
!5085 = !DILocation(line: 461, column: 6, scope: !5086)
!5086 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 461, column: 6)
!5087 = !DILocation(line: 461, column: 13, scope: !5086)
!5088 = !DILocation(line: 461, column: 6, scope: !5046)
!5089 = !DILocation(line: 462, column: 7, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5091, file: !3, line: 462, column: 7)
!5091 = distinct !DILexicalBlock(scope: !5086, file: !3, line: 461, column: 19)
!5092 = !DILocation(line: 462, column: 14, scope: !5090)
!5093 = !DILocation(line: 462, column: 7, scope: !5091)
!5094 = !DILocation(line: 464, column: 21, scope: !5090)
!5095 = !DILocation(line: 464, column: 26, scope: !5090)
!5096 = !DILocation(line: 464, column: 33, scope: !5090)
!5097 = !DILocation(line: 463, column: 4, scope: !5090)
!5098 = !DILocation(line: 465, column: 3, scope: !5091)
!5099 = !DILocation(line: 472, column: 7, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 472, column: 6)
!5101 = !DILocation(line: 472, column: 11, scope: !5100)
!5102 = !DILocation(line: 472, column: 22, scope: !5100)
!5103 = !DILocation(line: 472, column: 26, scope: !5100)
!5104 = !DILocation(line: 472, column: 30, scope: !5100)
!5105 = !DILocation(line: 472, column: 41, scope: !5100)
!5106 = !DILocation(line: 473, column: 9, scope: !5100)
!5107 = !DILocation(line: 473, column: 13, scope: !5100)
!5108 = !DILocation(line: 473, column: 23, scope: !5100)
!5109 = !DILocation(line: 473, column: 34, scope: !5100)
!5110 = !DILocation(line: 473, column: 39, scope: !5100)
!5111 = !DILocation(line: 473, column: 43, scope: !5100)
!5112 = !DILocation(line: 473, column: 53, scope: !5100)
!5113 = !DILocation(line: 472, column: 6, scope: !5046)
!5114 = !DILocation(line: 474, column: 21, scope: !5100)
!5115 = !DILocation(line: 474, column: 29, scope: !5100)
!5116 = !DILocation(line: 474, column: 33, scope: !5100)
!5117 = !DILocation(line: 474, column: 3, scope: !5100)
!5118 = !DILocation(line: 476, column: 2, scope: !5046)
!5119 = !DILocation(line: 476, column: 2, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 476, column: 2)
!5121 = distinct !DILexicalBlock(scope: !5122, file: !3, line: 476, column: 2)
!5122 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 476, column: 2)
!5123 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 476, column: 2)
!5124 = !DILocation(line: 476, column: 2, scope: !5121)
!5125 = !DILocation(line: 476, column: 2, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 476, column: 2)
!5127 = !DILocation(line: 476, column: 2, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 476, column: 2)
!5129 = !DILocation(line: 476, column: 2, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 476, column: 2)
!5131 = !DILocation(line: 476, column: 2, scope: !5123)
!5132 = !DILocation(line: 479, column: 2, scope: !5046)
!5133 = !DILabel(scope: !5046, name: "err", file: !3, line: 480)
!5134 = !DILocation(line: 480, column: 1, scope: !5046)
!5135 = !DILocation(line: 481, column: 9, scope: !5046)
!5136 = !DILocation(line: 481, column: 16, scope: !5046)
!5137 = !DILocation(line: 481, column: 22, scope: !5046)
!5138 = !DILocation(line: 481, column: 2, scope: !5046)
!5139 = !DILocation(line: 482, column: 1, scope: !5046)
!5140 = distinct !DISubprogram(name: "stb0899_write_regs", scope: !3, file: !3, line: 484, type: !5047, scopeLine: 485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5141 = !DILocalVariable(name: "state", arg: 1, scope: !5140, file: !3, line: 484, type: !4407)
!5142 = !DILocation(line: 484, column: 46, scope: !5140)
!5143 = !DILocalVariable(name: "reg", arg: 2, scope: !5140, file: !3, line: 484, type: !7)
!5144 = !DILocation(line: 484, column: 66, scope: !5140)
!5145 = !DILocalVariable(name: "data", arg: 3, scope: !5140, file: !3, line: 484, type: !4346)
!5146 = !DILocation(line: 484, column: 75, scope: !5140)
!5147 = !DILocalVariable(name: "count", arg: 4, scope: !5140, file: !3, line: 484, type: !489)
!5148 = !DILocation(line: 484, column: 85, scope: !5140)
!5149 = !DILocalVariable(name: "ret", scope: !5140, file: !3, line: 486, type: !96)
!5150 = !DILocation(line: 486, column: 6, scope: !5140)
!5151 = !DILocalVariable(name: "buf", scope: !5140, file: !3, line: 487, type: !5152)
!5152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !419, size: 512, elements: !605)
!5153 = !DILocation(line: 487, column: 5, scope: !5140)
!5154 = !DILocalVariable(name: "i2c_msg", scope: !5140, file: !3, line: 488, type: !4427)
!5155 = !DILocation(line: 488, column: 17, scope: !5140)
!5156 = !DILocation(line: 488, column: 27, scope: !5140)
!5157 = !DILocation(line: 489, column: 11, scope: !5140)
!5158 = !DILocation(line: 489, column: 18, scope: !5140)
!5159 = !DILocation(line: 489, column: 26, scope: !5140)
!5160 = !DILocation(line: 492, column: 14, scope: !5140)
!5161 = !DILocation(line: 492, column: 12, scope: !5140)
!5162 = !DILocation(line: 492, column: 10, scope: !5140)
!5163 = !DILocation(line: 491, column: 10, scope: !5140)
!5164 = !DILocation(line: 495, column: 10, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 495, column: 6)
!5166 = !DILocation(line: 495, column: 8, scope: !5165)
!5167 = !DILocation(line: 495, column: 6, scope: !5165)
!5168 = !DILocation(line: 495, column: 16, scope: !5165)
!5169 = !DILocation(line: 495, column: 6, scope: !5140)
!5170 = !DILocation(line: 498, column: 26, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 495, column: 31)
!5172 = !DILocation(line: 498, column: 31, scope: !5171)
!5173 = !DILocation(line: 496, column: 3, scope: !5171)
!5174 = !DILocation(line: 499, column: 3, scope: !5171)
!5175 = !DILocation(line: 502, column: 11, scope: !5140)
!5176 = !DILocation(line: 502, column: 15, scope: !5140)
!5177 = !DILocation(line: 502, column: 2, scope: !5140)
!5178 = !DILocation(line: 502, column: 9, scope: !5140)
!5179 = !DILocation(line: 503, column: 11, scope: !5140)
!5180 = !DILocation(line: 503, column: 15, scope: !5140)
!5181 = !DILocation(line: 503, column: 2, scope: !5140)
!5182 = !DILocation(line: 503, column: 9, scope: !5140)
!5183 = !DILocation(line: 504, column: 10, scope: !5140)
!5184 = !DILocation(line: 504, column: 18, scope: !5140)
!5185 = !DILocation(line: 504, column: 24, scope: !5140)
!5186 = !DILocation(line: 504, column: 2, scope: !5140)
!5187 = !DILocation(line: 506, column: 2, scope: !5140)
!5188 = !DILocation(line: 506, column: 2, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 506, column: 2)
!5190 = distinct !DILexicalBlock(scope: !5191, file: !3, line: 506, column: 2)
!5191 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 506, column: 2)
!5192 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 506, column: 2)
!5193 = !DILocation(line: 506, column: 2, scope: !5190)
!5194 = !DILocation(line: 506, column: 2, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5189, file: !3, line: 506, column: 2)
!5196 = !DILocation(line: 506, column: 2, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 506, column: 2)
!5198 = !DILocation(line: 506, column: 2, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5197, file: !3, line: 506, column: 2)
!5200 = !DILocation(line: 506, column: 2, scope: !5192)
!5201 = !DILocation(line: 508, column: 21, scope: !5140)
!5202 = !DILocation(line: 508, column: 28, scope: !5140)
!5203 = !DILocation(line: 508, column: 8, scope: !5140)
!5204 = !DILocation(line: 508, column: 6, scope: !5140)
!5205 = !DILocation(line: 515, column: 9, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 515, column: 6)
!5207 = !DILocation(line: 515, column: 13, scope: !5206)
!5208 = !DILocation(line: 515, column: 23, scope: !5206)
!5209 = !DILocation(line: 515, column: 34, scope: !5206)
!5210 = !DILocation(line: 515, column: 39, scope: !5206)
!5211 = !DILocation(line: 515, column: 43, scope: !5206)
!5212 = !DILocation(line: 515, column: 53, scope: !5206)
!5213 = !DILocation(line: 515, column: 6, scope: !5140)
!5214 = !DILocation(line: 516, column: 20, scope: !5206)
!5215 = !DILocation(line: 516, column: 28, scope: !5206)
!5216 = !DILocation(line: 516, column: 32, scope: !5206)
!5217 = !DILocation(line: 516, column: 3, scope: !5206)
!5218 = !DILocation(line: 518, column: 6, scope: !5219)
!5219 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 518, column: 6)
!5220 = !DILocation(line: 518, column: 10, scope: !5219)
!5221 = !DILocation(line: 518, column: 6, scope: !5140)
!5222 = !DILocation(line: 519, column: 7, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5224, file: !3, line: 519, column: 7)
!5224 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 518, column: 16)
!5225 = !DILocation(line: 519, column: 11, scope: !5223)
!5226 = !DILocation(line: 519, column: 7, scope: !5224)
!5227 = !DILocation(line: 520, column: 4, scope: !5223)
!5228 = !DILocation(line: 520, column: 4, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5230, file: !3, line: 520, column: 4)
!5230 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 520, column: 4)
!5231 = distinct !DILexicalBlock(scope: !5232, file: !3, line: 520, column: 4)
!5232 = distinct !DILexicalBlock(scope: !5223, file: !3, line: 520, column: 4)
!5233 = !DILocation(line: 520, column: 4, scope: !5230)
!5234 = !DILocation(line: 520, column: 4, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 520, column: 4)
!5236 = !DILocation(line: 520, column: 4, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5235, file: !3, line: 520, column: 4)
!5238 = !DILocation(line: 520, column: 4, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5237, file: !3, line: 520, column: 4)
!5240 = !DILocation(line: 520, column: 4, scope: !5232)
!5241 = !DILocation(line: 522, column: 10, scope: !5224)
!5242 = !DILocation(line: 522, column: 14, scope: !5224)
!5243 = !DILocation(line: 522, column: 20, scope: !5224)
!5244 = !DILocation(line: 522, column: 3, scope: !5224)
!5245 = !DILocation(line: 525, column: 2, scope: !5140)
!5246 = !DILocation(line: 526, column: 1, scope: !5140)
!5247 = distinct !DISubprogram(name: "stb0899_write_reg", scope: !3, file: !3, line: 528, type: !5248, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{!96, !4407, !7, !419}
!5250 = !DILocalVariable(name: "state", arg: 1, scope: !5247, file: !3, line: 528, type: !4407)
!5251 = !DILocation(line: 528, column: 45, scope: !5247)
!5252 = !DILocalVariable(name: "reg", arg: 2, scope: !5247, file: !3, line: 528, type: !7)
!5253 = !DILocation(line: 528, column: 65, scope: !5247)
!5254 = !DILocalVariable(name: "data", arg: 3, scope: !5247, file: !3, line: 528, type: !419)
!5255 = !DILocation(line: 528, column: 73, scope: !5247)
!5256 = !DILocalVariable(name: "tmp", scope: !5247, file: !3, line: 530, type: !419)
!5257 = !DILocation(line: 530, column: 5, scope: !5247)
!5258 = !DILocation(line: 530, column: 11, scope: !5247)
!5259 = !DILocation(line: 531, column: 28, scope: !5247)
!5260 = !DILocation(line: 531, column: 35, scope: !5247)
!5261 = !DILocation(line: 531, column: 9, scope: !5247)
!5262 = !DILocation(line: 531, column: 2, scope: !5247)
!5263 = distinct !DISubprogram(name: "stb0899_i2c_gate_ctrl", scope: !3, file: !3, line: 1222, type: !4290, scopeLine: 1223, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5264 = !DILocalVariable(name: "fe", arg: 1, scope: !5263, file: !3, line: 1222, type: !506)
!5265 = !DILocation(line: 1222, column: 48, scope: !5263)
!5266 = !DILocalVariable(name: "enable", arg: 2, scope: !5263, file: !3, line: 1222, type: !96)
!5267 = !DILocation(line: 1222, column: 56, scope: !5263)
!5268 = !DILocalVariable(name: "i2c_stat", scope: !5263, file: !3, line: 1224, type: !96)
!5269 = !DILocation(line: 1224, column: 6, scope: !5263)
!5270 = !DILocalVariable(name: "state", scope: !5263, file: !3, line: 1225, type: !4407)
!5271 = !DILocation(line: 1225, column: 24, scope: !5263)
!5272 = !DILocation(line: 1225, column: 32, scope: !5263)
!5273 = !DILocation(line: 1225, column: 36, scope: !5263)
!5274 = !DILocation(line: 1227, column: 30, scope: !5263)
!5275 = !DILocation(line: 1227, column: 13, scope: !5263)
!5276 = !DILocation(line: 1227, column: 11, scope: !5263)
!5277 = !DILocation(line: 1228, column: 6, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 1228, column: 6)
!5279 = !DILocation(line: 1228, column: 15, scope: !5278)
!5280 = !DILocation(line: 1228, column: 6, scope: !5263)
!5281 = !DILocation(line: 1229, column: 3, scope: !5278)
!5282 = !DILocation(line: 1231, column: 6, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 1231, column: 6)
!5284 = !DILocation(line: 1231, column: 6, scope: !5263)
!5285 = !DILocation(line: 1232, column: 3, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 1231, column: 14)
!5287 = !DILocation(line: 1232, column: 3, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5289, file: !3, line: 1232, column: 3)
!5289 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 1232, column: 3)
!5290 = distinct !DILexicalBlock(scope: !5291, file: !3, line: 1232, column: 3)
!5291 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 1232, column: 3)
!5292 = !DILocation(line: 1232, column: 3, scope: !5289)
!5293 = !DILocation(line: 1232, column: 3, scope: !5294)
!5294 = distinct !DILexicalBlock(scope: !5288, file: !3, line: 1232, column: 3)
!5295 = !DILocation(line: 1232, column: 3, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5294, file: !3, line: 1232, column: 3)
!5297 = !DILocation(line: 1232, column: 3, scope: !5298)
!5298 = distinct !DILexicalBlock(scope: !5296, file: !3, line: 1232, column: 3)
!5299 = !DILocation(line: 1232, column: 3, scope: !5291)
!5300 = !DILocation(line: 1233, column: 12, scope: !5286)
!5301 = !DILocation(line: 1234, column: 25, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 1234, column: 7)
!5303 = !DILocation(line: 1234, column: 48, scope: !5302)
!5304 = !DILocation(line: 1234, column: 7, scope: !5302)
!5305 = !DILocation(line: 1234, column: 58, scope: !5302)
!5306 = !DILocation(line: 1234, column: 7, scope: !5286)
!5307 = !DILocation(line: 1235, column: 4, scope: !5302)
!5308 = !DILocation(line: 1236, column: 2, scope: !5286)
!5309 = !DILocation(line: 1237, column: 3, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 1236, column: 9)
!5311 = !DILocation(line: 1237, column: 3, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 1237, column: 3)
!5313 = distinct !DILexicalBlock(scope: !5314, file: !3, line: 1237, column: 3)
!5314 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 1237, column: 3)
!5315 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1237, column: 3)
!5316 = !DILocation(line: 1237, column: 3, scope: !5313)
!5317 = !DILocation(line: 1237, column: 3, scope: !5318)
!5318 = distinct !DILexicalBlock(scope: !5312, file: !3, line: 1237, column: 3)
!5319 = !DILocation(line: 1237, column: 3, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 1237, column: 3)
!5321 = !DILocation(line: 1237, column: 3, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 1237, column: 3)
!5323 = !DILocation(line: 1237, column: 3, scope: !5315)
!5324 = !DILocation(line: 1238, column: 12, scope: !5310)
!5325 = !DILocation(line: 1239, column: 25, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1239, column: 7)
!5327 = !DILocation(line: 1239, column: 48, scope: !5326)
!5328 = !DILocation(line: 1239, column: 7, scope: !5326)
!5329 = !DILocation(line: 1239, column: 58, scope: !5326)
!5330 = !DILocation(line: 1239, column: 7, scope: !5310)
!5331 = !DILocation(line: 1240, column: 4, scope: !5326)
!5332 = !DILocation(line: 1242, column: 2, scope: !5263)
!5333 = !DILabel(scope: !5263, name: "err", file: !3, line: 1243)
!5334 = !DILocation(line: 1243, column: 1, scope: !5263)
!5335 = !DILocation(line: 1244, column: 2, scope: !5263)
!5336 = !DILocation(line: 1244, column: 2, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5338, file: !3, line: 1244, column: 2)
!5338 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 1244, column: 2)
!5339 = distinct !DILexicalBlock(scope: !5340, file: !3, line: 1244, column: 2)
!5340 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 1244, column: 2)
!5341 = !DILocation(line: 1244, column: 2, scope: !5338)
!5342 = !DILocation(line: 1244, column: 2, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 1244, column: 2)
!5344 = !DILocation(line: 1244, column: 2, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5343, file: !3, line: 1244, column: 2)
!5346 = !DILocation(line: 1244, column: 2, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 1244, column: 2)
!5348 = !DILocation(line: 1244, column: 2, scope: !5340)
!5349 = !DILocation(line: 1245, column: 2, scope: !5263)
!5350 = !DILocation(line: 1246, column: 1, scope: !5263)
!5351 = distinct !DISubprogram(name: "stb0899_attach", scope: !3, file: !3, line: 1612, type: !5352, scopeLine: 1613, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{!506, !4534, !4411}
!5354 = !DILocalVariable(name: "config", arg: 1, scope: !5351, file: !3, line: 1612, type: !4534)
!5355 = !DILocation(line: 1612, column: 60, scope: !5351)
!5356 = !DILocalVariable(name: "i2c", arg: 2, scope: !5351, file: !3, line: 1612, type: !4411)
!5357 = !DILocation(line: 1612, column: 88, scope: !5351)
!5358 = !DILocalVariable(name: "state", scope: !5351, file: !3, line: 1614, type: !4407)
!5359 = !DILocation(line: 1614, column: 24, scope: !5351)
!5360 = !DILocation(line: 1616, column: 10, scope: !5351)
!5361 = !DILocation(line: 1616, column: 8, scope: !5351)
!5362 = !DILocation(line: 1617, column: 6, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 1617, column: 6)
!5364 = !DILocation(line: 1617, column: 12, scope: !5363)
!5365 = !DILocation(line: 1617, column: 6, scope: !5351)
!5366 = !DILocation(line: 1618, column: 3, scope: !5363)
!5367 = !DILocation(line: 1620, column: 2, scope: !5351)
!5368 = !DILocation(line: 1620, column: 9, scope: !5351)
!5369 = !DILocation(line: 1620, column: 20, scope: !5351)
!5370 = !DILocation(line: 1621, column: 21, scope: !5351)
!5371 = !DILocation(line: 1621, column: 2, scope: !5351)
!5372 = !DILocation(line: 1621, column: 9, scope: !5351)
!5373 = !DILocation(line: 1621, column: 19, scope: !5351)
!5374 = !DILocation(line: 1622, column: 18, scope: !5351)
!5375 = !DILocation(line: 1622, column: 2, scope: !5351)
!5376 = !DILocation(line: 1622, column: 9, scope: !5351)
!5377 = !DILocation(line: 1622, column: 16, scope: !5351)
!5378 = !DILocation(line: 1623, column: 2, scope: !5351)
!5379 = !DILocation(line: 1623, column: 9, scope: !5351)
!5380 = !DILocation(line: 1623, column: 18, scope: !5351)
!5381 = !DILocation(line: 1623, column: 26, scope: !5351)
!5382 = !DILocation(line: 1624, column: 37, scope: !5351)
!5383 = !DILocation(line: 1624, column: 2, scope: !5351)
!5384 = !DILocation(line: 1624, column: 9, scope: !5351)
!5385 = !DILocation(line: 1624, column: 18, scope: !5351)
!5386 = !DILocation(line: 1624, column: 35, scope: !5351)
!5387 = !DILocation(line: 1626, column: 31, scope: !5351)
!5388 = !DILocation(line: 1626, column: 39, scope: !5351)
!5389 = !DILocation(line: 1626, column: 2, scope: !5351)
!5390 = !DILocation(line: 1626, column: 9, scope: !5351)
!5391 = !DILocation(line: 1626, column: 18, scope: !5351)
!5392 = !DILocation(line: 1626, column: 29, scope: !5351)
!5393 = !DILocation(line: 1628, column: 18, scope: !5351)
!5394 = !DILocation(line: 1628, column: 25, scope: !5351)
!5395 = !DILocation(line: 1628, column: 2, scope: !5351)
!5396 = !DILocation(line: 1629, column: 25, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5351, file: !3, line: 1629, column: 6)
!5398 = !DILocation(line: 1629, column: 6, scope: !5397)
!5399 = !DILocation(line: 1629, column: 32, scope: !5397)
!5400 = !DILocation(line: 1629, column: 6, scope: !5351)
!5401 = !DILocation(line: 1630, column: 3, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5397, file: !3, line: 1629, column: 44)
!5403 = !DILocation(line: 1631, column: 3, scope: !5402)
!5404 = !DILocation(line: 1634, column: 2, scope: !5351)
!5405 = !DILocation(line: 1635, column: 10, scope: !5351)
!5406 = !DILocation(line: 1635, column: 17, scope: !5351)
!5407 = !DILocation(line: 1635, column: 2, scope: !5351)
!5408 = !DILabel(scope: !5351, name: "error", file: !3, line: 1637)
!5409 = !DILocation(line: 1637, column: 1, scope: !5351)
!5410 = !DILocation(line: 1638, column: 8, scope: !5351)
!5411 = !DILocation(line: 1638, column: 2, scope: !5351)
!5412 = !DILocation(line: 1639, column: 2, scope: !5351)
!5413 = !DILocation(line: 1640, column: 1, scope: !5351)
!5414 = distinct !DISubprogram(name: "kzalloc", scope: !359, file: !359, line: 662, type: !5415, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{!368, !645, !366}
!5417 = !DILocalVariable(name: "s", arg: 1, scope: !5418, file: !359, line: 445, type: !1245)
!5418 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !359, file: !359, line: 445, type: !5419, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5419 = !DISubroutineType(types: !5420)
!5420 = !{!368, !1245, !366, !645}
!5421 = !DILocation(line: 445, column: 72, scope: !5418, inlinedAt: !5422)
!5422 = distinct !DILocation(line: 552, column: 10, scope: !5423, inlinedAt: !5426)
!5423 = distinct !DILexicalBlock(scope: !5424, file: !359, line: 540, column: 34)
!5424 = distinct !DILexicalBlock(scope: !5425, file: !359, line: 540, column: 6)
!5425 = distinct !DISubprogram(name: "kmalloc", scope: !359, file: !359, line: 538, type: !5415, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5426 = distinct !DILocation(line: 664, column: 9, scope: !5414)
!5427 = !DILocalVariable(name: "flags", arg: 2, scope: !5418, file: !359, line: 446, type: !366)
!5428 = !DILocation(line: 446, column: 9, scope: !5418, inlinedAt: !5422)
!5429 = !DILocalVariable(name: "size", arg: 3, scope: !5418, file: !359, line: 446, type: !645)
!5430 = !DILocation(line: 446, column: 23, scope: !5418, inlinedAt: !5422)
!5431 = !DILocalVariable(name: "ret", scope: !5418, file: !359, line: 448, type: !368)
!5432 = !DILocation(line: 448, column: 8, scope: !5418, inlinedAt: !5422)
!5433 = !DILocalVariable(name: "flags", arg: 1, scope: !5434, file: !359, line: 318, type: !366)
!5434 = distinct !DISubprogram(name: "kmalloc_type", scope: !359, file: !359, line: 318, type: !5435, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5435 = !DISubroutineType(types: !5436)
!5436 = !{!358, !366}
!5437 = !DILocation(line: 318, column: 67, scope: !5434, inlinedAt: !5438)
!5438 = distinct !DILocation(line: 553, column: 20, scope: !5423, inlinedAt: !5426)
!5439 = !DILocalVariable(name: "size", arg: 1, scope: !5440, file: !359, line: 346, type: !645)
!5440 = distinct !DISubprogram(name: "kmalloc_index", scope: !359, file: !359, line: 346, type: !5441, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5441 = !DISubroutineType(types: !5442)
!5442 = !{!7, !645}
!5443 = !DILocation(line: 346, column: 58, scope: !5440, inlinedAt: !5444)
!5444 = distinct !DILocation(line: 547, column: 11, scope: !5423, inlinedAt: !5426)
!5445 = !DILocalVariable(name: "size", arg: 1, scope: !5446, file: !359, line: 472, type: !645)
!5446 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !359, file: !359, line: 472, type: !5447, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5447 = !DISubroutineType(types: !5448)
!5448 = !{!368, !645, !366, !7}
!5449 = !DILocation(line: 472, column: 28, scope: !5446, inlinedAt: !5450)
!5450 = distinct !DILocation(line: 481, column: 9, scope: !5451, inlinedAt: !5452)
!5451 = distinct !DISubprogram(name: "kmalloc_large", scope: !359, file: !359, line: 478, type: !5415, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5452 = distinct !DILocation(line: 545, column: 11, scope: !5453, inlinedAt: !5426)
!5453 = distinct !DILexicalBlock(scope: !5423, file: !359, line: 544, column: 7)
!5454 = !DILocalVariable(name: "flags", arg: 2, scope: !5446, file: !359, line: 472, type: !366)
!5455 = !DILocation(line: 472, column: 40, scope: !5446, inlinedAt: !5450)
!5456 = !DILocalVariable(name: "order", arg: 3, scope: !5446, file: !359, line: 472, type: !7)
!5457 = !DILocation(line: 472, column: 60, scope: !5446, inlinedAt: !5450)
!5458 = !DILocalVariable(name: "size", arg: 1, scope: !5451, file: !359, line: 478, type: !645)
!5459 = !DILocation(line: 478, column: 51, scope: !5451, inlinedAt: !5452)
!5460 = !DILocalVariable(name: "flags", arg: 2, scope: !5451, file: !359, line: 478, type: !366)
!5461 = !DILocation(line: 478, column: 63, scope: !5451, inlinedAt: !5452)
!5462 = !DILocalVariable(name: "order", scope: !5451, file: !359, line: 480, type: !7)
!5463 = !DILocation(line: 480, column: 15, scope: !5451, inlinedAt: !5452)
!5464 = !DILocalVariable(name: "size", arg: 1, scope: !5425, file: !359, line: 538, type: !645)
!5465 = !DILocation(line: 538, column: 45, scope: !5425, inlinedAt: !5426)
!5466 = !DILocalVariable(name: "flags", arg: 2, scope: !5425, file: !359, line: 538, type: !366)
!5467 = !DILocation(line: 538, column: 57, scope: !5425, inlinedAt: !5426)
!5468 = !DILocalVariable(name: "index", scope: !5423, file: !359, line: 542, type: !7)
!5469 = !DILocation(line: 542, column: 16, scope: !5423, inlinedAt: !5426)
!5470 = !DILocalVariable(name: "size", arg: 1, scope: !5414, file: !359, line: 662, type: !645)
!5471 = !DILocation(line: 662, column: 36, scope: !5414)
!5472 = !DILocalVariable(name: "flags", arg: 2, scope: !5414, file: !359, line: 662, type: !366)
!5473 = !DILocation(line: 662, column: 48, scope: !5414)
!5474 = !DILocation(line: 664, column: 17, scope: !5414)
!5475 = !DILocation(line: 664, column: 23, scope: !5414)
!5476 = !DILocation(line: 664, column: 29, scope: !5414)
!5477 = !DILocation(line: 540, column: 27, scope: !5424, inlinedAt: !5426)
!5478 = !DILocation(line: 540, column: 6, scope: !5424, inlinedAt: !5426)
!5479 = !DILocation(line: 540, column: 6, scope: !5425, inlinedAt: !5426)
!5480 = !DILocation(line: 544, column: 7, scope: !5453, inlinedAt: !5426)
!5481 = !DILocation(line: 544, column: 12, scope: !5453, inlinedAt: !5426)
!5482 = !DILocation(line: 544, column: 7, scope: !5423, inlinedAt: !5426)
!5483 = !DILocation(line: 545, column: 25, scope: !5453, inlinedAt: !5426)
!5484 = !DILocation(line: 545, column: 31, scope: !5453, inlinedAt: !5426)
!5485 = !DILocation(line: 480, column: 33, scope: !5451, inlinedAt: !5452)
!5486 = !DILocation(line: 480, column: 23, scope: !5451, inlinedAt: !5452)
!5487 = !DILocation(line: 481, column: 29, scope: !5451, inlinedAt: !5452)
!5488 = !DILocation(line: 481, column: 35, scope: !5451, inlinedAt: !5452)
!5489 = !DILocation(line: 481, column: 42, scope: !5451, inlinedAt: !5452)
!5490 = !DILocation(line: 474, column: 23, scope: !5446, inlinedAt: !5450)
!5491 = !DILocation(line: 474, column: 29, scope: !5446, inlinedAt: !5450)
!5492 = !DILocation(line: 474, column: 36, scope: !5446, inlinedAt: !5450)
!5493 = !DILocation(line: 474, column: 9, scope: !5446, inlinedAt: !5450)
!5494 = !DILocation(line: 545, column: 4, scope: !5453, inlinedAt: !5426)
!5495 = !DILocation(line: 547, column: 25, scope: !5423, inlinedAt: !5426)
!5496 = !DILocation(line: 348, column: 7, scope: !5497, inlinedAt: !5444)
!5497 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 348, column: 6)
!5498 = !DILocation(line: 348, column: 6, scope: !5440, inlinedAt: !5444)
!5499 = !DILocation(line: 349, column: 3, scope: !5497, inlinedAt: !5444)
!5500 = !DILocation(line: 351, column: 6, scope: !5501, inlinedAt: !5444)
!5501 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 351, column: 6)
!5502 = !DILocation(line: 351, column: 11, scope: !5501, inlinedAt: !5444)
!5503 = !DILocation(line: 351, column: 6, scope: !5440, inlinedAt: !5444)
!5504 = !DILocation(line: 352, column: 3, scope: !5501, inlinedAt: !5444)
!5505 = !DILocation(line: 354, column: 32, scope: !5506, inlinedAt: !5444)
!5506 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 354, column: 6)
!5507 = !DILocation(line: 354, column: 37, scope: !5506, inlinedAt: !5444)
!5508 = !DILocation(line: 354, column: 42, scope: !5506, inlinedAt: !5444)
!5509 = !DILocation(line: 354, column: 45, scope: !5506, inlinedAt: !5444)
!5510 = !DILocation(line: 354, column: 50, scope: !5506, inlinedAt: !5444)
!5511 = !DILocation(line: 354, column: 6, scope: !5440, inlinedAt: !5444)
!5512 = !DILocation(line: 355, column: 3, scope: !5506, inlinedAt: !5444)
!5513 = !DILocation(line: 356, column: 32, scope: !5514, inlinedAt: !5444)
!5514 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 356, column: 6)
!5515 = !DILocation(line: 356, column: 37, scope: !5514, inlinedAt: !5444)
!5516 = !DILocation(line: 356, column: 43, scope: !5514, inlinedAt: !5444)
!5517 = !DILocation(line: 356, column: 46, scope: !5514, inlinedAt: !5444)
!5518 = !DILocation(line: 356, column: 51, scope: !5514, inlinedAt: !5444)
!5519 = !DILocation(line: 356, column: 6, scope: !5440, inlinedAt: !5444)
!5520 = !DILocation(line: 357, column: 3, scope: !5514, inlinedAt: !5444)
!5521 = !DILocation(line: 358, column: 6, scope: !5522, inlinedAt: !5444)
!5522 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 358, column: 6)
!5523 = !DILocation(line: 358, column: 11, scope: !5522, inlinedAt: !5444)
!5524 = !DILocation(line: 358, column: 6, scope: !5440, inlinedAt: !5444)
!5525 = !DILocation(line: 358, column: 26, scope: !5522, inlinedAt: !5444)
!5526 = !DILocation(line: 359, column: 6, scope: !5527, inlinedAt: !5444)
!5527 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 359, column: 6)
!5528 = !DILocation(line: 359, column: 11, scope: !5527, inlinedAt: !5444)
!5529 = !DILocation(line: 359, column: 6, scope: !5440, inlinedAt: !5444)
!5530 = !DILocation(line: 359, column: 26, scope: !5527, inlinedAt: !5444)
!5531 = !DILocation(line: 360, column: 6, scope: !5532, inlinedAt: !5444)
!5532 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 360, column: 6)
!5533 = !DILocation(line: 360, column: 11, scope: !5532, inlinedAt: !5444)
!5534 = !DILocation(line: 360, column: 6, scope: !5440, inlinedAt: !5444)
!5535 = !DILocation(line: 360, column: 26, scope: !5532, inlinedAt: !5444)
!5536 = !DILocation(line: 361, column: 6, scope: !5537, inlinedAt: !5444)
!5537 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 361, column: 6)
!5538 = !DILocation(line: 361, column: 11, scope: !5537, inlinedAt: !5444)
!5539 = !DILocation(line: 361, column: 6, scope: !5440, inlinedAt: !5444)
!5540 = !DILocation(line: 361, column: 26, scope: !5537, inlinedAt: !5444)
!5541 = !DILocation(line: 362, column: 6, scope: !5542, inlinedAt: !5444)
!5542 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 362, column: 6)
!5543 = !DILocation(line: 362, column: 11, scope: !5542, inlinedAt: !5444)
!5544 = !DILocation(line: 362, column: 6, scope: !5440, inlinedAt: !5444)
!5545 = !DILocation(line: 362, column: 26, scope: !5542, inlinedAt: !5444)
!5546 = !DILocation(line: 363, column: 6, scope: !5547, inlinedAt: !5444)
!5547 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 363, column: 6)
!5548 = !DILocation(line: 363, column: 11, scope: !5547, inlinedAt: !5444)
!5549 = !DILocation(line: 363, column: 6, scope: !5440, inlinedAt: !5444)
!5550 = !DILocation(line: 363, column: 26, scope: !5547, inlinedAt: !5444)
!5551 = !DILocation(line: 364, column: 6, scope: !5552, inlinedAt: !5444)
!5552 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 364, column: 6)
!5553 = !DILocation(line: 364, column: 11, scope: !5552, inlinedAt: !5444)
!5554 = !DILocation(line: 364, column: 6, scope: !5440, inlinedAt: !5444)
!5555 = !DILocation(line: 364, column: 26, scope: !5552, inlinedAt: !5444)
!5556 = !DILocation(line: 365, column: 6, scope: !5557, inlinedAt: !5444)
!5557 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 365, column: 6)
!5558 = !DILocation(line: 365, column: 11, scope: !5557, inlinedAt: !5444)
!5559 = !DILocation(line: 365, column: 6, scope: !5440, inlinedAt: !5444)
!5560 = !DILocation(line: 365, column: 26, scope: !5557, inlinedAt: !5444)
!5561 = !DILocation(line: 366, column: 6, scope: !5562, inlinedAt: !5444)
!5562 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 366, column: 6)
!5563 = !DILocation(line: 366, column: 11, scope: !5562, inlinedAt: !5444)
!5564 = !DILocation(line: 366, column: 6, scope: !5440, inlinedAt: !5444)
!5565 = !DILocation(line: 366, column: 26, scope: !5562, inlinedAt: !5444)
!5566 = !DILocation(line: 367, column: 6, scope: !5567, inlinedAt: !5444)
!5567 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 367, column: 6)
!5568 = !DILocation(line: 367, column: 11, scope: !5567, inlinedAt: !5444)
!5569 = !DILocation(line: 367, column: 6, scope: !5440, inlinedAt: !5444)
!5570 = !DILocation(line: 367, column: 26, scope: !5567, inlinedAt: !5444)
!5571 = !DILocation(line: 368, column: 6, scope: !5572, inlinedAt: !5444)
!5572 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 368, column: 6)
!5573 = !DILocation(line: 368, column: 11, scope: !5572, inlinedAt: !5444)
!5574 = !DILocation(line: 368, column: 6, scope: !5440, inlinedAt: !5444)
!5575 = !DILocation(line: 368, column: 26, scope: !5572, inlinedAt: !5444)
!5576 = !DILocation(line: 369, column: 6, scope: !5577, inlinedAt: !5444)
!5577 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 369, column: 6)
!5578 = !DILocation(line: 369, column: 11, scope: !5577, inlinedAt: !5444)
!5579 = !DILocation(line: 369, column: 6, scope: !5440, inlinedAt: !5444)
!5580 = !DILocation(line: 369, column: 26, scope: !5577, inlinedAt: !5444)
!5581 = !DILocation(line: 370, column: 6, scope: !5582, inlinedAt: !5444)
!5582 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 370, column: 6)
!5583 = !DILocation(line: 370, column: 11, scope: !5582, inlinedAt: !5444)
!5584 = !DILocation(line: 370, column: 6, scope: !5440, inlinedAt: !5444)
!5585 = !DILocation(line: 370, column: 26, scope: !5582, inlinedAt: !5444)
!5586 = !DILocation(line: 371, column: 6, scope: !5587, inlinedAt: !5444)
!5587 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 371, column: 6)
!5588 = !DILocation(line: 371, column: 11, scope: !5587, inlinedAt: !5444)
!5589 = !DILocation(line: 371, column: 6, scope: !5440, inlinedAt: !5444)
!5590 = !DILocation(line: 371, column: 26, scope: !5587, inlinedAt: !5444)
!5591 = !DILocation(line: 372, column: 6, scope: !5592, inlinedAt: !5444)
!5592 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 372, column: 6)
!5593 = !DILocation(line: 372, column: 11, scope: !5592, inlinedAt: !5444)
!5594 = !DILocation(line: 372, column: 6, scope: !5440, inlinedAt: !5444)
!5595 = !DILocation(line: 372, column: 26, scope: !5592, inlinedAt: !5444)
!5596 = !DILocation(line: 373, column: 6, scope: !5597, inlinedAt: !5444)
!5597 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 373, column: 6)
!5598 = !DILocation(line: 373, column: 11, scope: !5597, inlinedAt: !5444)
!5599 = !DILocation(line: 373, column: 6, scope: !5440, inlinedAt: !5444)
!5600 = !DILocation(line: 373, column: 26, scope: !5597, inlinedAt: !5444)
!5601 = !DILocation(line: 374, column: 6, scope: !5602, inlinedAt: !5444)
!5602 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 374, column: 6)
!5603 = !DILocation(line: 374, column: 11, scope: !5602, inlinedAt: !5444)
!5604 = !DILocation(line: 374, column: 6, scope: !5440, inlinedAt: !5444)
!5605 = !DILocation(line: 374, column: 26, scope: !5602, inlinedAt: !5444)
!5606 = !DILocation(line: 375, column: 6, scope: !5607, inlinedAt: !5444)
!5607 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 375, column: 6)
!5608 = !DILocation(line: 375, column: 11, scope: !5607, inlinedAt: !5444)
!5609 = !DILocation(line: 375, column: 6, scope: !5440, inlinedAt: !5444)
!5610 = !DILocation(line: 375, column: 27, scope: !5607, inlinedAt: !5444)
!5611 = !DILocation(line: 376, column: 6, scope: !5612, inlinedAt: !5444)
!5612 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 376, column: 6)
!5613 = !DILocation(line: 376, column: 11, scope: !5612, inlinedAt: !5444)
!5614 = !DILocation(line: 376, column: 6, scope: !5440, inlinedAt: !5444)
!5615 = !DILocation(line: 376, column: 32, scope: !5612, inlinedAt: !5444)
!5616 = !DILocation(line: 377, column: 6, scope: !5617, inlinedAt: !5444)
!5617 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 377, column: 6)
!5618 = !DILocation(line: 377, column: 11, scope: !5617, inlinedAt: !5444)
!5619 = !DILocation(line: 377, column: 6, scope: !5440, inlinedAt: !5444)
!5620 = !DILocation(line: 377, column: 32, scope: !5617, inlinedAt: !5444)
!5621 = !DILocation(line: 378, column: 6, scope: !5622, inlinedAt: !5444)
!5622 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 378, column: 6)
!5623 = !DILocation(line: 378, column: 11, scope: !5622, inlinedAt: !5444)
!5624 = !DILocation(line: 378, column: 6, scope: !5440, inlinedAt: !5444)
!5625 = !DILocation(line: 378, column: 32, scope: !5622, inlinedAt: !5444)
!5626 = !DILocation(line: 379, column: 6, scope: !5627, inlinedAt: !5444)
!5627 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 379, column: 6)
!5628 = !DILocation(line: 379, column: 11, scope: !5627, inlinedAt: !5444)
!5629 = !DILocation(line: 379, column: 6, scope: !5440, inlinedAt: !5444)
!5630 = !DILocation(line: 379, column: 33, scope: !5627, inlinedAt: !5444)
!5631 = !DILocation(line: 380, column: 6, scope: !5632, inlinedAt: !5444)
!5632 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 380, column: 6)
!5633 = !DILocation(line: 380, column: 11, scope: !5632, inlinedAt: !5444)
!5634 = !DILocation(line: 380, column: 6, scope: !5440, inlinedAt: !5444)
!5635 = !DILocation(line: 380, column: 33, scope: !5632, inlinedAt: !5444)
!5636 = !DILocation(line: 381, column: 6, scope: !5637, inlinedAt: !5444)
!5637 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 381, column: 6)
!5638 = !DILocation(line: 381, column: 11, scope: !5637, inlinedAt: !5444)
!5639 = !DILocation(line: 381, column: 6, scope: !5440, inlinedAt: !5444)
!5640 = !DILocation(line: 381, column: 33, scope: !5637, inlinedAt: !5444)
!5641 = !DILocation(line: 382, column: 2, scope: !5642, inlinedAt: !5444)
!5642 = distinct !DILexicalBlock(scope: !5643, file: !359, line: 382, column: 2)
!5643 = distinct !DILexicalBlock(scope: !5440, file: !359, line: 382, column: 2)
!5644 = !{i32 -2144202525, i32 -2144202496, i32 -2144202450, i32 -2144202392, i32 -2144202338, i32 -2144202284, i32 -2144202229, i32 -2144202198}
!5645 = !DILocation(line: 382, column: 2, scope: !5646, inlinedAt: !5444)
!5646 = distinct !DILexicalBlock(scope: !5647, file: !359, line: 382, column: 2)
!5647 = distinct !DILexicalBlock(scope: !5643, file: !359, line: 382, column: 2)
!5648 = !{i32 -2144201755, i32 -2144201748, i32 -2144201694, i32 -2144201663, i32 -2144201633}
!5649 = !DILocation(line: 382, column: 2, scope: !5647, inlinedAt: !5444)
!5650 = !DILocation(line: 386, column: 1, scope: !5440, inlinedAt: !5444)
!5651 = !DILocation(line: 547, column: 9, scope: !5423, inlinedAt: !5426)
!5652 = !DILocation(line: 549, column: 8, scope: !5653, inlinedAt: !5426)
!5653 = distinct !DILexicalBlock(scope: !5423, file: !359, line: 549, column: 7)
!5654 = !DILocation(line: 549, column: 7, scope: !5423, inlinedAt: !5426)
!5655 = !DILocation(line: 550, column: 4, scope: !5653, inlinedAt: !5426)
!5656 = !DILocation(line: 553, column: 33, scope: !5423, inlinedAt: !5426)
!5657 = !DILocation(line: 325, column: 6, scope: !5658, inlinedAt: !5438)
!5658 = distinct !DILexicalBlock(scope: !5434, file: !359, line: 325, column: 6)
!5659 = !DILocation(line: 325, column: 6, scope: !5434, inlinedAt: !5438)
!5660 = !DILocation(line: 326, column: 3, scope: !5658, inlinedAt: !5438)
!5661 = !DILocation(line: 332, column: 9, scope: !5434, inlinedAt: !5438)
!5662 = !DILocation(line: 332, column: 15, scope: !5434, inlinedAt: !5438)
!5663 = !DILocation(line: 332, column: 2, scope: !5434, inlinedAt: !5438)
!5664 = !DILocation(line: 336, column: 1, scope: !5434, inlinedAt: !5438)
!5665 = !DILocation(line: 553, column: 5, scope: !5423, inlinedAt: !5426)
!5666 = !DILocation(line: 553, column: 41, scope: !5423, inlinedAt: !5426)
!5667 = !DILocation(line: 554, column: 5, scope: !5423, inlinedAt: !5426)
!5668 = !DILocation(line: 554, column: 12, scope: !5423, inlinedAt: !5426)
!5669 = !DILocation(line: 448, column: 31, scope: !5418, inlinedAt: !5422)
!5670 = !DILocation(line: 448, column: 34, scope: !5418, inlinedAt: !5422)
!5671 = !DILocation(line: 448, column: 14, scope: !5418, inlinedAt: !5422)
!5672 = !DILocation(line: 450, column: 22, scope: !5418, inlinedAt: !5422)
!5673 = !DILocation(line: 450, column: 25, scope: !5418, inlinedAt: !5422)
!5674 = !DILocation(line: 450, column: 30, scope: !5418, inlinedAt: !5422)
!5675 = !DILocation(line: 450, column: 36, scope: !5418, inlinedAt: !5422)
!5676 = !DILocation(line: 450, column: 8, scope: !5418, inlinedAt: !5422)
!5677 = !DILocation(line: 450, column: 6, scope: !5418, inlinedAt: !5422)
!5678 = !DILocation(line: 451, column: 9, scope: !5418, inlinedAt: !5422)
!5679 = !DILocation(line: 552, column: 3, scope: !5423, inlinedAt: !5426)
!5680 = !DILocation(line: 557, column: 19, scope: !5425, inlinedAt: !5426)
!5681 = !DILocation(line: 557, column: 25, scope: !5425, inlinedAt: !5426)
!5682 = !DILocation(line: 557, column: 9, scope: !5425, inlinedAt: !5426)
!5683 = !DILocation(line: 557, column: 2, scope: !5425, inlinedAt: !5426)
!5684 = !DILocation(line: 558, column: 1, scope: !5425, inlinedAt: !5426)
!5685 = !DILocation(line: 664, column: 2, scope: !5414)
!5686 = distinct !DISubprogram(name: "stb0899_wakeup", scope: !3, file: !3, line: 858, type: !4197, scopeLine: 859, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5687 = !DILocalVariable(name: "fe", arg: 1, scope: !5686, file: !3, line: 858, type: !506)
!5688 = !DILocation(line: 858, column: 48, scope: !5686)
!5689 = !DILocalVariable(name: "rc", scope: !5686, file: !3, line: 860, type: !96)
!5690 = !DILocation(line: 860, column: 6, scope: !5686)
!5691 = !DILocalVariable(name: "state", scope: !5686, file: !3, line: 861, type: !4407)
!5692 = !DILocation(line: 861, column: 24, scope: !5686)
!5693 = !DILocation(line: 861, column: 32, scope: !5686)
!5694 = !DILocation(line: 861, column: 36, scope: !5686)
!5695 = !DILocation(line: 863, column: 30, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5686, file: !3, line: 863, column: 6)
!5697 = !DILocation(line: 863, column: 12, scope: !5696)
!5698 = !DILocation(line: 863, column: 10, scope: !5696)
!5699 = !DILocation(line: 863, column: 6, scope: !5686)
!5700 = !DILocation(line: 864, column: 10, scope: !5696)
!5701 = !DILocation(line: 864, column: 3, scope: !5696)
!5702 = !DILocation(line: 866, column: 30, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5686, file: !3, line: 866, column: 6)
!5704 = !DILocation(line: 866, column: 12, scope: !5703)
!5705 = !DILocation(line: 866, column: 10, scope: !5703)
!5706 = !DILocation(line: 866, column: 6, scope: !5686)
!5707 = !DILocation(line: 867, column: 10, scope: !5703)
!5708 = !DILocation(line: 867, column: 3, scope: !5703)
!5709 = !DILocation(line: 868, column: 30, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5686, file: !3, line: 868, column: 6)
!5711 = !DILocation(line: 868, column: 12, scope: !5710)
!5712 = !DILocation(line: 868, column: 10, scope: !5710)
!5713 = !DILocation(line: 868, column: 6, scope: !5686)
!5714 = !DILocation(line: 869, column: 10, scope: !5710)
!5715 = !DILocation(line: 869, column: 3, scope: !5710)
!5716 = !DILocation(line: 872, column: 19, scope: !5686)
!5717 = !DILocation(line: 872, column: 2, scope: !5686)
!5718 = !DILocation(line: 874, column: 2, scope: !5686)
!5719 = !DILocation(line: 875, column: 1, scope: !5686)
!5720 = distinct !DISubprogram(name: "stb0899_get_dev_id", scope: !3, file: !3, line: 1258, type: !5721, scopeLine: 1259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5721 = !DISubroutineType(types: !5722)
!5722 = !{!96, !4407}
!5723 = !DILocalVariable(name: "state", arg: 1, scope: !5720, file: !3, line: 1258, type: !4407)
!5724 = !DILocation(line: 1258, column: 53, scope: !5720)
!5725 = !DILocalVariable(name: "chip_id", scope: !5720, file: !3, line: 1260, type: !419)
!5726 = !DILocation(line: 1260, column: 5, scope: !5720)
!5727 = !DILocalVariable(name: "release", scope: !5720, file: !3, line: 1260, type: !419)
!5728 = !DILocation(line: 1260, column: 14, scope: !5720)
!5729 = !DILocalVariable(name: "id", scope: !5720, file: !3, line: 1261, type: !414)
!5730 = !DILocation(line: 1261, column: 6, scope: !5720)
!5731 = !DILocalVariable(name: "demod_ver", scope: !5720, file: !3, line: 1262, type: !489)
!5732 = !DILocation(line: 1262, column: 6, scope: !5720)
!5733 = !DILocalVariable(name: "fec_ver", scope: !5720, file: !3, line: 1262, type: !489)
!5734 = !DILocation(line: 1262, column: 21, scope: !5720)
!5735 = !DILocalVariable(name: "demod_str", scope: !5720, file: !3, line: 1263, type: !5736)
!5736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 40, elements: !5737)
!5737 = !{!5738}
!5738 = !DISubrange(count: 5)
!5739 = !DILocation(line: 1263, column: 7, scope: !5720)
!5740 = !DILocalVariable(name: "fec_str", scope: !5720, file: !3, line: 1264, type: !5736)
!5741 = !DILocation(line: 1264, column: 7, scope: !5720)
!5742 = !DILocation(line: 1266, column: 24, scope: !5720)
!5743 = !DILocation(line: 1266, column: 7, scope: !5720)
!5744 = !DILocation(line: 1266, column: 5, scope: !5720)
!5745 = !DILocation(line: 1267, column: 2, scope: !5720)
!5746 = !DILocation(line: 1267, column: 2, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 1267, column: 2)
!5748 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 1267, column: 2)
!5749 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 1267, column: 2)
!5750 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1267, column: 2)
!5751 = !DILocation(line: 1267, column: 2, scope: !5748)
!5752 = !DILocation(line: 1267, column: 2, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 1267, column: 2)
!5754 = !DILocation(line: 1267, column: 2, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 1267, column: 2)
!5756 = !DILocation(line: 1267, column: 2, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 1267, column: 2)
!5758 = !DILocation(line: 1267, column: 2, scope: !5750)
!5759 = !DILocation(line: 1268, column: 12, scope: !5720)
!5760 = !DILocation(line: 1268, column: 10, scope: !5720)
!5761 = !DILocation(line: 1269, column: 12, scope: !5720)
!5762 = !DILocation(line: 1269, column: 10, scope: !5720)
!5763 = !DILocation(line: 1271, column: 2, scope: !5720)
!5764 = !DILocation(line: 1271, column: 2, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 1271, column: 2)
!5766 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 1271, column: 2)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 1271, column: 2)
!5768 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1271, column: 2)
!5769 = !DILocation(line: 1271, column: 2, scope: !5766)
!5770 = !DILocation(line: 1271, column: 2, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 1271, column: 2)
!5772 = !DILocation(line: 1271, column: 2, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 1271, column: 2)
!5774 = !DILocation(line: 1271, column: 2, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 1271, column: 2)
!5776 = !DILocation(line: 1271, column: 2, scope: !5768)
!5777 = !DILocation(line: 1274, column: 12, scope: !5720)
!5778 = !DILocation(line: 1274, column: 62, scope: !5720)
!5779 = !DILocation(line: 1274, column: 2, scope: !5720)
!5780 = !DILocation(line: 1276, column: 14, scope: !5720)
!5781 = !DILocation(line: 1276, column: 12, scope: !5720)
!5782 = !DILocation(line: 1277, column: 2, scope: !5720)
!5783 = !DILocation(line: 1277, column: 2, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 1277, column: 2)
!5785 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 1277, column: 2)
!5786 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 1277, column: 2)
!5787 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1277, column: 2)
!5788 = !DILocation(line: 1277, column: 2, scope: !5785)
!5789 = !DILocation(line: 1277, column: 2, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 1277, column: 2)
!5791 = !DILocation(line: 1277, column: 2, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5790, file: !3, line: 1277, column: 2)
!5793 = !DILocation(line: 1277, column: 2, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5792, file: !3, line: 1277, column: 2)
!5795 = !DILocation(line: 1277, column: 2, scope: !5787)
!5796 = !DILocation(line: 1278, column: 12, scope: !5720)
!5797 = !DILocation(line: 1278, column: 64, scope: !5720)
!5798 = !DILocation(line: 1278, column: 2, scope: !5720)
!5799 = !DILocation(line: 1279, column: 12, scope: !5720)
!5800 = !DILocation(line: 1279, column: 10, scope: !5720)
!5801 = !DILocation(line: 1280, column: 9, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1280, column: 6)
!5803 = !DILocation(line: 1280, column: 17, scope: !5802)
!5804 = !DILocation(line: 1280, column: 6, scope: !5720)
!5805 = !DILocation(line: 1281, column: 3, scope: !5806)
!5806 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1280, column: 23)
!5807 = !DILocation(line: 1281, column: 3, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 1281, column: 3)
!5809 = distinct !DILexicalBlock(scope: !5810, file: !3, line: 1281, column: 3)
!5810 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 1281, column: 3)
!5811 = distinct !DILexicalBlock(scope: !5806, file: !3, line: 1281, column: 3)
!5812 = !DILocation(line: 1281, column: 3, scope: !5809)
!5813 = !DILocation(line: 1281, column: 3, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 1281, column: 3)
!5815 = !DILocation(line: 1281, column: 3, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 1281, column: 3)
!5817 = !DILocation(line: 1281, column: 3, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5816, file: !3, line: 1281, column: 3)
!5819 = !DILocation(line: 1281, column: 3, scope: !5811)
!5820 = !DILocation(line: 1283, column: 3, scope: !5806)
!5821 = !DILocation(line: 1285, column: 2, scope: !5720)
!5822 = !DILocation(line: 1285, column: 2, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 1285, column: 2)
!5824 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1285, column: 2)
!5825 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 1285, column: 2)
!5826 = distinct !DILexicalBlock(scope: !5720, file: !3, line: 1285, column: 2)
!5827 = !DILocation(line: 1285, column: 2, scope: !5824)
!5828 = !DILocation(line: 1285, column: 2, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 1285, column: 2)
!5830 = !DILocation(line: 1285, column: 2, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 1285, column: 2)
!5832 = !DILocation(line: 1285, column: 2, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 1285, column: 2)
!5834 = !DILocation(line: 1285, column: 2, scope: !5826)
!5835 = !DILocation(line: 1287, column: 2, scope: !5720)
!5836 = !DILocation(line: 1288, column: 1, scope: !5720)
!5837 = distinct !DISubprogram(name: "get_order", scope: !5838, file: !5838, line: 29, type: !5839, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5838 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!5839 = !DISubroutineType(types: !5840)
!5840 = !{!96, !648}
!5841 = !DILocalVariable(name: "x", arg: 1, scope: !5842, file: !5843, line: 366, type: !742)
!5842 = distinct !DISubprogram(name: "fls64", scope: !5843, file: !5843, line: 366, type: !5844, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5843 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5844 = !DISubroutineType(types: !5845)
!5845 = !{!96, !742}
!5846 = !DILocation(line: 366, column: 40, scope: !5842, inlinedAt: !5847)
!5847 = distinct !DILocation(line: 46, column: 9, scope: !5837)
!5848 = !DILocalVariable(name: "bitpos", scope: !5842, file: !5843, line: 368, type: !96)
!5849 = !DILocation(line: 368, column: 6, scope: !5842, inlinedAt: !5847)
!5850 = !DILocalVariable(name: "size", arg: 1, scope: !5837, file: !5838, line: 29, type: !648)
!5851 = !DILocation(line: 29, column: 63, scope: !5837)
!5852 = !DILocation(line: 31, column: 27, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5837, file: !5838, line: 31, column: 6)
!5854 = !DILocation(line: 31, column: 6, scope: !5853)
!5855 = !DILocation(line: 31, column: 6, scope: !5837)
!5856 = !DILocation(line: 32, column: 8, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5858, file: !5838, line: 32, column: 7)
!5858 = distinct !DILexicalBlock(scope: !5853, file: !5838, line: 31, column: 34)
!5859 = !DILocation(line: 32, column: 7, scope: !5858)
!5860 = !DILocation(line: 33, column: 4, scope: !5857)
!5861 = !DILocation(line: 35, column: 7, scope: !5862)
!5862 = distinct !DILexicalBlock(scope: !5858, file: !5838, line: 35, column: 7)
!5863 = !DILocation(line: 35, column: 12, scope: !5862)
!5864 = !DILocation(line: 35, column: 7, scope: !5858)
!5865 = !DILocation(line: 36, column: 4, scope: !5862)
!5866 = !DILocation(line: 38, column: 10, scope: !5858)
!5867 = !DILocation(line: 38, column: 28, scope: !5858)
!5868 = !DILocation(line: 38, column: 41, scope: !5858)
!5869 = !DILocation(line: 38, column: 3, scope: !5858)
!5870 = !DILocation(line: 41, column: 6, scope: !5837)
!5871 = !DILocation(line: 42, column: 7, scope: !5837)
!5872 = !DILocation(line: 46, column: 15, scope: !5837)
!5873 = !DILocation(line: 374, column: 2, scope: !5842, inlinedAt: !5847)
!5874 = !DILocation(line: 376, column: 14, scope: !5842, inlinedAt: !5847)
!5875 = !{i32 913462}
!5876 = !DILocation(line: 377, column: 9, scope: !5842, inlinedAt: !5847)
!5877 = !DILocation(line: 377, column: 16, scope: !5842, inlinedAt: !5847)
!5878 = !DILocation(line: 46, column: 2, scope: !5837)
!5879 = !DILocation(line: 48, column: 1, scope: !5837)
!5880 = distinct !DISubprogram(name: "__ilog2_u64", scope: !5881, file: !5881, line: 30, type: !5882, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5881 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!5882 = !DISubroutineType(types: !5883)
!5883 = !{!96, !741}
!5884 = !DILocation(line: 366, column: 40, scope: !5842, inlinedAt: !5885)
!5885 = distinct !DILocation(line: 32, column: 9, scope: !5880)
!5886 = !DILocation(line: 368, column: 6, scope: !5842, inlinedAt: !5885)
!5887 = !DILocalVariable(name: "n", arg: 1, scope: !5880, file: !5881, line: 30, type: !741)
!5888 = !DILocation(line: 30, column: 21, scope: !5880)
!5889 = !DILocation(line: 32, column: 15, scope: !5880)
!5890 = !DILocation(line: 374, column: 2, scope: !5842, inlinedAt: !5885)
!5891 = !DILocation(line: 376, column: 14, scope: !5842, inlinedAt: !5885)
!5892 = !DILocation(line: 377, column: 9, scope: !5842, inlinedAt: !5885)
!5893 = !DILocation(line: 377, column: 16, scope: !5842, inlinedAt: !5885)
!5894 = !DILocation(line: 32, column: 18, scope: !5880)
!5895 = !DILocation(line: 32, column: 2, scope: !5880)
!5896 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !5897, file: !5897, line: 137, type: !5898, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5897 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!5898 = !DISubroutineType(types: !5899)
!5899 = !{!368, !1245, !2351, !645, !366}
!5900 = !DILocalVariable(name: "s", arg: 1, scope: !5896, file: !5897, line: 137, type: !1245)
!5901 = !DILocation(line: 137, column: 54, scope: !5896)
!5902 = !DILocalVariable(name: "object", arg: 2, scope: !5896, file: !5897, line: 137, type: !2351)
!5903 = !DILocation(line: 137, column: 69, scope: !5896)
!5904 = !DILocalVariable(name: "size", arg: 3, scope: !5896, file: !5897, line: 138, type: !645)
!5905 = !DILocation(line: 138, column: 12, scope: !5896)
!5906 = !DILocalVariable(name: "flags", arg: 4, scope: !5896, file: !5897, line: 138, type: !366)
!5907 = !DILocation(line: 138, column: 24, scope: !5896)
!5908 = !DILocation(line: 140, column: 17, scope: !5896)
!5909 = !DILocation(line: 140, column: 2, scope: !5896)
!5910 = distinct !DISubprogram(name: "stb0899_detach", scope: !3, file: !3, line: 593, type: !504, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5911 = !DILocalVariable(name: "fe", arg: 1, scope: !5910, file: !3, line: 593, type: !506)
!5912 = !DILocation(line: 593, column: 49, scope: !5910)
!5913 = !DILocalVariable(name: "state", scope: !5910, file: !3, line: 595, type: !4407)
!5914 = !DILocation(line: 595, column: 24, scope: !5910)
!5915 = !DILocation(line: 595, column: 32, scope: !5910)
!5916 = !DILocation(line: 595, column: 36, scope: !5910)
!5917 = !DILocation(line: 598, column: 19, scope: !5910)
!5918 = !DILocation(line: 598, column: 2, scope: !5910)
!5919 = !DILocation(line: 599, column: 1, scope: !5910)
!5920 = distinct !DISubprogram(name: "stb0899_release", scope: !3, file: !3, line: 601, type: !504, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5921 = !DILocalVariable(name: "fe", arg: 1, scope: !5920, file: !3, line: 601, type: !506)
!5922 = !DILocation(line: 601, column: 50, scope: !5920)
!5923 = !DILocalVariable(name: "state", scope: !5920, file: !3, line: 603, type: !4407)
!5924 = !DILocation(line: 603, column: 24, scope: !5920)
!5925 = !DILocation(line: 603, column: 32, scope: !5920)
!5926 = !DILocation(line: 603, column: 36, scope: !5920)
!5927 = !DILocation(line: 605, column: 2, scope: !5920)
!5928 = !DILocation(line: 605, column: 2, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 605, column: 2)
!5930 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 605, column: 2)
!5931 = distinct !DILexicalBlock(scope: !5932, file: !3, line: 605, column: 2)
!5932 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 605, column: 2)
!5933 = !DILocation(line: 605, column: 2, scope: !5930)
!5934 = !DILocation(line: 605, column: 2, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5929, file: !3, line: 605, column: 2)
!5936 = !DILocation(line: 605, column: 2, scope: !5937)
!5937 = distinct !DILexicalBlock(scope: !5935, file: !3, line: 605, column: 2)
!5938 = !DILocation(line: 605, column: 2, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 605, column: 2)
!5940 = !DILocation(line: 605, column: 2, scope: !5932)
!5941 = !DILocation(line: 606, column: 8, scope: !5920)
!5942 = !DILocation(line: 606, column: 2, scope: !5920)
!5943 = !DILocation(line: 607, column: 1, scope: !5920)
!5944 = distinct !DISubprogram(name: "stb0899_init", scope: !3, file: !3, line: 877, type: !4197, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!5945 = !DILocalVariable(name: "fe", arg: 1, scope: !5944, file: !3, line: 877, type: !506)
!5946 = !DILocation(line: 877, column: 46, scope: !5944)
!5947 = !DILocalVariable(name: "i", scope: !5944, file: !3, line: 879, type: !96)
!5948 = !DILocation(line: 879, column: 6, scope: !5944)
!5949 = !DILocalVariable(name: "state", scope: !5944, file: !3, line: 880, type: !4407)
!5950 = !DILocation(line: 880, column: 24, scope: !5944)
!5951 = !DILocation(line: 880, column: 32, scope: !5944)
!5952 = !DILocation(line: 880, column: 36, scope: !5944)
!5953 = !DILocalVariable(name: "config", scope: !5944, file: !3, line: 881, type: !4534)
!5954 = !DILocation(line: 881, column: 25, scope: !5944)
!5955 = !DILocation(line: 881, column: 34, scope: !5944)
!5956 = !DILocation(line: 881, column: 41, scope: !5944)
!5957 = !DILocation(line: 883, column: 2, scope: !5944)
!5958 = !DILocation(line: 883, column: 2, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 883, column: 2)
!5960 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 883, column: 2)
!5961 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 883, column: 2)
!5962 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 883, column: 2)
!5963 = !DILocation(line: 883, column: 2, scope: !5960)
!5964 = !DILocation(line: 883, column: 2, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 883, column: 2)
!5966 = !DILocation(line: 883, column: 2, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 883, column: 2)
!5968 = !DILocation(line: 883, column: 2, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 883, column: 2)
!5970 = !DILocation(line: 883, column: 2, scope: !5962)
!5971 = !DILocation(line: 886, column: 2, scope: !5944)
!5972 = !DILocation(line: 886, column: 2, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 886, column: 2)
!5974 = distinct !DILexicalBlock(scope: !5975, file: !3, line: 886, column: 2)
!5975 = distinct !DILexicalBlock(scope: !5976, file: !3, line: 886, column: 2)
!5976 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 886, column: 2)
!5977 = !DILocation(line: 886, column: 2, scope: !5974)
!5978 = !DILocation(line: 886, column: 2, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5973, file: !3, line: 886, column: 2)
!5980 = !DILocation(line: 886, column: 2, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 886, column: 2)
!5982 = !DILocation(line: 886, column: 2, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 886, column: 2)
!5984 = !DILocation(line: 886, column: 2, scope: !5976)
!5985 = !DILocation(line: 887, column: 9, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 887, column: 2)
!5987 = !DILocation(line: 887, column: 7, scope: !5986)
!5988 = !DILocation(line: 887, column: 14, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5986, file: !3, line: 887, column: 2)
!5990 = !DILocation(line: 887, column: 22, scope: !5989)
!5991 = !DILocation(line: 887, column: 31, scope: !5989)
!5992 = !DILocation(line: 887, column: 34, scope: !5989)
!5993 = !DILocation(line: 887, column: 42, scope: !5989)
!5994 = !DILocation(line: 887, column: 2, scope: !5986)
!5995 = !DILocation(line: 888, column: 21, scope: !5989)
!5996 = !DILocation(line: 888, column: 28, scope: !5989)
!5997 = !DILocation(line: 888, column: 36, scope: !5989)
!5998 = !DILocation(line: 888, column: 45, scope: !5989)
!5999 = !DILocation(line: 888, column: 48, scope: !5989)
!6000 = !DILocation(line: 888, column: 57, scope: !5989)
!6001 = !DILocation(line: 888, column: 65, scope: !5989)
!6002 = !DILocation(line: 888, column: 74, scope: !5989)
!6003 = !DILocation(line: 888, column: 77, scope: !5989)
!6004 = !DILocation(line: 888, column: 3, scope: !5989)
!6005 = !DILocation(line: 887, column: 54, scope: !5989)
!6006 = !DILocation(line: 887, column: 2, scope: !5989)
!6007 = distinct !{!6007, !5994, !6008}
!6008 = !DILocation(line: 888, column: 81, scope: !5986)
!6009 = !DILocation(line: 890, column: 2, scope: !5944)
!6010 = !DILocation(line: 890, column: 2, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 890, column: 2)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !3, line: 890, column: 2)
!6013 = distinct !DILexicalBlock(scope: !6014, file: !3, line: 890, column: 2)
!6014 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 890, column: 2)
!6015 = !DILocation(line: 890, column: 2, scope: !6012)
!6016 = !DILocation(line: 890, column: 2, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 890, column: 2)
!6018 = !DILocation(line: 890, column: 2, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6017, file: !3, line: 890, column: 2)
!6020 = !DILocation(line: 890, column: 2, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6019, file: !3, line: 890, column: 2)
!6022 = !DILocation(line: 890, column: 2, scope: !6014)
!6023 = !DILocation(line: 892, column: 9, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 892, column: 2)
!6025 = !DILocation(line: 892, column: 7, scope: !6024)
!6026 = !DILocation(line: 892, column: 14, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6024, file: !3, line: 892, column: 2)
!6028 = !DILocation(line: 892, column: 22, scope: !6027)
!6029 = !DILocation(line: 892, column: 36, scope: !6027)
!6030 = !DILocation(line: 892, column: 39, scope: !6027)
!6031 = !DILocation(line: 892, column: 46, scope: !6027)
!6032 = !DILocation(line: 892, column: 2, scope: !6024)
!6033 = !DILocation(line: 893, column: 23, scope: !6027)
!6034 = !DILocation(line: 894, column: 9, scope: !6027)
!6035 = !DILocation(line: 894, column: 17, scope: !6027)
!6036 = !DILocation(line: 894, column: 31, scope: !6027)
!6037 = !DILocation(line: 894, column: 34, scope: !6027)
!6038 = !DILocation(line: 895, column: 9, scope: !6027)
!6039 = !DILocation(line: 895, column: 17, scope: !6027)
!6040 = !DILocation(line: 895, column: 31, scope: !6027)
!6041 = !DILocation(line: 895, column: 34, scope: !6027)
!6042 = !DILocation(line: 896, column: 9, scope: !6027)
!6043 = !DILocation(line: 896, column: 17, scope: !6027)
!6044 = !DILocation(line: 896, column: 31, scope: !6027)
!6045 = !DILocation(line: 896, column: 34, scope: !6027)
!6046 = !DILocation(line: 893, column: 3, scope: !6027)
!6047 = !DILocation(line: 892, column: 58, scope: !6027)
!6048 = !DILocation(line: 892, column: 2, scope: !6027)
!6049 = distinct !{!6049, !6032, !6050}
!6050 = !DILocation(line: 896, column: 38, scope: !6024)
!6051 = !DILocation(line: 898, column: 2, scope: !5944)
!6052 = !DILocation(line: 898, column: 2, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !3, line: 898, column: 2)
!6054 = distinct !DILexicalBlock(scope: !6055, file: !3, line: 898, column: 2)
!6055 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 898, column: 2)
!6056 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 898, column: 2)
!6057 = !DILocation(line: 898, column: 2, scope: !6054)
!6058 = !DILocation(line: 898, column: 2, scope: !6059)
!6059 = distinct !DILexicalBlock(scope: !6053, file: !3, line: 898, column: 2)
!6060 = !DILocation(line: 898, column: 2, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6059, file: !3, line: 898, column: 2)
!6062 = !DILocation(line: 898, column: 2, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6061, file: !3, line: 898, column: 2)
!6064 = !DILocation(line: 898, column: 2, scope: !6056)
!6065 = !DILocation(line: 900, column: 9, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 900, column: 2)
!6067 = !DILocation(line: 900, column: 7, scope: !6066)
!6068 = !DILocation(line: 900, column: 14, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6066, file: !3, line: 900, column: 2)
!6070 = !DILocation(line: 900, column: 22, scope: !6069)
!6071 = !DILocation(line: 900, column: 36, scope: !6069)
!6072 = !DILocation(line: 900, column: 39, scope: !6069)
!6073 = !DILocation(line: 900, column: 47, scope: !6069)
!6074 = !DILocation(line: 900, column: 2, scope: !6066)
!6075 = !DILocation(line: 901, column: 21, scope: !6069)
!6076 = !DILocation(line: 901, column: 28, scope: !6069)
!6077 = !DILocation(line: 901, column: 36, scope: !6069)
!6078 = !DILocation(line: 901, column: 50, scope: !6069)
!6079 = !DILocation(line: 901, column: 53, scope: !6069)
!6080 = !DILocation(line: 901, column: 62, scope: !6069)
!6081 = !DILocation(line: 901, column: 70, scope: !6069)
!6082 = !DILocation(line: 901, column: 84, scope: !6069)
!6083 = !DILocation(line: 901, column: 87, scope: !6069)
!6084 = !DILocation(line: 901, column: 3, scope: !6069)
!6085 = !DILocation(line: 900, column: 59, scope: !6069)
!6086 = !DILocation(line: 900, column: 2, scope: !6069)
!6087 = distinct !{!6087, !6074, !6088}
!6088 = !DILocation(line: 901, column: 91, scope: !6066)
!6089 = !DILocation(line: 903, column: 2, scope: !5944)
!6090 = !DILocation(line: 903, column: 2, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 903, column: 2)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 903, column: 2)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 903, column: 2)
!6094 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 903, column: 2)
!6095 = !DILocation(line: 903, column: 2, scope: !6092)
!6096 = !DILocation(line: 903, column: 2, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 903, column: 2)
!6098 = !DILocation(line: 903, column: 2, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 903, column: 2)
!6100 = !DILocation(line: 903, column: 2, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6099, file: !3, line: 903, column: 2)
!6102 = !DILocation(line: 903, column: 2, scope: !6094)
!6103 = !DILocation(line: 905, column: 9, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 905, column: 2)
!6105 = !DILocation(line: 905, column: 7, scope: !6104)
!6106 = !DILocation(line: 905, column: 14, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 905, column: 2)
!6108 = !DILocation(line: 905, column: 22, scope: !6107)
!6109 = !DILocation(line: 905, column: 34, scope: !6107)
!6110 = !DILocation(line: 905, column: 37, scope: !6107)
!6111 = !DILocation(line: 905, column: 44, scope: !6107)
!6112 = !DILocation(line: 905, column: 2, scope: !6104)
!6113 = !DILocation(line: 906, column: 23, scope: !6107)
!6114 = !DILocation(line: 907, column: 9, scope: !6107)
!6115 = !DILocation(line: 907, column: 17, scope: !6107)
!6116 = !DILocation(line: 907, column: 29, scope: !6107)
!6117 = !DILocation(line: 907, column: 32, scope: !6107)
!6118 = !DILocation(line: 908, column: 9, scope: !6107)
!6119 = !DILocation(line: 908, column: 17, scope: !6107)
!6120 = !DILocation(line: 908, column: 29, scope: !6107)
!6121 = !DILocation(line: 908, column: 32, scope: !6107)
!6122 = !DILocation(line: 909, column: 9, scope: !6107)
!6123 = !DILocation(line: 909, column: 17, scope: !6107)
!6124 = !DILocation(line: 909, column: 29, scope: !6107)
!6125 = !DILocation(line: 909, column: 32, scope: !6107)
!6126 = !DILocation(line: 906, column: 3, scope: !6107)
!6127 = !DILocation(line: 905, column: 56, scope: !6107)
!6128 = !DILocation(line: 905, column: 2, scope: !6107)
!6129 = distinct !{!6129, !6112, !6130}
!6130 = !DILocation(line: 909, column: 36, scope: !6104)
!6131 = !DILocation(line: 911, column: 2, scope: !5944)
!6132 = !DILocation(line: 911, column: 2, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 911, column: 2)
!6134 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 911, column: 2)
!6135 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 911, column: 2)
!6136 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 911, column: 2)
!6137 = !DILocation(line: 911, column: 2, scope: !6134)
!6138 = !DILocation(line: 911, column: 2, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6133, file: !3, line: 911, column: 2)
!6140 = !DILocation(line: 911, column: 2, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 911, column: 2)
!6142 = !DILocation(line: 911, column: 2, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 911, column: 2)
!6144 = !DILocation(line: 911, column: 2, scope: !6136)
!6145 = !DILocation(line: 913, column: 9, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 913, column: 2)
!6147 = !DILocation(line: 913, column: 7, scope: !6146)
!6148 = !DILocation(line: 913, column: 14, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6146, file: !3, line: 913, column: 2)
!6150 = !DILocation(line: 913, column: 22, scope: !6149)
!6151 = !DILocation(line: 913, column: 31, scope: !6149)
!6152 = !DILocation(line: 913, column: 34, scope: !6149)
!6153 = !DILocation(line: 913, column: 42, scope: !6149)
!6154 = !DILocation(line: 913, column: 2, scope: !6146)
!6155 = !DILocation(line: 914, column: 21, scope: !6149)
!6156 = !DILocation(line: 914, column: 28, scope: !6149)
!6157 = !DILocation(line: 914, column: 36, scope: !6149)
!6158 = !DILocation(line: 914, column: 45, scope: !6149)
!6159 = !DILocation(line: 914, column: 48, scope: !6149)
!6160 = !DILocation(line: 914, column: 57, scope: !6149)
!6161 = !DILocation(line: 914, column: 65, scope: !6149)
!6162 = !DILocation(line: 914, column: 74, scope: !6149)
!6163 = !DILocation(line: 914, column: 77, scope: !6149)
!6164 = !DILocation(line: 914, column: 3, scope: !6149)
!6165 = !DILocation(line: 913, column: 54, scope: !6149)
!6166 = !DILocation(line: 913, column: 2, scope: !6149)
!6167 = distinct !{!6167, !6154, !6168}
!6168 = !DILocation(line: 914, column: 81, scope: !6146)
!6169 = !DILocation(line: 916, column: 20, scope: !5944)
!6170 = !DILocation(line: 916, column: 2, scope: !5944)
!6171 = !DILocation(line: 917, column: 22, scope: !5944)
!6172 = !DILocation(line: 917, column: 2, scope: !5944)
!6173 = !DILocation(line: 919, column: 2, scope: !5944)
!6174 = distinct !DISubprogram(name: "stb0899_sleep", scope: !3, file: !3, line: 845, type: !4197, scopeLine: 846, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!6175 = !DILocalVariable(name: "fe", arg: 1, scope: !6174, file: !3, line: 845, type: !506)
!6176 = !DILocation(line: 845, column: 47, scope: !6174)
!6177 = !DILocalVariable(name: "state", scope: !6174, file: !3, line: 847, type: !4407)
!6178 = !DILocation(line: 847, column: 24, scope: !6174)
!6179 = !DILocation(line: 847, column: 32, scope: !6174)
!6180 = !DILocation(line: 847, column: 36, scope: !6174)
!6181 = !DILocation(line: 851, column: 2, scope: !6174)
!6182 = !DILocation(line: 851, column: 2, scope: !6183)
!6183 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 851, column: 2)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 851, column: 2)
!6185 = distinct !DILexicalBlock(scope: !6186, file: !3, line: 851, column: 2)
!6186 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 851, column: 2)
!6187 = !DILocation(line: 851, column: 2, scope: !6184)
!6188 = !DILocation(line: 851, column: 2, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 851, column: 2)
!6190 = !DILocation(line: 851, column: 2, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 851, column: 2)
!6192 = !DILocation(line: 851, column: 2, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 851, column: 2)
!6194 = !DILocation(line: 851, column: 2, scope: !6186)
!6195 = !DILocation(line: 853, column: 19, scope: !6174)
!6196 = !DILocation(line: 853, column: 2, scope: !6174)
!6197 = !DILocation(line: 855, column: 2, scope: !6174)
!6198 = distinct !DISubprogram(name: "stb0899_frontend_algo", scope: !3, file: !3, line: 1566, type: !4213, scopeLine: 1567, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!6199 = !DILocalVariable(name: "fe", arg: 1, scope: !6198, file: !3, line: 1566, type: !506)
!6200 = !DILocation(line: 1566, column: 67, scope: !6198)
!6201 = !DILocation(line: 1568, column: 2, scope: !6198)
!6202 = distinct !DISubprogram(name: "stb0899_get_frontend", scope: !3, file: !3, line: 1553, type: !4228, scopeLine: 1555, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!6203 = !DILocalVariable(name: "fe", arg: 1, scope: !6202, file: !3, line: 1553, type: !506)
!6204 = !DILocation(line: 1553, column: 54, scope: !6202)
!6205 = !DILocalVariable(name: "p", arg: 2, scope: !6202, file: !3, line: 1554, type: !4230)
!6206 = !DILocation(line: 1554, column: 37, scope: !6202)
!6207 = !DILocalVariable(name: "state", scope: !6202, file: !3, line: 1556, type: !4407)
!6208 = !DILocation(line: 1556, column: 24, scope: !6202)
!6209 = !DILocation(line: 1556, column: 33, scope: !6202)
!6210 = !DILocation(line: 1556, column: 37, scope: !6202)
!6211 = !DILocalVariable(name: "internal", scope: !6202, file: !3, line: 1557, type: !6212)
!6212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4598, size: 64)
!6213 = !DILocation(line: 1557, column: 27, scope: !6202)
!6214 = !DILocation(line: 1557, column: 39, scope: !6202)
!6215 = !DILocation(line: 1557, column: 46, scope: !6202)
!6216 = !DILocation(line: 1559, column: 2, scope: !6202)
!6217 = !DILocation(line: 1559, column: 2, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !3, line: 1559, column: 2)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 1559, column: 2)
!6220 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 1559, column: 2)
!6221 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 1559, column: 2)
!6222 = !DILocation(line: 1559, column: 2, scope: !6219)
!6223 = !DILocation(line: 1559, column: 2, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 1559, column: 2)
!6225 = !DILocation(line: 1559, column: 2, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 1559, column: 2)
!6227 = !DILocation(line: 1559, column: 2, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 1559, column: 2)
!6229 = !DILocation(line: 1559, column: 2, scope: !6221)
!6230 = !DILocation(line: 1560, column: 19, scope: !6202)
!6231 = !DILocation(line: 1560, column: 29, scope: !6202)
!6232 = !DILocation(line: 1560, column: 2, scope: !6202)
!6233 = !DILocation(line: 1560, column: 5, scope: !6202)
!6234 = !DILocation(line: 1560, column: 17, scope: !6202)
!6235 = !DILocation(line: 1561, column: 17, scope: !6202)
!6236 = !DILocation(line: 1561, column: 27, scope: !6202)
!6237 = !DILocation(line: 1561, column: 2, scope: !6202)
!6238 = !DILocation(line: 1561, column: 5, scope: !6202)
!6239 = !DILocation(line: 1561, column: 15, scope: !6202)
!6240 = !DILocation(line: 1563, column: 2, scope: !6202)
!6241 = distinct !DISubprogram(name: "stb0899_read_status", scope: !3, file: !3, line: 1049, type: !4233, scopeLine: 1050, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!6242 = !DILocalVariable(name: "fe", arg: 1, scope: !6241, file: !3, line: 1049, type: !506)
!6243 = !DILocation(line: 1049, column: 53, scope: !6241)
!6244 = !DILocalVariable(name: "status", arg: 2, scope: !6241, file: !3, line: 1049, type: !4210)
!6245 = !DILocation(line: 1049, column: 73, scope: !6241)
!6246 = !DILocalVariable(name: "state", scope: !6241, file: !3, line: 1051, type: !4407)
!6247 = !DILocation(line: 1051, column: 24, scope: !6241)
!6248 = !DILocation(line: 1051, column: 33, scope: !6241)
!6249 = !DILocation(line: 1051, column: 37, scope: !6241)
!6250 = !DILocalVariable(name: "internal", scope: !6241, file: !3, line: 1052, type: !6212)
!6251 = !DILocation(line: 1052, column: 27, scope: !6241)
!6252 = !DILocation(line: 1052, column: 39, scope: !6241)
!6253 = !DILocation(line: 1052, column: 46, scope: !6241)
!6254 = !DILocalVariable(name: "reg", scope: !6241, file: !3, line: 1053, type: !419)
!6255 = !DILocation(line: 1053, column: 5, scope: !6241)
!6256 = !DILocation(line: 1054, column: 3, scope: !6241)
!6257 = !DILocation(line: 1054, column: 10, scope: !6241)
!6258 = !DILocation(line: 1056, column: 10, scope: !6241)
!6259 = !DILocation(line: 1056, column: 17, scope: !6241)
!6260 = !DILocation(line: 1056, column: 2, scope: !6241)
!6261 = !DILocation(line: 1059, column: 3, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6241, file: !3, line: 1056, column: 25)
!6263 = !DILocation(line: 1059, column: 3, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 1059, column: 3)
!6265 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 1059, column: 3)
!6266 = distinct !DILexicalBlock(scope: !6267, file: !3, line: 1059, column: 3)
!6267 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1059, column: 3)
!6268 = !DILocation(line: 1059, column: 3, scope: !6265)
!6269 = !DILocation(line: 1059, column: 3, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 1059, column: 3)
!6271 = !DILocation(line: 1059, column: 3, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 1059, column: 3)
!6273 = !DILocation(line: 1059, column: 3, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6272, file: !3, line: 1059, column: 3)
!6275 = !DILocation(line: 1059, column: 3, scope: !6267)
!6276 = !DILocation(line: 1060, column: 7, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1060, column: 7)
!6278 = !DILocation(line: 1060, column: 17, scope: !6277)
!6279 = !DILocation(line: 1060, column: 7, scope: !6262)
!6280 = !DILocation(line: 1061, column: 28, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1060, column: 23)
!6282 = !DILocation(line: 1061, column: 11, scope: !6281)
!6283 = !DILocation(line: 1061, column: 9, scope: !6281)
!6284 = !DILocation(line: 1062, column: 8, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6281, file: !3, line: 1062, column: 8)
!6286 = !DILocation(line: 1062, column: 8, scope: !6281)
!6287 = !DILocation(line: 1063, column: 5, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 1062, column: 50)
!6289 = !DILocation(line: 1063, column: 5, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 1063, column: 5)
!6291 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 1063, column: 5)
!6292 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 1063, column: 5)
!6293 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 1063, column: 5)
!6294 = !DILocation(line: 1063, column: 5, scope: !6291)
!6295 = !DILocation(line: 1063, column: 5, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 1063, column: 5)
!6297 = !DILocation(line: 1063, column: 5, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 1063, column: 5)
!6299 = !DILocation(line: 1063, column: 5, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 1063, column: 5)
!6301 = !DILocation(line: 1063, column: 5, scope: !6293)
!6302 = !DILocation(line: 1064, column: 6, scope: !6288)
!6303 = !DILocation(line: 1064, column: 13, scope: !6288)
!6304 = !DILocation(line: 1066, column: 28, scope: !6288)
!6305 = !DILocation(line: 1066, column: 11, scope: !6288)
!6306 = !DILocation(line: 1066, column: 9, scope: !6288)
!6307 = !DILocation(line: 1067, column: 9, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6288, file: !3, line: 1067, column: 9)
!6309 = !DILocation(line: 1067, column: 9, scope: !6288)
!6310 = !DILocation(line: 1068, column: 6, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 1067, column: 43)
!6312 = !DILocation(line: 1068, column: 6, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 1068, column: 6)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 1068, column: 6)
!6315 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 1068, column: 6)
!6316 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 1068, column: 6)
!6317 = !DILocation(line: 1068, column: 6, scope: !6314)
!6318 = !DILocation(line: 1068, column: 6, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 1068, column: 6)
!6320 = !DILocation(line: 1068, column: 6, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 1068, column: 6)
!6322 = !DILocation(line: 1068, column: 6, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1068, column: 6)
!6324 = !DILocation(line: 1068, column: 6, scope: !6316)
!6325 = !DILocation(line: 1069, column: 7, scope: !6311)
!6326 = !DILocation(line: 1069, column: 14, scope: !6311)
!6327 = !DILocation(line: 1071, column: 23, scope: !6311)
!6328 = !DILocation(line: 1071, column: 6, scope: !6311)
!6329 = !DILocation(line: 1072, column: 5, scope: !6311)
!6330 = !DILocation(line: 1073, column: 4, scope: !6288)
!6331 = !DILocation(line: 1074, column: 3, scope: !6281)
!6332 = !DILocation(line: 1075, column: 3, scope: !6262)
!6333 = !DILocation(line: 1077, column: 3, scope: !6262)
!6334 = !DILocation(line: 1077, column: 3, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 1077, column: 3)
!6336 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 1077, column: 3)
!6337 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 1077, column: 3)
!6338 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1077, column: 3)
!6339 = !DILocation(line: 1077, column: 3, scope: !6336)
!6340 = !DILocation(line: 1077, column: 3, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 1077, column: 3)
!6342 = !DILocation(line: 1077, column: 3, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !6341, file: !3, line: 1077, column: 3)
!6344 = !DILocation(line: 1077, column: 3, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 1077, column: 3)
!6346 = !DILocation(line: 1077, column: 3, scope: !6338)
!6347 = !DILocation(line: 1078, column: 7, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1078, column: 7)
!6349 = !DILocation(line: 1078, column: 17, scope: !6348)
!6350 = !DILocation(line: 1078, column: 7, scope: !6262)
!6351 = !DILocation(line: 1079, column: 10, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6348, file: !3, line: 1078, column: 23)
!6353 = !DILocation(line: 1079, column: 8, scope: !6352)
!6354 = !DILocation(line: 1080, column: 8, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1080, column: 8)
!6356 = !DILocation(line: 1080, column: 40, scope: !6355)
!6357 = !DILocation(line: 1080, column: 43, scope: !6355)
!6358 = !DILocation(line: 1080, column: 8, scope: !6352)
!6359 = !DILocation(line: 1081, column: 6, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6355, file: !3, line: 1080, column: 76)
!6361 = !DILocation(line: 1081, column: 13, scope: !6360)
!6362 = !DILocation(line: 1082, column: 5, scope: !6360)
!6363 = !DILocation(line: 1082, column: 5, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6365, file: !3, line: 1082, column: 5)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 1082, column: 5)
!6366 = distinct !DILexicalBlock(scope: !6367, file: !3, line: 1082, column: 5)
!6367 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1082, column: 5)
!6368 = !DILocation(line: 1082, column: 5, scope: !6365)
!6369 = !DILocation(line: 1082, column: 5, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 1082, column: 5)
!6371 = !DILocation(line: 1082, column: 5, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6370, file: !3, line: 1082, column: 5)
!6373 = !DILocation(line: 1082, column: 5, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6372, file: !3, line: 1082, column: 5)
!6375 = !DILocation(line: 1082, column: 5, scope: !6367)
!6376 = !DILocation(line: 1085, column: 28, scope: !6360)
!6377 = !DILocation(line: 1085, column: 11, scope: !6360)
!6378 = !DILocation(line: 1085, column: 9, scope: !6360)
!6379 = !DILocation(line: 1086, column: 9, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1086, column: 9)
!6381 = !DILocation(line: 1086, column: 9, scope: !6360)
!6382 = !DILocation(line: 1087, column: 7, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 1086, column: 52)
!6384 = !DILocation(line: 1087, column: 14, scope: !6383)
!6385 = !DILocation(line: 1088, column: 6, scope: !6383)
!6386 = !DILocation(line: 1088, column: 6, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !3, line: 1088, column: 6)
!6388 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 1088, column: 6)
!6389 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 1088, column: 6)
!6390 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 1088, column: 6)
!6391 = !DILocation(line: 1088, column: 6, scope: !6388)
!6392 = !DILocation(line: 1088, column: 6, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6387, file: !3, line: 1088, column: 6)
!6394 = !DILocation(line: 1088, column: 6, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 1088, column: 6)
!6396 = !DILocation(line: 1088, column: 6, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 1088, column: 6)
!6398 = !DILocation(line: 1088, column: 6, scope: !6390)
!6399 = !DILocation(line: 1091, column: 5, scope: !6383)
!6400 = !DILocation(line: 1092, column: 9, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1092, column: 9)
!6402 = !DILocation(line: 1092, column: 9, scope: !6360)
!6403 = !DILocation(line: 1093, column: 7, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 1092, column: 51)
!6405 = !DILocation(line: 1093, column: 14, scope: !6404)
!6406 = !DILocation(line: 1094, column: 6, scope: !6404)
!6407 = !DILocation(line: 1094, column: 6, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 1094, column: 6)
!6409 = distinct !DILexicalBlock(scope: !6410, file: !3, line: 1094, column: 6)
!6410 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 1094, column: 6)
!6411 = distinct !DILexicalBlock(scope: !6404, file: !3, line: 1094, column: 6)
!6412 = !DILocation(line: 1094, column: 6, scope: !6409)
!6413 = !DILocation(line: 1094, column: 6, scope: !6414)
!6414 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 1094, column: 6)
!6415 = !DILocation(line: 1094, column: 6, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 1094, column: 6)
!6417 = !DILocation(line: 1094, column: 6, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 1094, column: 6)
!6419 = !DILocation(line: 1094, column: 6, scope: !6411)
!6420 = !DILocation(line: 1096, column: 5, scope: !6404)
!6421 = !DILocation(line: 1097, column: 9, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6360, file: !3, line: 1097, column: 9)
!6423 = !DILocation(line: 1097, column: 9, scope: !6360)
!6424 = !DILocation(line: 1098, column: 7, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 1097, column: 49)
!6426 = !DILocation(line: 1098, column: 14, scope: !6425)
!6427 = !DILocation(line: 1099, column: 6, scope: !6425)
!6428 = !DILocation(line: 1099, column: 6, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6430, file: !3, line: 1099, column: 6)
!6430 = distinct !DILexicalBlock(scope: !6431, file: !3, line: 1099, column: 6)
!6431 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 1099, column: 6)
!6432 = distinct !DILexicalBlock(scope: !6425, file: !3, line: 1099, column: 6)
!6433 = !DILocation(line: 1099, column: 6, scope: !6430)
!6434 = !DILocation(line: 1099, column: 6, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 1099, column: 6)
!6436 = !DILocation(line: 1099, column: 6, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6435, file: !3, line: 1099, column: 6)
!6438 = !DILocation(line: 1099, column: 6, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6437, file: !3, line: 1099, column: 6)
!6440 = !DILocation(line: 1099, column: 6, scope: !6432)
!6441 = !DILocation(line: 1102, column: 23, scope: !6425)
!6442 = !DILocation(line: 1102, column: 6, scope: !6425)
!6443 = !DILocation(line: 1103, column: 5, scope: !6425)
!6444 = !DILocation(line: 1104, column: 4, scope: !6360)
!6445 = !DILocation(line: 1105, column: 3, scope: !6352)
!6446 = !DILocation(line: 1106, column: 3, scope: !6262)
!6447 = !DILocation(line: 1108, column: 3, scope: !6262)
!6448 = !DILocation(line: 1108, column: 3, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 1108, column: 3)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 1108, column: 3)
!6451 = distinct !DILexicalBlock(scope: !6452, file: !3, line: 1108, column: 3)
!6452 = distinct !DILexicalBlock(scope: !6262, file: !3, line: 1108, column: 3)
!6453 = !DILocation(line: 1108, column: 3, scope: !6450)
!6454 = !DILocation(line: 1108, column: 3, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 1108, column: 3)
!6456 = !DILocation(line: 1108, column: 3, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 1108, column: 3)
!6458 = !DILocation(line: 1108, column: 3, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6457, file: !3, line: 1108, column: 3)
!6460 = !DILocation(line: 1108, column: 3, scope: !6452)
!6461 = !DILocation(line: 1109, column: 3, scope: !6262)
!6462 = !DILocation(line: 1111, column: 2, scope: !6241)
!6463 = !DILocation(line: 1112, column: 1, scope: !6241)
!6464 = distinct !DISubprogram(name: "stb0899_read_ber", scope: !3, file: !3, line: 1120, type: !4237, scopeLine: 1121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!6465 = !DILocalVariable(name: "fe", arg: 1, scope: !6464, file: !3, line: 1120, type: !506)
!6466 = !DILocation(line: 1120, column: 50, scope: !6464)
!6467 = !DILocalVariable(name: "ber", arg: 2, scope: !6464, file: !3, line: 1120, type: !1636)
!6468 = !DILocation(line: 1120, column: 59, scope: !6464)
!6469 = !DILocalVariable(name: "state", scope: !6464, file: !3, line: 1122, type: !4407)
!6470 = !DILocation(line: 1122, column: 24, scope: !6464)
!6471 = !DILocation(line: 1122, column: 33, scope: !6464)
!6472 = !DILocation(line: 1122, column: 37, scope: !6464)
!6473 = !DILocalVariable(name: "internal", scope: !6464, file: !3, line: 1123, type: !6212)
!6474 = !DILocation(line: 1123, column: 27, scope: !6464)
!6475 = !DILocation(line: 1123, column: 39, scope: !6464)
!6476 = !DILocation(line: 1123, column: 46, scope: !6464)
!6477 = !DILocalVariable(name: "lsb", scope: !6464, file: !3, line: 1125, type: !419)
!6478 = !DILocation(line: 1125, column: 6, scope: !6464)
!6479 = !DILocalVariable(name: "msb", scope: !6464, file: !3, line: 1125, type: !419)
!6480 = !DILocation(line: 1125, column: 11, scope: !6464)
!6481 = !DILocation(line: 1127, column: 3, scope: !6464)
!6482 = !DILocation(line: 1127, column: 7, scope: !6464)
!6483 = !DILocation(line: 1129, column: 10, scope: !6464)
!6484 = !DILocation(line: 1129, column: 17, scope: !6464)
!6485 = !DILocation(line: 1129, column: 2, scope: !6464)
!6486 = !DILocation(line: 1132, column: 7, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 1132, column: 7)
!6488 = distinct !DILexicalBlock(scope: !6464, file: !3, line: 1129, column: 25)
!6489 = !DILocation(line: 1132, column: 17, scope: !6487)
!6490 = !DILocation(line: 1132, column: 7, scope: !6488)
!6491 = !DILocation(line: 1133, column: 27, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 1132, column: 23)
!6493 = !DILocation(line: 1133, column: 10, scope: !6492)
!6494 = !DILocation(line: 1133, column: 8, scope: !6492)
!6495 = !DILocation(line: 1134, column: 27, scope: !6492)
!6496 = !DILocation(line: 1134, column: 10, scope: !6492)
!6497 = !DILocation(line: 1134, column: 8, scope: !6492)
!6498 = !DILocation(line: 1135, column: 11, scope: !6492)
!6499 = !DILocation(line: 1135, column: 5, scope: !6492)
!6500 = !DILocation(line: 1135, column: 9, scope: !6492)
!6501 = !DILocation(line: 1137, column: 8, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6492, file: !3, line: 1137, column: 8)
!6503 = !DILocation(line: 1137, column: 8, scope: !6492)
!6504 = !DILocation(line: 1139, column: 6, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6502, file: !3, line: 1137, column: 62)
!6506 = !DILocation(line: 1139, column: 10, scope: !6505)
!6507 = !DILocation(line: 1141, column: 30, scope: !6505)
!6508 = !DILocation(line: 1141, column: 28, scope: !6505)
!6509 = !DILocation(line: 1141, column: 22, scope: !6505)
!6510 = !DILocation(line: 1141, column: 17, scope: !6505)
!6511 = !DILocation(line: 1141, column: 6, scope: !6505)
!6512 = !DILocation(line: 1141, column: 10, scope: !6505)
!6513 = !DILocation(line: 1142, column: 6, scope: !6505)
!6514 = !DILocation(line: 1142, column: 10, scope: !6505)
!6515 = !DILocation(line: 1143, column: 4, scope: !6505)
!6516 = !DILocation(line: 1144, column: 3, scope: !6492)
!6517 = !DILocation(line: 1145, column: 3, scope: !6488)
!6518 = !DILocation(line: 1147, column: 7, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 1147, column: 7)
!6520 = !DILocation(line: 1147, column: 17, scope: !6519)
!6521 = !DILocation(line: 1147, column: 7, scope: !6488)
!6522 = !DILocation(line: 1148, column: 27, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 1147, column: 23)
!6524 = !DILocation(line: 1148, column: 10, scope: !6523)
!6525 = !DILocation(line: 1148, column: 8, scope: !6523)
!6526 = !DILocation(line: 1149, column: 27, scope: !6523)
!6527 = !DILocation(line: 1149, column: 10, scope: !6523)
!6528 = !DILocation(line: 1149, column: 8, scope: !6523)
!6529 = !DILocation(line: 1150, column: 11, scope: !6523)
!6530 = !DILocation(line: 1150, column: 5, scope: !6523)
!6531 = !DILocation(line: 1150, column: 9, scope: !6523)
!6532 = !DILocation(line: 1152, column: 5, scope: !6523)
!6533 = !DILocation(line: 1152, column: 9, scope: !6523)
!6534 = !DILocation(line: 1153, column: 33, scope: !6523)
!6535 = !DILocation(line: 1153, column: 31, scope: !6523)
!6536 = !DILocation(line: 1153, column: 27, scope: !6523)
!6537 = !DILocation(line: 1153, column: 21, scope: !6523)
!6538 = !DILocation(line: 1153, column: 16, scope: !6523)
!6539 = !DILocation(line: 1153, column: 5, scope: !6523)
!6540 = !DILocation(line: 1153, column: 9, scope: !6523)
!6541 = !DILocation(line: 1154, column: 3, scope: !6523)
!6542 = !DILocation(line: 1155, column: 3, scope: !6488)
!6543 = !DILocation(line: 1157, column: 3, scope: !6488)
!6544 = !DILocation(line: 1157, column: 3, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 1157, column: 3)
!6546 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 1157, column: 3)
!6547 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 1157, column: 3)
!6548 = distinct !DILexicalBlock(scope: !6488, file: !3, line: 1157, column: 3)
!6549 = !DILocation(line: 1157, column: 3, scope: !6546)
!6550 = !DILocation(line: 1157, column: 3, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6545, file: !3, line: 1157, column: 3)
!6552 = !DILocation(line: 1157, column: 3, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 1157, column: 3)
!6554 = !DILocation(line: 1157, column: 3, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 1157, column: 3)
!6556 = !DILocation(line: 1157, column: 3, scope: !6548)
!6557 = !DILocation(line: 1158, column: 3, scope: !6488)
!6558 = !DILocation(line: 1161, column: 2, scope: !6464)
!6559 = !DILocation(line: 1162, column: 1, scope: !6464)
!6560 = distinct !DISubprogram(name: "stb0899_read_signal_strength", scope: !3, file: !3, line: 948, type: !4241, scopeLine: 949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!6561 = !DILocalVariable(name: "fe", arg: 1, scope: !6560, file: !3, line: 948, type: !506)
!6562 = !DILocation(line: 948, column: 62, scope: !6560)
!6563 = !DILocalVariable(name: "strength", arg: 2, scope: !6560, file: !3, line: 948, type: !4243)
!6564 = !DILocation(line: 948, column: 71, scope: !6560)
!6565 = !DILocalVariable(name: "state", scope: !6560, file: !3, line: 950, type: !4407)
!6566 = !DILocation(line: 950, column: 24, scope: !6560)
!6567 = !DILocation(line: 950, column: 33, scope: !6560)
!6568 = !DILocation(line: 950, column: 37, scope: !6560)
!6569 = !DILocalVariable(name: "internal", scope: !6560, file: !3, line: 951, type: !6212)
!6570 = !DILocation(line: 951, column: 27, scope: !6560)
!6571 = !DILocation(line: 951, column: 39, scope: !6560)
!6572 = !DILocation(line: 951, column: 46, scope: !6560)
!6573 = !DILocalVariable(name: "val", scope: !6560, file: !3, line: 953, type: !96)
!6574 = !DILocation(line: 953, column: 6, scope: !6560)
!6575 = !DILocalVariable(name: "reg", scope: !6560, file: !3, line: 954, type: !489)
!6576 = !DILocation(line: 954, column: 6, scope: !6560)
!6577 = !DILocation(line: 955, column: 3, scope: !6560)
!6578 = !DILocation(line: 955, column: 12, scope: !6560)
!6579 = !DILocation(line: 956, column: 10, scope: !6560)
!6580 = !DILocation(line: 956, column: 17, scope: !6560)
!6581 = !DILocation(line: 956, column: 2, scope: !6560)
!6582 = !DILocation(line: 959, column: 7, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 959, column: 7)
!6584 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 956, column: 25)
!6585 = !DILocation(line: 959, column: 17, scope: !6583)
!6586 = !DILocation(line: 959, column: 7, scope: !6584)
!6587 = !DILocation(line: 960, column: 28, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6583, file: !3, line: 959, column: 23)
!6589 = !DILocation(line: 960, column: 11, scope: !6588)
!6590 = !DILocation(line: 960, column: 9, scope: !6588)
!6591 = !DILocation(line: 961, column: 8, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 961, column: 8)
!6593 = !DILocation(line: 961, column: 8, scope: !6588)
!6594 = !DILocation(line: 963, column: 28, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6592, file: !3, line: 961, column: 50)
!6596 = !DILocation(line: 963, column: 11, scope: !6595)
!6597 = !DILocation(line: 963, column: 9, scope: !6595)
!6598 = !DILocation(line: 964, column: 20, scope: !6595)
!6599 = !DILocation(line: 964, column: 16, scope: !6595)
!6600 = !DILocation(line: 964, column: 11, scope: !6595)
!6601 = !DILocation(line: 964, column: 9, scope: !6595)
!6602 = !DILocation(line: 966, column: 94, scope: !6595)
!6603 = !DILocation(line: 966, column: 17, scope: !6595)
!6604 = !DILocation(line: 966, column: 6, scope: !6595)
!6605 = !DILocation(line: 966, column: 15, scope: !6595)
!6606 = !DILocation(line: 967, column: 6, scope: !6595)
!6607 = !DILocation(line: 967, column: 15, scope: !6595)
!6608 = !DILocation(line: 968, column: 5, scope: !6595)
!6609 = !DILocation(line: 968, column: 5, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 968, column: 5)
!6611 = distinct !DILexicalBlock(scope: !6612, file: !3, line: 968, column: 5)
!6612 = distinct !DILexicalBlock(scope: !6613, file: !3, line: 968, column: 5)
!6613 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 968, column: 5)
!6614 = !DILocation(line: 968, column: 5, scope: !6611)
!6615 = !DILocation(line: 968, column: 5, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 968, column: 5)
!6617 = !DILocation(line: 968, column: 5, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6616, file: !3, line: 968, column: 5)
!6619 = !DILocation(line: 968, column: 5, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 968, column: 5)
!6621 = !DILocation(line: 968, column: 5, scope: !6613)
!6622 = !DILocation(line: 970, column: 4, scope: !6595)
!6623 = !DILocation(line: 971, column: 3, scope: !6588)
!6624 = !DILocation(line: 972, column: 3, scope: !6584)
!6625 = !DILocation(line: 974, column: 7, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 974, column: 7)
!6627 = !DILocation(line: 974, column: 17, scope: !6626)
!6628 = !DILocation(line: 974, column: 7, scope: !6584)
!6629 = !DILocation(line: 975, column: 10, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 974, column: 23)
!6631 = !DILocation(line: 975, column: 8, scope: !6630)
!6632 = !DILocation(line: 976, column: 10, scope: !6630)
!6633 = !DILocation(line: 976, column: 8, scope: !6630)
!6634 = !DILocation(line: 978, column: 95, scope: !6630)
!6635 = !DILocation(line: 978, column: 16, scope: !6630)
!6636 = !DILocation(line: 978, column: 5, scope: !6630)
!6637 = !DILocation(line: 978, column: 14, scope: !6630)
!6638 = !DILocation(line: 979, column: 5, scope: !6630)
!6639 = !DILocation(line: 979, column: 14, scope: !6630)
!6640 = !DILocation(line: 980, column: 4, scope: !6630)
!6641 = !DILocation(line: 980, column: 4, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 980, column: 4)
!6643 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 980, column: 4)
!6644 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 980, column: 4)
!6645 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 980, column: 4)
!6646 = !DILocation(line: 980, column: 4, scope: !6643)
!6647 = !DILocation(line: 980, column: 4, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6642, file: !3, line: 980, column: 4)
!6649 = !DILocation(line: 980, column: 4, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6648, file: !3, line: 980, column: 4)
!6651 = !DILocation(line: 980, column: 4, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 980, column: 4)
!6653 = !DILocation(line: 980, column: 4, scope: !6645)
!6654 = !DILocation(line: 982, column: 3, scope: !6630)
!6655 = !DILocation(line: 983, column: 3, scope: !6584)
!6656 = !DILocation(line: 985, column: 3, scope: !6584)
!6657 = !DILocation(line: 985, column: 3, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 985, column: 3)
!6659 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 985, column: 3)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !3, line: 985, column: 3)
!6661 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 985, column: 3)
!6662 = !DILocation(line: 985, column: 3, scope: !6659)
!6663 = !DILocation(line: 985, column: 3, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 985, column: 3)
!6665 = !DILocation(line: 985, column: 3, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 985, column: 3)
!6667 = !DILocation(line: 985, column: 3, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 985, column: 3)
!6669 = !DILocation(line: 985, column: 3, scope: !6661)
!6670 = !DILocation(line: 986, column: 3, scope: !6584)
!6671 = !DILocation(line: 989, column: 2, scope: !6560)
!6672 = !DILocation(line: 990, column: 1, scope: !6560)
!6673 = distinct !DISubprogram(name: "stb0899_read_snr", scope: !3, file: !3, line: 992, type: !4241, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!6674 = !DILocalVariable(name: "fe", arg: 1, scope: !6673, file: !3, line: 992, type: !506)
!6675 = !DILocation(line: 992, column: 50, scope: !6673)
!6676 = !DILocalVariable(name: "snr", arg: 2, scope: !6673, file: !3, line: 992, type: !4243)
!6677 = !DILocation(line: 992, column: 59, scope: !6673)
!6678 = !DILocalVariable(name: "state", scope: !6673, file: !3, line: 994, type: !4407)
!6679 = !DILocation(line: 994, column: 24, scope: !6673)
!6680 = !DILocation(line: 994, column: 33, scope: !6673)
!6681 = !DILocation(line: 994, column: 37, scope: !6673)
!6682 = !DILocalVariable(name: "internal", scope: !6673, file: !3, line: 995, type: !6212)
!6683 = !DILocation(line: 995, column: 27, scope: !6673)
!6684 = !DILocation(line: 995, column: 39, scope: !6673)
!6685 = !DILocation(line: 995, column: 46, scope: !6673)
!6686 = !DILocalVariable(name: "val", scope: !6673, file: !3, line: 997, type: !7)
!6687 = !DILocation(line: 997, column: 15, scope: !6673)
!6688 = !DILocalVariable(name: "quant", scope: !6673, file: !3, line: 997, type: !7)
!6689 = !DILocation(line: 997, column: 20, scope: !6673)
!6690 = !DILocalVariable(name: "quantn", scope: !6673, file: !3, line: 997, type: !7)
!6691 = !DILocation(line: 997, column: 27, scope: !6673)
!6692 = !DILocalVariable(name: "est", scope: !6673, file: !3, line: 997, type: !7)
!6693 = !DILocation(line: 997, column: 40, scope: !6673)
!6694 = !DILocalVariable(name: "estn", scope: !6673, file: !3, line: 997, type: !7)
!6695 = !DILocation(line: 997, column: 45, scope: !6673)
!6696 = !DILocalVariable(name: "buf", scope: !6673, file: !3, line: 998, type: !4682)
!6697 = !DILocation(line: 998, column: 5, scope: !6673)
!6698 = !DILocalVariable(name: "reg", scope: !6673, file: !3, line: 999, type: !489)
!6699 = !DILocation(line: 999, column: 6, scope: !6673)
!6700 = !DILocation(line: 1001, column: 3, scope: !6673)
!6701 = !DILocation(line: 1001, column: 7, scope: !6673)
!6702 = !DILocation(line: 1002, column: 26, scope: !6673)
!6703 = !DILocation(line: 1002, column: 9, scope: !6673)
!6704 = !DILocation(line: 1002, column: 7, scope: !6673)
!6705 = !DILocation(line: 1003, column: 10, scope: !6673)
!6706 = !DILocation(line: 1003, column: 17, scope: !6673)
!6707 = !DILocation(line: 1003, column: 2, scope: !6673)
!6708 = !DILocation(line: 1006, column: 7, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 1006, column: 7)
!6710 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1003, column: 25)
!6711 = !DILocation(line: 1006, column: 17, scope: !6709)
!6712 = !DILocation(line: 1006, column: 7, scope: !6710)
!6713 = !DILocation(line: 1007, column: 8, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 1007, column: 8)
!6715 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 1006, column: 23)
!6716 = !DILocation(line: 1007, column: 8, scope: !6715)
!6717 = !DILocation(line: 1009, column: 23, scope: !6718)
!6718 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 1007, column: 50)
!6719 = !DILocation(line: 1009, column: 44, scope: !6718)
!6720 = !DILocation(line: 1009, column: 5, scope: !6718)
!6721 = !DILocation(line: 1010, column: 11, scope: !6718)
!6722 = !DILocation(line: 1010, column: 9, scope: !6718)
!6723 = !DILocation(line: 1012, column: 81, scope: !6718)
!6724 = !DILocation(line: 1012, column: 12, scope: !6718)
!6725 = !DILocation(line: 1012, column: 6, scope: !6718)
!6726 = !DILocation(line: 1012, column: 10, scope: !6718)
!6727 = !DILocation(line: 1013, column: 5, scope: !6718)
!6728 = !DILocation(line: 1013, column: 5, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 1013, column: 5)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 1013, column: 5)
!6731 = distinct !DILexicalBlock(scope: !6732, file: !3, line: 1013, column: 5)
!6732 = distinct !DILexicalBlock(scope: !6718, file: !3, line: 1013, column: 5)
!6733 = !DILocation(line: 1013, column: 5, scope: !6730)
!6734 = !DILocation(line: 1013, column: 5, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 1013, column: 5)
!6736 = !DILocation(line: 1013, column: 5, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 1013, column: 5)
!6738 = !DILocation(line: 1013, column: 5, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 1013, column: 5)
!6740 = !DILocation(line: 1013, column: 5, scope: !6732)
!6741 = !DILocation(line: 1015, column: 4, scope: !6718)
!6742 = !DILocation(line: 1016, column: 3, scope: !6715)
!6743 = !DILocation(line: 1017, column: 3, scope: !6710)
!6744 = !DILocation(line: 1019, column: 7, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 1019, column: 7)
!6746 = !DILocation(line: 1019, column: 17, scope: !6745)
!6747 = !DILocation(line: 1019, column: 7, scope: !6710)
!6748 = !DILocation(line: 1020, column: 10, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 1019, column: 23)
!6750 = !DILocation(line: 1020, column: 8, scope: !6749)
!6751 = !DILocation(line: 1021, column: 12, scope: !6749)
!6752 = !DILocation(line: 1021, column: 10, scope: !6749)
!6753 = !DILocation(line: 1022, column: 10, scope: !6749)
!6754 = !DILocation(line: 1022, column: 8, scope: !6749)
!6755 = !DILocation(line: 1023, column: 10, scope: !6749)
!6756 = !DILocation(line: 1023, column: 8, scope: !6749)
!6757 = !DILocation(line: 1024, column: 8, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 1024, column: 8)
!6759 = !DILocation(line: 1024, column: 12, scope: !6758)
!6760 = !DILocation(line: 1024, column: 8, scope: !6749)
!6761 = !DILocation(line: 1025, column: 9, scope: !6758)
!6762 = !DILocation(line: 1025, column: 5, scope: !6758)
!6763 = !DILocation(line: 1026, column: 13, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 1026, column: 13)
!6765 = !DILocation(line: 1026, column: 17, scope: !6764)
!6766 = !DILocation(line: 1026, column: 13, scope: !6758)
!6767 = !DILocation(line: 1027, column: 9, scope: !6764)
!6768 = !DILocation(line: 1027, column: 5, scope: !6764)
!6769 = !DILocation(line: 1030, column: 89, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6764, file: !3, line: 1028, column: 9)
!6771 = !DILocation(line: 1030, column: 95, scope: !6770)
!6772 = !DILocation(line: 1030, column: 14, scope: !6770)
!6773 = !DILocation(line: 1030, column: 12, scope: !6770)
!6774 = !DILocation(line: 1032, column: 83, scope: !6770)
!6775 = !DILocation(line: 1032, column: 12, scope: !6770)
!6776 = !DILocation(line: 1032, column: 10, scope: !6770)
!6777 = !DILocation(line: 1034, column: 12, scope: !6770)
!6778 = !DILocation(line: 1034, column: 21, scope: !6770)
!6779 = !DILocation(line: 1034, column: 19, scope: !6770)
!6780 = !DILocation(line: 1034, column: 27, scope: !6770)
!6781 = !DILocation(line: 1034, column: 9, scope: !6770)
!6782 = !DILocation(line: 1036, column: 11, scope: !6749)
!6783 = !DILocation(line: 1036, column: 5, scope: !6749)
!6784 = !DILocation(line: 1036, column: 9, scope: !6749)
!6785 = !DILocation(line: 1037, column: 4, scope: !6749)
!6786 = !DILocation(line: 1037, column: 4, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6788, file: !3, line: 1037, column: 4)
!6788 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 1037, column: 4)
!6789 = distinct !DILexicalBlock(scope: !6790, file: !3, line: 1037, column: 4)
!6790 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 1037, column: 4)
!6791 = !DILocation(line: 1037, column: 4, scope: !6788)
!6792 = !DILocation(line: 1037, column: 4, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 1037, column: 4)
!6794 = !DILocation(line: 1037, column: 4, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 1037, column: 4)
!6796 = !DILocation(line: 1037, column: 4, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6795, file: !3, line: 1037, column: 4)
!6798 = !DILocation(line: 1037, column: 4, scope: !6790)
!6799 = !DILocation(line: 1039, column: 3, scope: !6749)
!6800 = !DILocation(line: 1040, column: 3, scope: !6710)
!6801 = !DILocation(line: 1042, column: 3, scope: !6710)
!6802 = !DILocation(line: 1042, column: 3, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 1042, column: 3)
!6804 = distinct !DILexicalBlock(scope: !6805, file: !3, line: 1042, column: 3)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 1042, column: 3)
!6806 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 1042, column: 3)
!6807 = !DILocation(line: 1042, column: 3, scope: !6804)
!6808 = !DILocation(line: 1042, column: 3, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 1042, column: 3)
!6810 = !DILocation(line: 1042, column: 3, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 1042, column: 3)
!6812 = !DILocation(line: 1042, column: 3, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 1042, column: 3)
!6814 = !DILocation(line: 1042, column: 3, scope: !6806)
!6815 = !DILocation(line: 1043, column: 3, scope: !6710)
!6816 = !DILocation(line: 1046, column: 2, scope: !6673)
!6817 = !DILocation(line: 1047, column: 1, scope: !6673)
!6818 = distinct !DISubprogram(name: "stb0899_send_diseqc_msg", scope: !3, file: !3, line: 686, type: !4249, scopeLine: 687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!6819 = !DILocalVariable(name: "fe", arg: 1, scope: !6818, file: !3, line: 686, type: !506)
!6820 = !DILocation(line: 686, column: 57, scope: !6818)
!6821 = !DILocalVariable(name: "cmd", arg: 2, scope: !6818, file: !3, line: 686, type: !4251)
!6822 = !DILocation(line: 686, column: 91, scope: !6818)
!6823 = !DILocalVariable(name: "state", scope: !6818, file: !3, line: 688, type: !4407)
!6824 = !DILocation(line: 688, column: 24, scope: !6818)
!6825 = !DILocation(line: 688, column: 32, scope: !6818)
!6826 = !DILocation(line: 688, column: 36, scope: !6818)
!6827 = !DILocalVariable(name: "reg", scope: !6818, file: !3, line: 689, type: !419)
!6828 = !DILocation(line: 689, column: 5, scope: !6818)
!6829 = !DILocalVariable(name: "i", scope: !6818, file: !3, line: 689, type: !419)
!6830 = !DILocation(line: 689, column: 10, scope: !6818)
!6831 = !DILocation(line: 691, column: 6, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 691, column: 6)
!6833 = !DILocation(line: 691, column: 11, scope: !6832)
!6834 = !DILocation(line: 691, column: 19, scope: !6832)
!6835 = !DILocation(line: 691, column: 6, scope: !6818)
!6836 = !DILocation(line: 692, column: 3, scope: !6832)
!6837 = !DILocation(line: 695, column: 25, scope: !6818)
!6838 = !DILocation(line: 695, column: 8, scope: !6818)
!6839 = !DILocation(line: 695, column: 6, scope: !6818)
!6840 = !DILocation(line: 696, column: 2, scope: !6818)
!6841 = !DILocation(line: 697, column: 20, scope: !6818)
!6842 = !DILocation(line: 697, column: 46, scope: !6818)
!6843 = !DILocation(line: 697, column: 2, scope: !6818)
!6844 = !DILocation(line: 698, column: 9, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 698, column: 2)
!6846 = !DILocation(line: 698, column: 7, scope: !6845)
!6847 = !DILocation(line: 698, column: 14, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6845, file: !3, line: 698, column: 2)
!6849 = !DILocation(line: 698, column: 18, scope: !6848)
!6850 = !DILocation(line: 698, column: 23, scope: !6848)
!6851 = !DILocation(line: 698, column: 16, scope: !6848)
!6852 = !DILocation(line: 698, column: 2, scope: !6845)
!6853 = !DILocation(line: 700, column: 38, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6855, file: !3, line: 700, column: 7)
!6855 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 698, column: 37)
!6856 = !DILocation(line: 700, column: 7, scope: !6854)
!6857 = !DILocation(line: 700, column: 50, scope: !6854)
!6858 = !DILocation(line: 700, column: 7, scope: !6855)
!6859 = !DILocation(line: 701, column: 4, scope: !6854)
!6860 = !DILocation(line: 703, column: 21, scope: !6855)
!6861 = !DILocation(line: 703, column: 45, scope: !6855)
!6862 = !DILocation(line: 703, column: 50, scope: !6855)
!6863 = !DILocation(line: 703, column: 54, scope: !6855)
!6864 = !DILocation(line: 703, column: 3, scope: !6855)
!6865 = !DILocation(line: 704, column: 2, scope: !6855)
!6866 = !DILocation(line: 698, column: 33, scope: !6848)
!6867 = !DILocation(line: 698, column: 2, scope: !6848)
!6868 = distinct !{!6868, !6852, !6869}
!6869 = !DILocation(line: 704, column: 2, scope: !6845)
!6870 = !DILocation(line: 705, column: 25, scope: !6818)
!6871 = !DILocation(line: 705, column: 8, scope: !6818)
!6872 = !DILocation(line: 705, column: 6, scope: !6818)
!6873 = !DILocation(line: 706, column: 2, scope: !6818)
!6874 = !DILocation(line: 707, column: 20, scope: !6818)
!6875 = !DILocation(line: 707, column: 46, scope: !6818)
!6876 = !DILocation(line: 707, column: 2, scope: !6818)
!6877 = !DILocation(line: 708, column: 2, scope: !6818)
!6878 = !DILocation(line: 709, column: 2, scope: !6818)
!6879 = !DILocation(line: 710, column: 1, scope: !6818)
!6880 = distinct !DISubprogram(name: "stb0899_recv_slave_reply", scope: !3, file: !3, line: 729, type: !4259, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!6881 = !DILocalVariable(name: "fe", arg: 1, scope: !6880, file: !3, line: 729, type: !506)
!6882 = !DILocation(line: 729, column: 58, scope: !6880)
!6883 = !DILocalVariable(name: "reply", arg: 2, scope: !6880, file: !3, line: 729, type: !4261)
!6884 = !DILocation(line: 729, column: 93, scope: !6880)
!6885 = !DILocalVariable(name: "state", scope: !6880, file: !3, line: 731, type: !4407)
!6886 = !DILocation(line: 731, column: 24, scope: !6880)
!6887 = !DILocation(line: 731, column: 32, scope: !6880)
!6888 = !DILocation(line: 731, column: 36, scope: !6880)
!6889 = !DILocalVariable(name: "reg", scope: !6880, file: !3, line: 732, type: !419)
!6890 = !DILocation(line: 732, column: 5, scope: !6880)
!6891 = !DILocalVariable(name: "length", scope: !6880, file: !3, line: 732, type: !419)
!6892 = !DILocation(line: 732, column: 10, scope: !6880)
!6893 = !DILocalVariable(name: "i", scope: !6880, file: !3, line: 732, type: !419)
!6894 = !DILocation(line: 732, column: 22, scope: !6880)
!6895 = !DILocalVariable(name: "result", scope: !6880, file: !3, line: 733, type: !96)
!6896 = !DILocation(line: 733, column: 6, scope: !6880)
!6897 = !DILocation(line: 735, column: 33, scope: !6898)
!6898 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 735, column: 6)
!6899 = !DILocation(line: 735, column: 6, scope: !6898)
!6900 = !DILocation(line: 735, column: 45, scope: !6898)
!6901 = !DILocation(line: 735, column: 6, scope: !6880)
!6902 = !DILocation(line: 736, column: 3, scope: !6898)
!6903 = !DILocation(line: 738, column: 25, scope: !6880)
!6904 = !DILocation(line: 738, column: 8, scope: !6880)
!6905 = !DILocation(line: 738, column: 6, scope: !6880)
!6906 = !DILocation(line: 739, column: 6, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 739, column: 6)
!6908 = !DILocation(line: 739, column: 6, scope: !6880)
!6909 = !DILocation(line: 741, column: 26, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6907, file: !3, line: 739, column: 36)
!6911 = !DILocation(line: 741, column: 9, scope: !6910)
!6912 = !DILocation(line: 741, column: 7, scope: !6910)
!6913 = !DILocation(line: 742, column: 12, scope: !6910)
!6914 = !DILocation(line: 742, column: 10, scope: !6910)
!6915 = !DILocation(line: 744, column: 7, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 744, column: 7)
!6917 = !DILocation(line: 744, column: 14, scope: !6916)
!6918 = !DILocation(line: 744, column: 7, scope: !6910)
!6919 = !DILocation(line: 745, column: 11, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6916, file: !3, line: 744, column: 37)
!6921 = !DILocation(line: 746, column: 4, scope: !6920)
!6922 = !DILocation(line: 748, column: 20, scope: !6910)
!6923 = !DILocation(line: 748, column: 3, scope: !6910)
!6924 = !DILocation(line: 748, column: 10, scope: !6910)
!6925 = !DILocation(line: 748, column: 18, scope: !6910)
!6926 = !DILocation(line: 751, column: 10, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 751, column: 3)
!6928 = !DILocation(line: 751, column: 8, scope: !6927)
!6929 = !DILocation(line: 751, column: 15, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6927, file: !3, line: 751, column: 3)
!6931 = !DILocation(line: 751, column: 19, scope: !6930)
!6932 = !DILocation(line: 751, column: 17, scope: !6930)
!6933 = !DILocation(line: 751, column: 3, scope: !6927)
!6934 = !DILocation(line: 752, column: 37, scope: !6930)
!6935 = !DILocation(line: 752, column: 20, scope: !6930)
!6936 = !DILocation(line: 752, column: 4, scope: !6930)
!6937 = !DILocation(line: 752, column: 11, scope: !6930)
!6938 = !DILocation(line: 752, column: 15, scope: !6930)
!6939 = !DILocation(line: 752, column: 18, scope: !6930)
!6940 = !DILocation(line: 751, column: 28, scope: !6930)
!6941 = !DILocation(line: 751, column: 3, scope: !6930)
!6942 = distinct !{!6942, !6933, !6943}
!6943 = !DILocation(line: 752, column: 59, scope: !6927)
!6944 = !DILocation(line: 753, column: 2, scope: !6910)
!6945 = !DILocation(line: 755, column: 2, scope: !6880)
!6946 = !DILabel(scope: !6880, name: "exit", file: !3, line: 756)
!6947 = !DILocation(line: 756, column: 1, scope: !6880)
!6948 = !DILocation(line: 758, column: 9, scope: !6880)
!6949 = !DILocation(line: 758, column: 2, scope: !6880)
!6950 = !DILocation(line: 759, column: 1, scope: !6880)
!6951 = distinct !DISubprogram(name: "stb0899_send_diseqc_burst", scope: !3, file: !3, line: 777, type: !4270, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!6952 = !DILocalVariable(name: "fe", arg: 1, scope: !6951, file: !3, line: 777, type: !506)
!6953 = !DILocation(line: 777, column: 59, scope: !6951)
!6954 = !DILocalVariable(name: "burst", arg: 2, scope: !6951, file: !3, line: 778, type: !265)
!6955 = !DILocation(line: 778, column: 31, scope: !6951)
!6956 = !DILocalVariable(name: "state", scope: !6951, file: !3, line: 780, type: !4407)
!6957 = !DILocation(line: 780, column: 24, scope: !6951)
!6958 = !DILocation(line: 780, column: 32, scope: !6951)
!6959 = !DILocation(line: 780, column: 36, scope: !6951)
!6960 = !DILocalVariable(name: "reg", scope: !6951, file: !3, line: 781, type: !419)
!6961 = !DILocation(line: 781, column: 5, scope: !6951)
!6962 = !DILocalVariable(name: "old_state", scope: !6951, file: !3, line: 781, type: !419)
!6963 = !DILocation(line: 781, column: 10, scope: !6951)
!6964 = !DILocation(line: 784, column: 33, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 784, column: 6)
!6966 = !DILocation(line: 784, column: 6, scope: !6965)
!6967 = !DILocation(line: 784, column: 45, scope: !6965)
!6968 = !DILocation(line: 784, column: 6, scope: !6951)
!6969 = !DILocation(line: 785, column: 3, scope: !6965)
!6970 = !DILocation(line: 787, column: 25, scope: !6951)
!6971 = !DILocation(line: 787, column: 8, scope: !6951)
!6972 = !DILocation(line: 787, column: 6, scope: !6951)
!6973 = !DILocation(line: 788, column: 14, scope: !6951)
!6974 = !DILocation(line: 788, column: 12, scope: !6951)
!6975 = !DILocation(line: 790, column: 2, scope: !6951)
!6976 = !DILocation(line: 791, column: 2, scope: !6951)
!6977 = !DILocation(line: 792, column: 20, scope: !6951)
!6978 = !DILocation(line: 792, column: 46, scope: !6951)
!6979 = !DILocation(line: 792, column: 2, scope: !6951)
!6980 = !DILocation(line: 793, column: 10, scope: !6951)
!6981 = !DILocation(line: 793, column: 2, scope: !6951)
!6982 = !DILocation(line: 796, column: 21, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 793, column: 17)
!6984 = !DILocation(line: 796, column: 3, scope: !6983)
!6985 = !DILocation(line: 797, column: 3, scope: !6983)
!6986 = !DILocation(line: 800, column: 21, scope: !6983)
!6987 = !DILocation(line: 800, column: 3, scope: !6983)
!6988 = !DILocation(line: 801, column: 3, scope: !6983)
!6989 = !DILocation(line: 803, column: 25, scope: !6951)
!6990 = !DILocation(line: 803, column: 8, scope: !6951)
!6991 = !DILocation(line: 803, column: 6, scope: !6951)
!6992 = !DILocation(line: 804, column: 2, scope: !6951)
!6993 = !DILocation(line: 805, column: 20, scope: !6951)
!6994 = !DILocation(line: 805, column: 46, scope: !6951)
!6995 = !DILocation(line: 805, column: 2, scope: !6951)
!6996 = !DILocation(line: 807, column: 33, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 807, column: 6)
!6998 = !DILocation(line: 807, column: 6, scope: !6997)
!6999 = !DILocation(line: 807, column: 45, scope: !6997)
!7000 = !DILocation(line: 807, column: 6, scope: !6951)
!7001 = !DILocation(line: 808, column: 3, scope: !6997)
!7002 = !DILocation(line: 811, column: 20, scope: !6951)
!7003 = !DILocation(line: 811, column: 46, scope: !6951)
!7004 = !DILocation(line: 811, column: 2, scope: !6951)
!7005 = !DILocation(line: 813, column: 2, scope: !6951)
!7006 = !DILocation(line: 814, column: 1, scope: !6951)
!7007 = distinct !DISubprogram(name: "stb0899_set_tone", scope: !3, file: !3, line: 1192, type: !4274, scopeLine: 1193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7008 = !DILocalVariable(name: "fe", arg: 1, scope: !7007, file: !3, line: 1192, type: !506)
!7009 = !DILocation(line: 1192, column: 50, scope: !7007)
!7010 = !DILocalVariable(name: "tone", arg: 2, scope: !7007, file: !3, line: 1192, type: !172)
!7011 = !DILocation(line: 1192, column: 76, scope: !7007)
!7012 = !DILocalVariable(name: "state", scope: !7007, file: !3, line: 1194, type: !4407)
!7013 = !DILocation(line: 1194, column: 24, scope: !7007)
!7014 = !DILocation(line: 1194, column: 32, scope: !7007)
!7015 = !DILocation(line: 1194, column: 36, scope: !7007)
!7016 = !DILocalVariable(name: "internal", scope: !7007, file: !3, line: 1195, type: !6212)
!7017 = !DILocation(line: 1195, column: 27, scope: !7007)
!7018 = !DILocation(line: 1195, column: 39, scope: !7007)
!7019 = !DILocation(line: 1195, column: 46, scope: !7007)
!7020 = !DILocalVariable(name: "div", scope: !7007, file: !3, line: 1197, type: !419)
!7021 = !DILocation(line: 1197, column: 5, scope: !7007)
!7022 = !DILocalVariable(name: "reg", scope: !7007, file: !3, line: 1197, type: !419)
!7023 = !DILocation(line: 1197, column: 10, scope: !7007)
!7024 = !DILocation(line: 1200, column: 33, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 1200, column: 6)
!7026 = !DILocation(line: 1200, column: 6, scope: !7025)
!7027 = !DILocation(line: 1200, column: 45, scope: !7025)
!7028 = !DILocation(line: 1200, column: 6, scope: !7007)
!7029 = !DILocation(line: 1201, column: 3, scope: !7025)
!7030 = !DILocation(line: 1203, column: 10, scope: !7007)
!7031 = !DILocation(line: 1203, column: 2, scope: !7007)
!7032 = !DILocation(line: 1205, column: 10, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 1203, column: 16)
!7034 = !DILocation(line: 1205, column: 20, scope: !7033)
!7035 = !DILocation(line: 1205, column: 31, scope: !7033)
!7036 = !DILocation(line: 1205, column: 38, scope: !7033)
!7037 = !DILocation(line: 1205, column: 9, scope: !7033)
!7038 = !DILocation(line: 1205, column: 7, scope: !7033)
!7039 = !DILocation(line: 1206, column: 10, scope: !7033)
!7040 = !DILocation(line: 1206, column: 14, scope: !7033)
!7041 = !DILocation(line: 1206, column: 19, scope: !7033)
!7042 = !DILocation(line: 1206, column: 9, scope: !7033)
!7043 = !DILocation(line: 1206, column: 7, scope: !7033)
!7044 = !DILocation(line: 1207, column: 21, scope: !7033)
!7045 = !DILocation(line: 1207, column: 3, scope: !7033)
!7046 = !DILocation(line: 1208, column: 26, scope: !7033)
!7047 = !DILocation(line: 1208, column: 9, scope: !7033)
!7048 = !DILocation(line: 1208, column: 7, scope: !7033)
!7049 = !DILocation(line: 1209, column: 3, scope: !7033)
!7050 = !DILocation(line: 1210, column: 21, scope: !7033)
!7051 = !DILocation(line: 1210, column: 46, scope: !7033)
!7052 = !DILocation(line: 1210, column: 3, scope: !7033)
!7053 = !DILocation(line: 1211, column: 21, scope: !7033)
!7054 = !DILocation(line: 1211, column: 45, scope: !7033)
!7055 = !DILocation(line: 1211, column: 3, scope: !7033)
!7056 = !DILocation(line: 1212, column: 3, scope: !7033)
!7057 = !DILocation(line: 1214, column: 21, scope: !7033)
!7058 = !DILocation(line: 1214, column: 3, scope: !7033)
!7059 = !DILocation(line: 1215, column: 3, scope: !7033)
!7060 = !DILocation(line: 1217, column: 3, scope: !7033)
!7061 = !DILocation(line: 1219, column: 2, scope: !7007)
!7062 = !DILocation(line: 1220, column: 1, scope: !7007)
!7063 = distinct !DISubprogram(name: "stb0899_set_voltage", scope: !3, file: !3, line: 1164, type: !4278, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7064 = !DILocalVariable(name: "fe", arg: 1, scope: !7063, file: !3, line: 1164, type: !506)
!7065 = !DILocation(line: 1164, column: 53, scope: !7063)
!7066 = !DILocalVariable(name: "voltage", arg: 2, scope: !7063, file: !3, line: 1165, type: !167)
!7067 = !DILocation(line: 1165, column: 31, scope: !7063)
!7068 = !DILocalVariable(name: "state", scope: !7063, file: !3, line: 1167, type: !4407)
!7069 = !DILocation(line: 1167, column: 24, scope: !7063)
!7070 = !DILocation(line: 1167, column: 32, scope: !7063)
!7071 = !DILocation(line: 1167, column: 36, scope: !7063)
!7072 = !DILocation(line: 1169, column: 10, scope: !7063)
!7073 = !DILocation(line: 1169, column: 2, scope: !7063)
!7074 = !DILocation(line: 1171, column: 21, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 1169, column: 19)
!7076 = !DILocation(line: 1171, column: 3, scope: !7075)
!7077 = !DILocation(line: 1172, column: 21, scope: !7075)
!7078 = !DILocation(line: 1172, column: 3, scope: !7075)
!7079 = !DILocation(line: 1173, column: 21, scope: !7075)
!7080 = !DILocation(line: 1173, column: 3, scope: !7075)
!7081 = !DILocation(line: 1174, column: 3, scope: !7075)
!7082 = !DILocation(line: 1176, column: 21, scope: !7075)
!7083 = !DILocation(line: 1176, column: 3, scope: !7075)
!7084 = !DILocation(line: 1177, column: 21, scope: !7075)
!7085 = !DILocation(line: 1177, column: 3, scope: !7075)
!7086 = !DILocation(line: 1178, column: 21, scope: !7075)
!7087 = !DILocation(line: 1178, column: 3, scope: !7075)
!7088 = !DILocation(line: 1179, column: 3, scope: !7075)
!7089 = !DILocation(line: 1181, column: 21, scope: !7075)
!7090 = !DILocation(line: 1181, column: 3, scope: !7075)
!7091 = !DILocation(line: 1182, column: 21, scope: !7075)
!7092 = !DILocation(line: 1182, column: 3, scope: !7075)
!7093 = !DILocation(line: 1183, column: 21, scope: !7075)
!7094 = !DILocation(line: 1183, column: 3, scope: !7075)
!7095 = !DILocation(line: 1184, column: 3, scope: !7075)
!7096 = !DILocation(line: 1186, column: 3, scope: !7075)
!7097 = !DILocation(line: 1189, column: 2, scope: !7063)
!7098 = !DILocation(line: 1190, column: 1, scope: !7063)
!7099 = distinct !DISubprogram(name: "stb0899_search", scope: !3, file: !3, line: 1415, type: !4296, scopeLine: 1416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7100 = !DILocalVariable(name: "fe", arg: 1, scope: !7099, file: !3, line: 1415, type: !506)
!7101 = !DILocation(line: 1415, column: 62, scope: !7099)
!7102 = !DILocalVariable(name: "state", scope: !7099, file: !3, line: 1417, type: !4407)
!7103 = !DILocation(line: 1417, column: 24, scope: !7099)
!7104 = !DILocation(line: 1417, column: 32, scope: !7099)
!7105 = !DILocation(line: 1417, column: 36, scope: !7099)
!7106 = !DILocalVariable(name: "i_params", scope: !7099, file: !3, line: 1418, type: !7107)
!7107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4636, size: 64)
!7108 = !DILocation(line: 1418, column: 25, scope: !7099)
!7109 = !DILocation(line: 1418, column: 37, scope: !7099)
!7110 = !DILocation(line: 1418, column: 44, scope: !7099)
!7111 = !DILocalVariable(name: "internal", scope: !7099, file: !3, line: 1419, type: !6212)
!7112 = !DILocation(line: 1419, column: 27, scope: !7099)
!7113 = !DILocation(line: 1419, column: 39, scope: !7099)
!7114 = !DILocation(line: 1419, column: 46, scope: !7099)
!7115 = !DILocalVariable(name: "config", scope: !7099, file: !3, line: 1420, type: !4534)
!7116 = !DILocation(line: 1420, column: 25, scope: !7099)
!7117 = !DILocation(line: 1420, column: 34, scope: !7099)
!7118 = !DILocation(line: 1420, column: 41, scope: !7099)
!7119 = !DILocalVariable(name: "props", scope: !7099, file: !3, line: 1421, type: !4230)
!7120 = !DILocation(line: 1421, column: 34, scope: !7099)
!7121 = !DILocation(line: 1421, column: 43, scope: !7099)
!7122 = !DILocation(line: 1421, column: 47, scope: !7099)
!7123 = !DILocalVariable(name: "SearchRange", scope: !7099, file: !3, line: 1423, type: !489)
!7124 = !DILocation(line: 1423, column: 6, scope: !7099)
!7125 = !DILocalVariable(name: "gain", scope: !7099, file: !3, line: 1423, type: !489)
!7126 = !DILocation(line: 1423, column: 19, scope: !7099)
!7127 = !DILocation(line: 1425, column: 19, scope: !7099)
!7128 = !DILocation(line: 1425, column: 26, scope: !7099)
!7129 = !DILocation(line: 1425, column: 2, scope: !7099)
!7130 = !DILocation(line: 1425, column: 12, scope: !7099)
!7131 = !DILocation(line: 1425, column: 17, scope: !7099)
!7132 = !DILocation(line: 1426, column: 20, scope: !7099)
!7133 = !DILocation(line: 1426, column: 27, scope: !7099)
!7134 = !DILocation(line: 1426, column: 2, scope: !7099)
!7135 = !DILocation(line: 1426, column: 12, scope: !7099)
!7136 = !DILocation(line: 1426, column: 18, scope: !7099)
!7137 = !DILocation(line: 1427, column: 18, scope: !7099)
!7138 = !DILocation(line: 1427, column: 25, scope: !7099)
!7139 = !DILocation(line: 1427, column: 2, scope: !7099)
!7140 = !DILocation(line: 1427, column: 9, scope: !7099)
!7141 = !DILocation(line: 1427, column: 16, scope: !7099)
!7142 = !DILocation(line: 1428, column: 2, scope: !7099)
!7143 = !DILocation(line: 1428, column: 2, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 1428, column: 2)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 1428, column: 2)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 1428, column: 2)
!7147 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1428, column: 2)
!7148 = !DILocation(line: 1428, column: 2, scope: !7145)
!7149 = !DILocation(line: 1428, column: 2, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 1428, column: 2)
!7151 = !DILocation(line: 1428, column: 2, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7150, file: !3, line: 1428, column: 2)
!7153 = !DILocation(line: 1428, column: 2, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 1428, column: 2)
!7155 = !DILocation(line: 1428, column: 2, scope: !7147)
!7156 = !DILocation(line: 1430, column: 14, scope: !7099)
!7157 = !DILocation(line: 1431, column: 2, scope: !7099)
!7158 = !DILocation(line: 1431, column: 2, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 1431, column: 2)
!7160 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 1431, column: 2)
!7161 = distinct !DILexicalBlock(scope: !7162, file: !3, line: 1431, column: 2)
!7162 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1431, column: 2)
!7163 = !DILocation(line: 1431, column: 2, scope: !7160)
!7164 = !DILocation(line: 1431, column: 2, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 1431, column: 2)
!7166 = !DILocation(line: 1431, column: 2, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7165, file: !3, line: 1431, column: 2)
!7168 = !DILocation(line: 1431, column: 2, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 1431, column: 2)
!7170 = !DILocation(line: 1431, column: 2, scope: !7162)
!7171 = !DILocation(line: 1433, column: 6, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7099, file: !3, line: 1433, column: 6)
!7173 = !DILocation(line: 1433, column: 6, scope: !7099)
!7174 = !DILocation(line: 1434, column: 3, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7172, file: !3, line: 1433, column: 51)
!7176 = !DILocation(line: 1434, column: 3, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 1434, column: 3)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 1434, column: 3)
!7179 = distinct !DILexicalBlock(scope: !7180, file: !3, line: 1434, column: 3)
!7180 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 1434, column: 3)
!7181 = !DILocation(line: 1434, column: 3, scope: !7178)
!7182 = !DILocation(line: 1434, column: 3, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 1434, column: 3)
!7184 = !DILocation(line: 1434, column: 3, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7183, file: !3, line: 1434, column: 3)
!7186 = !DILocation(line: 1434, column: 3, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 1434, column: 3)
!7188 = !DILocation(line: 1434, column: 3, scope: !7180)
!7189 = !DILocation(line: 1435, column: 24, scope: !7175)
!7190 = !DILocation(line: 1435, column: 3, scope: !7175)
!7191 = !DILocation(line: 1437, column: 7, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 1437, column: 7)
!7193 = !DILocation(line: 1437, column: 14, scope: !7192)
!7194 = !DILocation(line: 1437, column: 22, scope: !7192)
!7195 = !DILocation(line: 1437, column: 7, scope: !7175)
!7196 = !DILocation(line: 1438, column: 8, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 1438, column: 8)
!7198 = distinct !DILexicalBlock(scope: !7192, file: !3, line: 1437, column: 43)
!7199 = !DILocation(line: 1438, column: 18, scope: !7197)
!7200 = !DILocation(line: 1438, column: 24, scope: !7197)
!7201 = !DILocation(line: 1438, column: 8, scope: !7198)
!7202 = !DILocation(line: 1439, column: 10, scope: !7197)
!7203 = !DILocation(line: 1439, column: 5, scope: !7197)
!7204 = !DILocation(line: 1440, column: 13, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7197, file: !3, line: 1440, column: 13)
!7206 = !DILocation(line: 1440, column: 23, scope: !7205)
!7207 = !DILocation(line: 1440, column: 29, scope: !7205)
!7208 = !DILocation(line: 1440, column: 13, scope: !7197)
!7209 = !DILocation(line: 1441, column: 10, scope: !7205)
!7210 = !DILocation(line: 1441, column: 5, scope: !7205)
!7211 = !DILocation(line: 1443, column: 10, scope: !7205)
!7212 = !DILocation(line: 1444, column: 4, scope: !7198)
!7213 = !DILocation(line: 1444, column: 11, scope: !7198)
!7214 = !DILocation(line: 1444, column: 19, scope: !7198)
!7215 = !DILocation(line: 1444, column: 39, scope: !7198)
!7216 = !DILocation(line: 1444, column: 43, scope: !7198)
!7217 = !DILocation(line: 1445, column: 3, scope: !7198)
!7218 = !DILocation(line: 1447, column: 7, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 1447, column: 7)
!7220 = !DILocation(line: 1447, column: 17, scope: !7219)
!7221 = !DILocation(line: 1447, column: 23, scope: !7219)
!7222 = !DILocation(line: 1447, column: 7, scope: !7175)
!7223 = !DILocation(line: 1448, column: 21, scope: !7219)
!7224 = !DILocation(line: 1448, column: 28, scope: !7219)
!7225 = !DILocation(line: 1448, column: 36, scope: !7219)
!7226 = !DILocation(line: 1448, column: 4, scope: !7219)
!7227 = !DILocation(line: 1450, column: 21, scope: !7219)
!7228 = !DILocation(line: 1450, column: 28, scope: !7219)
!7229 = !DILocation(line: 1450, column: 36, scope: !7219)
!7230 = !DILocation(line: 1450, column: 4, scope: !7219)
!7231 = !DILocation(line: 1452, column: 11, scope: !7175)
!7232 = !DILocation(line: 1452, column: 18, scope: !7175)
!7233 = !DILocation(line: 1452, column: 3, scope: !7175)
!7234 = !DILocation(line: 1455, column: 4, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 1452, column: 26)
!7236 = !DILocation(line: 1455, column: 4, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 1455, column: 4)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 1455, column: 4)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 1455, column: 4)
!7240 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1455, column: 4)
!7241 = !DILocation(line: 1455, column: 4, scope: !7238)
!7242 = !DILocation(line: 1455, column: 4, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 1455, column: 4)
!7244 = !DILocation(line: 1455, column: 4, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 1455, column: 4)
!7246 = !DILocation(line: 1455, column: 4, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7245, file: !3, line: 1455, column: 4)
!7248 = !DILocation(line: 1455, column: 4, scope: !7240)
!7249 = !DILocation(line: 1456, column: 21, scope: !7235)
!7250 = !DILocation(line: 1456, column: 31, scope: !7235)
!7251 = !DILocation(line: 1456, column: 4, scope: !7235)
!7252 = !DILocation(line: 1456, column: 14, scope: !7235)
!7253 = !DILocation(line: 1456, column: 19, scope: !7235)
!7254 = !DILocation(line: 1457, column: 22, scope: !7235)
!7255 = !DILocation(line: 1457, column: 32, scope: !7235)
!7256 = !DILocation(line: 1457, column: 4, scope: !7235)
!7257 = !DILocation(line: 1457, column: 14, scope: !7235)
!7258 = !DILocation(line: 1457, column: 20, scope: !7235)
!7259 = !DILocation(line: 1464, column: 27, scope: !7235)
!7260 = !DILocation(line: 1464, column: 39, scope: !7235)
!7261 = !DILocation(line: 1464, column: 52, scope: !7235)
!7262 = !DILocation(line: 1464, column: 62, scope: !7235)
!7263 = !DILocation(line: 1464, column: 68, scope: !7235)
!7264 = !DILocation(line: 1464, column: 49, scope: !7235)
!7265 = !DILocation(line: 1464, column: 4, scope: !7235)
!7266 = !DILocation(line: 1464, column: 14, scope: !7235)
!7267 = !DILocation(line: 1464, column: 25, scope: !7235)
!7268 = !DILocation(line: 1465, column: 4, scope: !7235)
!7269 = !DILocation(line: 1465, column: 14, scope: !7235)
!7270 = !DILocation(line: 1465, column: 28, scope: !7235)
!7271 = !DILocation(line: 1469, column: 27, scope: !7235)
!7272 = !DILocation(line: 1469, column: 34, scope: !7235)
!7273 = !DILocation(line: 1469, column: 4, scope: !7235)
!7274 = !DILocation(line: 1471, column: 8, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1471, column: 8)
!7276 = !DILocation(line: 1471, column: 15, scope: !7275)
!7277 = !DILocation(line: 1471, column: 23, scope: !7275)
!7278 = !DILocation(line: 1471, column: 8, scope: !7235)
!7279 = !DILocation(line: 1472, column: 5, scope: !7275)
!7280 = !DILocation(line: 1472, column: 12, scope: !7275)
!7281 = !DILocation(line: 1472, column: 20, scope: !7275)
!7282 = !DILocation(line: 1472, column: 40, scope: !7275)
!7283 = !DILocation(line: 1472, column: 70, scope: !7275)
!7284 = !DILocation(line: 1472, column: 51, scope: !7275)
!7285 = !DILocation(line: 1472, column: 79, scope: !7275)
!7286 = !DILocation(line: 1472, column: 77, scope: !7275)
!7287 = !DILocation(line: 1472, column: 48, scope: !7275)
!7288 = !DILocation(line: 1472, column: 93, scope: !7275)
!7289 = !DILocation(line: 1472, column: 44, scope: !7275)
!7290 = !DILocation(line: 1473, column: 8, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1473, column: 8)
!7292 = !DILocation(line: 1473, column: 15, scope: !7291)
!7293 = !DILocation(line: 1473, column: 23, scope: !7291)
!7294 = !DILocation(line: 1473, column: 8, scope: !7235)
!7295 = !DILocation(line: 1474, column: 5, scope: !7291)
!7296 = !DILocation(line: 1474, column: 12, scope: !7291)
!7297 = !DILocation(line: 1474, column: 20, scope: !7291)
!7298 = !DILocation(line: 1474, column: 40, scope: !7291)
!7299 = !DILocation(line: 1474, column: 45, scope: !7291)
!7300 = !DILocation(line: 1474, column: 55, scope: !7291)
!7301 = !DILocation(line: 1477, column: 27, scope: !7235)
!7302 = !DILocation(line: 1477, column: 34, scope: !7235)
!7303 = !DILocation(line: 1477, column: 4, scope: !7235)
!7304 = !DILocation(line: 1480, column: 22, scope: !7235)
!7305 = !DILocation(line: 1480, column: 4, scope: !7235)
!7306 = !DILocation(line: 1483, column: 4, scope: !7235)
!7307 = !DILocation(line: 1483, column: 4, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7309, file: !3, line: 1483, column: 4)
!7309 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 1483, column: 4)
!7310 = distinct !DILexicalBlock(scope: !7311, file: !3, line: 1483, column: 4)
!7311 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1483, column: 4)
!7312 = !DILocation(line: 1483, column: 4, scope: !7309)
!7313 = !DILocation(line: 1483, column: 4, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7308, file: !3, line: 1483, column: 4)
!7315 = !DILocation(line: 1483, column: 4, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 1483, column: 4)
!7317 = !DILocation(line: 1483, column: 4, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 1483, column: 4)
!7319 = !DILocation(line: 1483, column: 4, scope: !7311)
!7320 = !DILocation(line: 1484, column: 26, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1484, column: 8)
!7322 = !DILocation(line: 1484, column: 8, scope: !7321)
!7323 = !DILocation(line: 1484, column: 33, scope: !7321)
!7324 = !DILocation(line: 1484, column: 8, scope: !7235)
!7325 = !DILocation(line: 1485, column: 5, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 1484, column: 45)
!7327 = !DILocation(line: 1485, column: 15, scope: !7326)
!7328 = !DILocation(line: 1485, column: 21, scope: !7326)
!7329 = !DILocation(line: 1486, column: 5, scope: !7326)
!7330 = !DILocation(line: 1486, column: 5, scope: !7331)
!7331 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 1486, column: 5)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !3, line: 1486, column: 5)
!7333 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1486, column: 5)
!7334 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 1486, column: 5)
!7335 = !DILocation(line: 1486, column: 5, scope: !7332)
!7336 = !DILocation(line: 1486, column: 5, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 1486, column: 5)
!7338 = !DILocation(line: 1486, column: 5, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 1486, column: 5)
!7340 = !DILocation(line: 1486, column: 5, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7339, file: !3, line: 1486, column: 5)
!7342 = !DILocation(line: 1486, column: 5, scope: !7334)
!7343 = !DILocation(line: 1495, column: 5, scope: !7326)
!7344 = !DILocation(line: 1497, column: 5, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 1496, column: 11)
!7346 = !DILocation(line: 1497, column: 15, scope: !7345)
!7347 = !DILocation(line: 1497, column: 21, scope: !7345)
!7348 = !DILocation(line: 1499, column: 5, scope: !7345)
!7349 = !DILocation(line: 1503, column: 23, scope: !7235)
!7350 = !DILocation(line: 1503, column: 33, scope: !7235)
!7351 = !DILocation(line: 1503, column: 4, scope: !7235)
!7352 = !DILocation(line: 1503, column: 14, scope: !7235)
!7353 = !DILocation(line: 1503, column: 21, scope: !7235)
!7354 = !DILocation(line: 1504, column: 24, scope: !7235)
!7355 = !DILocation(line: 1504, column: 34, scope: !7235)
!7356 = !DILocation(line: 1504, column: 4, scope: !7235)
!7357 = !DILocation(line: 1504, column: 14, scope: !7235)
!7358 = !DILocation(line: 1504, column: 22, scope: !7235)
!7359 = !DILocation(line: 1505, column: 28, scope: !7235)
!7360 = !DILocation(line: 1505, column: 4, scope: !7235)
!7361 = !DILocation(line: 1505, column: 14, scope: !7235)
!7362 = !DILocation(line: 1505, column: 26, scope: !7235)
!7363 = !DILocation(line: 1508, column: 27, scope: !7235)
!7364 = !DILocation(line: 1508, column: 34, scope: !7235)
!7365 = !DILocation(line: 1508, column: 4, scope: !7235)
!7366 = !DILocation(line: 1510, column: 8, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1510, column: 8)
!7368 = !DILocation(line: 1510, column: 15, scope: !7367)
!7369 = !DILocation(line: 1510, column: 23, scope: !7367)
!7370 = !DILocation(line: 1510, column: 8, scope: !7235)
!7371 = !DILocation(line: 1511, column: 5, scope: !7367)
!7372 = !DILocation(line: 1511, column: 12, scope: !7367)
!7373 = !DILocation(line: 1511, column: 20, scope: !7367)
!7374 = !DILocation(line: 1511, column: 40, scope: !7367)
!7375 = !DILocation(line: 1511, column: 64, scope: !7367)
!7376 = !DILocation(line: 1511, column: 45, scope: !7367)
!7377 = !DILocation(line: 1511, column: 73, scope: !7367)
!7378 = !DILocation(line: 1511, column: 71, scope: !7367)
!7379 = !DILocation(line: 1511, column: 44, scope: !7367)
!7380 = !DILocation(line: 1512, column: 8, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1512, column: 8)
!7382 = !DILocation(line: 1512, column: 15, scope: !7381)
!7383 = !DILocation(line: 1512, column: 23, scope: !7381)
!7384 = !DILocation(line: 1512, column: 8, scope: !7235)
!7385 = !DILocation(line: 1513, column: 5, scope: !7381)
!7386 = !DILocation(line: 1513, column: 12, scope: !7381)
!7387 = !DILocation(line: 1513, column: 20, scope: !7381)
!7388 = !DILocation(line: 1513, column: 40, scope: !7381)
!7389 = !DILocation(line: 1513, column: 45, scope: !7381)
!7390 = !DILocation(line: 1513, column: 55, scope: !7381)
!7391 = !DILocation(line: 1516, column: 27, scope: !7235)
!7392 = !DILocation(line: 1516, column: 34, scope: !7235)
!7393 = !DILocation(line: 1516, column: 4, scope: !7235)
!7394 = !DILocation(line: 1521, column: 22, scope: !7235)
!7395 = !DILocation(line: 1521, column: 4, scope: !7235)
!7396 = !DILocation(line: 1524, column: 27, scope: !7235)
!7397 = !DILocation(line: 1524, column: 4, scope: !7235)
!7398 = !DILocation(line: 1527, column: 4, scope: !7235)
!7399 = !DILocation(line: 1527, column: 4, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7401, file: !3, line: 1527, column: 4)
!7401 = distinct !DILexicalBlock(scope: !7402, file: !3, line: 1527, column: 4)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 1527, column: 4)
!7403 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1527, column: 4)
!7404 = !DILocation(line: 1527, column: 4, scope: !7401)
!7405 = !DILocation(line: 1527, column: 4, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 1527, column: 4)
!7407 = !DILocation(line: 1527, column: 4, scope: !7408)
!7408 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 1527, column: 4)
!7409 = !DILocation(line: 1527, column: 4, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 1527, column: 4)
!7411 = !DILocation(line: 1527, column: 4, scope: !7403)
!7412 = !DILocation(line: 1528, column: 27, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1528, column: 8)
!7414 = !DILocation(line: 1528, column: 8, scope: !7413)
!7415 = !DILocation(line: 1528, column: 34, scope: !7413)
!7416 = !DILocation(line: 1528, column: 8, scope: !7235)
!7417 = !DILocation(line: 1529, column: 5, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 1528, column: 53)
!7419 = !DILocation(line: 1529, column: 15, scope: !7418)
!7420 = !DILocation(line: 1529, column: 21, scope: !7418)
!7421 = !DILocation(line: 1530, column: 5, scope: !7418)
!7422 = !DILocation(line: 1530, column: 5, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7424, file: !3, line: 1530, column: 5)
!7424 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 1530, column: 5)
!7425 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 1530, column: 5)
!7426 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 1530, column: 5)
!7427 = !DILocation(line: 1530, column: 5, scope: !7424)
!7428 = !DILocation(line: 1530, column: 5, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 1530, column: 5)
!7430 = !DILocation(line: 1530, column: 5, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1530, column: 5)
!7432 = !DILocation(line: 1530, column: 5, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7431, file: !3, line: 1530, column: 5)
!7434 = !DILocation(line: 1530, column: 5, scope: !7426)
!7435 = !DILocation(line: 1537, column: 5, scope: !7418)
!7436 = !DILocation(line: 1539, column: 5, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7413, file: !3, line: 1538, column: 11)
!7438 = !DILocation(line: 1539, column: 15, scope: !7437)
!7439 = !DILocation(line: 1539, column: 21, scope: !7437)
!7440 = !DILocation(line: 1541, column: 5, scope: !7437)
!7441 = !DILocation(line: 1545, column: 4, scope: !7235)
!7442 = !DILocation(line: 1545, column: 4, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 1545, column: 4)
!7444 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 1545, column: 4)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !3, line: 1545, column: 4)
!7446 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1545, column: 4)
!7447 = !DILocation(line: 1545, column: 4, scope: !7444)
!7448 = !DILocation(line: 1545, column: 4, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7443, file: !3, line: 1545, column: 4)
!7450 = !DILocation(line: 1545, column: 4, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7449, file: !3, line: 1545, column: 4)
!7452 = !DILocation(line: 1545, column: 4, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 1545, column: 4)
!7454 = !DILocation(line: 1545, column: 4, scope: !7446)
!7455 = !DILocation(line: 1546, column: 4, scope: !7235)
!7456 = !DILocation(line: 1550, column: 2, scope: !7099)
!7457 = !DILocation(line: 1551, column: 1, scope: !7099)
!7458 = distinct !DISubprogram(name: "stb0899_postproc", scope: !3, file: !3, line: 571, type: !7459, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7459 = !DISubroutineType(types: !7460)
!7460 = !{!96, !4407, !419, !96}
!7461 = !DILocalVariable(name: "state", arg: 1, scope: !7458, file: !3, line: 571, type: !4407)
!7462 = !DILocation(line: 571, column: 51, scope: !7458)
!7463 = !DILocalVariable(name: "ctl", arg: 2, scope: !7458, file: !3, line: 571, type: !419)
!7464 = !DILocation(line: 571, column: 61, scope: !7458)
!7465 = !DILocalVariable(name: "enable", arg: 3, scope: !7458, file: !3, line: 571, type: !96)
!7466 = !DILocation(line: 571, column: 70, scope: !7458)
!7467 = !DILocalVariable(name: "config", scope: !7458, file: !3, line: 573, type: !4534)
!7468 = !DILocation(line: 573, column: 25, scope: !7458)
!7469 = !DILocation(line: 573, column: 35, scope: !7458)
!7470 = !DILocation(line: 573, column: 42, scope: !7458)
!7471 = !DILocalVariable(name: "postproc", scope: !7458, file: !3, line: 574, type: !4556)
!7472 = !DILocation(line: 574, column: 33, scope: !7458)
!7473 = !DILocation(line: 574, column: 44, scope: !7458)
!7474 = !DILocation(line: 574, column: 52, scope: !7458)
!7475 = !DILocation(line: 577, column: 6, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 577, column: 6)
!7477 = !DILocation(line: 577, column: 6, scope: !7458)
!7478 = !DILocation(line: 578, column: 7, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 578, column: 7)
!7480 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 577, column: 16)
!7481 = !DILocation(line: 578, column: 7, scope: !7480)
!7482 = !DILocation(line: 579, column: 8, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 579, column: 8)
!7484 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 578, column: 15)
!7485 = !DILocation(line: 579, column: 17, scope: !7483)
!7486 = !DILocation(line: 579, column: 22, scope: !7483)
!7487 = !DILocation(line: 579, column: 28, scope: !7483)
!7488 = !DILocation(line: 579, column: 8, scope: !7484)
!7489 = !DILocation(line: 580, column: 23, scope: !7483)
!7490 = !DILocation(line: 580, column: 30, scope: !7483)
!7491 = !DILocation(line: 580, column: 39, scope: !7483)
!7492 = !DILocation(line: 580, column: 44, scope: !7483)
!7493 = !DILocation(line: 580, column: 5, scope: !7483)
!7494 = !DILocation(line: 582, column: 23, scope: !7483)
!7495 = !DILocation(line: 582, column: 30, scope: !7483)
!7496 = !DILocation(line: 582, column: 39, scope: !7483)
!7497 = !DILocation(line: 582, column: 44, scope: !7483)
!7498 = !DILocation(line: 582, column: 5, scope: !7483)
!7499 = !DILocation(line: 583, column: 3, scope: !7484)
!7500 = !DILocation(line: 584, column: 8, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 584, column: 8)
!7502 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 583, column: 10)
!7503 = !DILocation(line: 584, column: 17, scope: !7501)
!7504 = !DILocation(line: 584, column: 22, scope: !7501)
!7505 = !DILocation(line: 584, column: 28, scope: !7501)
!7506 = !DILocation(line: 584, column: 8, scope: !7502)
!7507 = !DILocation(line: 585, column: 23, scope: !7501)
!7508 = !DILocation(line: 585, column: 30, scope: !7501)
!7509 = !DILocation(line: 585, column: 39, scope: !7501)
!7510 = !DILocation(line: 585, column: 44, scope: !7501)
!7511 = !DILocation(line: 585, column: 5, scope: !7501)
!7512 = !DILocation(line: 587, column: 23, scope: !7501)
!7513 = !DILocation(line: 587, column: 30, scope: !7501)
!7514 = !DILocation(line: 587, column: 39, scope: !7501)
!7515 = !DILocation(line: 587, column: 44, scope: !7501)
!7516 = !DILocation(line: 587, column: 5, scope: !7501)
!7517 = !DILocation(line: 589, column: 2, scope: !7480)
!7518 = !DILocation(line: 590, column: 2, scope: !7458)
!7519 = distinct !DISubprogram(name: "stb0899_init_calc", scope: !3, file: !3, line: 628, type: !7520, scopeLine: 629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7520 = !DISubroutineType(types: !7521)
!7521 = !{null, !4407}
!7522 = !DILocalVariable(name: "state", arg: 1, scope: !7519, file: !3, line: 628, type: !4407)
!7523 = !DILocation(line: 628, column: 53, scope: !7519)
!7524 = !DILocalVariable(name: "internal", scope: !7519, file: !3, line: 630, type: !6212)
!7525 = !DILocation(line: 630, column: 27, scope: !7519)
!7526 = !DILocation(line: 630, column: 39, scope: !7519)
!7527 = !DILocation(line: 630, column: 46, scope: !7519)
!7528 = !DILocalVariable(name: "master_clk", scope: !7519, file: !3, line: 631, type: !96)
!7529 = !DILocation(line: 631, column: 6, scope: !7519)
!7530 = !DILocalVariable(name: "agc", scope: !7519, file: !3, line: 632, type: !4682)
!7531 = !DILocation(line: 632, column: 5, scope: !7519)
!7532 = !DILocalVariable(name: "reg", scope: !7519, file: !3, line: 633, type: !489)
!7533 = !DILocation(line: 633, column: 6, scope: !7519)
!7534 = !DILocation(line: 636, column: 20, scope: !7519)
!7535 = !DILocation(line: 636, column: 44, scope: !7519)
!7536 = !DILocation(line: 636, column: 2, scope: !7519)
!7537 = !DILocation(line: 639, column: 34, scope: !7519)
!7538 = !DILocation(line: 639, column: 17, scope: !7519)
!7539 = !DILocation(line: 639, column: 15, scope: !7519)
!7540 = !DILocation(line: 640, column: 2, scope: !7519)
!7541 = !DILocation(line: 640, column: 12, scope: !7519)
!7542 = !DILocation(line: 640, column: 20, scope: !7519)
!7543 = !DILocation(line: 641, column: 2, scope: !7519)
!7544 = !DILocation(line: 641, column: 12, scope: !7519)
!7545 = !DILocation(line: 641, column: 20, scope: !7519)
!7546 = !DILocation(line: 642, column: 26, scope: !7519)
!7547 = !DILocation(line: 642, column: 2, scope: !7519)
!7548 = !DILocation(line: 642, column: 12, scope: !7519)
!7549 = !DILocation(line: 642, column: 24, scope: !7519)
!7550 = !DILocation(line: 643, column: 21, scope: !7519)
!7551 = !DILocation(line: 643, column: 32, scope: !7519)
!7552 = !DILocation(line: 643, column: 2, scope: !7519)
!7553 = !DILocation(line: 643, column: 12, scope: !7519)
!7554 = !DILocation(line: 643, column: 19, scope: !7519)
!7555 = !DILocation(line: 644, column: 41, scope: !7519)
!7556 = !DILocation(line: 644, column: 23, scope: !7519)
!7557 = !DILocation(line: 644, column: 2, scope: !7519)
!7558 = !DILocation(line: 644, column: 12, scope: !7519)
!7559 = !DILocation(line: 644, column: 21, scope: !7519)
!7560 = !DILocation(line: 648, column: 2, scope: !7519)
!7561 = !DILocation(line: 648, column: 12, scope: !7519)
!7562 = !DILocation(line: 648, column: 22, scope: !7519)
!7563 = !DILocation(line: 649, column: 8, scope: !7519)
!7564 = !DILocation(line: 649, column: 6, scope: !7519)
!7565 = !DILocation(line: 650, column: 2, scope: !7519)
!7566 = !DILocation(line: 651, column: 22, scope: !7519)
!7567 = !DILocation(line: 651, column: 100, scope: !7519)
!7568 = !DILocation(line: 651, column: 2, scope: !7519)
!7569 = !DILocation(line: 653, column: 8, scope: !7519)
!7570 = !DILocation(line: 653, column: 6, scope: !7519)
!7571 = !DILocation(line: 654, column: 25, scope: !7519)
!7572 = !DILocation(line: 654, column: 2, scope: !7519)
!7573 = !DILocation(line: 654, column: 12, scope: !7519)
!7574 = !DILocation(line: 654, column: 23, scope: !7519)
!7575 = !DILocation(line: 656, column: 2, scope: !7519)
!7576 = !DILocation(line: 656, column: 12, scope: !7519)
!7577 = !DILocation(line: 656, column: 25, scope: !7519)
!7578 = !DILocation(line: 657, column: 2, scope: !7519)
!7579 = !DILocation(line: 657, column: 12, scope: !7519)
!7580 = !DILocation(line: 657, column: 28, scope: !7519)
!7581 = !DILocation(line: 658, column: 2, scope: !7519)
!7582 = !DILocation(line: 658, column: 12, scope: !7519)
!7583 = !DILocation(line: 658, column: 27, scope: !7519)
!7584 = !DILocation(line: 659, column: 2, scope: !7519)
!7585 = !DILocation(line: 659, column: 12, scope: !7519)
!7586 = !DILocation(line: 659, column: 23, scope: !7519)
!7587 = !DILocation(line: 666, column: 1, scope: !7519)
!7588 = distinct !DISubprogram(name: "stb0899_diseqc_init", scope: !3, file: !3, line: 816, type: !5721, scopeLine: 817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7589 = !DILocalVariable(name: "state", arg: 1, scope: !7588, file: !3, line: 816, type: !4407)
!7590 = !DILocation(line: 816, column: 54, scope: !7588)
!7591 = !DILocalVariable(name: "f22_tx", scope: !7588, file: !3, line: 821, type: !419)
!7592 = !DILocation(line: 821, column: 5, scope: !7588)
!7593 = !DILocalVariable(name: "reg", scope: !7588, file: !3, line: 821, type: !419)
!7594 = !DILocation(line: 821, column: 13, scope: !7588)
!7595 = !DILocalVariable(name: "mclk", scope: !7588, file: !3, line: 823, type: !489)
!7596 = !DILocation(line: 823, column: 6, scope: !7588)
!7597 = !DILocalVariable(name: "tx_freq", scope: !7588, file: !3, line: 823, type: !489)
!7598 = !DILocation(line: 823, column: 12, scope: !7588)
!7599 = !DILocation(line: 824, column: 25, scope: !7588)
!7600 = !DILocation(line: 824, column: 8, scope: !7588)
!7601 = !DILocation(line: 824, column: 6, scope: !7588)
!7602 = !DILocation(line: 825, column: 2, scope: !7588)
!7603 = !DILocation(line: 826, column: 20, scope: !7588)
!7604 = !DILocation(line: 826, column: 46, scope: !7588)
!7605 = !DILocation(line: 826, column: 2, scope: !7588)
!7606 = !DILocation(line: 829, column: 25, scope: !7588)
!7607 = !DILocation(line: 829, column: 8, scope: !7588)
!7608 = !DILocation(line: 829, column: 6, scope: !7588)
!7609 = !DILocation(line: 830, column: 2, scope: !7588)
!7610 = !DILocation(line: 831, column: 20, scope: !7588)
!7611 = !DILocation(line: 831, column: 46, scope: !7588)
!7612 = !DILocation(line: 831, column: 2, scope: !7588)
!7613 = !DILocation(line: 833, column: 25, scope: !7588)
!7614 = !DILocation(line: 833, column: 8, scope: !7588)
!7615 = !DILocation(line: 833, column: 6, scope: !7588)
!7616 = !DILocation(line: 834, column: 2, scope: !7588)
!7617 = !DILocation(line: 835, column: 20, scope: !7588)
!7618 = !DILocation(line: 835, column: 46, scope: !7588)
!7619 = !DILocation(line: 835, column: 2, scope: !7588)
!7620 = !DILocation(line: 837, column: 26, scope: !7588)
!7621 = !DILocation(line: 837, column: 9, scope: !7588)
!7622 = !DILocation(line: 837, column: 7, scope: !7588)
!7623 = !DILocation(line: 838, column: 11, scope: !7588)
!7624 = !DILocation(line: 838, column: 19, scope: !7588)
!7625 = !DILocation(line: 838, column: 27, scope: !7588)
!7626 = !DILocation(line: 838, column: 16, scope: !7588)
!7627 = !DILocation(line: 838, column: 9, scope: !7588)
!7628 = !DILocation(line: 839, column: 20, scope: !7588)
!7629 = !DILocation(line: 839, column: 43, scope: !7588)
!7630 = !DILocation(line: 839, column: 2, scope: !7588)
!7631 = !DILocation(line: 840, column: 2, scope: !7588)
!7632 = !DILocation(line: 840, column: 9, scope: !7588)
!7633 = !DILocation(line: 840, column: 17, scope: !7588)
!7634 = !DILocation(line: 842, column: 2, scope: !7588)
!7635 = distinct !DISubprogram(name: "stb0899_get_mclk", scope: !3, file: !3, line: 539, type: !7636, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7636 = !DISubroutineType(types: !7637)
!7637 = !{!489, !4407}
!7638 = !DILocalVariable(name: "state", arg: 1, scope: !7635, file: !3, line: 539, type: !4407)
!7639 = !DILocation(line: 539, column: 51, scope: !7635)
!7640 = !DILocalVariable(name: "mclk", scope: !7635, file: !3, line: 541, type: !489)
!7641 = !DILocation(line: 541, column: 6, scope: !7635)
!7642 = !DILocalVariable(name: "div", scope: !7635, file: !3, line: 541, type: !489)
!7643 = !DILocation(line: 541, column: 16, scope: !7635)
!7644 = !DILocation(line: 543, column: 25, scope: !7635)
!7645 = !DILocation(line: 543, column: 8, scope: !7635)
!7646 = !DILocation(line: 543, column: 6, scope: !7635)
!7647 = !DILocation(line: 544, column: 10, scope: !7635)
!7648 = !DILocation(line: 544, column: 14, scope: !7635)
!7649 = !DILocation(line: 544, column: 21, scope: !7635)
!7650 = !DILocation(line: 544, column: 28, scope: !7635)
!7651 = !DILocation(line: 544, column: 36, scope: !7635)
!7652 = !DILocation(line: 544, column: 19, scope: !7635)
!7653 = !DILocation(line: 544, column: 46, scope: !7635)
!7654 = !DILocation(line: 544, column: 7, scope: !7635)
!7655 = !DILocation(line: 545, column: 2, scope: !7635)
!7656 = !DILocation(line: 545, column: 2, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 545, column: 2)
!7658 = distinct !DILexicalBlock(scope: !7659, file: !3, line: 545, column: 2)
!7659 = distinct !DILexicalBlock(scope: !7660, file: !3, line: 545, column: 2)
!7660 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 545, column: 2)
!7661 = !DILocation(line: 545, column: 2, scope: !7658)
!7662 = !DILocation(line: 545, column: 2, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 545, column: 2)
!7664 = !DILocation(line: 545, column: 2, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7663, file: !3, line: 545, column: 2)
!7666 = !DILocation(line: 545, column: 2, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7665, file: !3, line: 545, column: 2)
!7668 = !DILocation(line: 545, column: 2, scope: !7660)
!7669 = !DILocation(line: 547, column: 9, scope: !7635)
!7670 = !DILocation(line: 547, column: 2, scope: !7635)
!7671 = distinct !DISubprogram(name: "stb0899_get_alpha", scope: !3, file: !3, line: 613, type: !5721, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7672 = !DILocalVariable(name: "state", arg: 1, scope: !7671, file: !3, line: 613, type: !4407)
!7673 = !DILocation(line: 613, column: 52, scope: !7671)
!7674 = !DILocalVariable(name: "mode_coeff", scope: !7671, file: !3, line: 615, type: !419)
!7675 = !DILocation(line: 615, column: 5, scope: !7671)
!7676 = !DILocation(line: 617, column: 32, scope: !7671)
!7677 = !DILocation(line: 617, column: 15, scope: !7671)
!7678 = !DILocation(line: 617, column: 13, scope: !7671)
!7679 = !DILocation(line: 619, column: 6, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7671, file: !3, line: 619, column: 6)
!7681 = !DILocation(line: 619, column: 46, scope: !7680)
!7682 = !DILocation(line: 619, column: 6, scope: !7671)
!7683 = !DILocation(line: 620, column: 3, scope: !7680)
!7684 = !DILocation(line: 622, column: 3, scope: !7680)
!7685 = !DILocation(line: 623, column: 1, scope: !7671)
!7686 = distinct !DISubprogram(name: "stb0899_table_lookup", scope: !3, file: !3, line: 922, type: !7687, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7687 = !DISubroutineType(types: !7688)
!7688 = !{!96, !7689, !96, !96}
!7689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4373, size: 64)
!7690 = !DILocalVariable(name: "tab", arg: 1, scope: !7686, file: !3, line: 922, type: !7689)
!7691 = !DILocation(line: 922, column: 59, scope: !7686)
!7692 = !DILocalVariable(name: "max", arg: 2, scope: !7686, file: !3, line: 922, type: !96)
!7693 = !DILocation(line: 922, column: 68, scope: !7686)
!7694 = !DILocalVariable(name: "val", arg: 3, scope: !7686, file: !3, line: 922, type: !96)
!7695 = !DILocation(line: 922, column: 77, scope: !7686)
!7696 = !DILocalVariable(name: "res", scope: !7686, file: !3, line: 924, type: !96)
!7697 = !DILocation(line: 924, column: 6, scope: !7686)
!7698 = !DILocalVariable(name: "min", scope: !7686, file: !3, line: 925, type: !96)
!7699 = !DILocation(line: 925, column: 6, scope: !7686)
!7700 = !DILocalVariable(name: "med", scope: !7686, file: !3, line: 925, type: !96)
!7701 = !DILocation(line: 925, column: 15, scope: !7686)
!7702 = !DILocation(line: 927, column: 6, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7686, file: !3, line: 927, column: 6)
!7704 = !DILocation(line: 927, column: 12, scope: !7703)
!7705 = !DILocation(line: 927, column: 16, scope: !7703)
!7706 = !DILocation(line: 927, column: 21, scope: !7703)
!7707 = !DILocation(line: 927, column: 10, scope: !7703)
!7708 = !DILocation(line: 927, column: 6, scope: !7686)
!7709 = !DILocation(line: 928, column: 9, scope: !7703)
!7710 = !DILocation(line: 928, column: 13, scope: !7703)
!7711 = !DILocation(line: 928, column: 18, scope: !7703)
!7712 = !DILocation(line: 928, column: 7, scope: !7703)
!7713 = !DILocation(line: 928, column: 3, scope: !7703)
!7714 = !DILocation(line: 929, column: 11, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 929, column: 11)
!7716 = !DILocation(line: 929, column: 18, scope: !7715)
!7717 = !DILocation(line: 929, column: 22, scope: !7715)
!7718 = !DILocation(line: 929, column: 27, scope: !7715)
!7719 = !DILocation(line: 929, column: 15, scope: !7715)
!7720 = !DILocation(line: 929, column: 11, scope: !7703)
!7721 = !DILocation(line: 930, column: 9, scope: !7715)
!7722 = !DILocation(line: 930, column: 13, scope: !7715)
!7723 = !DILocation(line: 930, column: 18, scope: !7715)
!7724 = !DILocation(line: 930, column: 7, scope: !7715)
!7725 = !DILocation(line: 930, column: 3, scope: !7715)
!7726 = !DILocation(line: 932, column: 3, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 931, column: 7)
!7728 = !DILocation(line: 932, column: 11, scope: !7727)
!7729 = !DILocation(line: 932, column: 17, scope: !7727)
!7730 = !DILocation(line: 932, column: 15, scope: !7727)
!7731 = !DILocation(line: 932, column: 22, scope: !7727)
!7732 = !DILocation(line: 933, column: 11, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 932, column: 27)
!7734 = !DILocation(line: 933, column: 17, scope: !7733)
!7735 = !DILocation(line: 933, column: 15, scope: !7733)
!7736 = !DILocation(line: 933, column: 22, scope: !7733)
!7737 = !DILocation(line: 933, column: 8, scope: !7733)
!7738 = !DILocation(line: 934, column: 8, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7733, file: !3, line: 934, column: 8)
!7740 = !DILocation(line: 934, column: 15, scope: !7739)
!7741 = !DILocation(line: 934, column: 19, scope: !7739)
!7742 = !DILocation(line: 934, column: 24, scope: !7739)
!7743 = !DILocation(line: 934, column: 12, scope: !7739)
!7744 = !DILocation(line: 934, column: 29, scope: !7739)
!7745 = !DILocation(line: 934, column: 32, scope: !7739)
!7746 = !DILocation(line: 934, column: 38, scope: !7739)
!7747 = !DILocation(line: 934, column: 42, scope: !7739)
!7748 = !DILocation(line: 934, column: 47, scope: !7739)
!7749 = !DILocation(line: 934, column: 36, scope: !7739)
!7750 = !DILocation(line: 934, column: 8, scope: !7733)
!7751 = !DILocation(line: 935, column: 11, scope: !7739)
!7752 = !DILocation(line: 935, column: 9, scope: !7739)
!7753 = !DILocation(line: 935, column: 5, scope: !7739)
!7754 = !DILocation(line: 937, column: 11, scope: !7739)
!7755 = !DILocation(line: 937, column: 9, scope: !7739)
!7756 = distinct !{!7756, !7726, !7757}
!7757 = !DILocation(line: 938, column: 3, scope: !7727)
!7758 = !DILocation(line: 939, column: 11, scope: !7727)
!7759 = !DILocation(line: 939, column: 17, scope: !7727)
!7760 = !DILocation(line: 939, column: 21, scope: !7727)
!7761 = !DILocation(line: 939, column: 26, scope: !7727)
!7762 = !DILocation(line: 939, column: 15, scope: !7727)
!7763 = !DILocation(line: 940, column: 11, scope: !7727)
!7764 = !DILocation(line: 940, column: 15, scope: !7727)
!7765 = !DILocation(line: 940, column: 20, scope: !7727)
!7766 = !DILocation(line: 940, column: 27, scope: !7727)
!7767 = !DILocation(line: 940, column: 31, scope: !7727)
!7768 = !DILocation(line: 940, column: 36, scope: !7727)
!7769 = !DILocation(line: 940, column: 25, scope: !7727)
!7770 = !DILocation(line: 939, column: 32, scope: !7727)
!7771 = !DILocation(line: 941, column: 11, scope: !7727)
!7772 = !DILocation(line: 941, column: 15, scope: !7727)
!7773 = !DILocation(line: 941, column: 20, scope: !7727)
!7774 = !DILocation(line: 941, column: 27, scope: !7727)
!7775 = !DILocation(line: 941, column: 31, scope: !7727)
!7776 = !DILocation(line: 941, column: 36, scope: !7727)
!7777 = !DILocation(line: 941, column: 25, scope: !7727)
!7778 = !DILocation(line: 940, column: 42, scope: !7727)
!7779 = !DILocation(line: 942, column: 4, scope: !7727)
!7780 = !DILocation(line: 942, column: 8, scope: !7727)
!7781 = !DILocation(line: 942, column: 13, scope: !7727)
!7782 = !DILocation(line: 941, column: 43, scope: !7727)
!7783 = !DILocation(line: 939, column: 7, scope: !7727)
!7784 = !DILocation(line: 945, column: 9, scope: !7686)
!7785 = !DILocation(line: 945, column: 2, scope: !7686)
!7786 = distinct !DISubprogram(name: "stb0899_wait_diseqc_fifo_empty", scope: !3, file: !3, line: 668, type: !7787, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7787 = !DISubroutineType(types: !7788)
!7788 = !{!96, !4407, !96}
!7789 = !DILocalVariable(name: "state", arg: 1, scope: !7786, file: !3, line: 668, type: !4407)
!7790 = !DILocation(line: 668, column: 65, scope: !7786)
!7791 = !DILocalVariable(name: "timeout", arg: 2, scope: !7786, file: !3, line: 668, type: !96)
!7792 = !DILocation(line: 668, column: 76, scope: !7786)
!7793 = !DILocalVariable(name: "reg", scope: !7786, file: !3, line: 670, type: !419)
!7794 = !DILocation(line: 670, column: 5, scope: !7786)
!7795 = !DILocalVariable(name: "start", scope: !7786, file: !3, line: 671, type: !648)
!7796 = !DILocation(line: 671, column: 16, scope: !7786)
!7797 = !DILocation(line: 671, column: 24, scope: !7786)
!7798 = !DILocation(line: 673, column: 2, scope: !7786)
!7799 = !DILocation(line: 674, column: 26, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7786, file: !3, line: 673, column: 12)
!7801 = !DILocation(line: 674, column: 9, scope: !7800)
!7802 = !DILocation(line: 674, column: 7, scope: !7800)
!7803 = !DILocation(line: 675, column: 8, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 675, column: 7)
!7805 = !DILocation(line: 675, column: 7, scope: !7800)
!7806 = !DILocation(line: 676, column: 4, scope: !7804)
!7807 = !DILocation(line: 677, column: 7, scope: !7808)
!7808 = distinct !DILexicalBlock(scope: !7800, file: !3, line: 677, column: 7)
!7809 = !DILocation(line: 677, column: 7, scope: !7800)
!7810 = !DILocation(line: 678, column: 4, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 677, column: 45)
!7812 = !DILocation(line: 678, column: 4, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7814, file: !3, line: 678, column: 4)
!7814 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 678, column: 4)
!7815 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 678, column: 4)
!7816 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 678, column: 4)
!7817 = !DILocation(line: 678, column: 4, scope: !7814)
!7818 = !DILocation(line: 678, column: 4, scope: !7819)
!7819 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 678, column: 4)
!7820 = !DILocation(line: 678, column: 4, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7819, file: !3, line: 678, column: 4)
!7822 = !DILocation(line: 678, column: 4, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7821, file: !3, line: 678, column: 4)
!7824 = !DILocation(line: 678, column: 4, scope: !7816)
!7825 = !DILocation(line: 679, column: 4, scope: !7811)
!7826 = distinct !{!7826, !7798, !7827}
!7827 = !DILocation(line: 681, column: 2, scope: !7786)
!7828 = !DILocation(line: 683, column: 2, scope: !7786)
!7829 = !DILocation(line: 684, column: 1, scope: !7786)
!7830 = distinct !DISubprogram(name: "stb0899_wait_diseqc_rxidle", scope: !3, file: !3, line: 712, type: !7787, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7831 = !DILocalVariable(name: "state", arg: 1, scope: !7830, file: !3, line: 712, type: !4407)
!7832 = !DILocation(line: 712, column: 61, scope: !7830)
!7833 = !DILocalVariable(name: "timeout", arg: 2, scope: !7830, file: !3, line: 712, type: !96)
!7834 = !DILocation(line: 712, column: 72, scope: !7830)
!7835 = !DILocalVariable(name: "reg", scope: !7830, file: !3, line: 714, type: !419)
!7836 = !DILocation(line: 714, column: 5, scope: !7830)
!7837 = !DILocalVariable(name: "start", scope: !7830, file: !3, line: 715, type: !648)
!7838 = !DILocation(line: 715, column: 16, scope: !7830)
!7839 = !DILocation(line: 715, column: 24, scope: !7830)
!7840 = !DILocation(line: 717, column: 2, scope: !7830)
!7841 = !DILocation(line: 717, column: 10, scope: !7830)
!7842 = !DILocation(line: 717, column: 9, scope: !7830)
!7843 = !DILocation(line: 718, column: 26, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7830, file: !3, line: 717, column: 40)
!7845 = !DILocation(line: 718, column: 9, scope: !7844)
!7846 = !DILocation(line: 718, column: 7, scope: !7844)
!7847 = !DILocation(line: 719, column: 7, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7844, file: !3, line: 719, column: 7)
!7849 = !DILocation(line: 719, column: 7, scope: !7844)
!7850 = !DILocation(line: 720, column: 4, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 719, column: 45)
!7852 = !DILocation(line: 720, column: 4, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 720, column: 4)
!7854 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 720, column: 4)
!7855 = distinct !DILexicalBlock(scope: !7856, file: !3, line: 720, column: 4)
!7856 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 720, column: 4)
!7857 = !DILocation(line: 720, column: 4, scope: !7854)
!7858 = !DILocation(line: 720, column: 4, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 720, column: 4)
!7860 = !DILocation(line: 720, column: 4, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7859, file: !3, line: 720, column: 4)
!7862 = !DILocation(line: 720, column: 4, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7861, file: !3, line: 720, column: 4)
!7864 = !DILocation(line: 720, column: 4, scope: !7856)
!7865 = !DILocation(line: 721, column: 4, scope: !7851)
!7866 = !DILocation(line: 723, column: 3, scope: !7844)
!7867 = distinct !{!7867, !7840, !7868}
!7868 = !DILocation(line: 724, column: 2, scope: !7830)
!7869 = !DILocation(line: 726, column: 2, scope: !7830)
!7870 = !DILocation(line: 727, column: 1, scope: !7830)
!7871 = distinct !DISubprogram(name: "stb0899_wait_diseqc_txidle", scope: !3, file: !3, line: 761, type: !7787, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7872 = !DILocalVariable(name: "state", arg: 1, scope: !7871, file: !3, line: 761, type: !4407)
!7873 = !DILocation(line: 761, column: 61, scope: !7871)
!7874 = !DILocalVariable(name: "timeout", arg: 2, scope: !7871, file: !3, line: 761, type: !96)
!7875 = !DILocation(line: 761, column: 72, scope: !7871)
!7876 = !DILocalVariable(name: "reg", scope: !7871, file: !3, line: 763, type: !419)
!7877 = !DILocation(line: 763, column: 5, scope: !7871)
!7878 = !DILocalVariable(name: "start", scope: !7871, file: !3, line: 764, type: !648)
!7879 = !DILocation(line: 764, column: 16, scope: !7871)
!7880 = !DILocation(line: 764, column: 24, scope: !7871)
!7881 = !DILocation(line: 766, column: 2, scope: !7871)
!7882 = !DILocation(line: 766, column: 10, scope: !7871)
!7883 = !DILocation(line: 766, column: 9, scope: !7871)
!7884 = !DILocation(line: 767, column: 26, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 766, column: 41)
!7886 = !DILocation(line: 767, column: 9, scope: !7885)
!7887 = !DILocation(line: 767, column: 7, scope: !7885)
!7888 = !DILocation(line: 768, column: 7, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 768, column: 7)
!7890 = !DILocation(line: 768, column: 7, scope: !7885)
!7891 = !DILocation(line: 769, column: 4, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7889, file: !3, line: 768, column: 45)
!7893 = !DILocation(line: 769, column: 4, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 769, column: 4)
!7895 = distinct !DILexicalBlock(scope: !7896, file: !3, line: 769, column: 4)
!7896 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 769, column: 4)
!7897 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 769, column: 4)
!7898 = !DILocation(line: 769, column: 4, scope: !7895)
!7899 = !DILocation(line: 769, column: 4, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 769, column: 4)
!7901 = !DILocation(line: 769, column: 4, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 769, column: 4)
!7903 = !DILocation(line: 769, column: 4, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 769, column: 4)
!7905 = !DILocation(line: 769, column: 4, scope: !7897)
!7906 = !DILocation(line: 770, column: 4, scope: !7892)
!7907 = !DILocation(line: 772, column: 3, scope: !7885)
!7908 = distinct !{!7908, !7881, !7909}
!7909 = !DILocation(line: 773, column: 2, scope: !7871)
!7910 = !DILocation(line: 774, column: 2, scope: !7871)
!7911 = !DILocation(line: 775, column: 1, scope: !7871)
!7912 = distinct !DISubprogram(name: "stb0899_set_delivery", scope: !3, file: !3, line: 1290, type: !7520, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!7913 = !DILocalVariable(name: "state", arg: 1, scope: !7912, file: !3, line: 1290, type: !4407)
!7914 = !DILocation(line: 1290, column: 56, scope: !7912)
!7915 = !DILocalVariable(name: "reg", scope: !7912, file: !3, line: 1292, type: !419)
!7916 = !DILocation(line: 1292, column: 5, scope: !7912)
!7917 = !DILocalVariable(name: "stop_clk", scope: !7912, file: !3, line: 1293, type: !4682)
!7918 = !DILocation(line: 1293, column: 5, scope: !7912)
!7919 = !DILocation(line: 1295, column: 33, scope: !7912)
!7920 = !DILocation(line: 1295, column: 16, scope: !7912)
!7921 = !DILocation(line: 1295, column: 2, scope: !7912)
!7922 = !DILocation(line: 1295, column: 14, scope: !7912)
!7923 = !DILocation(line: 1296, column: 33, scope: !7912)
!7924 = !DILocation(line: 1296, column: 16, scope: !7912)
!7925 = !DILocation(line: 1296, column: 2, scope: !7912)
!7926 = !DILocation(line: 1296, column: 14, scope: !7912)
!7927 = !DILocation(line: 1298, column: 10, scope: !7912)
!7928 = !DILocation(line: 1298, column: 17, scope: !7912)
!7929 = !DILocation(line: 1298, column: 2, scope: !7912)
!7930 = !DILocation(line: 1300, column: 3, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 1298, column: 25)
!7932 = !DILocation(line: 1300, column: 3, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 1300, column: 3)
!7934 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 1300, column: 3)
!7935 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 1300, column: 3)
!7936 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1300, column: 3)
!7937 = !DILocation(line: 1300, column: 3, scope: !7934)
!7938 = !DILocation(line: 1300, column: 3, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7933, file: !3, line: 1300, column: 3)
!7940 = !DILocation(line: 1300, column: 3, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1300, column: 3)
!7942 = !DILocation(line: 1300, column: 3, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7941, file: !3, line: 1300, column: 3)
!7944 = !DILocation(line: 1300, column: 3, scope: !7936)
!7945 = !DILocation(line: 1302, column: 26, scope: !7931)
!7946 = !DILocation(line: 1302, column: 9, scope: !7931)
!7947 = !DILocation(line: 1302, column: 7, scope: !7931)
!7948 = !DILocation(line: 1303, column: 3, scope: !7931)
!7949 = !DILocation(line: 1304, column: 3, scope: !7931)
!7950 = !DILocation(line: 1305, column: 21, scope: !7931)
!7951 = !DILocation(line: 1305, column: 42, scope: !7931)
!7952 = !DILocation(line: 1305, column: 3, scope: !7931)
!7953 = !DILocation(line: 1307, column: 21, scope: !7931)
!7954 = !DILocation(line: 1307, column: 3, scope: !7931)
!7955 = !DILocation(line: 1308, column: 21, scope: !7931)
!7956 = !DILocation(line: 1308, column: 3, scope: !7931)
!7957 = !DILocation(line: 1309, column: 21, scope: !7931)
!7958 = !DILocation(line: 1309, column: 3, scope: !7931)
!7959 = !DILocation(line: 1310, column: 21, scope: !7931)
!7960 = !DILocation(line: 1310, column: 3, scope: !7931)
!7961 = !DILocation(line: 1312, column: 26, scope: !7931)
!7962 = !DILocation(line: 1312, column: 9, scope: !7931)
!7963 = !DILocation(line: 1312, column: 7, scope: !7931)
!7964 = !DILocation(line: 1313, column: 3, scope: !7931)
!7965 = !DILocation(line: 1314, column: 21, scope: !7931)
!7966 = !DILocation(line: 1314, column: 44, scope: !7931)
!7967 = !DILocation(line: 1314, column: 3, scope: !7931)
!7968 = !DILocation(line: 1316, column: 3, scope: !7931)
!7969 = !DILocation(line: 1317, column: 3, scope: !7931)
!7970 = !DILocation(line: 1318, column: 3, scope: !7931)
!7971 = !DILocation(line: 1320, column: 3, scope: !7931)
!7972 = !DILocation(line: 1321, column: 3, scope: !7931)
!7973 = !DILocation(line: 1323, column: 3, scope: !7931)
!7974 = !DILocation(line: 1324, column: 3, scope: !7931)
!7975 = !DILocation(line: 1326, column: 3, scope: !7931)
!7976 = !DILocation(line: 1327, column: 3, scope: !7931)
!7977 = !DILocation(line: 1330, column: 26, scope: !7931)
!7978 = !DILocation(line: 1330, column: 9, scope: !7931)
!7979 = !DILocation(line: 1330, column: 7, scope: !7931)
!7980 = !DILocation(line: 1331, column: 3, scope: !7931)
!7981 = !DILocation(line: 1332, column: 3, scope: !7931)
!7982 = !DILocation(line: 1333, column: 21, scope: !7931)
!7983 = !DILocation(line: 1333, column: 42, scope: !7931)
!7984 = !DILocation(line: 1333, column: 3, scope: !7931)
!7985 = !DILocation(line: 1335, column: 21, scope: !7931)
!7986 = !DILocation(line: 1335, column: 3, scope: !7931)
!7987 = !DILocation(line: 1336, column: 21, scope: !7931)
!7988 = !DILocation(line: 1336, column: 3, scope: !7931)
!7989 = !DILocation(line: 1337, column: 21, scope: !7931)
!7990 = !DILocation(line: 1337, column: 3, scope: !7931)
!7991 = !DILocation(line: 1338, column: 21, scope: !7931)
!7992 = !DILocation(line: 1338, column: 3, scope: !7931)
!7993 = !DILocation(line: 1340, column: 26, scope: !7931)
!7994 = !DILocation(line: 1340, column: 9, scope: !7931)
!7995 = !DILocation(line: 1340, column: 7, scope: !7931)
!7996 = !DILocation(line: 1341, column: 3, scope: !7931)
!7997 = !DILocation(line: 1342, column: 21, scope: !7931)
!7998 = !DILocation(line: 1342, column: 44, scope: !7931)
!7999 = !DILocation(line: 1342, column: 3, scope: !7931)
!8000 = !DILocation(line: 1344, column: 3, scope: !7931)
!8001 = !DILocation(line: 1345, column: 3, scope: !7931)
!8002 = !DILocation(line: 1346, column: 3, scope: !7931)
!8003 = !DILocation(line: 1348, column: 3, scope: !7931)
!8004 = !DILocation(line: 1349, column: 3, scope: !7931)
!8005 = !DILocation(line: 1351, column: 3, scope: !7931)
!8006 = !DILocation(line: 1352, column: 3, scope: !7931)
!8007 = !DILocation(line: 1354, column: 3, scope: !7931)
!8008 = !DILocation(line: 1355, column: 3, scope: !7931)
!8009 = !DILocation(line: 1358, column: 26, scope: !7931)
!8010 = !DILocation(line: 1358, column: 9, scope: !7931)
!8011 = !DILocation(line: 1358, column: 7, scope: !7931)
!8012 = !DILocation(line: 1359, column: 3, scope: !7931)
!8013 = !DILocation(line: 1360, column: 3, scope: !7931)
!8014 = !DILocation(line: 1361, column: 21, scope: !7931)
!8015 = !DILocation(line: 1361, column: 42, scope: !7931)
!8016 = !DILocation(line: 1361, column: 3, scope: !7931)
!8017 = !DILocation(line: 1363, column: 21, scope: !7931)
!8018 = !DILocation(line: 1363, column: 3, scope: !7931)
!8019 = !DILocation(line: 1364, column: 21, scope: !7931)
!8020 = !DILocation(line: 1364, column: 3, scope: !7931)
!8021 = !DILocation(line: 1365, column: 21, scope: !7931)
!8022 = !DILocation(line: 1365, column: 3, scope: !7931)
!8023 = !DILocation(line: 1367, column: 26, scope: !7931)
!8024 = !DILocation(line: 1367, column: 9, scope: !7931)
!8025 = !DILocation(line: 1367, column: 7, scope: !7931)
!8026 = !DILocation(line: 1368, column: 3, scope: !7931)
!8027 = !DILocation(line: 1369, column: 21, scope: !7931)
!8028 = !DILocation(line: 1369, column: 44, scope: !7931)
!8029 = !DILocation(line: 1369, column: 3, scope: !7931)
!8030 = !DILocation(line: 1371, column: 3, scope: !7931)
!8031 = !DILocation(line: 1372, column: 3, scope: !7931)
!8032 = !DILocation(line: 1373, column: 3, scope: !7931)
!8033 = !DILocation(line: 1375, column: 3, scope: !7931)
!8034 = !DILocation(line: 1376, column: 3, scope: !7931)
!8035 = !DILocation(line: 1378, column: 3, scope: !7931)
!8036 = !DILocation(line: 1380, column: 3, scope: !7931)
!8037 = !DILocation(line: 1381, column: 3, scope: !7931)
!8038 = !DILocation(line: 1383, column: 3, scope: !7931)
!8039 = !DILocation(line: 1383, column: 3, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 1383, column: 3)
!8041 = distinct !DILexicalBlock(scope: !8042, file: !3, line: 1383, column: 3)
!8042 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 1383, column: 3)
!8043 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1383, column: 3)
!8044 = !DILocation(line: 1383, column: 3, scope: !8041)
!8045 = !DILocation(line: 1383, column: 3, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8040, file: !3, line: 1383, column: 3)
!8047 = !DILocation(line: 1383, column: 3, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 1383, column: 3)
!8049 = !DILocation(line: 1383, column: 3, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 1383, column: 3)
!8051 = !DILocation(line: 1383, column: 3, scope: !8043)
!8052 = !DILocation(line: 1384, column: 3, scope: !7931)
!8053 = !DILocation(line: 1386, column: 2, scope: !7912)
!8054 = !DILocation(line: 1387, column: 21, scope: !7912)
!8055 = !DILocation(line: 1387, column: 46, scope: !7912)
!8056 = !DILocation(line: 1387, column: 2, scope: !7912)
!8057 = !DILocation(line: 1388, column: 1, scope: !7912)
!8058 = distinct !DISubprogram(name: "stb0899_set_mclk", scope: !3, file: !3, line: 556, type: !8059, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!8059 = !DISubroutineType(types: !8060)
!8060 = !{null, !4407, !489}
!8061 = !DILocalVariable(name: "state", arg: 1, scope: !8058, file: !3, line: 556, type: !4407)
!8062 = !DILocation(line: 556, column: 52, scope: !8058)
!8063 = !DILocalVariable(name: "Mclk", arg: 2, scope: !8058, file: !3, line: 556, type: !489)
!8064 = !DILocation(line: 556, column: 63, scope: !8058)
!8065 = !DILocalVariable(name: "internal", scope: !8058, file: !3, line: 558, type: !6212)
!8066 = !DILocation(line: 558, column: 27, scope: !8058)
!8067 = !DILocation(line: 558, column: 39, scope: !8058)
!8068 = !DILocation(line: 558, column: 46, scope: !8058)
!8069 = !DILocalVariable(name: "mdiv", scope: !8058, file: !3, line: 559, type: !419)
!8070 = !DILocation(line: 559, column: 5, scope: !8058)
!8071 = !DILocation(line: 561, column: 2, scope: !8058)
!8072 = !DILocation(line: 561, column: 2, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 561, column: 2)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !3, line: 561, column: 2)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 561, column: 2)
!8076 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 561, column: 2)
!8077 = !DILocation(line: 561, column: 2, scope: !8074)
!8078 = !DILocation(line: 561, column: 2, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8073, file: !3, line: 561, column: 2)
!8080 = !DILocation(line: 561, column: 2, scope: !8081)
!8081 = distinct !DILexicalBlock(scope: !8079, file: !3, line: 561, column: 2)
!8082 = !DILocation(line: 561, column: 2, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8081, file: !3, line: 561, column: 2)
!8084 = !DILocation(line: 561, column: 2, scope: !8076)
!8085 = !DILocation(line: 562, column: 15, scope: !8058)
!8086 = !DILocation(line: 562, column: 13, scope: !8058)
!8087 = !DILocation(line: 562, column: 23, scope: !8058)
!8088 = !DILocation(line: 562, column: 30, scope: !8058)
!8089 = !DILocation(line: 562, column: 38, scope: !8058)
!8090 = !DILocation(line: 562, column: 21, scope: !8058)
!8091 = !DILocation(line: 562, column: 49, scope: !8058)
!8092 = !DILocation(line: 562, column: 9, scope: !8058)
!8093 = !DILocation(line: 562, column: 7, scope: !8058)
!8094 = !DILocation(line: 563, column: 2, scope: !8058)
!8095 = !DILocation(line: 563, column: 2, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 563, column: 2)
!8097 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 563, column: 2)
!8098 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 563, column: 2)
!8099 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 563, column: 2)
!8100 = !DILocation(line: 563, column: 2, scope: !8097)
!8101 = !DILocation(line: 563, column: 2, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 563, column: 2)
!8103 = !DILocation(line: 563, column: 2, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 563, column: 2)
!8105 = !DILocation(line: 563, column: 2, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8104, file: !3, line: 563, column: 2)
!8107 = !DILocation(line: 563, column: 2, scope: !8099)
!8108 = !DILocation(line: 565, column: 20, scope: !8058)
!8109 = !DILocation(line: 565, column: 44, scope: !8058)
!8110 = !DILocation(line: 565, column: 2, scope: !8058)
!8111 = !DILocation(line: 566, column: 42, scope: !8058)
!8112 = !DILocation(line: 566, column: 25, scope: !8058)
!8113 = !DILocation(line: 566, column: 2, scope: !8058)
!8114 = !DILocation(line: 566, column: 12, scope: !8058)
!8115 = !DILocation(line: 566, column: 23, scope: !8058)
!8116 = !DILocation(line: 568, column: 2, scope: !8058)
!8117 = !DILocation(line: 568, column: 2, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 568, column: 2)
!8119 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 568, column: 2)
!8120 = distinct !DILexicalBlock(scope: !8121, file: !3, line: 568, column: 2)
!8121 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 568, column: 2)
!8122 = !DILocation(line: 568, column: 2, scope: !8119)
!8123 = !DILocation(line: 568, column: 2, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 568, column: 2)
!8125 = !DILocation(line: 568, column: 2, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 568, column: 2)
!8127 = !DILocation(line: 568, column: 2, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 568, column: 2)
!8129 = !DILocation(line: 568, column: 2, scope: !8121)
!8130 = !DILocation(line: 569, column: 1, scope: !8058)
!8131 = distinct !DISubprogram(name: "stb0899_set_iterations", scope: !3, file: !3, line: 1394, type: !7520, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!8132 = !DILocalVariable(name: "state", arg: 1, scope: !8131, file: !3, line: 1394, type: !4407)
!8133 = !DILocation(line: 1394, column: 58, scope: !8131)
!8134 = !DILocalVariable(name: "internal", scope: !8131, file: !3, line: 1396, type: !6212)
!8135 = !DILocation(line: 1396, column: 27, scope: !8131)
!8136 = !DILocation(line: 1396, column: 39, scope: !8131)
!8137 = !DILocation(line: 1396, column: 46, scope: !8131)
!8138 = !DILocalVariable(name: "config", scope: !8131, file: !3, line: 1397, type: !4534)
!8139 = !DILocation(line: 1397, column: 25, scope: !8131)
!8140 = !DILocation(line: 1397, column: 34, scope: !8131)
!8141 = !DILocation(line: 1397, column: 41, scope: !8131)
!8142 = !DILocalVariable(name: "iter_scale", scope: !8131, file: !3, line: 1399, type: !369)
!8143 = !DILocation(line: 1399, column: 6, scope: !8131)
!8144 = !DILocalVariable(name: "reg", scope: !8131, file: !3, line: 1400, type: !489)
!8145 = !DILocation(line: 1400, column: 6, scope: !8131)
!8146 = !DILocation(line: 1402, column: 21, scope: !8131)
!8147 = !DILocation(line: 1402, column: 31, scope: !8131)
!8148 = !DILocation(line: 1402, column: 42, scope: !8131)
!8149 = !DILocation(line: 1402, column: 18, scope: !8131)
!8150 = !DILocation(line: 1402, column: 13, scope: !8131)
!8151 = !DILocation(line: 1403, column: 13, scope: !8131)
!8152 = !DILocation(line: 1404, column: 17, scope: !8131)
!8153 = !DILocation(line: 1404, column: 27, scope: !8131)
!8154 = !DILocation(line: 1404, column: 33, scope: !8131)
!8155 = !DILocation(line: 1404, column: 13, scope: !8131)
!8156 = !DILocation(line: 1405, column: 13, scope: !8131)
!8157 = !DILocation(line: 1407, column: 6, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 1407, column: 6)
!8159 = !DILocation(line: 1407, column: 19, scope: !8158)
!8160 = !DILocation(line: 1407, column: 27, scope: !8158)
!8161 = !DILocation(line: 1407, column: 17, scope: !8158)
!8162 = !DILocation(line: 1407, column: 6, scope: !8131)
!8163 = !DILocation(line: 1408, column: 16, scope: !8158)
!8164 = !DILocation(line: 1408, column: 24, scope: !8158)
!8165 = !DILocation(line: 1408, column: 14, scope: !8158)
!8166 = !DILocation(line: 1408, column: 3, scope: !8158)
!8167 = !DILocation(line: 1410, column: 8, scope: !8131)
!8168 = !DILocation(line: 1410, column: 6, scope: !8131)
!8169 = !DILocation(line: 1411, column: 2, scope: !8131)
!8170 = !DILocation(line: 1412, column: 22, scope: !8131)
!8171 = !DILocation(line: 1412, column: 90, scope: !8131)
!8172 = !DILocation(line: 1412, column: 2, scope: !8131)
!8173 = !DILocation(line: 1413, column: 1, scope: !8131)
!8174 = distinct !DISubprogram(name: "CONVERT32", scope: !3, file: !3, line: 1249, type: !8175, scopeLine: 1250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !574)
!8175 = !DISubroutineType(types: !8176)
!8176 = !{null, !489, !377}
!8177 = !DILocalVariable(name: "x", arg: 1, scope: !8174, file: !3, line: 1249, type: !489)
!8178 = !DILocation(line: 1249, column: 34, scope: !8174)
!8179 = !DILocalVariable(name: "str", arg: 2, scope: !8174, file: !3, line: 1249, type: !377)
!8180 = !DILocation(line: 1249, column: 43, scope: !8174)
!8181 = !DILocation(line: 1251, column: 12, scope: !8174)
!8182 = !DILocation(line: 1251, column: 14, scope: !8174)
!8183 = !DILocation(line: 1251, column: 21, scope: !8174)
!8184 = !DILocation(line: 1251, column: 11, scope: !8174)
!8185 = !DILocation(line: 1251, column: 6, scope: !8174)
!8186 = !DILocation(line: 1251, column: 9, scope: !8174)
!8187 = !DILocation(line: 1252, column: 12, scope: !8174)
!8188 = !DILocation(line: 1252, column: 14, scope: !8174)
!8189 = !DILocation(line: 1252, column: 21, scope: !8174)
!8190 = !DILocation(line: 1252, column: 11, scope: !8174)
!8191 = !DILocation(line: 1252, column: 6, scope: !8174)
!8192 = !DILocation(line: 1252, column: 9, scope: !8174)
!8193 = !DILocation(line: 1253, column: 12, scope: !8174)
!8194 = !DILocation(line: 1253, column: 14, scope: !8174)
!8195 = !DILocation(line: 1253, column: 21, scope: !8174)
!8196 = !DILocation(line: 1253, column: 11, scope: !8174)
!8197 = !DILocation(line: 1253, column: 6, scope: !8174)
!8198 = !DILocation(line: 1253, column: 9, scope: !8174)
!8199 = !DILocation(line: 1254, column: 12, scope: !8174)
!8200 = !DILocation(line: 1254, column: 14, scope: !8174)
!8201 = !DILocation(line: 1254, column: 21, scope: !8174)
!8202 = !DILocation(line: 1254, column: 11, scope: !8174)
!8203 = !DILocation(line: 1254, column: 6, scope: !8174)
!8204 = !DILocation(line: 1254, column: 9, scope: !8174)
!8205 = !DILocation(line: 1255, column: 3, scope: !8174)
!8206 = !DILocation(line: 1255, column: 7, scope: !8174)
!8207 = !DILocation(line: 1256, column: 1, scope: !8174)
