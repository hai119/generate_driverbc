; ModuleID = '../bcout/drivers/media/dvb-frontends/drxk_hard.llvm.bc'
source_filename = "drivers/media/dvb-frontends/drxk_hard.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.lock_class_key = type {}
%struct.dvb_frontend_ops = type { %struct.dvb_frontend_internal_info, [8 x i8], void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i8*, i32)*, i32 (%struct.dvb_frontend*, i1, i32, i32*, i32*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.dvb_frontend_tune_settings*)*, i32 (%struct.dvb_frontend*, %struct.dtv_frontend_properties*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_master_cmd*)*, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_slave_reply*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i64)*, i32 (%struct.dvb_frontend*, i64)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, %struct.dvb_tuner_ops, %struct.analog_demod_ops }
%struct.dvb_frontend_internal_info = type { [128 x i8], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.dvb_frontend = type { %struct.kref, %struct.dvb_frontend_ops, %struct.dvb_adapter*, i8*, i8*, i8*, i8*, i8*, %struct.dtv_frontend_properties, i32 (i8*, i32, i32, i32)*, i32, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.dvb_adapter = type { i32, %struct.list_head, %struct.list_head, i8*, [6 x i8], i8*, %struct.device*, %struct.module*, i32, %struct.dvb_device*, %struct.mutex }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.66, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.64, %struct.list_head, %struct.list_head, %union.anon.65 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.62 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.4, %union.anon.54, %struct.atomic_t, [8 x i8] }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.54 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.55, i32 }
%union.anon.55 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.48, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.34, %union.anon.35, i32 }
%struct.request_queue = type opaque
%union.anon.34 = type { %struct.list_head }
%union.anon.35 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.36 }
%struct.anon.36 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.40 }
%struct.anon.40 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.47, i32, [12 x i8] }
%union.anon.47 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.48 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.49, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.52 }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { i64, i64 }
%union.anon.52 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.64 = type { %struct.list_head }
%union.anon.65 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.56, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.57, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.58, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.61, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.56 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.57 = type { %struct.callback_head }
%union.anon.58 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.7 }
%union.anon.7 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.61 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.59 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.59 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.6 }
%union.anon.6 = type { %struct.raw_spinlock }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.dvb_device = type { %struct.list_head, %struct.file_operations*, %struct.dvb_adapter*, i32, i32, i32, i32, i32, i32, %struct.wait_queue_head, i32 (%struct.file*, i32, i8*)*, i8* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dtv_frontend_properties = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i32, i8, [3 x %struct.anon], i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats }
%struct.anon = type { i8, i32, i32, i8 }
%struct.dtv_fe_stats = type { i8, [4 x %struct.dtv_stats] }
%struct.dtv_stats = type <{ i8, %union.anon.0 }>
%union.anon.0 = type { i64 }
%struct.dvb_frontend_tune_settings = type { i32, i32, i32 }
%struct.dvb_diseqc_master_cmd = type { [6 x i8], i8 }
%struct.dvb_diseqc_slave_reply = type { [4 x i8], i8, i32 }
%struct.dvb_tuner_ops = type { %struct.dvb_tuner_info, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.analog_parameters*)*, i32 (%struct.dvb_frontend*, i8*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i8*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)* }
%struct.dvb_tuner_info = type { [128 x i8], i32, i32, i32, i32, i32, i32 }
%struct.analog_parameters = type { i32, i32, i32, i64 }
%struct.analog_demod_ops = type { %struct.analog_demod_info, void (%struct.dvb_frontend*, %struct.analog_parameters*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i8*)* }
%struct.analog_demod_info = type { i8* }
%struct.kmem_cache = type opaque
%struct.drxk_cfg_dvbt_echo_thres_t = type { i16, i32 }
%struct.drxk_config = type { i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, i8*, i32 }
%struct.i2c_adapter = type { %struct.module*, i32, %struct.i2c_algorithm*, i8*, %struct.i2c_lock_operations*, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i64, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, %struct.i2c_bus_recovery_info*, %struct.i2c_adapter_quirks*, %struct.irq_domain* }
%struct.i2c_algorithm = type { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*)* }
%struct.i2c_msg = type { i16, i16, i16, i8* }
%union.i2c_smbus_data = type { i16, [32 x i8] }
%struct.i2c_lock_operations = type { void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*, i32)*, void (%struct.i2c_adapter*, i32)* }
%struct.rt_mutex = type { %struct.raw_spinlock, %struct.rb_root_cached, %struct.task_struct* }
%struct.i2c_bus_recovery_info = type { i32 (%struct.i2c_adapter*)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, %struct.gpio_desc*, %struct.gpio_desc*, %struct.pinctrl*, %struct.pinctrl_state*, %struct.pinctrl_state* }
%struct.gpio_desc = type opaque
%struct.pinctrl = type opaque
%struct.pinctrl_state = type opaque
%struct.i2c_adapter_quirks = type { i64, i32, i16, i16, i16, i16 }
%struct.drxk_state = type { %struct.dvb_frontend, %struct.dtv_frontend_properties, %struct.device*, %struct.i2c_adapter*, i8, i8*, %struct.mutex, i32, i32, [256 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, i32, i32, i32, %struct.s_cfg_agc, %struct.s_cfg_agc, i16, %struct.s_cfg_pre_saw, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, %struct.s_cfg_agc, %struct.s_cfg_agc, %struct.s_cfg_pre_saw, i8, i16, i16, i32, i8, i8, i8, i32, i32, %struct.s_cfg_agc, %struct.s_cfg_agc, i16, %struct.s_cfg_pre_saw, i32, i16, i16, i32, i16, i16, %struct.s_cfg_agc, %struct.s_cfg_agc, %struct.s_cfg_pre_saw, i16, i8, [64 x i16], i16, i8*, i32, i8, i8, i8, i8, i32, i32, i8, i16, i8, i8, i8, i8, i16, i32, i8*, %struct.completion, %struct.firmware*, i32 }
%struct.s_cfg_agc = type { i32, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.s_cfg_pre_saw = type { i16, i8 }
%struct.firmware = type { i64, i8*, i8* }

@__param_str_debug = internal constant [11 x i8] c"drxk.debug\00", align 1, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@debug = internal global i32 0, align 4, !dbg !4542
@__param_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__param_str_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @debug to i8*) } }, section "__param", align 8, !dbg !414
@__UNIQUE_ID_debugtype220 = internal constant [24 x i8] c"drxk.parmtype=debug:int\00", section ".modinfo", align 1, !dbg !480
@__UNIQUE_ID_debug221 = internal constant [38 x i8] c"drxk.parm=debug:enable debug messages\00", section ".modinfo", align 1, !dbg !485
@.str = private unnamed_addr constant [13 x i8] c"\017drxk: %s \0A\00", align 1
@__func__.drxk_attach = private unnamed_addr constant [12 x i8] c"drxk_attach\00", align 1
@drxk_attach.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !490
@.str.1 = private unnamed_addr constant [14 x i8] c"&state->mutex\00", align 1
@drxk_ops = internal constant %struct.dvb_frontend_ops { %struct.dvb_frontend_internal_info { [128 x i8] c"DRXK\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 47000000, i32 865000000, i32 166667, i32 0, i32 870000, i32 11700000, i32 0, i32 -1071973714 }, [8 x i8] zeroinitializer, void (%struct.dvb_frontend*)* null, void (%struct.dvb_frontend*)* @drxk_release, void (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* @drxk_sleep, i32 (%struct.dvb_frontend*, i8*, i32)* null, i32 (%struct.dvb_frontend*, i1, i32, i32*, i32*)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* @drxk_set_parameters, i32 (%struct.dvb_frontend*, %struct.dvb_frontend_tune_settings*)* @drxk_get_tune_settings, i32 (%struct.dvb_frontend*, %struct.dtv_frontend_properties*)* null, i32 (%struct.dvb_frontend*, i32*)* @drxk_read_status, i32 (%struct.dvb_frontend*, i32*)* null, i32 (%struct.dvb_frontend*, i16*)* @drxk_read_signal_strength, i32 (%struct.dvb_frontend*, i16*)* @drxk_read_snr, i32 (%struct.dvb_frontend*, i32*)* @drxk_read_ucblocks, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_master_cmd*)* null, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_slave_reply*)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i32)* @drxk_gate_ctrl, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* null, %struct.dvb_tuner_ops zeroinitializer, %struct.analog_demod_ops zeroinitializer }, align 8, !dbg !4544
@.str.2 = private unnamed_addr constant [31 x i8] c"\016drxk: frontend initialized.\0A\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"\013drxk: not found\0A\00", align 1
@__UNIQUE_ID_description222 = internal constant [30 x i8] c"drxk.description=DRX-K driver\00", section ".modinfo", align 1, !dbg !4522
@__UNIQUE_ID_author223 = internal constant [26 x i8] c"drxk.author=Ralph Metzler\00", section ".modinfo", align 1, !dbg !4527
@__UNIQUE_ID_file224 = internal constant [43 x i8] c"drxk.file=drivers/media/dvb-frontends/drxk\00", section ".modinfo", align 1, !dbg !4532
@__UNIQUE_ID_license225 = internal constant [17 x i8] c"drxk.license=GPL\00", section ".modinfo", align 1, !dbg !4537
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.4 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@__func__.drxk_release = private unnamed_addr constant [13 x i8] c"drxk_release\00", align 1
@__func__.drxk_sleep = private unnamed_addr constant [11 x i8] c"drxk_sleep\00", align 1
@__func__.shut_down = private unnamed_addr constant [10 x i8] c"shut_down\00", align 1
@__func__.mpegts_stop = private unnamed_addr constant [12 x i8] c"mpegts_stop\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"\013drxk: Error %d on %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"\017drxk: %s (0x%08x, 0x%02x)\0A\00", align 1
@__func__.read16_flags = private unnamed_addr constant [13 x i8] c"read16_flags\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"\01c: ERROR!\0A\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"\013drxk: i2c read error at addr 0x%02x\0A\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"\017drxk: %s : read from\00", align 1
@__func__.i2c_read = private unnamed_addr constant [9 x i8] c"i2c_read\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"\01c %02x\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"\01c, value = \00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"\01c\0A\00", align 1
@.str.13 = private unnamed_addr constant [37 x i8] c"\017drxk: %s (0x%08x, 0x%04x, 0x%02x)\0A\00", align 1
@__func__.write16_flags = private unnamed_addr constant [14 x i8] c"write16_flags\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"\017drxk: %s :\00", align 1
@__func__.i2c_write = private unnamed_addr constant [10 x i8] c"i2c_write\00", align 1
@.str.15 = private unnamed_addr constant [40 x i8] c"\013drxk: i2c write error at addr 0x%02x\0A\00", align 1
@__func__.drxk_set_parameters = private unnamed_addr constant [20 x i8] c"drxk_set_parameters\00", align 1
@.str.16 = private unnamed_addr constant [80 x i8] c"\013drxk: Error: get_if_frequency() not defined at tuner. Can't work without it!\0A\00", align 1
@__func__.setoperation_mode = private unnamed_addr constant [18 x i8] c"setoperation_mode\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"\017drxk: %s : DVB-T\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"\017drxk: %s : DVB-C Annex %c\0A\00", align 1
@__func__.power_down_dvbt = private unnamed_addr constant [16 x i8] c"power_down_dvbt\00", align 1
@__func__.scu_command = private unnamed_addr constant [12 x i8] c"scu_command\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.19 = private unnamed_addr constant [23 x i8] c"\013drxk: SCU not ready\0A\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"SCU_RESULT_UNKCMD\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"SCU_RESULT_UNKSTD\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"SCU_RESULT_SIZE\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c"SCU_RESULT_INVPAR\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"ERROR: %d\0A\00", align 1
@.str.25 = private unnamed_addr constant [49 x i8] c"\013drxk: %s while sending cmd 0x%04x with params:\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"drxk: \00", align 1
@__func__.write_block = private unnamed_addr constant [12 x i8] c"write_block\00", align 1
@.str.27 = private unnamed_addr constant [44 x i8] c"\013drxk: %s: i2c write error at addr 0x%02x\0A\00", align 1
@__func__.set_iqm_af = private unnamed_addr constant [11 x i8] c"set_iqm_af\00", align 1
@__func__.ctrl_power_mode = private unnamed_addr constant [16 x i8] c"ctrl_power_mode\00", align 1
@__func__.power_up_device = private unnamed_addr constant [16 x i8] c"power_up_device\00", align 1
@__func__.dvbt_enable_ofdm_token_ring = private unnamed_addr constant [28 x i8] c"dvbt_enable_ofdm_token_ring\00", align 1
@.str.28 = private unnamed_addr constant [23 x i8] c"\013drxk: SIO not ready\0A\00", align 1
@__func__.hi_cfg_command = private unnamed_addr constant [15 x i8] c"hi_cfg_command\00", align 1
@__func__.hi_command = private unnamed_addr constant [11 x i8] c"hi_command\00", align 1
@__func__.power_down_qam = private unnamed_addr constant [15 x i8] c"power_down_qam\00", align 1
@__func__.set_dvbt_standard = private unnamed_addr constant [18 x i8] c"set_dvbt_standard\00", align 1
@__func__.power_up_dvbt = private unnamed_addr constant [14 x i8] c"power_up_dvbt\00", align 1
@__func__.switch_antenna_to_dvbt = private unnamed_addr constant [23 x i8] c"switch_antenna_to_dvbt\00", align 1
@__func__.write_gpio = private unnamed_addr constant [11 x i8] c"write_gpio\00", align 1
@__func__.bl_chain_cmd = private unnamed_addr constant [13 x i8] c"bl_chain_cmd\00", align 1
@__func__.adc_synchronization = private unnamed_addr constant [20 x i8] c"adc_synchronization\00", align 1
@__func__.adc_sync_measurement = private unnamed_addr constant [21 x i8] c"adc_sync_measurement\00", align 1
@__func__.set_pre_saw = private unnamed_addr constant [12 x i8] c"set_pre_saw\00", align 1
@__func__.set_agc_rf = private unnamed_addr constant [11 x i8] c"set_agc_rf\00", align 1
@__func__.set_agc_if = private unnamed_addr constant [11 x i8] c"set_agc_if\00", align 1
@__func__.mpegts_dto_setup = private unnamed_addr constant [17 x i8] c"mpegts_dto_setup\00", align 1
@.str.29 = private unnamed_addr constant [37 x i8] c"\017drxk: %s (0x%08x, 0x%08x, 0x%02x)\0A\00", align 1
@__func__.write32_flags = private unnamed_addr constant [14 x i8] c"write32_flags\00", align 1
@__const.dvbt_activate_presets.echo_thres8k = private unnamed_addr constant %struct.drxk_cfg_dvbt_echo_thres_t { i16 0, i32 2 }, align 4
@__func__.dvbt_activate_presets = private unnamed_addr constant [22 x i8] c"dvbt_activate_presets\00", align 1
@__func__.dvbt_ctrl_set_inc_enable = private unnamed_addr constant [25 x i8] c"dvbt_ctrl_set_inc_enable\00", align 1
@__func__.dvbt_ctrl_set_fr_enable = private unnamed_addr constant [24 x i8] c"dvbt_ctrl_set_fr_enable\00", align 1
@__func__.dvbt_ctrl_set_echo_threshold = private unnamed_addr constant [29 x i8] c"dvbt_ctrl_set_echo_threshold\00", align 1
@__func__.set_qam_standard = private unnamed_addr constant [17 x i8] c"set_qam_standard\00", align 1
@__func__.switch_antenna_to_qam = private unnamed_addr constant [22 x i8] c"switch_antenna_to_qam\00", align 1
@__func__.power_up_qam = private unnamed_addr constant [13 x i8] c"power_up_qam\00", align 1
@__func__.qam_reset_qam = private unnamed_addr constant [14 x i8] c"qam_reset_qam\00", align 1
@__func__.bl_direct_cmd = private unnamed_addr constant [14 x i8] c"bl_direct_cmd\00", align 1
@__func__.init_agc = private unnamed_addr constant [9 x i8] c"init_agc\00", align 1
@.str.30 = private unnamed_addr constant [34 x i8] c"\013drxk: %s: mode %d is not DVB-C\0A\00", align 1
@__func__.start = private unnamed_addr constant [6 x i8] c"start\00", align 1
@__func__.set_qam = private unnamed_addr constant [8 x i8] c"set_qam\00", align 1
@.str.31 = private unnamed_addr constant [50 x i8] c"\017drxk: %s Could not set demodulator parameters.\0A\00", align 1
@.str.32 = private unnamed_addr constant [88 x i8] c"\017drxk: %s Make sure qam_demod_parameter_count (%d) is correct for your firmware (%s).\0A\00", align 1
@.str.33 = private unnamed_addr constant [90 x i8] c"\017drxk: %s Auto-probing the QAM command parameters was successful - using %d parameters.\0A\00", align 1
@__func__.qam_set_symbolrate = private unnamed_addr constant [19 x i8] c"qam_set_symbolrate\00", align 1
@.str.34 = private unnamed_addr constant [52 x i8] c"\014drxk: Unknown QAM demodulator parameter count %d\0A\00", align 1
@.str.35 = private unnamed_addr constant [26 x i8] c"\014drxk: Warning %d on %s\0A\00", align 1
@__func__.qam_demodulator_command = private unnamed_addr constant [24 x i8] c"qam_demodulator_command\00", align 1
@__func__.set_frequency_shifter = private unnamed_addr constant [22 x i8] c"set_frequency_shifter\00", align 1
@__func__.set_qam_measurement = private unnamed_addr constant [20 x i8] c"set_qam_measurement\00", align 1
@__func__.set_qam16 = private unnamed_addr constant [10 x i8] c"set_qam16\00", align 1
@__func__.set_qam32 = private unnamed_addr constant [10 x i8] c"set_qam32\00", align 1
@__func__.set_qam64 = private unnamed_addr constant [10 x i8] c"set_qam64\00", align 1
@__func__.set_qam128 = private unnamed_addr constant [11 x i8] c"set_qam128\00", align 1
@__func__.set_qam256 = private unnamed_addr constant [11 x i8] c"set_qam256\00", align 1
@__func__.mpegts_start = private unnamed_addr constant [13 x i8] c"mpegts_start\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"\017drxk: %s IF =%d, TFO = %d\0A\00", align 1
@__func__.set_dvbt = private unnamed_addr constant [9 x i8] c"set_dvbt\00", align 1
@__func__.dvbt_sc_command = private unnamed_addr constant [16 x i8] c"dvbt_sc_command\00", align 1
@__func__.dvbt_ctrl_set_sqi_speed = private unnamed_addr constant [24 x i8] c"dvbt_ctrl_set_sqi_speed\00", align 1
@__func__.dvbt_start = private unnamed_addr constant [11 x i8] c"dvbt_start\00", align 1
@__func__.drxk_get_tune_settings = private unnamed_addr constant [23 x i8] c"drxk_get_tune_settings\00", align 1
@__func__.drxk_read_status = private unnamed_addr constant [17 x i8] c"drxk_read_status\00", align 1
@__func__.get_lock_status = private unnamed_addr constant [16 x i8] c"get_lock_status\00", align 1
@__func__.get_qam_lock_status = private unnamed_addr constant [20 x i8] c"get_qam_lock_status\00", align 1
@__func__.get_dvbt_lock_status = private unnamed_addr constant [21 x i8] c"get_dvbt_lock_status\00", align 1
@__func__.get_signal_to_noise = private unnamed_addr constant [20 x i8] c"get_signal_to_noise\00", align 1
@__func__.get_dvbt_signal_to_noise = private unnamed_addr constant [25 x i8] c"get_dvbt_signal_to_noise\00", align 1
@__func__.get_qam_signal_to_noise = private unnamed_addr constant [24 x i8] c"get_qam_signal_to_noise\00", align 1
@__func__.drxk_read_signal_strength = private unnamed_addr constant [26 x i8] c"drxk_read_signal_strength\00", align 1
@__func__.drxk_read_snr = private unnamed_addr constant [14 x i8] c"drxk_read_snr\00", align 1
@__func__.drxk_read_ucblocks = private unnamed_addr constant [19 x i8] c"drxk_read_ucblocks\00", align 1
@__func__.dvbtqam_get_acc_pkt_err = private unnamed_addr constant [24 x i8] c"dvbtqam_get_acc_pkt_err\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"\017drxk: %s : %s\0A\00", align 1
@__func__.drxk_gate_ctrl = private unnamed_addr constant [15 x i8] c"drxk_gate_ctrl\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"enable\00", align 1
@.str.39 = private unnamed_addr constant [8 x i8] c"disable\00", align 1
@__func__.ConfigureI2CBridge = private unnamed_addr constant [19 x i8] c"ConfigureI2CBridge\00", align 1
@__func__.init_state = private unnamed_addr constant [11 x i8] c"init_state\00", align 1
@__func__.load_firmware_cb = private unnamed_addr constant [17 x i8] c"load_firmware_cb\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"firmware loaded\00", align 1
@.str.41 = private unnamed_addr constant [20 x i8] c"firmware not loaded\00", align 1
@.str.42 = private unnamed_addr constant [42 x i8] c"\013drxk: Could not load firmware file %s.\0A\00", align 1
@.str.43 = private unnamed_addr constant [44 x i8] c"\016drxk: Copy %s to your hotplug directory!\0A\00", align 1
@__func__.init_drxk = private unnamed_addr constant [10 x i8] c"init_drxk\00", align 1
@.str.44 = private unnamed_addr constant [38 x i8] c"\016drxk: DRXK driver version %d.%d.%d\0A\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c" DVB-C\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c" DVB-T\00", align 1
@__func__.drxx_open = private unnamed_addr constant [10 x i8] c"drxx_open\00", align 1
@__func__.read32_flags = private unnamed_addr constant [13 x i8] c"read32_flags\00", align 1
@.str.47 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@__func__.get_device_capabilities = private unnamed_addr constant [24 x i8] c"get_device_capabilities\00", align 1
@.str.48 = private unnamed_addr constant [36 x i8] c"\013drxk: Clock Frequency is unknown\0A\00", align 1
@.str.49 = private unnamed_addr constant [25 x i8] c"\016drxk: status = 0x%08x\0A\00", align 1
@.str.50 = private unnamed_addr constant [3 x i8] c"A1\00", align 1
@.str.51 = private unnamed_addr constant [3 x i8] c"A2\00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"A3\00", align 1
@.str.53 = private unnamed_addr constant [25 x i8] c"\013drxk: Spin %d unknown\0A\00", align 1
@.str.54 = private unnamed_addr constant [39 x i8] c"\013drxk: DeviceID 0x%02x not supported\0A\00", align 1
@.str.55 = private unnamed_addr constant [59 x i8] c"\016drxk: detected a drx-39%02xk, spin %s, xtal %d.%03d MHz\0A\00", align 1
@__func__.init_hi = private unnamed_addr constant [8 x i8] c"init_hi\00", align 1
@__func__.mpegts_disable = private unnamed_addr constant [15 x i8] c"mpegts_disable\00", align 1
@__func__.download_microcode = private unnamed_addr constant [19 x i8] c"download_microcode\00", align 1
@.str.56 = private unnamed_addr constant [32 x i8] c"\013drxk: Firmware is corrupted.\0A\00", align 1
@.str.57 = private unnamed_addr constant [41 x i8] c"\013drxk: Error %d while loading firmware\0A\00", align 1
@__func__.mpegts_dto_init = private unnamed_addr constant [16 x i8] c"mpegts_dto_init\00", align 1
@__func__.mpegts_configure_polarity = private unnamed_addr constant [26 x i8] c"mpegts_configure_polarity\00", align 1
@.str.58 = private unnamed_addr constant [31 x i8] c"\017drxk: %s : mpeg %s, %s mode\0A\00", align 1
@__func__.mpegts_configure_pins = private unnamed_addr constant [22 x i8] c"mpegts_configure_pins\00", align 1
@.str.59 = private unnamed_addr constant [9 x i8] c"parallel\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"serial\00", align 1
@__func__.power_down_device = private unnamed_addr constant [18 x i8] c"power_down_device\00", align 1
@llvm.used = appending global [7 x i8*] [i8* bitcast (%struct.kernel_param* @__param_debug to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__UNIQUE_ID_debugtype220, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @__UNIQUE_ID_debug221, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_description222, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__UNIQUE_ID_author223, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_file224, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__UNIQUE_ID_license225, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dvb_frontend* @drxk_attach(%struct.drxk_config* %config, %struct.i2c_adapter* %i2c) #0 !dbg !492 {
entry:
  %retval = alloca %struct.dvb_frontend*, align 8
  %config.addr = alloca %struct.drxk_config*, align 8
  %i2c.addr = alloca %struct.i2c_adapter*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  %state = alloca %struct.drxk_state*, align 8
  %adr = alloca i8, align 1
  %status = alloca i32, align 4
  %fw = alloca %struct.firmware*, align 8
  store %struct.drxk_config* %config, %struct.drxk_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_config** %config.addr, metadata !4555, metadata !DIExpression()), !dbg !4556
  store %struct.i2c_adapter* %i2c, %struct.i2c_adapter** %i2c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c.addr, metadata !4557, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !4559, metadata !DIExpression()), !dbg !4560
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !4561, metadata !DIExpression()), !dbg !4703
  store %struct.drxk_state* null, %struct.drxk_state** %state, align 8, !dbg !4703
  call void @llvm.dbg.declare(metadata i8* %adr, metadata !4704, metadata !DIExpression()), !dbg !4705
  %0 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4706
  %adr1 = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %0, i32 0, i32 0, !dbg !4707
  %1 = load i8, i8* %adr1, align 8, !dbg !4707
  store i8 %1, i8* %adr, align 1, !dbg !4705
  call void @llvm.dbg.declare(metadata i32* %status, metadata !4708, metadata !DIExpression()), !dbg !4709
  br label %do.body, !dbg !4710

do.body:                                          ; preds = %entry
  %2 = load i32, i32* @debug, align 4, !dbg !4711
  %cmp = icmp uge i32 %2, 1, !dbg !4711
  br i1 %cmp, label %if.then, label %if.end, !dbg !4714

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.drxk_attach, i64 0, i64 0)) #8, !dbg !4711
  br label %if.end, !dbg !4711

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !4714

do.end:                                           ; preds = %if.end
  %call2 = call i8* @kzalloc(i64 2600, i32 3264) #9, !dbg !4715
  %3 = bitcast i8* %call2 to %struct.drxk_state*, !dbg !4715
  store %struct.drxk_state* %3, %struct.drxk_state** %state, align 8, !dbg !4716
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4717
  %tobool = icmp ne %struct.drxk_state* %4, null, !dbg !4717
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !4719

if.then3:                                         ; preds = %do.end
  store %struct.dvb_frontend* null, %struct.dvb_frontend** %retval, align 8, !dbg !4720
  br label %return, !dbg !4720

if.end4:                                          ; preds = %do.end
  %5 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c.addr, align 8, !dbg !4721
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4722
  %i2c5 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 3, !dbg !4723
  store %struct.i2c_adapter* %5, %struct.i2c_adapter** %i2c5, align 8, !dbg !4724
  %7 = load i8, i8* %adr, align 1, !dbg !4725
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4726
  %demod_address = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %8, i32 0, i32 4, !dbg !4727
  store i8 %7, i8* %demod_address, align 8, !dbg !4728
  %9 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4729
  %single_master = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %9, i32 0, i32 1, !dbg !4730
  %10 = load i8, i8* %single_master, align 1, !dbg !4730
  %tobool6 = trunc i8 %10 to i1, !dbg !4730
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4731
  %single_master7 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %11, i32 0, i32 102, !dbg !4732
  %frombool = zext i1 %tobool6 to i8, !dbg !4733
  store i8 %frombool, i8* %single_master7, align 1, !dbg !4733
  %12 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4734
  %microcode_name = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %12, i32 0, i32 10, !dbg !4735
  %13 = load i8*, i8** %microcode_name, align 8, !dbg !4735
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4736
  %microcode_name8 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %14, i32 0, i32 107, !dbg !4737
  store i8* %13, i8** %microcode_name8, align 8, !dbg !4738
  %15 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4739
  %qam_demod_parameter_count = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %15, i32 0, i32 11, !dbg !4740
  %16 = load i32, i32* %qam_demod_parameter_count, align 8, !dbg !4740
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4741
  %qam_demod_parameter_count9 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %17, i32 0, i32 110, !dbg !4742
  store i32 %16, i32* %qam_demod_parameter_count9, align 8, !dbg !4743
  %18 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4744
  %no_i2c_bridge = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %18, i32 0, i32 2, !dbg !4745
  %19 = load i8, i8* %no_i2c_bridge, align 2, !dbg !4745
  %tobool10 = trunc i8 %19 to i1, !dbg !4745
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4746
  %no_i2c_bridge11 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %20, i32 0, i32 103, !dbg !4747
  %frombool12 = zext i1 %tobool10 to i8, !dbg !4748
  store i8 %frombool12, i8* %no_i2c_bridge11, align 2, !dbg !4748
  %21 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4749
  %antenna_gpio = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %21, i32 0, i32 7, !dbg !4750
  %22 = load i16, i16* %antenna_gpio, align 8, !dbg !4750
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4751
  %antenna_gpio13 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %23, i32 0, i32 105, !dbg !4752
  store i16 %22, i16* %antenna_gpio13, align 8, !dbg !4753
  %24 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4754
  %antenna_dvbt = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %24, i32 0, i32 6, !dbg !4755
  %25 = load i8, i8* %antenna_dvbt, align 2, !dbg !4755
  %tobool14 = trunc i8 %25 to i1, !dbg !4755
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4756
  %antenna_dvbt15 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %26, i32 0, i32 104, !dbg !4757
  %frombool16 = zext i1 %tobool14 to i8, !dbg !4758
  store i8 %frombool16, i8* %antenna_dvbt15, align 1, !dbg !4758
  %27 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4759
  %chunk_size = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %27, i32 0, i32 9, !dbg !4760
  %28 = load i32, i32* %chunk_size, align 4, !dbg !4760
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4761
  %m_chunk_size = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %29, i32 0, i32 8, !dbg !4762
  store i32 %28, i32* %m_chunk_size, align 4, !dbg !4763
  %30 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4764
  %enable_merr_cfg = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %30, i32 0, i32 5, !dbg !4765
  %31 = load i8, i8* %enable_merr_cfg, align 1, !dbg !4765
  %tobool17 = trunc i8 %31 to i1, !dbg !4765
  %32 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4766
  %enable_merr_cfg18 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %32, i32 0, i32 101, !dbg !4767
  %frombool19 = zext i1 %tobool17 to i8, !dbg !4768
  store i8 %frombool19, i8* %enable_merr_cfg18, align 4, !dbg !4768
  %33 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4769
  %dynamic_clk = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %33, i32 0, i32 4, !dbg !4771
  %34 = load i8, i8* %dynamic_clk, align 4, !dbg !4771
  %tobool20 = trunc i8 %34 to i1, !dbg !4771
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !4772

if.then21:                                        ; preds = %if.end4
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4773
  %m_dvbt_static_clk = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %35, i32 0, i32 49, !dbg !4775
  store i8 0, i8* %m_dvbt_static_clk, align 1, !dbg !4776
  %36 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4777
  %m_dvbc_static_clk = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %36, i32 0, i32 48, !dbg !4778
  store i8 0, i8* %m_dvbc_static_clk, align 4, !dbg !4779
  br label %if.end24, !dbg !4780

if.else:                                          ; preds = %if.end4
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4781
  %m_dvbt_static_clk22 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %37, i32 0, i32 49, !dbg !4783
  store i8 1, i8* %m_dvbt_static_clk22, align 1, !dbg !4784
  %38 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4785
  %m_dvbc_static_clk23 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %38, i32 0, i32 48, !dbg !4786
  store i8 1, i8* %m_dvbc_static_clk23, align 4, !dbg !4787
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then21
  %39 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4788
  %mpeg_out_clk_strength = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %39, i32 0, i32 8, !dbg !4790
  %40 = load i8, i8* %mpeg_out_clk_strength, align 2, !dbg !4790
  %tobool25 = icmp ne i8 %40, 0, !dbg !4788
  br i1 %tobool25, label %if.then26, label %if.else29, !dbg !4791

if.then26:                                        ; preds = %if.end24
  %41 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4792
  %mpeg_out_clk_strength27 = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %41, i32 0, i32 8, !dbg !4793
  %42 = load i8, i8* %mpeg_out_clk_strength27, align 2, !dbg !4793
  %conv = zext i8 %42 to i32, !dbg !4792
  %and = and i32 %conv, 7, !dbg !4794
  %conv28 = trunc i32 %and to i8, !dbg !4792
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4795
  %m_ts_clockk_strength = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %43, i32 0, i32 53, !dbg !4796
  store i8 %conv28, i8* %m_ts_clockk_strength, align 1, !dbg !4797
  br label %if.end31, !dbg !4795

if.else29:                                        ; preds = %if.end24
  %44 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4798
  %m_ts_clockk_strength30 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %44, i32 0, i32 53, !dbg !4799
  store i8 6, i8* %m_ts_clockk_strength30, align 1, !dbg !4800
  br label %if.end31

if.end31:                                         ; preds = %if.else29, %if.then26
  %45 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4801
  %parallel_ts = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %45, i32 0, i32 3, !dbg !4803
  %46 = load i8, i8* %parallel_ts, align 1, !dbg !4803
  %tobool32 = trunc i8 %46 to i1, !dbg !4803
  br i1 %tobool32, label %if.then33, label %if.else34, !dbg !4804

if.then33:                                        ; preds = %if.end31
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4805
  %m_enable_parallel = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %47, i32 0, i32 42, !dbg !4806
  store i8 1, i8* %m_enable_parallel, align 2, !dbg !4807
  br label %if.end36, !dbg !4805

if.else34:                                        ; preds = %if.end31
  %48 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4808
  %m_enable_parallel35 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %48, i32 0, i32 42, !dbg !4809
  store i8 0, i8* %m_enable_parallel35, align 2, !dbg !4810
  br label %if.end36

if.end36:                                         ; preds = %if.else34, %if.then33
  %49 = load %struct.drxk_config*, %struct.drxk_config** %config.addr, align 8, !dbg !4811
  %antenna_gpio37 = getelementptr inbounds %struct.drxk_config, %struct.drxk_config* %49, i32 0, i32 7, !dbg !4812
  %50 = load i16, i16* %antenna_gpio37, align 8, !dbg !4812
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4813
  %uio_mask = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %51, i32 0, i32 100, !dbg !4814
  store i16 %50, i16* %uio_mask, align 2, !dbg !4815
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4816
  %antenna_dvbt38 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %52, i32 0, i32 104, !dbg !4818
  %53 = load i8, i8* %antenna_dvbt38, align 1, !dbg !4818
  %tobool39 = trunc i8 %53 to i1, !dbg !4818
  br i1 %tobool39, label %if.else48, label %land.lhs.true, !dbg !4819

land.lhs.true:                                    ; preds = %if.end36
  %54 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4820
  %antenna_gpio40 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %54, i32 0, i32 105, !dbg !4821
  %55 = load i16, i16* %antenna_gpio40, align 8, !dbg !4821
  %conv41 = zext i16 %55 to i32, !dbg !4820
  %tobool42 = icmp ne i32 %conv41, 0, !dbg !4820
  br i1 %tobool42, label %if.then43, label %if.else48, !dbg !4822

if.then43:                                        ; preds = %land.lhs.true
  %56 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4823
  %antenna_gpio44 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %56, i32 0, i32 105, !dbg !4824
  %57 = load i16, i16* %antenna_gpio44, align 8, !dbg !4824
  %conv45 = zext i16 %57 to i32, !dbg !4823
  %58 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4825
  %m_gpio = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %58, i32 0, i32 82, !dbg !4826
  %59 = load i16, i16* %m_gpio, align 8, !dbg !4827
  %conv46 = zext i16 %59 to i32, !dbg !4827
  %or = or i32 %conv46, %conv45, !dbg !4827
  %conv47 = trunc i32 %or to i16, !dbg !4827
  store i16 %conv47, i16* %m_gpio, align 8, !dbg !4827
  br label %if.end55, !dbg !4825

if.else48:                                        ; preds = %land.lhs.true, %if.end36
  %60 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4828
  %antenna_gpio49 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %60, i32 0, i32 105, !dbg !4829
  %61 = load i16, i16* %antenna_gpio49, align 8, !dbg !4829
  %conv50 = zext i16 %61 to i32, !dbg !4828
  %neg = xor i32 %conv50, -1, !dbg !4830
  %62 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4831
  %m_gpio51 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %62, i32 0, i32 82, !dbg !4832
  %63 = load i16, i16* %m_gpio51, align 8, !dbg !4833
  %conv52 = zext i16 %63 to i32, !dbg !4833
  %and53 = and i32 %conv52, %neg, !dbg !4833
  %conv54 = trunc i32 %and53 to i16, !dbg !4833
  store i16 %conv54, i16* %m_gpio51, align 8, !dbg !4833
  br label %if.end55

if.end55:                                         ; preds = %if.else48, %if.then43
  br label %do.body56, !dbg !4834

do.body56:                                        ; preds = %if.end55
  %64 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4835
  %mutex = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %64, i32 0, i32 6, !dbg !4835
  call void @__mutex_init(%struct.mutex* %mutex, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), %struct.lock_class_key* @drxk_attach.__key) #9, !dbg !4835
  br label %do.end57, !dbg !4835

do.end57:                                         ; preds = %do.body56
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4837
  %frontend = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %65, i32 0, i32 0, !dbg !4838
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend, i32 0, i32 1, !dbg !4839
  %66 = bitcast %struct.dvb_frontend_ops* %ops to i8*, !dbg !4840
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @drxk_ops, i32 0, i32 0, i32 0, i32 0), i64 752, i1 false), !dbg !4840
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4841
  %68 = bitcast %struct.drxk_state* %67 to i8*, !dbg !4841
  %69 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4842
  %frontend58 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %69, i32 0, i32 0, !dbg !4843
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend58, i32 0, i32 3, !dbg !4844
  store i8* %68, i8** %demodulator_priv, align 8, !dbg !4845
  %70 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4846
  %call59 = call i32 @init_state(%struct.drxk_state* %70) #9, !dbg !4847
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4848
  %microcode_name60 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %71, i32 0, i32 107, !dbg !4850
  %72 = load i8*, i8** %microcode_name60, align 8, !dbg !4850
  %tobool61 = icmp ne i8* %72, null, !dbg !4848
  br i1 %tobool61, label %if.then62, label %if.else70, !dbg !4851

if.then62:                                        ; preds = %do.end57
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw, metadata !4852, metadata !DIExpression()), !dbg !4854
  store %struct.firmware* null, %struct.firmware** %fw, align 8, !dbg !4854
  %73 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4855
  %microcode_name63 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %73, i32 0, i32 107, !dbg !4856
  %74 = load i8*, i8** %microcode_name63, align 8, !dbg !4856
  %75 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4857
  %i2c64 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %75, i32 0, i32 3, !dbg !4858
  %76 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c64, align 8, !dbg !4858
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %76, i32 0, i32 9, !dbg !4859
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !4860
  %77 = load %struct.device*, %struct.device** %parent, align 8, !dbg !4860
  %call65 = call i32 @request_firmware(%struct.firmware** %fw, i8* %74, %struct.device* %77) #9, !dbg !4861
  store i32 %call65, i32* %status, align 4, !dbg !4862
  %78 = load i32, i32* %status, align 4, !dbg !4863
  %cmp66 = icmp slt i32 %78, 0, !dbg !4865
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !4866

if.then68:                                        ; preds = %if.then62
  store %struct.firmware* null, %struct.firmware** %fw, align 8, !dbg !4867
  br label %if.end69, !dbg !4868

if.end69:                                         ; preds = %if.then68, %if.then62
  %79 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !4869
  %80 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4870
  %81 = bitcast %struct.drxk_state* %80 to i8*, !dbg !4870
  call void @load_firmware_cb(%struct.firmware* %79, i8* %81) #9, !dbg !4871
  br label %if.end76, !dbg !4872

if.else70:                                        ; preds = %do.end57
  %82 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4873
  %call71 = call i32 @init_drxk(%struct.drxk_state* %82) #9, !dbg !4875
  %cmp72 = icmp slt i32 %call71, 0, !dbg !4876
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !4877

if.then74:                                        ; preds = %if.else70
  br label %error, !dbg !4878

if.end75:                                         ; preds = %if.else70
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.end69
  %83 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4879
  %frontend77 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %83, i32 0, i32 0, !dbg !4880
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend77, i32 0, i32 8, !dbg !4881
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !4882
  %84 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4883
  %strength = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %84, i32 0, i32 42, !dbg !4884
  %len = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength, i32 0, i32 0, !dbg !4885
  store i8 1, i8* %len, align 4, !dbg !4886
  %85 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4887
  %cnr = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %85, i32 0, i32 43, !dbg !4888
  %len78 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr, i32 0, i32 0, !dbg !4889
  store i8 1, i8* %len78, align 1, !dbg !4890
  %86 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4891
  %block_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %86, i32 0, i32 48, !dbg !4892
  %len79 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error, i32 0, i32 0, !dbg !4893
  store i8 1, i8* %len79, align 2, !dbg !4894
  %87 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4895
  %block_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %87, i32 0, i32 49, !dbg !4896
  %len80 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count, i32 0, i32 0, !dbg !4897
  store i8 1, i8* %len80, align 1, !dbg !4898
  %88 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4899
  %pre_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %88, i32 0, i32 44, !dbg !4900
  %len81 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_error, i32 0, i32 0, !dbg !4901
  store i8 1, i8* %len81, align 2, !dbg !4902
  %89 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4903
  %pre_bit_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %89, i32 0, i32 45, !dbg !4904
  %len82 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_count, i32 0, i32 0, !dbg !4905
  store i8 1, i8* %len82, align 1, !dbg !4906
  %90 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4907
  %post_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %90, i32 0, i32 46, !dbg !4908
  %len83 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error, i32 0, i32 0, !dbg !4909
  store i8 1, i8* %len83, align 4, !dbg !4910
  %91 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4911
  %post_bit_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %91, i32 0, i32 47, !dbg !4912
  %len84 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count, i32 0, i32 0, !dbg !4913
  store i8 1, i8* %len84, align 1, !dbg !4914
  %92 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4915
  %strength85 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %92, i32 0, i32 42, !dbg !4916
  %stat = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength85, i32 0, i32 1, !dbg !4917
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat, i64 0, i64 0, !dbg !4915
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 0, !dbg !4918
  store i8 2, i8* %scale, align 1, !dbg !4919
  %93 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4920
  %cnr86 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %93, i32 0, i32 43, !dbg !4921
  %stat87 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr86, i32 0, i32 1, !dbg !4922
  %arrayidx88 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat87, i64 0, i64 0, !dbg !4920
  %scale89 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx88, i32 0, i32 0, !dbg !4923
  store i8 0, i8* %scale89, align 1, !dbg !4924
  %94 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4925
  %block_error90 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %94, i32 0, i32 48, !dbg !4926
  %stat91 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error90, i32 0, i32 1, !dbg !4927
  %arrayidx92 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat91, i64 0, i64 0, !dbg !4925
  %scale93 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx92, i32 0, i32 0, !dbg !4928
  store i8 0, i8* %scale93, align 1, !dbg !4929
  %95 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4930
  %block_count94 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %95, i32 0, i32 49, !dbg !4931
  %stat95 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count94, i32 0, i32 1, !dbg !4932
  %arrayidx96 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat95, i64 0, i64 0, !dbg !4930
  %scale97 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx96, i32 0, i32 0, !dbg !4933
  store i8 0, i8* %scale97, align 1, !dbg !4934
  %96 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4935
  %pre_bit_error98 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %96, i32 0, i32 44, !dbg !4936
  %stat99 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_error98, i32 0, i32 1, !dbg !4937
  %arrayidx100 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat99, i64 0, i64 0, !dbg !4935
  %scale101 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx100, i32 0, i32 0, !dbg !4938
  store i8 0, i8* %scale101, align 1, !dbg !4939
  %97 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4940
  %pre_bit_count102 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %97, i32 0, i32 45, !dbg !4941
  %stat103 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_count102, i32 0, i32 1, !dbg !4942
  %arrayidx104 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat103, i64 0, i64 0, !dbg !4940
  %scale105 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx104, i32 0, i32 0, !dbg !4943
  store i8 0, i8* %scale105, align 1, !dbg !4944
  %98 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4945
  %post_bit_error106 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %98, i32 0, i32 46, !dbg !4946
  %stat107 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error106, i32 0, i32 1, !dbg !4947
  %arrayidx108 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat107, i64 0, i64 0, !dbg !4945
  %scale109 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx108, i32 0, i32 0, !dbg !4948
  store i8 0, i8* %scale109, align 1, !dbg !4949
  %99 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !4950
  %post_bit_count110 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %99, i32 0, i32 47, !dbg !4951
  %stat111 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count110, i32 0, i32 1, !dbg !4952
  %arrayidx112 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat111, i64 0, i64 0, !dbg !4950
  %scale113 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx112, i32 0, i32 0, !dbg !4953
  store i8 0, i8* %scale113, align 1, !dbg !4954
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !4955
  %100 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4956
  %frontend115 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %100, i32 0, i32 0, !dbg !4957
  store %struct.dvb_frontend* %frontend115, %struct.dvb_frontend** %retval, align 8, !dbg !4958
  br label %return, !dbg !4958

error:                                            ; preds = %if.then74
  call void @llvm.dbg.label(metadata !4959), !dbg !4960
  %call116 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !4961
  %101 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !4962
  %102 = bitcast %struct.drxk_state* %101 to i8*, !dbg !4962
  call void @kfree(i8* %102) #9, !dbg !4963
  store %struct.dvb_frontend* null, %struct.dvb_frontend** %retval, align 8, !dbg !4964
  br label %return, !dbg !4964

return:                                           ; preds = %error, %if.end76, %if.then3
  %103 = load %struct.dvb_frontend*, %struct.dvb_frontend** %retval, align 8, !dbg !4965
  ret %struct.dvb_frontend* %103, !dbg !4965
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !4966 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4969, metadata !DIExpression()), !dbg !4973
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4979, metadata !DIExpression()), !dbg !4980
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4981, metadata !DIExpression()), !dbg !4982
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4983, metadata !DIExpression()), !dbg !4984
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4985, metadata !DIExpression()), !dbg !4989
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4991, metadata !DIExpression()), !dbg !4995
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4997, metadata !DIExpression()), !dbg !5001
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5006, metadata !DIExpression()), !dbg !5007
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5008, metadata !DIExpression()), !dbg !5009
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5010, metadata !DIExpression()), !dbg !5011
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5012, metadata !DIExpression()), !dbg !5013
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5014, metadata !DIExpression()), !dbg !5015
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5016, metadata !DIExpression()), !dbg !5017
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5018, metadata !DIExpression()), !dbg !5019
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5020, metadata !DIExpression()), !dbg !5021
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5022, metadata !DIExpression()), !dbg !5023
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5024, metadata !DIExpression()), !dbg !5025
  %0 = load i64, i64* %size.addr, align 8, !dbg !5026
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5027
  %or = or i32 %1, 256, !dbg !5028
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5029
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !5030
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5031

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5032
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5033
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5034

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5035
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5036
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5037
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !5038
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5015
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5039
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5040
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5041
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5042
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5043
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5044
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !5045
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5045
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5045
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5045
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5045
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5046
  br label %kmalloc.exit, !dbg !5046

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5047
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5048
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5048
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5050

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5051
  br label %kmalloc_index.exit.i, !dbg !5051

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5052
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5054
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5055

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5056
  br label %kmalloc_index.exit.i, !dbg !5056

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5057
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5059
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5060

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5061
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5062
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5063

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5064
  br label %kmalloc_index.exit.i, !dbg !5064

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5065
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5067
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5068

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5069
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5070
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5071

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5072
  br label %kmalloc_index.exit.i, !dbg !5072

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5073
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5075
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5076

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5077
  br label %kmalloc_index.exit.i, !dbg !5077

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5078
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5080
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5081

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5082
  br label %kmalloc_index.exit.i, !dbg !5082

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5083
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5085
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5086

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5087
  br label %kmalloc_index.exit.i, !dbg !5087

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5088
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5090
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5091

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5092
  br label %kmalloc_index.exit.i, !dbg !5092

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5093
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5095
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5096

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5097
  br label %kmalloc_index.exit.i, !dbg !5097

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5098
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5100
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5101

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5102
  br label %kmalloc_index.exit.i, !dbg !5102

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5103
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5105
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5106

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5107
  br label %kmalloc_index.exit.i, !dbg !5107

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5108
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5110
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5111

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5112
  br label %kmalloc_index.exit.i, !dbg !5112

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5113
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5115
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5116

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5117
  br label %kmalloc_index.exit.i, !dbg !5117

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5118
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5120
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5121

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5122
  br label %kmalloc_index.exit.i, !dbg !5122

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5123
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5125
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5126

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5127
  br label %kmalloc_index.exit.i, !dbg !5127

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5128
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5130
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5131

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5132
  br label %kmalloc_index.exit.i, !dbg !5132

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5133
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5135
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5136

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5137
  br label %kmalloc_index.exit.i, !dbg !5137

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5138
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5140
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5141

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5142
  br label %kmalloc_index.exit.i, !dbg !5142

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5143
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5145
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5146

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5147
  br label %kmalloc_index.exit.i, !dbg !5147

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5148
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5150
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5151

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5152
  br label %kmalloc_index.exit.i, !dbg !5152

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5153
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5155
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5156

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5157
  br label %kmalloc_index.exit.i, !dbg !5157

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5158
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5160
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5161

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5162
  br label %kmalloc_index.exit.i, !dbg !5162

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5163
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5165
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5166

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5167
  br label %kmalloc_index.exit.i, !dbg !5167

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5168
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5170
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5171

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5172
  br label %kmalloc_index.exit.i, !dbg !5172

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5173
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5175
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5176

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5177
  br label %kmalloc_index.exit.i, !dbg !5177

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5178
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5180
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5181

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5182
  br label %kmalloc_index.exit.i, !dbg !5182

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5183
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5185
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5186

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5187
  br label %kmalloc_index.exit.i, !dbg !5187

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5188
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5190
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5191

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5192
  br label %kmalloc_index.exit.i, !dbg !5192

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !5193, !srcloc !5196
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 106) #10, !dbg !5197, !srcloc !5200
  unreachable, !dbg !5201

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5202
  store i32 %45, i32* %index.i, align 4, !dbg !5203
  %46 = load i32, i32* %index.i, align 4, !dbg !5204
  %tobool.i = icmp ne i32 %46, 0, !dbg !5204
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5206

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5207
  br label %kmalloc.exit, !dbg !5207

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5208
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5209
  %and.i.i = and i32 %48, 17, !dbg !5209
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5209
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5209
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5209
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5209
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5211

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5212
  br label %kmalloc_type.exit.i, !dbg !5212

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5213
  %and2.i.i = and i32 %49, 1, !dbg !5214
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5213
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5213
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5213
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5215
  br label %kmalloc_type.exit.i, !dbg !5215

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5216
  %idxprom.i = zext i32 %51 to i64, !dbg !5217
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5217
  %52 = load i32, i32* %index.i, align 4, !dbg !5218
  %idxprom6.i = zext i32 %52 to i64, !dbg !5217
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5217
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5217
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5219
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5220
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5221
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5222
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !5223
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5223
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5223
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5223
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !5223
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !4984
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5224
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5225
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5226
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5227
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !5228
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5229
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5230
  store i8* %62, i8** %retval.i, align 8, !dbg !5231
  br label %kmalloc.exit, !dbg !5231

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5232
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5233
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !5234
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5234
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5234
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5234
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !5234
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5235
  br label %kmalloc.exit, !dbg !5235

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5236
  ret i8* %65, !dbg !5237
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_state(%struct.drxk_state* %state) #0 !dbg !5238 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %ul_vsb_if_agc_mode = alloca i32, align 4
  %ul_vsb_if_agc_output_level = alloca i32, align 4
  %ul_vsb_if_agc_min_level = alloca i32, align 4
  %ul_vsb_if_agc_max_level = alloca i32, align 4
  %ul_vsb_if_agc_speed = alloca i32, align 4
  %ul_vsb_rf_agc_mode = alloca i32, align 4
  %ul_vsb_rf_agc_output_level = alloca i32, align 4
  %ul_vsb_rf_agc_min_level = alloca i32, align 4
  %ul_vsb_rf_agc_max_level = alloca i32, align 4
  %ul_vsb_rf_agc_speed = alloca i32, align 4
  %ul_vsb_rf_agc_top = alloca i32, align 4
  %ul_vsb_rf_agc_cut_off_current = alloca i32, align 4
  %ul_atv_if_agc_mode = alloca i32, align 4
  %ul_atv_if_agc_output_level = alloca i32, align 4
  %ul_atv_if_agc_min_level = alloca i32, align 4
  %ul_atv_if_agc_max_level = alloca i32, align 4
  %ul_atv_if_agc_speed = alloca i32, align 4
  %ul_atv_rf_agc_mode = alloca i32, align 4
  %ul_atv_rf_agc_output_level = alloca i32, align 4
  %ul_atv_rf_agc_min_level = alloca i32, align 4
  %ul_atv_rf_agc_max_level = alloca i32, align 4
  %ul_atv_rf_agc_top = alloca i32, align 4
  %ul_atv_rf_agc_cut_off_current = alloca i32, align 4
  %ul_atv_rf_agc_speed = alloca i32, align 4
  %ulQual83 = alloca i32, align 4
  %ulQual93 = alloca i32, align 4
  %ul_mpeg_lock_time_out = alloca i32, align 4
  %ul_demod_lock_time_out = alloca i32, align 4
  %ul_gpio_cfg = alloca i32, align 4
  %ul_invert_ts_clock = alloca i32, align 4
  %ul_ts_data_strength = alloca i32, align 4
  %ul_dvbt_bitrate = alloca i32, align 4
  %ul_dvbc_bitrate = alloca i32, align 4
  %ul_insert_rs_byte = alloca i32, align 4
  %ul_rf_mirror = alloca i32, align 4
  %ul_power_down = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !5241, metadata !DIExpression()), !dbg !5242
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_if_agc_mode, metadata !5243, metadata !DIExpression()), !dbg !5244
  store i32 0, i32* %ul_vsb_if_agc_mode, align 4, !dbg !5244
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_if_agc_output_level, metadata !5245, metadata !DIExpression()), !dbg !5246
  store i32 0, i32* %ul_vsb_if_agc_output_level, align 4, !dbg !5246
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_if_agc_min_level, metadata !5247, metadata !DIExpression()), !dbg !5248
  store i32 0, i32* %ul_vsb_if_agc_min_level, align 4, !dbg !5248
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_if_agc_max_level, metadata !5249, metadata !DIExpression()), !dbg !5250
  store i32 32767, i32* %ul_vsb_if_agc_max_level, align 4, !dbg !5250
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_if_agc_speed, metadata !5251, metadata !DIExpression()), !dbg !5252
  store i32 3, i32* %ul_vsb_if_agc_speed, align 4, !dbg !5252
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_rf_agc_mode, metadata !5253, metadata !DIExpression()), !dbg !5254
  store i32 0, i32* %ul_vsb_rf_agc_mode, align 4, !dbg !5254
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_rf_agc_output_level, metadata !5255, metadata !DIExpression()), !dbg !5256
  store i32 0, i32* %ul_vsb_rf_agc_output_level, align 4, !dbg !5256
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_rf_agc_min_level, metadata !5257, metadata !DIExpression()), !dbg !5258
  store i32 0, i32* %ul_vsb_rf_agc_min_level, align 4, !dbg !5258
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_rf_agc_max_level, metadata !5259, metadata !DIExpression()), !dbg !5260
  store i32 32767, i32* %ul_vsb_rf_agc_max_level, align 4, !dbg !5260
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_rf_agc_speed, metadata !5261, metadata !DIExpression()), !dbg !5262
  store i32 3, i32* %ul_vsb_rf_agc_speed, align 4, !dbg !5262
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_rf_agc_top, metadata !5263, metadata !DIExpression()), !dbg !5264
  store i32 9500, i32* %ul_vsb_rf_agc_top, align 4, !dbg !5264
  call void @llvm.dbg.declare(metadata i32* %ul_vsb_rf_agc_cut_off_current, metadata !5265, metadata !DIExpression()), !dbg !5266
  store i32 4000, i32* %ul_vsb_rf_agc_cut_off_current, align 4, !dbg !5266
  call void @llvm.dbg.declare(metadata i32* %ul_atv_if_agc_mode, metadata !5267, metadata !DIExpression()), !dbg !5268
  store i32 0, i32* %ul_atv_if_agc_mode, align 4, !dbg !5268
  call void @llvm.dbg.declare(metadata i32* %ul_atv_if_agc_output_level, metadata !5269, metadata !DIExpression()), !dbg !5270
  store i32 0, i32* %ul_atv_if_agc_output_level, align 4, !dbg !5270
  call void @llvm.dbg.declare(metadata i32* %ul_atv_if_agc_min_level, metadata !5271, metadata !DIExpression()), !dbg !5272
  store i32 0, i32* %ul_atv_if_agc_min_level, align 4, !dbg !5272
  call void @llvm.dbg.declare(metadata i32* %ul_atv_if_agc_max_level, metadata !5273, metadata !DIExpression()), !dbg !5274
  store i32 0, i32* %ul_atv_if_agc_max_level, align 4, !dbg !5274
  call void @llvm.dbg.declare(metadata i32* %ul_atv_if_agc_speed, metadata !5275, metadata !DIExpression()), !dbg !5276
  store i32 3, i32* %ul_atv_if_agc_speed, align 4, !dbg !5276
  call void @llvm.dbg.declare(metadata i32* %ul_atv_rf_agc_mode, metadata !5277, metadata !DIExpression()), !dbg !5278
  store i32 2, i32* %ul_atv_rf_agc_mode, align 4, !dbg !5278
  call void @llvm.dbg.declare(metadata i32* %ul_atv_rf_agc_output_level, metadata !5279, metadata !DIExpression()), !dbg !5280
  store i32 0, i32* %ul_atv_rf_agc_output_level, align 4, !dbg !5280
  call void @llvm.dbg.declare(metadata i32* %ul_atv_rf_agc_min_level, metadata !5281, metadata !DIExpression()), !dbg !5282
  store i32 0, i32* %ul_atv_rf_agc_min_level, align 4, !dbg !5282
  call void @llvm.dbg.declare(metadata i32* %ul_atv_rf_agc_max_level, metadata !5283, metadata !DIExpression()), !dbg !5284
  store i32 0, i32* %ul_atv_rf_agc_max_level, align 4, !dbg !5284
  call void @llvm.dbg.declare(metadata i32* %ul_atv_rf_agc_top, metadata !5285, metadata !DIExpression()), !dbg !5286
  store i32 9500, i32* %ul_atv_rf_agc_top, align 4, !dbg !5286
  call void @llvm.dbg.declare(metadata i32* %ul_atv_rf_agc_cut_off_current, metadata !5287, metadata !DIExpression()), !dbg !5288
  store i32 4000, i32* %ul_atv_rf_agc_cut_off_current, align 4, !dbg !5288
  call void @llvm.dbg.declare(metadata i32* %ul_atv_rf_agc_speed, metadata !5289, metadata !DIExpression()), !dbg !5290
  store i32 3, i32* %ul_atv_rf_agc_speed, align 4, !dbg !5290
  call void @llvm.dbg.declare(metadata i32* %ulQual83, metadata !5291, metadata !DIExpression()), !dbg !5292
  store i32 165, i32* %ulQual83, align 4, !dbg !5292
  call void @llvm.dbg.declare(metadata i32* %ulQual93, metadata !5293, metadata !DIExpression()), !dbg !5294
  store i32 250, i32* %ulQual93, align 4, !dbg !5294
  call void @llvm.dbg.declare(metadata i32* %ul_mpeg_lock_time_out, metadata !5295, metadata !DIExpression()), !dbg !5296
  store i32 700, i32* %ul_mpeg_lock_time_out, align 4, !dbg !5296
  call void @llvm.dbg.declare(metadata i32* %ul_demod_lock_time_out, metadata !5297, metadata !DIExpression()), !dbg !5298
  store i32 500, i32* %ul_demod_lock_time_out, align 4, !dbg !5298
  call void @llvm.dbg.declare(metadata i32* %ul_gpio_cfg, metadata !5299, metadata !DIExpression()), !dbg !5300
  store i32 275, i32* %ul_gpio_cfg, align 4, !dbg !5300
  call void @llvm.dbg.declare(metadata i32* %ul_invert_ts_clock, metadata !5301, metadata !DIExpression()), !dbg !5302
  store i32 0, i32* %ul_invert_ts_clock, align 4, !dbg !5302
  call void @llvm.dbg.declare(metadata i32* %ul_ts_data_strength, metadata !5303, metadata !DIExpression()), !dbg !5304
  store i32 2, i32* %ul_ts_data_strength, align 4, !dbg !5304
  call void @llvm.dbg.declare(metadata i32* %ul_dvbt_bitrate, metadata !5305, metadata !DIExpression()), !dbg !5306
  store i32 50000000, i32* %ul_dvbt_bitrate, align 4, !dbg !5306
  call void @llvm.dbg.declare(metadata i32* %ul_dvbc_bitrate, metadata !5307, metadata !DIExpression()), !dbg !5308
  store i32 57864000, i32* %ul_dvbc_bitrate, align 4, !dbg !5308
  call void @llvm.dbg.declare(metadata i32* %ul_insert_rs_byte, metadata !5309, metadata !DIExpression()), !dbg !5310
  store i32 0, i32* %ul_insert_rs_byte, align 4, !dbg !5310
  call void @llvm.dbg.declare(metadata i32* %ul_rf_mirror, metadata !5311, metadata !DIExpression()), !dbg !5312
  store i32 1, i32* %ul_rf_mirror, align 4, !dbg !5312
  call void @llvm.dbg.declare(metadata i32* %ul_power_down, metadata !5313, metadata !DIExpression()), !dbg !5314
  store i32 0, i32* %ul_power_down, align 4, !dbg !5314
  br label %do.body, !dbg !5315

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !5316
  %cmp = icmp uge i32 %0, 1, !dbg !5316
  br i1 %cmp, label %if.then, label %if.end, !dbg !5319

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.init_state, i64 0, i64 0)) #8, !dbg !5316
  br label %if.end, !dbg !5316

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !5319

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5320
  %m_has_lna = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 10, !dbg !5321
  store i8 0, i8* %m_has_lna, align 8, !dbg !5322
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5323
  %m_has_dvbt = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 11, !dbg !5324
  store i8 0, i8* %m_has_dvbt, align 1, !dbg !5325
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5326
  %m_has_dvbc = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 12, !dbg !5327
  store i8 0, i8* %m_has_dvbc, align 2, !dbg !5328
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5329
  %m_has_atv = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 14, !dbg !5330
  store i8 0, i8* %m_has_atv, align 4, !dbg !5331
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5332
  %m_has_oob = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %5, i32 0, i32 15, !dbg !5333
  store i8 0, i8* %m_has_oob, align 1, !dbg !5334
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5335
  %m_has_audio = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 13, !dbg !5336
  store i8 0, i8* %m_has_audio, align 1, !dbg !5337
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5338
  %m_chunk_size = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 8, !dbg !5340
  %8 = load i32, i32* %m_chunk_size, align 4, !dbg !5340
  %tobool = icmp ne i32 %8, 0, !dbg !5338
  br i1 %tobool, label %if.end3, label %if.then1, !dbg !5341

if.then1:                                         ; preds = %do.end
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5342
  %m_chunk_size2 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %9, i32 0, i32 8, !dbg !5343
  store i32 124, i32* %m_chunk_size2, align 4, !dbg !5344
  br label %if.end3, !dbg !5342

if.end3:                                          ; preds = %if.then1, %do.end
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5345
  %m_osc_clock_freq = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %10, i32 0, i32 20, !dbg !5346
  store i16 0, i16* %m_osc_clock_freq, align 2, !dbg !5347
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5348
  %m_smart_ant_inverted = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %11, i32 0, i32 35, !dbg !5349
  store i8 0, i8* %m_smart_ant_inverted, align 4, !dbg !5350
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5351
  %m_b_p_down_open_bridge = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 37, !dbg !5352
  store i8 0, i8* %m_b_p_down_open_bridge, align 2, !dbg !5353
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5354
  %m_sys_clock_freq = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %13, i32 0, i32 26, !dbg !5355
  store i32 151875, i32* %m_sys_clock_freq, align 8, !dbg !5356
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5357
  %m_sys_clock_freq4 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %14, i32 0, i32 26, !dbg !5358
  %15 = load i32, i32* %m_sys_clock_freq4, align 8, !dbg !5358
  %div = sdiv i32 %15, 1000, !dbg !5359
  %mul = mul i32 %div, 42, !dbg !5360
  %div5 = sdiv i32 %mul, 1000, !dbg !5361
  %conv = trunc i32 %div5 to i16, !dbg !5362
  %16 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5363
  %m_hi_cfg_timing_div = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %16, i32 0, i32 21, !dbg !5364
  store i16 %conv, i16* %m_hi_cfg_timing_div, align 4, !dbg !5365
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5366
  %m_hi_cfg_timing_div6 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %17, i32 0, i32 21, !dbg !5368
  %18 = load i16, i16* %m_hi_cfg_timing_div6, align 4, !dbg !5368
  %conv7 = zext i16 %18 to i32, !dbg !5366
  %cmp8 = icmp sgt i32 %conv7, 127, !dbg !5369
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !5370

if.then10:                                        ; preds = %if.end3
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5371
  %m_hi_cfg_timing_div11 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %19, i32 0, i32 21, !dbg !5372
  store i16 127, i16* %m_hi_cfg_timing_div11, align 4, !dbg !5373
  br label %if.end12, !dbg !5371

if.end12:                                         ; preds = %if.then10, %if.end3
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5374
  %demod_address = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %20, i32 0, i32 4, !dbg !5375
  %21 = load i8, i8* %demod_address, align 8, !dbg !5375
  %conv13 = zext i8 %21 to i32, !dbg !5374
  %shl = shl i32 %conv13, 1, !dbg !5376
  %conv14 = trunc i32 %shl to i16, !dbg !5377
  %22 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5378
  %m_hi_cfg_wake_up_key = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %22, i32 0, i32 23, !dbg !5379
  store i16 %conv14, i16* %m_hi_cfg_wake_up_key, align 8, !dbg !5380
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5381
  %m_hi_cfg_ctrl = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %23, i32 0, i32 25, !dbg !5382
  store i16 1, i16* %m_hi_cfg_ctrl, align 4, !dbg !5383
  %24 = load i32, i32* %ul_power_down, align 4, !dbg !5384
  %cmp15 = icmp ne i32 %24, 0, !dbg !5385
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5386
  %m_b_power_down = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %25, i32 0, i32 38, !dbg !5387
  %frombool = zext i1 %cmp15 to i8, !dbg !5388
  store i8 %frombool, i8* %m_b_power_down, align 1, !dbg !5388
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5389
  %m_drxk_a3_patch_code = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %26, i32 0, i32 94, !dbg !5390
  store i8 0, i8* %m_drxk_a3_patch_code, align 1, !dbg !5391
  %27 = load i32, i32* %ul_vsb_if_agc_mode, align 4, !dbg !5392
  %28 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5393
  %m_vsb_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %28, i32 0, i32 30, !dbg !5394
  %ctrl_mode = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_if_agc_cfg, i32 0, i32 0, !dbg !5395
  store i32 %27, i32* %ctrl_mode, align 8, !dbg !5396
  %29 = load i32, i32* %ul_vsb_if_agc_output_level, align 4, !dbg !5397
  %conv17 = trunc i32 %29 to i16, !dbg !5397
  %30 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5398
  %m_vsb_if_agc_cfg18 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %30, i32 0, i32 30, !dbg !5399
  %output_level = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_if_agc_cfg18, i32 0, i32 1, !dbg !5400
  store i16 %conv17, i16* %output_level, align 4, !dbg !5401
  %31 = load i32, i32* %ul_vsb_if_agc_min_level, align 4, !dbg !5402
  %conv19 = trunc i32 %31 to i16, !dbg !5402
  %32 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5403
  %m_vsb_if_agc_cfg20 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %32, i32 0, i32 30, !dbg !5404
  %min_output_level = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_if_agc_cfg20, i32 0, i32 2, !dbg !5405
  store i16 %conv19, i16* %min_output_level, align 2, !dbg !5406
  %33 = load i32, i32* %ul_vsb_if_agc_max_level, align 4, !dbg !5407
  %conv21 = trunc i32 %33 to i16, !dbg !5407
  %34 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5408
  %m_vsb_if_agc_cfg22 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %34, i32 0, i32 30, !dbg !5409
  %max_output_level = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_if_agc_cfg22, i32 0, i32 3, !dbg !5410
  store i16 %conv21, i16* %max_output_level, align 8, !dbg !5411
  %35 = load i32, i32* %ul_vsb_if_agc_speed, align 4, !dbg !5412
  %conv23 = trunc i32 %35 to i16, !dbg !5412
  %36 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5413
  %m_vsb_if_agc_cfg24 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %36, i32 0, i32 30, !dbg !5414
  %speed = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_if_agc_cfg24, i32 0, i32 4, !dbg !5415
  store i16 %conv23, i16* %speed, align 2, !dbg !5416
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5417
  %m_vsb_pga_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %37, i32 0, i32 31, !dbg !5418
  store i16 140, i16* %m_vsb_pga_cfg, align 4, !dbg !5419
  %38 = load i32, i32* %ul_vsb_rf_agc_mode, align 4, !dbg !5420
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5421
  %m_vsb_rf_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %39, i32 0, i32 29, !dbg !5422
  %ctrl_mode25 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_rf_agc_cfg, i32 0, i32 0, !dbg !5423
  store i32 %38, i32* %ctrl_mode25, align 4, !dbg !5424
  %40 = load i32, i32* %ul_vsb_rf_agc_output_level, align 4, !dbg !5425
  %conv26 = trunc i32 %40 to i16, !dbg !5425
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5426
  %m_vsb_rf_agc_cfg27 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %41, i32 0, i32 29, !dbg !5427
  %output_level28 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_rf_agc_cfg27, i32 0, i32 1, !dbg !5428
  store i16 %conv26, i16* %output_level28, align 4, !dbg !5429
  %42 = load i32, i32* %ul_vsb_rf_agc_min_level, align 4, !dbg !5430
  %conv29 = trunc i32 %42 to i16, !dbg !5430
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5431
  %m_vsb_rf_agc_cfg30 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %43, i32 0, i32 29, !dbg !5432
  %min_output_level31 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_rf_agc_cfg30, i32 0, i32 2, !dbg !5433
  store i16 %conv29, i16* %min_output_level31, align 2, !dbg !5434
  %44 = load i32, i32* %ul_vsb_rf_agc_max_level, align 4, !dbg !5435
  %conv32 = trunc i32 %44 to i16, !dbg !5435
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5436
  %m_vsb_rf_agc_cfg33 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %45, i32 0, i32 29, !dbg !5437
  %max_output_level34 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_rf_agc_cfg33, i32 0, i32 3, !dbg !5438
  store i16 %conv32, i16* %max_output_level34, align 4, !dbg !5439
  %46 = load i32, i32* %ul_vsb_rf_agc_speed, align 4, !dbg !5440
  %conv35 = trunc i32 %46 to i16, !dbg !5440
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5441
  %m_vsb_rf_agc_cfg36 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %47, i32 0, i32 29, !dbg !5442
  %speed37 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_rf_agc_cfg36, i32 0, i32 4, !dbg !5443
  store i16 %conv35, i16* %speed37, align 2, !dbg !5444
  %48 = load i32, i32* %ul_vsb_rf_agc_top, align 4, !dbg !5445
  %conv38 = trunc i32 %48 to i16, !dbg !5445
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5446
  %m_vsb_rf_agc_cfg39 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %49, i32 0, i32 29, !dbg !5447
  %top = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_rf_agc_cfg39, i32 0, i32 5, !dbg !5448
  store i16 %conv38, i16* %top, align 4, !dbg !5449
  %50 = load i32, i32* %ul_vsb_rf_agc_cut_off_current, align 4, !dbg !5450
  %conv40 = trunc i32 %50 to i16, !dbg !5450
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5451
  %m_vsb_rf_agc_cfg41 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %51, i32 0, i32 29, !dbg !5452
  %cut_off_current = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_vsb_rf_agc_cfg41, i32 0, i32 6, !dbg !5453
  store i16 %conv40, i16* %cut_off_current, align 2, !dbg !5454
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5455
  %m_vsb_pre_saw_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %52, i32 0, i32 32, !dbg !5456
  %reference = getelementptr inbounds %struct.s_cfg_pre_saw, %struct.s_cfg_pre_saw* %m_vsb_pre_saw_cfg, i32 0, i32 0, !dbg !5457
  store i16 7, i16* %reference, align 2, !dbg !5458
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5459
  %m_vsb_pre_saw_cfg42 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %53, i32 0, i32 32, !dbg !5460
  %use_pre_saw = getelementptr inbounds %struct.s_cfg_pre_saw, %struct.s_cfg_pre_saw* %m_vsb_pre_saw_cfg42, i32 0, i32 1, !dbg !5461
  store i8 1, i8* %use_pre_saw, align 2, !dbg !5462
  %54 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5463
  %m_Quality83percent = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %54, i32 0, i32 33, !dbg !5464
  store i32 165, i32* %m_Quality83percent, align 4, !dbg !5465
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5466
  %m_Quality93percent = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %55, i32 0, i32 34, !dbg !5467
  store i32 250, i32* %m_Quality93percent, align 8, !dbg !5468
  %56 = load i32, i32* %ulQual93, align 4, !dbg !5469
  %cmp43 = icmp ule i32 %56, 500, !dbg !5471
  br i1 %cmp43, label %land.lhs.true, label %if.end50, !dbg !5472

land.lhs.true:                                    ; preds = %if.end12
  %57 = load i32, i32* %ulQual83, align 4, !dbg !5473
  %58 = load i32, i32* %ulQual93, align 4, !dbg !5474
  %cmp45 = icmp ult i32 %57, %58, !dbg !5475
  br i1 %cmp45, label %if.then47, label %if.end50, !dbg !5476

if.then47:                                        ; preds = %land.lhs.true
  %59 = load i32, i32* %ulQual83, align 4, !dbg !5477
  %60 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5479
  %m_Quality83percent48 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %60, i32 0, i32 33, !dbg !5480
  store i32 %59, i32* %m_Quality83percent48, align 4, !dbg !5481
  %61 = load i32, i32* %ulQual93, align 4, !dbg !5482
  %62 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5483
  %m_Quality93percent49 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %62, i32 0, i32 34, !dbg !5484
  store i32 %61, i32* %m_Quality93percent49, align 8, !dbg !5485
  br label %if.end50, !dbg !5486

if.end50:                                         ; preds = %if.then47, %land.lhs.true, %if.end12
  %63 = load i32, i32* %ul_atv_if_agc_mode, align 4, !dbg !5487
  %64 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5488
  %m_atv_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %64, i32 0, i32 63, !dbg !5489
  %ctrl_mode51 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_if_agc_cfg, i32 0, i32 0, !dbg !5490
  store i32 %63, i32* %ctrl_mode51, align 4, !dbg !5491
  %65 = load i32, i32* %ul_atv_if_agc_output_level, align 4, !dbg !5492
  %conv52 = trunc i32 %65 to i16, !dbg !5492
  %66 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5493
  %m_atv_if_agc_cfg53 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %66, i32 0, i32 63, !dbg !5494
  %output_level54 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_if_agc_cfg53, i32 0, i32 1, !dbg !5495
  store i16 %conv52, i16* %output_level54, align 4, !dbg !5496
  %67 = load i32, i32* %ul_atv_if_agc_min_level, align 4, !dbg !5497
  %conv55 = trunc i32 %67 to i16, !dbg !5497
  %68 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5498
  %m_atv_if_agc_cfg56 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %68, i32 0, i32 63, !dbg !5499
  %min_output_level57 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_if_agc_cfg56, i32 0, i32 2, !dbg !5500
  store i16 %conv55, i16* %min_output_level57, align 2, !dbg !5501
  %69 = load i32, i32* %ul_atv_if_agc_max_level, align 4, !dbg !5502
  %conv58 = trunc i32 %69 to i16, !dbg !5502
  %70 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5503
  %m_atv_if_agc_cfg59 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %70, i32 0, i32 63, !dbg !5504
  %max_output_level60 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_if_agc_cfg59, i32 0, i32 3, !dbg !5505
  store i16 %conv58, i16* %max_output_level60, align 4, !dbg !5506
  %71 = load i32, i32* %ul_atv_if_agc_speed, align 4, !dbg !5507
  %conv61 = trunc i32 %71 to i16, !dbg !5507
  %72 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5508
  %m_atv_if_agc_cfg62 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %72, i32 0, i32 63, !dbg !5509
  %speed63 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_if_agc_cfg62, i32 0, i32 4, !dbg !5510
  store i16 %conv61, i16* %speed63, align 2, !dbg !5511
  %73 = load i32, i32* %ul_atv_rf_agc_mode, align 4, !dbg !5512
  %74 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5513
  %m_atv_rf_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %74, i32 0, i32 62, !dbg !5514
  %ctrl_mode64 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_rf_agc_cfg, i32 0, i32 0, !dbg !5515
  store i32 %73, i32* %ctrl_mode64, align 8, !dbg !5516
  %75 = load i32, i32* %ul_atv_rf_agc_output_level, align 4, !dbg !5517
  %conv65 = trunc i32 %75 to i16, !dbg !5517
  %76 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5518
  %m_atv_rf_agc_cfg66 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %76, i32 0, i32 62, !dbg !5519
  %output_level67 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_rf_agc_cfg66, i32 0, i32 1, !dbg !5520
  store i16 %conv65, i16* %output_level67, align 4, !dbg !5521
  %77 = load i32, i32* %ul_atv_rf_agc_min_level, align 4, !dbg !5522
  %conv68 = trunc i32 %77 to i16, !dbg !5522
  %78 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5523
  %m_atv_rf_agc_cfg69 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %78, i32 0, i32 62, !dbg !5524
  %min_output_level70 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_rf_agc_cfg69, i32 0, i32 2, !dbg !5525
  store i16 %conv68, i16* %min_output_level70, align 2, !dbg !5526
  %79 = load i32, i32* %ul_atv_rf_agc_max_level, align 4, !dbg !5527
  %conv71 = trunc i32 %79 to i16, !dbg !5527
  %80 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5528
  %m_atv_rf_agc_cfg72 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %80, i32 0, i32 62, !dbg !5529
  %max_output_level73 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_rf_agc_cfg72, i32 0, i32 3, !dbg !5530
  store i16 %conv71, i16* %max_output_level73, align 8, !dbg !5531
  %81 = load i32, i32* %ul_atv_rf_agc_speed, align 4, !dbg !5532
  %conv74 = trunc i32 %81 to i16, !dbg !5532
  %82 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5533
  %m_atv_rf_agc_cfg75 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %82, i32 0, i32 62, !dbg !5534
  %speed76 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_rf_agc_cfg75, i32 0, i32 4, !dbg !5535
  store i16 %conv74, i16* %speed76, align 2, !dbg !5536
  %83 = load i32, i32* %ul_atv_rf_agc_top, align 4, !dbg !5537
  %conv77 = trunc i32 %83 to i16, !dbg !5537
  %84 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5538
  %m_atv_rf_agc_cfg78 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %84, i32 0, i32 62, !dbg !5539
  %top79 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_rf_agc_cfg78, i32 0, i32 5, !dbg !5540
  store i16 %conv77, i16* %top79, align 4, !dbg !5541
  %85 = load i32, i32* %ul_atv_rf_agc_cut_off_current, align 4, !dbg !5542
  %conv80 = trunc i32 %85 to i16, !dbg !5542
  %86 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5543
  %m_atv_rf_agc_cfg81 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %86, i32 0, i32 62, !dbg !5544
  %cut_off_current82 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_atv_rf_agc_cfg81, i32 0, i32 6, !dbg !5545
  store i16 %conv80, i16* %cut_off_current82, align 2, !dbg !5546
  %87 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5547
  %m_atv_pre_saw_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %87, i32 0, i32 64, !dbg !5548
  %reference83 = getelementptr inbounds %struct.s_cfg_pre_saw, %struct.s_cfg_pre_saw* %m_atv_pre_saw_cfg, i32 0, i32 0, !dbg !5549
  store i16 4, i16* %reference83, align 8, !dbg !5550
  %88 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5551
  %m_atv_pre_saw_cfg84 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %88, i32 0, i32 64, !dbg !5552
  %use_pre_saw85 = getelementptr inbounds %struct.s_cfg_pre_saw, %struct.s_cfg_pre_saw* %m_atv_pre_saw_cfg84, i32 0, i32 1, !dbg !5553
  store i8 1, i8* %use_pre_saw85, align 2, !dbg !5554
  %89 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5555
  %m_dvbt_rf_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %89, i32 0, i32 84, !dbg !5556
  %ctrl_mode86 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_rf_agc_cfg, i32 0, i32 0, !dbg !5557
  store i32 2, i32* %ctrl_mode86, align 4, !dbg !5558
  %90 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5559
  %m_dvbt_rf_agc_cfg87 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %90, i32 0, i32 84, !dbg !5560
  %output_level88 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_rf_agc_cfg87, i32 0, i32 1, !dbg !5561
  store i16 0, i16* %output_level88, align 4, !dbg !5562
  %91 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5563
  %m_dvbt_rf_agc_cfg89 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %91, i32 0, i32 84, !dbg !5564
  %min_output_level90 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_rf_agc_cfg89, i32 0, i32 2, !dbg !5565
  store i16 0, i16* %min_output_level90, align 2, !dbg !5566
  %92 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5567
  %m_dvbt_rf_agc_cfg91 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %92, i32 0, i32 84, !dbg !5568
  %max_output_level92 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_rf_agc_cfg91, i32 0, i32 3, !dbg !5569
  store i16 -1, i16* %max_output_level92, align 4, !dbg !5570
  %93 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5571
  %m_dvbt_rf_agc_cfg93 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %93, i32 0, i32 84, !dbg !5572
  %top94 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_rf_agc_cfg93, i32 0, i32 5, !dbg !5573
  store i16 8448, i16* %top94, align 4, !dbg !5574
  %94 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5575
  %m_dvbt_rf_agc_cfg95 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %94, i32 0, i32 84, !dbg !5576
  %cut_off_current96 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_rf_agc_cfg95, i32 0, i32 6, !dbg !5577
  store i16 4000, i16* %cut_off_current96, align 2, !dbg !5578
  %95 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5579
  %m_dvbt_rf_agc_cfg97 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %95, i32 0, i32 84, !dbg !5580
  %speed98 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_rf_agc_cfg97, i32 0, i32 4, !dbg !5581
  store i16 1, i16* %speed98, align 2, !dbg !5582
  %96 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5583
  %m_dvbt_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %96, i32 0, i32 85, !dbg !5584
  %ctrl_mode99 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg, i32 0, i32 0, !dbg !5585
  store i32 0, i32* %ctrl_mode99, align 8, !dbg !5586
  %97 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5587
  %m_dvbt_if_agc_cfg100 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %97, i32 0, i32 85, !dbg !5588
  %output_level101 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg100, i32 0, i32 1, !dbg !5589
  store i16 0, i16* %output_level101, align 4, !dbg !5590
  %98 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5591
  %m_dvbt_if_agc_cfg102 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %98, i32 0, i32 85, !dbg !5592
  %min_output_level103 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg102, i32 0, i32 2, !dbg !5593
  store i16 0, i16* %min_output_level103, align 2, !dbg !5594
  %99 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5595
  %m_dvbt_if_agc_cfg104 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %99, i32 0, i32 85, !dbg !5596
  %max_output_level105 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg104, i32 0, i32 3, !dbg !5597
  store i16 9000, i16* %max_output_level105, align 8, !dbg !5598
  %100 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5599
  %m_dvbt_if_agc_cfg106 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %100, i32 0, i32 85, !dbg !5600
  %top107 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg106, i32 0, i32 5, !dbg !5601
  store i16 13424, i16* %top107, align 4, !dbg !5602
  %101 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5603
  %m_dvbt_if_agc_cfg108 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %101, i32 0, i32 85, !dbg !5604
  %cut_off_current109 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg108, i32 0, i32 6, !dbg !5605
  store i16 0, i16* %cut_off_current109, align 2, !dbg !5606
  %102 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5607
  %m_dvbt_if_agc_cfg110 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %102, i32 0, i32 85, !dbg !5608
  %speed111 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg110, i32 0, i32 4, !dbg !5609
  store i16 3, i16* %speed111, align 2, !dbg !5610
  %103 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5611
  %m_dvbt_if_agc_cfg112 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %103, i32 0, i32 85, !dbg !5612
  %fast_clip_ctrl_delay = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg112, i32 0, i32 8, !dbg !5613
  store i16 30, i16* %fast_clip_ctrl_delay, align 2, !dbg !5614
  %104 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5615
  %m_dvbt_if_agc_cfg113 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %104, i32 0, i32 85, !dbg !5616
  %ingain_tgt_max = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg113, i32 0, i32 7, !dbg !5617
  store i16 30000, i16* %ingain_tgt_max, align 8, !dbg !5618
  %105 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5619
  %m_dvbt_pre_saw_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %105, i32 0, i32 86, !dbg !5620
  %reference114 = getelementptr inbounds %struct.s_cfg_pre_saw, %struct.s_cfg_pre_saw* %m_dvbt_pre_saw_cfg, i32 0, i32 0, !dbg !5621
  store i16 4, i16* %reference114, align 4, !dbg !5622
  %106 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5623
  %m_dvbt_pre_saw_cfg115 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %106, i32 0, i32 86, !dbg !5624
  %use_pre_saw116 = getelementptr inbounds %struct.s_cfg_pre_saw, %struct.s_cfg_pre_saw* %m_dvbt_pre_saw_cfg115, i32 0, i32 1, !dbg !5625
  store i8 0, i8* %use_pre_saw116, align 2, !dbg !5626
  %107 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5627
  %m_qam_rf_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %107, i32 0, i32 74, !dbg !5628
  %ctrl_mode117 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_rf_agc_cfg, i32 0, i32 0, !dbg !5629
  store i32 2, i32* %ctrl_mode117, align 4, !dbg !5630
  %108 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5631
  %m_qam_rf_agc_cfg118 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %108, i32 0, i32 74, !dbg !5632
  %output_level119 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_rf_agc_cfg118, i32 0, i32 1, !dbg !5633
  store i16 0, i16* %output_level119, align 4, !dbg !5634
  %109 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5635
  %m_qam_rf_agc_cfg120 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %109, i32 0, i32 74, !dbg !5636
  %min_output_level121 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_rf_agc_cfg120, i32 0, i32 2, !dbg !5637
  store i16 6023, i16* %min_output_level121, align 2, !dbg !5638
  %110 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5639
  %m_qam_rf_agc_cfg122 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %110, i32 0, i32 74, !dbg !5640
  %max_output_level123 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_rf_agc_cfg122, i32 0, i32 3, !dbg !5641
  store i16 27000, i16* %max_output_level123, align 4, !dbg !5642
  %111 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5643
  %m_qam_rf_agc_cfg124 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %111, i32 0, i32 74, !dbg !5644
  %top125 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_rf_agc_cfg124, i32 0, i32 5, !dbg !5645
  store i16 9088, i16* %top125, align 4, !dbg !5646
  %112 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5647
  %m_qam_rf_agc_cfg126 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %112, i32 0, i32 74, !dbg !5648
  %cut_off_current127 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_rf_agc_cfg126, i32 0, i32 6, !dbg !5649
  store i16 4000, i16* %cut_off_current127, align 2, !dbg !5650
  %113 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5651
  %m_qam_rf_agc_cfg128 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %113, i32 0, i32 74, !dbg !5652
  %speed129 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_rf_agc_cfg128, i32 0, i32 4, !dbg !5653
  store i16 3, i16* %speed129, align 2, !dbg !5654
  %114 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5655
  %m_qam_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %114, i32 0, i32 75, !dbg !5656
  %ctrl_mode130 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_if_agc_cfg, i32 0, i32 0, !dbg !5657
  store i32 0, i32* %ctrl_mode130, align 8, !dbg !5658
  %115 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5659
  %m_qam_if_agc_cfg131 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %115, i32 0, i32 75, !dbg !5660
  %output_level132 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_if_agc_cfg131, i32 0, i32 1, !dbg !5661
  store i16 0, i16* %output_level132, align 4, !dbg !5662
  %116 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5663
  %m_qam_if_agc_cfg133 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %116, i32 0, i32 75, !dbg !5664
  %min_output_level134 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_if_agc_cfg133, i32 0, i32 2, !dbg !5665
  store i16 0, i16* %min_output_level134, align 2, !dbg !5666
  %117 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5667
  %m_qam_if_agc_cfg135 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %117, i32 0, i32 75, !dbg !5668
  %max_output_level136 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_if_agc_cfg135, i32 0, i32 3, !dbg !5669
  store i16 9000, i16* %max_output_level136, align 8, !dbg !5670
  %118 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5671
  %m_qam_if_agc_cfg137 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %118, i32 0, i32 75, !dbg !5672
  %top138 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_if_agc_cfg137, i32 0, i32 5, !dbg !5673
  store i16 1297, i16* %top138, align 4, !dbg !5674
  %119 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5675
  %m_qam_if_agc_cfg139 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %119, i32 0, i32 75, !dbg !5676
  %cut_off_current140 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_if_agc_cfg139, i32 0, i32 6, !dbg !5677
  store i16 0, i16* %cut_off_current140, align 2, !dbg !5678
  %120 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5679
  %m_qam_if_agc_cfg141 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %120, i32 0, i32 75, !dbg !5680
  %speed142 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_if_agc_cfg141, i32 0, i32 4, !dbg !5681
  store i16 3, i16* %speed142, align 2, !dbg !5682
  %121 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5683
  %m_qam_if_agc_cfg143 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %121, i32 0, i32 75, !dbg !5684
  %ingain_tgt_max144 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_if_agc_cfg143, i32 0, i32 7, !dbg !5685
  store i16 5119, i16* %ingain_tgt_max144, align 8, !dbg !5686
  %122 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5687
  %m_qam_if_agc_cfg145 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %122, i32 0, i32 75, !dbg !5688
  %fast_clip_ctrl_delay146 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_if_agc_cfg145, i32 0, i32 8, !dbg !5689
  store i16 50, i16* %fast_clip_ctrl_delay146, align 2, !dbg !5690
  %123 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5691
  %m_qam_pga_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %123, i32 0, i32 76, !dbg !5692
  store i16 140, i16* %m_qam_pga_cfg, align 4, !dbg !5693
  %124 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5694
  %m_qam_pre_saw_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %124, i32 0, i32 77, !dbg !5695
  %reference147 = getelementptr inbounds %struct.s_cfg_pre_saw, %struct.s_cfg_pre_saw* %m_qam_pre_saw_cfg, i32 0, i32 0, !dbg !5696
  store i16 4, i16* %reference147, align 2, !dbg !5697
  %125 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5698
  %m_qam_pre_saw_cfg148 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %125, i32 0, i32 77, !dbg !5699
  %use_pre_saw149 = getelementptr inbounds %struct.s_cfg_pre_saw, %struct.s_cfg_pre_saw* %m_qam_pre_saw_cfg148, i32 0, i32 1, !dbg !5700
  store i8 0, i8* %use_pre_saw149, align 2, !dbg !5701
  %126 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5702
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %126, i32 0, i32 28, !dbg !5703
  store i32 0, i32* %m_operation_mode, align 8, !dbg !5704
  %127 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5705
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %127, i32 0, i32 27, !dbg !5706
  store i32 0, i32* %m_drxk_state, align 4, !dbg !5707
  %128 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5708
  %m_enable_mpeg_output = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %128, i32 0, i32 40, !dbg !5709
  store i8 1, i8* %m_enable_mpeg_output, align 4, !dbg !5710
  %129 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5711
  %m_insert_rs_byte = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %129, i32 0, i32 41, !dbg !5712
  store i8 0, i8* %m_insert_rs_byte, align 1, !dbg !5713
  %130 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5714
  %m_invert_data = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %130, i32 0, i32 43, !dbg !5715
  store i8 0, i8* %m_invert_data, align 1, !dbg !5716
  %131 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5717
  %m_invert_err = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %131, i32 0, i32 44, !dbg !5718
  store i8 0, i8* %m_invert_err, align 8, !dbg !5719
  %132 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5720
  %m_invert_str = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %132, i32 0, i32 45, !dbg !5721
  store i8 0, i8* %m_invert_str, align 1, !dbg !5722
  %133 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5723
  %m_invert_val = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %133, i32 0, i32 46, !dbg !5724
  store i8 0, i8* %m_invert_val, align 2, !dbg !5725
  %134 = load i32, i32* %ul_invert_ts_clock, align 4, !dbg !5726
  %cmp150 = icmp ne i32 %134, 0, !dbg !5727
  %135 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5728
  %m_invert_clk = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %135, i32 0, i32 47, !dbg !5729
  %frombool152 = zext i1 %cmp150 to i8, !dbg !5730
  store i8 %frombool152, i8* %m_invert_clk, align 1, !dbg !5730
  %136 = load i32, i32* %ul_dvbt_bitrate, align 4, !dbg !5731
  %137 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5732
  %m_dvbt_bitrate = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %137, i32 0, i32 50, !dbg !5733
  store i32 %136, i32* %m_dvbt_bitrate, align 8, !dbg !5734
  %138 = load i32, i32* %ul_dvbc_bitrate, align 4, !dbg !5735
  %139 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5736
  %m_dvbc_bitrate = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %139, i32 0, i32 51, !dbg !5737
  store i32 %138, i32* %m_dvbc_bitrate, align 4, !dbg !5738
  %140 = load i32, i32* %ul_ts_data_strength, align 4, !dbg !5739
  %and = and i32 %140, 7, !dbg !5740
  %conv153 = trunc i32 %and to i8, !dbg !5741
  %141 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5742
  %m_ts_data_strength = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %141, i32 0, i32 52, !dbg !5743
  store i8 %conv153, i8* %m_ts_data_strength, align 8, !dbg !5744
  %142 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5745
  %m_mpeg_ts_static_bitrate = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %142, i32 0, i32 56, !dbg !5746
  store i32 19392658, i32* %m_mpeg_ts_static_bitrate, align 8, !dbg !5747
  %143 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5748
  %m_disable_te_ihandling = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %143, i32 0, i32 59, !dbg !5749
  store i8 0, i8* %m_disable_te_ihandling, align 4, !dbg !5750
  %144 = load i32, i32* %ul_insert_rs_byte, align 4, !dbg !5751
  %tobool154 = icmp ne i32 %144, 0, !dbg !5751
  br i1 %tobool154, label %if.then155, label %if.end157, !dbg !5753

if.then155:                                       ; preds = %if.end50
  %145 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5754
  %m_insert_rs_byte156 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %145, i32 0, i32 41, !dbg !5755
  store i8 1, i8* %m_insert_rs_byte156, align 1, !dbg !5756
  br label %if.end157, !dbg !5754

if.end157:                                        ; preds = %if.then155, %if.end50
  %146 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5757
  %m_mpeg_lock_time_out = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %146, i32 0, i32 57, !dbg !5758
  store i32 700, i32* %m_mpeg_lock_time_out, align 4, !dbg !5759
  %147 = load i32, i32* %ul_mpeg_lock_time_out, align 4, !dbg !5760
  %cmp158 = icmp ult i32 %147, 10000, !dbg !5762
  br i1 %cmp158, label %if.then160, label %if.end162, !dbg !5763

if.then160:                                       ; preds = %if.end157
  %148 = load i32, i32* %ul_mpeg_lock_time_out, align 4, !dbg !5764
  %149 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5765
  %m_mpeg_lock_time_out161 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %149, i32 0, i32 57, !dbg !5766
  store i32 %148, i32* %m_mpeg_lock_time_out161, align 4, !dbg !5767
  br label %if.end162, !dbg !5765

if.end162:                                        ; preds = %if.then160, %if.end157
  %150 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5768
  %m_demod_lock_time_out = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %150, i32 0, i32 58, !dbg !5769
  store i32 500, i32* %m_demod_lock_time_out, align 8, !dbg !5770
  %151 = load i32, i32* %ul_demod_lock_time_out, align 4, !dbg !5771
  %cmp163 = icmp ult i32 %151, 10000, !dbg !5773
  br i1 %cmp163, label %if.then165, label %if.end167, !dbg !5774

if.then165:                                       ; preds = %if.end162
  %152 = load i32, i32* %ul_demod_lock_time_out, align 4, !dbg !5775
  %153 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5776
  %m_demod_lock_time_out166 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %153, i32 0, i32 58, !dbg !5777
  store i32 %152, i32* %m_demod_lock_time_out166, align 8, !dbg !5778
  br label %if.end167, !dbg !5776

if.end167:                                        ; preds = %if.then165, %if.end162
  %154 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5779
  %m_constellation = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %154, i32 0, i32 72, !dbg !5780
  store i32 255, i32* %m_constellation, align 4, !dbg !5781
  %155 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5782
  %m_qam_interleave_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %155, i32 0, i32 78, !dbg !5783
  store i32 16, i32* %m_qam_interleave_mode, align 4, !dbg !5784
  %156 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5785
  %m_fec_rs_plen = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %156, i32 0, i32 79, !dbg !5786
  store i16 1632, i16* %m_fec_rs_plen, align 8, !dbg !5787
  %157 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5788
  %m_fec_rs_prescale = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %157, i32 0, i32 80, !dbg !5789
  store i16 1, i16* %m_fec_rs_prescale, align 2, !dbg !5790
  %158 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5791
  %m_sqi_speed = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %158, i32 0, i32 81, !dbg !5792
  store i32 1, i32* %m_sqi_speed, align 4, !dbg !5793
  %159 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5794
  %m_agcfast_clip_ctrl_delay = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %159, i32 0, i32 87, !dbg !5795
  store i16 0, i16* %m_agcfast_clip_ctrl_delay, align 8, !dbg !5796
  %160 = load i32, i32* %ul_gpio_cfg, align 4, !dbg !5797
  %conv168 = trunc i32 %160 to i16, !dbg !5797
  %161 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5798
  %m_gpio_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %161, i32 0, i32 83, !dbg !5799
  store i16 %conv168, i16* %m_gpio_cfg, align 2, !dbg !5800
  %162 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5801
  %m_b_power_down169 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %162, i32 0, i32 38, !dbg !5802
  store i8 0, i8* %m_b_power_down169, align 1, !dbg !5803
  %163 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5804
  %m_current_power_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %163, i32 0, i32 98, !dbg !5805
  store i32 255, i32* %m_current_power_mode, align 4, !dbg !5806
  %164 = load i32, i32* %ul_rf_mirror, align 4, !dbg !5807
  %cmp170 = icmp eq i32 %164, 0, !dbg !5808
  %165 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5809
  %m_rfmirror = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %165, i32 0, i32 95, !dbg !5810
  %frombool172 = zext i1 %cmp170 to i8, !dbg !5811
  store i8 %frombool172, i8* %m_rfmirror, align 2, !dbg !5811
  %166 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5812
  %m_if_agc_pol = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %166, i32 0, i32 61, !dbg !5813
  store i8 0, i8* %m_if_agc_pol, align 2, !dbg !5814
  ret i32 0, !dbg !5815
}

; Function Attrs: noredzone
declare dso_local i32 @request_firmware(%struct.firmware**, i8*, %struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @load_firmware_cb(%struct.firmware* %fw, i8* %context) #0 !dbg !5816 {
entry:
  %fw.addr = alloca %struct.firmware*, align 8
  %context.addr = alloca i8*, align 8
  %state = alloca %struct.drxk_state*, align 8
  store %struct.firmware* %fw, %struct.firmware** %fw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.firmware** %fw.addr, metadata !5819, metadata !DIExpression()), !dbg !5820
  store i8* %context, i8** %context.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !5821, metadata !DIExpression()), !dbg !5822
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !5823, metadata !DIExpression()), !dbg !5824
  %0 = load i8*, i8** %context.addr, align 8, !dbg !5825
  %1 = bitcast i8* %0 to %struct.drxk_state*, !dbg !5825
  store %struct.drxk_state* %1, %struct.drxk_state** %state, align 8, !dbg !5824
  br label %do.body, !dbg !5826

do.body:                                          ; preds = %entry
  %2 = load i32, i32* @debug, align 4, !dbg !5827
  %cmp = icmp uge i32 %2, 1, !dbg !5827
  br i1 %cmp, label %if.then, label %if.end, !dbg !5830

if.then:                                          ; preds = %do.body
  %3 = load %struct.firmware*, %struct.firmware** %fw.addr, align 8, !dbg !5827
  %tobool = icmp ne %struct.firmware* %3, null, !dbg !5827
  %4 = zext i1 %tobool to i64, !dbg !5827
  %cond = select i1 %tobool, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.41, i64 0, i64 0), !dbg !5827
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.load_firmware_cb, i64 0, i64 0), i8* %cond) #8, !dbg !5827
  br label %if.end, !dbg !5827

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !5830

do.end:                                           ; preds = %if.end
  %5 = load %struct.firmware*, %struct.firmware** %fw.addr, align 8, !dbg !5831
  %tobool1 = icmp ne %struct.firmware* %5, null, !dbg !5831
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !5833

if.then2:                                         ; preds = %do.end
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !5834
  %microcode_name = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 107, !dbg !5834
  %7 = load i8*, i8** %microcode_name, align 8, !dbg !5834
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.42, i64 0, i64 0), i8* %7) #8, !dbg !5834
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !5836
  %microcode_name4 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %8, i32 0, i32 107, !dbg !5836
  %9 = load i8*, i8** %microcode_name4, align 8, !dbg !5836
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i64 0, i64 0), i8* %9) #8, !dbg !5836
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !5837
  %microcode_name6 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %10, i32 0, i32 107, !dbg !5838
  store i8* null, i8** %microcode_name6, align 8, !dbg !5839
  br label %if.end7, !dbg !5840

if.end7:                                          ; preds = %if.then2, %do.end
  %11 = load %struct.firmware*, %struct.firmware** %fw.addr, align 8, !dbg !5841
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !5842
  %fw8 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 109, !dbg !5843
  store %struct.firmware* %11, %struct.firmware** %fw8, align 8, !dbg !5844
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !5845
  %call9 = call i32 @init_drxk(%struct.drxk_state* %13) #9, !dbg !5846
  ret void, !dbg !5847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_drxk(%struct.drxk_state* %state) #0 !dbg !5848 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  %n = alloca i32, align 4
  %power_mode = alloca i32, align 4
  %driver_version = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !5849, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5851, metadata !DIExpression()), !dbg !5852
  store i32 0, i32* %status, align 4, !dbg !5852
  call void @llvm.dbg.declare(metadata i32* %n, metadata !5853, metadata !DIExpression()), !dbg !5854
  store i32 0, i32* %n, align 4, !dbg !5854
  call void @llvm.dbg.declare(metadata i32* %power_mode, metadata !5855, metadata !DIExpression()), !dbg !5856
  store i32 1, i32* %power_mode, align 4, !dbg !5856
  call void @llvm.dbg.declare(metadata i16* %driver_version, metadata !5857, metadata !DIExpression()), !dbg !5858
  br label %do.body, !dbg !5859

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !5860
  %cmp = icmp uge i32 %0, 1, !dbg !5860
  br i1 %cmp, label %if.then, label %if.end, !dbg !5863

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_drxk, i64 0, i64 0)) #8, !dbg !5860
  br label %if.end, !dbg !5860

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !5863

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5864
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 27, !dbg !5866
  %2 = load i32, i32* %m_drxk_state, align 4, !dbg !5866
  %cmp1 = icmp eq i32 %2, 0, !dbg !5867
  br i1 %cmp1, label %if.then2, label %if.end195, !dbg !5868

if.then2:                                         ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5869
  %call3 = call i32 @drxk_i2c_lock(%struct.drxk_state* %3) #9, !dbg !5871
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5872
  %call4 = call i32 @power_up_device(%struct.drxk_state* %4) #9, !dbg !5873
  store i32 %call4, i32* %status, align 4, !dbg !5874
  %5 = load i32, i32* %status, align 4, !dbg !5875
  %cmp5 = icmp slt i32 %5, 0, !dbg !5877
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5878

if.then6:                                         ; preds = %if.then2
  br label %error, !dbg !5879

if.end7:                                          ; preds = %if.then2
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5880
  %call8 = call i32 @drxx_open(%struct.drxk_state* %6) #9, !dbg !5881
  store i32 %call8, i32* %status, align 4, !dbg !5882
  %7 = load i32, i32* %status, align 4, !dbg !5883
  %cmp9 = icmp slt i32 %7, 0, !dbg !5885
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5886

if.then10:                                        ; preds = %if.end7
  br label %error, !dbg !5887

if.end11:                                         ; preds = %if.end7
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5888
  %call12 = call i32 @write16(%struct.drxk_state* %8, i32 4522006, i16 zeroext 7) #9, !dbg !5889
  store i32 %call12, i32* %status, align 4, !dbg !5890
  %9 = load i32, i32* %status, align 4, !dbg !5891
  %cmp13 = icmp slt i32 %9, 0, !dbg !5893
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !5894

if.then14:                                        ; preds = %if.end11
  br label %error, !dbg !5895

if.end15:                                         ; preds = %if.end11
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5896
  %call16 = call i32 @write16(%struct.drxk_state* %10, i32 4522007, i16 zeroext -1350) #9, !dbg !5897
  store i32 %call16, i32* %status, align 4, !dbg !5898
  %11 = load i32, i32* %status, align 4, !dbg !5899
  %cmp17 = icmp slt i32 %11, 0, !dbg !5901
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !5902

if.then18:                                        ; preds = %if.end15
  br label %error, !dbg !5903

if.end19:                                         ; preds = %if.end15
  call void @usleep_range(i64 1000, i64 2000) #9, !dbg !5904
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5905
  %m_drxk_a3_patch_code = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 94, !dbg !5906
  store i8 1, i8* %m_drxk_a3_patch_code, align 1, !dbg !5907
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5908
  %call20 = call i32 @get_device_capabilities(%struct.drxk_state* %13) #9, !dbg !5909
  store i32 %call20, i32* %status, align 4, !dbg !5910
  %14 = load i32, i32* %status, align 4, !dbg !5911
  %cmp21 = icmp slt i32 %14, 0, !dbg !5913
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !5914

if.then22:                                        ; preds = %if.end19
  br label %error, !dbg !5915

if.end23:                                         ; preds = %if.end19
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5916
  %m_osc_clock_freq = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %15, i32 0, i32 20, !dbg !5917
  %16 = load i16, i16* %m_osc_clock_freq, align 2, !dbg !5917
  %conv = zext i16 %16 to i32, !dbg !5916
  %div = sdiv i32 %conv, 1000, !dbg !5918
  %mul = mul i32 %div, 350, !dbg !5919
  %conv24 = trunc i32 %mul to i16, !dbg !5920
  %conv25 = zext i16 %conv24 to i32, !dbg !5920
  %div26 = sdiv i32 %conv25, 1000, !dbg !5921
  %conv27 = trunc i32 %div26 to i16, !dbg !5920
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5922
  %m_hi_cfg_bridge_delay = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %17, i32 0, i32 22, !dbg !5923
  store i16 %conv27, i16* %m_hi_cfg_bridge_delay, align 2, !dbg !5924
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5925
  %m_hi_cfg_bridge_delay28 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %18, i32 0, i32 22, !dbg !5927
  %19 = load i16, i16* %m_hi_cfg_bridge_delay28, align 2, !dbg !5927
  %conv29 = zext i16 %19 to i32, !dbg !5925
  %cmp30 = icmp sgt i32 %conv29, 127, !dbg !5928
  br i1 %cmp30, label %if.then32, label %if.end34, !dbg !5929

if.then32:                                        ; preds = %if.end23
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5930
  %m_hi_cfg_bridge_delay33 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %20, i32 0, i32 22, !dbg !5932
  store i16 127, i16* %m_hi_cfg_bridge_delay33, align 2, !dbg !5933
  br label %if.end34, !dbg !5934

if.end34:                                         ; preds = %if.then32, %if.end23
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5935
  %m_hi_cfg_bridge_delay35 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %21, i32 0, i32 22, !dbg !5936
  %22 = load i16, i16* %m_hi_cfg_bridge_delay35, align 2, !dbg !5936
  %conv36 = zext i16 %22 to i32, !dbg !5935
  %shl = shl i32 %conv36, 7, !dbg !5937
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5938
  %m_hi_cfg_bridge_delay37 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %23, i32 0, i32 22, !dbg !5939
  %24 = load i16, i16* %m_hi_cfg_bridge_delay37, align 2, !dbg !5940
  %conv38 = zext i16 %24 to i32, !dbg !5940
  %add = add i32 %conv38, %shl, !dbg !5940
  %conv39 = trunc i32 %add to i16, !dbg !5940
  store i16 %conv39, i16* %m_hi_cfg_bridge_delay37, align 2, !dbg !5940
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5941
  %call40 = call i32 @init_hi(%struct.drxk_state* %25) #9, !dbg !5942
  store i32 %call40, i32* %status, align 4, !dbg !5943
  %26 = load i32, i32* %status, align 4, !dbg !5944
  %cmp41 = icmp slt i32 %26, 0, !dbg !5946
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !5947

if.then43:                                        ; preds = %if.end34
  br label %error, !dbg !5948

if.end44:                                         ; preds = %if.end34
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5949
  %call45 = call i32 @write16(%struct.drxk_state* %27, i32 8593095, i16 zeroext 0) #9, !dbg !5951
  store i32 %call45, i32* %status, align 4, !dbg !5952
  %28 = load i32, i32* %status, align 4, !dbg !5953
  %cmp46 = icmp slt i32 %28, 0, !dbg !5955
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !5956

if.then48:                                        ; preds = %if.end44
  br label %error, !dbg !5957

if.end49:                                         ; preds = %if.end44
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5958
  %call50 = call i32 @mpegts_disable(%struct.drxk_state* %29) #9, !dbg !5959
  store i32 %call50, i32* %status, align 4, !dbg !5960
  %30 = load i32, i32* %status, align 4, !dbg !5961
  %cmp51 = icmp slt i32 %30, 0, !dbg !5963
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !5964

if.then53:                                        ; preds = %if.end49
  br label %error, !dbg !5965

if.end54:                                         ; preds = %if.end49
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5966
  %call55 = call i32 @write16(%struct.drxk_state* %31, i32 16777216, i16 zeroext 0) #9, !dbg !5967
  store i32 %call55, i32* %status, align 4, !dbg !5968
  %32 = load i32, i32* %status, align 4, !dbg !5969
  %cmp56 = icmp slt i32 %32, 0, !dbg !5971
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !5972

if.then58:                                        ; preds = %if.end54
  br label %error, !dbg !5973

if.end59:                                         ; preds = %if.end54
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5974
  %call60 = call i32 @write16(%struct.drxk_state* %33, i32 8388608, i16 zeroext 0) #9, !dbg !5975
  store i32 %call60, i32* %status, align 4, !dbg !5976
  %34 = load i32, i32* %status, align 4, !dbg !5977
  %cmp61 = icmp slt i32 %34, 0, !dbg !5979
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !5980

if.then63:                                        ; preds = %if.end59
  br label %error, !dbg !5981

if.end64:                                         ; preds = %if.end59
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5982
  %call65 = call i32 @write16(%struct.drxk_state* %35, i32 4653072, i16 zeroext 1) #9, !dbg !5983
  store i32 %call65, i32* %status, align 4, !dbg !5984
  %36 = load i32, i32* %status, align 4, !dbg !5985
  %cmp66 = icmp slt i32 %36, 0, !dbg !5987
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !5988

if.then68:                                        ; preds = %if.end64
  br label %error, !dbg !5989

if.end69:                                         ; preds = %if.end64
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5990
  %call70 = call i32 @write16(%struct.drxk_state* %37, i32 4718592, i16 zeroext 1) #9, !dbg !5991
  store i32 %call70, i32* %status, align 4, !dbg !5992
  %38 = load i32, i32* %status, align 4, !dbg !5993
  %cmp71 = icmp slt i32 %38, 0, !dbg !5995
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !5996

if.then73:                                        ; preds = %if.end69
  br label %error, !dbg !5997

if.end74:                                         ; preds = %if.end69
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !5998
  %call75 = call i32 @bl_chain_cmd(%struct.drxk_state* %39, i16 zeroext 0, i16 zeroext 6, i32 100) #9, !dbg !5999
  store i32 %call75, i32* %status, align 4, !dbg !6000
  %40 = load i32, i32* %status, align 4, !dbg !6001
  %cmp76 = icmp slt i32 %40, 0, !dbg !6003
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !6004

if.then78:                                        ; preds = %if.end74
  br label %error, !dbg !6005

if.end79:                                         ; preds = %if.end74
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6006
  %fw = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %41, i32 0, i32 109, !dbg !6008
  %42 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !6008
  %tobool = icmp ne %struct.firmware* %42, null, !dbg !6006
  br i1 %tobool, label %if.then80, label %if.end89, !dbg !6009

if.then80:                                        ; preds = %if.end79
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6010
  %44 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6012
  %fw81 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %44, i32 0, i32 109, !dbg !6013
  %45 = load %struct.firmware*, %struct.firmware** %fw81, align 8, !dbg !6013
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %45, i32 0, i32 1, !dbg !6014
  %46 = load i8*, i8** %data, align 8, !dbg !6014
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6015
  %fw82 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %47, i32 0, i32 109, !dbg !6016
  %48 = load %struct.firmware*, %struct.firmware** %fw82, align 8, !dbg !6016
  %size = getelementptr inbounds %struct.firmware, %struct.firmware* %48, i32 0, i32 0, !dbg !6017
  %49 = load i64, i64* %size, align 8, !dbg !6017
  %conv83 = trunc i64 %49 to i32, !dbg !6015
  %call84 = call i32 @download_microcode(%struct.drxk_state* %43, i8* %46, i32 %conv83) #9, !dbg !6018
  store i32 %call84, i32* %status, align 4, !dbg !6019
  %50 = load i32, i32* %status, align 4, !dbg !6020
  %cmp85 = icmp slt i32 %50, 0, !dbg !6022
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !6023

if.then87:                                        ; preds = %if.then80
  br label %error, !dbg !6024

if.end88:                                         ; preds = %if.then80
  br label %if.end89, !dbg !6025

if.end89:                                         ; preds = %if.end88, %if.end79
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6026
  %call90 = call i32 @write16(%struct.drxk_state* %51, i32 4653072, i16 zeroext 0) #9, !dbg !6027
  store i32 %call90, i32* %status, align 4, !dbg !6028
  %52 = load i32, i32* %status, align 4, !dbg !6029
  %cmp91 = icmp slt i32 %52, 0, !dbg !6031
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !6032

if.then93:                                        ; preds = %if.end89
  br label %error, !dbg !6033

if.end94:                                         ; preds = %if.end89
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6034
  %call95 = call i32 @write16(%struct.drxk_state* %53, i32 8388608, i16 zeroext 1) #9, !dbg !6035
  store i32 %call95, i32* %status, align 4, !dbg !6036
  %54 = load i32, i32* %status, align 4, !dbg !6037
  %cmp96 = icmp slt i32 %54, 0, !dbg !6039
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !6040

if.then98:                                        ; preds = %if.end94
  br label %error, !dbg !6041

if.end99:                                         ; preds = %if.end94
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6042
  %call100 = call i32 @drxx_open(%struct.drxk_state* %55) #9, !dbg !6043
  store i32 %call100, i32* %status, align 4, !dbg !6044
  %56 = load i32, i32* %status, align 4, !dbg !6045
  %cmp101 = icmp slt i32 %56, 0, !dbg !6047
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !6048

if.then103:                                       ; preds = %if.end99
  br label %error, !dbg !6049

if.end104:                                        ; preds = %if.end99
  call void @msleep(i32 30) #9, !dbg !6050
  store i32 1, i32* %power_mode, align 4, !dbg !6051
  %57 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6052
  %call105 = call i32 @ctrl_power_mode(%struct.drxk_state* %57, i32* %power_mode) #9, !dbg !6053
  store i32 %call105, i32* %status, align 4, !dbg !6054
  %58 = load i32, i32* %status, align 4, !dbg !6055
  %cmp106 = icmp slt i32 %58, 0, !dbg !6057
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !6058

if.then108:                                       ; preds = %if.end104
  br label %error, !dbg !6059

if.end109:                                        ; preds = %if.end104
  store i16 9, i16* %driver_version, align 2, !dbg !6060
  %59 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6061
  %60 = load i16, i16* %driver_version, align 2, !dbg !6062
  %call110 = call i32 @write16(%struct.drxk_state* %59, i32 8593387, i16 zeroext %60) #9, !dbg !6063
  store i32 %call110, i32* %status, align 4, !dbg !6064
  %61 = load i32, i32* %status, align 4, !dbg !6065
  %cmp111 = icmp slt i32 %61, 0, !dbg !6067
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !6068

if.then113:                                       ; preds = %if.end109
  br label %error, !dbg !6069

if.end114:                                        ; preds = %if.end109
  store i16 17152, i16* %driver_version, align 2, !dbg !6070
  %62 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6071
  %63 = load i16, i16* %driver_version, align 2, !dbg !6072
  %call115 = call i32 @write16(%struct.drxk_state* %62, i32 8593388, i16 zeroext %63) #9, !dbg !6073
  store i32 %call115, i32* %status, align 4, !dbg !6074
  %64 = load i32, i32* %status, align 4, !dbg !6075
  %cmp116 = icmp slt i32 %64, 0, !dbg !6077
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !6078

if.then118:                                       ; preds = %if.end114
  br label %error, !dbg !6079

if.end119:                                        ; preds = %if.end114
  %call120 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.44, i64 0, i64 0), i32 0, i32 9, i32 4300) #8, !dbg !6080
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6081
  %call121 = call i32 @write16(%struct.drxk_state* %65, i32 8593087, i16 zeroext 0) #9, !dbg !6082
  store i32 %call121, i32* %status, align 4, !dbg !6083
  %66 = load i32, i32* %status, align 4, !dbg !6084
  %cmp122 = icmp slt i32 %66, 0, !dbg !6086
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !6087

if.then124:                                       ; preds = %if.end119
  br label %error, !dbg !6088

if.end125:                                        ; preds = %if.end119
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6089
  %call126 = call i32 @write16(%struct.drxk_state* %67, i32 29360128, i16 zeroext 0) #9, !dbg !6090
  store i32 %call126, i32* %status, align 4, !dbg !6091
  %68 = load i32, i32* %status, align 4, !dbg !6092
  %cmp127 = icmp slt i32 %68, 0, !dbg !6094
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !6095

if.then129:                                       ; preds = %if.end125
  br label %error, !dbg !6096

if.end130:                                        ; preds = %if.end125
  %69 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6097
  %call131 = call i32 @mpegts_dto_init(%struct.drxk_state* %69) #9, !dbg !6098
  store i32 %call131, i32* %status, align 4, !dbg !6099
  %70 = load i32, i32* %status, align 4, !dbg !6100
  %cmp132 = icmp slt i32 %70, 0, !dbg !6102
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !6103

if.then134:                                       ; preds = %if.end130
  br label %error, !dbg !6104

if.end135:                                        ; preds = %if.end130
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6105
  %call136 = call i32 @mpegts_stop(%struct.drxk_state* %71) #9, !dbg !6106
  store i32 %call136, i32* %status, align 4, !dbg !6107
  %72 = load i32, i32* %status, align 4, !dbg !6108
  %cmp137 = icmp slt i32 %72, 0, !dbg !6110
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !6111

if.then139:                                       ; preds = %if.end135
  br label %error, !dbg !6112

if.end140:                                        ; preds = %if.end135
  %73 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6113
  %call141 = call i32 @mpegts_configure_polarity(%struct.drxk_state* %73) #9, !dbg !6114
  store i32 %call141, i32* %status, align 4, !dbg !6115
  %74 = load i32, i32* %status, align 4, !dbg !6116
  %cmp142 = icmp slt i32 %74, 0, !dbg !6118
  br i1 %cmp142, label %if.then144, label %if.end145, !dbg !6119

if.then144:                                       ; preds = %if.end140
  br label %error, !dbg !6120

if.end145:                                        ; preds = %if.end140
  %75 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6121
  %76 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6122
  %m_enable_mpeg_output = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %76, i32 0, i32 40, !dbg !6123
  %77 = load i8, i8* %m_enable_mpeg_output, align 4, !dbg !6123
  %tobool146 = trunc i8 %77 to i1, !dbg !6123
  %call147 = call i32 @mpegts_configure_pins(%struct.drxk_state* %75, i1 zeroext %tobool146) #9, !dbg !6124
  store i32 %call147, i32* %status, align 4, !dbg !6125
  %78 = load i32, i32* %status, align 4, !dbg !6126
  %cmp148 = icmp slt i32 %78, 0, !dbg !6128
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !6129

if.then150:                                       ; preds = %if.end145
  br label %error, !dbg !6130

if.end151:                                        ; preds = %if.end145
  %79 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6131
  %call152 = call i32 @write_gpio(%struct.drxk_state* %79) #9, !dbg !6132
  store i32 %call152, i32* %status, align 4, !dbg !6133
  %80 = load i32, i32* %status, align 4, !dbg !6134
  %cmp153 = icmp slt i32 %80, 0, !dbg !6136
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !6137

if.then155:                                       ; preds = %if.end151
  br label %error, !dbg !6138

if.end156:                                        ; preds = %if.end151
  %81 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6139
  %m_drxk_state157 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %81, i32 0, i32 27, !dbg !6140
  store i32 1, i32* %m_drxk_state157, align 4, !dbg !6141
  %82 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6142
  %m_b_power_down = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %82, i32 0, i32 38, !dbg !6144
  %83 = load i8, i8* %m_b_power_down, align 1, !dbg !6144
  %tobool158 = trunc i8 %83 to i1, !dbg !6144
  br i1 %tobool158, label %if.then159, label %if.else, !dbg !6145

if.then159:                                       ; preds = %if.end156
  %84 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6146
  %call160 = call i32 @power_down_device(%struct.drxk_state* %84) #9, !dbg !6148
  store i32 %call160, i32* %status, align 4, !dbg !6149
  %85 = load i32, i32* %status, align 4, !dbg !6150
  %cmp161 = icmp slt i32 %85, 0, !dbg !6152
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !6153

if.then163:                                       ; preds = %if.then159
  br label %error, !dbg !6154

if.end164:                                        ; preds = %if.then159
  %86 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6155
  %m_drxk_state165 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %86, i32 0, i32 27, !dbg !6156
  store i32 4, i32* %m_drxk_state165, align 4, !dbg !6157
  br label %if.end167, !dbg !6158

if.else:                                          ; preds = %if.end156
  %87 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6159
  %m_drxk_state166 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %87, i32 0, i32 27, !dbg !6160
  store i32 1, i32* %m_drxk_state166, align 4, !dbg !6161
  br label %if.end167

if.end167:                                        ; preds = %if.else, %if.end164
  store i32 0, i32* %n, align 4, !dbg !6162
  %88 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6163
  %m_has_dvbc = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %88, i32 0, i32 12, !dbg !6165
  %89 = load i8, i8* %m_has_dvbc, align 2, !dbg !6165
  %tobool168 = trunc i8 %89 to i1, !dbg !6165
  br i1 %tobool168, label %if.then169, label %if.end179, !dbg !6166

if.then169:                                       ; preds = %if.end167
  %90 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6167
  %frontend = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %90, i32 0, i32 0, !dbg !6169
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend, i32 0, i32 1, !dbg !6170
  %delsys = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops, i32 0, i32 1, !dbg !6171
  %91 = load i32, i32* %n, align 4, !dbg !6172
  %inc = add i32 %91, 1, !dbg !6172
  store i32 %inc, i32* %n, align 4, !dbg !6172
  %idxprom = sext i32 %91 to i64, !dbg !6167
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %delsys, i64 0, i64 %idxprom, !dbg !6167
  store i8 1, i8* %arrayidx, align 1, !dbg !6173
  %92 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6174
  %frontend170 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %92, i32 0, i32 0, !dbg !6175
  %ops171 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend170, i32 0, i32 1, !dbg !6176
  %delsys172 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops171, i32 0, i32 1, !dbg !6177
  %93 = load i32, i32* %n, align 4, !dbg !6178
  %inc173 = add i32 %93, 1, !dbg !6178
  store i32 %inc173, i32* %n, align 4, !dbg !6178
  %idxprom174 = sext i32 %93 to i64, !dbg !6174
  %arrayidx175 = getelementptr [8 x i8], [8 x i8]* %delsys172, i64 0, i64 %idxprom174, !dbg !6174
  store i8 18, i8* %arrayidx175, align 1, !dbg !6179
  %94 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6180
  %frontend176 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %94, i32 0, i32 0, !dbg !6181
  %ops177 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend176, i32 0, i32 1, !dbg !6182
  %info = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops177, i32 0, i32 0, !dbg !6183
  %name = getelementptr inbounds %struct.dvb_frontend_internal_info, %struct.dvb_frontend_internal_info* %info, i32 0, i32 0, !dbg !6184
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %name, i64 0, i64 0, !dbg !6180
  %call178 = call i64 @strlcat(i8* %arraydecay, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i64 128) #9, !dbg !6185
  br label %if.end179, !dbg !6186

if.end179:                                        ; preds = %if.then169, %if.end167
  %95 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6187
  %m_has_dvbt = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %95, i32 0, i32 11, !dbg !6189
  %96 = load i8, i8* %m_has_dvbt, align 1, !dbg !6189
  %tobool180 = trunc i8 %96 to i1, !dbg !6189
  br i1 %tobool180, label %if.then181, label %if.end194, !dbg !6190

if.then181:                                       ; preds = %if.end179
  %97 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6191
  %frontend182 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %97, i32 0, i32 0, !dbg !6193
  %ops183 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend182, i32 0, i32 1, !dbg !6194
  %delsys184 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops183, i32 0, i32 1, !dbg !6195
  %98 = load i32, i32* %n, align 4, !dbg !6196
  %inc185 = add i32 %98, 1, !dbg !6196
  store i32 %inc185, i32* %n, align 4, !dbg !6196
  %idxprom186 = sext i32 %98 to i64, !dbg !6191
  %arrayidx187 = getelementptr [8 x i8], [8 x i8]* %delsys184, i64 0, i64 %idxprom186, !dbg !6191
  store i8 3, i8* %arrayidx187, align 1, !dbg !6197
  %99 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6198
  %frontend188 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %99, i32 0, i32 0, !dbg !6199
  %ops189 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend188, i32 0, i32 1, !dbg !6200
  %info190 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops189, i32 0, i32 0, !dbg !6201
  %name191 = getelementptr inbounds %struct.dvb_frontend_internal_info, %struct.dvb_frontend_internal_info* %info190, i32 0, i32 0, !dbg !6202
  %arraydecay192 = getelementptr inbounds [128 x i8], [128 x i8]* %name191, i64 0, i64 0, !dbg !6198
  %call193 = call i64 @strlcat(i8* %arraydecay192, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0), i64 128) #9, !dbg !6203
  br label %if.end194, !dbg !6204

if.end194:                                        ; preds = %if.then181, %if.end179
  %100 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6205
  call void @drxk_i2c_unlock(%struct.drxk_state* %100) #9, !dbg !6206
  br label %if.end195, !dbg !6207

if.end195:                                        ; preds = %if.end194, %do.end
  br label %error, !dbg !6208

error:                                            ; preds = %if.end195, %if.then163, %if.then155, %if.then150, %if.then144, %if.then139, %if.then134, %if.then129, %if.then124, %if.then118, %if.then113, %if.then108, %if.then103, %if.then98, %if.then93, %if.then87, %if.then78, %if.then73, %if.then68, %if.then63, %if.then58, %if.then53, %if.then48, %if.then43, %if.then22, %if.then18, %if.then14, %if.then10, %if.then6
  call void @llvm.dbg.label(metadata !6209), !dbg !6210
  %101 = load i32, i32* %status, align 4, !dbg !6211
  %cmp196 = icmp slt i32 %101, 0, !dbg !6213
  br i1 %cmp196, label %if.then198, label %if.end201, !dbg !6214

if.then198:                                       ; preds = %error
  %102 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6215
  %m_drxk_state199 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %102, i32 0, i32 27, !dbg !6217
  store i32 5, i32* %m_drxk_state199, align 4, !dbg !6218
  %103 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6219
  call void @drxk_i2c_unlock(%struct.drxk_state* %103) #9, !dbg !6220
  %104 = load i32, i32* %status, align 4, !dbg !6221
  %call200 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %104, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.init_drxk, i64 0, i64 0)) #8, !dbg !6221
  br label %if.end201, !dbg !6222

if.end201:                                        ; preds = %if.then198, %error
  %105 = load i32, i32* %status, align 4, !dbg !6223
  ret i32 %105, !dbg !6224
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !6225 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6229, metadata !DIExpression()), !dbg !6234
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6236, metadata !DIExpression()), !dbg !6237
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6238, metadata !DIExpression()), !dbg !6239
  %0 = load i64, i64* %size.addr, align 8, !dbg !6240
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !6242
  br i1 %1, label %if.then, label %if.end447, !dbg !6243

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !6244
  %tobool = icmp ne i64 %2, 0, !dbg !6244
  br i1 %tobool, label %if.end, label %if.then1, !dbg !6247

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !6248
  br label %return, !dbg !6248

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !6249
  %cmp = icmp ult i64 %3, 4096, !dbg !6251
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6252

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6253
  br label %return, !dbg !6253

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub = sub i64 %4, 1, !dbg !6254
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !6254
  br i1 %5, label %cond.true, label %cond.false442, !dbg !6254

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub4 = sub i64 %6, 1, !dbg !6254
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !6254
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !6254

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub6 = sub i64 %8, 1, !dbg !6254
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !6254
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !6254

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !6254

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub9 = sub i64 %9, 1, !dbg !6254
  %and = and i64 %sub9, -9223372036854775808, !dbg !6254
  %tobool10 = icmp ne i64 %and, 0, !dbg !6254
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !6254

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !6254

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub13 = sub i64 %10, 1, !dbg !6254
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !6254
  %tobool15 = icmp ne i64 %and14, 0, !dbg !6254
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !6254

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !6254

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub18 = sub i64 %11, 1, !dbg !6254
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !6254
  %tobool20 = icmp ne i64 %and19, 0, !dbg !6254
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !6254

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !6254

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub23 = sub i64 %12, 1, !dbg !6254
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !6254
  %tobool25 = icmp ne i64 %and24, 0, !dbg !6254
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !6254

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !6254

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub28 = sub i64 %13, 1, !dbg !6254
  %and29 = and i64 %sub28, 576460752303423488, !dbg !6254
  %tobool30 = icmp ne i64 %and29, 0, !dbg !6254
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !6254

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !6254

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub33 = sub i64 %14, 1, !dbg !6254
  %and34 = and i64 %sub33, 288230376151711744, !dbg !6254
  %tobool35 = icmp ne i64 %and34, 0, !dbg !6254
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !6254

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !6254

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub38 = sub i64 %15, 1, !dbg !6254
  %and39 = and i64 %sub38, 144115188075855872, !dbg !6254
  %tobool40 = icmp ne i64 %and39, 0, !dbg !6254
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !6254

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !6254

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub43 = sub i64 %16, 1, !dbg !6254
  %and44 = and i64 %sub43, 72057594037927936, !dbg !6254
  %tobool45 = icmp ne i64 %and44, 0, !dbg !6254
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !6254

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !6254

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub48 = sub i64 %17, 1, !dbg !6254
  %and49 = and i64 %sub48, 36028797018963968, !dbg !6254
  %tobool50 = icmp ne i64 %and49, 0, !dbg !6254
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !6254

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !6254

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub53 = sub i64 %18, 1, !dbg !6254
  %and54 = and i64 %sub53, 18014398509481984, !dbg !6254
  %tobool55 = icmp ne i64 %and54, 0, !dbg !6254
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !6254

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !6254

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub58 = sub i64 %19, 1, !dbg !6254
  %and59 = and i64 %sub58, 9007199254740992, !dbg !6254
  %tobool60 = icmp ne i64 %and59, 0, !dbg !6254
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !6254

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !6254

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub63 = sub i64 %20, 1, !dbg !6254
  %and64 = and i64 %sub63, 4503599627370496, !dbg !6254
  %tobool65 = icmp ne i64 %and64, 0, !dbg !6254
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !6254

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !6254

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub68 = sub i64 %21, 1, !dbg !6254
  %and69 = and i64 %sub68, 2251799813685248, !dbg !6254
  %tobool70 = icmp ne i64 %and69, 0, !dbg !6254
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !6254

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !6254

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub73 = sub i64 %22, 1, !dbg !6254
  %and74 = and i64 %sub73, 1125899906842624, !dbg !6254
  %tobool75 = icmp ne i64 %and74, 0, !dbg !6254
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !6254

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !6254

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub78 = sub i64 %23, 1, !dbg !6254
  %and79 = and i64 %sub78, 562949953421312, !dbg !6254
  %tobool80 = icmp ne i64 %and79, 0, !dbg !6254
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !6254

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !6254

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub83 = sub i64 %24, 1, !dbg !6254
  %and84 = and i64 %sub83, 281474976710656, !dbg !6254
  %tobool85 = icmp ne i64 %and84, 0, !dbg !6254
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !6254

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !6254

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub88 = sub i64 %25, 1, !dbg !6254
  %and89 = and i64 %sub88, 140737488355328, !dbg !6254
  %tobool90 = icmp ne i64 %and89, 0, !dbg !6254
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !6254

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !6254

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub93 = sub i64 %26, 1, !dbg !6254
  %and94 = and i64 %sub93, 70368744177664, !dbg !6254
  %tobool95 = icmp ne i64 %and94, 0, !dbg !6254
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !6254

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !6254

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub98 = sub i64 %27, 1, !dbg !6254
  %and99 = and i64 %sub98, 35184372088832, !dbg !6254
  %tobool100 = icmp ne i64 %and99, 0, !dbg !6254
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !6254

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !6254

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub103 = sub i64 %28, 1, !dbg !6254
  %and104 = and i64 %sub103, 17592186044416, !dbg !6254
  %tobool105 = icmp ne i64 %and104, 0, !dbg !6254
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !6254

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !6254

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub108 = sub i64 %29, 1, !dbg !6254
  %and109 = and i64 %sub108, 8796093022208, !dbg !6254
  %tobool110 = icmp ne i64 %and109, 0, !dbg !6254
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !6254

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !6254

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub113 = sub i64 %30, 1, !dbg !6254
  %and114 = and i64 %sub113, 4398046511104, !dbg !6254
  %tobool115 = icmp ne i64 %and114, 0, !dbg !6254
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !6254

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !6254

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub118 = sub i64 %31, 1, !dbg !6254
  %and119 = and i64 %sub118, 2199023255552, !dbg !6254
  %tobool120 = icmp ne i64 %and119, 0, !dbg !6254
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !6254

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !6254

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub123 = sub i64 %32, 1, !dbg !6254
  %and124 = and i64 %sub123, 1099511627776, !dbg !6254
  %tobool125 = icmp ne i64 %and124, 0, !dbg !6254
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !6254

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !6254

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub128 = sub i64 %33, 1, !dbg !6254
  %and129 = and i64 %sub128, 549755813888, !dbg !6254
  %tobool130 = icmp ne i64 %and129, 0, !dbg !6254
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !6254

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !6254

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub133 = sub i64 %34, 1, !dbg !6254
  %and134 = and i64 %sub133, 274877906944, !dbg !6254
  %tobool135 = icmp ne i64 %and134, 0, !dbg !6254
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !6254

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !6254

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub138 = sub i64 %35, 1, !dbg !6254
  %and139 = and i64 %sub138, 137438953472, !dbg !6254
  %tobool140 = icmp ne i64 %and139, 0, !dbg !6254
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !6254

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !6254

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub143 = sub i64 %36, 1, !dbg !6254
  %and144 = and i64 %sub143, 68719476736, !dbg !6254
  %tobool145 = icmp ne i64 %and144, 0, !dbg !6254
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !6254

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !6254

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub148 = sub i64 %37, 1, !dbg !6254
  %and149 = and i64 %sub148, 34359738368, !dbg !6254
  %tobool150 = icmp ne i64 %and149, 0, !dbg !6254
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !6254

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !6254

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub153 = sub i64 %38, 1, !dbg !6254
  %and154 = and i64 %sub153, 17179869184, !dbg !6254
  %tobool155 = icmp ne i64 %and154, 0, !dbg !6254
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !6254

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !6254

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub158 = sub i64 %39, 1, !dbg !6254
  %and159 = and i64 %sub158, 8589934592, !dbg !6254
  %tobool160 = icmp ne i64 %and159, 0, !dbg !6254
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !6254

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !6254

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub163 = sub i64 %40, 1, !dbg !6254
  %and164 = and i64 %sub163, 4294967296, !dbg !6254
  %tobool165 = icmp ne i64 %and164, 0, !dbg !6254
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !6254

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !6254

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub168 = sub i64 %41, 1, !dbg !6254
  %and169 = and i64 %sub168, 2147483648, !dbg !6254
  %tobool170 = icmp ne i64 %and169, 0, !dbg !6254
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !6254

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !6254

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub173 = sub i64 %42, 1, !dbg !6254
  %and174 = and i64 %sub173, 1073741824, !dbg !6254
  %tobool175 = icmp ne i64 %and174, 0, !dbg !6254
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !6254

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !6254

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub178 = sub i64 %43, 1, !dbg !6254
  %and179 = and i64 %sub178, 536870912, !dbg !6254
  %tobool180 = icmp ne i64 %and179, 0, !dbg !6254
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !6254

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !6254

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub183 = sub i64 %44, 1, !dbg !6254
  %and184 = and i64 %sub183, 268435456, !dbg !6254
  %tobool185 = icmp ne i64 %and184, 0, !dbg !6254
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !6254

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !6254

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub188 = sub i64 %45, 1, !dbg !6254
  %and189 = and i64 %sub188, 134217728, !dbg !6254
  %tobool190 = icmp ne i64 %and189, 0, !dbg !6254
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !6254

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !6254

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub193 = sub i64 %46, 1, !dbg !6254
  %and194 = and i64 %sub193, 67108864, !dbg !6254
  %tobool195 = icmp ne i64 %and194, 0, !dbg !6254
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !6254

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !6254

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub198 = sub i64 %47, 1, !dbg !6254
  %and199 = and i64 %sub198, 33554432, !dbg !6254
  %tobool200 = icmp ne i64 %and199, 0, !dbg !6254
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !6254

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !6254

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub203 = sub i64 %48, 1, !dbg !6254
  %and204 = and i64 %sub203, 16777216, !dbg !6254
  %tobool205 = icmp ne i64 %and204, 0, !dbg !6254
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !6254

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !6254

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub208 = sub i64 %49, 1, !dbg !6254
  %and209 = and i64 %sub208, 8388608, !dbg !6254
  %tobool210 = icmp ne i64 %and209, 0, !dbg !6254
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !6254

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !6254

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub213 = sub i64 %50, 1, !dbg !6254
  %and214 = and i64 %sub213, 4194304, !dbg !6254
  %tobool215 = icmp ne i64 %and214, 0, !dbg !6254
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !6254

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !6254

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub218 = sub i64 %51, 1, !dbg !6254
  %and219 = and i64 %sub218, 2097152, !dbg !6254
  %tobool220 = icmp ne i64 %and219, 0, !dbg !6254
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !6254

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !6254

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub223 = sub i64 %52, 1, !dbg !6254
  %and224 = and i64 %sub223, 1048576, !dbg !6254
  %tobool225 = icmp ne i64 %and224, 0, !dbg !6254
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !6254

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !6254

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub228 = sub i64 %53, 1, !dbg !6254
  %and229 = and i64 %sub228, 524288, !dbg !6254
  %tobool230 = icmp ne i64 %and229, 0, !dbg !6254
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !6254

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !6254

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub233 = sub i64 %54, 1, !dbg !6254
  %and234 = and i64 %sub233, 262144, !dbg !6254
  %tobool235 = icmp ne i64 %and234, 0, !dbg !6254
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !6254

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !6254

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub238 = sub i64 %55, 1, !dbg !6254
  %and239 = and i64 %sub238, 131072, !dbg !6254
  %tobool240 = icmp ne i64 %and239, 0, !dbg !6254
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !6254

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !6254

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub243 = sub i64 %56, 1, !dbg !6254
  %and244 = and i64 %sub243, 65536, !dbg !6254
  %tobool245 = icmp ne i64 %and244, 0, !dbg !6254
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !6254

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !6254

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub248 = sub i64 %57, 1, !dbg !6254
  %and249 = and i64 %sub248, 32768, !dbg !6254
  %tobool250 = icmp ne i64 %and249, 0, !dbg !6254
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !6254

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !6254

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub253 = sub i64 %58, 1, !dbg !6254
  %and254 = and i64 %sub253, 16384, !dbg !6254
  %tobool255 = icmp ne i64 %and254, 0, !dbg !6254
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !6254

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !6254

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub258 = sub i64 %59, 1, !dbg !6254
  %and259 = and i64 %sub258, 8192, !dbg !6254
  %tobool260 = icmp ne i64 %and259, 0, !dbg !6254
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !6254

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !6254

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub263 = sub i64 %60, 1, !dbg !6254
  %and264 = and i64 %sub263, 4096, !dbg !6254
  %tobool265 = icmp ne i64 %and264, 0, !dbg !6254
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !6254

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !6254

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub268 = sub i64 %61, 1, !dbg !6254
  %and269 = and i64 %sub268, 2048, !dbg !6254
  %tobool270 = icmp ne i64 %and269, 0, !dbg !6254
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !6254

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !6254

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub273 = sub i64 %62, 1, !dbg !6254
  %and274 = and i64 %sub273, 1024, !dbg !6254
  %tobool275 = icmp ne i64 %and274, 0, !dbg !6254
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !6254

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !6254

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub278 = sub i64 %63, 1, !dbg !6254
  %and279 = and i64 %sub278, 512, !dbg !6254
  %tobool280 = icmp ne i64 %and279, 0, !dbg !6254
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !6254

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !6254

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub283 = sub i64 %64, 1, !dbg !6254
  %and284 = and i64 %sub283, 256, !dbg !6254
  %tobool285 = icmp ne i64 %and284, 0, !dbg !6254
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !6254

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !6254

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub288 = sub i64 %65, 1, !dbg !6254
  %and289 = and i64 %sub288, 128, !dbg !6254
  %tobool290 = icmp ne i64 %and289, 0, !dbg !6254
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !6254

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !6254

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub293 = sub i64 %66, 1, !dbg !6254
  %and294 = and i64 %sub293, 64, !dbg !6254
  %tobool295 = icmp ne i64 %and294, 0, !dbg !6254
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !6254

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !6254

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub298 = sub i64 %67, 1, !dbg !6254
  %and299 = and i64 %sub298, 32, !dbg !6254
  %tobool300 = icmp ne i64 %and299, 0, !dbg !6254
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !6254

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !6254

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub303 = sub i64 %68, 1, !dbg !6254
  %and304 = and i64 %sub303, 16, !dbg !6254
  %tobool305 = icmp ne i64 %and304, 0, !dbg !6254
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !6254

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !6254

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub308 = sub i64 %69, 1, !dbg !6254
  %and309 = and i64 %sub308, 8, !dbg !6254
  %tobool310 = icmp ne i64 %and309, 0, !dbg !6254
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !6254

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !6254

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub313 = sub i64 %70, 1, !dbg !6254
  %and314 = and i64 %sub313, 4, !dbg !6254
  %tobool315 = icmp ne i64 %and314, 0, !dbg !6254
  %71 = zext i1 %tobool315 to i64, !dbg !6254
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !6254
  br label %cond.end, !dbg !6254

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !6254
  br label %cond.end317, !dbg !6254

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !6254
  br label %cond.end319, !dbg !6254

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !6254
  br label %cond.end321, !dbg !6254

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !6254
  br label %cond.end323, !dbg !6254

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !6254
  br label %cond.end325, !dbg !6254

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !6254
  br label %cond.end327, !dbg !6254

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !6254
  br label %cond.end329, !dbg !6254

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !6254
  br label %cond.end331, !dbg !6254

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !6254
  br label %cond.end333, !dbg !6254

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !6254
  br label %cond.end335, !dbg !6254

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !6254
  br label %cond.end337, !dbg !6254

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !6254
  br label %cond.end339, !dbg !6254

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !6254
  br label %cond.end341, !dbg !6254

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !6254
  br label %cond.end343, !dbg !6254

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !6254
  br label %cond.end345, !dbg !6254

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !6254
  br label %cond.end347, !dbg !6254

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !6254
  br label %cond.end349, !dbg !6254

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !6254
  br label %cond.end351, !dbg !6254

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !6254
  br label %cond.end353, !dbg !6254

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !6254
  br label %cond.end355, !dbg !6254

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !6254
  br label %cond.end357, !dbg !6254

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !6254
  br label %cond.end359, !dbg !6254

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !6254
  br label %cond.end361, !dbg !6254

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !6254
  br label %cond.end363, !dbg !6254

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !6254
  br label %cond.end365, !dbg !6254

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !6254
  br label %cond.end367, !dbg !6254

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !6254
  br label %cond.end369, !dbg !6254

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !6254
  br label %cond.end371, !dbg !6254

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !6254
  br label %cond.end373, !dbg !6254

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !6254
  br label %cond.end375, !dbg !6254

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !6254
  br label %cond.end377, !dbg !6254

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !6254
  br label %cond.end379, !dbg !6254

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !6254
  br label %cond.end381, !dbg !6254

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !6254
  br label %cond.end383, !dbg !6254

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !6254
  br label %cond.end385, !dbg !6254

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !6254
  br label %cond.end387, !dbg !6254

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !6254
  br label %cond.end389, !dbg !6254

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !6254
  br label %cond.end391, !dbg !6254

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !6254
  br label %cond.end393, !dbg !6254

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !6254
  br label %cond.end395, !dbg !6254

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !6254
  br label %cond.end397, !dbg !6254

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !6254
  br label %cond.end399, !dbg !6254

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !6254
  br label %cond.end401, !dbg !6254

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !6254
  br label %cond.end403, !dbg !6254

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !6254
  br label %cond.end405, !dbg !6254

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !6254
  br label %cond.end407, !dbg !6254

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !6254
  br label %cond.end409, !dbg !6254

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !6254
  br label %cond.end411, !dbg !6254

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !6254
  br label %cond.end413, !dbg !6254

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !6254
  br label %cond.end415, !dbg !6254

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !6254
  br label %cond.end417, !dbg !6254

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !6254
  br label %cond.end419, !dbg !6254

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !6254
  br label %cond.end421, !dbg !6254

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !6254
  br label %cond.end423, !dbg !6254

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !6254
  br label %cond.end425, !dbg !6254

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !6254
  br label %cond.end427, !dbg !6254

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !6254
  br label %cond.end429, !dbg !6254

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !6254
  br label %cond.end431, !dbg !6254

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !6254
  br label %cond.end433, !dbg !6254

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !6254
  br label %cond.end435, !dbg !6254

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !6254
  br label %cond.end437, !dbg !6254

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !6254
  br label %cond.end440, !dbg !6254

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !6254

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !6254
  br label %cond.end444, !dbg !6254

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !6254
  %sub443 = sub i64 %72, 1, !dbg !6254
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !6254
  br label %cond.end444, !dbg !6254

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !6254
  %sub446 = sub i32 %cond445, 12, !dbg !6255
  %add = add i32 %sub446, 1, !dbg !6256
  store i32 %add, i32* %retval, align 4, !dbg !6257
  br label %return, !dbg !6257

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !6258
  %dec = add i64 %73, -1, !dbg !6258
  store i64 %dec, i64* %size.addr, align 8, !dbg !6258
  %74 = load i64, i64* %size.addr, align 8, !dbg !6259
  %shr = lshr i64 %74, 12, !dbg !6259
  store i64 %shr, i64* %size.addr, align 8, !dbg !6259
  %75 = load i64, i64* %size.addr, align 8, !dbg !6260
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6237
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !6261
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !6262
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #13, !dbg !6261, !srcloc !6263
  store i32 %78, i32* %bitpos.i, align 4, !dbg !6261
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !6264
  %add.i = add i32 %79, 1, !dbg !6265
  store i32 %add.i, i32* %retval, align 4, !dbg !6266
  br label %return, !dbg !6266

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !6267
  ret i32 %80, !dbg !6267
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !6268 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6229, metadata !DIExpression()), !dbg !6272
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6236, metadata !DIExpression()), !dbg !6274
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6275, metadata !DIExpression()), !dbg !6276
  %0 = load i64, i64* %n.addr, align 8, !dbg !6277
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6274
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !6278
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !6279
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #13, !dbg !6278, !srcloc !6263
  store i32 %3, i32* %bitpos.i, align 4, !dbg !6278
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !6280
  %add.i = add i32 %4, 1, !dbg !6281
  %sub = sub i32 %add.i, 1, !dbg !6282
  ret i32 %sub, !dbg !6283
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !6284 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !6288, metadata !DIExpression()), !dbg !6289
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !6290, metadata !DIExpression()), !dbg !6291
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6292, metadata !DIExpression()), !dbg !6293
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  %0 = load i8*, i8** %object.addr, align 8, !dbg !6296
  ret i8* %0, !dbg !6297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drxk_release(%struct.dvb_frontend* %fe) #0 !dbg !6298 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.drxk_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6299, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !6301, metadata !DIExpression()), !dbg !6302
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6303
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6304
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6304
  %2 = bitcast i8* %1 to %struct.drxk_state*, !dbg !6303
  store %struct.drxk_state* %2, %struct.drxk_state** %state, align 8, !dbg !6302
  br label %do.body, !dbg !6305

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @debug, align 4, !dbg !6306
  %cmp = icmp uge i32 %3, 1, !dbg !6306
  br i1 %cmp, label %if.then, label %if.end, !dbg !6309

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.drxk_release, i64 0, i64 0)) #8, !dbg !6306
  br label %if.end, !dbg !6306

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6309

do.end:                                           ; preds = %if.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6310
  %fw = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 109, !dbg !6311
  %5 = load %struct.firmware*, %struct.firmware** %fw, align 8, !dbg !6311
  call void @release_firmware(%struct.firmware* %5) #9, !dbg !6312
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6313
  %7 = bitcast %struct.drxk_state* %6 to i8*, !dbg !6313
  call void @kfree(i8* %7) #9, !dbg !6314
  ret void, !dbg !6315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxk_sleep(%struct.dvb_frontend* %fe) #0 !dbg !6316 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.drxk_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6317, metadata !DIExpression()), !dbg !6318
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !6319, metadata !DIExpression()), !dbg !6320
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6321
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6322
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6322
  %2 = bitcast i8* %1 to %struct.drxk_state*, !dbg !6321
  store %struct.drxk_state* %2, %struct.drxk_state** %state, align 8, !dbg !6320
  br label %do.body, !dbg !6323

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @debug, align 4, !dbg !6324
  %cmp = icmp uge i32 %3, 1, !dbg !6324
  br i1 %cmp, label %if.then, label %if.end, !dbg !6327

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.drxk_sleep, i64 0, i64 0)) #8, !dbg !6324
  br label %if.end, !dbg !6324

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6327

do.end:                                           ; preds = %if.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6328
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 27, !dbg !6330
  %5 = load i32, i32* %m_drxk_state, align 4, !dbg !6330
  %cmp1 = icmp eq i32 %5, 5, !dbg !6331
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6332

if.then2:                                         ; preds = %do.end
  store i32 -19, i32* %retval, align 4, !dbg !6333
  br label %return, !dbg !6333

if.end3:                                          ; preds = %do.end
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6334
  %m_drxk_state4 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 27, !dbg !6336
  %7 = load i32, i32* %m_drxk_state4, align 4, !dbg !6336
  %cmp5 = icmp eq i32 %7, 0, !dbg !6337
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6338

if.then6:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !6339
  br label %return, !dbg !6339

if.end7:                                          ; preds = %if.end3
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6340
  %call8 = call i32 @shut_down(%struct.drxk_state* %8) #9, !dbg !6341
  store i32 0, i32* %retval, align 4, !dbg !6342
  br label %return, !dbg !6342

return:                                           ; preds = %if.end7, %if.then6, %if.then2
  %9 = load i32, i32* %retval, align 4, !dbg !6343
  ret i32 %9, !dbg !6343
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxk_set_parameters(%struct.dvb_frontend* %fe) #0 !dbg !6344 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  %delsys = alloca i32, align 4
  %old_delsys = alloca i32, align 4
  %state = alloca %struct.drxk_state*, align 8
  %IF = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6345, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !6347, metadata !DIExpression()), !dbg !6348
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6349
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !6350
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !6348
  call void @llvm.dbg.declare(metadata i32* %delsys, metadata !6351, metadata !DIExpression()), !dbg !6352
  %1 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6353
  %delivery_system = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %1, i32 0, i32 15, !dbg !6354
  %2 = load i32, i32* %delivery_system, align 4, !dbg !6354
  store i32 %2, i32* %delsys, align 4, !dbg !6352
  call void @llvm.dbg.declare(metadata i32* %old_delsys, metadata !6355, metadata !DIExpression()), !dbg !6356
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !6357, metadata !DIExpression()), !dbg !6358
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6359
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 3, !dbg !6360
  %4 = load i8*, i8** %demodulator_priv, align 8, !dbg !6360
  %5 = bitcast i8* %4 to %struct.drxk_state*, !dbg !6359
  store %struct.drxk_state* %5, %struct.drxk_state** %state, align 8, !dbg !6358
  call void @llvm.dbg.declare(metadata i32* %IF, metadata !6361, metadata !DIExpression()), !dbg !6362
  br label %do.body, !dbg !6363

do.body:                                          ; preds = %entry
  %6 = load i32, i32* @debug, align 4, !dbg !6364
  %cmp = icmp uge i32 %6, 1, !dbg !6364
  br i1 %cmp, label %if.then, label %if.end, !dbg !6367

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.drxk_set_parameters, i64 0, i64 0)) #8, !dbg !6364
  br label %if.end, !dbg !6364

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6367

do.end:                                           ; preds = %if.end
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6368
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 27, !dbg !6370
  %8 = load i32, i32* %m_drxk_state, align 4, !dbg !6370
  %cmp1 = icmp eq i32 %8, 5, !dbg !6371
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6372

if.then2:                                         ; preds = %do.end
  store i32 -19, i32* %retval, align 4, !dbg !6373
  br label %return, !dbg !6373

if.end3:                                          ; preds = %do.end
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6374
  %m_drxk_state4 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %9, i32 0, i32 27, !dbg !6376
  %10 = load i32, i32* %m_drxk_state4, align 4, !dbg !6376
  %cmp5 = icmp eq i32 %10, 0, !dbg !6377
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6378

if.then6:                                         ; preds = %if.end3
  store i32 -11, i32* %retval, align 4, !dbg !6379
  br label %return, !dbg !6379

if.end7:                                          ; preds = %if.end3
  %11 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6380
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %11, i32 0, i32 1, !dbg !6382
  %tuner_ops = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops, i32 0, i32 30, !dbg !6383
  %get_if_frequency = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops, i32 0, i32 11, !dbg !6384
  %12 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %get_if_frequency, align 8, !dbg !6384
  %tobool = icmp ne i32 (%struct.dvb_frontend*, i32*)* %12, null, !dbg !6380
  br i1 %tobool, label %if.end10, label %if.then8, !dbg !6385

if.then8:                                         ; preds = %if.end7
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.16, i64 0, i64 0)) #8, !dbg !6386
  store i32 -22, i32* %retval, align 4, !dbg !6388
  br label %return, !dbg !6388

if.end10:                                         ; preds = %if.end7
  %13 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6389
  %ops11 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %13, i32 0, i32 1, !dbg !6391
  %i2c_gate_ctrl = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops11, i32 0, i32 26, !dbg !6392
  %14 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %i2c_gate_ctrl, align 8, !dbg !6392
  %tobool12 = icmp ne i32 (%struct.dvb_frontend*, i32)* %14, null, !dbg !6389
  br i1 %tobool12, label %if.then13, label %if.end17, !dbg !6393

if.then13:                                        ; preds = %if.end10
  %15 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6394
  %ops14 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %15, i32 0, i32 1, !dbg !6395
  %i2c_gate_ctrl15 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops14, i32 0, i32 26, !dbg !6396
  %16 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %i2c_gate_ctrl15, align 8, !dbg !6396
  %17 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6397
  %call16 = call i32 %16(%struct.dvb_frontend* %17, i32 1) #9, !dbg !6394
  br label %if.end17, !dbg !6394

if.end17:                                         ; preds = %if.then13, %if.end10
  %18 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6398
  %ops18 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %18, i32 0, i32 1, !dbg !6400
  %tuner_ops19 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops18, i32 0, i32 30, !dbg !6401
  %set_params = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops19, i32 0, i32 6, !dbg !6402
  %19 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %set_params, align 8, !dbg !6402
  %tobool20 = icmp ne i32 (%struct.dvb_frontend*)* %19, null, !dbg !6398
  br i1 %tobool20, label %if.then21, label %if.end26, !dbg !6403

if.then21:                                        ; preds = %if.end17
  %20 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6404
  %ops22 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %20, i32 0, i32 1, !dbg !6405
  %tuner_ops23 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops22, i32 0, i32 30, !dbg !6406
  %set_params24 = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops23, i32 0, i32 6, !dbg !6407
  %21 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %set_params24, align 8, !dbg !6407
  %22 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6408
  %call25 = call i32 %21(%struct.dvb_frontend* %22) #9, !dbg !6404
  br label %if.end26, !dbg !6404

if.end26:                                         ; preds = %if.then21, %if.end17
  %23 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6409
  %ops27 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %23, i32 0, i32 1, !dbg !6411
  %i2c_gate_ctrl28 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops27, i32 0, i32 26, !dbg !6412
  %24 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %i2c_gate_ctrl28, align 8, !dbg !6412
  %tobool29 = icmp ne i32 (%struct.dvb_frontend*, i32)* %24, null, !dbg !6409
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !6413

if.then30:                                        ; preds = %if.end26
  %25 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6414
  %ops31 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %25, i32 0, i32 1, !dbg !6415
  %i2c_gate_ctrl32 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops31, i32 0, i32 26, !dbg !6416
  %26 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %i2c_gate_ctrl32, align 8, !dbg !6416
  %27 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6417
  %call33 = call i32 %26(%struct.dvb_frontend* %27, i32 0) #9, !dbg !6414
  br label %if.end34, !dbg !6414

if.end34:                                         ; preds = %if.then30, %if.end26
  %28 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6418
  %props = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %28, i32 0, i32 1, !dbg !6419
  %delivery_system35 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props, i32 0, i32 15, !dbg !6420
  %29 = load i32, i32* %delivery_system35, align 4, !dbg !6420
  store i32 %29, i32* %old_delsys, align 4, !dbg !6421
  %30 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6422
  %props36 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %30, i32 0, i32 1, !dbg !6423
  %31 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6424
  %32 = bitcast %struct.dtv_frontend_properties* %props36 to i8*, !dbg !6425
  %33 = bitcast %struct.dtv_frontend_properties* %31 to i8*, !dbg !6425
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 4 %33, i64 456, i1 false), !dbg !6425
  %34 = load i32, i32* %old_delsys, align 4, !dbg !6426
  %35 = load i32, i32* %delsys, align 4, !dbg !6428
  %cmp37 = icmp ne i32 %34, %35, !dbg !6429
  br i1 %cmp37, label %if.then38, label %if.end56, !dbg !6430

if.then38:                                        ; preds = %if.end34
  %36 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6431
  %call39 = call i32 @shut_down(%struct.drxk_state* %36) #9, !dbg !6433
  %37 = load i32, i32* %delsys, align 4, !dbg !6434
  switch i32 %37, label %sw.default [
    i32 1, label %sw.bb
    i32 18, label %sw.bb
    i32 3, label %sw.bb51
  ], !dbg !6435

sw.bb:                                            ; preds = %if.then38, %if.then38
  %38 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6436
  %m_has_dvbc = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %38, i32 0, i32 12, !dbg !6439
  %39 = load i8, i8* %m_has_dvbc, align 2, !dbg !6439
  %tobool40 = trunc i8 %39 to i1, !dbg !6439
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !6440

if.then41:                                        ; preds = %sw.bb
  store i32 -22, i32* %retval, align 4, !dbg !6441
  br label %return, !dbg !6441

if.end42:                                         ; preds = %sw.bb
  %40 = load i32, i32* %delsys, align 4, !dbg !6442
  %cmp43 = icmp eq i32 %40, 18, !dbg !6443
  %41 = zext i1 %cmp43 to i64, !dbg !6444
  %cond = select i1 %cmp43, i32 1, i32 0, !dbg !6444
  %tobool44 = icmp ne i32 %cond, 0, !dbg !6444
  %42 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6445
  %m_itut_annex_c = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %42, i32 0, i32 54, !dbg !6446
  %frombool = zext i1 %tobool44 to i8, !dbg !6447
  store i8 %frombool, i8* %m_itut_annex_c, align 2, !dbg !6447
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6448
  %m_itut_annex_c45 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %43, i32 0, i32 54, !dbg !6450
  %44 = load i8, i8* %m_itut_annex_c45, align 2, !dbg !6450
  %tobool46 = trunc i8 %44 to i1, !dbg !6450
  br i1 %tobool46, label %if.then47, label %if.else, !dbg !6451

if.then47:                                        ; preds = %if.end42
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6452
  %call48 = call i32 @setoperation_mode(%struct.drxk_state* %45, i32 3) #9, !dbg !6453
  br label %if.end50, !dbg !6453

if.else:                                          ; preds = %if.end42
  %46 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6454
  %call49 = call i32 @setoperation_mode(%struct.drxk_state* %46, i32 1) #9, !dbg !6455
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then47
  br label %sw.epilog, !dbg !6456

sw.bb51:                                          ; preds = %if.then38
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6457
  %m_has_dvbt = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %47, i32 0, i32 11, !dbg !6459
  %48 = load i8, i8* %m_has_dvbt, align 1, !dbg !6459
  %tobool52 = trunc i8 %48 to i1, !dbg !6459
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !6460

if.then53:                                        ; preds = %sw.bb51
  store i32 -22, i32* %retval, align 4, !dbg !6461
  br label %return, !dbg !6461

if.end54:                                         ; preds = %sw.bb51
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6462
  %call55 = call i32 @setoperation_mode(%struct.drxk_state* %49, i32 4) #9, !dbg !6463
  br label %sw.epilog, !dbg !6464

sw.default:                                       ; preds = %if.then38
  store i32 -22, i32* %retval, align 4, !dbg !6465
  br label %return, !dbg !6465

sw.epilog:                                        ; preds = %if.end54, %if.end50
  br label %if.end56, !dbg !6466

if.end56:                                         ; preds = %sw.epilog, %if.end34
  %50 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6467
  %ops57 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %50, i32 0, i32 1, !dbg !6468
  %tuner_ops58 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops57, i32 0, i32 30, !dbg !6469
  %get_if_frequency59 = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops58, i32 0, i32 11, !dbg !6470
  %51 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %get_if_frequency59, align 8, !dbg !6470
  %52 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6471
  %call60 = call i32 %51(%struct.dvb_frontend* %52, i32* %IF) #9, !dbg !6467
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6472
  %54 = load i32, i32* %IF, align 4, !dbg !6473
  %call61 = call i32 @start(%struct.drxk_state* %53, i32 0, i32 %54) #9, !dbg !6474
  %55 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6475
  %strength = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %55, i32 0, i32 42, !dbg !6476
  %stat = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength, i32 0, i32 1, !dbg !6477
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat, i64 0, i64 0, !dbg !6475
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 0, !dbg !6478
  store i8 2, i8* %scale, align 1, !dbg !6479
  %56 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6480
  %cnr = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %56, i32 0, i32 43, !dbg !6481
  %stat62 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr, i32 0, i32 1, !dbg !6482
  %arrayidx63 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat62, i64 0, i64 0, !dbg !6480
  %scale64 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx63, i32 0, i32 0, !dbg !6483
  store i8 0, i8* %scale64, align 1, !dbg !6484
  %57 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6485
  %block_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %57, i32 0, i32 48, !dbg !6486
  %stat65 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error, i32 0, i32 1, !dbg !6487
  %arrayidx66 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat65, i64 0, i64 0, !dbg !6485
  %scale67 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx66, i32 0, i32 0, !dbg !6488
  store i8 0, i8* %scale67, align 1, !dbg !6489
  %58 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6490
  %block_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %58, i32 0, i32 49, !dbg !6491
  %stat68 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count, i32 0, i32 1, !dbg !6492
  %arrayidx69 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat68, i64 0, i64 0, !dbg !6490
  %scale70 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx69, i32 0, i32 0, !dbg !6493
  store i8 0, i8* %scale70, align 1, !dbg !6494
  %59 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6495
  %pre_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %59, i32 0, i32 44, !dbg !6496
  %stat71 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_error, i32 0, i32 1, !dbg !6497
  %arrayidx72 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat71, i64 0, i64 0, !dbg !6495
  %scale73 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx72, i32 0, i32 0, !dbg !6498
  store i8 0, i8* %scale73, align 1, !dbg !6499
  %60 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6500
  %pre_bit_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %60, i32 0, i32 45, !dbg !6501
  %stat74 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_count, i32 0, i32 1, !dbg !6502
  %arrayidx75 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat74, i64 0, i64 0, !dbg !6500
  %scale76 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx75, i32 0, i32 0, !dbg !6503
  store i8 0, i8* %scale76, align 1, !dbg !6504
  %61 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6505
  %post_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %61, i32 0, i32 46, !dbg !6506
  %stat77 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error, i32 0, i32 1, !dbg !6507
  %arrayidx78 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat77, i64 0, i64 0, !dbg !6505
  %scale79 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx78, i32 0, i32 0, !dbg !6508
  store i8 0, i8* %scale79, align 1, !dbg !6509
  %62 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6510
  %post_bit_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %62, i32 0, i32 47, !dbg !6511
  %stat80 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count, i32 0, i32 1, !dbg !6512
  %arrayidx81 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat80, i64 0, i64 0, !dbg !6510
  %scale82 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx81, i32 0, i32 0, !dbg !6513
  store i8 0, i8* %scale82, align 1, !dbg !6514
  store i32 0, i32* %retval, align 4, !dbg !6515
  br label %return, !dbg !6515

return:                                           ; preds = %if.end56, %sw.default, %if.then53, %if.then41, %if.then8, %if.then6, %if.then2
  %63 = load i32, i32* %retval, align 4, !dbg !6516
  ret i32 %63, !dbg !6516
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxk_get_tune_settings(%struct.dvb_frontend* %fe, %struct.dvb_frontend_tune_settings* %sets) #0 !dbg !6517 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %sets.addr = alloca %struct.dvb_frontend_tune_settings*, align 8
  %state = alloca %struct.drxk_state*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6518, metadata !DIExpression()), !dbg !6519
  store %struct.dvb_frontend_tune_settings* %sets, %struct.dvb_frontend_tune_settings** %sets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend_tune_settings** %sets.addr, metadata !6520, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !6522, metadata !DIExpression()), !dbg !6523
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6524
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6525
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6525
  %2 = bitcast i8* %1 to %struct.drxk_state*, !dbg !6524
  store %struct.drxk_state* %2, %struct.drxk_state** %state, align 8, !dbg !6523
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !6526, metadata !DIExpression()), !dbg !6527
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6528
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 8, !dbg !6529
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !6527
  br label %do.body, !dbg !6530

do.body:                                          ; preds = %entry
  %4 = load i32, i32* @debug, align 4, !dbg !6531
  %cmp = icmp uge i32 %4, 1, !dbg !6531
  br i1 %cmp, label %if.then, label %if.end, !dbg !6534

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.drxk_get_tune_settings, i64 0, i64 0)) #8, !dbg !6531
  br label %if.end, !dbg !6531

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6534

do.end:                                           ; preds = %if.end
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6535
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %5, i32 0, i32 27, !dbg !6537
  %6 = load i32, i32* %m_drxk_state, align 4, !dbg !6537
  %cmp1 = icmp eq i32 %6, 5, !dbg !6538
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6539

if.then2:                                         ; preds = %do.end
  store i32 -19, i32* %retval, align 4, !dbg !6540
  br label %return, !dbg !6540

if.end3:                                          ; preds = %do.end
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6541
  %m_drxk_state4 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 27, !dbg !6543
  %8 = load i32, i32* %m_drxk_state4, align 4, !dbg !6543
  %cmp5 = icmp eq i32 %8, 0, !dbg !6544
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6545

if.then6:                                         ; preds = %if.end3
  store i32 -11, i32* %retval, align 4, !dbg !6546
  br label %return, !dbg !6546

if.end7:                                          ; preds = %if.end3
  %9 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6547
  %delivery_system = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %9, i32 0, i32 15, !dbg !6548
  %10 = load i32, i32* %delivery_system, align 4, !dbg !6548
  switch i32 %10, label %sw.default [
    i32 1, label %sw.bb
    i32 18, label %sw.bb
    i32 3, label %sw.bb
  ], !dbg !6549

sw.bb:                                            ; preds = %if.end7, %if.end7, %if.end7
  %11 = load %struct.dvb_frontend_tune_settings*, %struct.dvb_frontend_tune_settings** %sets.addr, align 8, !dbg !6550
  %min_delay_ms = getelementptr inbounds %struct.dvb_frontend_tune_settings, %struct.dvb_frontend_tune_settings* %11, i32 0, i32 0, !dbg !6552
  store i32 3000, i32* %min_delay_ms, align 4, !dbg !6553
  %12 = load %struct.dvb_frontend_tune_settings*, %struct.dvb_frontend_tune_settings** %sets.addr, align 8, !dbg !6554
  %max_drift = getelementptr inbounds %struct.dvb_frontend_tune_settings, %struct.dvb_frontend_tune_settings* %12, i32 0, i32 2, !dbg !6555
  store i32 0, i32* %max_drift, align 4, !dbg !6556
  %13 = load %struct.dvb_frontend_tune_settings*, %struct.dvb_frontend_tune_settings** %sets.addr, align 8, !dbg !6557
  %step_size = getelementptr inbounds %struct.dvb_frontend_tune_settings, %struct.dvb_frontend_tune_settings* %13, i32 0, i32 1, !dbg !6558
  store i32 0, i32* %step_size, align 4, !dbg !6559
  store i32 0, i32* %retval, align 4, !dbg !6560
  br label %return, !dbg !6560

sw.default:                                       ; preds = %if.end7
  store i32 -22, i32* %retval, align 4, !dbg !6561
  br label %return, !dbg !6561

return:                                           ; preds = %sw.default, %sw.bb, %if.then6, %if.then2
  %14 = load i32, i32* %retval, align 4, !dbg !6562
  ret i32 %14, !dbg !6562
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxk_read_status(%struct.dvb_frontend* %fe, i32* %status) #0 !dbg !6563 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %status.addr = alloca i32*, align 8
  %state = alloca %struct.drxk_state*, align 8
  %rc = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6564, metadata !DIExpression()), !dbg !6565
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !6566, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !6568, metadata !DIExpression()), !dbg !6569
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6570
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6571
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6571
  %2 = bitcast i8* %1 to %struct.drxk_state*, !dbg !6570
  store %struct.drxk_state* %2, %struct.drxk_state** %state, align 8, !dbg !6569
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !6572, metadata !DIExpression()), !dbg !6573
  br label %do.body, !dbg !6574

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @debug, align 4, !dbg !6575
  %cmp = icmp uge i32 %3, 1, !dbg !6575
  br i1 %cmp, label %if.then, label %if.end, !dbg !6578

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.drxk_read_status, i64 0, i64 0)) #8, !dbg !6575
  br label %if.end, !dbg !6575

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6578

do.end:                                           ; preds = %if.end
  %4 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6579
  %call1 = call i32 @drxk_get_stats(%struct.dvb_frontend* %4) #9, !dbg !6580
  store i32 %call1, i32* %rc, align 4, !dbg !6581
  %5 = load i32, i32* %rc, align 4, !dbg !6582
  %cmp2 = icmp slt i32 %5, 0, !dbg !6584
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6585

if.then3:                                         ; preds = %do.end
  %6 = load i32, i32* %rc, align 4, !dbg !6586
  store i32 %6, i32* %retval, align 4, !dbg !6587
  br label %return, !dbg !6587

if.end4:                                          ; preds = %do.end
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6588
  %fe_status = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 106, !dbg !6589
  %8 = load i32, i32* %fe_status, align 4, !dbg !6589
  %9 = load i32*, i32** %status.addr, align 8, !dbg !6590
  store i32 %8, i32* %9, align 4, !dbg !6591
  store i32 0, i32* %retval, align 4, !dbg !6592
  br label %return, !dbg !6592

return:                                           ; preds = %if.end4, %if.then3
  %10 = load i32, i32* %retval, align 4, !dbg !6593
  ret i32 %10, !dbg !6593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxk_read_signal_strength(%struct.dvb_frontend* %fe, i16* %strength) #0 !dbg !6594 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %strength.addr = alloca i16*, align 8
  %state = alloca %struct.drxk_state*, align 8
  %c = alloca %struct.dtv_frontend_properties*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6595, metadata !DIExpression()), !dbg !6596
  store i16* %strength, i16** %strength.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %strength.addr, metadata !6597, metadata !DIExpression()), !dbg !6598
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !6599, metadata !DIExpression()), !dbg !6600
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6601
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6602
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6602
  %2 = bitcast i8* %1 to %struct.drxk_state*, !dbg !6601
  store %struct.drxk_state* %2, %struct.drxk_state** %state, align 8, !dbg !6600
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %c, metadata !6603, metadata !DIExpression()), !dbg !6604
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6605
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 8, !dbg !6606
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %c, align 8, !dbg !6604
  br label %do.body, !dbg !6607

do.body:                                          ; preds = %entry
  %4 = load i32, i32* @debug, align 4, !dbg !6608
  %cmp = icmp uge i32 %4, 1, !dbg !6608
  br i1 %cmp, label %if.then, label %if.end, !dbg !6611

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.drxk_read_signal_strength, i64 0, i64 0)) #8, !dbg !6608
  br label %if.end, !dbg !6608

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6611

do.end:                                           ; preds = %if.end
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6612
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %5, i32 0, i32 27, !dbg !6614
  %6 = load i32, i32* %m_drxk_state, align 4, !dbg !6614
  %cmp1 = icmp eq i32 %6, 5, !dbg !6615
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6616

if.then2:                                         ; preds = %do.end
  store i32 -19, i32* %retval, align 4, !dbg !6617
  br label %return, !dbg !6617

if.end3:                                          ; preds = %do.end
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6618
  %m_drxk_state4 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 27, !dbg !6620
  %8 = load i32, i32* %m_drxk_state4, align 4, !dbg !6620
  %cmp5 = icmp eq i32 %8, 0, !dbg !6621
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6622

if.then6:                                         ; preds = %if.end3
  store i32 -11, i32* %retval, align 4, !dbg !6623
  br label %return, !dbg !6623

if.end7:                                          ; preds = %if.end3
  %9 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6624
  %strength8 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %9, i32 0, i32 42, !dbg !6625
  %stat = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength8, i32 0, i32 1, !dbg !6626
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat, i64 0, i64 0, !dbg !6624
  %10 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 1, !dbg !6627
  %uvalue = bitcast %union.anon.0* %10 to i64*, !dbg !6627
  %11 = load i64, i64* %uvalue, align 1, !dbg !6627
  %conv = trunc i64 %11 to i16, !dbg !6624
  %12 = load i16*, i16** %strength.addr, align 8, !dbg !6628
  store i16 %conv, i16* %12, align 2, !dbg !6629
  store i32 0, i32* %retval, align 4, !dbg !6630
  br label %return, !dbg !6630

return:                                           ; preds = %if.end7, %if.then6, %if.then2
  %13 = load i32, i32* %retval, align 4, !dbg !6631
  ret i32 %13, !dbg !6631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxk_read_snr(%struct.dvb_frontend* %fe, i16* %snr) #0 !dbg !6632 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %snr.addr = alloca i16*, align 8
  %state = alloca %struct.drxk_state*, align 8
  %snr2 = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6633, metadata !DIExpression()), !dbg !6634
  store i16* %snr, i16** %snr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %snr.addr, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !6637, metadata !DIExpression()), !dbg !6638
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6639
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6640
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6640
  %2 = bitcast i8* %1 to %struct.drxk_state*, !dbg !6639
  store %struct.drxk_state* %2, %struct.drxk_state** %state, align 8, !dbg !6638
  call void @llvm.dbg.declare(metadata i32* %snr2, metadata !6641, metadata !DIExpression()), !dbg !6642
  br label %do.body, !dbg !6643

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @debug, align 4, !dbg !6644
  %cmp = icmp uge i32 %3, 1, !dbg !6644
  br i1 %cmp, label %if.then, label %if.end, !dbg !6647

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.drxk_read_snr, i64 0, i64 0)) #8, !dbg !6644
  br label %if.end, !dbg !6644

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6647

do.end:                                           ; preds = %if.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6648
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 27, !dbg !6650
  %5 = load i32, i32* %m_drxk_state, align 4, !dbg !6650
  %cmp1 = icmp eq i32 %5, 5, !dbg !6651
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6652

if.then2:                                         ; preds = %do.end
  store i32 -19, i32* %retval, align 4, !dbg !6653
  br label %return, !dbg !6653

if.end3:                                          ; preds = %do.end
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6654
  %m_drxk_state4 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 27, !dbg !6656
  %7 = load i32, i32* %m_drxk_state4, align 4, !dbg !6656
  %cmp5 = icmp eq i32 %7, 0, !dbg !6657
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6658

if.then6:                                         ; preds = %if.end3
  store i32 -11, i32* %retval, align 4, !dbg !6659
  br label %return, !dbg !6659

if.end7:                                          ; preds = %if.end3
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6660
  %call8 = call i32 @get_signal_to_noise(%struct.drxk_state* %8, i32* %snr2) #9, !dbg !6661
  %9 = load i32, i32* %snr2, align 4, !dbg !6662
  %cmp9 = icmp slt i32 %9, 0, !dbg !6664
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !6665

if.then10:                                        ; preds = %if.end7
  store i32 0, i32* %snr2, align 4, !dbg !6666
  br label %if.end11, !dbg !6667

if.end11:                                         ; preds = %if.then10, %if.end7
  %10 = load i32, i32* %snr2, align 4, !dbg !6668
  %and = and i32 %10, 65535, !dbg !6669
  %conv = trunc i32 %and to i16, !dbg !6668
  %11 = load i16*, i16** %snr.addr, align 8, !dbg !6670
  store i16 %conv, i16* %11, align 2, !dbg !6671
  store i32 0, i32* %retval, align 4, !dbg !6672
  br label %return, !dbg !6672

return:                                           ; preds = %if.end11, %if.then6, %if.then2
  %12 = load i32, i32* %retval, align 4, !dbg !6673
  ret i32 %12, !dbg !6673
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxk_read_ucblocks(%struct.dvb_frontend* %fe, i32* %ucblocks) #0 !dbg !6674 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %ucblocks.addr = alloca i32*, align 8
  %state = alloca %struct.drxk_state*, align 8
  %err = alloca i16, align 2
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6675, metadata !DIExpression()), !dbg !6676
  store i32* %ucblocks, i32** %ucblocks.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ucblocks.addr, metadata !6677, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !6679, metadata !DIExpression()), !dbg !6680
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6681
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6682
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6682
  %2 = bitcast i8* %1 to %struct.drxk_state*, !dbg !6681
  store %struct.drxk_state* %2, %struct.drxk_state** %state, align 8, !dbg !6680
  call void @llvm.dbg.declare(metadata i16* %err, metadata !6683, metadata !DIExpression()), !dbg !6684
  br label %do.body, !dbg !6685

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @debug, align 4, !dbg !6686
  %cmp = icmp uge i32 %3, 1, !dbg !6686
  br i1 %cmp, label %if.then, label %if.end, !dbg !6689

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.drxk_read_ucblocks, i64 0, i64 0)) #8, !dbg !6686
  br label %if.end, !dbg !6686

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6689

do.end:                                           ; preds = %if.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6690
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 27, !dbg !6692
  %5 = load i32, i32* %m_drxk_state, align 4, !dbg !6692
  %cmp1 = icmp eq i32 %5, 5, !dbg !6693
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6694

if.then2:                                         ; preds = %do.end
  store i32 -19, i32* %retval, align 4, !dbg !6695
  br label %return, !dbg !6695

if.end3:                                          ; preds = %do.end
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6696
  %m_drxk_state4 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 27, !dbg !6698
  %7 = load i32, i32* %m_drxk_state4, align 4, !dbg !6698
  %cmp5 = icmp eq i32 %7, 0, !dbg !6699
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6700

if.then6:                                         ; preds = %if.end3
  store i32 -11, i32* %retval, align 4, !dbg !6701
  br label %return, !dbg !6701

if.end7:                                          ; preds = %if.end3
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6702
  %call8 = call i32 @dvbtqam_get_acc_pkt_err(%struct.drxk_state* %8, i16* %err) #9, !dbg !6703
  %9 = load i16, i16* %err, align 2, !dbg !6704
  %conv = zext i16 %9 to i32, !dbg !6705
  %10 = load i32*, i32** %ucblocks.addr, align 8, !dbg !6706
  store i32 %conv, i32* %10, align 4, !dbg !6707
  store i32 0, i32* %retval, align 4, !dbg !6708
  br label %return, !dbg !6708

return:                                           ; preds = %if.end7, %if.then6, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6709
  ret i32 %11, !dbg !6709
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxk_gate_ctrl(%struct.dvb_frontend* %fe, i32 %enable) #0 !dbg !6710 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %enable.addr = alloca i32, align 4
  %state = alloca %struct.drxk_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6711, metadata !DIExpression()), !dbg !6712
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !6713, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !6715, metadata !DIExpression()), !dbg !6716
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6717
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6718
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6718
  %2 = bitcast i8* %1 to %struct.drxk_state*, !dbg !6717
  store %struct.drxk_state* %2, %struct.drxk_state** %state, align 8, !dbg !6716
  br label %do.body, !dbg !6719

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @debug, align 4, !dbg !6720
  %cmp = icmp uge i32 %3, 1, !dbg !6720
  br i1 %cmp, label %if.then, label %if.end, !dbg !6723

if.then:                                          ; preds = %do.body
  %4 = load i32, i32* %enable.addr, align 4, !dbg !6720
  %tobool = icmp ne i32 %4, 0, !dbg !6720
  %5 = zext i1 %tobool to i64, !dbg !6720
  %cond = select i1 %tobool, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), !dbg !6720
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.drxk_gate_ctrl, i64 0, i64 0), i8* %cond) #8, !dbg !6720
  br label %if.end, !dbg !6720

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6723

do.end:                                           ; preds = %if.end
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6724
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 27, !dbg !6726
  %7 = load i32, i32* %m_drxk_state, align 4, !dbg !6726
  %cmp1 = icmp eq i32 %7, 5, !dbg !6727
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !6728

if.then2:                                         ; preds = %do.end
  store i32 -19, i32* %retval, align 4, !dbg !6729
  br label %return, !dbg !6729

if.end3:                                          ; preds = %do.end
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !6730
  %9 = load i32, i32* %enable.addr, align 4, !dbg !6731
  %tobool4 = icmp ne i32 %9, 0, !dbg !6731
  %10 = zext i1 %tobool4 to i64, !dbg !6731
  %cond5 = select i1 %tobool4, i32 1, i32 0, !dbg !6731
  %tobool6 = icmp ne i32 %cond5, 0, !dbg !6731
  %call7 = call i32 @ConfigureI2CBridge(%struct.drxk_state* %8, i1 zeroext %tobool6) #9, !dbg !6732
  store i32 %call7, i32* %retval, align 4, !dbg !6733
  br label %return, !dbg !6733

return:                                           ; preds = %if.end3, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !6734
  ret i32 %11, !dbg !6734
}

; Function Attrs: noredzone
declare dso_local void @release_firmware(%struct.firmware*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @shut_down(%struct.drxk_state* %state) #0 !dbg !6735 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !6736, metadata !DIExpression()), !dbg !6737
  br label %do.body, !dbg !6738

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !6739
  %cmp = icmp uge i32 %0, 1, !dbg !6739
  br i1 %cmp, label %if.then, label %if.end, !dbg !6742

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.shut_down, i64 0, i64 0)) #8, !dbg !6739
  br label %if.end, !dbg !6739

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6742

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6743
  %call1 = call i32 @mpegts_stop(%struct.drxk_state* %1) #9, !dbg !6744
  ret i32 0, !dbg !6745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mpegts_stop(%struct.drxk_state* %state) #0 !dbg !6746 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  %fec_oc_snc_mode = alloca i16, align 2
  %fec_oc_ipr_mode = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !6747, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6749, metadata !DIExpression()), !dbg !6750
  store i32 0, i32* %status, align 4, !dbg !6750
  call void @llvm.dbg.declare(metadata i16* %fec_oc_snc_mode, metadata !6751, metadata !DIExpression()), !dbg !6752
  store i16 0, i16* %fec_oc_snc_mode, align 2, !dbg !6752
  call void @llvm.dbg.declare(metadata i16* %fec_oc_ipr_mode, metadata !6753, metadata !DIExpression()), !dbg !6754
  store i16 0, i16* %fec_oc_ipr_mode, align 2, !dbg !6754
  br label %do.body, !dbg !6755

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !6756
  %cmp = icmp uge i32 %0, 1, !dbg !6756
  br i1 %cmp, label %if.then, label %if.end, !dbg !6759

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.mpegts_stop, i64 0, i64 0)) #8, !dbg !6756
  br label %if.end, !dbg !6756

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6759

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6760
  %call1 = call i32 @read16(%struct.drxk_state* %1, i32 29622336, i16* %fec_oc_snc_mode) #9, !dbg !6761
  store i32 %call1, i32* %status, align 4, !dbg !6762
  %2 = load i32, i32* %status, align 4, !dbg !6763
  %cmp2 = icmp slt i32 %2, 0, !dbg !6765
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6766

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !6767

if.end4:                                          ; preds = %do.end
  %3 = load i16, i16* %fec_oc_snc_mode, align 2, !dbg !6768
  %conv = zext i16 %3 to i32, !dbg !6768
  %or = or i32 %conv, 16, !dbg !6768
  %conv5 = trunc i32 %or to i16, !dbg !6768
  store i16 %conv5, i16* %fec_oc_snc_mode, align 2, !dbg !6768
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6769
  %5 = load i16, i16* %fec_oc_snc_mode, align 2, !dbg !6770
  %call6 = call i32 @write16(%struct.drxk_state* %4, i32 29622336, i16 zeroext %5) #9, !dbg !6771
  store i32 %call6, i32* %status, align 4, !dbg !6772
  %6 = load i32, i32* %status, align 4, !dbg !6773
  %cmp7 = icmp slt i32 %6, 0, !dbg !6775
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !6776

if.then9:                                         ; preds = %if.end4
  br label %error, !dbg !6777

if.end10:                                         ; preds = %if.end4
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6778
  %call11 = call i32 @read16(%struct.drxk_state* %7, i32 29622344, i16* %fec_oc_ipr_mode) #9, !dbg !6779
  store i32 %call11, i32* %status, align 4, !dbg !6780
  %8 = load i32, i32* %status, align 4, !dbg !6781
  %cmp12 = icmp slt i32 %8, 0, !dbg !6783
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !6784

if.then14:                                        ; preds = %if.end10
  br label %error, !dbg !6785

if.end15:                                         ; preds = %if.end10
  %9 = load i16, i16* %fec_oc_ipr_mode, align 2, !dbg !6786
  %conv16 = zext i16 %9 to i32, !dbg !6786
  %or17 = or i32 %conv16, 4, !dbg !6786
  %conv18 = trunc i32 %or17 to i16, !dbg !6786
  store i16 %conv18, i16* %fec_oc_ipr_mode, align 2, !dbg !6786
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6787
  %11 = load i16, i16* %fec_oc_ipr_mode, align 2, !dbg !6788
  %call19 = call i32 @write16(%struct.drxk_state* %10, i32 29622344, i16 zeroext %11) #9, !dbg !6789
  store i32 %call19, i32* %status, align 4, !dbg !6790
  br label %error, !dbg !6791

error:                                            ; preds = %if.end15, %if.then14, %if.then9, %if.then3
  call void @llvm.dbg.label(metadata !6792), !dbg !6793
  %12 = load i32, i32* %status, align 4, !dbg !6794
  %cmp20 = icmp slt i32 %12, 0, !dbg !6796
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !6797

if.then22:                                        ; preds = %error
  %13 = load i32, i32* %status, align 4, !dbg !6798
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.mpegts_stop, i64 0, i64 0)) #8, !dbg !6798
  br label %if.end24, !dbg !6798

if.end24:                                         ; preds = %if.then22, %error
  %14 = load i32, i32* %status, align 4, !dbg !6799
  ret i32 %14, !dbg !6800
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @read16(%struct.drxk_state* %state, i32 %reg, i16* %data) #0 !dbg !6801 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i16*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !6804, metadata !DIExpression()), !dbg !6805
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !6806, metadata !DIExpression()), !dbg !6807
  store i16* %data, i16** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %data.addr, metadata !6808, metadata !DIExpression()), !dbg !6809
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6810
  %1 = load i32, i32* %reg.addr, align 4, !dbg !6811
  %2 = load i16*, i16** %data.addr, align 8, !dbg !6812
  %call = call i32 @read16_flags(%struct.drxk_state* %0, i32 %1, i16* %2, i8 zeroext 0) #9, !dbg !6813
  ret i32 %call, !dbg !6814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @write16(%struct.drxk_state* %state, i32 %reg, i16 zeroext %data) #0 !dbg !6815 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !6818, metadata !DIExpression()), !dbg !6819
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !6820, metadata !DIExpression()), !dbg !6821
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !6822, metadata !DIExpression()), !dbg !6823
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6824
  %1 = load i32, i32* %reg.addr, align 4, !dbg !6825
  %2 = load i16, i16* %data.addr, align 2, !dbg !6826
  %call = call i32 @write16_flags(%struct.drxk_state* %0, i32 %1, i16 zeroext %2, i8 zeroext 0) #9, !dbg !6827
  ret i32 %call, !dbg !6828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @read16_flags(%struct.drxk_state* %state, i32 %reg, i16* %data, i8 zeroext %flags) #0 !dbg !6829 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i16*, align 8
  %flags.addr = alloca i8, align 1
  %status = alloca i32, align 4
  %adr = alloca i8, align 1
  %mm1 = alloca [4 x i8], align 1
  %mm2 = alloca [2 x i8], align 1
  %len = alloca i8, align 1
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !6832, metadata !DIExpression()), !dbg !6833
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !6834, metadata !DIExpression()), !dbg !6835
  store i16* %data, i16** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %data.addr, metadata !6836, metadata !DIExpression()), !dbg !6837
  store i8 %flags, i8* %flags.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flags.addr, metadata !6838, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6840, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.declare(metadata i8* %adr, metadata !6842, metadata !DIExpression()), !dbg !6843
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6844
  %demod_address = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %0, i32 0, i32 4, !dbg !6845
  %1 = load i8, i8* %demod_address, align 8, !dbg !6845
  store i8 %1, i8* %adr, align 1, !dbg !6843
  call void @llvm.dbg.declare(metadata [4 x i8]* %mm1, metadata !6846, metadata !DIExpression()), !dbg !6848
  call void @llvm.dbg.declare(metadata [2 x i8]* %mm2, metadata !6849, metadata !DIExpression()), !dbg !6851
  call void @llvm.dbg.declare(metadata i8* %len, metadata !6852, metadata !DIExpression()), !dbg !6853
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6854
  %single_master = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 102, !dbg !6856
  %3 = load i8, i8* %single_master, align 1, !dbg !6856
  %tobool = trunc i8 %3 to i1, !dbg !6856
  br i1 %tobool, label %if.then, label %if.end, !dbg !6857

if.then:                                          ; preds = %entry
  %4 = load i8, i8* %flags.addr, align 1, !dbg !6858
  %conv = zext i8 %4 to i32, !dbg !6858
  %or = or i32 %conv, 192, !dbg !6858
  %conv1 = trunc i32 %or to i8, !dbg !6858
  store i8 %conv1, i8* %flags.addr, align 1, !dbg !6858
  br label %if.end, !dbg !6859

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %reg.addr, align 4, !dbg !6860
  %and = and i32 %5, -63897728, !dbg !6860
  %cmp = icmp ne i32 %and, 0, !dbg !6860
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !6862

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i8, i8* %flags.addr, align 1, !dbg !6863
  %conv3 = zext i8 %6 to i32, !dbg !6863
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !6864
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !6865

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %reg.addr, align 4, !dbg !6866
  %shl = shl i32 %7, 1, !dbg !6868
  %and7 = and i32 %shl, 255, !dbg !6869
  %or8 = or i32 %and7, 1, !dbg !6870
  %conv9 = trunc i32 %or8 to i8, !dbg !6871
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 0, !dbg !6872
  store i8 %conv9, i8* %arrayidx, align 1, !dbg !6873
  %8 = load i32, i32* %reg.addr, align 4, !dbg !6874
  %shr = lshr i32 %8, 16, !dbg !6875
  %and10 = and i32 %shr, 255, !dbg !6876
  %conv11 = trunc i32 %and10 to i8, !dbg !6877
  %arrayidx12 = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 1, !dbg !6878
  store i8 %conv11, i8* %arrayidx12, align 1, !dbg !6879
  %9 = load i32, i32* %reg.addr, align 4, !dbg !6880
  %shr13 = lshr i32 %9, 24, !dbg !6881
  %and14 = and i32 %shr13, 255, !dbg !6882
  %10 = load i8, i8* %flags.addr, align 1, !dbg !6883
  %conv15 = zext i8 %10 to i32, !dbg !6883
  %or16 = or i32 %and14, %conv15, !dbg !6884
  %conv17 = trunc i32 %or16 to i8, !dbg !6885
  %arrayidx18 = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 2, !dbg !6886
  store i8 %conv17, i8* %arrayidx18, align 1, !dbg !6887
  %11 = load i32, i32* %reg.addr, align 4, !dbg !6888
  %shr19 = lshr i32 %11, 7, !dbg !6889
  %and20 = and i32 %shr19, 255, !dbg !6890
  %conv21 = trunc i32 %and20 to i8, !dbg !6891
  %arrayidx22 = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 3, !dbg !6892
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !6893
  store i8 4, i8* %len, align 1, !dbg !6894
  br label %if.end34, !dbg !6895

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i32, i32* %reg.addr, align 4, !dbg !6896
  %shl23 = shl i32 %12, 1, !dbg !6898
  %and24 = and i32 %shl23, 255, !dbg !6899
  %conv25 = trunc i32 %and24 to i8, !dbg !6900
  %arrayidx26 = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 0, !dbg !6901
  store i8 %conv25, i8* %arrayidx26, align 1, !dbg !6902
  %13 = load i32, i32* %reg.addr, align 4, !dbg !6903
  %shr27 = lshr i32 %13, 16, !dbg !6904
  %and28 = and i32 %shr27, 15, !dbg !6905
  %14 = load i32, i32* %reg.addr, align 4, !dbg !6906
  %shr29 = lshr i32 %14, 18, !dbg !6907
  %and30 = and i32 %shr29, 240, !dbg !6908
  %or31 = or i32 %and28, %and30, !dbg !6909
  %conv32 = trunc i32 %or31 to i8, !dbg !6910
  %arrayidx33 = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 1, !dbg !6911
  store i8 %conv32, i8* %arrayidx33, align 1, !dbg !6912
  store i8 2, i8* %len, align 1, !dbg !6913
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then6
  br label %do.body, !dbg !6914

do.body:                                          ; preds = %if.end34
  %15 = load i32, i32* @debug, align 4, !dbg !6915
  %cmp35 = icmp uge i32 %15, 2, !dbg !6915
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !6918

if.then37:                                        ; preds = %do.body
  %16 = load i32, i32* %reg.addr, align 4, !dbg !6915
  %17 = load i8, i8* %flags.addr, align 1, !dbg !6915
  %conv38 = zext i8 %17 to i32, !dbg !6915
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.read16_flags, i64 0, i64 0), i32 %16, i32 %conv38) #8, !dbg !6915
  br label %if.end39, !dbg !6915

if.end39:                                         ; preds = %if.then37, %do.body
  br label %do.end, !dbg !6918

do.end:                                           ; preds = %if.end39
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6919
  %19 = load i8, i8* %adr, align 1, !dbg !6920
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %mm1, i64 0, i64 0, !dbg !6921
  %20 = load i8, i8* %len, align 1, !dbg !6922
  %conv40 = zext i8 %20 to i32, !dbg !6922
  %arraydecay41 = getelementptr inbounds [2 x i8], [2 x i8]* %mm2, i64 0, i64 0, !dbg !6923
  %call42 = call i32 @i2c_read(%struct.drxk_state* %18, i8 zeroext %19, i8* %arraydecay, i32 %conv40, i8* %arraydecay41, i32 2) #9, !dbg !6924
  store i32 %call42, i32* %status, align 4, !dbg !6925
  %21 = load i32, i32* %status, align 4, !dbg !6926
  %cmp43 = icmp slt i32 %21, 0, !dbg !6928
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !6929

if.then45:                                        ; preds = %do.end
  %22 = load i32, i32* %status, align 4, !dbg !6930
  store i32 %22, i32* %retval, align 4, !dbg !6931
  br label %return, !dbg !6931

if.end46:                                         ; preds = %do.end
  %23 = load i16*, i16** %data.addr, align 8, !dbg !6932
  %tobool47 = icmp ne i16* %23, null, !dbg !6932
  br i1 %tobool47, label %if.then48, label %if.end56, !dbg !6934

if.then48:                                        ; preds = %if.end46
  %arrayidx49 = getelementptr [2 x i8], [2 x i8]* %mm2, i64 0, i64 0, !dbg !6935
  %24 = load i8, i8* %arrayidx49, align 1, !dbg !6935
  %conv50 = zext i8 %24 to i32, !dbg !6935
  %arrayidx51 = getelementptr [2 x i8], [2 x i8]* %mm2, i64 0, i64 1, !dbg !6936
  %25 = load i8, i8* %arrayidx51, align 1, !dbg !6936
  %conv52 = zext i8 %25 to i32, !dbg !6936
  %shl53 = shl i32 %conv52, 8, !dbg !6937
  %or54 = or i32 %conv50, %shl53, !dbg !6938
  %conv55 = trunc i32 %or54 to i16, !dbg !6935
  %26 = load i16*, i16** %data.addr, align 8, !dbg !6939
  store i16 %conv55, i16* %26, align 2, !dbg !6940
  br label %if.end56, !dbg !6941

if.end56:                                         ; preds = %if.then48, %if.end46
  store i32 0, i32* %retval, align 4, !dbg !6942
  br label %return, !dbg !6942

return:                                           ; preds = %if.end56, %if.then45
  %27 = load i32, i32* %retval, align 4, !dbg !6943
  ret i32 %27, !dbg !6943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @i2c_read(%struct.drxk_state* %state, i8 zeroext %adr, i8* %msg, i32 %len, i8* %answ, i32 %alen) #0 !dbg !6944 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %adr.addr = alloca i8, align 1
  %msg.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %answ.addr = alloca i8*, align 8
  %alen.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %msgs = alloca [2 x %struct.i2c_msg], align 16
  %i = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !6947, metadata !DIExpression()), !dbg !6948
  store i8 %adr, i8* %adr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adr.addr, metadata !6949, metadata !DIExpression()), !dbg !6950
  store i8* %msg, i8** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !6951, metadata !DIExpression()), !dbg !6952
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !6953, metadata !DIExpression()), !dbg !6954
  store i8* %answ, i8** %answ.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %answ.addr, metadata !6955, metadata !DIExpression()), !dbg !6956
  store i32 %alen, i32* %alen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alen.addr, metadata !6957, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6959, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.declare(metadata [2 x %struct.i2c_msg]* %msgs, metadata !6961, metadata !DIExpression()), !dbg !6963
  %arrayinit.begin = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msgs, i64 0, i64 0, !dbg !6964
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 0, !dbg !6965
  %0 = load i8, i8* %adr.addr, align 1, !dbg !6966
  %conv = zext i8 %0 to i16, !dbg !6966
  store i16 %conv, i16* %addr, align 16, !dbg !6965
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 1, !dbg !6965
  store i16 0, i16* %flags, align 2, !dbg !6965
  %len1 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 2, !dbg !6965
  %1 = load i32, i32* %len.addr, align 4, !dbg !6967
  %conv2 = trunc i32 %1 to i16, !dbg !6967
  store i16 %conv2, i16* %len1, align 4, !dbg !6965
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 3, !dbg !6965
  %2 = load i8*, i8** %msg.addr, align 8, !dbg !6968
  store i8* %2, i8** %buf, align 8, !dbg !6965
  %arrayinit.element = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i64 1, !dbg !6964
  %addr3 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 0, !dbg !6969
  %3 = load i8, i8* %adr.addr, align 1, !dbg !6970
  %conv4 = zext i8 %3 to i16, !dbg !6970
  store i16 %conv4, i16* %addr3, align 16, !dbg !6969
  %flags5 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 1, !dbg !6969
  store i16 1, i16* %flags5, align 2, !dbg !6969
  %len6 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 2, !dbg !6969
  %4 = load i32, i32* %alen.addr, align 4, !dbg !6971
  %conv7 = trunc i32 %4 to i16, !dbg !6971
  store i16 %conv7, i16* %len6, align 4, !dbg !6969
  %buf8 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 3, !dbg !6969
  %5 = load i8*, i8** %answ.addr, align 8, !dbg !6972
  store i8* %5, i8** %buf8, align 8, !dbg !6969
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !6973
  %arraydecay = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msgs, i64 0, i64 0, !dbg !6974
  %call = call i32 @drxk_i2c_transfer(%struct.drxk_state* %6, %struct.i2c_msg* %arraydecay, i32 2) #9, !dbg !6975
  store i32 %call, i32* %status, align 4, !dbg !6976
  %7 = load i32, i32* %status, align 4, !dbg !6977
  %cmp = icmp ne i32 %7, 2, !dbg !6979
  br i1 %cmp, label %if.then, label %if.end20, !dbg !6980

if.then:                                          ; preds = %entry
  %8 = load i32, i32* @debug, align 4, !dbg !6981
  %cmp10 = icmp ugt i32 %8, 2, !dbg !6984
  br i1 %cmp10, label %if.then12, label %if.end, !dbg !6985

if.then12:                                        ; preds = %if.then
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0)) #8, !dbg !6986
  br label %if.end, !dbg !6986

if.end:                                           ; preds = %if.then12, %if.then
  %9 = load i32, i32* %status, align 4, !dbg !6987
  %cmp14 = icmp sge i32 %9, 0, !dbg !6989
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !6990

if.then16:                                        ; preds = %if.end
  store i32 -5, i32* %status, align 4, !dbg !6991
  br label %if.end17, !dbg !6992

if.end17:                                         ; preds = %if.then16, %if.end
  %10 = load i8, i8* %adr.addr, align 1, !dbg !6993
  %conv18 = zext i8 %10 to i32, !dbg !6993
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0), i32 %conv18) #8, !dbg !6993
  %11 = load i32, i32* %status, align 4, !dbg !6994
  store i32 %11, i32* %retval, align 4, !dbg !6995
  br label %return, !dbg !6995

if.end20:                                         ; preds = %entry
  %12 = load i32, i32* @debug, align 4, !dbg !6996
  %cmp21 = icmp ugt i32 %12, 2, !dbg !6998
  br i1 %cmp21, label %if.then23, label %if.end46, !dbg !6999

if.then23:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7000, metadata !DIExpression()), !dbg !7002
  br label %do.body, !dbg !7003

do.body:                                          ; preds = %if.then23
  %13 = load i32, i32* @debug, align 4, !dbg !7004
  %cmp24 = icmp uge i32 %13, 2, !dbg !7004
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !7007

if.then26:                                        ; preds = %do.body
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.i2c_read, i64 0, i64 0)) #8, !dbg !7004
  br label %if.end28, !dbg !7004

if.end28:                                         ; preds = %if.then26, %do.body
  br label %do.end, !dbg !7007

do.end:                                           ; preds = %if.end28
  store i32 0, i32* %i, align 4, !dbg !7008
  br label %for.cond, !dbg !7010

for.cond:                                         ; preds = %for.inc, %do.end
  %14 = load i32, i32* %i, align 4, !dbg !7011
  %15 = load i32, i32* %len.addr, align 4, !dbg !7013
  %cmp29 = icmp slt i32 %14, %15, !dbg !7014
  br i1 %cmp29, label %for.body, label %for.end, !dbg !7015

for.body:                                         ; preds = %for.cond
  %16 = load i8*, i8** %msg.addr, align 8, !dbg !7016
  %17 = load i32, i32* %i, align 4, !dbg !7016
  %idxprom = sext i32 %17 to i64, !dbg !7016
  %arrayidx = getelementptr i8, i8* %16, i64 %idxprom, !dbg !7016
  %18 = load i8, i8* %arrayidx, align 1, !dbg !7016
  %conv31 = zext i8 %18 to i32, !dbg !7016
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i32 %conv31) #8, !dbg !7016
  br label %for.inc, !dbg !7016

for.inc:                                          ; preds = %for.body
  %19 = load i32, i32* %i, align 4, !dbg !7017
  %inc = add i32 %19, 1, !dbg !7017
  store i32 %inc, i32* %i, align 4, !dbg !7017
  br label %for.cond, !dbg !7018, !llvm.loop !7019

for.end:                                          ; preds = %for.cond
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0)) #8, !dbg !7021
  store i32 0, i32* %i, align 4, !dbg !7022
  br label %for.cond34, !dbg !7024

for.cond34:                                       ; preds = %for.inc42, %for.end
  %20 = load i32, i32* %i, align 4, !dbg !7025
  %21 = load i32, i32* %alen.addr, align 4, !dbg !7027
  %cmp35 = icmp slt i32 %20, %21, !dbg !7028
  br i1 %cmp35, label %for.body37, label %for.end44, !dbg !7029

for.body37:                                       ; preds = %for.cond34
  %22 = load i8*, i8** %answ.addr, align 8, !dbg !7030
  %23 = load i32, i32* %i, align 4, !dbg !7030
  %idxprom38 = sext i32 %23 to i64, !dbg !7030
  %arrayidx39 = getelementptr i8, i8* %22, i64 %idxprom38, !dbg !7030
  %24 = load i8, i8* %arrayidx39, align 1, !dbg !7030
  %conv40 = zext i8 %24 to i32, !dbg !7030
  %call41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i32 %conv40) #8, !dbg !7030
  br label %for.inc42, !dbg !7030

for.inc42:                                        ; preds = %for.body37
  %25 = load i32, i32* %i, align 4, !dbg !7031
  %inc43 = add i32 %25, 1, !dbg !7031
  store i32 %inc43, i32* %i, align 4, !dbg !7031
  br label %for.cond34, !dbg !7032, !llvm.loop !7033

for.end44:                                        ; preds = %for.cond34
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0)) #8, !dbg !7035
  br label %if.end46, !dbg !7036

if.end46:                                         ; preds = %for.end44, %if.end20
  store i32 0, i32* %retval, align 4, !dbg !7037
  br label %return, !dbg !7037

return:                                           ; preds = %if.end46, %if.end17
  %26 = load i32, i32* %retval, align 4, !dbg !7038
  ret i32 %26, !dbg !7038
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxk_i2c_transfer(%struct.drxk_state* %state, %struct.i2c_msg* %msgs, i32 %len) #0 !dbg !7039 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %msgs.addr = alloca %struct.i2c_msg*, align 8
  %len.addr = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !7042, metadata !DIExpression()), !dbg !7043
  store %struct.i2c_msg* %msgs, %struct.i2c_msg** %msgs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msgs.addr, metadata !7044, metadata !DIExpression()), !dbg !7045
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !7046, metadata !DIExpression()), !dbg !7047
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7048
  %drxk_i2c_exclusive_lock = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %0, i32 0, i32 99, !dbg !7050
  %1 = load i8, i8* %drxk_i2c_exclusive_lock, align 8, !dbg !7050
  %tobool = trunc i8 %1 to i1, !dbg !7050
  br i1 %tobool, label %if.then, label %if.else, !dbg !7051

if.then:                                          ; preds = %entry
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7052
  %i2c = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 3, !dbg !7053
  %3 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !7053
  %4 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !7054
  %5 = load i32, i32* %len.addr, align 4, !dbg !7055
  %call = call i32 @__i2c_transfer(%struct.i2c_adapter* %3, %struct.i2c_msg* %4, i32 %5) #9, !dbg !7056
  store i32 %call, i32* %retval, align 4, !dbg !7057
  br label %return, !dbg !7057

if.else:                                          ; preds = %entry
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7058
  %i2c1 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 3, !dbg !7059
  %7 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c1, align 8, !dbg !7059
  %8 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !7060
  %9 = load i32, i32* %len.addr, align 4, !dbg !7061
  %call2 = call i32 @i2c_transfer(%struct.i2c_adapter* %7, %struct.i2c_msg* %8, i32 %9) #9, !dbg !7062
  store i32 %call2, i32* %retval, align 4, !dbg !7063
  br label %return, !dbg !7063

return:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !7064
  ret i32 %10, !dbg !7064
}

; Function Attrs: noredzone
declare dso_local i32 @__i2c_transfer(%struct.i2c_adapter*, %struct.i2c_msg*, i32) #3

; Function Attrs: noredzone
declare dso_local i32 @i2c_transfer(%struct.i2c_adapter*, %struct.i2c_msg*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @write16_flags(%struct.drxk_state* %state, i32 %reg, i16 zeroext %data, i8 zeroext %flags) #0 !dbg !7065 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i16, align 2
  %flags.addr = alloca i8, align 1
  %adr = alloca i8, align 1
  %mm = alloca [6 x i8], align 1
  %len = alloca i8, align 1
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !7068, metadata !DIExpression()), !dbg !7069
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !7070, metadata !DIExpression()), !dbg !7071
  store i16 %data, i16* %data.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %data.addr, metadata !7072, metadata !DIExpression()), !dbg !7073
  store i8 %flags, i8* %flags.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flags.addr, metadata !7074, metadata !DIExpression()), !dbg !7075
  call void @llvm.dbg.declare(metadata i8* %adr, metadata !7076, metadata !DIExpression()), !dbg !7077
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7078
  %demod_address = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %0, i32 0, i32 4, !dbg !7079
  %1 = load i8, i8* %demod_address, align 8, !dbg !7079
  store i8 %1, i8* %adr, align 1, !dbg !7077
  call void @llvm.dbg.declare(metadata [6 x i8]* %mm, metadata !7080, metadata !DIExpression()), !dbg !7081
  call void @llvm.dbg.declare(metadata i8* %len, metadata !7082, metadata !DIExpression()), !dbg !7083
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7084
  %single_master = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 102, !dbg !7086
  %3 = load i8, i8* %single_master, align 1, !dbg !7086
  %tobool = trunc i8 %3 to i1, !dbg !7086
  br i1 %tobool, label %if.then, label %if.end, !dbg !7087

if.then:                                          ; preds = %entry
  %4 = load i8, i8* %flags.addr, align 1, !dbg !7088
  %conv = zext i8 %4 to i32, !dbg !7088
  %or = or i32 %conv, 192, !dbg !7088
  %conv1 = trunc i32 %or to i8, !dbg !7088
  store i8 %conv1, i8* %flags.addr, align 1, !dbg !7088
  br label %if.end, !dbg !7089

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %reg.addr, align 4, !dbg !7090
  %and = and i32 %5, -63897728, !dbg !7090
  %cmp = icmp ne i32 %and, 0, !dbg !7090
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !7092

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i8, i8* %flags.addr, align 1, !dbg !7093
  %conv3 = zext i8 %6 to i32, !dbg !7093
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !7094
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !7095

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %reg.addr, align 4, !dbg !7096
  %shl = shl i32 %7, 1, !dbg !7098
  %and7 = and i32 %shl, 255, !dbg !7099
  %or8 = or i32 %and7, 1, !dbg !7100
  %conv9 = trunc i32 %or8 to i8, !dbg !7101
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %mm, i64 0, i64 0, !dbg !7102
  store i8 %conv9, i8* %arrayidx, align 1, !dbg !7103
  %8 = load i32, i32* %reg.addr, align 4, !dbg !7104
  %shr = lshr i32 %8, 16, !dbg !7105
  %and10 = and i32 %shr, 255, !dbg !7106
  %conv11 = trunc i32 %and10 to i8, !dbg !7107
  %arrayidx12 = getelementptr [6 x i8], [6 x i8]* %mm, i64 0, i64 1, !dbg !7108
  store i8 %conv11, i8* %arrayidx12, align 1, !dbg !7109
  %9 = load i32, i32* %reg.addr, align 4, !dbg !7110
  %shr13 = lshr i32 %9, 24, !dbg !7111
  %and14 = and i32 %shr13, 255, !dbg !7112
  %10 = load i8, i8* %flags.addr, align 1, !dbg !7113
  %conv15 = zext i8 %10 to i32, !dbg !7113
  %or16 = or i32 %and14, %conv15, !dbg !7114
  %conv17 = trunc i32 %or16 to i8, !dbg !7115
  %arrayidx18 = getelementptr [6 x i8], [6 x i8]* %mm, i64 0, i64 2, !dbg !7116
  store i8 %conv17, i8* %arrayidx18, align 1, !dbg !7117
  %11 = load i32, i32* %reg.addr, align 4, !dbg !7118
  %shr19 = lshr i32 %11, 7, !dbg !7119
  %and20 = and i32 %shr19, 255, !dbg !7120
  %conv21 = trunc i32 %and20 to i8, !dbg !7121
  %arrayidx22 = getelementptr [6 x i8], [6 x i8]* %mm, i64 0, i64 3, !dbg !7122
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !7123
  store i8 4, i8* %len, align 1, !dbg !7124
  br label %if.end34, !dbg !7125

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i32, i32* %reg.addr, align 4, !dbg !7126
  %shl23 = shl i32 %12, 1, !dbg !7128
  %and24 = and i32 %shl23, 255, !dbg !7129
  %conv25 = trunc i32 %and24 to i8, !dbg !7130
  %arrayidx26 = getelementptr [6 x i8], [6 x i8]* %mm, i64 0, i64 0, !dbg !7131
  store i8 %conv25, i8* %arrayidx26, align 1, !dbg !7132
  %13 = load i32, i32* %reg.addr, align 4, !dbg !7133
  %shr27 = lshr i32 %13, 16, !dbg !7134
  %and28 = and i32 %shr27, 15, !dbg !7135
  %14 = load i32, i32* %reg.addr, align 4, !dbg !7136
  %shr29 = lshr i32 %14, 18, !dbg !7137
  %and30 = and i32 %shr29, 240, !dbg !7138
  %or31 = or i32 %and28, %and30, !dbg !7139
  %conv32 = trunc i32 %or31 to i8, !dbg !7140
  %arrayidx33 = getelementptr [6 x i8], [6 x i8]* %mm, i64 0, i64 1, !dbg !7141
  store i8 %conv32, i8* %arrayidx33, align 1, !dbg !7142
  store i8 2, i8* %len, align 1, !dbg !7143
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then6
  %15 = load i16, i16* %data.addr, align 2, !dbg !7144
  %conv35 = zext i16 %15 to i32, !dbg !7144
  %and36 = and i32 %conv35, 255, !dbg !7145
  %conv37 = trunc i32 %and36 to i8, !dbg !7144
  %16 = load i8, i8* %len, align 1, !dbg !7146
  %idxprom = zext i8 %16 to i64, !dbg !7147
  %arrayidx38 = getelementptr [6 x i8], [6 x i8]* %mm, i64 0, i64 %idxprom, !dbg !7147
  store i8 %conv37, i8* %arrayidx38, align 1, !dbg !7148
  %17 = load i16, i16* %data.addr, align 2, !dbg !7149
  %conv39 = zext i16 %17 to i32, !dbg !7149
  %shr40 = ashr i32 %conv39, 8, !dbg !7150
  %and41 = and i32 %shr40, 255, !dbg !7151
  %conv42 = trunc i32 %and41 to i8, !dbg !7152
  %18 = load i8, i8* %len, align 1, !dbg !7153
  %conv43 = zext i8 %18 to i32, !dbg !7153
  %add = add i32 %conv43, 1, !dbg !7154
  %idxprom44 = sext i32 %add to i64, !dbg !7155
  %arrayidx45 = getelementptr [6 x i8], [6 x i8]* %mm, i64 0, i64 %idxprom44, !dbg !7155
  store i8 %conv42, i8* %arrayidx45, align 1, !dbg !7156
  br label %do.body, !dbg !7157

do.body:                                          ; preds = %if.end34
  %19 = load i32, i32* @debug, align 4, !dbg !7158
  %cmp46 = icmp uge i32 %19, 2, !dbg !7158
  br i1 %cmp46, label %if.then48, label %if.end51, !dbg !7161

if.then48:                                        ; preds = %do.body
  %20 = load i32, i32* %reg.addr, align 4, !dbg !7158
  %21 = load i16, i16* %data.addr, align 2, !dbg !7158
  %conv49 = zext i16 %21 to i32, !dbg !7158
  %22 = load i8, i8* %flags.addr, align 1, !dbg !7158
  %conv50 = zext i8 %22 to i32, !dbg !7158
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.write16_flags, i64 0, i64 0), i32 %20, i32 %conv49, i32 %conv50) #8, !dbg !7158
  br label %if.end51, !dbg !7158

if.end51:                                         ; preds = %if.then48, %do.body
  br label %do.end, !dbg !7161

do.end:                                           ; preds = %if.end51
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7162
  %24 = load i8, i8* %adr, align 1, !dbg !7163
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %mm, i64 0, i64 0, !dbg !7164
  %25 = load i8, i8* %len, align 1, !dbg !7165
  %conv52 = zext i8 %25 to i32, !dbg !7165
  %add53 = add i32 %conv52, 2, !dbg !7166
  %call54 = call i32 @i2c_write(%struct.drxk_state* %23, i8 zeroext %24, i8* %arraydecay, i32 %add53) #9, !dbg !7167
  ret i32 %call54, !dbg !7168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @i2c_write(%struct.drxk_state* %state, i8 zeroext %adr, i8* %data, i32 %len) #0 !dbg !7169 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %adr.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %msg = alloca %struct.i2c_msg, align 8
  %i = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !7172, metadata !DIExpression()), !dbg !7173
  store i8 %adr, i8* %adr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adr.addr, metadata !7174, metadata !DIExpression()), !dbg !7175
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7176, metadata !DIExpression()), !dbg !7177
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !7178, metadata !DIExpression()), !dbg !7179
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7180, metadata !DIExpression()), !dbg !7181
  call void @llvm.dbg.declare(metadata %struct.i2c_msg* %msg, metadata !7182, metadata !DIExpression()), !dbg !7183
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg, i32 0, i32 0, !dbg !7184
  %0 = load i8, i8* %adr.addr, align 1, !dbg !7185
  %conv = zext i8 %0 to i16, !dbg !7185
  store i16 %conv, i16* %addr, align 8, !dbg !7184
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg, i32 0, i32 1, !dbg !7184
  store i16 0, i16* %flags, align 2, !dbg !7184
  %len1 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg, i32 0, i32 2, !dbg !7184
  %1 = load i32, i32* %len.addr, align 4, !dbg !7186
  %conv2 = trunc i32 %1 to i16, !dbg !7186
  store i16 %conv2, i16* %len1, align 4, !dbg !7184
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msg, i32 0, i32 3, !dbg !7184
  %2 = load i8*, i8** %data.addr, align 8, !dbg !7187
  store i8* %2, i8** %buf, align 8, !dbg !7184
  br label %do.body, !dbg !7188

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @debug, align 4, !dbg !7189
  %cmp = icmp uge i32 %3, 3, !dbg !7189
  br i1 %cmp, label %if.then, label %if.end, !dbg !7192

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.i2c_write, i64 0, i64 0)) #8, !dbg !7189
  br label %if.end, !dbg !7189

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !7192

do.end:                                           ; preds = %if.end
  %4 = load i32, i32* @debug, align 4, !dbg !7193
  %cmp4 = icmp ugt i32 %4, 2, !dbg !7195
  br i1 %cmp4, label %if.then6, label %if.end12, !dbg !7196

if.then6:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7197, metadata !DIExpression()), !dbg !7199
  store i32 0, i32* %i, align 4, !dbg !7200
  br label %for.cond, !dbg !7202

for.cond:                                         ; preds = %for.inc, %if.then6
  %5 = load i32, i32* %i, align 4, !dbg !7203
  %6 = load i32, i32* %len.addr, align 4, !dbg !7205
  %cmp7 = icmp slt i32 %5, %6, !dbg !7206
  br i1 %cmp7, label %for.body, label %for.end, !dbg !7207

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %data.addr, align 8, !dbg !7208
  %8 = load i32, i32* %i, align 4, !dbg !7208
  %idxprom = sext i32 %8 to i64, !dbg !7208
  %arrayidx = getelementptr i8, i8* %7, i64 %idxprom, !dbg !7208
  %9 = load i8, i8* %arrayidx, align 1, !dbg !7208
  %conv9 = zext i8 %9 to i32, !dbg !7208
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i32 %conv9) #8, !dbg !7208
  br label %for.inc, !dbg !7208

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !7209
  %inc = add i32 %10, 1, !dbg !7209
  store i32 %inc, i32* %i, align 4, !dbg !7209
  br label %for.cond, !dbg !7210, !llvm.loop !7211

for.end:                                          ; preds = %for.cond
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0)) #8, !dbg !7213
  br label %if.end12, !dbg !7214

if.end12:                                         ; preds = %for.end, %do.end
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7215
  %call13 = call i32 @drxk_i2c_transfer(%struct.drxk_state* %11, %struct.i2c_msg* %msg, i32 1) #9, !dbg !7216
  store i32 %call13, i32* %status, align 4, !dbg !7217
  %12 = load i32, i32* %status, align 4, !dbg !7218
  %cmp14 = icmp sge i32 %12, 0, !dbg !7220
  br i1 %cmp14, label %land.lhs.true, label %if.end19, !dbg !7221

land.lhs.true:                                    ; preds = %if.end12
  %13 = load i32, i32* %status, align 4, !dbg !7222
  %cmp16 = icmp ne i32 %13, 1, !dbg !7223
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !7224

if.then18:                                        ; preds = %land.lhs.true
  store i32 -5, i32* %status, align 4, !dbg !7225
  br label %if.end19, !dbg !7226

if.end19:                                         ; preds = %if.then18, %land.lhs.true, %if.end12
  %14 = load i32, i32* %status, align 4, !dbg !7227
  %cmp20 = icmp slt i32 %14, 0, !dbg !7229
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !7230

if.then22:                                        ; preds = %if.end19
  %15 = load i8, i8* %adr.addr, align 1, !dbg !7231
  %conv23 = zext i8 %15 to i32, !dbg !7231
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15, i64 0, i64 0), i32 %conv23) #8, !dbg !7231
  br label %if.end25, !dbg !7231

if.end25:                                         ; preds = %if.then22, %if.end19
  %16 = load i32, i32* %status, align 4, !dbg !7232
  ret i32 %16, !dbg !7233
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @setoperation_mode(%struct.drxk_state* %state, i32 %o_mode) #0 !dbg !7234 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %o_mode.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !7237, metadata !DIExpression()), !dbg !7238
  store i32 %o_mode, i32* %o_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %o_mode.addr, metadata !7239, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7241, metadata !DIExpression()), !dbg !7242
  store i32 0, i32* %status, align 4, !dbg !7242
  br label %do.body, !dbg !7243

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !7244
  %cmp = icmp uge i32 %0, 1, !dbg !7244
  br i1 %cmp, label %if.then, label %if.end, !dbg !7247

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.setoperation_mode, i64 0, i64 0)) #8, !dbg !7244
  br label %if.end, !dbg !7244

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !7247

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7248
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 8593095, i16 zeroext 0) #9, !dbg !7249
  store i32 %call1, i32* %status, align 4, !dbg !7250
  %2 = load i32, i32* %status, align 4, !dbg !7251
  %cmp2 = icmp slt i32 %2, 0, !dbg !7253
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7254

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !7255

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7256
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 28, !dbg !7258
  %4 = load i32, i32* %m_operation_mode, align 8, !dbg !7258
  %5 = load i32, i32* %o_mode.addr, align 4, !dbg !7259
  %cmp5 = icmp eq i32 %4, %5, !dbg !7260
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !7261

if.then6:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !7262
  br label %return, !dbg !7262

if.end7:                                          ; preds = %if.end4
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7263
  %m_operation_mode8 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 28, !dbg !7264
  %7 = load i32, i32* %m_operation_mode8, align 8, !dbg !7264
  switch i32 %7, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb9
    i32 1, label %sw.bb19
    i32 3, label %sw.bb19
    i32 2, label %sw.bb29
  ], !dbg !7265

sw.bb:                                            ; preds = %if.end7
  br label %sw.epilog, !dbg !7266

sw.bb9:                                           ; preds = %if.end7
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7268
  %call10 = call i32 @mpegts_stop(%struct.drxk_state* %8) #9, !dbg !7269
  store i32 %call10, i32* %status, align 4, !dbg !7270
  %9 = load i32, i32* %status, align 4, !dbg !7271
  %cmp11 = icmp slt i32 %9, 0, !dbg !7273
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !7274

if.then12:                                        ; preds = %sw.bb9
  br label %error, !dbg !7275

if.end13:                                         ; preds = %sw.bb9
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7276
  %call14 = call i32 @power_down_dvbt(%struct.drxk_state* %10, i1 zeroext true) #9, !dbg !7277
  store i32 %call14, i32* %status, align 4, !dbg !7278
  %11 = load i32, i32* %status, align 4, !dbg !7279
  %cmp15 = icmp slt i32 %11, 0, !dbg !7281
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !7282

if.then16:                                        ; preds = %if.end13
  br label %error, !dbg !7283

if.end17:                                         ; preds = %if.end13
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7284
  %m_operation_mode18 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 28, !dbg !7285
  store i32 0, i32* %m_operation_mode18, align 8, !dbg !7286
  br label %sw.epilog, !dbg !7287

sw.bb19:                                          ; preds = %if.end7, %if.end7
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7288
  %call20 = call i32 @mpegts_stop(%struct.drxk_state* %13) #9, !dbg !7289
  store i32 %call20, i32* %status, align 4, !dbg !7290
  %14 = load i32, i32* %status, align 4, !dbg !7291
  %cmp21 = icmp slt i32 %14, 0, !dbg !7293
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !7294

if.then22:                                        ; preds = %sw.bb19
  br label %error, !dbg !7295

if.end23:                                         ; preds = %sw.bb19
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7296
  %call24 = call i32 @power_down_qam(%struct.drxk_state* %15) #9, !dbg !7297
  store i32 %call24, i32* %status, align 4, !dbg !7298
  %16 = load i32, i32* %status, align 4, !dbg !7299
  %cmp25 = icmp slt i32 %16, 0, !dbg !7301
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !7302

if.then26:                                        ; preds = %if.end23
  br label %error, !dbg !7303

if.end27:                                         ; preds = %if.end23
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7304
  %m_operation_mode28 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %17, i32 0, i32 28, !dbg !7305
  store i32 0, i32* %m_operation_mode28, align 8, !dbg !7306
  br label %sw.epilog, !dbg !7307

sw.bb29:                                          ; preds = %if.end7
  br label %sw.default, !dbg !7307

sw.default:                                       ; preds = %if.end7, %sw.bb29
  store i32 -22, i32* %status, align 4, !dbg !7308
  br label %error, !dbg !7309

sw.epilog:                                        ; preds = %if.end27, %if.end17, %sw.bb
  %18 = load i32, i32* %o_mode.addr, align 4, !dbg !7310
  switch i32 %18, label %sw.default57 [
    i32 4, label %sw.bb30
    i32 1, label %sw.bb42
    i32 3, label %sw.bb42
    i32 2, label %sw.bb56
  ], !dbg !7311

sw.bb30:                                          ; preds = %sw.epilog
  br label %do.body31, !dbg !7312

do.body31:                                        ; preds = %sw.bb30
  %19 = load i32, i32* @debug, align 4, !dbg !7314
  %cmp32 = icmp uge i32 %19, 1, !dbg !7314
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !7317

if.then33:                                        ; preds = %do.body31
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.setoperation_mode, i64 0, i64 0)) #8, !dbg !7314
  br label %if.end35, !dbg !7314

if.end35:                                         ; preds = %if.then33, %do.body31
  br label %do.end36, !dbg !7317

do.end36:                                         ; preds = %if.end35
  %20 = load i32, i32* %o_mode.addr, align 4, !dbg !7318
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7319
  %m_operation_mode37 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %21, i32 0, i32 28, !dbg !7320
  store i32 %20, i32* %m_operation_mode37, align 8, !dbg !7321
  %22 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7322
  %23 = load i32, i32* %o_mode.addr, align 4, !dbg !7323
  %call38 = call i32 @set_dvbt_standard(%struct.drxk_state* %22, i32 %23) #9, !dbg !7324
  store i32 %call38, i32* %status, align 4, !dbg !7325
  %24 = load i32, i32* %status, align 4, !dbg !7326
  %cmp39 = icmp slt i32 %24, 0, !dbg !7328
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !7329

if.then40:                                        ; preds = %do.end36
  br label %error, !dbg !7330

if.end41:                                         ; preds = %do.end36
  br label %sw.epilog58, !dbg !7331

sw.bb42:                                          ; preds = %sw.epilog, %sw.epilog
  br label %do.body43, !dbg !7332

do.body43:                                        ; preds = %sw.bb42
  %25 = load i32, i32* @debug, align 4, !dbg !7333
  %cmp44 = icmp uge i32 %25, 1, !dbg !7333
  br i1 %cmp44, label %if.then45, label %if.end49, !dbg !7336

if.then45:                                        ; preds = %do.body43
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7333
  %m_operation_mode46 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %26, i32 0, i32 28, !dbg !7333
  %27 = load i32, i32* %m_operation_mode46, align 8, !dbg !7333
  %cmp47 = icmp eq i32 %27, 1, !dbg !7333
  %28 = zext i1 %cmp47 to i64, !dbg !7333
  %cond = select i1 %cmp47, i32 65, i32 67, !dbg !7333
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.setoperation_mode, i64 0, i64 0), i32 %cond) #8, !dbg !7333
  br label %if.end49, !dbg !7333

if.end49:                                         ; preds = %if.then45, %do.body43
  br label %do.end50, !dbg !7336

do.end50:                                         ; preds = %if.end49
  %29 = load i32, i32* %o_mode.addr, align 4, !dbg !7337
  %30 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7338
  %m_operation_mode51 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %30, i32 0, i32 28, !dbg !7339
  store i32 %29, i32* %m_operation_mode51, align 8, !dbg !7340
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7341
  %32 = load i32, i32* %o_mode.addr, align 4, !dbg !7342
  %call52 = call i32 @set_qam_standard(%struct.drxk_state* %31, i32 %32) #9, !dbg !7343
  store i32 %call52, i32* %status, align 4, !dbg !7344
  %33 = load i32, i32* %status, align 4, !dbg !7345
  %cmp53 = icmp slt i32 %33, 0, !dbg !7347
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !7348

if.then54:                                        ; preds = %do.end50
  br label %error, !dbg !7349

if.end55:                                         ; preds = %do.end50
  br label %sw.epilog58, !dbg !7350

sw.bb56:                                          ; preds = %sw.epilog
  br label %sw.default57, !dbg !7350

sw.default57:                                     ; preds = %sw.epilog, %sw.bb56
  store i32 -22, i32* %status, align 4, !dbg !7351
  br label %sw.epilog58, !dbg !7352

sw.epilog58:                                      ; preds = %sw.default57, %if.end55, %if.end41
  br label %error, !dbg !7352

error:                                            ; preds = %sw.epilog58, %if.then54, %if.then40, %sw.default, %if.then26, %if.then22, %if.then16, %if.then12, %if.then3
  call void @llvm.dbg.label(metadata !7353), !dbg !7354
  %34 = load i32, i32* %status, align 4, !dbg !7355
  %cmp59 = icmp slt i32 %34, 0, !dbg !7357
  br i1 %cmp59, label %if.then60, label %if.end62, !dbg !7358

if.then60:                                        ; preds = %error
  %35 = load i32, i32* %status, align 4, !dbg !7359
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %35, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.setoperation_mode, i64 0, i64 0)) #8, !dbg !7359
  br label %if.end62, !dbg !7359

if.end62:                                         ; preds = %if.then60, %error
  %36 = load i32, i32* %status, align 4, !dbg !7360
  store i32 %36, i32* %retval, align 4, !dbg !7361
  br label %return, !dbg !7361

return:                                           ; preds = %if.end62, %if.then6
  %37 = load i32, i32* %retval, align 4, !dbg !7362
  ret i32 %37, !dbg !7362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @start(%struct.drxk_state* %state, i32 %offset_freq, i32 %intermediate_frequency) #0 !dbg !7363 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %offset_freq.addr = alloca i32, align 4
  %intermediate_frequency.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %i_freqk_hz = alloca i16, align 2
  %offsetk_hz = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !7366, metadata !DIExpression()), !dbg !7367
  store i32 %offset_freq, i32* %offset_freq.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset_freq.addr, metadata !7368, metadata !DIExpression()), !dbg !7369
  store i32 %intermediate_frequency, i32* %intermediate_frequency.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intermediate_frequency.addr, metadata !7370, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7372, metadata !DIExpression()), !dbg !7373
  store i32 -22, i32* %status, align 4, !dbg !7373
  call void @llvm.dbg.declare(metadata i16* %i_freqk_hz, metadata !7374, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.declare(metadata i32* %offsetk_hz, metadata !7376, metadata !DIExpression()), !dbg !7377
  %0 = load i32, i32* %offset_freq.addr, align 4, !dbg !7378
  %div = sdiv i32 %0, 1000, !dbg !7379
  store i32 %div, i32* %offsetk_hz, align 4, !dbg !7377
  br label %do.body, !dbg !7380

do.body:                                          ; preds = %entry
  %1 = load i32, i32* @debug, align 4, !dbg !7381
  %cmp = icmp uge i32 %1, 1, !dbg !7381
  br i1 %cmp, label %if.then, label %if.end, !dbg !7384

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__func__.start, i64 0, i64 0)) #8, !dbg !7381
  br label %if.end, !dbg !7381

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !7384

do.end:                                           ; preds = %if.end
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7385
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 27, !dbg !7387
  %3 = load i32, i32* %m_drxk_state, align 4, !dbg !7387
  %cmp1 = icmp ne i32 %3, 1, !dbg !7388
  br i1 %cmp1, label %land.lhs.true, label %if.end5, !dbg !7389

land.lhs.true:                                    ; preds = %do.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7390
  %m_drxk_state2 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 27, !dbg !7391
  %5 = load i32, i32* %m_drxk_state2, align 4, !dbg !7391
  %cmp3 = icmp ne i32 %5, 2, !dbg !7392
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !7393

if.then4:                                         ; preds = %land.lhs.true
  br label %error, !dbg !7394

if.end5:                                          ; preds = %land.lhs.true, %do.end
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7395
  %props = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 1, !dbg !7396
  %inversion = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props, i32 0, i32 4, !dbg !7397
  %7 = load i32, i32* %inversion, align 8, !dbg !7397
  %cmp6 = icmp eq i32 %7, 1, !dbg !7398
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7399
  %m_b_mirror_freq_spect = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %8, i32 0, i32 71, !dbg !7400
  %frombool = zext i1 %cmp6 to i8, !dbg !7401
  store i8 %frombool, i8* %m_b_mirror_freq_spect, align 2, !dbg !7401
  %9 = load i32, i32* %intermediate_frequency.addr, align 4, !dbg !7402
  %cmp7 = icmp slt i32 %9, 0, !dbg !7404
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !7405

if.then8:                                         ; preds = %if.end5
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7406
  %m_b_mirror_freq_spect9 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %10, i32 0, i32 71, !dbg !7408
  %11 = load i8, i8* %m_b_mirror_freq_spect9, align 2, !dbg !7408
  %tobool = trunc i8 %11 to i1, !dbg !7408
  %lnot = xor i1 %tobool, true, !dbg !7409
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7410
  %m_b_mirror_freq_spect10 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 71, !dbg !7411
  %frombool11 = zext i1 %lnot to i8, !dbg !7412
  store i8 %frombool11, i8* %m_b_mirror_freq_spect10, align 2, !dbg !7412
  %13 = load i32, i32* %intermediate_frequency.addr, align 4, !dbg !7413
  %sub = sub i32 0, %13, !dbg !7414
  store i32 %sub, i32* %intermediate_frequency.addr, align 4, !dbg !7415
  br label %if.end12, !dbg !7416

if.end12:                                         ; preds = %if.then8, %if.end5
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7417
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %14, i32 0, i32 28, !dbg !7418
  %15 = load i32, i32* %m_operation_mode, align 8, !dbg !7418
  switch i32 %15, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb20
  ], !dbg !7419

sw.bb:                                            ; preds = %if.end12, %if.end12
  %16 = load i32, i32* %intermediate_frequency.addr, align 4, !dbg !7420
  %div13 = sdiv i32 %16, 1000, !dbg !7422
  %conv = trunc i32 %div13 to i16, !dbg !7423
  store i16 %conv, i16* %i_freqk_hz, align 2, !dbg !7424
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7425
  %18 = load i16, i16* %i_freqk_hz, align 2, !dbg !7426
  %19 = load i32, i32* %offsetk_hz, align 4, !dbg !7427
  %call14 = call i32 @set_qam(%struct.drxk_state* %17, i16 zeroext %18, i32 %19) #9, !dbg !7428
  store i32 %call14, i32* %status, align 4, !dbg !7429
  %20 = load i32, i32* %status, align 4, !dbg !7430
  %cmp15 = icmp slt i32 %20, 0, !dbg !7432
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !7433

if.then17:                                        ; preds = %sw.bb
  br label %error, !dbg !7434

if.end18:                                         ; preds = %sw.bb
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7435
  %m_drxk_state19 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %21, i32 0, i32 27, !dbg !7436
  store i32 2, i32* %m_drxk_state19, align 4, !dbg !7437
  br label %sw.epilog, !dbg !7438

sw.bb20:                                          ; preds = %if.end12
  %22 = load i32, i32* %intermediate_frequency.addr, align 4, !dbg !7439
  %div21 = sdiv i32 %22, 1000, !dbg !7440
  %conv22 = trunc i32 %div21 to i16, !dbg !7441
  store i16 %conv22, i16* %i_freqk_hz, align 2, !dbg !7442
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7443
  %call23 = call i32 @mpegts_stop(%struct.drxk_state* %23) #9, !dbg !7444
  store i32 %call23, i32* %status, align 4, !dbg !7445
  %24 = load i32, i32* %status, align 4, !dbg !7446
  %cmp24 = icmp slt i32 %24, 0, !dbg !7448
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !7449

if.then26:                                        ; preds = %sw.bb20
  br label %error, !dbg !7450

if.end27:                                         ; preds = %sw.bb20
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7451
  %26 = load i16, i16* %i_freqk_hz, align 2, !dbg !7452
  %27 = load i32, i32* %offsetk_hz, align 4, !dbg !7453
  %call28 = call i32 @set_dvbt(%struct.drxk_state* %25, i16 zeroext %26, i32 %27) #9, !dbg !7454
  store i32 %call28, i32* %status, align 4, !dbg !7455
  %28 = load i32, i32* %status, align 4, !dbg !7456
  %cmp29 = icmp slt i32 %28, 0, !dbg !7458
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !7459

if.then31:                                        ; preds = %if.end27
  br label %error, !dbg !7460

if.end32:                                         ; preds = %if.end27
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7461
  %call33 = call i32 @dvbt_start(%struct.drxk_state* %29) #9, !dbg !7462
  store i32 %call33, i32* %status, align 4, !dbg !7463
  %30 = load i32, i32* %status, align 4, !dbg !7464
  %cmp34 = icmp slt i32 %30, 0, !dbg !7466
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !7467

if.then36:                                        ; preds = %if.end32
  br label %error, !dbg !7468

if.end37:                                         ; preds = %if.end32
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7469
  %m_drxk_state38 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %31, i32 0, i32 27, !dbg !7470
  store i32 2, i32* %m_drxk_state38, align 4, !dbg !7471
  br label %sw.epilog, !dbg !7472

sw.default:                                       ; preds = %if.end12
  br label %sw.epilog, !dbg !7473

sw.epilog:                                        ; preds = %sw.default, %if.end37, %if.end18
  br label %error, !dbg !7474

error:                                            ; preds = %sw.epilog, %if.then36, %if.then31, %if.then26, %if.then17, %if.then4
  call void @llvm.dbg.label(metadata !7475), !dbg !7476
  %32 = load i32, i32* %status, align 4, !dbg !7477
  %cmp39 = icmp slt i32 %32, 0, !dbg !7479
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !7480

if.then41:                                        ; preds = %error
  %33 = load i32, i32* %status, align 4, !dbg !7481
  %call42 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__func__.start, i64 0, i64 0)) #8, !dbg !7481
  br label %if.end43, !dbg !7481

if.end43:                                         ; preds = %if.then41, %error
  %34 = load i32, i32* %status, align 4, !dbg !7482
  ret i32 %34, !dbg !7483
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @power_down_dvbt(%struct.drxk_state* %state, i1 zeroext %set_power_mode) #0 !dbg !7484 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %set_power_mode.addr = alloca i8, align 1
  %power_mode = alloca i32, align 4
  %cmd_result = alloca i16, align 2
  %data = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !7487, metadata !DIExpression()), !dbg !7488
  %frombool = zext i1 %set_power_mode to i8
  store i8 %frombool, i8* %set_power_mode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %set_power_mode.addr, metadata !7489, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.declare(metadata i32* %power_mode, metadata !7491, metadata !DIExpression()), !dbg !7492
  store i32 1, i32* %power_mode, align 4, !dbg !7492
  call void @llvm.dbg.declare(metadata i16* %cmd_result, metadata !7493, metadata !DIExpression()), !dbg !7494
  store i16 0, i16* %cmd_result, align 2, !dbg !7494
  call void @llvm.dbg.declare(metadata i16* %data, metadata !7495, metadata !DIExpression()), !dbg !7496
  store i16 0, i16* %data, align 2, !dbg !7496
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7497, metadata !DIExpression()), !dbg !7498
  br label %do.body, !dbg !7499

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !7500
  %cmp = icmp uge i32 %0, 1, !dbg !7500
  br i1 %cmp, label %if.then, label %if.end, !dbg !7503

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.power_down_dvbt, i64 0, i64 0)) #8, !dbg !7500
  br label %if.end, !dbg !7500

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !7503

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7504
  %call1 = call i32 @read16(%struct.drxk_state* %1, i32 8388608, i16* %data) #9, !dbg !7505
  store i32 %call1, i32* %status, align 4, !dbg !7506
  %2 = load i32, i32* %status, align 4, !dbg !7507
  %cmp2 = icmp slt i32 %2, 0, !dbg !7509
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7510

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !7511

if.end4:                                          ; preds = %do.end
  %3 = load i16, i16* %data, align 2, !dbg !7512
  %conv = zext i16 %3 to i32, !dbg !7512
  %cmp5 = icmp eq i32 %conv, 1, !dbg !7514
  br i1 %cmp5, label %if.then7, label %if.end18, !dbg !7515

if.then7:                                         ; preds = %if.end4
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7516
  %call8 = call i32 @scu_command(%struct.drxk_state* %4, i16 zeroext 1033, i8 zeroext 0, i16* null, i8 zeroext 1, i16* %cmd_result) #9, !dbg !7518
  store i32 %call8, i32* %status, align 4, !dbg !7519
  %5 = load i32, i32* %status, align 4, !dbg !7520
  %cmp9 = icmp slt i32 %5, 0, !dbg !7522
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !7523

if.then11:                                        ; preds = %if.then7
  br label %error, !dbg !7524

if.end12:                                         ; preds = %if.then7
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7525
  %call13 = call i32 @scu_command(%struct.drxk_state* %6, i16 zeroext 1025, i8 zeroext 0, i16* null, i8 zeroext 1, i16* %cmd_result) #9, !dbg !7526
  store i32 %call13, i32* %status, align 4, !dbg !7527
  %7 = load i32, i32* %status, align 4, !dbg !7528
  %cmp14 = icmp slt i32 %7, 0, !dbg !7530
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !7531

if.then16:                                        ; preds = %if.end12
  br label %error, !dbg !7532

if.end17:                                         ; preds = %if.end12
  br label %if.end18, !dbg !7533

if.end18:                                         ; preds = %if.end17, %if.end4
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7534
  %call19 = call i32 @write16(%struct.drxk_state* %8, i32 62914560, i16 zeroext 0) #9, !dbg !7535
  store i32 %call19, i32* %status, align 4, !dbg !7536
  %9 = load i32, i32* %status, align 4, !dbg !7537
  %cmp20 = icmp slt i32 %9, 0, !dbg !7539
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !7540

if.then22:                                        ; preds = %if.end18
  br label %error, !dbg !7541

if.end23:                                         ; preds = %if.end18
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7542
  %call24 = call i32 @write16(%struct.drxk_state* %10, i32 58720256, i16 zeroext 0) #9, !dbg !7543
  store i32 %call24, i32* %status, align 4, !dbg !7544
  %11 = load i32, i32* %status, align 4, !dbg !7545
  %cmp25 = icmp slt i32 %11, 0, !dbg !7547
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !7548

if.then27:                                        ; preds = %if.end23
  br label %error, !dbg !7549

if.end28:                                         ; preds = %if.end23
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7550
  %call29 = call i32 @write16(%struct.drxk_state* %12, i32 25165824, i16 zeroext 0) #9, !dbg !7551
  store i32 %call29, i32* %status, align 4, !dbg !7552
  %13 = load i32, i32* %status, align 4, !dbg !7553
  %cmp30 = icmp slt i32 %13, 0, !dbg !7555
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !7556

if.then32:                                        ; preds = %if.end28
  br label %error, !dbg !7557

if.end33:                                         ; preds = %if.end28
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7558
  %call34 = call i32 @set_iqm_af(%struct.drxk_state* %14, i1 zeroext false) #9, !dbg !7559
  store i32 %call34, i32* %status, align 4, !dbg !7560
  %15 = load i32, i32* %status, align 4, !dbg !7561
  %cmp35 = icmp slt i32 %15, 0, !dbg !7563
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !7564

if.then37:                                        ; preds = %if.end33
  br label %error, !dbg !7565

if.end38:                                         ; preds = %if.end33
  %16 = load i8, i8* %set_power_mode.addr, align 1, !dbg !7566
  %tobool = trunc i8 %16 to i1, !dbg !7566
  br i1 %tobool, label %if.then39, label %if.end45, !dbg !7568

if.then39:                                        ; preds = %if.end38
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7569
  %call40 = call i32 @ctrl_power_mode(%struct.drxk_state* %17, i32* %power_mode) #9, !dbg !7571
  store i32 %call40, i32* %status, align 4, !dbg !7572
  %18 = load i32, i32* %status, align 4, !dbg !7573
  %cmp41 = icmp slt i32 %18, 0, !dbg !7575
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !7576

if.then43:                                        ; preds = %if.then39
  br label %error, !dbg !7577

if.end44:                                         ; preds = %if.then39
  br label %if.end45, !dbg !7578

if.end45:                                         ; preds = %if.end44, %if.end38
  br label %error, !dbg !7566

error:                                            ; preds = %if.end45, %if.then43, %if.then37, %if.then32, %if.then27, %if.then22, %if.then16, %if.then11, %if.then3
  call void @llvm.dbg.label(metadata !7579), !dbg !7580
  %19 = load i32, i32* %status, align 4, !dbg !7581
  %cmp46 = icmp slt i32 %19, 0, !dbg !7583
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !7584

if.then48:                                        ; preds = %error
  %20 = load i32, i32* %status, align 4, !dbg !7585
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.power_down_dvbt, i64 0, i64 0)) #8, !dbg !7585
  br label %if.end50, !dbg !7585

if.end50:                                         ; preds = %if.then48, %error
  %21 = load i32, i32* %status, align 4, !dbg !7586
  ret i32 %21, !dbg !7587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @power_down_qam(%struct.drxk_state* %state) #0 !dbg !7588 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %data = alloca i16, align 2
  %cmd_result = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !7589, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.declare(metadata i16* %data, metadata !7591, metadata !DIExpression()), !dbg !7592
  store i16 0, i16* %data, align 2, !dbg !7592
  call void @llvm.dbg.declare(metadata i16* %cmd_result, metadata !7593, metadata !DIExpression()), !dbg !7594
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7595, metadata !DIExpression()), !dbg !7596
  store i32 0, i32* %status, align 4, !dbg !7596
  br label %do.body, !dbg !7597

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !7598
  %cmp = icmp uge i32 %0, 1, !dbg !7598
  br i1 %cmp, label %if.then, label %if.end, !dbg !7601

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.power_down_qam, i64 0, i64 0)) #8, !dbg !7598
  br label %if.end, !dbg !7598

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !7601

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7602
  %call1 = call i32 @read16(%struct.drxk_state* %1, i32 8388608, i16* %data) #9, !dbg !7603
  store i32 %call1, i32* %status, align 4, !dbg !7604
  %2 = load i32, i32* %status, align 4, !dbg !7605
  %cmp2 = icmp slt i32 %2, 0, !dbg !7607
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7608

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !7609

if.end4:                                          ; preds = %do.end
  %3 = load i16, i16* %data, align 2, !dbg !7610
  %conv = zext i16 %3 to i32, !dbg !7610
  %cmp5 = icmp eq i32 %conv, 1, !dbg !7612
  br i1 %cmp5, label %if.then7, label %if.end18, !dbg !7613

if.then7:                                         ; preds = %if.end4
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7614
  %call8 = call i32 @write16(%struct.drxk_state* %4, i32 20971520, i16 zeroext 0) #9, !dbg !7616
  store i32 %call8, i32* %status, align 4, !dbg !7617
  %5 = load i32, i32* %status, align 4, !dbg !7618
  %cmp9 = icmp slt i32 %5, 0, !dbg !7620
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !7621

if.then11:                                        ; preds = %if.then7
  br label %error, !dbg !7622

if.end12:                                         ; preds = %if.then7
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7623
  %call13 = call i32 @scu_command(%struct.drxk_state* %6, i16 zeroext 521, i8 zeroext 0, i16* null, i8 zeroext 1, i16* %cmd_result) #9, !dbg !7624
  store i32 %call13, i32* %status, align 4, !dbg !7625
  %7 = load i32, i32* %status, align 4, !dbg !7626
  %cmp14 = icmp slt i32 %7, 0, !dbg !7628
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !7629

if.then16:                                        ; preds = %if.end12
  br label %error, !dbg !7630

if.end17:                                         ; preds = %if.end12
  br label %if.end18, !dbg !7631

if.end18:                                         ; preds = %if.end17, %if.end4
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7632
  %call19 = call i32 @set_iqm_af(%struct.drxk_state* %8, i1 zeroext false) #9, !dbg !7633
  store i32 %call19, i32* %status, align 4, !dbg !7634
  br label %error, !dbg !7635

error:                                            ; preds = %if.end18, %if.then16, %if.then11, %if.then3
  call void @llvm.dbg.label(metadata !7636), !dbg !7637
  %9 = load i32, i32* %status, align 4, !dbg !7638
  %cmp20 = icmp slt i32 %9, 0, !dbg !7640
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !7641

if.then22:                                        ; preds = %error
  %10 = load i32, i32* %status, align 4, !dbg !7642
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.power_down_qam, i64 0, i64 0)) #8, !dbg !7642
  br label %if.end24, !dbg !7642

if.end24:                                         ; preds = %if.then22, %error
  %11 = load i32, i32* %status, align 4, !dbg !7643
  ret i32 %11, !dbg !7644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_dvbt_standard(%struct.drxk_state* %state, i32 %o_mode) #0 !dbg !7645 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %o_mode.addr = alloca i32, align 4
  %cmd_result = alloca i16, align 2
  %data = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !7646, metadata !DIExpression()), !dbg !7647
  store i32 %o_mode, i32* %o_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %o_mode.addr, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.declare(metadata i16* %cmd_result, metadata !7650, metadata !DIExpression()), !dbg !7651
  store i16 0, i16* %cmd_result, align 2, !dbg !7651
  call void @llvm.dbg.declare(metadata i16* %data, metadata !7652, metadata !DIExpression()), !dbg !7653
  store i16 0, i16* %data, align 2, !dbg !7653
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7654, metadata !DIExpression()), !dbg !7655
  br label %do.body, !dbg !7656

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !7657
  %cmp = icmp uge i32 %0, 1, !dbg !7657
  br i1 %cmp, label %if.then, label %if.end, !dbg !7660

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.set_dvbt_standard, i64 0, i64 0)) #8, !dbg !7657
  br label %if.end, !dbg !7657

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !7660

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7661
  %call1 = call i32 @power_up_dvbt(%struct.drxk_state* %1) #9, !dbg !7662
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7663
  %call2 = call i32 @switch_antenna_to_dvbt(%struct.drxk_state* %2) #9, !dbg !7664
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7665
  %call3 = call i32 @scu_command(%struct.drxk_state* %3, i16 zeroext 1025, i8 zeroext 0, i16* null, i8 zeroext 1, i16* %cmd_result) #9, !dbg !7666
  store i32 %call3, i32* %status, align 4, !dbg !7667
  %4 = load i32, i32* %status, align 4, !dbg !7668
  %cmp4 = icmp slt i32 %4, 0, !dbg !7670
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7671

if.then5:                                         ; preds = %do.end
  br label %error, !dbg !7672

if.end6:                                          ; preds = %do.end
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7673
  %call7 = call i32 @scu_command(%struct.drxk_state* %5, i16 zeroext 1026, i8 zeroext 0, i16* null, i8 zeroext 1, i16* %cmd_result) #9, !dbg !7674
  store i32 %call7, i32* %status, align 4, !dbg !7675
  %6 = load i32, i32* %status, align 4, !dbg !7676
  %cmp8 = icmp slt i32 %6, 0, !dbg !7678
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !7679

if.then9:                                         ; preds = %if.end6
  br label %error, !dbg !7680

if.end10:                                         ; preds = %if.end6
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7681
  %call11 = call i32 @write16(%struct.drxk_state* %7, i32 62914560, i16 zeroext 0) #9, !dbg !7682
  store i32 %call11, i32* %status, align 4, !dbg !7683
  %8 = load i32, i32* %status, align 4, !dbg !7684
  %cmp12 = icmp slt i32 %8, 0, !dbg !7686
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !7687

if.then13:                                        ; preds = %if.end10
  br label %error, !dbg !7688

if.end14:                                         ; preds = %if.end10
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7689
  %call15 = call i32 @write16(%struct.drxk_state* %9, i32 58720256, i16 zeroext 0) #9, !dbg !7690
  store i32 %call15, i32* %status, align 4, !dbg !7691
  %10 = load i32, i32* %status, align 4, !dbg !7692
  %cmp16 = icmp slt i32 %10, 0, !dbg !7694
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !7695

if.then17:                                        ; preds = %if.end14
  br label %error, !dbg !7696

if.end18:                                         ; preds = %if.end14
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7697
  %call19 = call i32 @write16(%struct.drxk_state* %11, i32 25165824, i16 zeroext 0) #9, !dbg !7698
  store i32 %call19, i32* %status, align 4, !dbg !7699
  %12 = load i32, i32* %status, align 4, !dbg !7700
  %cmp20 = icmp slt i32 %12, 0, !dbg !7702
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !7703

if.then21:                                        ; preds = %if.end18
  br label %error, !dbg !7704

if.end22:                                         ; preds = %if.end18
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7705
  %call23 = call i32 @write16(%struct.drxk_state* %13, i32 25624623, i16 zeroext 1) #9, !dbg !7706
  store i32 %call23, i32* %status, align 4, !dbg !7707
  %14 = load i32, i32* %status, align 4, !dbg !7708
  %cmp24 = icmp slt i32 %14, 0, !dbg !7710
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !7711

if.then25:                                        ; preds = %if.end22
  br label %error, !dbg !7712

if.end26:                                         ; preds = %if.end22
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7713
  %call27 = call i32 @write16(%struct.drxk_state* %15, i32 25624611, i16 zeroext 0) #9, !dbg !7714
  store i32 %call27, i32* %status, align 4, !dbg !7715
  %16 = load i32, i32* %status, align 4, !dbg !7716
  %cmp28 = icmp slt i32 %16, 0, !dbg !7718
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !7719

if.then29:                                        ; preds = %if.end26
  br label %error, !dbg !7720

if.end30:                                         ; preds = %if.end26
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7721
  %call31 = call i32 @write16(%struct.drxk_state* %17, i32 25624614, i16 zeroext 0) #9, !dbg !7722
  store i32 %call31, i32* %status, align 4, !dbg !7723
  %18 = load i32, i32* %status, align 4, !dbg !7724
  %cmp32 = icmp slt i32 %18, 0, !dbg !7726
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !7727

if.then33:                                        ; preds = %if.end30
  br label %error, !dbg !7728

if.end34:                                         ; preds = %if.end30
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7729
  %call35 = call i32 @write16(%struct.drxk_state* %19, i32 25624621, i16 zeroext 1) #9, !dbg !7730
  store i32 %call35, i32* %status, align 4, !dbg !7731
  %20 = load i32, i32* %status, align 4, !dbg !7732
  %cmp36 = icmp slt i32 %20, 0, !dbg !7734
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !7735

if.then37:                                        ; preds = %if.end34
  br label %error, !dbg !7736

if.end38:                                         ; preds = %if.end34
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7737
  %call39 = call i32 @set_iqm_af(%struct.drxk_state* %21, i1 zeroext true) #9, !dbg !7738
  store i32 %call39, i32* %status, align 4, !dbg !7739
  %22 = load i32, i32* %status, align 4, !dbg !7740
  %cmp40 = icmp slt i32 %22, 0, !dbg !7742
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !7743

if.then41:                                        ; preds = %if.end38
  br label %error, !dbg !7744

if.end42:                                         ; preds = %if.end38
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7745
  %call43 = call i32 @write16(%struct.drxk_state* %23, i32 25624617, i16 zeroext 0) #9, !dbg !7746
  store i32 %call43, i32* %status, align 4, !dbg !7747
  %24 = load i32, i32* %status, align 4, !dbg !7748
  %cmp44 = icmp slt i32 %24, 0, !dbg !7750
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !7751

if.then45:                                        ; preds = %if.end42
  br label %error, !dbg !7752

if.end46:                                         ; preds = %if.end42
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7753
  %call47 = call i32 @write16(%struct.drxk_state* %25, i32 25624628, i16 zeroext 0) #9, !dbg !7754
  store i32 %call47, i32* %status, align 4, !dbg !7755
  %26 = load i32, i32* %status, align 4, !dbg !7756
  %cmp48 = icmp slt i32 %26, 0, !dbg !7758
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !7759

if.then49:                                        ; preds = %if.end46
  br label %error, !dbg !7760

if.end50:                                         ; preds = %if.end46
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7761
  %call51 = call i32 @write16(%struct.drxk_state* %27, i32 25559140, i16 zeroext 0) #9, !dbg !7762
  store i32 %call51, i32* %status, align 4, !dbg !7763
  %28 = load i32, i32* %status, align 4, !dbg !7764
  %cmp52 = icmp slt i32 %28, 0, !dbg !7766
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !7767

if.then53:                                        ; preds = %if.end50
  br label %error, !dbg !7768

if.end54:                                         ; preds = %if.end50
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7769
  %call55 = call i32 @write16(%struct.drxk_state* %29, i32 25559139, i16 zeroext 3) #9, !dbg !7770
  store i32 %call55, i32* %status, align 4, !dbg !7771
  %30 = load i32, i32* %status, align 4, !dbg !7772
  %cmp56 = icmp slt i32 %30, 0, !dbg !7774
  br i1 %cmp56, label %if.then57, label %if.end58, !dbg !7775

if.then57:                                        ; preds = %if.end54
  br label %error, !dbg !7776

if.end58:                                         ; preds = %if.end54
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7777
  %call59 = call i32 @write16(%struct.drxk_state* %31, i32 25427990, i16 zeroext 16) #9, !dbg !7778
  store i32 %call59, i32* %status, align 4, !dbg !7779
  %32 = load i32, i32* %status, align 4, !dbg !7780
  %cmp60 = icmp slt i32 %32, 0, !dbg !7782
  br i1 %cmp60, label %if.then61, label %if.end62, !dbg !7783

if.then61:                                        ; preds = %if.end58
  br label %error, !dbg !7784

if.end62:                                         ; preds = %if.end58
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7785
  %call63 = call i32 @write16(%struct.drxk_state* %33, i32 25559058, i16 zeroext 4) #9, !dbg !7786
  store i32 %call63, i32* %status, align 4, !dbg !7787
  %34 = load i32, i32* %status, align 4, !dbg !7788
  %cmp64 = icmp slt i32 %34, 0, !dbg !7790
  br i1 %cmp64, label %if.then65, label %if.end66, !dbg !7791

if.then65:                                        ; preds = %if.end62
  br label %error, !dbg !7792

if.end66:                                         ; preds = %if.end62
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7793
  %call67 = call i32 @write16(%struct.drxk_state* %35, i32 25559065, i16 zeroext 4) #9, !dbg !7794
  store i32 %call67, i32* %status, align 4, !dbg !7795
  %36 = load i32, i32* %status, align 4, !dbg !7796
  %cmp68 = icmp slt i32 %36, 0, !dbg !7798
  br i1 %cmp68, label %if.then69, label %if.end70, !dbg !7799

if.then69:                                        ; preds = %if.end66
  br label %error, !dbg !7800

if.end70:                                         ; preds = %if.end66
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7801
  %call71 = call i32 @write16(%struct.drxk_state* %37, i32 25559060, i16 zeroext 1600) #9, !dbg !7802
  store i32 %call71, i32* %status, align 4, !dbg !7803
  %38 = load i32, i32* %status, align 4, !dbg !7804
  %cmp72 = icmp slt i32 %38, 0, !dbg !7806
  br i1 %cmp72, label %if.then73, label %if.end74, !dbg !7807

if.then73:                                        ; preds = %if.end70
  br label %error, !dbg !7808

if.end74:                                         ; preds = %if.end70
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7809
  %call75 = call i32 @write16(%struct.drxk_state* %39, i32 25559061, i16 zeroext 0) #9, !dbg !7810
  store i32 %call75, i32* %status, align 4, !dbg !7811
  %40 = load i32, i32* %status, align 4, !dbg !7812
  %cmp76 = icmp slt i32 %40, 0, !dbg !7814
  br i1 %cmp76, label %if.then77, label %if.end78, !dbg !7815

if.then77:                                        ; preds = %if.end74
  br label %error, !dbg !7816

if.end78:                                         ; preds = %if.end74
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7817
  %call79 = call i32 @write16(%struct.drxk_state* %41, i32 25624612, i16 zeroext 448) #9, !dbg !7818
  store i32 %call79, i32* %status, align 4, !dbg !7819
  %42 = load i32, i32* %status, align 4, !dbg !7820
  %cmp80 = icmp slt i32 %42, 0, !dbg !7822
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !7823

if.then81:                                        ; preds = %if.end78
  br label %error, !dbg !7824

if.end82:                                         ; preds = %if.end78
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7825
  %call83 = call i32 @write16(%struct.drxk_state* %43, i32 25559137, i16 zeroext 495) #9, !dbg !7826
  store i32 %call83, i32* %status, align 4, !dbg !7827
  %44 = load i32, i32* %status, align 4, !dbg !7828
  %cmp84 = icmp slt i32 %44, 0, !dbg !7830
  br i1 %cmp84, label %if.then85, label %if.end86, !dbg !7831

if.then85:                                        ; preds = %if.end82
  br label %error, !dbg !7832

if.end86:                                         ; preds = %if.end82
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7833
  %call87 = call i32 @bl_chain_cmd(%struct.drxk_state* %45, i16 zeroext 56, i16 zeroext 2, i32 100) #9, !dbg !7834
  store i32 %call87, i32* %status, align 4, !dbg !7835
  %46 = load i32, i32* %status, align 4, !dbg !7836
  %cmp88 = icmp slt i32 %46, 0, !dbg !7838
  br i1 %cmp88, label %if.then89, label %if.end90, !dbg !7839

if.then89:                                        ; preds = %if.end86
  br label %error, !dbg !7840

if.end90:                                         ; preds = %if.end86
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7841
  %call91 = call i32 @write16(%struct.drxk_state* %47, i32 25559138, i16 zeroext 2) #9, !dbg !7842
  store i32 %call91, i32* %status, align 4, !dbg !7843
  %48 = load i32, i32* %status, align 4, !dbg !7844
  %cmp92 = icmp slt i32 %48, 0, !dbg !7846
  br i1 %cmp92, label %if.then93, label %if.end94, !dbg !7847

if.then93:                                        ; preds = %if.end90
  br label %error, !dbg !7848

if.end94:                                         ; preds = %if.end90
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7849
  %call95 = call i32 @write16(%struct.drxk_state* %49, i32 25559063, i16 zeroext 2) #9, !dbg !7850
  store i32 %call95, i32* %status, align 4, !dbg !7851
  %50 = load i32, i32* %status, align 4, !dbg !7852
  %cmp96 = icmp slt i32 %50, 0, !dbg !7854
  br i1 %cmp96, label %if.then97, label %if.end98, !dbg !7855

if.then97:                                        ; preds = %if.end94
  br label %error, !dbg !7856

if.end98:                                         ; preds = %if.end94
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7857
  %call99 = call i32 @write16(%struct.drxk_state* %51, i32 25559046, i16 zeroext 1) #9, !dbg !7858
  store i32 %call99, i32* %status, align 4, !dbg !7859
  %52 = load i32, i32* %status, align 4, !dbg !7860
  %cmp100 = icmp slt i32 %52, 0, !dbg !7862
  br i1 %cmp100, label %if.then101, label %if.end102, !dbg !7863

if.then101:                                       ; preds = %if.end98
  br label %error, !dbg !7864

if.end102:                                        ; preds = %if.end98
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7865
  %call103 = call i32 @write16(%struct.drxk_state* %53, i32 25165824, i16 zeroext 1) #9, !dbg !7866
  store i32 %call103, i32* %status, align 4, !dbg !7867
  %54 = load i32, i32* %status, align 4, !dbg !7868
  %cmp104 = icmp slt i32 %54, 0, !dbg !7870
  br i1 %cmp104, label %if.then105, label %if.end106, !dbg !7871

if.then105:                                       ; preds = %if.end102
  br label %error, !dbg !7872

if.end106:                                        ; preds = %if.end102
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7873
  %call107 = call i32 @adc_synchronization(%struct.drxk_state* %55) #9, !dbg !7874
  store i32 %call107, i32* %status, align 4, !dbg !7875
  %56 = load i32, i32* %status, align 4, !dbg !7876
  %cmp108 = icmp slt i32 %56, 0, !dbg !7878
  br i1 %cmp108, label %if.then109, label %if.end110, !dbg !7879

if.then109:                                       ; preds = %if.end106
  br label %error, !dbg !7880

if.end110:                                        ; preds = %if.end106
  %57 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7881
  %58 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7882
  %m_dvbt_pre_saw_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %58, i32 0, i32 86, !dbg !7883
  %call111 = call i32 @set_pre_saw(%struct.drxk_state* %57, %struct.s_cfg_pre_saw* %m_dvbt_pre_saw_cfg) #9, !dbg !7884
  store i32 %call111, i32* %status, align 4, !dbg !7885
  %59 = load i32, i32* %status, align 4, !dbg !7886
  %cmp112 = icmp slt i32 %59, 0, !dbg !7888
  br i1 %cmp112, label %if.then113, label %if.end114, !dbg !7889

if.then113:                                       ; preds = %if.end110
  br label %error, !dbg !7890

if.end114:                                        ; preds = %if.end110
  %60 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7891
  %call115 = call i32 @write16(%struct.drxk_state* %60, i32 8388608, i16 zeroext 2) #9, !dbg !7892
  store i32 %call115, i32* %status, align 4, !dbg !7893
  %61 = load i32, i32* %status, align 4, !dbg !7894
  %cmp116 = icmp slt i32 %61, 0, !dbg !7896
  br i1 %cmp116, label %if.then117, label %if.end118, !dbg !7897

if.then117:                                       ; preds = %if.end114
  br label %error, !dbg !7898

if.end118:                                        ; preds = %if.end114
  %62 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7899
  %63 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7900
  %m_dvbt_rf_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %63, i32 0, i32 84, !dbg !7901
  %call119 = call i32 @set_agc_rf(%struct.drxk_state* %62, %struct.s_cfg_agc* %m_dvbt_rf_agc_cfg, i1 zeroext true) #9, !dbg !7902
  store i32 %call119, i32* %status, align 4, !dbg !7903
  %64 = load i32, i32* %status, align 4, !dbg !7904
  %cmp120 = icmp slt i32 %64, 0, !dbg !7906
  br i1 %cmp120, label %if.then121, label %if.end122, !dbg !7907

if.then121:                                       ; preds = %if.end118
  br label %error, !dbg !7908

if.end122:                                        ; preds = %if.end118
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7909
  %66 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7910
  %m_dvbt_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %66, i32 0, i32 85, !dbg !7911
  %call123 = call i32 @set_agc_if(%struct.drxk_state* %65, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg, i1 zeroext true) #9, !dbg !7912
  store i32 %call123, i32* %status, align 4, !dbg !7913
  %67 = load i32, i32* %status, align 4, !dbg !7914
  %cmp124 = icmp slt i32 %67, 0, !dbg !7916
  br i1 %cmp124, label %if.then125, label %if.end126, !dbg !7917

if.then125:                                       ; preds = %if.end122
  br label %error, !dbg !7918

if.end126:                                        ; preds = %if.end122
  %68 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7919
  %call127 = call i32 @read16(%struct.drxk_state* %68, i32 63045712, i16* %data) #9, !dbg !7920
  store i32 %call127, i32* %status, align 4, !dbg !7921
  %69 = load i32, i32* %status, align 4, !dbg !7922
  %cmp128 = icmp slt i32 %69, 0, !dbg !7924
  br i1 %cmp128, label %if.then129, label %if.end130, !dbg !7925

if.then129:                                       ; preds = %if.end126
  br label %error, !dbg !7926

if.end130:                                        ; preds = %if.end126
  %70 = load i16, i16* %data, align 2, !dbg !7927
  %conv = zext i16 %70 to i32, !dbg !7927
  %or = or i32 %conv, 2048, !dbg !7927
  %conv131 = trunc i32 %or to i16, !dbg !7927
  store i16 %conv131, i16* %data, align 2, !dbg !7927
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7928
  %72 = load i16, i16* %data, align 2, !dbg !7929
  %call132 = call i32 @write16(%struct.drxk_state* %71, i32 63045712, i16 zeroext %72) #9, !dbg !7930
  store i32 %call132, i32* %status, align 4, !dbg !7931
  %73 = load i32, i32* %status, align 4, !dbg !7932
  %cmp133 = icmp slt i32 %73, 0, !dbg !7934
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !7935

if.then135:                                       ; preds = %if.end130
  br label %error, !dbg !7936

if.end136:                                        ; preds = %if.end130
  %74 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7937
  %call137 = call i32 @write16(%struct.drxk_state* %74, i32 8388608, i16 zeroext 1) #9, !dbg !7938
  store i32 %call137, i32* %status, align 4, !dbg !7939
  %75 = load i32, i32* %status, align 4, !dbg !7940
  %cmp138 = icmp slt i32 %75, 0, !dbg !7942
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !7943

if.then140:                                       ; preds = %if.end136
  br label %error, !dbg !7944

if.end141:                                        ; preds = %if.end136
  %76 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7945
  %m_drxk_a3_rom_code = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %76, i32 0, i32 93, !dbg !7947
  %77 = load i8, i8* %m_drxk_a3_rom_code, align 4, !dbg !7947
  %tobool = trunc i8 %77 to i1, !dbg !7947
  br i1 %tobool, label %if.end149, label %if.then142, !dbg !7948

if.then142:                                       ; preds = %if.end141
  %78 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7949
  %79 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7951
  %m_dvbt_if_agc_cfg143 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %79, i32 0, i32 85, !dbg !7952
  %fast_clip_ctrl_delay = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg143, i32 0, i32 8, !dbg !7953
  %80 = load i16, i16* %fast_clip_ctrl_delay, align 2, !dbg !7953
  %call144 = call i32 @write16(%struct.drxk_state* %78, i32 8593386, i16 zeroext %80) #9, !dbg !7954
  store i32 %call144, i32* %status, align 4, !dbg !7955
  %81 = load i32, i32* %status, align 4, !dbg !7956
  %cmp145 = icmp slt i32 %81, 0, !dbg !7958
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !7959

if.then147:                                       ; preds = %if.then142
  br label %error, !dbg !7960

if.end148:                                        ; preds = %if.then142
  br label %if.end149, !dbg !7961

if.end149:                                        ; preds = %if.end148, %if.end141
  %82 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7962
  %call150 = call i32 @write16(%struct.drxk_state* %82, i32 29491222, i16 zeroext 1) #9, !dbg !7963
  store i32 %call150, i32* %status, align 4, !dbg !7964
  %83 = load i32, i32* %status, align 4, !dbg !7965
  %cmp151 = icmp slt i32 %83, 0, !dbg !7967
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !7968

if.then153:                                       ; preds = %if.end149
  br label %error, !dbg !7969

if.end154:                                        ; preds = %if.end149
  %84 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7970
  %call155 = call i32 @write16(%struct.drxk_state* %84, i32 29556754, i16 zeroext 4096) #9, !dbg !7971
  store i32 %call155, i32* %status, align 4, !dbg !7972
  %85 = load i32, i32* %status, align 4, !dbg !7973
  %cmp156 = icmp slt i32 %85, 0, !dbg !7975
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !7976

if.then158:                                       ; preds = %if.end154
  br label %error, !dbg !7977

if.end159:                                        ; preds = %if.end154
  %86 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7978
  %call160 = call i32 @write16(%struct.drxk_state* %86, i32 29556755, i16 zeroext 1) #9, !dbg !7979
  store i32 %call160, i32* %status, align 4, !dbg !7980
  %87 = load i32, i32* %status, align 4, !dbg !7981
  %cmp161 = icmp slt i32 %87, 0, !dbg !7983
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !7984

if.then163:                                       ; preds = %if.end159
  br label %error, !dbg !7985

if.end164:                                        ; preds = %if.end159
  %88 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7986
  %call165 = call i32 @mpegts_dto_setup(%struct.drxk_state* %88, i32 4) #9, !dbg !7987
  store i32 %call165, i32* %status, align 4, !dbg !7988
  %89 = load i32, i32* %status, align 4, !dbg !7989
  %cmp166 = icmp slt i32 %89, 0, !dbg !7991
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !7992

if.then168:                                       ; preds = %if.end164
  br label %error, !dbg !7993

if.end169:                                        ; preds = %if.end164
  %90 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !7994
  %call170 = call i32 @dvbt_activate_presets(%struct.drxk_state* %90) #9, !dbg !7995
  store i32 %call170, i32* %status, align 4, !dbg !7996
  %91 = load i32, i32* %status, align 4, !dbg !7997
  %cmp171 = icmp slt i32 %91, 0, !dbg !7999
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !8000

if.then173:                                       ; preds = %if.end169
  br label %error, !dbg !8001

if.end174:                                        ; preds = %if.end169
  br label %error, !dbg !8002

error:                                            ; preds = %if.end174, %if.then173, %if.then168, %if.then163, %if.then158, %if.then153, %if.then147, %if.then140, %if.then135, %if.then129, %if.then125, %if.then121, %if.then117, %if.then113, %if.then109, %if.then105, %if.then101, %if.then97, %if.then93, %if.then89, %if.then85, %if.then81, %if.then77, %if.then73, %if.then69, %if.then65, %if.then61, %if.then57, %if.then53, %if.then49, %if.then45, %if.then41, %if.then37, %if.then33, %if.then29, %if.then25, %if.then21, %if.then17, %if.then13, %if.then9, %if.then5
  call void @llvm.dbg.label(metadata !8003), !dbg !8004
  %92 = load i32, i32* %status, align 4, !dbg !8005
  %cmp175 = icmp slt i32 %92, 0, !dbg !8007
  br i1 %cmp175, label %if.then177, label %if.end179, !dbg !8008

if.then177:                                       ; preds = %error
  %93 = load i32, i32* %status, align 4, !dbg !8009
  %call178 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %93, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.set_dvbt_standard, i64 0, i64 0)) #8, !dbg !8009
  br label %if.end179, !dbg !8009

if.end179:                                        ; preds = %if.then177, %error
  %94 = load i32, i32* %status, align 4, !dbg !8010
  ret i32 %94, !dbg !8011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_qam_standard(%struct.drxk_state* %state, i32 %o_mode) #0 !dbg !8012 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %o_mode.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !8013, metadata !DIExpression()), !dbg !8014
  store i32 %o_mode, i32* %o_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %o_mode.addr, metadata !8015, metadata !DIExpression()), !dbg !8016
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8017, metadata !DIExpression()), !dbg !8018
  br label %do.body, !dbg !8019

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !8020
  %cmp = icmp uge i32 %0, 1, !dbg !8020
  br i1 %cmp, label %if.then, label %if.end, !dbg !8023

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.set_qam_standard, i64 0, i64 0)) #8, !dbg !8020
  br label %if.end, !dbg !8020

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !8023

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8024
  %call1 = call i32 @switch_antenna_to_qam(%struct.drxk_state* %1) #9, !dbg !8025
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8026
  %call2 = call i32 @power_up_qam(%struct.drxk_state* %2) #9, !dbg !8027
  store i32 %call2, i32* %status, align 4, !dbg !8028
  %3 = load i32, i32* %status, align 4, !dbg !8029
  %cmp3 = icmp slt i32 %3, 0, !dbg !8031
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !8032

if.then4:                                         ; preds = %do.end
  br label %error, !dbg !8033

if.end5:                                          ; preds = %do.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8034
  %call6 = call i32 @qam_reset_qam(%struct.drxk_state* %4) #9, !dbg !8035
  store i32 %call6, i32* %status, align 4, !dbg !8036
  %5 = load i32, i32* %status, align 4, !dbg !8037
  %cmp7 = icmp slt i32 %5, 0, !dbg !8039
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !8040

if.then8:                                         ; preds = %if.end5
  br label %error, !dbg !8041

if.end9:                                          ; preds = %if.end5
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8042
  %call10 = call i32 @write16(%struct.drxk_state* %6, i32 25165824, i16 zeroext 0) #9, !dbg !8043
  store i32 %call10, i32* %status, align 4, !dbg !8044
  %7 = load i32, i32* %status, align 4, !dbg !8045
  %cmp11 = icmp slt i32 %7, 0, !dbg !8047
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8048

if.then12:                                        ; preds = %if.end9
  br label %error, !dbg !8049

if.end13:                                         ; preds = %if.end9
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8050
  %call14 = call i32 @write16(%struct.drxk_state* %8, i32 25624621, i16 zeroext 1) #9, !dbg !8051
  store i32 %call14, i32* %status, align 4, !dbg !8052
  %9 = load i32, i32* %status, align 4, !dbg !8053
  %cmp15 = icmp slt i32 %9, 0, !dbg !8055
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !8056

if.then16:                                        ; preds = %if.end13
  br label %error, !dbg !8057

if.end17:                                         ; preds = %if.end13
  %10 = load i32, i32* %o_mode.addr, align 4, !dbg !8058
  switch i32 %10, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb19
  ], !dbg !8059

sw.bb:                                            ; preds = %if.end17
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8060
  %call18 = call i32 @bl_chain_cmd(%struct.drxk_state* %11, i16 zeroext 64, i16 zeroext 2, i32 100) #9, !dbg !8062
  store i32 %call18, i32* %status, align 4, !dbg !8063
  br label %sw.epilog, !dbg !8064

sw.bb19:                                          ; preds = %if.end17
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8065
  %call20 = call i32 @bl_direct_cmd(%struct.drxk_state* %12, i32 25559072, i16 zeroext 24544, i16 zeroext 28, i32 100) #9, !dbg !8066
  store i32 %call20, i32* %status, align 4, !dbg !8067
  %13 = load i32, i32* %status, align 4, !dbg !8068
  %cmp21 = icmp slt i32 %13, 0, !dbg !8070
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !8071

if.then22:                                        ; preds = %sw.bb19
  br label %error, !dbg !8072

if.end23:                                         ; preds = %sw.bb19
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8073
  %call24 = call i32 @bl_direct_cmd(%struct.drxk_state* %14, i32 25559104, i16 zeroext 24544, i16 zeroext 28, i32 100) #9, !dbg !8074
  store i32 %call24, i32* %status, align 4, !dbg !8075
  br label %sw.epilog, !dbg !8076

sw.default:                                       ; preds = %if.end17
  store i32 -22, i32* %status, align 4, !dbg !8077
  br label %sw.epilog, !dbg !8078

sw.epilog:                                        ; preds = %sw.default, %if.end23, %sw.bb
  %15 = load i32, i32* %status, align 4, !dbg !8079
  %cmp25 = icmp slt i32 %15, 0, !dbg !8081
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !8082

if.then26:                                        ; preds = %sw.epilog
  br label %error, !dbg !8083

if.end27:                                         ; preds = %sw.epilog
  %16 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8084
  %call28 = call i32 @write16(%struct.drxk_state* %16, i32 25559058, i16 zeroext 2) #9, !dbg !8085
  store i32 %call28, i32* %status, align 4, !dbg !8086
  %17 = load i32, i32* %status, align 4, !dbg !8087
  %cmp29 = icmp slt i32 %17, 0, !dbg !8089
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !8090

if.then30:                                        ; preds = %if.end27
  br label %error, !dbg !8091

if.end31:                                         ; preds = %if.end27
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8092
  %call32 = call i32 @write16(%struct.drxk_state* %18, i32 25559056, i16 zeroext 0) #9, !dbg !8093
  store i32 %call32, i32* %status, align 4, !dbg !8094
  %19 = load i32, i32* %status, align 4, !dbg !8095
  %cmp33 = icmp slt i32 %19, 0, !dbg !8097
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !8098

if.then34:                                        ; preds = %if.end31
  br label %error, !dbg !8099

if.end35:                                         ; preds = %if.end31
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8100
  %call36 = call i32 @write16(%struct.drxk_state* %20, i32 25559057, i16 zeroext 3) #9, !dbg !8101
  store i32 %call36, i32* %status, align 4, !dbg !8102
  %21 = load i32, i32* %status, align 4, !dbg !8103
  %cmp37 = icmp slt i32 %21, 0, !dbg !8105
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !8106

if.then38:                                        ; preds = %if.end35
  br label %error, !dbg !8107

if.end39:                                         ; preds = %if.end35
  %22 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8108
  %call40 = call i32 @write16(%struct.drxk_state* %22, i32 25427990, i16 zeroext 21) #9, !dbg !8109
  store i32 %call40, i32* %status, align 4, !dbg !8110
  %23 = load i32, i32* %status, align 4, !dbg !8111
  %cmp41 = icmp slt i32 %23, 0, !dbg !8113
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !8114

if.then42:                                        ; preds = %if.end39
  br label %error, !dbg !8115

if.end43:                                         ; preds = %if.end39
  %24 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8116
  %call44 = call i32 @write16(%struct.drxk_state* %24, i32 25624611, i16 zeroext 0) #9, !dbg !8117
  store i32 %call44, i32* %status, align 4, !dbg !8118
  %25 = load i32, i32* %status, align 4, !dbg !8119
  %cmp45 = icmp slt i32 %25, 0, !dbg !8121
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !8122

if.then46:                                        ; preds = %if.end43
  br label %error, !dbg !8123

if.end47:                                         ; preds = %if.end43
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8124
  %call48 = call i32 @write16(%struct.drxk_state* %26, i32 25624612, i16 zeroext 448) #9, !dbg !8125
  store i32 %call48, i32* %status, align 4, !dbg !8126
  %27 = load i32, i32* %status, align 4, !dbg !8127
  %cmp49 = icmp slt i32 %27, 0, !dbg !8129
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !8130

if.then50:                                        ; preds = %if.end47
  br label %error, !dbg !8131

if.end51:                                         ; preds = %if.end47
  %28 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8132
  %call52 = call i32 @write16(%struct.drxk_state* %28, i32 25624614, i16 zeroext 0) #9, !dbg !8133
  store i32 %call52, i32* %status, align 4, !dbg !8134
  %29 = load i32, i32* %status, align 4, !dbg !8135
  %cmp53 = icmp slt i32 %29, 0, !dbg !8137
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !8138

if.then54:                                        ; preds = %if.end51
  br label %error, !dbg !8139

if.end55:                                         ; preds = %if.end51
  %30 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8140
  %call56 = call i32 @write16(%struct.drxk_state* %30, i32 25559063, i16 zeroext 0) #9, !dbg !8141
  store i32 %call56, i32* %status, align 4, !dbg !8142
  %31 = load i32, i32* %status, align 4, !dbg !8143
  %cmp57 = icmp slt i32 %31, 0, !dbg !8145
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !8146

if.then58:                                        ; preds = %if.end55
  br label %error, !dbg !8147

if.end59:                                         ; preds = %if.end55
  %32 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8148
  %call60 = call i32 @write16(%struct.drxk_state* %32, i32 25296916, i16 zeroext 1) #9, !dbg !8149
  store i32 %call60, i32* %status, align 4, !dbg !8150
  %33 = load i32, i32* %status, align 4, !dbg !8151
  %cmp61 = icmp slt i32 %33, 0, !dbg !8153
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !8154

if.then62:                                        ; preds = %if.end59
  br label %error, !dbg !8155

if.end63:                                         ; preds = %if.end59
  %34 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8156
  %call64 = call i32 @write16(%struct.drxk_state* %34, i32 25427988, i16 zeroext 1) #9, !dbg !8157
  store i32 %call64, i32* %status, align 4, !dbg !8158
  %35 = load i32, i32* %status, align 4, !dbg !8159
  %cmp65 = icmp slt i32 %35, 0, !dbg !8161
  br i1 %cmp65, label %if.then66, label %if.end67, !dbg !8162

if.then66:                                        ; preds = %if.end63
  br label %error, !dbg !8163

if.end67:                                         ; preds = %if.end63
  %36 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8164
  %call68 = call i32 @write16(%struct.drxk_state* %36, i32 25559059, i16 zeroext 1) #9, !dbg !8165
  store i32 %call68, i32* %status, align 4, !dbg !8166
  %37 = load i32, i32* %status, align 4, !dbg !8167
  %cmp69 = icmp slt i32 %37, 0, !dbg !8169
  br i1 %cmp69, label %if.then70, label %if.end71, !dbg !8170

if.then70:                                        ; preds = %if.end67
  br label %error, !dbg !8171

if.end71:                                         ; preds = %if.end67
  %38 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8172
  %call72 = call i32 @write16(%struct.drxk_state* %38, i32 25624623, i16 zeroext 0) #9, !dbg !8173
  store i32 %call72, i32* %status, align 4, !dbg !8174
  %39 = load i32, i32* %status, align 4, !dbg !8175
  %cmp73 = icmp slt i32 %39, 0, !dbg !8177
  br i1 %cmp73, label %if.then74, label %if.end75, !dbg !8178

if.then74:                                        ; preds = %if.end71
  br label %error, !dbg !8179

if.end75:                                         ; preds = %if.end71
  %40 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8180
  %call76 = call i32 @write16(%struct.drxk_state* %40, i32 25559136, i16 zeroext 500) #9, !dbg !8181
  store i32 %call76, i32* %status, align 4, !dbg !8182
  %41 = load i32, i32* %status, align 4, !dbg !8183
  %cmp77 = icmp slt i32 %41, 0, !dbg !8185
  br i1 %cmp77, label %if.then78, label %if.end79, !dbg !8186

if.then78:                                        ; preds = %if.end75
  br label %error, !dbg !8187

if.end79:                                         ; preds = %if.end75
  %42 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8188
  %call80 = call i32 @write16(%struct.drxk_state* %42, i32 25559137, i16 zeroext 1000) #9, !dbg !8189
  store i32 %call80, i32* %status, align 4, !dbg !8190
  %43 = load i32, i32* %status, align 4, !dbg !8191
  %cmp81 = icmp slt i32 %43, 0, !dbg !8193
  br i1 %cmp81, label %if.then82, label %if.end83, !dbg !8194

if.then82:                                        ; preds = %if.end79
  br label %error, !dbg !8195

if.end83:                                         ; preds = %if.end79
  %44 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8196
  %call84 = call i32 @write16(%struct.drxk_state* %44, i32 25559143, i16 zeroext 1) #9, !dbg !8197
  store i32 %call84, i32* %status, align 4, !dbg !8198
  %45 = load i32, i32* %status, align 4, !dbg !8199
  %cmp85 = icmp slt i32 %45, 0, !dbg !8201
  br i1 %cmp85, label %if.then86, label %if.end87, !dbg !8202

if.then86:                                        ; preds = %if.end83
  br label %error, !dbg !8203

if.end87:                                         ; preds = %if.end83
  %46 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8204
  %call88 = call i32 @write16(%struct.drxk_state* %46, i32 25559140, i16 zeroext 0) #9, !dbg !8205
  store i32 %call88, i32* %status, align 4, !dbg !8206
  %47 = load i32, i32* %status, align 4, !dbg !8207
  %cmp89 = icmp slt i32 %47, 0, !dbg !8209
  br i1 %cmp89, label %if.then90, label %if.end91, !dbg !8210

if.then90:                                        ; preds = %if.end87
  br label %error, !dbg !8211

if.end91:                                         ; preds = %if.end87
  %48 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8212
  %call92 = call i32 @write16(%struct.drxk_state* %48, i32 25559139, i16 zeroext 1) #9, !dbg !8213
  store i32 %call92, i32* %status, align 4, !dbg !8214
  %49 = load i32, i32* %status, align 4, !dbg !8215
  %cmp93 = icmp slt i32 %49, 0, !dbg !8217
  br i1 %cmp93, label %if.then94, label %if.end95, !dbg !8218

if.then94:                                        ; preds = %if.end91
  br label %error, !dbg !8219

if.end95:                                         ; preds = %if.end91
  %50 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8220
  %call96 = call i32 @write16(%struct.drxk_state* %50, i32 25559138, i16 zeroext 1) #9, !dbg !8221
  store i32 %call96, i32* %status, align 4, !dbg !8222
  %51 = load i32, i32* %status, align 4, !dbg !8223
  %cmp97 = icmp slt i32 %51, 0, !dbg !8225
  br i1 %cmp97, label %if.then98, label %if.end99, !dbg !8226

if.then98:                                        ; preds = %if.end95
  br label %error, !dbg !8227

if.end99:                                         ; preds = %if.end95
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8228
  %call100 = call i32 @write16(%struct.drxk_state* %52, i32 25624630, i16 zeroext 1) #9, !dbg !8229
  store i32 %call100, i32* %status, align 4, !dbg !8230
  %53 = load i32, i32* %status, align 4, !dbg !8231
  %cmp101 = icmp slt i32 %53, 0, !dbg !8233
  br i1 %cmp101, label %if.then102, label %if.end103, !dbg !8234

if.then102:                                       ; preds = %if.end99
  br label %error, !dbg !8235

if.end103:                                        ; preds = %if.end99
  %54 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8236
  %call104 = call i32 @set_iqm_af(%struct.drxk_state* %54, i1 zeroext true) #9, !dbg !8237
  store i32 %call104, i32* %status, align 4, !dbg !8238
  %55 = load i32, i32* %status, align 4, !dbg !8239
  %cmp105 = icmp slt i32 %55, 0, !dbg !8241
  br i1 %cmp105, label %if.then106, label %if.end107, !dbg !8242

if.then106:                                       ; preds = %if.end103
  br label %error, !dbg !8243

if.end107:                                        ; preds = %if.end103
  %56 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8244
  %call108 = call i32 @write16(%struct.drxk_state* %56, i32 25624603, i16 zeroext 1) #9, !dbg !8245
  store i32 %call108, i32* %status, align 4, !dbg !8246
  %57 = load i32, i32* %status, align 4, !dbg !8247
  %cmp109 = icmp slt i32 %57, 0, !dbg !8249
  br i1 %cmp109, label %if.then110, label %if.end111, !dbg !8250

if.then110:                                       ; preds = %if.end107
  br label %error, !dbg !8251

if.end111:                                        ; preds = %if.end107
  %58 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8252
  %call112 = call i32 @adc_synchronization(%struct.drxk_state* %58) #9, !dbg !8253
  store i32 %call112, i32* %status, align 4, !dbg !8254
  %59 = load i32, i32* %status, align 4, !dbg !8255
  %cmp113 = icmp slt i32 %59, 0, !dbg !8257
  br i1 %cmp113, label %if.then114, label %if.end115, !dbg !8258

if.then114:                                       ; preds = %if.end111
  br label %error, !dbg !8259

if.end115:                                        ; preds = %if.end111
  %60 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8260
  %call116 = call i32 @write16(%struct.drxk_state* %60, i32 8593092, i16 zeroext 2000) #9, !dbg !8261
  store i32 %call116, i32* %status, align 4, !dbg !8262
  %61 = load i32, i32* %status, align 4, !dbg !8263
  %cmp117 = icmp slt i32 %61, 0, !dbg !8265
  br i1 %cmp117, label %if.then118, label %if.end119, !dbg !8266

if.then118:                                       ; preds = %if.end115
  br label %error, !dbg !8267

if.end119:                                        ; preds = %if.end115
  %62 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8268
  %call120 = call i32 @write16(%struct.drxk_state* %62, i32 8388608, i16 zeroext 2) #9, !dbg !8269
  store i32 %call120, i32* %status, align 4, !dbg !8270
  %63 = load i32, i32* %status, align 4, !dbg !8271
  %cmp121 = icmp slt i32 %63, 0, !dbg !8273
  br i1 %cmp121, label %if.then122, label %if.end123, !dbg !8274

if.then122:                                       ; preds = %if.end119
  br label %error, !dbg !8275

if.end123:                                        ; preds = %if.end119
  %64 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8276
  %call124 = call i32 @init_agc(%struct.drxk_state* %64, i1 zeroext true) #9, !dbg !8277
  store i32 %call124, i32* %status, align 4, !dbg !8278
  %65 = load i32, i32* %status, align 4, !dbg !8279
  %cmp125 = icmp slt i32 %65, 0, !dbg !8281
  br i1 %cmp125, label %if.then126, label %if.end127, !dbg !8282

if.then126:                                       ; preds = %if.end123
  br label %error, !dbg !8283

if.end127:                                        ; preds = %if.end123
  %66 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8284
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8285
  %m_qam_pre_saw_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %67, i32 0, i32 77, !dbg !8286
  %call128 = call i32 @set_pre_saw(%struct.drxk_state* %66, %struct.s_cfg_pre_saw* %m_qam_pre_saw_cfg) #9, !dbg !8287
  store i32 %call128, i32* %status, align 4, !dbg !8288
  %68 = load i32, i32* %status, align 4, !dbg !8289
  %cmp129 = icmp slt i32 %68, 0, !dbg !8291
  br i1 %cmp129, label %if.then130, label %if.end131, !dbg !8292

if.then130:                                       ; preds = %if.end127
  br label %error, !dbg !8293

if.end131:                                        ; preds = %if.end127
  %69 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8294
  %70 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8295
  %m_qam_rf_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %70, i32 0, i32 74, !dbg !8296
  %call132 = call i32 @set_agc_rf(%struct.drxk_state* %69, %struct.s_cfg_agc* %m_qam_rf_agc_cfg, i1 zeroext true) #9, !dbg !8297
  store i32 %call132, i32* %status, align 4, !dbg !8298
  %71 = load i32, i32* %status, align 4, !dbg !8299
  %cmp133 = icmp slt i32 %71, 0, !dbg !8301
  br i1 %cmp133, label %if.then134, label %if.end135, !dbg !8302

if.then134:                                       ; preds = %if.end131
  br label %error, !dbg !8303

if.end135:                                        ; preds = %if.end131
  %72 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8304
  %73 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8305
  %m_qam_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %73, i32 0, i32 75, !dbg !8306
  %call136 = call i32 @set_agc_if(%struct.drxk_state* %72, %struct.s_cfg_agc* %m_qam_if_agc_cfg, i1 zeroext true) #9, !dbg !8307
  store i32 %call136, i32* %status, align 4, !dbg !8308
  %74 = load i32, i32* %status, align 4, !dbg !8309
  %cmp137 = icmp slt i32 %74, 0, !dbg !8311
  br i1 %cmp137, label %if.then138, label %if.end139, !dbg !8312

if.then138:                                       ; preds = %if.end135
  br label %error, !dbg !8313

if.end139:                                        ; preds = %if.end135
  %75 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8314
  %call140 = call i32 @write16(%struct.drxk_state* %75, i32 8388608, i16 zeroext 1) #9, !dbg !8315
  store i32 %call140, i32* %status, align 4, !dbg !8316
  br label %error, !dbg !8317

error:                                            ; preds = %if.end139, %if.then138, %if.then134, %if.then130, %if.then126, %if.then122, %if.then118, %if.then114, %if.then110, %if.then106, %if.then102, %if.then98, %if.then94, %if.then90, %if.then86, %if.then82, %if.then78, %if.then74, %if.then70, %if.then66, %if.then62, %if.then58, %if.then54, %if.then50, %if.then46, %if.then42, %if.then38, %if.then34, %if.then30, %if.then26, %if.then22, %if.then16, %if.then12, %if.then8, %if.then4
  call void @llvm.dbg.label(metadata !8318), !dbg !8319
  %76 = load i32, i32* %status, align 4, !dbg !8320
  %cmp141 = icmp slt i32 %76, 0, !dbg !8322
  br i1 %cmp141, label %if.then142, label %if.end144, !dbg !8323

if.then142:                                       ; preds = %error
  %77 = load i32, i32* %status, align 4, !dbg !8324
  %call143 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %77, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.set_qam_standard, i64 0, i64 0)) #8, !dbg !8324
  br label %if.end144, !dbg !8324

if.end144:                                        ; preds = %if.then142, %error
  %78 = load i32, i32* %status, align 4, !dbg !8325
  ret i32 %78, !dbg !8326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @scu_command(%struct.drxk_state* %state, i16 zeroext %cmd, i8 zeroext %parameter_len, i16* %parameter, i8 zeroext %result_len, i16* %result) #0 !dbg !8327 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !8330, metadata !DIExpression()), !dbg !8335
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %cmd.addr = alloca i16, align 2
  %parameter_len.addr = alloca i8, align 1
  %parameter.addr = alloca i16*, align 8
  %result_len.addr = alloca i8, align 1
  %result.addr = alloca i16*, align 8
  %cur_cmd = alloca i16, align 2
  %status = alloca i32, align 4
  %end = alloca i64, align 8
  %buffer = alloca [34 x i8], align 16
  %cnt = alloca i32, align 4
  %ii = alloca i32, align 4
  %p = alloca i8*, align 8
  %errname = alloca [30 x i8], align 16
  %err = alloca i16, align 2
  %ii80 = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !8337, metadata !DIExpression()), !dbg !8338
  store i16 %cmd, i16* %cmd.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cmd.addr, metadata !8339, metadata !DIExpression()), !dbg !8340
  store i8 %parameter_len, i8* %parameter_len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %parameter_len.addr, metadata !8341, metadata !DIExpression()), !dbg !8342
  store i16* %parameter, i16** %parameter.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %parameter.addr, metadata !8343, metadata !DIExpression()), !dbg !8344
  store i8 %result_len, i8* %result_len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %result_len.addr, metadata !8345, metadata !DIExpression()), !dbg !8346
  store i16* %result, i16** %result.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %result.addr, metadata !8347, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.declare(metadata i16* %cur_cmd, metadata !8349, metadata !DIExpression()), !dbg !8350
  store i16 0, i16* %cur_cmd, align 2, !dbg !8350
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8351, metadata !DIExpression()), !dbg !8352
  store i32 -22, i32* %status, align 4, !dbg !8352
  call void @llvm.dbg.declare(metadata i64* %end, metadata !8353, metadata !DIExpression()), !dbg !8354
  call void @llvm.dbg.declare(metadata [34 x i8]* %buffer, metadata !8355, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.declare(metadata i32* %cnt, metadata !8358, metadata !DIExpression()), !dbg !8359
  store i32 0, i32* %cnt, align 4, !dbg !8359
  call void @llvm.dbg.declare(metadata i32* %ii, metadata !8360, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8362, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.declare(metadata [30 x i8]* %errname, metadata !8364, metadata !DIExpression()), !dbg !8366
  br label %do.body, !dbg !8367

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !8368
  %cmp = icmp uge i32 %0, 1, !dbg !8368
  br i1 %cmp, label %if.then, label %if.end, !dbg !8371

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.scu_command, i64 0, i64 0)) #8, !dbg !8368
  br label %if.end, !dbg !8368

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !8371

do.end:                                           ; preds = %if.end
  %1 = load i16, i16* %cmd.addr, align 2, !dbg !8372
  %conv = zext i16 %1 to i32, !dbg !8372
  %cmp1 = icmp eq i32 %conv, 0, !dbg !8374
  br i1 %cmp1, label %if.then15, label %lor.lhs.false, !dbg !8375

lor.lhs.false:                                    ; preds = %do.end
  %2 = load i8, i8* %parameter_len.addr, align 1, !dbg !8376
  %conv3 = zext i8 %2 to i32, !dbg !8376
  %cmp4 = icmp sgt i32 %conv3, 0, !dbg !8377
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false8, !dbg !8378

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = load i16*, i16** %parameter.addr, align 8, !dbg !8379
  %cmp6 = icmp eq i16* %3, null, !dbg !8380
  br i1 %cmp6, label %if.then15, label %lor.lhs.false8, !dbg !8381

lor.lhs.false8:                                   ; preds = %land.lhs.true, %lor.lhs.false
  %4 = load i8, i8* %result_len.addr, align 1, !dbg !8382
  %conv9 = zext i8 %4 to i32, !dbg !8382
  %cmp10 = icmp sgt i32 %conv9, 0, !dbg !8383
  br i1 %cmp10, label %land.lhs.true12, label %if.end17, !dbg !8384

land.lhs.true12:                                  ; preds = %lor.lhs.false8
  %5 = load i16*, i16** %result.addr, align 8, !dbg !8385
  %cmp13 = icmp eq i16* %5, null, !dbg !8386
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !8387

if.then15:                                        ; preds = %land.lhs.true12, %land.lhs.true, %do.end
  %6 = load i32, i32* %status, align 4, !dbg !8388
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.scu_command, i64 0, i64 0)) #8, !dbg !8388
  %7 = load i32, i32* %status, align 4, !dbg !8390
  store i32 %7, i32* %retval, align 4, !dbg !8391
  br label %return, !dbg !8391

if.end17:                                         ; preds = %land.lhs.true12, %lor.lhs.false8
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8392
  %mutex = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %8, i32 0, i32 6, !dbg !8393
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !8394
  %9 = load i16*, i16** %parameter.addr, align 8, !dbg !8395
  %tobool = icmp ne i16* %9, null, !dbg !8395
  br i1 %tobool, label %if.then18, label %if.end35, !dbg !8397

if.then18:                                        ; preds = %if.end17
  %10 = load i8, i8* %parameter_len.addr, align 1, !dbg !8398
  %conv19 = zext i8 %10 to i32, !dbg !8398
  %sub = sub i32 %conv19, 1, !dbg !8401
  store i32 %sub, i32* %ii, align 4, !dbg !8402
  br label %for.cond, !dbg !8403

for.cond:                                         ; preds = %for.inc, %if.then18
  %11 = load i32, i32* %ii, align 4, !dbg !8404
  %cmp20 = icmp sge i32 %11, 0, !dbg !8406
  br i1 %cmp20, label %for.body, label %for.end, !dbg !8407

for.body:                                         ; preds = %for.cond
  %12 = load i16*, i16** %parameter.addr, align 8, !dbg !8408
  %13 = load i32, i32* %ii, align 4, !dbg !8410
  %idxprom = sext i32 %13 to i64, !dbg !8408
  %arrayidx = getelementptr i16, i16* %12, i64 %idxprom, !dbg !8408
  %14 = load i16, i16* %arrayidx, align 2, !dbg !8408
  %conv22 = zext i16 %14 to i32, !dbg !8408
  %and = and i32 %conv22, 255, !dbg !8411
  %conv23 = trunc i32 %and to i8, !dbg !8412
  %15 = load i32, i32* %cnt, align 4, !dbg !8413
  %inc = add i32 %15, 1, !dbg !8413
  store i32 %inc, i32* %cnt, align 4, !dbg !8413
  %idxprom24 = sext i32 %15 to i64, !dbg !8414
  %arrayidx25 = getelementptr [34 x i8], [34 x i8]* %buffer, i64 0, i64 %idxprom24, !dbg !8414
  store i8 %conv23, i8* %arrayidx25, align 1, !dbg !8415
  %16 = load i16*, i16** %parameter.addr, align 8, !dbg !8416
  %17 = load i32, i32* %ii, align 4, !dbg !8417
  %idxprom26 = sext i32 %17 to i64, !dbg !8416
  %arrayidx27 = getelementptr i16, i16* %16, i64 %idxprom26, !dbg !8416
  %18 = load i16, i16* %arrayidx27, align 2, !dbg !8416
  %conv28 = zext i16 %18 to i32, !dbg !8416
  %shr = ashr i32 %conv28, 8, !dbg !8418
  %and29 = and i32 %shr, 255, !dbg !8419
  %conv30 = trunc i32 %and29 to i8, !dbg !8420
  %19 = load i32, i32* %cnt, align 4, !dbg !8421
  %inc31 = add i32 %19, 1, !dbg !8421
  store i32 %inc31, i32* %cnt, align 4, !dbg !8421
  %idxprom32 = sext i32 %19 to i64, !dbg !8422
  %arrayidx33 = getelementptr [34 x i8], [34 x i8]* %buffer, i64 0, i64 %idxprom32, !dbg !8422
  store i8 %conv30, i8* %arrayidx33, align 1, !dbg !8423
  br label %for.inc, !dbg !8424

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %ii, align 4, !dbg !8425
  %sub34 = sub i32 %20, 1, !dbg !8425
  store i32 %sub34, i32* %ii, align 4, !dbg !8425
  br label %for.cond, !dbg !8426, !llvm.loop !8427

for.end:                                          ; preds = %for.cond
  br label %if.end35, !dbg !8429

if.end35:                                         ; preds = %for.end, %if.end17
  %21 = load i16, i16* %cmd.addr, align 2, !dbg !8430
  %conv36 = zext i16 %21 to i32, !dbg !8430
  %and37 = and i32 %conv36, 255, !dbg !8431
  %conv38 = trunc i32 %and37 to i8, !dbg !8432
  %22 = load i32, i32* %cnt, align 4, !dbg !8433
  %inc39 = add i32 %22, 1, !dbg !8433
  store i32 %inc39, i32* %cnt, align 4, !dbg !8433
  %idxprom40 = sext i32 %22 to i64, !dbg !8434
  %arrayidx41 = getelementptr [34 x i8], [34 x i8]* %buffer, i64 0, i64 %idxprom40, !dbg !8434
  store i8 %conv38, i8* %arrayidx41, align 1, !dbg !8435
  %23 = load i16, i16* %cmd.addr, align 2, !dbg !8436
  %conv42 = zext i16 %23 to i32, !dbg !8436
  %shr43 = ashr i32 %conv42, 8, !dbg !8437
  %and44 = and i32 %shr43, 255, !dbg !8438
  %conv45 = trunc i32 %and44 to i8, !dbg !8439
  %24 = load i32, i32* %cnt, align 4, !dbg !8440
  %inc46 = add i32 %24, 1, !dbg !8440
  store i32 %inc46, i32* %cnt, align 4, !dbg !8440
  %idxprom47 = sext i32 %24 to i64, !dbg !8441
  %arrayidx48 = getelementptr [34 x i8], [34 x i8]* %buffer, i64 0, i64 %idxprom47, !dbg !8441
  store i8 %conv45, i8* %arrayidx48, align 1, !dbg !8442
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8443
  %26 = load i8, i8* %parameter_len.addr, align 1, !dbg !8444
  %conv49 = zext i8 %26 to i32, !dbg !8444
  %sub50 = sub i32 %conv49, 1, !dbg !8445
  %sub51 = sub i32 8593404, %sub50, !dbg !8446
  %27 = load i32, i32* %cnt, align 4, !dbg !8447
  %arraydecay = getelementptr inbounds [34 x i8], [34 x i8]* %buffer, i64 0, i64 0, !dbg !8448
  %call52 = call i32 @write_block(%struct.drxk_state* %25, i32 %sub51, i32 %27, i8* %arraydecay) #9, !dbg !8449
  %28 = load volatile i64, i64* @jiffies, align 8, !dbg !8450
  store i32 200, i32* %m.addr.i, align 4
  %29 = load i32, i32* %m.addr.i, align 4, !dbg !8451
  %30 = call i1 @llvm.is.constant.i32(i32 %29) #10, !dbg !8453
  br i1 %30, label %if.then.i, label %if.else.i, !dbg !8454

if.then.i:                                        ; preds = %if.end35
  %31 = load i32, i32* %m.addr.i, align 4, !dbg !8455
  %cmp.i = icmp slt i32 %31, 0, !dbg !8458
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8459

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !8460
  br label %msecs_to_jiffies.exit, !dbg !8460

if.end.i:                                         ; preds = %if.then.i
  %32 = load i32, i32* %m.addr.i, align 4, !dbg !8461
  %call.i = call i64 @_msecs_to_jiffies(i32 %32) #12, !dbg !8462
  store i64 %call.i, i64* %retval.i, align 8, !dbg !8463
  br label %msecs_to_jiffies.exit, !dbg !8463

if.else.i:                                        ; preds = %if.end35
  %33 = load i32, i32* %m.addr.i, align 4, !dbg !8464
  %call2.i = call i64 @__msecs_to_jiffies(i32 %33) #12, !dbg !8466
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !8467
  br label %msecs_to_jiffies.exit, !dbg !8467

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %34 = load i64, i64* %retval.i, align 8, !dbg !8468
  %add = add i64 %28, %34, !dbg !8469
  store i64 %add, i64* %end, align 8, !dbg !8470
  br label %do.body54, !dbg !8471

do.body54:                                        ; preds = %land.end, %msecs_to_jiffies.exit
  call void @usleep_range(i64 1000, i64 2000) #9, !dbg !8472
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8474
  %call55 = call i32 @read16(%struct.drxk_state* %35, i32 8593405, i16* %cur_cmd) #9, !dbg !8475
  store i32 %call55, i32* %status, align 4, !dbg !8476
  %36 = load i32, i32* %status, align 4, !dbg !8477
  %cmp56 = icmp slt i32 %36, 0, !dbg !8479
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !8480

if.then58:                                        ; preds = %do.body54
  br label %error, !dbg !8481

if.end59:                                         ; preds = %do.body54
  br label %do.cond, !dbg !8482

do.cond:                                          ; preds = %if.end59
  %37 = load i16, i16* %cur_cmd, align 2, !dbg !8483
  %conv60 = zext i16 %37 to i32, !dbg !8483
  %cmp61 = icmp eq i32 %conv60, 0, !dbg !8484
  br i1 %cmp61, label %land.end, label %land.rhs, !dbg !8485

land.rhs:                                         ; preds = %do.cond
  %38 = load volatile i64, i64* @jiffies, align 8, !dbg !8486
  %39 = load i64, i64* %end, align 8, !dbg !8486
  %sub63 = sub i64 %38, %39, !dbg !8486
  %cmp64 = icmp slt i64 %sub63, 0, !dbg !8486
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %40 = phi i1 [ false, %do.cond ], [ %cmp64, %land.rhs ], !dbg !8487
  br i1 %40, label %do.body54, label %do.end66, !dbg !8482, !llvm.loop !8488

do.end66:                                         ; preds = %land.end
  %41 = load i16, i16* %cur_cmd, align 2, !dbg !8490
  %conv67 = zext i16 %41 to i32, !dbg !8490
  %cmp68 = icmp ne i32 %conv67, 0, !dbg !8492
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !8493

if.then70:                                        ; preds = %do.end66
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0)) #8, !dbg !8494
  store i32 -5, i32* %status, align 4, !dbg !8496
  br label %error2, !dbg !8497

if.end72:                                         ; preds = %do.end66
  %42 = load i8, i8* %result_len.addr, align 1, !dbg !8498
  %conv73 = zext i8 %42 to i32, !dbg !8498
  %cmp74 = icmp sgt i32 %conv73, 0, !dbg !8500
  br i1 %cmp74, label %land.lhs.true76, label %if.end116, !dbg !8501

land.lhs.true76:                                  ; preds = %if.end72
  %43 = load i16*, i16** %result.addr, align 8, !dbg !8502
  %cmp77 = icmp ne i16* %43, null, !dbg !8503
  br i1 %cmp77, label %if.then79, label %if.end116, !dbg !8504

if.then79:                                        ; preds = %land.lhs.true76
  call void @llvm.dbg.declare(metadata i16* %err, metadata !8505, metadata !DIExpression()), !dbg !8507
  call void @llvm.dbg.declare(metadata i32* %ii80, metadata !8508, metadata !DIExpression()), !dbg !8509
  %44 = load i8, i8* %result_len.addr, align 1, !dbg !8510
  %conv81 = zext i8 %44 to i32, !dbg !8510
  %sub82 = sub i32 %conv81, 1, !dbg !8512
  store i32 %sub82, i32* %ii80, align 4, !dbg !8513
  br label %for.cond83, !dbg !8514

for.cond83:                                       ; preds = %for.inc95, %if.then79
  %45 = load i32, i32* %ii80, align 4, !dbg !8515
  %cmp84 = icmp sge i32 %45, 0, !dbg !8517
  br i1 %cmp84, label %for.body86, label %for.end97, !dbg !8518

for.body86:                                       ; preds = %for.cond83
  %46 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8519
  %47 = load i32, i32* %ii80, align 4, !dbg !8521
  %sub87 = sub i32 8593404, %47, !dbg !8522
  %48 = load i16*, i16** %result.addr, align 8, !dbg !8523
  %49 = load i32, i32* %ii80, align 4, !dbg !8524
  %idxprom88 = sext i32 %49 to i64, !dbg !8523
  %arrayidx89 = getelementptr i16, i16* %48, i64 %idxprom88, !dbg !8523
  %call90 = call i32 @read16(%struct.drxk_state* %46, i32 %sub87, i16* %arrayidx89) #9, !dbg !8525
  store i32 %call90, i32* %status, align 4, !dbg !8526
  %50 = load i32, i32* %status, align 4, !dbg !8527
  %cmp91 = icmp slt i32 %50, 0, !dbg !8529
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !8530

if.then93:                                        ; preds = %for.body86
  br label %error, !dbg !8531

if.end94:                                         ; preds = %for.body86
  br label %for.inc95, !dbg !8532

for.inc95:                                        ; preds = %if.end94
  %51 = load i32, i32* %ii80, align 4, !dbg !8533
  %sub96 = sub i32 %51, 1, !dbg !8533
  store i32 %sub96, i32* %ii80, align 4, !dbg !8533
  br label %for.cond83, !dbg !8534, !llvm.loop !8535

for.end97:                                        ; preds = %for.cond83
  %52 = load i16*, i16** %result.addr, align 8, !dbg !8537
  %arrayidx98 = getelementptr i16, i16* %52, i64 0, !dbg !8537
  %53 = load i16, i16* %arrayidx98, align 2, !dbg !8537
  store i16 %53, i16* %err, align 2, !dbg !8538
  %54 = load i16, i16* %err, align 2, !dbg !8539
  %conv99 = sext i16 %54 to i32, !dbg !8539
  %cmp100 = icmp sge i32 %conv99, 0, !dbg !8541
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !8542

if.then102:                                       ; preds = %for.end97
  br label %error, !dbg !8543

if.end103:                                        ; preds = %for.end97
  %55 = load i16, i16* %err, align 2, !dbg !8544
  %conv104 = sext i16 %55 to i32, !dbg !8544
  switch i32 %conv104, label %sw.default [
    i32 -1, label %sw.bb
    i32 -2, label %sw.bb105
    i32 -4, label %sw.bb106
    i32 -3, label %sw.bb107
  ], !dbg !8545

sw.bb:                                            ; preds = %if.end103
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i8** %p, align 8, !dbg !8546
  br label %sw.epilog, !dbg !8548

sw.bb105:                                         ; preds = %if.end103
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i8** %p, align 8, !dbg !8549
  br label %sw.epilog, !dbg !8550

sw.bb106:                                         ; preds = %if.end103
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0), i8** %p, align 8, !dbg !8551
  br label %sw.epilog, !dbg !8552

sw.bb107:                                         ; preds = %if.end103
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i8** %p, align 8, !dbg !8553
  br label %sw.epilog, !dbg !8554

sw.default:                                       ; preds = %if.end103
  %arraydecay108 = getelementptr inbounds [30 x i8], [30 x i8]* %errname, i64 0, i64 0, !dbg !8555
  %56 = load i16, i16* %err, align 2, !dbg !8556
  %conv109 = sext i16 %56 to i32, !dbg !8556
  %call110 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay108, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i32 %conv109) #9, !dbg !8557
  %arraydecay111 = getelementptr inbounds [30 x i8], [30 x i8]* %errname, i64 0, i64 0, !dbg !8558
  store i8* %arraydecay111, i8** %p, align 8, !dbg !8559
  br label %sw.epilog, !dbg !8560

sw.epilog:                                        ; preds = %sw.default, %sw.bb107, %sw.bb106, %sw.bb105, %sw.bb
  %57 = load i8*, i8** %p, align 8, !dbg !8561
  %58 = load i16, i16* %cmd.addr, align 2, !dbg !8561
  %conv112 = zext i16 %58 to i32, !dbg !8561
  %call113 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.25, i64 0, i64 0), i8* %57, i32 %conv112) #8, !dbg !8561
  %arraydecay114 = getelementptr inbounds [34 x i8], [34 x i8]* %buffer, i64 0, i64 0, !dbg !8562
  %59 = load i32, i32* %cnt, align 4, !dbg !8562
  %conv115 = sext i32 %59 to i64, !dbg !8562
  call void @print_hex_dump_debug(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i32 0, i32 16, i32 1, i8* %arraydecay114, i64 %conv115, i1 zeroext true) #9, !dbg !8562
  store i32 -22, i32* %status, align 4, !dbg !8563
  br label %error2, !dbg !8564

if.end116:                                        ; preds = %land.lhs.true76, %if.end72
  br label %error, !dbg !8565

error:                                            ; preds = %if.end116, %if.then102, %if.then93, %if.then58
  call void @llvm.dbg.label(metadata !8566), !dbg !8567
  %60 = load i32, i32* %status, align 4, !dbg !8568
  %cmp117 = icmp slt i32 %60, 0, !dbg !8570
  br i1 %cmp117, label %if.then119, label %if.end121, !dbg !8571

if.then119:                                       ; preds = %error
  %61 = load i32, i32* %status, align 4, !dbg !8572
  %call120 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %61, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.scu_command, i64 0, i64 0)) #8, !dbg !8572
  br label %if.end121, !dbg !8572

if.end121:                                        ; preds = %if.then119, %error
  br label %error2, !dbg !8573

error2:                                           ; preds = %if.end121, %sw.epilog, %if.then70
  call void @llvm.dbg.label(metadata !8574), !dbg !8575
  %62 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8576
  %mutex122 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %62, i32 0, i32 6, !dbg !8577
  call void @mutex_unlock(%struct.mutex* %mutex122) #9, !dbg !8578
  %63 = load i32, i32* %status, align 4, !dbg !8579
  store i32 %63, i32* %retval, align 4, !dbg !8580
  br label %return, !dbg !8580

return:                                           ; preds = %error2, %if.then15
  %64 = load i32, i32* %retval, align 4, !dbg !8581
  ret i32 %64, !dbg !8581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_iqm_af(%struct.drxk_state* %state, i1 zeroext %active) #0 !dbg !8582 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %active.addr = alloca i8, align 1
  %data = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !8583, metadata !DIExpression()), !dbg !8584
  %frombool = zext i1 %active to i8
  store i8 %frombool, i8* %active.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %active.addr, metadata !8585, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.declare(metadata i16* %data, metadata !8587, metadata !DIExpression()), !dbg !8588
  store i16 0, i16* %data, align 2, !dbg !8588
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8589, metadata !DIExpression()), !dbg !8590
  br label %do.body, !dbg !8591

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !8592
  %cmp = icmp uge i32 %0, 1, !dbg !8592
  br i1 %cmp, label %if.then, label %if.end, !dbg !8595

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.set_iqm_af, i64 0, i64 0)) #8, !dbg !8592
  br label %if.end, !dbg !8592

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !8595

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8596
  %call1 = call i32 @read16(%struct.drxk_state* %1, i32 25624620, i16* %data) #9, !dbg !8597
  store i32 %call1, i32* %status, align 4, !dbg !8598
  %2 = load i32, i32* %status, align 4, !dbg !8599
  %cmp2 = icmp slt i32 %2, 0, !dbg !8601
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8602

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !8603

if.end4:                                          ; preds = %do.end
  %3 = load i8, i8* %active.addr, align 1, !dbg !8604
  %tobool = trunc i8 %3 to i1, !dbg !8604
  br i1 %tobool, label %if.else, label %if.then5, !dbg !8606

if.then5:                                         ; preds = %if.end4
  %4 = load i16, i16* %data, align 2, !dbg !8607
  %conv = zext i16 %4 to i32, !dbg !8607
  %or = or i32 %conv, 62, !dbg !8607
  %conv6 = trunc i32 %or to i16, !dbg !8607
  store i16 %conv6, i16* %data, align 2, !dbg !8607
  br label %if.end9, !dbg !8609

if.else:                                          ; preds = %if.end4
  %5 = load i16, i16* %data, align 2, !dbg !8610
  %conv7 = zext i16 %5 to i32, !dbg !8610
  %and = and i32 %conv7, -63, !dbg !8610
  %conv8 = trunc i32 %and to i16, !dbg !8610
  store i16 %conv8, i16* %data, align 2, !dbg !8610
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then5
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8612
  %7 = load i16, i16* %data, align 2, !dbg !8613
  %call10 = call i32 @write16(%struct.drxk_state* %6, i32 25624620, i16 zeroext %7) #9, !dbg !8614
  store i32 %call10, i32* %status, align 4, !dbg !8615
  br label %error, !dbg !8616

error:                                            ; preds = %if.end9, %if.then3
  call void @llvm.dbg.label(metadata !8617), !dbg !8618
  %8 = load i32, i32* %status, align 4, !dbg !8619
  %cmp11 = icmp slt i32 %8, 0, !dbg !8621
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !8622

if.then13:                                        ; preds = %error
  %9 = load i32, i32* %status, align 4, !dbg !8623
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.set_iqm_af, i64 0, i64 0)) #8, !dbg !8623
  br label %if.end15, !dbg !8623

if.end15:                                         ; preds = %if.then13, %error
  %10 = load i32, i32* %status, align 4, !dbg !8624
  ret i32 %10, !dbg !8625
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ctrl_power_mode(%struct.drxk_state* %state, i32* %mode) #0 !dbg !8626 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %mode.addr = alloca i32*, align 8
  %status = alloca i32, align 4
  %sio_cc_pwd_mode = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !8630, metadata !DIExpression()), !dbg !8631
  store i32* %mode, i32** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mode.addr, metadata !8632, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8634, metadata !DIExpression()), !dbg !8635
  store i32 0, i32* %status, align 4, !dbg !8635
  call void @llvm.dbg.declare(metadata i16* %sio_cc_pwd_mode, metadata !8636, metadata !DIExpression()), !dbg !8637
  store i16 0, i16* %sio_cc_pwd_mode, align 2, !dbg !8637
  br label %do.body, !dbg !8638

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !8639
  %cmp = icmp uge i32 %0, 1, !dbg !8639
  br i1 %cmp, label %if.then, label %if.end, !dbg !8642

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.ctrl_power_mode, i64 0, i64 0)) #8, !dbg !8639
  br label %if.end, !dbg !8639

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !8642

do.end:                                           ; preds = %if.end
  %1 = load i32*, i32** %mode.addr, align 8, !dbg !8643
  %cmp1 = icmp eq i32* %1, null, !dbg !8645
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !8646

if.then2:                                         ; preds = %do.end
  store i32 -22, i32* %retval, align 4, !dbg !8647
  br label %return, !dbg !8647

if.end3:                                          ; preds = %do.end
  %2 = load i32*, i32** %mode.addr, align 8, !dbg !8648
  %3 = load i32, i32* %2, align 4, !dbg !8649
  switch i32 %3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb4
    i32 9, label %sw.bb5
    i32 10, label %sw.bb6
    i32 255, label %sw.bb7
  ], !dbg !8650

sw.bb:                                            ; preds = %if.end3
  store i16 0, i16* %sio_cc_pwd_mode, align 2, !dbg !8651
  br label %sw.epilog, !dbg !8653

sw.bb4:                                           ; preds = %if.end3
  store i16 1, i16* %sio_cc_pwd_mode, align 2, !dbg !8654
  br label %sw.epilog, !dbg !8655

sw.bb5:                                           ; preds = %if.end3
  store i16 2, i16* %sio_cc_pwd_mode, align 2, !dbg !8656
  br label %sw.epilog, !dbg !8657

sw.bb6:                                           ; preds = %if.end3
  store i16 3, i16* %sio_cc_pwd_mode, align 2, !dbg !8658
  br label %sw.epilog, !dbg !8659

sw.bb7:                                           ; preds = %if.end3
  store i16 4, i16* %sio_cc_pwd_mode, align 2, !dbg !8660
  br label %sw.epilog, !dbg !8661

sw.default:                                       ; preds = %if.end3
  store i32 -22, i32* %retval, align 4, !dbg !8662
  br label %return, !dbg !8662

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8663
  %m_current_power_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 98, !dbg !8665
  %5 = load i32, i32* %m_current_power_mode, align 4, !dbg !8665
  %6 = load i32*, i32** %mode.addr, align 8, !dbg !8666
  %7 = load i32, i32* %6, align 4, !dbg !8667
  %cmp8 = icmp eq i32 %5, %7, !dbg !8668
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !8669

if.then9:                                         ; preds = %sw.epilog
  store i32 0, i32* %retval, align 4, !dbg !8670
  br label %return, !dbg !8670

if.end10:                                         ; preds = %sw.epilog
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8671
  %m_current_power_mode11 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %8, i32 0, i32 98, !dbg !8673
  %9 = load i32, i32* %m_current_power_mode11, align 4, !dbg !8673
  %cmp12 = icmp ne i32 %9, 0, !dbg !8674
  br i1 %cmp12, label %if.then13, label %if.end22, !dbg !8675

if.then13:                                        ; preds = %if.end10
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8676
  %call14 = call i32 @power_up_device(%struct.drxk_state* %10) #9, !dbg !8678
  store i32 %call14, i32* %status, align 4, !dbg !8679
  %11 = load i32, i32* %status, align 4, !dbg !8680
  %cmp15 = icmp slt i32 %11, 0, !dbg !8682
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !8683

if.then16:                                        ; preds = %if.then13
  br label %error, !dbg !8684

if.end17:                                         ; preds = %if.then13
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8685
  %call18 = call i32 @dvbt_enable_ofdm_token_ring(%struct.drxk_state* %12, i1 zeroext true) #9, !dbg !8686
  store i32 %call18, i32* %status, align 4, !dbg !8687
  %13 = load i32, i32* %status, align 4, !dbg !8688
  %cmp19 = icmp slt i32 %13, 0, !dbg !8690
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !8691

if.then20:                                        ; preds = %if.end17
  br label %error, !dbg !8692

if.end21:                                         ; preds = %if.end17
  br label %if.end22, !dbg !8693

if.end22:                                         ; preds = %if.end21, %if.end10
  %14 = load i32*, i32** %mode.addr, align 8, !dbg !8694
  %15 = load i32, i32* %14, align 4, !dbg !8696
  %cmp23 = icmp eq i32 %15, 0, !dbg !8697
  br i1 %cmp23, label %if.then24, label %if.else, !dbg !8698

if.then24:                                        ; preds = %if.end22
  br label %if.end66, !dbg !8699

if.else:                                          ; preds = %if.end22
  %16 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8701
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %16, i32 0, i32 28, !dbg !8703
  %17 = load i32, i32* %m_operation_mode, align 8, !dbg !8703
  switch i32 %17, label %sw.default43 [
    i32 4, label %sw.bb25
    i32 1, label %sw.bb34
    i32 3, label %sw.bb34
  ], !dbg !8704

sw.bb25:                                          ; preds = %if.else
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8705
  %call26 = call i32 @mpegts_stop(%struct.drxk_state* %18) #9, !dbg !8707
  store i32 %call26, i32* %status, align 4, !dbg !8708
  %19 = load i32, i32* %status, align 4, !dbg !8709
  %cmp27 = icmp slt i32 %19, 0, !dbg !8711
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !8712

if.then28:                                        ; preds = %sw.bb25
  br label %error, !dbg !8713

if.end29:                                         ; preds = %sw.bb25
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8714
  %call30 = call i32 @power_down_dvbt(%struct.drxk_state* %20, i1 zeroext false) #9, !dbg !8715
  store i32 %call30, i32* %status, align 4, !dbg !8716
  %21 = load i32, i32* %status, align 4, !dbg !8717
  %cmp31 = icmp slt i32 %21, 0, !dbg !8719
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !8720

if.then32:                                        ; preds = %if.end29
  br label %error, !dbg !8721

if.end33:                                         ; preds = %if.end29
  br label %sw.epilog44, !dbg !8722

sw.bb34:                                          ; preds = %if.else, %if.else
  %22 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8723
  %call35 = call i32 @mpegts_stop(%struct.drxk_state* %22) #9, !dbg !8724
  store i32 %call35, i32* %status, align 4, !dbg !8725
  %23 = load i32, i32* %status, align 4, !dbg !8726
  %cmp36 = icmp slt i32 %23, 0, !dbg !8728
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !8729

if.then37:                                        ; preds = %sw.bb34
  br label %error, !dbg !8730

if.end38:                                         ; preds = %sw.bb34
  %24 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8731
  %call39 = call i32 @power_down_qam(%struct.drxk_state* %24) #9, !dbg !8732
  store i32 %call39, i32* %status, align 4, !dbg !8733
  %25 = load i32, i32* %status, align 4, !dbg !8734
  %cmp40 = icmp slt i32 %25, 0, !dbg !8736
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !8737

if.then41:                                        ; preds = %if.end38
  br label %error, !dbg !8738

if.end42:                                         ; preds = %if.end38
  br label %sw.epilog44, !dbg !8739

sw.default43:                                     ; preds = %if.else
  br label %sw.epilog44, !dbg !8740

sw.epilog44:                                      ; preds = %sw.default43, %if.end42, %if.end33
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8741
  %call45 = call i32 @dvbt_enable_ofdm_token_ring(%struct.drxk_state* %26, i1 zeroext false) #9, !dbg !8742
  store i32 %call45, i32* %status, align 4, !dbg !8743
  %27 = load i32, i32* %status, align 4, !dbg !8744
  %cmp46 = icmp slt i32 %27, 0, !dbg !8746
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !8747

if.then47:                                        ; preds = %sw.epilog44
  br label %error, !dbg !8748

if.end48:                                         ; preds = %sw.epilog44
  %28 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8749
  %29 = load i16, i16* %sio_cc_pwd_mode, align 2, !dbg !8750
  %call49 = call i32 @write16(%struct.drxk_state* %28, i32 4522005, i16 zeroext %29) #9, !dbg !8751
  store i32 %call49, i32* %status, align 4, !dbg !8752
  %30 = load i32, i32* %status, align 4, !dbg !8753
  %cmp50 = icmp slt i32 %30, 0, !dbg !8755
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !8756

if.then51:                                        ; preds = %if.end48
  br label %error, !dbg !8757

if.end52:                                         ; preds = %if.end48
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8758
  %call53 = call i32 @write16(%struct.drxk_state* %31, i32 4522007, i16 zeroext -1350) #9, !dbg !8759
  store i32 %call53, i32* %status, align 4, !dbg !8760
  %32 = load i32, i32* %status, align 4, !dbg !8761
  %cmp54 = icmp slt i32 %32, 0, !dbg !8763
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !8764

if.then55:                                        ; preds = %if.end52
  br label %error, !dbg !8765

if.end56:                                         ; preds = %if.end52
  %33 = load i32*, i32** %mode.addr, align 8, !dbg !8766
  %34 = load i32, i32* %33, align 4, !dbg !8768
  %cmp57 = icmp ne i32 %34, 1, !dbg !8769
  br i1 %cmp57, label %if.then58, label %if.end65, !dbg !8770

if.then58:                                        ; preds = %if.end56
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8771
  %m_hi_cfg_ctrl = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %35, i32 0, i32 25, !dbg !8773
  %36 = load i16, i16* %m_hi_cfg_ctrl, align 4, !dbg !8774
  %conv = zext i16 %36 to i32, !dbg !8774
  %or = or i32 %conv, 8, !dbg !8774
  %conv59 = trunc i32 %or to i16, !dbg !8774
  store i16 %conv59, i16* %m_hi_cfg_ctrl, align 4, !dbg !8774
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8775
  %call60 = call i32 @hi_cfg_command(%struct.drxk_state* %37) #9, !dbg !8776
  store i32 %call60, i32* %status, align 4, !dbg !8777
  %38 = load i32, i32* %status, align 4, !dbg !8778
  %cmp61 = icmp slt i32 %38, 0, !dbg !8780
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !8781

if.then63:                                        ; preds = %if.then58
  br label %error, !dbg !8782

if.end64:                                         ; preds = %if.then58
  br label %if.end65, !dbg !8783

if.end65:                                         ; preds = %if.end64, %if.end56
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then24
  %39 = load i32*, i32** %mode.addr, align 8, !dbg !8784
  %40 = load i32, i32* %39, align 4, !dbg !8785
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8786
  %m_current_power_mode67 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %41, i32 0, i32 98, !dbg !8787
  store i32 %40, i32* %m_current_power_mode67, align 4, !dbg !8788
  br label %error, !dbg !8786

error:                                            ; preds = %if.end66, %if.then63, %if.then55, %if.then51, %if.then47, %if.then41, %if.then37, %if.then32, %if.then28, %if.then20, %if.then16
  call void @llvm.dbg.label(metadata !8789), !dbg !8790
  %42 = load i32, i32* %status, align 4, !dbg !8791
  %cmp68 = icmp slt i32 %42, 0, !dbg !8793
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !8794

if.then70:                                        ; preds = %error
  %43 = load i32, i32* %status, align 4, !dbg !8795
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %43, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.ctrl_power_mode, i64 0, i64 0)) #8, !dbg !8795
  br label %if.end72, !dbg !8795

if.end72:                                         ; preds = %if.then70, %error
  %44 = load i32, i32* %status, align 4, !dbg !8796
  store i32 %44, i32* %retval, align 4, !dbg !8797
  br label %return, !dbg !8797

return:                                           ; preds = %if.end72, %if.then9, %sw.default, %if.then2
  %45 = load i32, i32* %retval, align 4, !dbg !8798
  ret i32 %45, !dbg !8798
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @write_block(%struct.drxk_state* %state, i32 %address, i32 %block_size, i8* %p_block) #0 !dbg !8799 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %address.addr = alloca i32, align 4
  %block_size.addr = alloca i32, align 4
  %p_block.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  %blk_size = alloca i32, align 4
  %flags = alloca i8, align 1
  %chunk = alloca i32, align 4
  %adr_buf = alloca i8*, align 8
  %adr_length = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !8803, metadata !DIExpression()), !dbg !8804
  store i32 %address, i32* %address.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %address.addr, metadata !8805, metadata !DIExpression()), !dbg !8806
  store i32 %block_size, i32* %block_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %block_size.addr, metadata !8807, metadata !DIExpression()), !dbg !8808
  store i8* %p_block, i8** %p_block.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_block.addr, metadata !8809, metadata !DIExpression()), !dbg !8810
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8811, metadata !DIExpression()), !dbg !8812
  store i32 0, i32* %status, align 4, !dbg !8812
  call void @llvm.dbg.declare(metadata i32* %blk_size, metadata !8813, metadata !DIExpression()), !dbg !8814
  %0 = load i32, i32* %block_size.addr, align 4, !dbg !8815
  store i32 %0, i32* %blk_size, align 4, !dbg !8814
  call void @llvm.dbg.declare(metadata i8* %flags, metadata !8816, metadata !DIExpression()), !dbg !8817
  store i8 0, i8* %flags, align 1, !dbg !8817
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8818
  %single_master = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 102, !dbg !8820
  %2 = load i8, i8* %single_master, align 1, !dbg !8820
  %tobool = trunc i8 %2 to i1, !dbg !8820
  br i1 %tobool, label %if.then, label %if.end, !dbg !8821

if.then:                                          ; preds = %entry
  %3 = load i8, i8* %flags, align 1, !dbg !8822
  %conv = zext i8 %3 to i32, !dbg !8822
  %or = or i32 %conv, 192, !dbg !8822
  %conv1 = trunc i32 %or to i8, !dbg !8822
  store i8 %conv1, i8* %flags, align 1, !dbg !8822
  br label %if.end, !dbg !8823

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !8824

while.cond:                                       ; preds = %if.end79, %if.end
  %4 = load i32, i32* %blk_size, align 4, !dbg !8825
  %cmp = icmp sgt i32 %4, 0, !dbg !8826
  br i1 %cmp, label %while.body, label %while.end, !dbg !8824

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %chunk, metadata !8827, metadata !DIExpression()), !dbg !8829
  %5 = load i32, i32* %blk_size, align 4, !dbg !8830
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8831
  %m_chunk_size = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 8, !dbg !8832
  %7 = load i32, i32* %m_chunk_size, align 4, !dbg !8832
  %cmp3 = icmp sgt i32 %5, %7, !dbg !8833
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !8830

cond.true:                                        ; preds = %while.body
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8834
  %m_chunk_size5 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %8, i32 0, i32 8, !dbg !8835
  %9 = load i32, i32* %m_chunk_size5, align 4, !dbg !8835
  br label %cond.end, !dbg !8830

cond.false:                                       ; preds = %while.body
  %10 = load i32, i32* %blk_size, align 4, !dbg !8836
  br label %cond.end, !dbg !8830

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %10, %cond.false ], !dbg !8830
  store i32 %cond, i32* %chunk, align 4, !dbg !8829
  call void @llvm.dbg.declare(metadata i8** %adr_buf, metadata !8837, metadata !DIExpression()), !dbg !8838
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8839
  %chunk6 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %11, i32 0, i32 9, !dbg !8840
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %chunk6, i64 0, i64 0, !dbg !8839
  store i8* %arrayidx, i8** %adr_buf, align 8, !dbg !8838
  call void @llvm.dbg.declare(metadata i32* %adr_length, metadata !8841, metadata !DIExpression()), !dbg !8842
  store i32 0, i32* %adr_length, align 4, !dbg !8842
  %12 = load i32, i32* %address.addr, align 4, !dbg !8843
  %and = and i32 %12, -63897728, !dbg !8843
  %cmp7 = icmp ne i32 %and, 0, !dbg !8843
  br i1 %cmp7, label %if.then12, label %lor.lhs.false, !dbg !8845

lor.lhs.false:                                    ; preds = %cond.end
  %13 = load i8, i8* %flags, align 1, !dbg !8846
  %conv9 = zext i8 %13 to i32, !dbg !8846
  %cmp10 = icmp ne i32 %conv9, 0, !dbg !8847
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !8848

if.then12:                                        ; preds = %lor.lhs.false, %cond.end
  %14 = load i32, i32* %address.addr, align 4, !dbg !8849
  %shl = shl i32 %14, 1, !dbg !8851
  %and13 = and i32 %shl, 255, !dbg !8852
  %or14 = or i32 %and13, 1, !dbg !8853
  %conv15 = trunc i32 %or14 to i8, !dbg !8854
  %15 = load i8*, i8** %adr_buf, align 8, !dbg !8855
  %arrayidx16 = getelementptr i8, i8* %15, i64 0, !dbg !8855
  store i8 %conv15, i8* %arrayidx16, align 1, !dbg !8856
  %16 = load i32, i32* %address.addr, align 4, !dbg !8857
  %shr = lshr i32 %16, 16, !dbg !8858
  %and17 = and i32 %shr, 255, !dbg !8859
  %conv18 = trunc i32 %and17 to i8, !dbg !8860
  %17 = load i8*, i8** %adr_buf, align 8, !dbg !8861
  %arrayidx19 = getelementptr i8, i8* %17, i64 1, !dbg !8861
  store i8 %conv18, i8* %arrayidx19, align 1, !dbg !8862
  %18 = load i32, i32* %address.addr, align 4, !dbg !8863
  %shr20 = lshr i32 %18, 24, !dbg !8864
  %and21 = and i32 %shr20, 255, !dbg !8865
  %conv22 = trunc i32 %and21 to i8, !dbg !8866
  %19 = load i8*, i8** %adr_buf, align 8, !dbg !8867
  %arrayidx23 = getelementptr i8, i8* %19, i64 2, !dbg !8867
  store i8 %conv22, i8* %arrayidx23, align 1, !dbg !8868
  %20 = load i32, i32* %address.addr, align 4, !dbg !8869
  %shr24 = lshr i32 %20, 7, !dbg !8870
  %and25 = and i32 %shr24, 255, !dbg !8871
  %conv26 = trunc i32 %and25 to i8, !dbg !8872
  %21 = load i8*, i8** %adr_buf, align 8, !dbg !8873
  %arrayidx27 = getelementptr i8, i8* %21, i64 3, !dbg !8873
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !8874
  %22 = load i8, i8* %flags, align 1, !dbg !8875
  %conv28 = zext i8 %22 to i32, !dbg !8875
  %23 = load i8*, i8** %adr_buf, align 8, !dbg !8876
  %arrayidx29 = getelementptr i8, i8* %23, i64 2, !dbg !8876
  %24 = load i8, i8* %arrayidx29, align 1, !dbg !8877
  %conv30 = zext i8 %24 to i32, !dbg !8877
  %or31 = or i32 %conv30, %conv28, !dbg !8877
  %conv32 = trunc i32 %or31 to i8, !dbg !8877
  store i8 %conv32, i8* %arrayidx29, align 1, !dbg !8877
  store i32 4, i32* %adr_length, align 4, !dbg !8878
  %25 = load i32, i32* %chunk, align 4, !dbg !8879
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8881
  %m_chunk_size33 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %26, i32 0, i32 8, !dbg !8882
  %27 = load i32, i32* %m_chunk_size33, align 4, !dbg !8882
  %cmp34 = icmp eq i32 %25, %27, !dbg !8883
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !8884

if.then36:                                        ; preds = %if.then12
  %28 = load i32, i32* %chunk, align 4, !dbg !8885
  %sub = sub i32 %28, 2, !dbg !8885
  store i32 %sub, i32* %chunk, align 4, !dbg !8885
  br label %if.end37, !dbg !8886

if.end37:                                         ; preds = %if.then36, %if.then12
  br label %if.end49, !dbg !8887

if.else:                                          ; preds = %lor.lhs.false
  %29 = load i32, i32* %address.addr, align 4, !dbg !8888
  %shl38 = shl i32 %29, 1, !dbg !8890
  %and39 = and i32 %shl38, 255, !dbg !8891
  %conv40 = trunc i32 %and39 to i8, !dbg !8892
  %30 = load i8*, i8** %adr_buf, align 8, !dbg !8893
  %arrayidx41 = getelementptr i8, i8* %30, i64 0, !dbg !8893
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !8894
  %31 = load i32, i32* %address.addr, align 4, !dbg !8895
  %shr42 = lshr i32 %31, 16, !dbg !8896
  %and43 = and i32 %shr42, 15, !dbg !8897
  %32 = load i32, i32* %address.addr, align 4, !dbg !8898
  %shr44 = lshr i32 %32, 18, !dbg !8899
  %and45 = and i32 %shr44, 240, !dbg !8900
  %or46 = or i32 %and43, %and45, !dbg !8901
  %conv47 = trunc i32 %or46 to i8, !dbg !8902
  %33 = load i8*, i8** %adr_buf, align 8, !dbg !8903
  %arrayidx48 = getelementptr i8, i8* %33, i64 1, !dbg !8903
  store i8 %conv47, i8* %arrayidx48, align 1, !dbg !8904
  store i32 2, i32* %adr_length, align 4, !dbg !8905
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.end37
  %34 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8906
  %chunk50 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %34, i32 0, i32 9, !dbg !8907
  %35 = load i32, i32* %adr_length, align 4, !dbg !8908
  %idxprom = zext i32 %35 to i64, !dbg !8906
  %arrayidx51 = getelementptr [256 x i8], [256 x i8]* %chunk50, i64 0, i64 %idxprom, !dbg !8906
  %36 = load i8*, i8** %p_block.addr, align 8, !dbg !8909
  %37 = load i32, i32* %chunk, align 4, !dbg !8910
  %conv52 = sext i32 %37 to i64, !dbg !8910
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx51, i8* align 1 %36, i64 %conv52, i1 false), !dbg !8911
  br label %do.body, !dbg !8912

do.body:                                          ; preds = %if.end49
  %38 = load i32, i32* @debug, align 4, !dbg !8913
  %cmp53 = icmp uge i32 %38, 2, !dbg !8913
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !8916

if.then55:                                        ; preds = %do.body
  %39 = load i32, i32* %address.addr, align 4, !dbg !8913
  %40 = load i8, i8* %flags, align 1, !dbg !8913
  %conv56 = zext i8 %40 to i32, !dbg !8913
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.write_block, i64 0, i64 0), i32 %39, i32 %conv56) #8, !dbg !8913
  br label %if.end57, !dbg !8913

if.end57:                                         ; preds = %if.then55, %do.body
  br label %do.end, !dbg !8916

do.end:                                           ; preds = %if.end57
  %41 = load i32, i32* @debug, align 4, !dbg !8917
  %cmp58 = icmp ugt i32 %41, 1, !dbg !8919
  br i1 %cmp58, label %if.then60, label %if.end71, !dbg !8920

if.then60:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8921, metadata !DIExpression()), !dbg !8923
  %42 = load i8*, i8** %p_block.addr, align 8, !dbg !8924
  %tobool61 = icmp ne i8* %42, null, !dbg !8924
  br i1 %tobool61, label %if.then62, label %if.end69, !dbg !8926

if.then62:                                        ; preds = %if.then60
  store i32 0, i32* %i, align 4, !dbg !8927
  br label %for.cond, !dbg !8929

for.cond:                                         ; preds = %for.inc, %if.then62
  %43 = load i32, i32* %i, align 4, !dbg !8930
  %44 = load i32, i32* %chunk, align 4, !dbg !8932
  %cmp63 = icmp slt i32 %43, %44, !dbg !8933
  br i1 %cmp63, label %for.body, label %for.end, !dbg !8934

for.body:                                         ; preds = %for.cond
  %45 = load i8*, i8** %p_block.addr, align 8, !dbg !8935
  %46 = load i32, i32* %i, align 4, !dbg !8935
  %idxprom65 = sext i32 %46 to i64, !dbg !8935
  %arrayidx66 = getelementptr i8, i8* %45, i64 %idxprom65, !dbg !8935
  %47 = load i8, i8* %arrayidx66, align 1, !dbg !8935
  %conv67 = zext i8 %47 to i32, !dbg !8935
  %call68 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i32 %conv67) #8, !dbg !8935
  br label %for.inc, !dbg !8935

for.inc:                                          ; preds = %for.body
  %48 = load i32, i32* %i, align 4, !dbg !8936
  %inc = add i32 %48, 1, !dbg !8936
  store i32 %inc, i32* %i, align 4, !dbg !8936
  br label %for.cond, !dbg !8937, !llvm.loop !8938

for.end:                                          ; preds = %for.cond
  br label %if.end69, !dbg !8939

if.end69:                                         ; preds = %for.end, %if.then60
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0)) #8, !dbg !8940
  br label %if.end71, !dbg !8941

if.end71:                                         ; preds = %if.end69, %do.end
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8942
  %50 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8943
  %demod_address = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %50, i32 0, i32 4, !dbg !8944
  %51 = load i8, i8* %demod_address, align 8, !dbg !8944
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !8945
  %chunk72 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %52, i32 0, i32 9, !dbg !8946
  %arrayidx73 = getelementptr [256 x i8], [256 x i8]* %chunk72, i64 0, i64 0, !dbg !8945
  %53 = load i32, i32* %chunk, align 4, !dbg !8947
  %54 = load i32, i32* %adr_length, align 4, !dbg !8948
  %add = add i32 %53, %54, !dbg !8949
  %call74 = call i32 @i2c_write(%struct.drxk_state* %49, i8 zeroext %51, i8* %arrayidx73, i32 %add) #9, !dbg !8950
  store i32 %call74, i32* %status, align 4, !dbg !8951
  %55 = load i32, i32* %status, align 4, !dbg !8952
  %cmp75 = icmp slt i32 %55, 0, !dbg !8954
  br i1 %cmp75, label %if.then77, label %if.end79, !dbg !8955

if.then77:                                        ; preds = %if.end71
  %56 = load i32, i32* %address.addr, align 4, !dbg !8956
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.write_block, i64 0, i64 0), i32 %56) #8, !dbg !8956
  br label %while.end, !dbg !8958

if.end79:                                         ; preds = %if.end71
  %57 = load i32, i32* %chunk, align 4, !dbg !8959
  %58 = load i8*, i8** %p_block.addr, align 8, !dbg !8960
  %idx.ext = sext i32 %57 to i64, !dbg !8960
  %add.ptr = getelementptr i8, i8* %58, i64 %idx.ext, !dbg !8960
  store i8* %add.ptr, i8** %p_block.addr, align 8, !dbg !8960
  %59 = load i32, i32* %chunk, align 4, !dbg !8961
  %shr80 = ashr i32 %59, 1, !dbg !8962
  %60 = load i32, i32* %address.addr, align 4, !dbg !8963
  %add81 = add i32 %60, %shr80, !dbg !8963
  store i32 %add81, i32* %address.addr, align 4, !dbg !8963
  %61 = load i32, i32* %chunk, align 4, !dbg !8964
  %62 = load i32, i32* %blk_size, align 4, !dbg !8965
  %sub82 = sub i32 %62, %61, !dbg !8965
  store i32 %sub82, i32* %blk_size, align 4, !dbg !8965
  br label %while.cond, !dbg !8824, !llvm.loop !8966

while.end:                                        ; preds = %if.then77, %while.cond
  %63 = load i32, i32* %status, align 4, !dbg !8968
  ret i32 %63, !dbg !8969
}

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #3

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @print_hex_dump_debug(i8* %prefix_str, i32 %prefix_type, i32 %rowsize, i32 %groupsize, i8* %buf, i64 %len, i1 zeroext %ascii) #0 !dbg !8970 {
entry:
  %prefix_str.addr = alloca i8*, align 8
  %prefix_type.addr = alloca i32, align 4
  %rowsize.addr = alloca i32, align 4
  %groupsize.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %ascii.addr = alloca i8, align 1
  store i8* %prefix_str, i8** %prefix_str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix_str.addr, metadata !8973, metadata !DIExpression()), !dbg !8974
  store i32 %prefix_type, i32* %prefix_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prefix_type.addr, metadata !8975, metadata !DIExpression()), !dbg !8976
  store i32 %rowsize, i32* %rowsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rowsize.addr, metadata !8977, metadata !DIExpression()), !dbg !8978
  store i32 %groupsize, i32* %groupsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %groupsize.addr, metadata !8979, metadata !DIExpression()), !dbg !8980
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8981, metadata !DIExpression()), !dbg !8982
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !8983, metadata !DIExpression()), !dbg !8984
  %frombool = zext i1 %ascii to i8
  store i8 %frombool, i8* %ascii.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %ascii.addr, metadata !8985, metadata !DIExpression()), !dbg !8986
  ret void, !dbg !8987
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !8988 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !8989, metadata !DIExpression()), !dbg !8990
  %0 = load i32, i32* %m.addr, align 4, !dbg !8991
  %conv = zext i32 %0 to i64, !dbg !8991
  %add = add i64 %conv, 4, !dbg !8992
  %sub = sub i64 %add, 1, !dbg !8993
  %div = sdiv i64 %sub, 4, !dbg !8994
  ret i64 %div, !dbg !8995
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @power_up_device(%struct.drxk_state* %state) #0 !dbg !8996 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  %data = alloca i8, align 1
  %retry_count = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !8997, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8999, metadata !DIExpression()), !dbg !9000
  call void @llvm.dbg.declare(metadata i8* %data, metadata !9001, metadata !DIExpression()), !dbg !9002
  store i8 0, i8* %data, align 1, !dbg !9002
  call void @llvm.dbg.declare(metadata i16* %retry_count, metadata !9003, metadata !DIExpression()), !dbg !9004
  store i16 0, i16* %retry_count, align 2, !dbg !9004
  br label %do.body, !dbg !9005

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9006
  %cmp = icmp uge i32 %0, 1, !dbg !9006
  br i1 %cmp, label %if.then, label %if.end, !dbg !9009

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.power_up_device, i64 0, i64 0)) #8, !dbg !9006
  br label %if.end, !dbg !9006

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9009

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9010
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9011
  %demod_address = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 4, !dbg !9012
  %3 = load i8, i8* %demod_address, align 8, !dbg !9012
  %call1 = call i32 @i2c_read1(%struct.drxk_state* %1, i8 zeroext %3, i8* %data) #9, !dbg !9013
  store i32 %call1, i32* %status, align 4, !dbg !9014
  %4 = load i32, i32* %status, align 4, !dbg !9015
  %cmp2 = icmp slt i32 %4, 0, !dbg !9017
  br i1 %cmp2, label %if.then3, label %if.end23, !dbg !9018

if.then3:                                         ; preds = %do.end
  br label %do.body4, !dbg !9019

do.body4:                                         ; preds = %land.end, %if.then3
  store i8 0, i8* %data, align 1, !dbg !9021
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9023
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9024
  %demod_address5 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 4, !dbg !9025
  %7 = load i8, i8* %demod_address5, align 8, !dbg !9025
  %call6 = call i32 @i2c_write(%struct.drxk_state* %5, i8 zeroext %7, i8* %data, i32 1) #9, !dbg !9026
  store i32 %call6, i32* %status, align 4, !dbg !9027
  call void @usleep_range(i64 10000, i64 11000) #9, !dbg !9028
  %8 = load i16, i16* %retry_count, align 2, !dbg !9029
  %inc = add i16 %8, 1, !dbg !9029
  store i16 %inc, i16* %retry_count, align 2, !dbg !9029
  %9 = load i32, i32* %status, align 4, !dbg !9030
  %cmp7 = icmp slt i32 %9, 0, !dbg !9032
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !9033

if.then8:                                         ; preds = %do.body4
  br label %do.cond, !dbg !9034

if.end9:                                          ; preds = %do.body4
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9035
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9036
  %demod_address10 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %11, i32 0, i32 4, !dbg !9037
  %12 = load i8, i8* %demod_address10, align 8, !dbg !9037
  %call11 = call i32 @i2c_read1(%struct.drxk_state* %10, i8 zeroext %12, i8* %data) #9, !dbg !9038
  store i32 %call11, i32* %status, align 4, !dbg !9039
  br label %do.cond, !dbg !9040

do.cond:                                          ; preds = %if.end9, %if.then8
  %13 = load i32, i32* %status, align 4, !dbg !9041
  %cmp12 = icmp slt i32 %13, 0, !dbg !9042
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !9043

land.rhs:                                         ; preds = %do.cond
  %14 = load i16, i16* %retry_count, align 2, !dbg !9044
  %conv = zext i16 %14 to i32, !dbg !9044
  %cmp13 = icmp slt i32 %conv, 20, !dbg !9045
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %15 = phi i1 [ false, %do.cond ], [ %cmp13, %land.rhs ], !dbg !9046
  br i1 %15, label %do.body4, label %do.end15, !dbg !9040, !llvm.loop !9047

do.end15:                                         ; preds = %land.end
  %16 = load i32, i32* %status, align 4, !dbg !9049
  %cmp16 = icmp slt i32 %16, 0, !dbg !9051
  br i1 %cmp16, label %land.lhs.true, label %if.end22, !dbg !9052

land.lhs.true:                                    ; preds = %do.end15
  %17 = load i16, i16* %retry_count, align 2, !dbg !9053
  %conv18 = zext i16 %17 to i32, !dbg !9053
  %cmp19 = icmp sge i32 %conv18, 20, !dbg !9054
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !9055

if.then21:                                        ; preds = %land.lhs.true
  br label %error, !dbg !9056

if.end22:                                         ; preds = %land.lhs.true, %do.end15
  br label %if.end23, !dbg !9057

if.end23:                                         ; preds = %if.end22, %do.end
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9058
  %call24 = call i32 @write16(%struct.drxk_state* %18, i32 4522005, i16 zeroext 0) #9, !dbg !9059
  store i32 %call24, i32* %status, align 4, !dbg !9060
  %19 = load i32, i32* %status, align 4, !dbg !9061
  %cmp25 = icmp slt i32 %19, 0, !dbg !9063
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !9064

if.then27:                                        ; preds = %if.end23
  br label %error, !dbg !9065

if.end28:                                         ; preds = %if.end23
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9066
  %call29 = call i32 @write16(%struct.drxk_state* %20, i32 4522007, i16 zeroext -1350) #9, !dbg !9067
  store i32 %call29, i32* %status, align 4, !dbg !9068
  %21 = load i32, i32* %status, align 4, !dbg !9069
  %cmp30 = icmp slt i32 %21, 0, !dbg !9071
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !9072

if.then32:                                        ; preds = %if.end28
  br label %error, !dbg !9073

if.end33:                                         ; preds = %if.end28
  %22 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9074
  %call34 = call i32 @write16(%struct.drxk_state* %22, i32 4522002, i16 zeroext 1) #9, !dbg !9075
  store i32 %call34, i32* %status, align 4, !dbg !9076
  %23 = load i32, i32* %status, align 4, !dbg !9077
  %cmp35 = icmp slt i32 %23, 0, !dbg !9079
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !9080

if.then37:                                        ; preds = %if.end33
  br label %error, !dbg !9081

if.end38:                                         ; preds = %if.end33
  %24 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9082
  %m_current_power_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %24, i32 0, i32 98, !dbg !9083
  store i32 0, i32* %m_current_power_mode, align 4, !dbg !9084
  br label %error, !dbg !9082

error:                                            ; preds = %if.end38, %if.then37, %if.then32, %if.then27, %if.then21
  call void @llvm.dbg.label(metadata !9085), !dbg !9086
  %25 = load i32, i32* %status, align 4, !dbg !9087
  %cmp39 = icmp slt i32 %25, 0, !dbg !9089
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !9090

if.then41:                                        ; preds = %error
  %26 = load i32, i32* %status, align 4, !dbg !9091
  %call42 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %26, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.power_up_device, i64 0, i64 0)) #8, !dbg !9091
  br label %if.end43, !dbg !9091

if.end43:                                         ; preds = %if.then41, %error
  %27 = load i32, i32* %status, align 4, !dbg !9092
  ret i32 %27, !dbg !9093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dvbt_enable_ofdm_token_ring(%struct.drxk_state* %state, i1 zeroext %enable) #0 !dbg !9094 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !8330, metadata !DIExpression()), !dbg !9095
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %enable.addr = alloca i8, align 1
  %status = alloca i32, align 4
  %data = alloca i16, align 2
  %desired_ctrl = alloca i16, align 2
  %desired_status = alloca i16, align 2
  %end = alloca i64, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !9097, metadata !DIExpression()), !dbg !9098
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !9099, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9101, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.declare(metadata i16* %data, metadata !9103, metadata !DIExpression()), !dbg !9104
  store i16 0, i16* %data, align 2, !dbg !9104
  call void @llvm.dbg.declare(metadata i16* %desired_ctrl, metadata !9105, metadata !DIExpression()), !dbg !9106
  store i16 1, i16* %desired_ctrl, align 2, !dbg !9106
  call void @llvm.dbg.declare(metadata i16* %desired_status, metadata !9107, metadata !DIExpression()), !dbg !9108
  store i16 1, i16* %desired_status, align 2, !dbg !9108
  call void @llvm.dbg.declare(metadata i64* %end, metadata !9109, metadata !DIExpression()), !dbg !9110
  br label %do.body, !dbg !9111

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9112
  %cmp = icmp uge i32 %0, 1, !dbg !9112
  br i1 %cmp, label %if.then, label %if.end, !dbg !9115

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.dvbt_enable_ofdm_token_ring, i64 0, i64 0)) #8, !dbg !9112
  br label %if.end, !dbg !9112

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9115

do.end:                                           ; preds = %if.end
  %1 = load i8, i8* %enable.addr, align 1, !dbg !9116
  %tobool = trunc i8 %1 to i1, !dbg !9116
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !9118

if.then1:                                         ; preds = %do.end
  store i16 0, i16* %desired_ctrl, align 2, !dbg !9119
  store i16 0, i16* %desired_status, align 2, !dbg !9121
  br label %if.end2, !dbg !9122

if.end2:                                          ; preds = %if.then1, %do.end
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9123
  %call3 = call i32 @read16(%struct.drxk_state* %2, i32 4653074, i16* %data) #9, !dbg !9124
  store i32 %call3, i32* %status, align 4, !dbg !9125
  %3 = load i32, i32* %status, align 4, !dbg !9126
  %cmp4 = icmp sge i32 %3, 0, !dbg !9128
  br i1 %cmp4, label %land.lhs.true, label %if.end9, !dbg !9129

land.lhs.true:                                    ; preds = %if.end2
  %4 = load i16, i16* %data, align 2, !dbg !9130
  %conv = zext i16 %4 to i32, !dbg !9130
  %5 = load i16, i16* %desired_status, align 2, !dbg !9131
  %conv5 = zext i16 %5 to i32, !dbg !9131
  %cmp6 = icmp eq i32 %conv, %conv5, !dbg !9132
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !9133

if.then8:                                         ; preds = %land.lhs.true
  %6 = load i32, i32* %status, align 4, !dbg !9134
  store i32 %6, i32* %retval, align 4, !dbg !9136
  br label %return, !dbg !9136

if.end9:                                          ; preds = %land.lhs.true, %if.end2
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9137
  %8 = load i16, i16* %desired_ctrl, align 2, !dbg !9138
  %call10 = call i32 @write16(%struct.drxk_state* %7, i32 4653072, i16 zeroext %8) #9, !dbg !9139
  store i32 %call10, i32* %status, align 4, !dbg !9140
  %9 = load volatile i64, i64* @jiffies, align 8, !dbg !9141
  store i32 200, i32* %m.addr.i, align 4
  %10 = load i32, i32* %m.addr.i, align 4, !dbg !9142
  %11 = call i1 @llvm.is.constant.i32(i32 %10) #10, !dbg !9143
  br i1 %11, label %if.then.i, label %if.else.i, !dbg !9144

if.then.i:                                        ; preds = %if.end9
  %12 = load i32, i32* %m.addr.i, align 4, !dbg !9145
  %cmp.i = icmp slt i32 %12, 0, !dbg !9146
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9147

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !9148
  br label %msecs_to_jiffies.exit, !dbg !9148

if.end.i:                                         ; preds = %if.then.i
  %13 = load i32, i32* %m.addr.i, align 4, !dbg !9149
  %call.i = call i64 @_msecs_to_jiffies(i32 %13) #12, !dbg !9150
  store i64 %call.i, i64* %retval.i, align 8, !dbg !9151
  br label %msecs_to_jiffies.exit, !dbg !9151

if.else.i:                                        ; preds = %if.end9
  %14 = load i32, i32* %m.addr.i, align 4, !dbg !9152
  %call2.i = call i64 @__msecs_to_jiffies(i32 %14) #12, !dbg !9153
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !9154
  br label %msecs_to_jiffies.exit, !dbg !9154

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %15 = load i64, i64* %retval.i, align 8, !dbg !9155
  %add = add i64 %9, %15, !dbg !9156
  store i64 %add, i64* %end, align 8, !dbg !9157
  br label %do.body12, !dbg !9158

do.body12:                                        ; preds = %do.cond, %msecs_to_jiffies.exit
  %16 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9159
  %call13 = call i32 @read16(%struct.drxk_state* %16, i32 4653074, i16* %data) #9, !dbg !9161
  store i32 %call13, i32* %status, align 4, !dbg !9162
  %17 = load i32, i32* %status, align 4, !dbg !9163
  %cmp14 = icmp sge i32 %17, 0, !dbg !9165
  br i1 %cmp14, label %land.lhs.true16, label %lor.lhs.false, !dbg !9166

land.lhs.true16:                                  ; preds = %do.body12
  %18 = load i16, i16* %data, align 2, !dbg !9167
  %conv17 = zext i16 %18 to i32, !dbg !9167
  %19 = load i16, i16* %desired_status, align 2, !dbg !9168
  %conv18 = zext i16 %19 to i32, !dbg !9168
  %cmp19 = icmp eq i32 %conv17, %conv18, !dbg !9169
  br i1 %cmp19, label %if.then23, label %lor.lhs.false, !dbg !9170

lor.lhs.false:                                    ; preds = %land.lhs.true16, %do.body12
  %20 = load volatile i64, i64* @jiffies, align 8, !dbg !9171
  %21 = load i64, i64* %end, align 8, !dbg !9171
  %sub = sub i64 %20, %21, !dbg !9171
  %cmp21 = icmp slt i64 %sub, 0, !dbg !9171
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !9172

if.then23:                                        ; preds = %lor.lhs.false, %land.lhs.true16
  br label %do.end25, !dbg !9173

if.end24:                                         ; preds = %lor.lhs.false
  call void @usleep_range(i64 1000, i64 2000) #9, !dbg !9174
  br label %do.cond, !dbg !9175

do.cond:                                          ; preds = %if.end24
  br i1 true, label %do.body12, label %do.end25, !dbg !9175, !llvm.loop !9176

do.end25:                                         ; preds = %do.cond, %if.then23
  %22 = load i16, i16* %data, align 2, !dbg !9178
  %conv26 = zext i16 %22 to i32, !dbg !9178
  %23 = load i16, i16* %desired_status, align 2, !dbg !9180
  %conv27 = zext i16 %23 to i32, !dbg !9180
  %cmp28 = icmp ne i32 %conv26, %conv27, !dbg !9181
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !9182

if.then30:                                        ; preds = %do.end25
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0)) #8, !dbg !9183
  store i32 -22, i32* %retval, align 4, !dbg !9185
  br label %return, !dbg !9185

if.end32:                                         ; preds = %do.end25
  %24 = load i32, i32* %status, align 4, !dbg !9186
  store i32 %24, i32* %retval, align 4, !dbg !9187
  br label %return, !dbg !9187

return:                                           ; preds = %if.end32, %if.then30, %if.then8
  %25 = load i32, i32* %retval, align 4, !dbg !9188
  ret i32 %25, !dbg !9188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hi_cfg_command(%struct.drxk_state* %state) #0 !dbg !9189 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !9190, metadata !DIExpression()), !dbg !9191
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9192, metadata !DIExpression()), !dbg !9193
  br label %do.body, !dbg !9194

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9195
  %cmp = icmp uge i32 %0, 1, !dbg !9195
  br i1 %cmp, label %if.then, label %if.end, !dbg !9198

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.hi_cfg_command, i64 0, i64 0)) #8, !dbg !9195
  br label %if.end, !dbg !9195

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9198

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9199
  %mutex = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 6, !dbg !9200
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !9201
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9202
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9203
  %m_hi_cfg_timeout = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 24, !dbg !9204
  %4 = load i16, i16* %m_hi_cfg_timeout, align 2, !dbg !9204
  %call1 = call i32 @write16(%struct.drxk_state* %2, i32 4325432, i16 zeroext %4) #9, !dbg !9205
  store i32 %call1, i32* %status, align 4, !dbg !9206
  %5 = load i32, i32* %status, align 4, !dbg !9207
  %cmp2 = icmp slt i32 %5, 0, !dbg !9209
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9210

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !9211

if.end4:                                          ; preds = %do.end
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9212
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9213
  %m_hi_cfg_ctrl = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 25, !dbg !9214
  %8 = load i16, i16* %m_hi_cfg_ctrl, align 4, !dbg !9214
  %call5 = call i32 @write16(%struct.drxk_state* %6, i32 4325431, i16 zeroext %8) #9, !dbg !9215
  store i32 %call5, i32* %status, align 4, !dbg !9216
  %9 = load i32, i32* %status, align 4, !dbg !9217
  %cmp6 = icmp slt i32 %9, 0, !dbg !9219
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !9220

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !9221

if.end8:                                          ; preds = %if.end4
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9222
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9223
  %m_hi_cfg_wake_up_key = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %11, i32 0, i32 23, !dbg !9224
  %12 = load i16, i16* %m_hi_cfg_wake_up_key, align 8, !dbg !9224
  %call9 = call i32 @write16(%struct.drxk_state* %10, i32 4325430, i16 zeroext %12) #9, !dbg !9225
  store i32 %call9, i32* %status, align 4, !dbg !9226
  %13 = load i32, i32* %status, align 4, !dbg !9227
  %cmp10 = icmp slt i32 %13, 0, !dbg !9229
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9230

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !9231

if.end12:                                         ; preds = %if.end8
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9232
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9233
  %m_hi_cfg_bridge_delay = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %15, i32 0, i32 22, !dbg !9234
  %16 = load i16, i16* %m_hi_cfg_bridge_delay, align 2, !dbg !9234
  %call13 = call i32 @write16(%struct.drxk_state* %14, i32 4325429, i16 zeroext %16) #9, !dbg !9235
  store i32 %call13, i32* %status, align 4, !dbg !9236
  %17 = load i32, i32* %status, align 4, !dbg !9237
  %cmp14 = icmp slt i32 %17, 0, !dbg !9239
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !9240

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !9241

if.end16:                                         ; preds = %if.end12
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9242
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9243
  %m_hi_cfg_timing_div = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %19, i32 0, i32 21, !dbg !9244
  %20 = load i16, i16* %m_hi_cfg_timing_div, align 4, !dbg !9244
  %call17 = call i32 @write16(%struct.drxk_state* %18, i32 4325428, i16 zeroext %20) #9, !dbg !9245
  store i32 %call17, i32* %status, align 4, !dbg !9246
  %21 = load i32, i32* %status, align 4, !dbg !9247
  %cmp18 = icmp slt i32 %21, 0, !dbg !9249
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !9250

if.then19:                                        ; preds = %if.end16
  br label %error, !dbg !9251

if.end20:                                         ; preds = %if.end16
  %22 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9252
  %call21 = call i32 @write16(%struct.drxk_state* %22, i32 4325427, i16 zeroext 14661) #9, !dbg !9253
  store i32 %call21, i32* %status, align 4, !dbg !9254
  %23 = load i32, i32* %status, align 4, !dbg !9255
  %cmp22 = icmp slt i32 %23, 0, !dbg !9257
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !9258

if.then23:                                        ; preds = %if.end20
  br label %error, !dbg !9259

if.end24:                                         ; preds = %if.end20
  %24 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9260
  %call25 = call i32 @hi_command(%struct.drxk_state* %24, i16 zeroext 3, i16* null) #9, !dbg !9261
  store i32 %call25, i32* %status, align 4, !dbg !9262
  %25 = load i32, i32* %status, align 4, !dbg !9263
  %cmp26 = icmp slt i32 %25, 0, !dbg !9265
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !9266

if.then27:                                        ; preds = %if.end24
  br label %error, !dbg !9267

if.end28:                                         ; preds = %if.end24
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9268
  %m_hi_cfg_ctrl29 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %26, i32 0, i32 25, !dbg !9269
  %27 = load i16, i16* %m_hi_cfg_ctrl29, align 4, !dbg !9270
  %conv = zext i16 %27 to i32, !dbg !9270
  %and = and i32 %conv, -9, !dbg !9270
  %conv30 = trunc i32 %and to i16, !dbg !9270
  store i16 %conv30, i16* %m_hi_cfg_ctrl29, align 4, !dbg !9270
  br label %error, !dbg !9268

error:                                            ; preds = %if.end28, %if.then27, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !9271), !dbg !9272
  %28 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9273
  %mutex31 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %28, i32 0, i32 6, !dbg !9274
  call void @mutex_unlock(%struct.mutex* %mutex31) #9, !dbg !9275
  %29 = load i32, i32* %status, align 4, !dbg !9276
  %cmp32 = icmp slt i32 %29, 0, !dbg !9278
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !9279

if.then34:                                        ; preds = %error
  %30 = load i32, i32* %status, align 4, !dbg !9280
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %30, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.hi_cfg_command, i64 0, i64 0)) #8, !dbg !9280
  br label %if.end36, !dbg !9280

if.end36:                                         ; preds = %if.then34, %error
  %31 = load i32, i32* %status, align 4, !dbg !9281
  ret i32 %31, !dbg !9282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @i2c_read1(%struct.drxk_state* %state, i8 zeroext %adr, i8* %val) #0 !dbg !9283 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %adr.addr = alloca i8, align 1
  %val.addr = alloca i8*, align 8
  %msgs = alloca [1 x %struct.i2c_msg], align 16
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !9286, metadata !DIExpression()), !dbg !9287
  store i8 %adr, i8* %adr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %adr.addr, metadata !9288, metadata !DIExpression()), !dbg !9289
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !9290, metadata !DIExpression()), !dbg !9291
  call void @llvm.dbg.declare(metadata [1 x %struct.i2c_msg]* %msgs, metadata !9292, metadata !DIExpression()), !dbg !9294
  %arrayinit.begin = getelementptr inbounds [1 x %struct.i2c_msg], [1 x %struct.i2c_msg]* %msgs, i64 0, i64 0, !dbg !9295
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 0, !dbg !9296
  %0 = load i8, i8* %adr.addr, align 1, !dbg !9297
  %conv = zext i8 %0 to i16, !dbg !9297
  store i16 %conv, i16* %addr, align 16, !dbg !9296
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 1, !dbg !9296
  store i16 1, i16* %flags, align 2, !dbg !9296
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 2, !dbg !9296
  store i16 1, i16* %len, align 4, !dbg !9296
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 3, !dbg !9296
  %1 = load i8*, i8** %val.addr, align 8, !dbg !9298
  store i8* %1, i8** %buf, align 8, !dbg !9296
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9299
  %arraydecay = getelementptr inbounds [1 x %struct.i2c_msg], [1 x %struct.i2c_msg]* %msgs, i64 0, i64 0, !dbg !9300
  %call = call i32 @drxk_i2c_transfer(%struct.drxk_state* %2, %struct.i2c_msg* %arraydecay, i32 1) #9, !dbg !9301
  ret i32 %call, !dbg !9302
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hi_command(%struct.drxk_state* %state, i16 zeroext %cmd, i16* %p_result) #0 !dbg !9303 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %cmd.addr = alloca i16, align 2
  %p_result.addr = alloca i16*, align 8
  %status = alloca i32, align 4
  %powerdown_cmd = alloca i8, align 1
  %retry_count = alloca i32, align 4
  %wait_cmd = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !9306, metadata !DIExpression()), !dbg !9307
  store i16 %cmd, i16* %cmd.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cmd.addr, metadata !9308, metadata !DIExpression()), !dbg !9309
  store i16* %p_result, i16** %p_result.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %p_result.addr, metadata !9310, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9312, metadata !DIExpression()), !dbg !9313
  call void @llvm.dbg.declare(metadata i8* %powerdown_cmd, metadata !9314, metadata !DIExpression()), !dbg !9315
  br label %do.body, !dbg !9316

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9317
  %cmp = icmp uge i32 %0, 1, !dbg !9317
  br i1 %cmp, label %if.then, label %if.end, !dbg !9320

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.hi_command, i64 0, i64 0)) #8, !dbg !9317
  br label %if.end, !dbg !9317

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9320

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9321
  %2 = load i16, i16* %cmd.addr, align 2, !dbg !9322
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 4325426, i16 zeroext %2) #9, !dbg !9323
  store i32 %call1, i32* %status, align 4, !dbg !9324
  %3 = load i32, i32* %status, align 4, !dbg !9325
  %cmp2 = icmp slt i32 %3, 0, !dbg !9327
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9328

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !9329

if.end4:                                          ; preds = %do.end
  %4 = load i16, i16* %cmd.addr, align 2, !dbg !9330
  %conv = zext i16 %4 to i32, !dbg !9330
  %cmp5 = icmp eq i32 %conv, 2, !dbg !9332
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !9333

if.then7:                                         ; preds = %if.end4
  call void @usleep_range(i64 1000, i64 2000) #9, !dbg !9334
  br label %if.end8, !dbg !9334

if.end8:                                          ; preds = %if.then7, %if.end4
  %5 = load i16, i16* %cmd.addr, align 2, !dbg !9335
  %conv9 = zext i16 %5 to i32, !dbg !9335
  %cmp10 = icmp eq i32 %conv9, 3, !dbg !9336
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !9337

land.rhs:                                         ; preds = %if.end8
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9338
  %m_hi_cfg_ctrl = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 25, !dbg !9339
  %7 = load i16, i16* %m_hi_cfg_ctrl, align 4, !dbg !9339
  %conv12 = zext i16 %7 to i32, !dbg !9340
  %and = and i32 %conv12, 8, !dbg !9341
  %cmp13 = icmp eq i32 %and, 8, !dbg !9342
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end8
  %8 = phi i1 [ false, %if.end8 ], [ %cmp13, %land.rhs ], !dbg !9343
  %frombool = zext i1 %8 to i8, !dbg !9344
  store i8 %frombool, i8* %powerdown_cmd, align 1, !dbg !9344
  %9 = load i8, i8* %powerdown_cmd, align 1, !dbg !9345
  %tobool = trunc i8 %9 to i1, !dbg !9345
  br i1 %tobool, label %if.end32, label %if.then15, !dbg !9347

if.then15:                                        ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %retry_count, metadata !9348, metadata !DIExpression()), !dbg !9350
  store i32 0, i32* %retry_count, align 4, !dbg !9350
  call void @llvm.dbg.declare(metadata i16* %wait_cmd, metadata !9351, metadata !DIExpression()), !dbg !9352
  br label %do.body16, !dbg !9353

do.body16:                                        ; preds = %land.end25, %if.then15
  call void @usleep_range(i64 1000, i64 2000) #9, !dbg !9354
  %10 = load i32, i32* %retry_count, align 4, !dbg !9356
  %add = add i32 %10, 1, !dbg !9356
  store i32 %add, i32* %retry_count, align 4, !dbg !9356
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9357
  %call17 = call i32 @read16(%struct.drxk_state* %11, i32 4325426, i16* %wait_cmd) #9, !dbg !9358
  store i32 %call17, i32* %status, align 4, !dbg !9359
  br label %do.cond, !dbg !9360

do.cond:                                          ; preds = %do.body16
  %12 = load i32, i32* %status, align 4, !dbg !9361
  %cmp18 = icmp slt i32 %12, 0, !dbg !9362
  br i1 %cmp18, label %land.rhs22, label %lor.lhs.false, !dbg !9363

lor.lhs.false:                                    ; preds = %do.cond
  %13 = load i16, i16* %wait_cmd, align 2, !dbg !9364
  %conv20 = zext i16 %13 to i32, !dbg !9364
  %tobool21 = icmp ne i32 %conv20, 0, !dbg !9364
  br i1 %tobool21, label %land.rhs22, label %land.end25, !dbg !9365

land.rhs22:                                       ; preds = %lor.lhs.false, %do.cond
  %14 = load i32, i32* %retry_count, align 4, !dbg !9366
  %cmp23 = icmp ult i32 %14, 100, !dbg !9367
  br label %land.end25

land.end25:                                       ; preds = %land.rhs22, %lor.lhs.false
  %15 = phi i1 [ false, %lor.lhs.false ], [ %cmp23, %land.rhs22 ], !dbg !9368
  br i1 %15, label %do.body16, label %do.end26, !dbg !9360, !llvm.loop !9369

do.end26:                                         ; preds = %land.end25
  %16 = load i32, i32* %status, align 4, !dbg !9371
  %cmp27 = icmp slt i32 %16, 0, !dbg !9373
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !9374

if.then29:                                        ; preds = %do.end26
  br label %error, !dbg !9375

if.end30:                                         ; preds = %do.end26
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9376
  %18 = load i16*, i16** %p_result.addr, align 8, !dbg !9377
  %call31 = call i32 @read16(%struct.drxk_state* %17, i32 4325425, i16* %18) #9, !dbg !9378
  store i32 %call31, i32* %status, align 4, !dbg !9379
  br label %if.end32, !dbg !9380

if.end32:                                         ; preds = %if.end30, %land.end
  br label %error, !dbg !9345

error:                                            ; preds = %if.end32, %if.then29, %if.then3
  call void @llvm.dbg.label(metadata !9381), !dbg !9382
  %19 = load i32, i32* %status, align 4, !dbg !9383
  %cmp33 = icmp slt i32 %19, 0, !dbg !9385
  br i1 %cmp33, label %if.then35, label %if.end37, !dbg !9386

if.then35:                                        ; preds = %error
  %20 = load i32, i32* %status, align 4, !dbg !9387
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %20, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.hi_command, i64 0, i64 0)) #8, !dbg !9387
  br label %if.end37, !dbg !9387

if.end37:                                         ; preds = %if.then35, %error
  %21 = load i32, i32* %status, align 4, !dbg !9388
  ret i32 %21, !dbg !9389
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @power_up_dvbt(%struct.drxk_state* %state) #0 !dbg !9390 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %power_mode = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !9391, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.declare(metadata i32* %power_mode, metadata !9393, metadata !DIExpression()), !dbg !9394
  store i32 0, i32* %power_mode, align 4, !dbg !9394
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9395, metadata !DIExpression()), !dbg !9396
  br label %do.body, !dbg !9397

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9398
  %cmp = icmp uge i32 %0, 1, !dbg !9398
  br i1 %cmp, label %if.then, label %if.end, !dbg !9401

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.power_up_dvbt, i64 0, i64 0)) #8, !dbg !9398
  br label %if.end, !dbg !9398

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9401

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9402
  %call1 = call i32 @ctrl_power_mode(%struct.drxk_state* %1, i32* %power_mode) #9, !dbg !9403
  store i32 %call1, i32* %status, align 4, !dbg !9404
  %2 = load i32, i32* %status, align 4, !dbg !9405
  %cmp2 = icmp slt i32 %2, 0, !dbg !9407
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !9408

if.then3:                                         ; preds = %do.end
  %3 = load i32, i32* %status, align 4, !dbg !9409
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.power_up_dvbt, i64 0, i64 0)) #8, !dbg !9409
  br label %if.end5, !dbg !9409

if.end5:                                          ; preds = %if.then3, %do.end
  %4 = load i32, i32* %status, align 4, !dbg !9410
  ret i32 %4, !dbg !9411
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @switch_antenna_to_dvbt(%struct.drxk_state* %state) #0 !dbg !9412 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  %gpio_state = alloca i8, align 1
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !9413, metadata !DIExpression()), !dbg !9414
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9415, metadata !DIExpression()), !dbg !9416
  store i32 0, i32* %status, align 4, !dbg !9416
  call void @llvm.dbg.declare(metadata i8* %gpio_state, metadata !9417, metadata !DIExpression()), !dbg !9418
  br label %do.body, !dbg !9419

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9420
  %cmp = icmp uge i32 %0, 1, !dbg !9420
  br i1 %cmp, label %if.then, label %if.end, !dbg !9423

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.switch_antenna_to_dvbt, i64 0, i64 0)) #8, !dbg !9420
  br label %if.end, !dbg !9420

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9423

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9424
  %antenna_gpio = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 105, !dbg !9426
  %2 = load i16, i16* %antenna_gpio, align 8, !dbg !9426
  %tobool = icmp ne i16 %2, 0, !dbg !9424
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !9427

if.then1:                                         ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !9428
  br label %return, !dbg !9428

if.end2:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9429
  %m_gpio = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 82, !dbg !9430
  %4 = load i16, i16* %m_gpio, align 8, !dbg !9430
  %conv = zext i16 %4 to i32, !dbg !9429
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9431
  %antenna_gpio3 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %5, i32 0, i32 105, !dbg !9432
  %6 = load i16, i16* %antenna_gpio3, align 8, !dbg !9432
  %conv4 = zext i16 %6 to i32, !dbg !9431
  %and = and i32 %conv, %conv4, !dbg !9433
  %tobool5 = icmp ne i32 %and, 0, !dbg !9429
  %frombool = zext i1 %tobool5 to i8, !dbg !9434
  store i8 %frombool, i8* %gpio_state, align 1, !dbg !9434
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9435
  %antenna_dvbt = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 104, !dbg !9437
  %8 = load i8, i8* %antenna_dvbt, align 1, !dbg !9437
  %tobool6 = trunc i8 %8 to i1, !dbg !9437
  %conv7 = zext i1 %tobool6 to i32, !dbg !9435
  %9 = load i8, i8* %gpio_state, align 1, !dbg !9438
  %tobool8 = trunc i8 %9 to i1, !dbg !9438
  %conv9 = zext i1 %tobool8 to i32, !dbg !9438
  %xor = xor i32 %conv7, %conv9, !dbg !9439
  %tobool10 = icmp ne i32 %xor, 0, !dbg !9439
  br i1 %tobool10, label %if.end28, label %if.then11, !dbg !9440

if.then11:                                        ; preds = %if.end2
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9441
  %antenna_dvbt12 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %10, i32 0, i32 104, !dbg !9444
  %11 = load i8, i8* %antenna_dvbt12, align 1, !dbg !9444
  %tobool13 = trunc i8 %11 to i1, !dbg !9444
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !9445

if.then14:                                        ; preds = %if.then11
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9446
  %antenna_gpio15 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 105, !dbg !9447
  %13 = load i16, i16* %antenna_gpio15, align 8, !dbg !9447
  %conv16 = zext i16 %13 to i32, !dbg !9446
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9448
  %m_gpio17 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %14, i32 0, i32 82, !dbg !9449
  %15 = load i16, i16* %m_gpio17, align 8, !dbg !9450
  %conv18 = zext i16 %15 to i32, !dbg !9450
  %or = or i32 %conv18, %conv16, !dbg !9450
  %conv19 = trunc i32 %or to i16, !dbg !9450
  store i16 %conv19, i16* %m_gpio17, align 8, !dbg !9450
  br label %if.end26, !dbg !9448

if.else:                                          ; preds = %if.then11
  %16 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9451
  %antenna_gpio20 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %16, i32 0, i32 105, !dbg !9452
  %17 = load i16, i16* %antenna_gpio20, align 8, !dbg !9452
  %conv21 = zext i16 %17 to i32, !dbg !9451
  %neg = xor i32 %conv21, -1, !dbg !9453
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9454
  %m_gpio22 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %18, i32 0, i32 82, !dbg !9455
  %19 = load i16, i16* %m_gpio22, align 8, !dbg !9456
  %conv23 = zext i16 %19 to i32, !dbg !9456
  %and24 = and i32 %conv23, %neg, !dbg !9456
  %conv25 = trunc i32 %and24 to i16, !dbg !9456
  store i16 %conv25, i16* %m_gpio22, align 8, !dbg !9456
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then14
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9457
  %call27 = call i32 @write_gpio(%struct.drxk_state* %20) #9, !dbg !9458
  store i32 %call27, i32* %status, align 4, !dbg !9459
  br label %if.end28, !dbg !9460

if.end28:                                         ; preds = %if.end26, %if.end2
  %21 = load i32, i32* %status, align 4, !dbg !9461
  %cmp29 = icmp slt i32 %21, 0, !dbg !9463
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !9464

if.then31:                                        ; preds = %if.end28
  %22 = load i32, i32* %status, align 4, !dbg !9465
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.switch_antenna_to_dvbt, i64 0, i64 0)) #8, !dbg !9465
  br label %if.end33, !dbg !9465

if.end33:                                         ; preds = %if.then31, %if.end28
  %23 = load i32, i32* %status, align 4, !dbg !9466
  store i32 %23, i32* %retval, align 4, !dbg !9467
  br label %return, !dbg !9467

return:                                           ; preds = %if.end33, %if.then1
  %24 = load i32, i32* %retval, align 4, !dbg !9468
  ret i32 %24, !dbg !9468
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bl_chain_cmd(%struct.drxk_state* %state, i16 zeroext %rom_offset, i16 zeroext %nr_of_elements, i32 %time_out) #0 !dbg !9469 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !8330, metadata !DIExpression()), !dbg !9472
  %state.addr = alloca %struct.drxk_state*, align 8
  %rom_offset.addr = alloca i16, align 2
  %nr_of_elements.addr = alloca i16, align 2
  %time_out.addr = alloca i32, align 4
  %bl_status = alloca i16, align 2
  %status = alloca i32, align 4
  %end = alloca i64, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !9474, metadata !DIExpression()), !dbg !9475
  store i16 %rom_offset, i16* %rom_offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %rom_offset.addr, metadata !9476, metadata !DIExpression()), !dbg !9477
  store i16 %nr_of_elements, i16* %nr_of_elements.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %nr_of_elements.addr, metadata !9478, metadata !DIExpression()), !dbg !9479
  store i32 %time_out, i32* %time_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %time_out.addr, metadata !9480, metadata !DIExpression()), !dbg !9481
  call void @llvm.dbg.declare(metadata i16* %bl_status, metadata !9482, metadata !DIExpression()), !dbg !9483
  store i16 0, i16* %bl_status, align 2, !dbg !9483
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9484, metadata !DIExpression()), !dbg !9485
  call void @llvm.dbg.declare(metadata i64* %end, metadata !9486, metadata !DIExpression()), !dbg !9487
  br label %do.body, !dbg !9488

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9489
  %cmp = icmp uge i32 %0, 1, !dbg !9489
  br i1 %cmp, label %if.then, label %if.end, !dbg !9492

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.bl_chain_cmd, i64 0, i64 0)) #8, !dbg !9489
  br label %if.end, !dbg !9489

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9492

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9493
  %mutex = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 6, !dbg !9494
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !9495
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9496
  %call1 = call i32 @write16(%struct.drxk_state* %2, i32 4718609, i16 zeroext 1) #9, !dbg !9497
  store i32 %call1, i32* %status, align 4, !dbg !9498
  %3 = load i32, i32* %status, align 4, !dbg !9499
  %cmp2 = icmp slt i32 %3, 0, !dbg !9501
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9502

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !9503

if.end4:                                          ; preds = %do.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9504
  %5 = load i16, i16* %rom_offset.addr, align 2, !dbg !9505
  %call5 = call i32 @write16(%struct.drxk_state* %4, i32 4718616, i16 zeroext %5) #9, !dbg !9506
  store i32 %call5, i32* %status, align 4, !dbg !9507
  %6 = load i32, i32* %status, align 4, !dbg !9508
  %cmp6 = icmp slt i32 %6, 0, !dbg !9510
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !9511

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !9512

if.end8:                                          ; preds = %if.end4
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9513
  %8 = load i16, i16* %nr_of_elements.addr, align 2, !dbg !9514
  %call9 = call i32 @write16(%struct.drxk_state* %7, i32 4718617, i16 zeroext %8) #9, !dbg !9515
  store i32 %call9, i32* %status, align 4, !dbg !9516
  %9 = load i32, i32* %status, align 4, !dbg !9517
  %cmp10 = icmp slt i32 %9, 0, !dbg !9519
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !9520

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !9521

if.end12:                                         ; preds = %if.end8
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9522
  %call13 = call i32 @write16(%struct.drxk_state* %10, i32 4718610, i16 zeroext 1) #9, !dbg !9523
  store i32 %call13, i32* %status, align 4, !dbg !9524
  %11 = load i32, i32* %status, align 4, !dbg !9525
  %cmp14 = icmp slt i32 %11, 0, !dbg !9527
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !9528

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !9529

if.end16:                                         ; preds = %if.end12
  %12 = load volatile i64, i64* @jiffies, align 8, !dbg !9530
  %13 = load i32, i32* %time_out.addr, align 4, !dbg !9531
  store i32 %13, i32* %m.addr.i, align 4
  %14 = load i32, i32* %m.addr.i, align 4, !dbg !9532
  %15 = call i1 @llvm.is.constant.i32(i32 %14) #10, !dbg !9533
  br i1 %15, label %if.then.i, label %if.else.i, !dbg !9534

if.then.i:                                        ; preds = %if.end16
  %16 = load i32, i32* %m.addr.i, align 4, !dbg !9535
  %cmp.i = icmp slt i32 %16, 0, !dbg !9536
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9537

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !9538
  br label %msecs_to_jiffies.exit, !dbg !9538

if.end.i:                                         ; preds = %if.then.i
  %17 = load i32, i32* %m.addr.i, align 4, !dbg !9539
  %call.i = call i64 @_msecs_to_jiffies(i32 %17) #12, !dbg !9540
  store i64 %call.i, i64* %retval.i, align 8, !dbg !9541
  br label %msecs_to_jiffies.exit, !dbg !9541

if.else.i:                                        ; preds = %if.end16
  %18 = load i32, i32* %m.addr.i, align 4, !dbg !9542
  %call2.i = call i64 @__msecs_to_jiffies(i32 %18) #12, !dbg !9543
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !9544
  br label %msecs_to_jiffies.exit, !dbg !9544

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %19 = load i64, i64* %retval.i, align 8, !dbg !9545
  %add = add i64 %12, %19, !dbg !9546
  store i64 %add, i64* %end, align 8, !dbg !9547
  br label %do.body18, !dbg !9548

do.body18:                                        ; preds = %land.end, %msecs_to_jiffies.exit
  call void @usleep_range(i64 1000, i64 2000) #9, !dbg !9549
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9551
  %call19 = call i32 @read16(%struct.drxk_state* %20, i32 4718608, i16* %bl_status) #9, !dbg !9552
  store i32 %call19, i32* %status, align 4, !dbg !9553
  %21 = load i32, i32* %status, align 4, !dbg !9554
  %cmp20 = icmp slt i32 %21, 0, !dbg !9556
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !9557

if.then21:                                        ; preds = %do.body18
  br label %error, !dbg !9558

if.end22:                                         ; preds = %do.body18
  br label %do.cond, !dbg !9559

do.cond:                                          ; preds = %if.end22
  %22 = load i16, i16* %bl_status, align 2, !dbg !9560
  %conv = zext i16 %22 to i32, !dbg !9560
  %cmp23 = icmp eq i32 %conv, 1, !dbg !9561
  br i1 %cmp23, label %land.rhs, label %land.end, !dbg !9562

land.rhs:                                         ; preds = %do.cond
  %23 = load volatile i64, i64* @jiffies, align 8, !dbg !9563
  %24 = load i64, i64* %end, align 8, !dbg !9563
  %sub = sub i64 %23, %24, !dbg !9563
  %cmp25 = icmp slt i64 %sub, 0, !dbg !9563
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %25 = phi i1 [ false, %do.cond ], [ %cmp25, %land.rhs ], !dbg !9564
  br i1 %25, label %do.body18, label %do.end27, !dbg !9559, !llvm.loop !9565

do.end27:                                         ; preds = %land.end
  %26 = load i16, i16* %bl_status, align 2, !dbg !9567
  %conv28 = zext i16 %26 to i32, !dbg !9567
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !9569
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !9570

if.then31:                                        ; preds = %do.end27
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0)) #8, !dbg !9571
  store i32 -22, i32* %status, align 4, !dbg !9573
  br label %error2, !dbg !9574

if.end33:                                         ; preds = %do.end27
  br label %error, !dbg !9575

error:                                            ; preds = %if.end33, %if.then21, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !9576), !dbg !9577
  %27 = load i32, i32* %status, align 4, !dbg !9578
  %cmp34 = icmp slt i32 %27, 0, !dbg !9580
  br i1 %cmp34, label %if.then36, label %if.end38, !dbg !9581

if.then36:                                        ; preds = %error
  %28 = load i32, i32* %status, align 4, !dbg !9582
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %28, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.bl_chain_cmd, i64 0, i64 0)) #8, !dbg !9582
  br label %if.end38, !dbg !9582

if.end38:                                         ; preds = %if.then36, %error
  br label %error2, !dbg !9583

error2:                                           ; preds = %if.end38, %if.then31
  call void @llvm.dbg.label(metadata !9584), !dbg !9585
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9586
  %mutex39 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %29, i32 0, i32 6, !dbg !9587
  call void @mutex_unlock(%struct.mutex* %mutex39) #9, !dbg !9588
  %30 = load i32, i32* %status, align 4, !dbg !9589
  ret i32 %30, !dbg !9590
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @adc_synchronization(%struct.drxk_state* %state) #0 !dbg !9591 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %count = alloca i16, align 2
  %status = alloca i32, align 4
  %clk_neg = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !9592, metadata !DIExpression()), !dbg !9593
  call void @llvm.dbg.declare(metadata i16* %count, metadata !9594, metadata !DIExpression()), !dbg !9595
  store i16 0, i16* %count, align 2, !dbg !9595
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9596, metadata !DIExpression()), !dbg !9597
  br label %do.body, !dbg !9598

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9599
  %cmp = icmp uge i32 %0, 1, !dbg !9599
  br i1 %cmp, label %if.then, label %if.end, !dbg !9602

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.adc_synchronization, i64 0, i64 0)) #8, !dbg !9599
  br label %if.end, !dbg !9599

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9602

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9603
  %call1 = call i32 @adc_sync_measurement(%struct.drxk_state* %1, i16* %count) #9, !dbg !9604
  store i32 %call1, i32* %status, align 4, !dbg !9605
  %2 = load i32, i32* %status, align 4, !dbg !9606
  %cmp2 = icmp slt i32 %2, 0, !dbg !9608
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9609

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !9610

if.end4:                                          ; preds = %do.end
  %3 = load i16, i16* %count, align 2, !dbg !9611
  %conv = zext i16 %3 to i32, !dbg !9611
  %cmp5 = icmp eq i32 %conv, 1, !dbg !9613
  br i1 %cmp5, label %if.then7, label %if.end38, !dbg !9614

if.then7:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i16* %clk_neg, metadata !9615, metadata !DIExpression()), !dbg !9617
  store i16 0, i16* %clk_neg, align 2, !dbg !9617
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9618
  %call8 = call i32 @read16(%struct.drxk_state* %4, i32 25624594, i16* %clk_neg) #9, !dbg !9619
  store i32 %call8, i32* %status, align 4, !dbg !9620
  %5 = load i32, i32* %status, align 4, !dbg !9621
  %cmp9 = icmp slt i32 %5, 0, !dbg !9623
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !9624

if.then11:                                        ; preds = %if.then7
  br label %error, !dbg !9625

if.end12:                                         ; preds = %if.then7
  %6 = load i16, i16* %clk_neg, align 2, !dbg !9626
  %conv13 = zext i16 %6 to i32, !dbg !9626
  %and = and i32 %conv13, 2, !dbg !9628
  %cmp14 = icmp eq i32 %and, 0, !dbg !9629
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !9630

if.then16:                                        ; preds = %if.end12
  %7 = load i16, i16* %clk_neg, align 2, !dbg !9631
  %conv17 = zext i16 %7 to i32, !dbg !9631
  %and18 = and i32 %conv17, -3, !dbg !9631
  %conv19 = trunc i32 %and18 to i16, !dbg !9631
  store i16 %conv19, i16* %clk_neg, align 2, !dbg !9631
  %8 = load i16, i16* %clk_neg, align 2, !dbg !9633
  %conv20 = zext i16 %8 to i32, !dbg !9633
  %or = or i32 %conv20, 2, !dbg !9633
  %conv21 = trunc i32 %or to i16, !dbg !9633
  store i16 %conv21, i16* %clk_neg, align 2, !dbg !9633
  br label %if.end27, !dbg !9634

if.else:                                          ; preds = %if.end12
  %9 = load i16, i16* %clk_neg, align 2, !dbg !9635
  %conv22 = zext i16 %9 to i32, !dbg !9635
  %and23 = and i32 %conv22, -3, !dbg !9635
  %conv24 = trunc i32 %and23 to i16, !dbg !9635
  store i16 %conv24, i16* %clk_neg, align 2, !dbg !9635
  %10 = load i16, i16* %clk_neg, align 2, !dbg !9637
  %conv25 = zext i16 %10 to i32, !dbg !9637
  %conv26 = trunc i32 %conv25 to i16, !dbg !9637
  store i16 %conv26, i16* %clk_neg, align 2, !dbg !9637
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then16
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9638
  %12 = load i16, i16* %clk_neg, align 2, !dbg !9639
  %call28 = call i32 @write16(%struct.drxk_state* %11, i32 25624594, i16 zeroext %12) #9, !dbg !9640
  store i32 %call28, i32* %status, align 4, !dbg !9641
  %13 = load i32, i32* %status, align 4, !dbg !9642
  %cmp29 = icmp slt i32 %13, 0, !dbg !9644
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !9645

if.then31:                                        ; preds = %if.end27
  br label %error, !dbg !9646

if.end32:                                         ; preds = %if.end27
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9647
  %call33 = call i32 @adc_sync_measurement(%struct.drxk_state* %14, i16* %count) #9, !dbg !9648
  store i32 %call33, i32* %status, align 4, !dbg !9649
  %15 = load i32, i32* %status, align 4, !dbg !9650
  %cmp34 = icmp slt i32 %15, 0, !dbg !9652
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !9653

if.then36:                                        ; preds = %if.end32
  br label %error, !dbg !9654

if.end37:                                         ; preds = %if.end32
  br label %if.end38, !dbg !9655

if.end38:                                         ; preds = %if.end37, %if.end4
  %16 = load i16, i16* %count, align 2, !dbg !9656
  %conv39 = zext i16 %16 to i32, !dbg !9656
  %cmp40 = icmp slt i32 %conv39, 2, !dbg !9658
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !9659

if.then42:                                        ; preds = %if.end38
  store i32 -22, i32* %status, align 4, !dbg !9660
  br label %if.end43, !dbg !9661

if.end43:                                         ; preds = %if.then42, %if.end38
  br label %error, !dbg !9662

error:                                            ; preds = %if.end43, %if.then36, %if.then31, %if.then11, %if.then3
  call void @llvm.dbg.label(metadata !9663), !dbg !9664
  %17 = load i32, i32* %status, align 4, !dbg !9665
  %cmp44 = icmp slt i32 %17, 0, !dbg !9667
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !9668

if.then46:                                        ; preds = %error
  %18 = load i32, i32* %status, align 4, !dbg !9669
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.adc_synchronization, i64 0, i64 0)) #8, !dbg !9669
  br label %if.end48, !dbg !9669

if.end48:                                         ; preds = %if.then46, %error
  %19 = load i32, i32* %status, align 4, !dbg !9670
  ret i32 %19, !dbg !9671
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_pre_saw(%struct.drxk_state* %state, %struct.s_cfg_pre_saw* %p_pre_saw_cfg) #0 !dbg !9672 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %p_pre_saw_cfg.addr = alloca %struct.s_cfg_pre_saw*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !9676, metadata !DIExpression()), !dbg !9677
  store %struct.s_cfg_pre_saw* %p_pre_saw_cfg, %struct.s_cfg_pre_saw** %p_pre_saw_cfg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.s_cfg_pre_saw** %p_pre_saw_cfg.addr, metadata !9678, metadata !DIExpression()), !dbg !9679
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9680, metadata !DIExpression()), !dbg !9681
  store i32 -22, i32* %status, align 4, !dbg !9681
  br label %do.body, !dbg !9682

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9683
  %cmp = icmp uge i32 %0, 1, !dbg !9683
  br i1 %cmp, label %if.then, label %if.end, !dbg !9686

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.set_pre_saw, i64 0, i64 0)) #8, !dbg !9683
  br label %if.end, !dbg !9683

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9686

do.end:                                           ; preds = %if.end
  %1 = load %struct.s_cfg_pre_saw*, %struct.s_cfg_pre_saw** %p_pre_saw_cfg.addr, align 8, !dbg !9687
  %cmp1 = icmp eq %struct.s_cfg_pre_saw* %1, null, !dbg !9689
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !9690

lor.lhs.false:                                    ; preds = %do.end
  %2 = load %struct.s_cfg_pre_saw*, %struct.s_cfg_pre_saw** %p_pre_saw_cfg.addr, align 8, !dbg !9691
  %reference = getelementptr inbounds %struct.s_cfg_pre_saw, %struct.s_cfg_pre_saw* %2, i32 0, i32 0, !dbg !9692
  %3 = load i16, i16* %reference, align 2, !dbg !9692
  %conv = zext i16 %3 to i32, !dbg !9691
  %cmp2 = icmp sgt i32 %conv, 31, !dbg !9693
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !9694

if.then4:                                         ; preds = %lor.lhs.false, %do.end
  br label %error, !dbg !9695

if.end5:                                          ; preds = %lor.lhs.false
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9696
  %5 = load %struct.s_cfg_pre_saw*, %struct.s_cfg_pre_saw** %p_pre_saw_cfg.addr, align 8, !dbg !9697
  %reference6 = getelementptr inbounds %struct.s_cfg_pre_saw, %struct.s_cfg_pre_saw* %5, i32 0, i32 0, !dbg !9698
  %6 = load i16, i16* %reference6, align 2, !dbg !9698
  %call7 = call i32 @write16(%struct.drxk_state* %4, i32 25624619, i16 zeroext %6) #9, !dbg !9699
  store i32 %call7, i32* %status, align 4, !dbg !9700
  br label %error, !dbg !9701

error:                                            ; preds = %if.end5, %if.then4
  call void @llvm.dbg.label(metadata !9702), !dbg !9703
  %7 = load i32, i32* %status, align 4, !dbg !9704
  %cmp8 = icmp slt i32 %7, 0, !dbg !9706
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !9707

if.then10:                                        ; preds = %error
  %8 = load i32, i32* %status, align 4, !dbg !9708
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.set_pre_saw, i64 0, i64 0)) #8, !dbg !9708
  br label %if.end12, !dbg !9708

if.end12:                                         ; preds = %if.then10, %error
  %9 = load i32, i32* %status, align 4, !dbg !9709
  ret i32 %9, !dbg !9710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_agc_rf(%struct.drxk_state* %state, %struct.s_cfg_agc* %p_agc_cfg, i1 zeroext %is_dtv) #0 !dbg !9711 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %p_agc_cfg.addr = alloca %struct.s_cfg_agc*, align 8
  %is_dtv.addr = alloca i8, align 1
  %status = alloca i32, align 4
  %data = alloca i16, align 2
  %p_if_agc_settings = alloca %struct.s_cfg_agc*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !9715, metadata !DIExpression()), !dbg !9716
  store %struct.s_cfg_agc* %p_agc_cfg, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.s_cfg_agc** %p_agc_cfg.addr, metadata !9717, metadata !DIExpression()), !dbg !9718
  %frombool = zext i1 %is_dtv to i8
  store i8 %frombool, i8* %is_dtv.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_dtv.addr, metadata !9719, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9721, metadata !DIExpression()), !dbg !9722
  store i32 -22, i32* %status, align 4, !dbg !9722
  call void @llvm.dbg.declare(metadata i16* %data, metadata !9723, metadata !DIExpression()), !dbg !9724
  store i16 0, i16* %data, align 2, !dbg !9724
  call void @llvm.dbg.declare(metadata %struct.s_cfg_agc** %p_if_agc_settings, metadata !9725, metadata !DIExpression()), !dbg !9726
  br label %do.body, !dbg !9727

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9728
  %cmp = icmp uge i32 %0, 1, !dbg !9728
  br i1 %cmp, label %if.then, label %if.end, !dbg !9731

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.set_agc_rf, i64 0, i64 0)) #8, !dbg !9728
  br label %if.end, !dbg !9728

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9731

do.end:                                           ; preds = %if.end
  %1 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8, !dbg !9732
  %cmp1 = icmp eq %struct.s_cfg_agc* %1, null, !dbg !9734
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9735

if.then2:                                         ; preds = %do.end
  br label %error, !dbg !9736

if.end3:                                          ; preds = %do.end
  %2 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8, !dbg !9737
  %ctrl_mode = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %2, i32 0, i32 0, !dbg !9738
  %3 = load i32, i32* %ctrl_mode, align 4, !dbg !9738
  switch i32 %3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb84
    i32 2, label %sw.bb132
  ], !dbg !9739

sw.bb:                                            ; preds = %if.end3
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9740
  %call4 = call i32 @read16(%struct.drxk_state* %4, i32 25624620, i16* %data) #9, !dbg !9742
  store i32 %call4, i32* %status, align 4, !dbg !9743
  %5 = load i32, i32* %status, align 4, !dbg !9744
  %cmp5 = icmp slt i32 %5, 0, !dbg !9746
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !9747

if.then6:                                         ; preds = %sw.bb
  br label %error, !dbg !9748

if.end7:                                          ; preds = %sw.bb
  %6 = load i16, i16* %data, align 2, !dbg !9749
  %conv = zext i16 %6 to i32, !dbg !9749
  %and = and i32 %conv, -33, !dbg !9749
  %conv8 = trunc i32 %and to i16, !dbg !9749
  store i16 %conv8, i16* %data, align 2, !dbg !9749
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9750
  %8 = load i16, i16* %data, align 2, !dbg !9751
  %call9 = call i32 @write16(%struct.drxk_state* %7, i32 25624620, i16 zeroext %8) #9, !dbg !9752
  store i32 %call9, i32* %status, align 4, !dbg !9753
  %9 = load i32, i32* %status, align 4, !dbg !9754
  %cmp10 = icmp slt i32 %9, 0, !dbg !9756
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9757

if.then12:                                        ; preds = %if.end7
  br label %error, !dbg !9758

if.end13:                                         ; preds = %if.end7
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9759
  %call14 = call i32 @read16(%struct.drxk_state* %10, i32 8593188, i16* %data) #9, !dbg !9760
  store i32 %call14, i32* %status, align 4, !dbg !9761
  %11 = load i32, i32* %status, align 4, !dbg !9762
  %cmp15 = icmp slt i32 %11, 0, !dbg !9764
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !9765

if.then17:                                        ; preds = %if.end13
  br label %error, !dbg !9766

if.end18:                                         ; preds = %if.end13
  %12 = load i16, i16* %data, align 2, !dbg !9767
  %conv19 = zext i16 %12 to i32, !dbg !9767
  %and20 = and i32 %conv19, -2, !dbg !9767
  %conv21 = trunc i32 %and20 to i16, !dbg !9767
  store i16 %conv21, i16* %data, align 2, !dbg !9767
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9768
  %m_rf_agc_pol = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %13, i32 0, i32 60, !dbg !9770
  %14 = load i8, i8* %m_rf_agc_pol, align 1, !dbg !9770
  %tobool = trunc i8 %14 to i1, !dbg !9770
  br i1 %tobool, label %if.then22, label %if.else, !dbg !9771

if.then22:                                        ; preds = %if.end18
  %15 = load i16, i16* %data, align 2, !dbg !9772
  %conv23 = zext i16 %15 to i32, !dbg !9772
  %or = or i32 %conv23, 512, !dbg !9772
  %conv24 = trunc i32 %or to i16, !dbg !9772
  store i16 %conv24, i16* %data, align 2, !dbg !9772
  br label %if.end28, !dbg !9773

if.else:                                          ; preds = %if.end18
  %16 = load i16, i16* %data, align 2, !dbg !9774
  %conv25 = zext i16 %16 to i32, !dbg !9774
  %and26 = and i32 %conv25, -513, !dbg !9774
  %conv27 = trunc i32 %and26 to i16, !dbg !9774
  store i16 %conv27, i16* %data, align 2, !dbg !9774
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then22
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9775
  %18 = load i16, i16* %data, align 2, !dbg !9776
  %call29 = call i32 @write16(%struct.drxk_state* %17, i32 8593188, i16 zeroext %18) #9, !dbg !9777
  store i32 %call29, i32* %status, align 4, !dbg !9778
  %19 = load i32, i32* %status, align 4, !dbg !9779
  %cmp30 = icmp slt i32 %19, 0, !dbg !9781
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !9782

if.then32:                                        ; preds = %if.end28
  br label %error, !dbg !9783

if.end33:                                         ; preds = %if.end28
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9784
  %call34 = call i32 @read16(%struct.drxk_state* %20, i32 8593190, i16* %data) #9, !dbg !9785
  store i32 %call34, i32* %status, align 4, !dbg !9786
  %21 = load i32, i32* %status, align 4, !dbg !9787
  %cmp35 = icmp slt i32 %21, 0, !dbg !9789
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !9790

if.then37:                                        ; preds = %if.end33
  br label %error, !dbg !9791

if.end38:                                         ; preds = %if.end33
  %22 = load i16, i16* %data, align 2, !dbg !9792
  %conv39 = zext i16 %22 to i32, !dbg !9792
  %and40 = and i32 %conv39, -13, !dbg !9792
  %conv41 = trunc i32 %and40 to i16, !dbg !9792
  store i16 %conv41, i16* %data, align 2, !dbg !9792
  %23 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8, !dbg !9793
  %speed = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %23, i32 0, i32 4, !dbg !9794
  %24 = load i16, i16* %speed, align 2, !dbg !9794
  %conv42 = zext i16 %24 to i32, !dbg !9793
  %shl = shl i32 %conv42, 2, !dbg !9795
  %neg = xor i32 %shl, -1, !dbg !9796
  %and43 = and i32 %neg, 12, !dbg !9797
  %25 = load i16, i16* %data, align 2, !dbg !9798
  %conv44 = zext i16 %25 to i32, !dbg !9798
  %or45 = or i32 %conv44, %and43, !dbg !9798
  %conv46 = trunc i32 %or45 to i16, !dbg !9798
  store i16 %conv46, i16* %data, align 2, !dbg !9798
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9799
  %27 = load i16, i16* %data, align 2, !dbg !9800
  %call47 = call i32 @write16(%struct.drxk_state* %26, i32 8593190, i16 zeroext %27) #9, !dbg !9801
  store i32 %call47, i32* %status, align 4, !dbg !9802
  %28 = load i32, i32* %status, align 4, !dbg !9803
  %cmp48 = icmp slt i32 %28, 0, !dbg !9805
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !9806

if.then50:                                        ; preds = %if.end38
  br label %error, !dbg !9807

if.end51:                                         ; preds = %if.end38
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9808
  %call52 = call zeroext i1 @is_dvbt(%struct.drxk_state* %29) #9, !dbg !9810
  br i1 %call52, label %if.then53, label %if.else54, !dbg !9811

if.then53:                                        ; preds = %if.end51
  %30 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9812
  %m_dvbt_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %30, i32 0, i32 85, !dbg !9813
  store %struct.s_cfg_agc* %m_dvbt_if_agc_cfg, %struct.s_cfg_agc** %p_if_agc_settings, align 8, !dbg !9814
  br label %if.end59, !dbg !9815

if.else54:                                        ; preds = %if.end51
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9816
  %call55 = call zeroext i1 @is_qam(%struct.drxk_state* %31) #9, !dbg !9818
  br i1 %call55, label %if.then56, label %if.else57, !dbg !9819

if.then56:                                        ; preds = %if.else54
  %32 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9820
  %m_qam_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %32, i32 0, i32 75, !dbg !9821
  store %struct.s_cfg_agc* %m_qam_if_agc_cfg, %struct.s_cfg_agc** %p_if_agc_settings, align 8, !dbg !9822
  br label %if.end58, !dbg !9823

if.else57:                                        ; preds = %if.else54
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9824
  %m_atv_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %33, i32 0, i32 63, !dbg !9825
  store %struct.s_cfg_agc* %m_atv_if_agc_cfg, %struct.s_cfg_agc** %p_if_agc_settings, align 8, !dbg !9826
  br label %if.end58

if.end58:                                         ; preds = %if.else57, %if.then56
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then53
  %34 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_if_agc_settings, align 8, !dbg !9827
  %cmp60 = icmp eq %struct.s_cfg_agc* %34, null, !dbg !9829
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !9830

if.then62:                                        ; preds = %if.end59
  store i32 -22, i32* %status, align 4, !dbg !9831
  br label %error, !dbg !9833

if.end63:                                         ; preds = %if.end59
  %35 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_if_agc_settings, align 8, !dbg !9834
  %ctrl_mode64 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %35, i32 0, i32 0, !dbg !9836
  %36 = load i32, i32* %ctrl_mode64, align 4, !dbg !9836
  %cmp65 = icmp eq i32 %36, 0, !dbg !9837
  br i1 %cmp65, label %if.then67, label %if.end73, !dbg !9838

if.then67:                                        ; preds = %if.end63
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9839
  %38 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8, !dbg !9841
  %top = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %38, i32 0, i32 5, !dbg !9842
  %39 = load i16, i16* %top, align 4, !dbg !9842
  %call68 = call i32 @write16(%struct.drxk_state* %37, i32 8593220, i16 zeroext %39) #9, !dbg !9843
  store i32 %call68, i32* %status, align 4, !dbg !9844
  %40 = load i32, i32* %status, align 4, !dbg !9845
  %cmp69 = icmp slt i32 %40, 0, !dbg !9847
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !9848

if.then71:                                        ; preds = %if.then67
  br label %error, !dbg !9849

if.end72:                                         ; preds = %if.then67
  br label %if.end73, !dbg !9850

if.end73:                                         ; preds = %if.end72, %if.end63
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9851
  %42 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8, !dbg !9852
  %cut_off_current = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %42, i32 0, i32 6, !dbg !9853
  %43 = load i16, i16* %cut_off_current, align 2, !dbg !9853
  %call74 = call i32 @write16(%struct.drxk_state* %41, i32 8593223, i16 zeroext %43) #9, !dbg !9854
  store i32 %call74, i32* %status, align 4, !dbg !9855
  %44 = load i32, i32* %status, align 4, !dbg !9856
  %cmp75 = icmp slt i32 %44, 0, !dbg !9858
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !9859

if.then77:                                        ; preds = %if.end73
  br label %error, !dbg !9860

if.end78:                                         ; preds = %if.end73
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9861
  %46 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8, !dbg !9862
  %max_output_level = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %46, i32 0, i32 3, !dbg !9863
  %47 = load i16, i16* %max_output_level, align 4, !dbg !9863
  %call79 = call i32 @write16(%struct.drxk_state* %45, i32 8593179, i16 zeroext %47) #9, !dbg !9864
  store i32 %call79, i32* %status, align 4, !dbg !9865
  %48 = load i32, i32* %status, align 4, !dbg !9866
  %cmp80 = icmp slt i32 %48, 0, !dbg !9868
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !9869

if.then82:                                        ; preds = %if.end78
  br label %error, !dbg !9870

if.end83:                                         ; preds = %if.end78
  br label %sw.epilog, !dbg !9871

sw.bb84:                                          ; preds = %if.end3
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9872
  %call85 = call i32 @read16(%struct.drxk_state* %49, i32 25624620, i16* %data) #9, !dbg !9873
  store i32 %call85, i32* %status, align 4, !dbg !9874
  %50 = load i32, i32* %status, align 4, !dbg !9875
  %cmp86 = icmp slt i32 %50, 0, !dbg !9877
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !9878

if.then88:                                        ; preds = %sw.bb84
  br label %error, !dbg !9879

if.end89:                                         ; preds = %sw.bb84
  %51 = load i16, i16* %data, align 2, !dbg !9880
  %conv90 = zext i16 %51 to i32, !dbg !9880
  %and91 = and i32 %conv90, -33, !dbg !9880
  %conv92 = trunc i32 %and91 to i16, !dbg !9880
  store i16 %conv92, i16* %data, align 2, !dbg !9880
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9881
  %53 = load i16, i16* %data, align 2, !dbg !9882
  %call93 = call i32 @write16(%struct.drxk_state* %52, i32 25624620, i16 zeroext %53) #9, !dbg !9883
  store i32 %call93, i32* %status, align 4, !dbg !9884
  %54 = load i32, i32* %status, align 4, !dbg !9885
  %cmp94 = icmp slt i32 %54, 0, !dbg !9887
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !9888

if.then96:                                        ; preds = %if.end89
  br label %error, !dbg !9889

if.end97:                                         ; preds = %if.end89
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9890
  %call98 = call i32 @read16(%struct.drxk_state* %55, i32 8593188, i16* %data) #9, !dbg !9891
  store i32 %call98, i32* %status, align 4, !dbg !9892
  %56 = load i32, i32* %status, align 4, !dbg !9893
  %cmp99 = icmp slt i32 %56, 0, !dbg !9895
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !9896

if.then101:                                       ; preds = %if.end97
  br label %error, !dbg !9897

if.end102:                                        ; preds = %if.end97
  %57 = load i16, i16* %data, align 2, !dbg !9898
  %conv103 = zext i16 %57 to i32, !dbg !9898
  %or104 = or i32 %conv103, 1, !dbg !9898
  %conv105 = trunc i32 %or104 to i16, !dbg !9898
  store i16 %conv105, i16* %data, align 2, !dbg !9898
  %58 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9899
  %m_rf_agc_pol106 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %58, i32 0, i32 60, !dbg !9901
  %59 = load i8, i8* %m_rf_agc_pol106, align 1, !dbg !9901
  %tobool107 = trunc i8 %59 to i1, !dbg !9901
  br i1 %tobool107, label %if.then108, label %if.else112, !dbg !9902

if.then108:                                       ; preds = %if.end102
  %60 = load i16, i16* %data, align 2, !dbg !9903
  %conv109 = zext i16 %60 to i32, !dbg !9903
  %or110 = or i32 %conv109, 512, !dbg !9903
  %conv111 = trunc i32 %or110 to i16, !dbg !9903
  store i16 %conv111, i16* %data, align 2, !dbg !9903
  br label %if.end116, !dbg !9904

if.else112:                                       ; preds = %if.end102
  %61 = load i16, i16* %data, align 2, !dbg !9905
  %conv113 = zext i16 %61 to i32, !dbg !9905
  %and114 = and i32 %conv113, -513, !dbg !9905
  %conv115 = trunc i32 %and114 to i16, !dbg !9905
  store i16 %conv115, i16* %data, align 2, !dbg !9905
  br label %if.end116

if.end116:                                        ; preds = %if.else112, %if.then108
  %62 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9906
  %63 = load i16, i16* %data, align 2, !dbg !9907
  %call117 = call i32 @write16(%struct.drxk_state* %62, i32 8593188, i16 zeroext %63) #9, !dbg !9908
  store i32 %call117, i32* %status, align 4, !dbg !9909
  %64 = load i32, i32* %status, align 4, !dbg !9910
  %cmp118 = icmp slt i32 %64, 0, !dbg !9912
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !9913

if.then120:                                       ; preds = %if.end116
  br label %error, !dbg !9914

if.end121:                                        ; preds = %if.end116
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9915
  %call122 = call i32 @write16(%struct.drxk_state* %65, i32 8593223, i16 zeroext 0) #9, !dbg !9916
  store i32 %call122, i32* %status, align 4, !dbg !9917
  %66 = load i32, i32* %status, align 4, !dbg !9918
  %cmp123 = icmp slt i32 %66, 0, !dbg !9920
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !9921

if.then125:                                       ; preds = %if.end121
  br label %error, !dbg !9922

if.end126:                                        ; preds = %if.end121
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9923
  %68 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8, !dbg !9924
  %output_level = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %68, i32 0, i32 1, !dbg !9925
  %69 = load i16, i16* %output_level, align 4, !dbg !9925
  %call127 = call i32 @write16(%struct.drxk_state* %67, i32 8593221, i16 zeroext %69) #9, !dbg !9926
  store i32 %call127, i32* %status, align 4, !dbg !9927
  %70 = load i32, i32* %status, align 4, !dbg !9928
  %cmp128 = icmp slt i32 %70, 0, !dbg !9930
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !9931

if.then130:                                       ; preds = %if.end126
  br label %error, !dbg !9932

if.end131:                                        ; preds = %if.end126
  br label %sw.epilog, !dbg !9933

sw.bb132:                                         ; preds = %if.end3
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9934
  %call133 = call i32 @read16(%struct.drxk_state* %71, i32 25624620, i16* %data) #9, !dbg !9935
  store i32 %call133, i32* %status, align 4, !dbg !9936
  %72 = load i32, i32* %status, align 4, !dbg !9937
  %cmp134 = icmp slt i32 %72, 0, !dbg !9939
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !9940

if.then136:                                       ; preds = %sw.bb132
  br label %error, !dbg !9941

if.end137:                                        ; preds = %sw.bb132
  %73 = load i16, i16* %data, align 2, !dbg !9942
  %conv138 = zext i16 %73 to i32, !dbg !9942
  %or139 = or i32 %conv138, 32, !dbg !9942
  %conv140 = trunc i32 %or139 to i16, !dbg !9942
  store i16 %conv140, i16* %data, align 2, !dbg !9942
  %74 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9943
  %75 = load i16, i16* %data, align 2, !dbg !9944
  %call141 = call i32 @write16(%struct.drxk_state* %74, i32 25624620, i16 zeroext %75) #9, !dbg !9945
  store i32 %call141, i32* %status, align 4, !dbg !9946
  %76 = load i32, i32* %status, align 4, !dbg !9947
  %cmp142 = icmp slt i32 %76, 0, !dbg !9949
  br i1 %cmp142, label %if.then144, label %if.end145, !dbg !9950

if.then144:                                       ; preds = %if.end137
  br label %error, !dbg !9951

if.end145:                                        ; preds = %if.end137
  %77 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9952
  %call146 = call i32 @read16(%struct.drxk_state* %77, i32 8593188, i16* %data) #9, !dbg !9953
  store i32 %call146, i32* %status, align 4, !dbg !9954
  %78 = load i32, i32* %status, align 4, !dbg !9955
  %cmp147 = icmp slt i32 %78, 0, !dbg !9957
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !9958

if.then149:                                       ; preds = %if.end145
  br label %error, !dbg !9959

if.end150:                                        ; preds = %if.end145
  %79 = load i16, i16* %data, align 2, !dbg !9960
  %conv151 = zext i16 %79 to i32, !dbg !9960
  %or152 = or i32 %conv151, 1, !dbg !9960
  %conv153 = trunc i32 %or152 to i16, !dbg !9960
  store i16 %conv153, i16* %data, align 2, !dbg !9960
  %80 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !9961
  %81 = load i16, i16* %data, align 2, !dbg !9962
  %call154 = call i32 @write16(%struct.drxk_state* %80, i32 8593188, i16 zeroext %81) #9, !dbg !9963
  store i32 %call154, i32* %status, align 4, !dbg !9964
  %82 = load i32, i32* %status, align 4, !dbg !9965
  %cmp155 = icmp slt i32 %82, 0, !dbg !9967
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !9968

if.then157:                                       ; preds = %if.end150
  br label %error, !dbg !9969

if.end158:                                        ; preds = %if.end150
  br label %sw.epilog, !dbg !9970

sw.default:                                       ; preds = %if.end3
  store i32 -22, i32* %status, align 4, !dbg !9971
  br label %sw.epilog, !dbg !9972

sw.epilog:                                        ; preds = %sw.default, %if.end158, %if.end131, %if.end83
  br label %error, !dbg !9972

error:                                            ; preds = %sw.epilog, %if.then157, %if.then149, %if.then144, %if.then136, %if.then130, %if.then125, %if.then120, %if.then101, %if.then96, %if.then88, %if.then82, %if.then77, %if.then71, %if.then62, %if.then50, %if.then37, %if.then32, %if.then17, %if.then12, %if.then6, %if.then2
  call void @llvm.dbg.label(metadata !9973), !dbg !9974
  %83 = load i32, i32* %status, align 4, !dbg !9975
  %cmp159 = icmp slt i32 %83, 0, !dbg !9977
  br i1 %cmp159, label %if.then161, label %if.end163, !dbg !9978

if.then161:                                       ; preds = %error
  %84 = load i32, i32* %status, align 4, !dbg !9979
  %call162 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %84, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.set_agc_rf, i64 0, i64 0)) #8, !dbg !9979
  br label %if.end163, !dbg !9979

if.end163:                                        ; preds = %if.then161, %error
  %85 = load i32, i32* %status, align 4, !dbg !9980
  ret i32 %85, !dbg !9981
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_agc_if(%struct.drxk_state* %state, %struct.s_cfg_agc* %p_agc_cfg, i1 zeroext %is_dtv) #0 !dbg !9982 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %p_agc_cfg.addr = alloca %struct.s_cfg_agc*, align 8
  %is_dtv.addr = alloca i8, align 1
  %data = alloca i16, align 2
  %status = alloca i32, align 4
  %p_rf_agc_settings = alloca %struct.s_cfg_agc*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !9983, metadata !DIExpression()), !dbg !9984
  store %struct.s_cfg_agc* %p_agc_cfg, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.s_cfg_agc** %p_agc_cfg.addr, metadata !9985, metadata !DIExpression()), !dbg !9986
  %frombool = zext i1 %is_dtv to i8
  store i8 %frombool, i8* %is_dtv.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_dtv.addr, metadata !9987, metadata !DIExpression()), !dbg !9988
  call void @llvm.dbg.declare(metadata i16* %data, metadata !9989, metadata !DIExpression()), !dbg !9990
  store i16 0, i16* %data, align 2, !dbg !9990
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9991, metadata !DIExpression()), !dbg !9992
  store i32 0, i32* %status, align 4, !dbg !9992
  call void @llvm.dbg.declare(metadata %struct.s_cfg_agc** %p_rf_agc_settings, metadata !9993, metadata !DIExpression()), !dbg !9994
  br label %do.body, !dbg !9995

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9996
  %cmp = icmp uge i32 %0, 1, !dbg !9996
  br i1 %cmp, label %if.then, label %if.end, !dbg !9999

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.set_agc_if, i64 0, i64 0)) #8, !dbg !9996
  br label %if.end, !dbg !9996

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9999

do.end:                                           ; preds = %if.end
  %1 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8, !dbg !10000
  %ctrl_mode = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %1, i32 0, i32 0, !dbg !10001
  %2 = load i32, i32* %ctrl_mode, align 4, !dbg !10001
  switch i32 %2, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb62
    i32 2, label %sw.bb105
  ], !dbg !10002

sw.bb:                                            ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10003
  %call1 = call i32 @read16(%struct.drxk_state* %3, i32 25624620, i16* %data) #9, !dbg !10005
  store i32 %call1, i32* %status, align 4, !dbg !10006
  %4 = load i32, i32* %status, align 4, !dbg !10007
  %cmp2 = icmp slt i32 %4, 0, !dbg !10009
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10010

if.then3:                                         ; preds = %sw.bb
  br label %error, !dbg !10011

if.end4:                                          ; preds = %sw.bb
  %5 = load i16, i16* %data, align 2, !dbg !10012
  %conv = zext i16 %5 to i32, !dbg !10012
  %and = and i32 %conv, -17, !dbg !10012
  %conv5 = trunc i32 %and to i16, !dbg !10012
  store i16 %conv5, i16* %data, align 2, !dbg !10012
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10013
  %7 = load i16, i16* %data, align 2, !dbg !10014
  %call6 = call i32 @write16(%struct.drxk_state* %6, i32 25624620, i16 zeroext %7) #9, !dbg !10015
  store i32 %call6, i32* %status, align 4, !dbg !10016
  %8 = load i32, i32* %status, align 4, !dbg !10017
  %cmp7 = icmp slt i32 %8, 0, !dbg !10019
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !10020

if.then9:                                         ; preds = %if.end4
  br label %error, !dbg !10021

if.end10:                                         ; preds = %if.end4
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10022
  %call11 = call i32 @read16(%struct.drxk_state* %9, i32 8593188, i16* %data) #9, !dbg !10023
  store i32 %call11, i32* %status, align 4, !dbg !10024
  %10 = load i32, i32* %status, align 4, !dbg !10025
  %cmp12 = icmp slt i32 %10, 0, !dbg !10027
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !10028

if.then14:                                        ; preds = %if.end10
  br label %error, !dbg !10029

if.end15:                                         ; preds = %if.end10
  %11 = load i16, i16* %data, align 2, !dbg !10030
  %conv16 = zext i16 %11 to i32, !dbg !10030
  %and17 = and i32 %conv16, -3, !dbg !10030
  %conv18 = trunc i32 %and17 to i16, !dbg !10030
  store i16 %conv18, i16* %data, align 2, !dbg !10030
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10031
  %m_if_agc_pol = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 61, !dbg !10033
  %13 = load i8, i8* %m_if_agc_pol, align 2, !dbg !10033
  %tobool = trunc i8 %13 to i1, !dbg !10033
  br i1 %tobool, label %if.then19, label %if.else, !dbg !10034

if.then19:                                        ; preds = %if.end15
  %14 = load i16, i16* %data, align 2, !dbg !10035
  %conv20 = zext i16 %14 to i32, !dbg !10035
  %or = or i32 %conv20, 256, !dbg !10035
  %conv21 = trunc i32 %or to i16, !dbg !10035
  store i16 %conv21, i16* %data, align 2, !dbg !10035
  br label %if.end25, !dbg !10036

if.else:                                          ; preds = %if.end15
  %15 = load i16, i16* %data, align 2, !dbg !10037
  %conv22 = zext i16 %15 to i32, !dbg !10037
  %and23 = and i32 %conv22, -257, !dbg !10037
  %conv24 = trunc i32 %and23 to i16, !dbg !10037
  store i16 %conv24, i16* %data, align 2, !dbg !10037
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then19
  %16 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10038
  %17 = load i16, i16* %data, align 2, !dbg !10039
  %call26 = call i32 @write16(%struct.drxk_state* %16, i32 8593188, i16 zeroext %17) #9, !dbg !10040
  store i32 %call26, i32* %status, align 4, !dbg !10041
  %18 = load i32, i32* %status, align 4, !dbg !10042
  %cmp27 = icmp slt i32 %18, 0, !dbg !10044
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !10045

if.then29:                                        ; preds = %if.end25
  br label %error, !dbg !10046

if.end30:                                         ; preds = %if.end25
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10047
  %call31 = call i32 @read16(%struct.drxk_state* %19, i32 8593190, i16* %data) #9, !dbg !10048
  store i32 %call31, i32* %status, align 4, !dbg !10049
  %20 = load i32, i32* %status, align 4, !dbg !10050
  %cmp32 = icmp slt i32 %20, 0, !dbg !10052
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !10053

if.then34:                                        ; preds = %if.end30
  br label %error, !dbg !10054

if.end35:                                         ; preds = %if.end30
  %21 = load i16, i16* %data, align 2, !dbg !10055
  %conv36 = zext i16 %21 to i32, !dbg !10055
  %and37 = and i32 %conv36, -49, !dbg !10055
  %conv38 = trunc i32 %and37 to i16, !dbg !10055
  store i16 %conv38, i16* %data, align 2, !dbg !10055
  %22 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8, !dbg !10056
  %speed = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %22, i32 0, i32 4, !dbg !10057
  %23 = load i16, i16* %speed, align 2, !dbg !10057
  %conv39 = zext i16 %23 to i32, !dbg !10056
  %shl = shl i32 %conv39, 4, !dbg !10058
  %neg = xor i32 %shl, -1, !dbg !10059
  %and40 = and i32 %neg, 48, !dbg !10060
  %24 = load i16, i16* %data, align 2, !dbg !10061
  %conv41 = zext i16 %24 to i32, !dbg !10061
  %or42 = or i32 %conv41, %and40, !dbg !10061
  %conv43 = trunc i32 %or42 to i16, !dbg !10061
  store i16 %conv43, i16* %data, align 2, !dbg !10061
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10062
  %26 = load i16, i16* %data, align 2, !dbg !10063
  %call44 = call i32 @write16(%struct.drxk_state* %25, i32 8593190, i16 zeroext %26) #9, !dbg !10064
  store i32 %call44, i32* %status, align 4, !dbg !10065
  %27 = load i32, i32* %status, align 4, !dbg !10066
  %cmp45 = icmp slt i32 %27, 0, !dbg !10068
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !10069

if.then47:                                        ; preds = %if.end35
  br label %error, !dbg !10070

if.end48:                                         ; preds = %if.end35
  %28 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10071
  %call49 = call zeroext i1 @is_qam(%struct.drxk_state* %28) #9, !dbg !10073
  br i1 %call49, label %if.then50, label %if.else51, !dbg !10074

if.then50:                                        ; preds = %if.end48
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10075
  %m_qam_rf_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %29, i32 0, i32 74, !dbg !10076
  store %struct.s_cfg_agc* %m_qam_rf_agc_cfg, %struct.s_cfg_agc** %p_rf_agc_settings, align 8, !dbg !10077
  br label %if.end52, !dbg !10078

if.else51:                                        ; preds = %if.end48
  %30 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10079
  %m_atv_rf_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %30, i32 0, i32 62, !dbg !10080
  store %struct.s_cfg_agc* %m_atv_rf_agc_cfg, %struct.s_cfg_agc** %p_rf_agc_settings, align 8, !dbg !10081
  br label %if.end52

if.end52:                                         ; preds = %if.else51, %if.then50
  %31 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_rf_agc_settings, align 8, !dbg !10082
  %cmp53 = icmp eq %struct.s_cfg_agc* %31, null, !dbg !10084
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !10085

if.then55:                                        ; preds = %if.end52
  store i32 -1, i32* %retval, align 4, !dbg !10086
  br label %return, !dbg !10086

if.end56:                                         ; preds = %if.end52
  %32 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10087
  %33 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_rf_agc_settings, align 8, !dbg !10088
  %top = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %33, i32 0, i32 5, !dbg !10089
  %34 = load i16, i16* %top, align 4, !dbg !10089
  %call57 = call i32 @write16(%struct.drxk_state* %32, i32 8593220, i16 zeroext %34) #9, !dbg !10090
  store i32 %call57, i32* %status, align 4, !dbg !10091
  %35 = load i32, i32* %status, align 4, !dbg !10092
  %cmp58 = icmp slt i32 %35, 0, !dbg !10094
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !10095

if.then60:                                        ; preds = %if.end56
  br label %error, !dbg !10096

if.end61:                                         ; preds = %if.end56
  br label %sw.epilog, !dbg !10097

sw.bb62:                                          ; preds = %do.end
  %36 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10098
  %call63 = call i32 @read16(%struct.drxk_state* %36, i32 25624620, i16* %data) #9, !dbg !10099
  store i32 %call63, i32* %status, align 4, !dbg !10100
  %37 = load i32, i32* %status, align 4, !dbg !10101
  %cmp64 = icmp slt i32 %37, 0, !dbg !10103
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !10104

if.then66:                                        ; preds = %sw.bb62
  br label %error, !dbg !10105

if.end67:                                         ; preds = %sw.bb62
  %38 = load i16, i16* %data, align 2, !dbg !10106
  %conv68 = zext i16 %38 to i32, !dbg !10106
  %and69 = and i32 %conv68, -17, !dbg !10106
  %conv70 = trunc i32 %and69 to i16, !dbg !10106
  store i16 %conv70, i16* %data, align 2, !dbg !10106
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10107
  %40 = load i16, i16* %data, align 2, !dbg !10108
  %call71 = call i32 @write16(%struct.drxk_state* %39, i32 25624620, i16 zeroext %40) #9, !dbg !10109
  store i32 %call71, i32* %status, align 4, !dbg !10110
  %41 = load i32, i32* %status, align 4, !dbg !10111
  %cmp72 = icmp slt i32 %41, 0, !dbg !10113
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !10114

if.then74:                                        ; preds = %if.end67
  br label %error, !dbg !10115

if.end75:                                         ; preds = %if.end67
  %42 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10116
  %call76 = call i32 @read16(%struct.drxk_state* %42, i32 8593188, i16* %data) #9, !dbg !10117
  store i32 %call76, i32* %status, align 4, !dbg !10118
  %43 = load i32, i32* %status, align 4, !dbg !10119
  %cmp77 = icmp slt i32 %43, 0, !dbg !10121
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !10122

if.then79:                                        ; preds = %if.end75
  br label %error, !dbg !10123

if.end80:                                         ; preds = %if.end75
  %44 = load i16, i16* %data, align 2, !dbg !10124
  %conv81 = zext i16 %44 to i32, !dbg !10124
  %or82 = or i32 %conv81, 2, !dbg !10124
  %conv83 = trunc i32 %or82 to i16, !dbg !10124
  store i16 %conv83, i16* %data, align 2, !dbg !10124
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10125
  %m_if_agc_pol84 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %45, i32 0, i32 61, !dbg !10127
  %46 = load i8, i8* %m_if_agc_pol84, align 2, !dbg !10127
  %tobool85 = trunc i8 %46 to i1, !dbg !10127
  br i1 %tobool85, label %if.then86, label %if.else90, !dbg !10128

if.then86:                                        ; preds = %if.end80
  %47 = load i16, i16* %data, align 2, !dbg !10129
  %conv87 = zext i16 %47 to i32, !dbg !10129
  %or88 = or i32 %conv87, 256, !dbg !10129
  %conv89 = trunc i32 %or88 to i16, !dbg !10129
  store i16 %conv89, i16* %data, align 2, !dbg !10129
  br label %if.end94, !dbg !10130

if.else90:                                        ; preds = %if.end80
  %48 = load i16, i16* %data, align 2, !dbg !10131
  %conv91 = zext i16 %48 to i32, !dbg !10131
  %and92 = and i32 %conv91, -257, !dbg !10131
  %conv93 = trunc i32 %and92 to i16, !dbg !10131
  store i16 %conv93, i16* %data, align 2, !dbg !10131
  br label %if.end94

if.end94:                                         ; preds = %if.else90, %if.then86
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10132
  %50 = load i16, i16* %data, align 2, !dbg !10133
  %call95 = call i32 @write16(%struct.drxk_state* %49, i32 8593188, i16 zeroext %50) #9, !dbg !10134
  store i32 %call95, i32* %status, align 4, !dbg !10135
  %51 = load i32, i32* %status, align 4, !dbg !10136
  %cmp96 = icmp slt i32 %51, 0, !dbg !10138
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !10139

if.then98:                                        ; preds = %if.end94
  br label %error, !dbg !10140

if.end99:                                         ; preds = %if.end94
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10141
  %53 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8, !dbg !10142
  %output_level = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %53, i32 0, i32 1, !dbg !10143
  %54 = load i16, i16* %output_level, align 4, !dbg !10143
  %call100 = call i32 @write16(%struct.drxk_state* %52, i32 8593220, i16 zeroext %54) #9, !dbg !10144
  store i32 %call100, i32* %status, align 4, !dbg !10145
  %55 = load i32, i32* %status, align 4, !dbg !10146
  %cmp101 = icmp slt i32 %55, 0, !dbg !10148
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !10149

if.then103:                                       ; preds = %if.end99
  br label %error, !dbg !10150

if.end104:                                        ; preds = %if.end99
  br label %sw.epilog, !dbg !10151

sw.bb105:                                         ; preds = %do.end
  %56 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10152
  %call106 = call i32 @read16(%struct.drxk_state* %56, i32 25624620, i16* %data) #9, !dbg !10153
  store i32 %call106, i32* %status, align 4, !dbg !10154
  %57 = load i32, i32* %status, align 4, !dbg !10155
  %cmp107 = icmp slt i32 %57, 0, !dbg !10157
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !10158

if.then109:                                       ; preds = %sw.bb105
  br label %error, !dbg !10159

if.end110:                                        ; preds = %sw.bb105
  %58 = load i16, i16* %data, align 2, !dbg !10160
  %conv111 = zext i16 %58 to i32, !dbg !10160
  %or112 = or i32 %conv111, 16, !dbg !10160
  %conv113 = trunc i32 %or112 to i16, !dbg !10160
  store i16 %conv113, i16* %data, align 2, !dbg !10160
  %59 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10161
  %60 = load i16, i16* %data, align 2, !dbg !10162
  %call114 = call i32 @write16(%struct.drxk_state* %59, i32 25624620, i16 zeroext %60) #9, !dbg !10163
  store i32 %call114, i32* %status, align 4, !dbg !10164
  %61 = load i32, i32* %status, align 4, !dbg !10165
  %cmp115 = icmp slt i32 %61, 0, !dbg !10167
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !10168

if.then117:                                       ; preds = %if.end110
  br label %error, !dbg !10169

if.end118:                                        ; preds = %if.end110
  %62 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10170
  %call119 = call i32 @read16(%struct.drxk_state* %62, i32 8593188, i16* %data) #9, !dbg !10171
  store i32 %call119, i32* %status, align 4, !dbg !10172
  %63 = load i32, i32* %status, align 4, !dbg !10173
  %cmp120 = icmp slt i32 %63, 0, !dbg !10175
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !10176

if.then122:                                       ; preds = %if.end118
  br label %error, !dbg !10177

if.end123:                                        ; preds = %if.end118
  %64 = load i16, i16* %data, align 2, !dbg !10178
  %conv124 = zext i16 %64 to i32, !dbg !10178
  %or125 = or i32 %conv124, 2, !dbg !10178
  %conv126 = trunc i32 %or125 to i16, !dbg !10178
  store i16 %conv126, i16* %data, align 2, !dbg !10178
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10179
  %66 = load i16, i16* %data, align 2, !dbg !10180
  %call127 = call i32 @write16(%struct.drxk_state* %65, i32 8593188, i16 zeroext %66) #9, !dbg !10181
  store i32 %call127, i32* %status, align 4, !dbg !10182
  %67 = load i32, i32* %status, align 4, !dbg !10183
  %cmp128 = icmp slt i32 %67, 0, !dbg !10185
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !10186

if.then130:                                       ; preds = %if.end123
  br label %error, !dbg !10187

if.end131:                                        ; preds = %if.end123
  br label %sw.epilog, !dbg !10188

sw.epilog:                                        ; preds = %do.end, %if.end131, %if.end104, %if.end61
  %68 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10189
  %69 = load %struct.s_cfg_agc*, %struct.s_cfg_agc** %p_agc_cfg.addr, align 8, !dbg !10190
  %top132 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %69, i32 0, i32 5, !dbg !10191
  %70 = load i16, i16* %top132, align 4, !dbg !10191
  %call133 = call i32 @write16(%struct.drxk_state* %68, i32 8593214, i16 zeroext %70) #9, !dbg !10192
  store i32 %call133, i32* %status, align 4, !dbg !10193
  br label %error, !dbg !10194

error:                                            ; preds = %sw.epilog, %if.then130, %if.then122, %if.then117, %if.then109, %if.then103, %if.then98, %if.then79, %if.then74, %if.then66, %if.then60, %if.then47, %if.then34, %if.then29, %if.then14, %if.then9, %if.then3
  call void @llvm.dbg.label(metadata !10195), !dbg !10196
  %71 = load i32, i32* %status, align 4, !dbg !10197
  %cmp134 = icmp slt i32 %71, 0, !dbg !10199
  br i1 %cmp134, label %if.then136, label %if.end138, !dbg !10200

if.then136:                                       ; preds = %error
  %72 = load i32, i32* %status, align 4, !dbg !10201
  %call137 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %72, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.set_agc_if, i64 0, i64 0)) #8, !dbg !10201
  br label %if.end138, !dbg !10201

if.end138:                                        ; preds = %if.then136, %error
  %73 = load i32, i32* %status, align 4, !dbg !10202
  store i32 %73, i32* %retval, align 4, !dbg !10203
  br label %return, !dbg !10203

return:                                           ; preds = %if.end138, %if.then55
  %74 = load i32, i32* %retval, align 4, !dbg !10204
  ret i32 %74, !dbg !10204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mpegts_dto_setup(%struct.drxk_state* %state, i32 %o_mode) #0 !dbg !10205 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %o_mode.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %fec_oc_reg_mode = alloca i16, align 2
  %fec_oc_reg_ipr_mode = alloca i16, align 2
  %fec_oc_dto_mode = alloca i16, align 2
  %fec_oc_fct_mode = alloca i16, align 2
  %fec_oc_dto_period = alloca i16, align 2
  %fec_oc_dto_burst_len = alloca i16, align 2
  %fec_oc_rcn_ctl_rate = alloca i32, align 4
  %fec_oc_tmd_mode = alloca i16, align 2
  %fec_oc_tmd_int_upd_rate = alloca i16, align 2
  %max_bit_rate = alloca i32, align 4
  %static_clk = alloca i8, align 1
  %bit_rate = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !10206, metadata !DIExpression()), !dbg !10207
  store i32 %o_mode, i32* %o_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %o_mode.addr, metadata !10208, metadata !DIExpression()), !dbg !10209
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10210, metadata !DIExpression()), !dbg !10211
  call void @llvm.dbg.declare(metadata i16* %fec_oc_reg_mode, metadata !10212, metadata !DIExpression()), !dbg !10213
  store i16 0, i16* %fec_oc_reg_mode, align 2, !dbg !10213
  call void @llvm.dbg.declare(metadata i16* %fec_oc_reg_ipr_mode, metadata !10214, metadata !DIExpression()), !dbg !10215
  store i16 0, i16* %fec_oc_reg_ipr_mode, align 2, !dbg !10215
  call void @llvm.dbg.declare(metadata i16* %fec_oc_dto_mode, metadata !10216, metadata !DIExpression()), !dbg !10217
  store i16 0, i16* %fec_oc_dto_mode, align 2, !dbg !10217
  call void @llvm.dbg.declare(metadata i16* %fec_oc_fct_mode, metadata !10218, metadata !DIExpression()), !dbg !10219
  store i16 0, i16* %fec_oc_fct_mode, align 2, !dbg !10219
  call void @llvm.dbg.declare(metadata i16* %fec_oc_dto_period, metadata !10220, metadata !DIExpression()), !dbg !10221
  store i16 2, i16* %fec_oc_dto_period, align 2, !dbg !10221
  call void @llvm.dbg.declare(metadata i16* %fec_oc_dto_burst_len, metadata !10222, metadata !DIExpression()), !dbg !10223
  store i16 188, i16* %fec_oc_dto_burst_len, align 2, !dbg !10223
  call void @llvm.dbg.declare(metadata i32* %fec_oc_rcn_ctl_rate, metadata !10224, metadata !DIExpression()), !dbg !10225
  store i32 0, i32* %fec_oc_rcn_ctl_rate, align 4, !dbg !10225
  call void @llvm.dbg.declare(metadata i16* %fec_oc_tmd_mode, metadata !10226, metadata !DIExpression()), !dbg !10227
  store i16 0, i16* %fec_oc_tmd_mode, align 2, !dbg !10227
  call void @llvm.dbg.declare(metadata i16* %fec_oc_tmd_int_upd_rate, metadata !10228, metadata !DIExpression()), !dbg !10229
  store i16 0, i16* %fec_oc_tmd_int_upd_rate, align 2, !dbg !10229
  call void @llvm.dbg.declare(metadata i32* %max_bit_rate, metadata !10230, metadata !DIExpression()), !dbg !10231
  store i32 0, i32* %max_bit_rate, align 4, !dbg !10231
  call void @llvm.dbg.declare(metadata i8* %static_clk, metadata !10232, metadata !DIExpression()), !dbg !10233
  store i8 0, i8* %static_clk, align 1, !dbg !10233
  br label %do.body, !dbg !10234

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !10235
  %cmp = icmp uge i32 %0, 1, !dbg !10235
  br i1 %cmp, label %if.then, label %if.end, !dbg !10238

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.mpegts_dto_setup, i64 0, i64 0)) #8, !dbg !10235
  br label %if.end, !dbg !10235

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !10238

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10239
  %call1 = call i32 @read16(%struct.drxk_state* %1, i32 29622289, i16* %fec_oc_reg_mode) #9, !dbg !10240
  store i32 %call1, i32* %status, align 4, !dbg !10241
  %2 = load i32, i32* %status, align 4, !dbg !10242
  %cmp2 = icmp slt i32 %2, 0, !dbg !10244
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10245

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !10246

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10247
  %call5 = call i32 @read16(%struct.drxk_state* %3, i32 29622344, i16* %fec_oc_reg_ipr_mode) #9, !dbg !10248
  store i32 %call5, i32* %status, align 4, !dbg !10249
  %4 = load i32, i32* %status, align 4, !dbg !10250
  %cmp6 = icmp slt i32 %4, 0, !dbg !10252
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10253

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !10254

if.end8:                                          ; preds = %if.end4
  %5 = load i16, i16* %fec_oc_reg_mode, align 2, !dbg !10255
  %conv = zext i16 %5 to i32, !dbg !10255
  %and = and i32 %conv, -2, !dbg !10255
  %conv9 = trunc i32 %and to i16, !dbg !10255
  store i16 %conv9, i16* %fec_oc_reg_mode, align 2, !dbg !10255
  %6 = load i16, i16* %fec_oc_reg_ipr_mode, align 2, !dbg !10256
  %conv10 = zext i16 %6 to i32, !dbg !10256
  %and11 = and i32 %conv10, -17, !dbg !10256
  %conv12 = trunc i32 %and11 to i16, !dbg !10256
  store i16 %conv12, i16* %fec_oc_reg_ipr_mode, align 2, !dbg !10256
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10257
  %m_insert_rs_byte = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 41, !dbg !10259
  %8 = load i8, i8* %m_insert_rs_byte, align 1, !dbg !10259
  %tobool = trunc i8 %8 to i1, !dbg !10259
  br i1 %tobool, label %if.then13, label %if.end19, !dbg !10260

if.then13:                                        ; preds = %if.end8
  %9 = load i16, i16* %fec_oc_reg_mode, align 2, !dbg !10261
  %conv14 = zext i16 %9 to i32, !dbg !10261
  %or = or i32 %conv14, 1, !dbg !10261
  %conv15 = trunc i32 %or to i16, !dbg !10261
  store i16 %conv15, i16* %fec_oc_reg_mode, align 2, !dbg !10261
  %10 = load i16, i16* %fec_oc_reg_ipr_mode, align 2, !dbg !10263
  %conv16 = zext i16 %10 to i32, !dbg !10263
  %or17 = or i32 %conv16, 16, !dbg !10263
  %conv18 = trunc i32 %or17 to i16, !dbg !10263
  store i16 %conv18, i16* %fec_oc_reg_ipr_mode, align 2, !dbg !10263
  store i16 204, i16* %fec_oc_dto_burst_len, align 2, !dbg !10264
  br label %if.end19, !dbg !10265

if.end19:                                         ; preds = %if.then13, %if.end8
  %11 = load i16, i16* %fec_oc_reg_ipr_mode, align 2, !dbg !10266
  %conv20 = zext i16 %11 to i32, !dbg !10266
  %and21 = and i32 %conv20, -2, !dbg !10266
  %conv22 = trunc i32 %and21 to i16, !dbg !10266
  store i16 %conv22, i16* %fec_oc_reg_ipr_mode, align 2, !dbg !10266
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10267
  %m_enable_parallel = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 42, !dbg !10269
  %13 = load i8, i8* %m_enable_parallel, align 2, !dbg !10269
  %tobool23 = trunc i8 %13 to i1, !dbg !10269
  br i1 %tobool23, label %if.end28, label %if.then24, !dbg !10270

if.then24:                                        ; preds = %if.end19
  %14 = load i16, i16* %fec_oc_reg_ipr_mode, align 2, !dbg !10271
  %conv25 = zext i16 %14 to i32, !dbg !10271
  %or26 = or i32 %conv25, 1, !dbg !10271
  %conv27 = trunc i32 %or26 to i16, !dbg !10271
  store i16 %conv27, i16* %fec_oc_reg_ipr_mode, align 2, !dbg !10271
  br label %if.end28, !dbg !10273

if.end28:                                         ; preds = %if.then24, %if.end19
  %15 = load i32, i32* %o_mode.addr, align 4, !dbg !10274
  switch i32 %15, label %sw.default [
    i32 4, label %sw.bb
    i32 1, label %sw.bb30
    i32 3, label %sw.bb30
  ], !dbg !10275

sw.bb:                                            ; preds = %if.end28
  %16 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10276
  %m_dvbt_bitrate = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %16, i32 0, i32 50, !dbg !10278
  %17 = load i32, i32* %m_dvbt_bitrate, align 8, !dbg !10278
  store i32 %17, i32* %max_bit_rate, align 4, !dbg !10279
  store i16 3, i16* %fec_oc_tmd_mode, align 2, !dbg !10280
  store i32 12582912, i32* %fec_oc_rcn_ctl_rate, align 4, !dbg !10281
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10282
  %m_dvbt_static_clk = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %18, i32 0, i32 49, !dbg !10283
  %19 = load i8, i8* %m_dvbt_static_clk, align 1, !dbg !10283
  %tobool29 = trunc i8 %19 to i1, !dbg !10283
  %frombool = zext i1 %tobool29 to i8, !dbg !10284
  store i8 %frombool, i8* %static_clk, align 1, !dbg !10284
  br label %sw.epilog, !dbg !10285

sw.bb30:                                          ; preds = %if.end28, %if.end28
  store i16 4, i16* %fec_oc_tmd_mode, align 2, !dbg !10286
  store i32 13808878, i32* %fec_oc_rcn_ctl_rate, align 4, !dbg !10287
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10288
  %m_dvbc_bitrate = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %20, i32 0, i32 51, !dbg !10289
  %21 = load i32, i32* %m_dvbc_bitrate, align 4, !dbg !10289
  store i32 %21, i32* %max_bit_rate, align 4, !dbg !10290
  %22 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10291
  %m_dvbc_static_clk = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %22, i32 0, i32 48, !dbg !10292
  %23 = load i8, i8* %m_dvbc_static_clk, align 4, !dbg !10292
  %tobool31 = trunc i8 %23 to i1, !dbg !10292
  %frombool32 = zext i1 %tobool31 to i8, !dbg !10293
  store i8 %frombool32, i8* %static_clk, align 1, !dbg !10293
  br label %sw.epilog, !dbg !10294

sw.default:                                       ; preds = %if.end28
  store i32 -22, i32* %status, align 4, !dbg !10295
  br label %sw.epilog, !dbg !10296

sw.epilog:                                        ; preds = %sw.default, %sw.bb30, %sw.bb
  %24 = load i32, i32* %status, align 4, !dbg !10297
  %cmp33 = icmp slt i32 %24, 0, !dbg !10299
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !10300

if.then35:                                        ; preds = %sw.epilog
  br label %error, !dbg !10301

if.end36:                                         ; preds = %sw.epilog
  %25 = load i8, i8* %static_clk, align 1, !dbg !10302
  %tobool37 = trunc i8 %25 to i1, !dbg !10302
  br i1 %tobool37, label %if.then38, label %if.else52, !dbg !10304

if.then38:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i32* %bit_rate, metadata !10305, metadata !DIExpression()), !dbg !10307
  store i32 0, i32* %bit_rate, align 4, !dbg !10307
  store i16 5, i16* %fec_oc_dto_mode, align 2, !dbg !10308
  store i16 3, i16* %fec_oc_fct_mode, align 2, !dbg !10309
  %26 = load i32, i32* %max_bit_rate, align 4, !dbg !10310
  store i32 %26, i32* %bit_rate, align 4, !dbg !10311
  %27 = load i32, i32* %bit_rate, align 4, !dbg !10312
  %conv39 = zext i32 %27 to i64, !dbg !10312
  %cmp40 = icmp ugt i64 %conv39, 75900000, !dbg !10314
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !10315

if.then42:                                        ; preds = %if.then38
  store i32 75900000, i32* %bit_rate, align 4, !dbg !10316
  br label %if.end43, !dbg !10318

if.end43:                                         ; preds = %if.then42, %if.then38
  %28 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10319
  %m_sys_clock_freq = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %28, i32 0, i32 26, !dbg !10320
  %29 = load i32, i32* %m_sys_clock_freq, align 8, !dbg !10320
  %mul = mul i32 %29, 1000, !dbg !10321
  %30 = load i32, i32* %bit_rate, align 4, !dbg !10322
  %div = udiv i32 %mul, %30, !dbg !10323
  %conv44 = trunc i32 %div to i16, !dbg !10324
  store i16 %conv44, i16* %fec_oc_dto_period, align 2, !dbg !10325
  %31 = load i16, i16* %fec_oc_dto_period, align 2, !dbg !10326
  %conv45 = zext i16 %31 to i32, !dbg !10326
  %cmp46 = icmp sle i32 %conv45, 2, !dbg !10328
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !10329

if.then48:                                        ; preds = %if.end43
  store i16 0, i16* %fec_oc_dto_period, align 2, !dbg !10330
  br label %if.end51, !dbg !10331

if.else:                                          ; preds = %if.end43
  %32 = load i16, i16* %fec_oc_dto_period, align 2, !dbg !10332
  %conv49 = zext i16 %32 to i32, !dbg !10332
  %sub = sub i32 %conv49, 2, !dbg !10332
  %conv50 = trunc i32 %sub to i16, !dbg !10332
  store i16 %conv50, i16* %fec_oc_dto_period, align 2, !dbg !10332
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then48
  store i16 8, i16* %fec_oc_tmd_int_upd_rate, align 2, !dbg !10333
  br label %if.end53, !dbg !10334

if.else52:                                        ; preds = %if.end36
  store i16 1, i16* %fec_oc_dto_mode, align 2, !dbg !10335
  store i16 0, i16* %fec_oc_fct_mode, align 2, !dbg !10337
  store i16 5, i16* %fec_oc_tmd_int_upd_rate, align 2, !dbg !10338
  br label %if.end53

if.end53:                                         ; preds = %if.else52, %if.end51
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10339
  %34 = load i16, i16* %fec_oc_dto_burst_len, align 2, !dbg !10340
  %call54 = call i32 @write16(%struct.drxk_state* %33, i32 29622296, i16 zeroext %34) #9, !dbg !10341
  store i32 %call54, i32* %status, align 4, !dbg !10342
  %35 = load i32, i32* %status, align 4, !dbg !10343
  %cmp55 = icmp slt i32 %35, 0, !dbg !10345
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !10346

if.then57:                                        ; preds = %if.end53
  br label %error, !dbg !10347

if.end58:                                         ; preds = %if.end53
  %36 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10348
  %37 = load i16, i16* %fec_oc_dto_period, align 2, !dbg !10349
  %call59 = call i32 @write16(%struct.drxk_state* %36, i32 29622293, i16 zeroext %37) #9, !dbg !10350
  store i32 %call59, i32* %status, align 4, !dbg !10351
  %38 = load i32, i32* %status, align 4, !dbg !10352
  %cmp60 = icmp slt i32 %38, 0, !dbg !10354
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !10355

if.then62:                                        ; preds = %if.end58
  br label %error, !dbg !10356

if.end63:                                         ; preds = %if.end58
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10357
  %40 = load i16, i16* %fec_oc_dto_mode, align 2, !dbg !10358
  %call64 = call i32 @write16(%struct.drxk_state* %39, i32 29622292, i16 zeroext %40) #9, !dbg !10359
  store i32 %call64, i32* %status, align 4, !dbg !10360
  %41 = load i32, i32* %status, align 4, !dbg !10361
  %cmp65 = icmp slt i32 %41, 0, !dbg !10363
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !10364

if.then67:                                        ; preds = %if.end63
  br label %error, !dbg !10365

if.end68:                                         ; preds = %if.end63
  %42 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10366
  %43 = load i16, i16* %fec_oc_fct_mode, align 2, !dbg !10367
  %call69 = call i32 @write16(%struct.drxk_state* %42, i32 29622298, i16 zeroext %43) #9, !dbg !10368
  store i32 %call69, i32* %status, align 4, !dbg !10369
  %44 = load i32, i32* %status, align 4, !dbg !10370
  %cmp70 = icmp slt i32 %44, 0, !dbg !10372
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !10373

if.then72:                                        ; preds = %if.end68
  br label %error, !dbg !10374

if.end73:                                         ; preds = %if.end68
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10375
  %46 = load i16, i16* %fec_oc_reg_mode, align 2, !dbg !10376
  %call74 = call i32 @write16(%struct.drxk_state* %45, i32 29622289, i16 zeroext %46) #9, !dbg !10377
  store i32 %call74, i32* %status, align 4, !dbg !10378
  %47 = load i32, i32* %status, align 4, !dbg !10379
  %cmp75 = icmp slt i32 %47, 0, !dbg !10381
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !10382

if.then77:                                        ; preds = %if.end73
  br label %error, !dbg !10383

if.end78:                                         ; preds = %if.end73
  %48 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10384
  %49 = load i16, i16* %fec_oc_reg_ipr_mode, align 2, !dbg !10385
  %call79 = call i32 @write16(%struct.drxk_state* %48, i32 29622344, i16 zeroext %49) #9, !dbg !10386
  store i32 %call79, i32* %status, align 4, !dbg !10387
  %50 = load i32, i32* %status, align 4, !dbg !10388
  %cmp80 = icmp slt i32 %50, 0, !dbg !10390
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !10391

if.then82:                                        ; preds = %if.end78
  br label %error, !dbg !10392

if.end83:                                         ; preds = %if.end78
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10393
  %52 = load i32, i32* %fec_oc_rcn_ctl_rate, align 4, !dbg !10394
  %call84 = call i32 @write32(%struct.drxk_state* %51, i32 29622320, i32 %52) #9, !dbg !10395
  store i32 %call84, i32* %status, align 4, !dbg !10396
  %53 = load i32, i32* %status, align 4, !dbg !10397
  %cmp85 = icmp slt i32 %53, 0, !dbg !10399
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !10400

if.then87:                                        ; preds = %if.end83
  br label %error, !dbg !10401

if.end88:                                         ; preds = %if.end83
  %54 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10402
  %55 = load i16, i16* %fec_oc_tmd_int_upd_rate, align 2, !dbg !10403
  %call89 = call i32 @write16(%struct.drxk_state* %54, i32 29622307, i16 zeroext %55) #9, !dbg !10404
  store i32 %call89, i32* %status, align 4, !dbg !10405
  %56 = load i32, i32* %status, align 4, !dbg !10406
  %cmp90 = icmp slt i32 %56, 0, !dbg !10408
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !10409

if.then92:                                        ; preds = %if.end88
  br label %error, !dbg !10410

if.end93:                                         ; preds = %if.end88
  %57 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10411
  %58 = load i16, i16* %fec_oc_tmd_mode, align 2, !dbg !10412
  %call94 = call i32 @write16(%struct.drxk_state* %57, i32 29622302, i16 zeroext %58) #9, !dbg !10413
  store i32 %call94, i32* %status, align 4, !dbg !10414
  br label %error, !dbg !10415

error:                                            ; preds = %if.end93, %if.then92, %if.then87, %if.then82, %if.then77, %if.then72, %if.then67, %if.then62, %if.then57, %if.then35, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !10416), !dbg !10417
  %59 = load i32, i32* %status, align 4, !dbg !10418
  %cmp95 = icmp slt i32 %59, 0, !dbg !10420
  br i1 %cmp95, label %if.then97, label %if.end99, !dbg !10421

if.then97:                                        ; preds = %error
  %60 = load i32, i32* %status, align 4, !dbg !10422
  %call98 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %60, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.mpegts_dto_setup, i64 0, i64 0)) #8, !dbg !10422
  br label %if.end99, !dbg !10422

if.end99:                                         ; preds = %if.then97, %error
  %61 = load i32, i32* %status, align 4, !dbg !10423
  ret i32 %61, !dbg !10424
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dvbt_activate_presets(%struct.drxk_state* %state) #0 !dbg !10425 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  %setincenable = alloca i8, align 1
  %setfrenable = alloca i8, align 1
  %echo_thres2k = alloca %struct.drxk_cfg_dvbt_echo_thres_t, align 4
  %echo_thres8k = alloca %struct.drxk_cfg_dvbt_echo_thres_t, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !10426, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10428, metadata !DIExpression()), !dbg !10429
  call void @llvm.dbg.declare(metadata i8* %setincenable, metadata !10430, metadata !DIExpression()), !dbg !10431
  store i8 0, i8* %setincenable, align 1, !dbg !10431
  call void @llvm.dbg.declare(metadata i8* %setfrenable, metadata !10432, metadata !DIExpression()), !dbg !10433
  store i8 1, i8* %setfrenable, align 1, !dbg !10433
  call void @llvm.dbg.declare(metadata %struct.drxk_cfg_dvbt_echo_thres_t* %echo_thres2k, metadata !10434, metadata !DIExpression()), !dbg !10439
  %0 = bitcast %struct.drxk_cfg_dvbt_echo_thres_t* %echo_thres2k to i8*, !dbg !10439
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 8, i1 false), !dbg !10439
  call void @llvm.dbg.declare(metadata %struct.drxk_cfg_dvbt_echo_thres_t* %echo_thres8k, metadata !10440, metadata !DIExpression()), !dbg !10441
  %1 = bitcast %struct.drxk_cfg_dvbt_echo_thres_t* %echo_thres8k to i8*, !dbg !10441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.drxk_cfg_dvbt_echo_thres_t* @__const.dvbt_activate_presets.echo_thres8k to i8*), i64 8, i1 false), !dbg !10441
  br label %do.body, !dbg !10442

do.body:                                          ; preds = %entry
  %2 = load i32, i32* @debug, align 4, !dbg !10443
  %cmp = icmp uge i32 %2, 1, !dbg !10443
  br i1 %cmp, label %if.then, label %if.end, !dbg !10446

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.dvbt_activate_presets, i64 0, i64 0)) #8, !dbg !10443
  br label %if.end, !dbg !10443

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !10446

do.end:                                           ; preds = %if.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10447
  %call1 = call i32 @dvbt_ctrl_set_inc_enable(%struct.drxk_state* %3, i8* %setincenable) #9, !dbg !10448
  store i32 %call1, i32* %status, align 4, !dbg !10449
  %4 = load i32, i32* %status, align 4, !dbg !10450
  %cmp2 = icmp slt i32 %4, 0, !dbg !10452
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10453

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !10454

if.end4:                                          ; preds = %do.end
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10455
  %call5 = call i32 @dvbt_ctrl_set_fr_enable(%struct.drxk_state* %5, i8* %setfrenable) #9, !dbg !10456
  store i32 %call5, i32* %status, align 4, !dbg !10457
  %6 = load i32, i32* %status, align 4, !dbg !10458
  %cmp6 = icmp slt i32 %6, 0, !dbg !10460
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10461

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !10462

if.end8:                                          ; preds = %if.end4
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10463
  %call9 = call i32 @dvbt_ctrl_set_echo_threshold(%struct.drxk_state* %7, %struct.drxk_cfg_dvbt_echo_thres_t* %echo_thres2k) #9, !dbg !10464
  store i32 %call9, i32* %status, align 4, !dbg !10465
  %8 = load i32, i32* %status, align 4, !dbg !10466
  %cmp10 = icmp slt i32 %8, 0, !dbg !10468
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10469

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !10470

if.end12:                                         ; preds = %if.end8
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10471
  %call13 = call i32 @dvbt_ctrl_set_echo_threshold(%struct.drxk_state* %9, %struct.drxk_cfg_dvbt_echo_thres_t* %echo_thres8k) #9, !dbg !10472
  store i32 %call13, i32* %status, align 4, !dbg !10473
  %10 = load i32, i32* %status, align 4, !dbg !10474
  %cmp14 = icmp slt i32 %10, 0, !dbg !10476
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !10477

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !10478

if.end16:                                         ; preds = %if.end12
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10479
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10480
  %m_dvbt_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 85, !dbg !10481
  %ingain_tgt_max = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_dvbt_if_agc_cfg, i32 0, i32 7, !dbg !10482
  %13 = load i16, i16* %ingain_tgt_max, align 8, !dbg !10482
  %call17 = call i32 @write16(%struct.drxk_state* %11, i32 8593215, i16 zeroext %13) #9, !dbg !10483
  store i32 %call17, i32* %status, align 4, !dbg !10484
  br label %error, !dbg !10485

error:                                            ; preds = %if.end16, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !10486), !dbg !10487
  %14 = load i32, i32* %status, align 4, !dbg !10488
  %cmp18 = icmp slt i32 %14, 0, !dbg !10490
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !10491

if.then19:                                        ; preds = %error
  %15 = load i32, i32* %status, align 4, !dbg !10492
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %15, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.dvbt_activate_presets, i64 0, i64 0)) #8, !dbg !10492
  br label %if.end21, !dbg !10492

if.end21:                                         ; preds = %if.then19, %error
  %16 = load i32, i32* %status, align 4, !dbg !10493
  ret i32 %16, !dbg !10494
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @write_gpio(%struct.drxk_state* %state) #0 !dbg !10495 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  %value = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !10496, metadata !DIExpression()), !dbg !10497
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10498, metadata !DIExpression()), !dbg !10499
  call void @llvm.dbg.declare(metadata i16* %value, metadata !10500, metadata !DIExpression()), !dbg !10501
  store i16 0, i16* %value, align 2, !dbg !10501
  br label %do.body, !dbg !10502

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !10503
  %cmp = icmp uge i32 %0, 1, !dbg !10503
  br i1 %cmp, label %if.then, label %if.end, !dbg !10506

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.write_gpio, i64 0, i64 0)) #8, !dbg !10503
  br label %if.end, !dbg !10503

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !10506

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10507
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 8593095, i16 zeroext 0) #9, !dbg !10508
  store i32 %call1, i32* %status, align 4, !dbg !10509
  %2 = load i32, i32* %status, align 4, !dbg !10510
  %cmp2 = icmp slt i32 %2, 0, !dbg !10512
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10513

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !10514

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10515
  %call5 = call i32 @write16(%struct.drxk_state* %3, i32 4259855, i16 zeroext -1350) #9, !dbg !10516
  store i32 %call5, i32* %status, align 4, !dbg !10517
  %4 = load i32, i32* %status, align 4, !dbg !10518
  %cmp6 = icmp slt i32 %4, 0, !dbg !10520
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10521

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !10522

if.end8:                                          ; preds = %if.end4
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10523
  %m_has_sawsw = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %5, i32 0, i32 16, !dbg !10525
  %6 = load i8, i8* %m_has_sawsw, align 2, !dbg !10525
  %tobool = trunc i8 %6 to i1, !dbg !10525
  br i1 %tobool, label %if.then9, label %if.end111, !dbg !10526

if.then9:                                         ; preds = %if.end8
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10527
  %uio_mask = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 100, !dbg !10530
  %8 = load i16, i16* %uio_mask, align 2, !dbg !10530
  %conv = zext i16 %8 to i32, !dbg !10527
  %and = and i32 %conv, 1, !dbg !10531
  %tobool10 = icmp ne i32 %and, 0, !dbg !10531
  br i1 %tobool10, label %if.then11, label %if.end38, !dbg !10532

if.then11:                                        ; preds = %if.then9
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10533
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10535
  %m_gpio_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %10, i32 0, i32 83, !dbg !10536
  %11 = load i16, i16* %m_gpio_cfg, align 2, !dbg !10536
  %call12 = call i32 @write16(%struct.drxk_state* %9, i32 8323128, i16 zeroext %11) #9, !dbg !10537
  store i32 %call12, i32* %status, align 4, !dbg !10538
  %12 = load i32, i32* %status, align 4, !dbg !10539
  %cmp13 = icmp slt i32 %12, 0, !dbg !10541
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !10542

if.then15:                                        ; preds = %if.then11
  br label %error, !dbg !10543

if.end16:                                         ; preds = %if.then11
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10544
  %call17 = call i32 @read16(%struct.drxk_state* %13, i32 8323094, i16* %value) #9, !dbg !10545
  store i32 %call17, i32* %status, align 4, !dbg !10546
  %14 = load i32, i32* %status, align 4, !dbg !10547
  %cmp18 = icmp slt i32 %14, 0, !dbg !10549
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !10550

if.then20:                                        ; preds = %if.end16
  br label %error, !dbg !10551

if.end21:                                         ; preds = %if.end16
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10552
  %m_gpio = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %15, i32 0, i32 82, !dbg !10554
  %16 = load i16, i16* %m_gpio, align 8, !dbg !10554
  %conv22 = zext i16 %16 to i32, !dbg !10552
  %and23 = and i32 %conv22, 1, !dbg !10555
  %cmp24 = icmp eq i32 %and23, 0, !dbg !10556
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !10557

if.then26:                                        ; preds = %if.end21
  %17 = load i16, i16* %value, align 2, !dbg !10558
  %conv27 = zext i16 %17 to i32, !dbg !10558
  %and28 = and i32 %conv27, 32767, !dbg !10558
  %conv29 = trunc i32 %and28 to i16, !dbg !10558
  store i16 %conv29, i16* %value, align 2, !dbg !10558
  br label %if.end32, !dbg !10559

if.else:                                          ; preds = %if.end21
  %18 = load i16, i16* %value, align 2, !dbg !10560
  %conv30 = zext i16 %18 to i32, !dbg !10560
  %or = or i32 %conv30, 32768, !dbg !10560
  %conv31 = trunc i32 %or to i16, !dbg !10560
  store i16 %conv31, i16* %value, align 2, !dbg !10560
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then26
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10561
  %20 = load i16, i16* %value, align 2, !dbg !10562
  %call33 = call i32 @write16(%struct.drxk_state* %19, i32 8323094, i16 zeroext %20) #9, !dbg !10563
  store i32 %call33, i32* %status, align 4, !dbg !10564
  %21 = load i32, i32* %status, align 4, !dbg !10565
  %cmp34 = icmp slt i32 %21, 0, !dbg !10567
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !10568

if.then36:                                        ; preds = %if.end32
  br label %error, !dbg !10569

if.end37:                                         ; preds = %if.end32
  br label %if.end38, !dbg !10570

if.end38:                                         ; preds = %if.end37, %if.then9
  %22 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10571
  %uio_mask39 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %22, i32 0, i32 100, !dbg !10573
  %23 = load i16, i16* %uio_mask39, align 2, !dbg !10573
  %conv40 = zext i16 %23 to i32, !dbg !10571
  %and41 = and i32 %conv40, 2, !dbg !10574
  %tobool42 = icmp ne i32 %and41, 0, !dbg !10574
  br i1 %tobool42, label %if.then43, label %if.end74, !dbg !10575

if.then43:                                        ; preds = %if.end38
  %24 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10576
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10578
  %m_gpio_cfg44 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %25, i32 0, i32 83, !dbg !10579
  %26 = load i16, i16* %m_gpio_cfg44, align 2, !dbg !10579
  %call45 = call i32 @write16(%struct.drxk_state* %24, i32 8323127, i16 zeroext %26) #9, !dbg !10580
  store i32 %call45, i32* %status, align 4, !dbg !10581
  %27 = load i32, i32* %status, align 4, !dbg !10582
  %cmp46 = icmp slt i32 %27, 0, !dbg !10584
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !10585

if.then48:                                        ; preds = %if.then43
  br label %error, !dbg !10586

if.end49:                                         ; preds = %if.then43
  %28 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10587
  %call50 = call i32 @read16(%struct.drxk_state* %28, i32 8323094, i16* %value) #9, !dbg !10588
  store i32 %call50, i32* %status, align 4, !dbg !10589
  %29 = load i32, i32* %status, align 4, !dbg !10590
  %cmp51 = icmp slt i32 %29, 0, !dbg !10592
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !10593

if.then53:                                        ; preds = %if.end49
  br label %error, !dbg !10594

if.end54:                                         ; preds = %if.end49
  %30 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10595
  %m_gpio55 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %30, i32 0, i32 82, !dbg !10597
  %31 = load i16, i16* %m_gpio55, align 8, !dbg !10597
  %conv56 = zext i16 %31 to i32, !dbg !10595
  %and57 = and i32 %conv56, 2, !dbg !10598
  %cmp58 = icmp eq i32 %and57, 0, !dbg !10599
  br i1 %cmp58, label %if.then60, label %if.else64, !dbg !10600

if.then60:                                        ; preds = %if.end54
  %32 = load i16, i16* %value, align 2, !dbg !10601
  %conv61 = zext i16 %32 to i32, !dbg !10601
  %and62 = and i32 %conv61, 49151, !dbg !10601
  %conv63 = trunc i32 %and62 to i16, !dbg !10601
  store i16 %conv63, i16* %value, align 2, !dbg !10601
  br label %if.end68, !dbg !10602

if.else64:                                        ; preds = %if.end54
  %33 = load i16, i16* %value, align 2, !dbg !10603
  %conv65 = zext i16 %33 to i32, !dbg !10603
  %or66 = or i32 %conv65, 16384, !dbg !10603
  %conv67 = trunc i32 %or66 to i16, !dbg !10603
  store i16 %conv67, i16* %value, align 2, !dbg !10603
  br label %if.end68

if.end68:                                         ; preds = %if.else64, %if.then60
  %34 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10604
  %35 = load i16, i16* %value, align 2, !dbg !10605
  %call69 = call i32 @write16(%struct.drxk_state* %34, i32 8323094, i16 zeroext %35) #9, !dbg !10606
  store i32 %call69, i32* %status, align 4, !dbg !10607
  %36 = load i32, i32* %status, align 4, !dbg !10608
  %cmp70 = icmp slt i32 %36, 0, !dbg !10610
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !10611

if.then72:                                        ; preds = %if.end68
  br label %error, !dbg !10612

if.end73:                                         ; preds = %if.end68
  br label %if.end74, !dbg !10613

if.end74:                                         ; preds = %if.end73, %if.end38
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10614
  %uio_mask75 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %37, i32 0, i32 100, !dbg !10616
  %38 = load i16, i16* %uio_mask75, align 2, !dbg !10616
  %conv76 = zext i16 %38 to i32, !dbg !10614
  %and77 = and i32 %conv76, 4, !dbg !10617
  %tobool78 = icmp ne i32 %and77, 0, !dbg !10617
  br i1 %tobool78, label %if.then79, label %if.end110, !dbg !10618

if.then79:                                        ; preds = %if.end74
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10619
  %40 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10621
  %m_gpio_cfg80 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %40, i32 0, i32 83, !dbg !10622
  %41 = load i16, i16* %m_gpio_cfg80, align 2, !dbg !10622
  %call81 = call i32 @write16(%struct.drxk_state* %39, i32 8323105, i16 zeroext %41) #9, !dbg !10623
  store i32 %call81, i32* %status, align 4, !dbg !10624
  %42 = load i32, i32* %status, align 4, !dbg !10625
  %cmp82 = icmp slt i32 %42, 0, !dbg !10627
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !10628

if.then84:                                        ; preds = %if.then79
  br label %error, !dbg !10629

if.end85:                                         ; preds = %if.then79
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10630
  %call86 = call i32 @read16(%struct.drxk_state* %43, i32 8323094, i16* %value) #9, !dbg !10631
  store i32 %call86, i32* %status, align 4, !dbg !10632
  %44 = load i32, i32* %status, align 4, !dbg !10633
  %cmp87 = icmp slt i32 %44, 0, !dbg !10635
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !10636

if.then89:                                        ; preds = %if.end85
  br label %error, !dbg !10637

if.end90:                                         ; preds = %if.end85
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10638
  %m_gpio91 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %45, i32 0, i32 82, !dbg !10640
  %46 = load i16, i16* %m_gpio91, align 8, !dbg !10640
  %conv92 = zext i16 %46 to i32, !dbg !10638
  %and93 = and i32 %conv92, 4, !dbg !10641
  %cmp94 = icmp eq i32 %and93, 0, !dbg !10642
  br i1 %cmp94, label %if.then96, label %if.else100, !dbg !10643

if.then96:                                        ; preds = %if.end90
  %47 = load i16, i16* %value, align 2, !dbg !10644
  %conv97 = zext i16 %47 to i32, !dbg !10644
  %and98 = and i32 %conv97, 65531, !dbg !10644
  %conv99 = trunc i32 %and98 to i16, !dbg !10644
  store i16 %conv99, i16* %value, align 2, !dbg !10644
  br label %if.end104, !dbg !10645

if.else100:                                       ; preds = %if.end90
  %48 = load i16, i16* %value, align 2, !dbg !10646
  %conv101 = zext i16 %48 to i32, !dbg !10646
  %or102 = or i32 %conv101, 4, !dbg !10646
  %conv103 = trunc i32 %or102 to i16, !dbg !10646
  store i16 %conv103, i16* %value, align 2, !dbg !10646
  br label %if.end104

if.end104:                                        ; preds = %if.else100, %if.then96
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10647
  %50 = load i16, i16* %value, align 2, !dbg !10648
  %call105 = call i32 @write16(%struct.drxk_state* %49, i32 8323094, i16 zeroext %50) #9, !dbg !10649
  store i32 %call105, i32* %status, align 4, !dbg !10650
  %51 = load i32, i32* %status, align 4, !dbg !10651
  %cmp106 = icmp slt i32 %51, 0, !dbg !10653
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !10654

if.then108:                                       ; preds = %if.end104
  br label %error, !dbg !10655

if.end109:                                        ; preds = %if.end104
  br label %if.end110, !dbg !10656

if.end110:                                        ; preds = %if.end109, %if.end74
  br label %if.end111, !dbg !10657

if.end111:                                        ; preds = %if.end110, %if.end8
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10658
  %call112 = call i32 @write16(%struct.drxk_state* %52, i32 4259855, i16 zeroext 0) #9, !dbg !10659
  store i32 %call112, i32* %status, align 4, !dbg !10660
  br label %error, !dbg !10661

error:                                            ; preds = %if.end111, %if.then108, %if.then89, %if.then84, %if.then72, %if.then53, %if.then48, %if.then36, %if.then20, %if.then15, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !10662), !dbg !10663
  %53 = load i32, i32* %status, align 4, !dbg !10664
  %cmp113 = icmp slt i32 %53, 0, !dbg !10666
  br i1 %cmp113, label %if.then115, label %if.end117, !dbg !10667

if.then115:                                       ; preds = %error
  %54 = load i32, i32* %status, align 4, !dbg !10668
  %call116 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %54, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.write_gpio, i64 0, i64 0)) #8, !dbg !10668
  br label %if.end117, !dbg !10668

if.end117:                                        ; preds = %if.then115, %error
  %55 = load i32, i32* %status, align 4, !dbg !10669
  ret i32 %55, !dbg !10670
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @adc_sync_measurement(%struct.drxk_state* %state, i16* %count) #0 !dbg !10671 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %count.addr = alloca i16*, align 8
  %data = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !10674, metadata !DIExpression()), !dbg !10675
  store i16* %count, i16** %count.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %count.addr, metadata !10676, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.declare(metadata i16* %data, metadata !10678, metadata !DIExpression()), !dbg !10679
  store i16 0, i16* %data, align 2, !dbg !10679
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10680, metadata !DIExpression()), !dbg !10681
  br label %do.body, !dbg !10682

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !10683
  %cmp = icmp uge i32 %0, 1, !dbg !10683
  br i1 %cmp, label %if.then, label %if.end, !dbg !10686

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.adc_sync_measurement, i64 0, i64 0)) #8, !dbg !10683
  br label %if.end, !dbg !10683

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !10686

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10687
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 25624576, i16 zeroext 1) #9, !dbg !10688
  store i32 %call1, i32* %status, align 4, !dbg !10689
  %2 = load i32, i32* %status, align 4, !dbg !10690
  %cmp2 = icmp slt i32 %2, 0, !dbg !10692
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10693

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !10694

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10695
  %call5 = call i32 @write16(%struct.drxk_state* %3, i32 25624603, i16 zeroext 1) #9, !dbg !10696
  store i32 %call5, i32* %status, align 4, !dbg !10697
  %4 = load i32, i32* %status, align 4, !dbg !10698
  %cmp6 = icmp slt i32 %4, 0, !dbg !10700
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10701

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !10702

if.end8:                                          ; preds = %if.end4
  %5 = load i16*, i16** %count.addr, align 8, !dbg !10703
  store i16 0, i16* %5, align 2, !dbg !10704
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10705
  %call9 = call i32 @read16(%struct.drxk_state* %6, i32 25624604, i16* %data) #9, !dbg !10706
  store i32 %call9, i32* %status, align 4, !dbg !10707
  %7 = load i32, i32* %status, align 4, !dbg !10708
  %cmp10 = icmp slt i32 %7, 0, !dbg !10710
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10711

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !10712

if.end12:                                         ; preds = %if.end8
  %8 = load i16, i16* %data, align 2, !dbg !10713
  %conv = zext i16 %8 to i32, !dbg !10713
  %cmp13 = icmp eq i32 %conv, 127, !dbg !10715
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !10716

if.then15:                                        ; preds = %if.end12
  %9 = load i16*, i16** %count.addr, align 8, !dbg !10717
  %10 = load i16, i16* %9, align 2, !dbg !10718
  %conv16 = zext i16 %10 to i32, !dbg !10718
  %add = add i32 %conv16, 1, !dbg !10719
  %conv17 = trunc i32 %add to i16, !dbg !10718
  %11 = load i16*, i16** %count.addr, align 8, !dbg !10720
  store i16 %conv17, i16* %11, align 2, !dbg !10721
  br label %if.end18, !dbg !10722

if.end18:                                         ; preds = %if.then15, %if.end12
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10723
  %call19 = call i32 @read16(%struct.drxk_state* %12, i32 25624605, i16* %data) #9, !dbg !10724
  store i32 %call19, i32* %status, align 4, !dbg !10725
  %13 = load i32, i32* %status, align 4, !dbg !10726
  %cmp20 = icmp slt i32 %13, 0, !dbg !10728
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !10729

if.then22:                                        ; preds = %if.end18
  br label %error, !dbg !10730

if.end23:                                         ; preds = %if.end18
  %14 = load i16, i16* %data, align 2, !dbg !10731
  %conv24 = zext i16 %14 to i32, !dbg !10731
  %cmp25 = icmp eq i32 %conv24, 127, !dbg !10733
  br i1 %cmp25, label %if.then27, label %if.end31, !dbg !10734

if.then27:                                        ; preds = %if.end23
  %15 = load i16*, i16** %count.addr, align 8, !dbg !10735
  %16 = load i16, i16* %15, align 2, !dbg !10736
  %conv28 = zext i16 %16 to i32, !dbg !10736
  %add29 = add i32 %conv28, 1, !dbg !10737
  %conv30 = trunc i32 %add29 to i16, !dbg !10736
  %17 = load i16*, i16** %count.addr, align 8, !dbg !10738
  store i16 %conv30, i16* %17, align 2, !dbg !10739
  br label %if.end31, !dbg !10740

if.end31:                                         ; preds = %if.then27, %if.end23
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10741
  %call32 = call i32 @read16(%struct.drxk_state* %18, i32 25624606, i16* %data) #9, !dbg !10742
  store i32 %call32, i32* %status, align 4, !dbg !10743
  %19 = load i32, i32* %status, align 4, !dbg !10744
  %cmp33 = icmp slt i32 %19, 0, !dbg !10746
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !10747

if.then35:                                        ; preds = %if.end31
  br label %error, !dbg !10748

if.end36:                                         ; preds = %if.end31
  %20 = load i16, i16* %data, align 2, !dbg !10749
  %conv37 = zext i16 %20 to i32, !dbg !10749
  %cmp38 = icmp eq i32 %conv37, 127, !dbg !10751
  br i1 %cmp38, label %if.then40, label %if.end44, !dbg !10752

if.then40:                                        ; preds = %if.end36
  %21 = load i16*, i16** %count.addr, align 8, !dbg !10753
  %22 = load i16, i16* %21, align 2, !dbg !10754
  %conv41 = zext i16 %22 to i32, !dbg !10754
  %add42 = add i32 %conv41, 1, !dbg !10755
  %conv43 = trunc i32 %add42 to i16, !dbg !10754
  %23 = load i16*, i16** %count.addr, align 8, !dbg !10756
  store i16 %conv43, i16* %23, align 2, !dbg !10757
  br label %if.end44, !dbg !10758

if.end44:                                         ; preds = %if.then40, %if.end36
  br label %error, !dbg !10759

error:                                            ; preds = %if.end44, %if.then35, %if.then22, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !10760), !dbg !10761
  %24 = load i32, i32* %status, align 4, !dbg !10762
  %cmp45 = icmp slt i32 %24, 0, !dbg !10764
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !10765

if.then47:                                        ; preds = %error
  %25 = load i32, i32* %status, align 4, !dbg !10766
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %25, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.adc_sync_measurement, i64 0, i64 0)) #8, !dbg !10766
  br label %if.end49, !dbg !10766

if.end49:                                         ; preds = %if.then47, %error
  %26 = load i32, i32* %status, align 4, !dbg !10767
  ret i32 %26, !dbg !10768
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_dvbt(%struct.drxk_state* %state) #0 !dbg !10769 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !10772, metadata !DIExpression()), !dbg !10773
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10774
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %0, i32 0, i32 28, !dbg !10775
  %1 = load i32, i32* %m_operation_mode, align 8, !dbg !10775
  %cmp = icmp eq i32 %1, 4, !dbg !10776
  ret i1 %cmp, !dbg !10777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_qam(%struct.drxk_state* %state) #0 !dbg !10778 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !10779, metadata !DIExpression()), !dbg !10780
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10781
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %0, i32 0, i32 28, !dbg !10782
  %1 = load i32, i32* %m_operation_mode, align 8, !dbg !10782
  %cmp = icmp eq i32 %1, 1, !dbg !10783
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !10784

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10785
  %m_operation_mode1 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 28, !dbg !10786
  %3 = load i32, i32* %m_operation_mode1, align 8, !dbg !10786
  %cmp2 = icmp eq i32 %3, 2, !dbg !10787
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !10788

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10789
  %m_operation_mode3 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 28, !dbg !10790
  %5 = load i32, i32* %m_operation_mode3, align 8, !dbg !10790
  %cmp4 = icmp eq i32 %5, 3, !dbg !10791
  br label %lor.end, !dbg !10788

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %6 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp4, %lor.rhs ]
  ret i1 %6, !dbg !10792
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @write32(%struct.drxk_state* %state, i32 %reg, i32 %data) #0 !dbg !10793 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !10796, metadata !DIExpression()), !dbg !10797
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !10798, metadata !DIExpression()), !dbg !10799
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !10800, metadata !DIExpression()), !dbg !10801
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10802
  %1 = load i32, i32* %reg.addr, align 4, !dbg !10803
  %2 = load i32, i32* %data.addr, align 4, !dbg !10804
  %call = call i32 @write32_flags(%struct.drxk_state* %0, i32 %1, i32 %2, i8 zeroext 0) #9, !dbg !10805
  ret i32 %call, !dbg !10806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @write32_flags(%struct.drxk_state* %state, i32 %reg, i32 %data, i8 zeroext %flags) #0 !dbg !10807 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i32, align 4
  %flags.addr = alloca i8, align 1
  %adr = alloca i8, align 1
  %mm = alloca [8 x i8], align 1
  %len = alloca i8, align 1
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !10810, metadata !DIExpression()), !dbg !10811
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !10812, metadata !DIExpression()), !dbg !10813
  store i32 %data, i32* %data.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %data.addr, metadata !10814, metadata !DIExpression()), !dbg !10815
  store i8 %flags, i8* %flags.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flags.addr, metadata !10816, metadata !DIExpression()), !dbg !10817
  call void @llvm.dbg.declare(metadata i8* %adr, metadata !10818, metadata !DIExpression()), !dbg !10819
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10820
  %demod_address = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %0, i32 0, i32 4, !dbg !10821
  %1 = load i8, i8* %demod_address, align 8, !dbg !10821
  store i8 %1, i8* %adr, align 1, !dbg !10819
  call void @llvm.dbg.declare(metadata [8 x i8]* %mm, metadata !10822, metadata !DIExpression()), !dbg !10823
  call void @llvm.dbg.declare(metadata i8* %len, metadata !10824, metadata !DIExpression()), !dbg !10825
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10826
  %single_master = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 102, !dbg !10828
  %3 = load i8, i8* %single_master, align 1, !dbg !10828
  %tobool = trunc i8 %3 to i1, !dbg !10828
  br i1 %tobool, label %if.then, label %if.end, !dbg !10829

if.then:                                          ; preds = %entry
  %4 = load i8, i8* %flags.addr, align 1, !dbg !10830
  %conv = zext i8 %4 to i32, !dbg !10830
  %or = or i32 %conv, 192, !dbg !10830
  %conv1 = trunc i32 %or to i8, !dbg !10830
  store i8 %conv1, i8* %flags.addr, align 1, !dbg !10830
  br label %if.end, !dbg !10831

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %reg.addr, align 4, !dbg !10832
  %and = and i32 %5, -63897728, !dbg !10832
  %cmp = icmp ne i32 %and, 0, !dbg !10832
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !10834

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i8, i8* %flags.addr, align 1, !dbg !10835
  %conv3 = zext i8 %6 to i32, !dbg !10835
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !10836
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !10837

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %reg.addr, align 4, !dbg !10838
  %shl = shl i32 %7, 1, !dbg !10840
  %and7 = and i32 %shl, 255, !dbg !10841
  %or8 = or i32 %and7, 1, !dbg !10842
  %conv9 = trunc i32 %or8 to i8, !dbg !10843
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %mm, i64 0, i64 0, !dbg !10844
  store i8 %conv9, i8* %arrayidx, align 1, !dbg !10845
  %8 = load i32, i32* %reg.addr, align 4, !dbg !10846
  %shr = lshr i32 %8, 16, !dbg !10847
  %and10 = and i32 %shr, 255, !dbg !10848
  %conv11 = trunc i32 %and10 to i8, !dbg !10849
  %arrayidx12 = getelementptr [8 x i8], [8 x i8]* %mm, i64 0, i64 1, !dbg !10850
  store i8 %conv11, i8* %arrayidx12, align 1, !dbg !10851
  %9 = load i32, i32* %reg.addr, align 4, !dbg !10852
  %shr13 = lshr i32 %9, 24, !dbg !10853
  %and14 = and i32 %shr13, 255, !dbg !10854
  %10 = load i8, i8* %flags.addr, align 1, !dbg !10855
  %conv15 = zext i8 %10 to i32, !dbg !10855
  %or16 = or i32 %and14, %conv15, !dbg !10856
  %conv17 = trunc i32 %or16 to i8, !dbg !10857
  %arrayidx18 = getelementptr [8 x i8], [8 x i8]* %mm, i64 0, i64 2, !dbg !10858
  store i8 %conv17, i8* %arrayidx18, align 1, !dbg !10859
  %11 = load i32, i32* %reg.addr, align 4, !dbg !10860
  %shr19 = lshr i32 %11, 7, !dbg !10861
  %and20 = and i32 %shr19, 255, !dbg !10862
  %conv21 = trunc i32 %and20 to i8, !dbg !10863
  %arrayidx22 = getelementptr [8 x i8], [8 x i8]* %mm, i64 0, i64 3, !dbg !10864
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !10865
  store i8 4, i8* %len, align 1, !dbg !10866
  br label %if.end34, !dbg !10867

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i32, i32* %reg.addr, align 4, !dbg !10868
  %shl23 = shl i32 %12, 1, !dbg !10870
  %and24 = and i32 %shl23, 255, !dbg !10871
  %conv25 = trunc i32 %and24 to i8, !dbg !10872
  %arrayidx26 = getelementptr [8 x i8], [8 x i8]* %mm, i64 0, i64 0, !dbg !10873
  store i8 %conv25, i8* %arrayidx26, align 1, !dbg !10874
  %13 = load i32, i32* %reg.addr, align 4, !dbg !10875
  %shr27 = lshr i32 %13, 16, !dbg !10876
  %and28 = and i32 %shr27, 15, !dbg !10877
  %14 = load i32, i32* %reg.addr, align 4, !dbg !10878
  %shr29 = lshr i32 %14, 18, !dbg !10879
  %and30 = and i32 %shr29, 240, !dbg !10880
  %or31 = or i32 %and28, %and30, !dbg !10881
  %conv32 = trunc i32 %or31 to i8, !dbg !10882
  %arrayidx33 = getelementptr [8 x i8], [8 x i8]* %mm, i64 0, i64 1, !dbg !10883
  store i8 %conv32, i8* %arrayidx33, align 1, !dbg !10884
  store i8 2, i8* %len, align 1, !dbg !10885
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then6
  %15 = load i32, i32* %data.addr, align 4, !dbg !10886
  %and35 = and i32 %15, 255, !dbg !10887
  %conv36 = trunc i32 %and35 to i8, !dbg !10886
  %16 = load i8, i8* %len, align 1, !dbg !10888
  %idxprom = zext i8 %16 to i64, !dbg !10889
  %arrayidx37 = getelementptr [8 x i8], [8 x i8]* %mm, i64 0, i64 %idxprom, !dbg !10889
  store i8 %conv36, i8* %arrayidx37, align 1, !dbg !10890
  %17 = load i32, i32* %data.addr, align 4, !dbg !10891
  %shr38 = lshr i32 %17, 8, !dbg !10892
  %and39 = and i32 %shr38, 255, !dbg !10893
  %conv40 = trunc i32 %and39 to i8, !dbg !10894
  %18 = load i8, i8* %len, align 1, !dbg !10895
  %conv41 = zext i8 %18 to i32, !dbg !10895
  %add = add i32 %conv41, 1, !dbg !10896
  %idxprom42 = sext i32 %add to i64, !dbg !10897
  %arrayidx43 = getelementptr [8 x i8], [8 x i8]* %mm, i64 0, i64 %idxprom42, !dbg !10897
  store i8 %conv40, i8* %arrayidx43, align 1, !dbg !10898
  %19 = load i32, i32* %data.addr, align 4, !dbg !10899
  %shr44 = lshr i32 %19, 16, !dbg !10900
  %and45 = and i32 %shr44, 255, !dbg !10901
  %conv46 = trunc i32 %and45 to i8, !dbg !10902
  %20 = load i8, i8* %len, align 1, !dbg !10903
  %conv47 = zext i8 %20 to i32, !dbg !10903
  %add48 = add i32 %conv47, 2, !dbg !10904
  %idxprom49 = sext i32 %add48 to i64, !dbg !10905
  %arrayidx50 = getelementptr [8 x i8], [8 x i8]* %mm, i64 0, i64 %idxprom49, !dbg !10905
  store i8 %conv46, i8* %arrayidx50, align 1, !dbg !10906
  %21 = load i32, i32* %data.addr, align 4, !dbg !10907
  %shr51 = lshr i32 %21, 24, !dbg !10908
  %and52 = and i32 %shr51, 255, !dbg !10909
  %conv53 = trunc i32 %and52 to i8, !dbg !10910
  %22 = load i8, i8* %len, align 1, !dbg !10911
  %conv54 = zext i8 %22 to i32, !dbg !10911
  %add55 = add i32 %conv54, 3, !dbg !10912
  %idxprom56 = sext i32 %add55 to i64, !dbg !10913
  %arrayidx57 = getelementptr [8 x i8], [8 x i8]* %mm, i64 0, i64 %idxprom56, !dbg !10913
  store i8 %conv53, i8* %arrayidx57, align 1, !dbg !10914
  br label %do.body, !dbg !10915

do.body:                                          ; preds = %if.end34
  %23 = load i32, i32* @debug, align 4, !dbg !10916
  %cmp58 = icmp uge i32 %23, 2, !dbg !10916
  br i1 %cmp58, label %if.then60, label %if.end62, !dbg !10919

if.then60:                                        ; preds = %do.body
  %24 = load i32, i32* %reg.addr, align 4, !dbg !10916
  %25 = load i32, i32* %data.addr, align 4, !dbg !10916
  %26 = load i8, i8* %flags.addr, align 1, !dbg !10916
  %conv61 = zext i8 %26 to i32, !dbg !10916
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.write32_flags, i64 0, i64 0), i32 %24, i32 %25, i32 %conv61) #8, !dbg !10916
  br label %if.end62, !dbg !10916

if.end62:                                         ; preds = %if.then60, %do.body
  br label %do.end, !dbg !10919

do.end:                                           ; preds = %if.end62
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10920
  %28 = load i8, i8* %adr, align 1, !dbg !10921
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %mm, i64 0, i64 0, !dbg !10922
  %29 = load i8, i8* %len, align 1, !dbg !10923
  %conv63 = zext i8 %29 to i32, !dbg !10923
  %add64 = add i32 %conv63, 4, !dbg !10924
  %call65 = call i32 @i2c_write(%struct.drxk_state* %27, i8 zeroext %28, i8* %arraydecay, i32 %add64) #9, !dbg !10925
  ret i32 %call65, !dbg !10926
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dvbt_ctrl_set_inc_enable(%struct.drxk_state* %state, i8* %enabled) #0 !dbg !10927 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %enabled.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !10930, metadata !DIExpression()), !dbg !10931
  store i8* %enabled, i8** %enabled.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %enabled.addr, metadata !10932, metadata !DIExpression()), !dbg !10933
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10934, metadata !DIExpression()), !dbg !10935
  br label %do.body, !dbg !10936

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !10937
  %cmp = icmp uge i32 %0, 1, !dbg !10937
  br i1 %cmp, label %if.then, label %if.end, !dbg !10940

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.dvbt_ctrl_set_inc_enable, i64 0, i64 0)) #8, !dbg !10937
  br label %if.end, !dbg !10937

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !10940

do.end:                                           ; preds = %if.end
  %1 = load i8*, i8** %enabled.addr, align 8, !dbg !10941
  %2 = load i8, i8* %1, align 1, !dbg !10943
  %tobool = trunc i8 %2 to i1, !dbg !10943
  br i1 %tobool, label %if.then1, label %if.else, !dbg !10944

if.then1:                                         ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10945
  %call2 = call i32 @write16(%struct.drxk_state* %3, i32 25559143, i16 zeroext 0) #9, !dbg !10946
  store i32 %call2, i32* %status, align 4, !dbg !10947
  br label %if.end4, !dbg !10948

if.else:                                          ; preds = %do.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10949
  %call3 = call i32 @write16(%struct.drxk_state* %4, i32 25559143, i16 zeroext 1) #9, !dbg !10950
  store i32 %call3, i32* %status, align 4, !dbg !10951
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then1
  %5 = load i32, i32* %status, align 4, !dbg !10952
  %cmp5 = icmp slt i32 %5, 0, !dbg !10954
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !10955

if.then6:                                         ; preds = %if.end4
  %6 = load i32, i32* %status, align 4, !dbg !10956
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.dvbt_ctrl_set_inc_enable, i64 0, i64 0)) #8, !dbg !10956
  br label %if.end8, !dbg !10956

if.end8:                                          ; preds = %if.then6, %if.end4
  %7 = load i32, i32* %status, align 4, !dbg !10957
  ret i32 %7, !dbg !10958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dvbt_ctrl_set_fr_enable(%struct.drxk_state* %state, i8* %enabled) #0 !dbg !10959 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %enabled.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !10960, metadata !DIExpression()), !dbg !10961
  store i8* %enabled, i8** %enabled.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %enabled.addr, metadata !10962, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10964, metadata !DIExpression()), !dbg !10965
  br label %do.body, !dbg !10966

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !10967
  %cmp = icmp uge i32 %0, 1, !dbg !10967
  br i1 %cmp, label %if.then, label %if.end, !dbg !10970

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dvbt_ctrl_set_fr_enable, i64 0, i64 0)) #8, !dbg !10967
  br label %if.end, !dbg !10967

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !10970

do.end:                                           ; preds = %if.end
  %1 = load i8*, i8** %enabled.addr, align 8, !dbg !10971
  %2 = load i8, i8* %1, align 1, !dbg !10973
  %tobool = trunc i8 %2 to i1, !dbg !10973
  br i1 %tobool, label %if.then1, label %if.else, !dbg !10974

if.then1:                                         ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10975
  %call2 = call i32 @write16(%struct.drxk_state* %3, i32 63045757, i16 zeroext 4000) #9, !dbg !10977
  store i32 %call2, i32* %status, align 4, !dbg !10978
  br label %if.end4, !dbg !10979

if.else:                                          ; preds = %do.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !10980
  %call3 = call i32 @write16(%struct.drxk_state* %4, i32 63045757, i16 zeroext 0) #9, !dbg !10982
  store i32 %call3, i32* %status, align 4, !dbg !10983
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then1
  %5 = load i32, i32* %status, align 4, !dbg !10984
  %cmp5 = icmp slt i32 %5, 0, !dbg !10986
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !10987

if.then6:                                         ; preds = %if.end4
  %6 = load i32, i32* %status, align 4, !dbg !10988
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dvbt_ctrl_set_fr_enable, i64 0, i64 0)) #8, !dbg !10988
  br label %if.end8, !dbg !10988

if.end8:                                          ; preds = %if.then6, %if.end4
  %7 = load i32, i32* %status, align 4, !dbg !10989
  ret i32 %7, !dbg !10990
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dvbt_ctrl_set_echo_threshold(%struct.drxk_state* %state, %struct.drxk_cfg_dvbt_echo_thres_t* %echo_thres) #0 !dbg !10991 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %echo_thres.addr = alloca %struct.drxk_cfg_dvbt_echo_thres_t*, align 8
  %data = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !10995, metadata !DIExpression()), !dbg !10996
  store %struct.drxk_cfg_dvbt_echo_thres_t* %echo_thres, %struct.drxk_cfg_dvbt_echo_thres_t** %echo_thres.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_cfg_dvbt_echo_thres_t** %echo_thres.addr, metadata !10997, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.declare(metadata i16* %data, metadata !10999, metadata !DIExpression()), !dbg !11000
  store i16 0, i16* %data, align 2, !dbg !11000
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11001, metadata !DIExpression()), !dbg !11002
  br label %do.body, !dbg !11003

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !11004
  %cmp = icmp uge i32 %0, 1, !dbg !11004
  br i1 %cmp, label %if.then, label %if.end, !dbg !11007

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.dvbt_ctrl_set_echo_threshold, i64 0, i64 0)) #8, !dbg !11004
  br label %if.end, !dbg !11004

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11007

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11008
  %call1 = call i32 @read16(%struct.drxk_state* %1, i32 63045711, i16* %data) #9, !dbg !11009
  store i32 %call1, i32* %status, align 4, !dbg !11010
  %2 = load i32, i32* %status, align 4, !dbg !11011
  %cmp2 = icmp slt i32 %2, 0, !dbg !11013
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11014

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !11015

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_cfg_dvbt_echo_thres_t*, %struct.drxk_cfg_dvbt_echo_thres_t** %echo_thres.addr, align 8, !dbg !11016
  %fft_mode = getelementptr inbounds %struct.drxk_cfg_dvbt_echo_thres_t, %struct.drxk_cfg_dvbt_echo_thres_t* %3, i32 0, i32 1, !dbg !11017
  %4 = load i32, i32* %fft_mode, align 4, !dbg !11017
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb10
  ], !dbg !11018

sw.bb:                                            ; preds = %if.end4
  %5 = load i16, i16* %data, align 2, !dbg !11019
  %conv = zext i16 %5 to i32, !dbg !11019
  %and = and i32 %conv, -65281, !dbg !11019
  %conv5 = trunc i32 %and to i16, !dbg !11019
  store i16 %conv5, i16* %data, align 2, !dbg !11019
  %6 = load %struct.drxk_cfg_dvbt_echo_thres_t*, %struct.drxk_cfg_dvbt_echo_thres_t** %echo_thres.addr, align 8, !dbg !11021
  %threshold = getelementptr inbounds %struct.drxk_cfg_dvbt_echo_thres_t, %struct.drxk_cfg_dvbt_echo_thres_t* %6, i32 0, i32 0, !dbg !11022
  %7 = load i16, i16* %threshold, align 4, !dbg !11022
  %conv6 = zext i16 %7 to i32, !dbg !11021
  %shl = shl i32 %conv6, 8, !dbg !11023
  %and7 = and i32 %shl, 65280, !dbg !11024
  %8 = load i16, i16* %data, align 2, !dbg !11025
  %conv8 = zext i16 %8 to i32, !dbg !11025
  %or = or i32 %conv8, %and7, !dbg !11025
  %conv9 = trunc i32 %or to i16, !dbg !11025
  store i16 %conv9, i16* %data, align 2, !dbg !11025
  br label %sw.epilog, !dbg !11026

sw.bb10:                                          ; preds = %if.end4
  %9 = load i16, i16* %data, align 2, !dbg !11027
  %conv11 = zext i16 %9 to i32, !dbg !11027
  %and12 = and i32 %conv11, -256, !dbg !11027
  %conv13 = trunc i32 %and12 to i16, !dbg !11027
  store i16 %conv13, i16* %data, align 2, !dbg !11027
  %10 = load %struct.drxk_cfg_dvbt_echo_thres_t*, %struct.drxk_cfg_dvbt_echo_thres_t** %echo_thres.addr, align 8, !dbg !11028
  %threshold14 = getelementptr inbounds %struct.drxk_cfg_dvbt_echo_thres_t, %struct.drxk_cfg_dvbt_echo_thres_t* %10, i32 0, i32 0, !dbg !11029
  %11 = load i16, i16* %threshold14, align 4, !dbg !11029
  %conv15 = zext i16 %11 to i32, !dbg !11028
  %shl16 = shl i32 %conv15, 0, !dbg !11030
  %and17 = and i32 %shl16, 255, !dbg !11031
  %12 = load i16, i16* %data, align 2, !dbg !11032
  %conv18 = zext i16 %12 to i32, !dbg !11032
  %or19 = or i32 %conv18, %and17, !dbg !11032
  %conv20 = trunc i32 %or19 to i16, !dbg !11032
  store i16 %conv20, i16* %data, align 2, !dbg !11032
  br label %sw.epilog, !dbg !11033

sw.default:                                       ; preds = %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !11034
  br label %return, !dbg !11034

sw.epilog:                                        ; preds = %sw.bb10, %sw.bb
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11035
  %14 = load i16, i16* %data, align 2, !dbg !11036
  %call21 = call i32 @write16(%struct.drxk_state* %13, i32 63045711, i16 zeroext %14) #9, !dbg !11037
  store i32 %call21, i32* %status, align 4, !dbg !11038
  br label %error, !dbg !11039

error:                                            ; preds = %sw.epilog, %if.then3
  call void @llvm.dbg.label(metadata !11040), !dbg !11041
  %15 = load i32, i32* %status, align 4, !dbg !11042
  %cmp22 = icmp slt i32 %15, 0, !dbg !11044
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !11045

if.then24:                                        ; preds = %error
  %16 = load i32, i32* %status, align 4, !dbg !11046
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.dvbt_ctrl_set_echo_threshold, i64 0, i64 0)) #8, !dbg !11046
  br label %if.end26, !dbg !11046

if.end26:                                         ; preds = %if.then24, %error
  %17 = load i32, i32* %status, align 4, !dbg !11047
  store i32 %17, i32* %retval, align 4, !dbg !11048
  br label %return, !dbg !11048

return:                                           ; preds = %if.end26, %sw.default
  %18 = load i32, i32* %retval, align 4, !dbg !11049
  ret i32 %18, !dbg !11049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @switch_antenna_to_qam(%struct.drxk_state* %state) #0 !dbg !11050 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  %gpio_state = alloca i8, align 1
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !11051, metadata !DIExpression()), !dbg !11052
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11053, metadata !DIExpression()), !dbg !11054
  store i32 0, i32* %status, align 4, !dbg !11054
  call void @llvm.dbg.declare(metadata i8* %gpio_state, metadata !11055, metadata !DIExpression()), !dbg !11056
  br label %do.body, !dbg !11057

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !11058
  %cmp = icmp uge i32 %0, 1, !dbg !11058
  br i1 %cmp, label %if.then, label %if.end, !dbg !11061

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.switch_antenna_to_qam, i64 0, i64 0)) #8, !dbg !11058
  br label %if.end, !dbg !11058

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11061

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11062
  %antenna_gpio = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 105, !dbg !11064
  %2 = load i16, i16* %antenna_gpio, align 8, !dbg !11064
  %tobool = icmp ne i16 %2, 0, !dbg !11062
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !11065

if.then1:                                         ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !11066
  br label %return, !dbg !11066

if.end2:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11067
  %m_gpio = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 82, !dbg !11068
  %4 = load i16, i16* %m_gpio, align 8, !dbg !11068
  %conv = zext i16 %4 to i32, !dbg !11067
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11069
  %antenna_gpio3 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %5, i32 0, i32 105, !dbg !11070
  %6 = load i16, i16* %antenna_gpio3, align 8, !dbg !11070
  %conv4 = zext i16 %6 to i32, !dbg !11069
  %and = and i32 %conv, %conv4, !dbg !11071
  %tobool5 = icmp ne i32 %and, 0, !dbg !11067
  %frombool = zext i1 %tobool5 to i8, !dbg !11072
  store i8 %frombool, i8* %gpio_state, align 1, !dbg !11072
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11073
  %antenna_dvbt = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 104, !dbg !11075
  %8 = load i8, i8* %antenna_dvbt, align 1, !dbg !11075
  %tobool6 = trunc i8 %8 to i1, !dbg !11075
  %conv7 = zext i1 %tobool6 to i32, !dbg !11073
  %9 = load i8, i8* %gpio_state, align 1, !dbg !11076
  %tobool8 = trunc i8 %9 to i1, !dbg !11076
  %conv9 = zext i1 %tobool8 to i32, !dbg !11076
  %xor = xor i32 %conv7, %conv9, !dbg !11077
  %tobool10 = icmp ne i32 %xor, 0, !dbg !11077
  br i1 %tobool10, label %if.then11, label %if.end28, !dbg !11078

if.then11:                                        ; preds = %if.end2
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11079
  %antenna_dvbt12 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %10, i32 0, i32 104, !dbg !11082
  %11 = load i8, i8* %antenna_dvbt12, align 1, !dbg !11082
  %tobool13 = trunc i8 %11 to i1, !dbg !11082
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !11083

if.then14:                                        ; preds = %if.then11
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11084
  %antenna_gpio15 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 105, !dbg !11085
  %13 = load i16, i16* %antenna_gpio15, align 8, !dbg !11085
  %conv16 = zext i16 %13 to i32, !dbg !11084
  %neg = xor i32 %conv16, -1, !dbg !11086
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11087
  %m_gpio17 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %14, i32 0, i32 82, !dbg !11088
  %15 = load i16, i16* %m_gpio17, align 8, !dbg !11089
  %conv18 = zext i16 %15 to i32, !dbg !11089
  %and19 = and i32 %conv18, %neg, !dbg !11089
  %conv20 = trunc i32 %and19 to i16, !dbg !11089
  store i16 %conv20, i16* %m_gpio17, align 8, !dbg !11089
  br label %if.end26, !dbg !11087

if.else:                                          ; preds = %if.then11
  %16 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11090
  %antenna_gpio21 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %16, i32 0, i32 105, !dbg !11091
  %17 = load i16, i16* %antenna_gpio21, align 8, !dbg !11091
  %conv22 = zext i16 %17 to i32, !dbg !11090
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11092
  %m_gpio23 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %18, i32 0, i32 82, !dbg !11093
  %19 = load i16, i16* %m_gpio23, align 8, !dbg !11094
  %conv24 = zext i16 %19 to i32, !dbg !11094
  %or = or i32 %conv24, %conv22, !dbg !11094
  %conv25 = trunc i32 %or to i16, !dbg !11094
  store i16 %conv25, i16* %m_gpio23, align 8, !dbg !11094
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then14
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11095
  %call27 = call i32 @write_gpio(%struct.drxk_state* %20) #9, !dbg !11096
  store i32 %call27, i32* %status, align 4, !dbg !11097
  br label %if.end28, !dbg !11098

if.end28:                                         ; preds = %if.end26, %if.end2
  %21 = load i32, i32* %status, align 4, !dbg !11099
  %cmp29 = icmp slt i32 %21, 0, !dbg !11101
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !11102

if.then31:                                        ; preds = %if.end28
  %22 = load i32, i32* %status, align 4, !dbg !11103
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %22, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.switch_antenna_to_qam, i64 0, i64 0)) #8, !dbg !11103
  br label %if.end33, !dbg !11103

if.end33:                                         ; preds = %if.then31, %if.end28
  %23 = load i32, i32* %status, align 4, !dbg !11104
  store i32 %23, i32* %retval, align 4, !dbg !11105
  br label %return, !dbg !11105

return:                                           ; preds = %if.end33, %if.then1
  %24 = load i32, i32* %retval, align 4, !dbg !11106
  ret i32 %24, !dbg !11106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @power_up_qam(%struct.drxk_state* %state) #0 !dbg !11107 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %power_mode = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !11108, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.declare(metadata i32* %power_mode, metadata !11110, metadata !DIExpression()), !dbg !11111
  store i32 1, i32* %power_mode, align 4, !dbg !11111
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11112, metadata !DIExpression()), !dbg !11113
  br label %do.body, !dbg !11114

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !11115
  %cmp = icmp uge i32 %0, 1, !dbg !11115
  br i1 %cmp, label %if.then, label %if.end, !dbg !11118

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.power_up_qam, i64 0, i64 0)) #8, !dbg !11115
  br label %if.end, !dbg !11115

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11118

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11119
  %call1 = call i32 @ctrl_power_mode(%struct.drxk_state* %1, i32* %power_mode) #9, !dbg !11120
  store i32 %call1, i32* %status, align 4, !dbg !11121
  %2 = load i32, i32* %status, align 4, !dbg !11122
  %cmp2 = icmp slt i32 %2, 0, !dbg !11124
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !11125

if.then3:                                         ; preds = %do.end
  %3 = load i32, i32* %status, align 4, !dbg !11126
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.power_up_qam, i64 0, i64 0)) #8, !dbg !11126
  br label %if.end5, !dbg !11126

if.end5:                                          ; preds = %if.then3, %do.end
  %4 = load i32, i32* %status, align 4, !dbg !11127
  ret i32 %4, !dbg !11128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @qam_reset_qam(%struct.drxk_state* %state) #0 !dbg !11129 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  %cmd_result = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !11130, metadata !DIExpression()), !dbg !11131
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11132, metadata !DIExpression()), !dbg !11133
  call void @llvm.dbg.declare(metadata i16* %cmd_result, metadata !11134, metadata !DIExpression()), !dbg !11135
  br label %do.body, !dbg !11136

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !11137
  %cmp = icmp uge i32 %0, 1, !dbg !11137
  br i1 %cmp, label %if.then, label %if.end, !dbg !11140

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.qam_reset_qam, i64 0, i64 0)) #8, !dbg !11137
  br label %if.end, !dbg !11137

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11140

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11141
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 20971520, i16 zeroext 0) #9, !dbg !11142
  store i32 %call1, i32* %status, align 4, !dbg !11143
  %2 = load i32, i32* %status, align 4, !dbg !11144
  %cmp2 = icmp slt i32 %2, 0, !dbg !11146
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11147

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !11148

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11149
  %call5 = call i32 @scu_command(%struct.drxk_state* %3, i16 zeroext 513, i8 zeroext 0, i16* null, i8 zeroext 1, i16* %cmd_result) #9, !dbg !11150
  store i32 %call5, i32* %status, align 4, !dbg !11151
  br label %error, !dbg !11152

error:                                            ; preds = %if.end4, %if.then3
  call void @llvm.dbg.label(metadata !11153), !dbg !11154
  %4 = load i32, i32* %status, align 4, !dbg !11155
  %cmp6 = icmp slt i32 %4, 0, !dbg !11157
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !11158

if.then7:                                         ; preds = %error
  %5 = load i32, i32* %status, align 4, !dbg !11159
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.qam_reset_qam, i64 0, i64 0)) #8, !dbg !11159
  br label %if.end9, !dbg !11159

if.end9:                                          ; preds = %if.then7, %error
  %6 = load i32, i32* %status, align 4, !dbg !11160
  ret i32 %6, !dbg !11161
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bl_direct_cmd(%struct.drxk_state* %state, i32 %target_addr, i16 zeroext %rom_offset, i16 zeroext %nr_of_elements, i32 %time_out) #0 !dbg !11162 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !8330, metadata !DIExpression()), !dbg !11165
  %state.addr = alloca %struct.drxk_state*, align 8
  %target_addr.addr = alloca i32, align 4
  %rom_offset.addr = alloca i16, align 2
  %nr_of_elements.addr = alloca i16, align 2
  %time_out.addr = alloca i32, align 4
  %bl_status = alloca i16, align 2
  %offset = alloca i16, align 2
  %blockbank = alloca i16, align 2
  %status = alloca i32, align 4
  %end = alloca i64, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !11167, metadata !DIExpression()), !dbg !11168
  store i32 %target_addr, i32* %target_addr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target_addr.addr, metadata !11169, metadata !DIExpression()), !dbg !11170
  store i16 %rom_offset, i16* %rom_offset.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %rom_offset.addr, metadata !11171, metadata !DIExpression()), !dbg !11172
  store i16 %nr_of_elements, i16* %nr_of_elements.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %nr_of_elements.addr, metadata !11173, metadata !DIExpression()), !dbg !11174
  store i32 %time_out, i32* %time_out.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %time_out.addr, metadata !11175, metadata !DIExpression()), !dbg !11176
  call void @llvm.dbg.declare(metadata i16* %bl_status, metadata !11177, metadata !DIExpression()), !dbg !11178
  store i16 0, i16* %bl_status, align 2, !dbg !11178
  call void @llvm.dbg.declare(metadata i16* %offset, metadata !11179, metadata !DIExpression()), !dbg !11180
  %0 = load i32, i32* %target_addr.addr, align 4, !dbg !11181
  %shr = lshr i32 %0, 0, !dbg !11182
  %and = and i32 %shr, 65535, !dbg !11183
  %conv = trunc i32 %and to i16, !dbg !11184
  store i16 %conv, i16* %offset, align 2, !dbg !11180
  call void @llvm.dbg.declare(metadata i16* %blockbank, metadata !11185, metadata !DIExpression()), !dbg !11186
  %1 = load i32, i32* %target_addr.addr, align 4, !dbg !11187
  %shr1 = lshr i32 %1, 16, !dbg !11188
  %and2 = and i32 %shr1, 4095, !dbg !11189
  %conv3 = trunc i32 %and2 to i16, !dbg !11190
  store i16 %conv3, i16* %blockbank, align 2, !dbg !11186
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11191, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.declare(metadata i64* %end, metadata !11193, metadata !DIExpression()), !dbg !11194
  br label %do.body, !dbg !11195

do.body:                                          ; preds = %entry
  %2 = load i32, i32* @debug, align 4, !dbg !11196
  %cmp = icmp uge i32 %2, 1, !dbg !11196
  br i1 %cmp, label %if.then, label %if.end, !dbg !11199

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.bl_direct_cmd, i64 0, i64 0)) #8, !dbg !11196
  br label %if.end, !dbg !11196

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11199

do.end:                                           ; preds = %if.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11200
  %mutex = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 6, !dbg !11201
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !11202
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11203
  %call5 = call i32 @write16(%struct.drxk_state* %4, i32 4718609, i16 zeroext 0) #9, !dbg !11204
  store i32 %call5, i32* %status, align 4, !dbg !11205
  %5 = load i32, i32* %status, align 4, !dbg !11206
  %cmp6 = icmp slt i32 %5, 0, !dbg !11208
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !11209

if.then8:                                         ; preds = %do.end
  br label %error, !dbg !11210

if.end9:                                          ; preds = %do.end
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11211
  %7 = load i16, i16* %blockbank, align 2, !dbg !11212
  %call10 = call i32 @write16(%struct.drxk_state* %6, i32 4718612, i16 zeroext %7) #9, !dbg !11213
  store i32 %call10, i32* %status, align 4, !dbg !11214
  %8 = load i32, i32* %status, align 4, !dbg !11215
  %cmp11 = icmp slt i32 %8, 0, !dbg !11217
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !11218

if.then13:                                        ; preds = %if.end9
  br label %error, !dbg !11219

if.end14:                                         ; preds = %if.end9
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11220
  %10 = load i16, i16* %offset, align 2, !dbg !11221
  %call15 = call i32 @write16(%struct.drxk_state* %9, i32 4718613, i16 zeroext %10) #9, !dbg !11222
  store i32 %call15, i32* %status, align 4, !dbg !11223
  %11 = load i32, i32* %status, align 4, !dbg !11224
  %cmp16 = icmp slt i32 %11, 0, !dbg !11226
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !11227

if.then18:                                        ; preds = %if.end14
  br label %error, !dbg !11228

if.end19:                                         ; preds = %if.end14
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11229
  %13 = load i16, i16* %rom_offset.addr, align 2, !dbg !11230
  %call20 = call i32 @write16(%struct.drxk_state* %12, i32 4718614, i16 zeroext %13) #9, !dbg !11231
  store i32 %call20, i32* %status, align 4, !dbg !11232
  %14 = load i32, i32* %status, align 4, !dbg !11233
  %cmp21 = icmp slt i32 %14, 0, !dbg !11235
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !11236

if.then23:                                        ; preds = %if.end19
  br label %error, !dbg !11237

if.end24:                                         ; preds = %if.end19
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11238
  %16 = load i16, i16* %nr_of_elements.addr, align 2, !dbg !11239
  %call25 = call i32 @write16(%struct.drxk_state* %15, i32 4718615, i16 zeroext %16) #9, !dbg !11240
  store i32 %call25, i32* %status, align 4, !dbg !11241
  %17 = load i32, i32* %status, align 4, !dbg !11242
  %cmp26 = icmp slt i32 %17, 0, !dbg !11244
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !11245

if.then28:                                        ; preds = %if.end24
  br label %error, !dbg !11246

if.end29:                                         ; preds = %if.end24
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11247
  %call30 = call i32 @write16(%struct.drxk_state* %18, i32 4718610, i16 zeroext 1) #9, !dbg !11248
  store i32 %call30, i32* %status, align 4, !dbg !11249
  %19 = load i32, i32* %status, align 4, !dbg !11250
  %cmp31 = icmp slt i32 %19, 0, !dbg !11252
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !11253

if.then33:                                        ; preds = %if.end29
  br label %error, !dbg !11254

if.end34:                                         ; preds = %if.end29
  %20 = load volatile i64, i64* @jiffies, align 8, !dbg !11255
  %21 = load i32, i32* %time_out.addr, align 4, !dbg !11256
  store i32 %21, i32* %m.addr.i, align 4
  %22 = load i32, i32* %m.addr.i, align 4, !dbg !11257
  %23 = call i1 @llvm.is.constant.i32(i32 %22) #10, !dbg !11258
  br i1 %23, label %if.then.i, label %if.else.i, !dbg !11259

if.then.i:                                        ; preds = %if.end34
  %24 = load i32, i32* %m.addr.i, align 4, !dbg !11260
  %cmp.i = icmp slt i32 %24, 0, !dbg !11261
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11262

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !11263
  br label %msecs_to_jiffies.exit, !dbg !11263

if.end.i:                                         ; preds = %if.then.i
  %25 = load i32, i32* %m.addr.i, align 4, !dbg !11264
  %call.i = call i64 @_msecs_to_jiffies(i32 %25) #12, !dbg !11265
  store i64 %call.i, i64* %retval.i, align 8, !dbg !11266
  br label %msecs_to_jiffies.exit, !dbg !11266

if.else.i:                                        ; preds = %if.end34
  %26 = load i32, i32* %m.addr.i, align 4, !dbg !11267
  %call2.i = call i64 @__msecs_to_jiffies(i32 %26) #12, !dbg !11268
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !11269
  br label %msecs_to_jiffies.exit, !dbg !11269

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %27 = load i64, i64* %retval.i, align 8, !dbg !11270
  %add = add i64 %20, %27, !dbg !11271
  store i64 %add, i64* %end, align 8, !dbg !11272
  br label %do.body36, !dbg !11273

do.body36:                                        ; preds = %land.end, %msecs_to_jiffies.exit
  %28 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11274
  %call37 = call i32 @read16(%struct.drxk_state* %28, i32 4718608, i16* %bl_status) #9, !dbg !11276
  store i32 %call37, i32* %status, align 4, !dbg !11277
  %29 = load i32, i32* %status, align 4, !dbg !11278
  %cmp38 = icmp slt i32 %29, 0, !dbg !11280
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !11281

if.then40:                                        ; preds = %do.body36
  br label %error, !dbg !11282

if.end41:                                         ; preds = %do.body36
  br label %do.cond, !dbg !11283

do.cond:                                          ; preds = %if.end41
  %30 = load i16, i16* %bl_status, align 2, !dbg !11284
  %conv42 = zext i16 %30 to i32, !dbg !11284
  %cmp43 = icmp eq i32 %conv42, 1, !dbg !11285
  br i1 %cmp43, label %land.rhs, label %land.end, !dbg !11286

land.rhs:                                         ; preds = %do.cond
  %31 = load volatile i64, i64* @jiffies, align 8, !dbg !11287
  %32 = load i64, i64* %end, align 8, !dbg !11287
  %sub = sub i64 %31, %32, !dbg !11287
  %cmp45 = icmp slt i64 %sub, 0, !dbg !11287
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %33 = phi i1 [ false, %do.cond ], [ %cmp45, %land.rhs ], !dbg !11288
  br i1 %33, label %do.body36, label %do.end47, !dbg !11283, !llvm.loop !11289

do.end47:                                         ; preds = %land.end
  %34 = load i16, i16* %bl_status, align 2, !dbg !11291
  %conv48 = zext i16 %34 to i32, !dbg !11291
  %cmp49 = icmp eq i32 %conv48, 1, !dbg !11293
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !11294

if.then51:                                        ; preds = %do.end47
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0)) #8, !dbg !11295
  store i32 -22, i32* %status, align 4, !dbg !11297
  br label %error2, !dbg !11298

if.end53:                                         ; preds = %do.end47
  br label %error, !dbg !11299

error:                                            ; preds = %if.end53, %if.then40, %if.then33, %if.then28, %if.then23, %if.then18, %if.then13, %if.then8
  call void @llvm.dbg.label(metadata !11300), !dbg !11301
  %35 = load i32, i32* %status, align 4, !dbg !11302
  %cmp54 = icmp slt i32 %35, 0, !dbg !11304
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !11305

if.then56:                                        ; preds = %error
  %36 = load i32, i32* %status, align 4, !dbg !11306
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.bl_direct_cmd, i64 0, i64 0)) #8, !dbg !11306
  br label %if.end58, !dbg !11306

if.end58:                                         ; preds = %if.then56, %error
  br label %error2, !dbg !11307

error2:                                           ; preds = %if.end58, %if.then51
  call void @llvm.dbg.label(metadata !11308), !dbg !11309
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11310
  %mutex59 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %37, i32 0, i32 6, !dbg !11311
  call void @mutex_unlock(%struct.mutex* %mutex59) #9, !dbg !11312
  %38 = load i32, i32* %status, align 4, !dbg !11313
  ret i32 %38, !dbg !11314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_agc(%struct.drxk_state* %state, i1 zeroext %is_dtv) #0 !dbg !11315 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %is_dtv.addr = alloca i8, align 1
  %ingain_tgt = alloca i16, align 2
  %ingain_tgt_min = alloca i16, align 2
  %ingain_tgt_max = alloca i16, align 2
  %clp_cyclen = alloca i16, align 2
  %clp_sum_min = alloca i16, align 2
  %clp_dir_to = alloca i16, align 2
  %sns_sum_min = alloca i16, align 2
  %sns_sum_max = alloca i16, align 2
  %clp_sum_max = alloca i16, align 2
  %sns_dir_to = alloca i16, align 2
  %ki_innergain_min = alloca i16, align 2
  %if_iaccu_hi_tgt = alloca i16, align 2
  %if_iaccu_hi_tgt_min = alloca i16, align 2
  %if_iaccu_hi_tgt_max = alloca i16, align 2
  %data = alloca i16, align 2
  %fast_clp_ctrl_delay = alloca i16, align 2
  %clp_ctrl_mode = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !11316, metadata !DIExpression()), !dbg !11317
  %frombool = zext i1 %is_dtv to i8
  store i8 %frombool, i8* %is_dtv.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_dtv.addr, metadata !11318, metadata !DIExpression()), !dbg !11319
  call void @llvm.dbg.declare(metadata i16* %ingain_tgt, metadata !11320, metadata !DIExpression()), !dbg !11321
  store i16 0, i16* %ingain_tgt, align 2, !dbg !11321
  call void @llvm.dbg.declare(metadata i16* %ingain_tgt_min, metadata !11322, metadata !DIExpression()), !dbg !11323
  store i16 0, i16* %ingain_tgt_min, align 2, !dbg !11323
  call void @llvm.dbg.declare(metadata i16* %ingain_tgt_max, metadata !11324, metadata !DIExpression()), !dbg !11325
  store i16 0, i16* %ingain_tgt_max, align 2, !dbg !11325
  call void @llvm.dbg.declare(metadata i16* %clp_cyclen, metadata !11326, metadata !DIExpression()), !dbg !11327
  store i16 0, i16* %clp_cyclen, align 2, !dbg !11327
  call void @llvm.dbg.declare(metadata i16* %clp_sum_min, metadata !11328, metadata !DIExpression()), !dbg !11329
  store i16 0, i16* %clp_sum_min, align 2, !dbg !11329
  call void @llvm.dbg.declare(metadata i16* %clp_dir_to, metadata !11330, metadata !DIExpression()), !dbg !11331
  store i16 0, i16* %clp_dir_to, align 2, !dbg !11331
  call void @llvm.dbg.declare(metadata i16* %sns_sum_min, metadata !11332, metadata !DIExpression()), !dbg !11333
  store i16 0, i16* %sns_sum_min, align 2, !dbg !11333
  call void @llvm.dbg.declare(metadata i16* %sns_sum_max, metadata !11334, metadata !DIExpression()), !dbg !11335
  store i16 0, i16* %sns_sum_max, align 2, !dbg !11335
  call void @llvm.dbg.declare(metadata i16* %clp_sum_max, metadata !11336, metadata !DIExpression()), !dbg !11337
  store i16 0, i16* %clp_sum_max, align 2, !dbg !11337
  call void @llvm.dbg.declare(metadata i16* %sns_dir_to, metadata !11338, metadata !DIExpression()), !dbg !11339
  store i16 0, i16* %sns_dir_to, align 2, !dbg !11339
  call void @llvm.dbg.declare(metadata i16* %ki_innergain_min, metadata !11340, metadata !DIExpression()), !dbg !11341
  store i16 0, i16* %ki_innergain_min, align 2, !dbg !11341
  call void @llvm.dbg.declare(metadata i16* %if_iaccu_hi_tgt, metadata !11342, metadata !DIExpression()), !dbg !11343
  store i16 0, i16* %if_iaccu_hi_tgt, align 2, !dbg !11343
  call void @llvm.dbg.declare(metadata i16* %if_iaccu_hi_tgt_min, metadata !11344, metadata !DIExpression()), !dbg !11345
  store i16 0, i16* %if_iaccu_hi_tgt_min, align 2, !dbg !11345
  call void @llvm.dbg.declare(metadata i16* %if_iaccu_hi_tgt_max, metadata !11346, metadata !DIExpression()), !dbg !11347
  store i16 0, i16* %if_iaccu_hi_tgt_max, align 2, !dbg !11347
  call void @llvm.dbg.declare(metadata i16* %data, metadata !11348, metadata !DIExpression()), !dbg !11349
  store i16 0, i16* %data, align 2, !dbg !11349
  call void @llvm.dbg.declare(metadata i16* %fast_clp_ctrl_delay, metadata !11350, metadata !DIExpression()), !dbg !11351
  store i16 0, i16* %fast_clp_ctrl_delay, align 2, !dbg !11351
  call void @llvm.dbg.declare(metadata i16* %clp_ctrl_mode, metadata !11352, metadata !DIExpression()), !dbg !11353
  store i16 0, i16* %clp_ctrl_mode, align 2, !dbg !11353
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11354, metadata !DIExpression()), !dbg !11355
  store i32 0, i32* %status, align 4, !dbg !11355
  br label %do.body, !dbg !11356

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !11357
  %cmp = icmp uge i32 %0, 1, !dbg !11357
  br i1 %cmp, label %if.then, label %if.end, !dbg !11360

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.init_agc, i64 0, i64 0)) #8, !dbg !11357
  br label %if.end, !dbg !11357

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11360

do.end:                                           ; preds = %if.end
  store i16 1023, i16* %sns_sum_max, align 2, !dbg !11361
  store i16 2047, i16* %if_iaccu_hi_tgt_min, align 2, !dbg !11362
  store i16 500, i16* %clp_cyclen, align 2, !dbg !11363
  store i16 1023, i16* %clp_sum_max, align 2, !dbg !11364
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11365
  %call1 = call zeroext i1 @is_qam(%struct.drxk_state* %1) #9, !dbg !11367
  br i1 %call1, label %if.end4, label %if.then2, !dbg !11368

if.then2:                                         ; preds = %do.end
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11369
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 28, !dbg !11369
  %3 = load i32, i32* %m_operation_mode, align 8, !dbg !11369
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.init_agc, i64 0, i64 0), i32 %3) #8, !dbg !11369
  store i32 -22, i32* %retval, align 4, !dbg !11371
  br label %return, !dbg !11371

if.end4:                                          ; preds = %do.end
  store i16 8, i16* %clp_sum_min, align 2, !dbg !11372
  store i16 -9, i16* %clp_dir_to, align 2, !dbg !11373
  store i16 0, i16* %clp_ctrl_mode, align 2, !dbg !11374
  store i16 8, i16* %sns_sum_min, align 2, !dbg !11375
  store i16 -9, i16* %sns_dir_to, align 2, !dbg !11376
  store i16 -1030, i16* %ki_innergain_min, align 2, !dbg !11377
  store i16 9088, i16* %if_iaccu_hi_tgt_max, align 2, !dbg !11378
  store i16 9088, i16* %if_iaccu_hi_tgt, align 2, !dbg !11379
  store i16 1297, i16* %ingain_tgt_min, align 2, !dbg !11380
  store i16 1297, i16* %ingain_tgt, align 2, !dbg !11381
  store i16 5119, i16* %ingain_tgt_max, align 2, !dbg !11382
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11383
  %m_qam_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 75, !dbg !11384
  %fast_clip_ctrl_delay = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %m_qam_if_agc_cfg, i32 0, i32 8, !dbg !11385
  %5 = load i16, i16* %fast_clip_ctrl_delay, align 2, !dbg !11385
  store i16 %5, i16* %fast_clp_ctrl_delay, align 2, !dbg !11386
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11387
  %7 = load i16, i16* %fast_clp_ctrl_delay, align 2, !dbg !11388
  %call5 = call i32 @write16(%struct.drxk_state* %6, i32 8593386, i16 zeroext %7) #9, !dbg !11389
  store i32 %call5, i32* %status, align 4, !dbg !11390
  %8 = load i32, i32* %status, align 4, !dbg !11391
  %cmp6 = icmp slt i32 %8, 0, !dbg !11393
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11394

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !11395

if.end8:                                          ; preds = %if.end4
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11396
  %10 = load i16, i16* %clp_ctrl_mode, align 2, !dbg !11397
  %call9 = call i32 @write16(%struct.drxk_state* %9, i32 8593096, i16 zeroext %10) #9, !dbg !11398
  store i32 %call9, i32* %status, align 4, !dbg !11399
  %11 = load i32, i32* %status, align 4, !dbg !11400
  %cmp10 = icmp slt i32 %11, 0, !dbg !11402
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11403

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !11404

if.end12:                                         ; preds = %if.end8
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11405
  %13 = load i16, i16* %ingain_tgt, align 2, !dbg !11406
  %call13 = call i32 @write16(%struct.drxk_state* %12, i32 8593213, i16 zeroext %13) #9, !dbg !11407
  store i32 %call13, i32* %status, align 4, !dbg !11408
  %14 = load i32, i32* %status, align 4, !dbg !11409
  %cmp14 = icmp slt i32 %14, 0, !dbg !11411
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !11412

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !11413

if.end16:                                         ; preds = %if.end12
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11414
  %16 = load i16, i16* %ingain_tgt_min, align 2, !dbg !11415
  %call17 = call i32 @write16(%struct.drxk_state* %15, i32 8593214, i16 zeroext %16) #9, !dbg !11416
  store i32 %call17, i32* %status, align 4, !dbg !11417
  %17 = load i32, i32* %status, align 4, !dbg !11418
  %cmp18 = icmp slt i32 %17, 0, !dbg !11420
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !11421

if.then19:                                        ; preds = %if.end16
  br label %error, !dbg !11422

if.end20:                                         ; preds = %if.end16
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11423
  %19 = load i16, i16* %ingain_tgt_max, align 2, !dbg !11424
  %call21 = call i32 @write16(%struct.drxk_state* %18, i32 8593215, i16 zeroext %19) #9, !dbg !11425
  store i32 %call21, i32* %status, align 4, !dbg !11426
  %20 = load i32, i32* %status, align 4, !dbg !11427
  %cmp22 = icmp slt i32 %20, 0, !dbg !11429
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !11430

if.then23:                                        ; preds = %if.end20
  br label %error, !dbg !11431

if.end24:                                         ; preds = %if.end20
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11432
  %22 = load i16, i16* %if_iaccu_hi_tgt_min, align 2, !dbg !11433
  %call25 = call i32 @write16(%struct.drxk_state* %21, i32 8593219, i16 zeroext %22) #9, !dbg !11434
  store i32 %call25, i32* %status, align 4, !dbg !11435
  %23 = load i32, i32* %status, align 4, !dbg !11436
  %cmp26 = icmp slt i32 %23, 0, !dbg !11438
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !11439

if.then27:                                        ; preds = %if.end24
  br label %error, !dbg !11440

if.end28:                                         ; preds = %if.end24
  %24 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11441
  %25 = load i16, i16* %if_iaccu_hi_tgt_max, align 2, !dbg !11442
  %call29 = call i32 @write16(%struct.drxk_state* %24, i32 8593220, i16 zeroext %25) #9, !dbg !11443
  store i32 %call29, i32* %status, align 4, !dbg !11444
  %26 = load i32, i32* %status, align 4, !dbg !11445
  %cmp30 = icmp slt i32 %26, 0, !dbg !11447
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !11448

if.then31:                                        ; preds = %if.end28
  br label %error, !dbg !11449

if.end32:                                         ; preds = %if.end28
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11450
  %call33 = call i32 @write16(%struct.drxk_state* %27, i32 8593216, i16 zeroext 0) #9, !dbg !11451
  store i32 %call33, i32* %status, align 4, !dbg !11452
  %28 = load i32, i32* %status, align 4, !dbg !11453
  %cmp34 = icmp slt i32 %28, 0, !dbg !11455
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !11456

if.then35:                                        ; preds = %if.end32
  br label %error, !dbg !11457

if.end36:                                         ; preds = %if.end32
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11458
  %call37 = call i32 @write16(%struct.drxk_state* %29, i32 8593217, i16 zeroext 0) #9, !dbg !11459
  store i32 %call37, i32* %status, align 4, !dbg !11460
  %30 = load i32, i32* %status, align 4, !dbg !11461
  %cmp38 = icmp slt i32 %30, 0, !dbg !11463
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !11464

if.then39:                                        ; preds = %if.end36
  br label %error, !dbg !11465

if.end40:                                         ; preds = %if.end36
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11466
  %call41 = call i32 @write16(%struct.drxk_state* %31, i32 8593221, i16 zeroext 0) #9, !dbg !11467
  store i32 %call41, i32* %status, align 4, !dbg !11468
  %32 = load i32, i32* %status, align 4, !dbg !11469
  %cmp42 = icmp slt i32 %32, 0, !dbg !11471
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !11472

if.then43:                                        ; preds = %if.end40
  br label %error, !dbg !11473

if.end44:                                         ; preds = %if.end40
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11474
  %call45 = call i32 @write16(%struct.drxk_state* %33, i32 8593222, i16 zeroext 0) #9, !dbg !11475
  store i32 %call45, i32* %status, align 4, !dbg !11476
  %34 = load i32, i32* %status, align 4, !dbg !11477
  %cmp46 = icmp slt i32 %34, 0, !dbg !11479
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !11480

if.then47:                                        ; preds = %if.end44
  br label %error, !dbg !11481

if.end48:                                         ; preds = %if.end44
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11482
  %36 = load i16, i16* %clp_sum_max, align 2, !dbg !11483
  %call49 = call i32 @write16(%struct.drxk_state* %35, i32 8593199, i16 zeroext %36) #9, !dbg !11484
  store i32 %call49, i32* %status, align 4, !dbg !11485
  %37 = load i32, i32* %status, align 4, !dbg !11486
  %cmp50 = icmp slt i32 %37, 0, !dbg !11488
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !11489

if.then51:                                        ; preds = %if.end48
  br label %error, !dbg !11490

if.end52:                                         ; preds = %if.end48
  %38 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11491
  %39 = load i16, i16* %sns_sum_max, align 2, !dbg !11492
  %call53 = call i32 @write16(%struct.drxk_state* %38, i32 8593207, i16 zeroext %39) #9, !dbg !11493
  store i32 %call53, i32* %status, align 4, !dbg !11494
  %40 = load i32, i32* %status, align 4, !dbg !11495
  %cmp54 = icmp slt i32 %40, 0, !dbg !11497
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !11498

if.then55:                                        ; preds = %if.end52
  br label %error, !dbg !11499

if.end56:                                         ; preds = %if.end52
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11500
  %42 = load i16, i16* %ki_innergain_min, align 2, !dbg !11501
  %call57 = call i32 @write16(%struct.drxk_state* %41, i32 8593191, i16 zeroext %42) #9, !dbg !11502
  store i32 %call57, i32* %status, align 4, !dbg !11503
  %43 = load i32, i32* %status, align 4, !dbg !11504
  %cmp58 = icmp slt i32 %43, 0, !dbg !11506
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !11507

if.then59:                                        ; preds = %if.end56
  br label %error, !dbg !11508

if.end60:                                         ; preds = %if.end56
  %44 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11509
  %45 = load i16, i16* %if_iaccu_hi_tgt, align 2, !dbg !11510
  %call61 = call i32 @write16(%struct.drxk_state* %44, i32 8593218, i16 zeroext %45) #9, !dbg !11511
  store i32 %call61, i32* %status, align 4, !dbg !11512
  %46 = load i32, i32* %status, align 4, !dbg !11513
  %cmp62 = icmp slt i32 %46, 0, !dbg !11515
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !11516

if.then63:                                        ; preds = %if.end60
  br label %error, !dbg !11517

if.end64:                                         ; preds = %if.end60
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11518
  %48 = load i16, i16* %clp_cyclen, align 2, !dbg !11519
  %call65 = call i32 @write16(%struct.drxk_state* %47, i32 8593200, i16 zeroext %48) #9, !dbg !11520
  store i32 %call65, i32* %status, align 4, !dbg !11521
  %49 = load i32, i32* %status, align 4, !dbg !11522
  %cmp66 = icmp slt i32 %49, 0, !dbg !11524
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !11525

if.then67:                                        ; preds = %if.end64
  br label %error, !dbg !11526

if.end68:                                         ; preds = %if.end64
  %50 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11527
  %call69 = call i32 @write16(%struct.drxk_state* %50, i32 8593177, i16 zeroext 1023) #9, !dbg !11528
  store i32 %call69, i32* %status, align 4, !dbg !11529
  %51 = load i32, i32* %status, align 4, !dbg !11530
  %cmp70 = icmp slt i32 %51, 0, !dbg !11532
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !11533

if.then71:                                        ; preds = %if.end68
  br label %error, !dbg !11534

if.end72:                                         ; preds = %if.end68
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11535
  %call73 = call i32 @write16(%struct.drxk_state* %52, i32 8593178, i16 zeroext -1023) #9, !dbg !11536
  store i32 %call73, i32* %status, align 4, !dbg !11537
  %53 = load i32, i32* %status, align 4, !dbg !11538
  %cmp74 = icmp slt i32 %53, 0, !dbg !11540
  br i1 %cmp74, label %if.then75, label %if.end76, !dbg !11541

if.then75:                                        ; preds = %if.end72
  br label %error, !dbg !11542

if.end76:                                         ; preds = %if.end72
  %54 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11543
  %call77 = call i32 @write16(%struct.drxk_state* %54, i32 8593173, i16 zeroext 50) #9, !dbg !11544
  store i32 %call77, i32* %status, align 4, !dbg !11545
  %55 = load i32, i32* %status, align 4, !dbg !11546
  %cmp78 = icmp slt i32 %55, 0, !dbg !11548
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !11549

if.then79:                                        ; preds = %if.end76
  br label %error, !dbg !11550

if.end80:                                         ; preds = %if.end76
  %56 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11551
  %call81 = call i32 @write16(%struct.drxk_state* %56, i32 8593194, i16 zeroext 20) #9, !dbg !11552
  store i32 %call81, i32* %status, align 4, !dbg !11553
  %57 = load i32, i32* %status, align 4, !dbg !11554
  %cmp82 = icmp slt i32 %57, 0, !dbg !11556
  br i1 %cmp82, label %if.then83, label %if.end84, !dbg !11557

if.then83:                                        ; preds = %if.end80
  br label %error, !dbg !11558

if.end84:                                         ; preds = %if.end80
  %58 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11559
  %59 = load i16, i16* %clp_sum_min, align 2, !dbg !11560
  %call85 = call i32 @write16(%struct.drxk_state* %58, i32 8593198, i16 zeroext %59) #9, !dbg !11561
  store i32 %call85, i32* %status, align 4, !dbg !11562
  %60 = load i32, i32* %status, align 4, !dbg !11563
  %cmp86 = icmp slt i32 %60, 0, !dbg !11565
  br i1 %cmp86, label %if.then87, label %if.end88, !dbg !11566

if.then87:                                        ; preds = %if.end84
  br label %error, !dbg !11567

if.end88:                                         ; preds = %if.end84
  %61 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11568
  %62 = load i16, i16* %sns_sum_min, align 2, !dbg !11569
  %call89 = call i32 @write16(%struct.drxk_state* %61, i32 8593206, i16 zeroext %62) #9, !dbg !11570
  store i32 %call89, i32* %status, align 4, !dbg !11571
  %63 = load i32, i32* %status, align 4, !dbg !11572
  %cmp90 = icmp slt i32 %63, 0, !dbg !11574
  br i1 %cmp90, label %if.then91, label %if.end92, !dbg !11575

if.then91:                                        ; preds = %if.end88
  br label %error, !dbg !11576

if.end92:                                         ; preds = %if.end88
  %64 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11577
  %65 = load i16, i16* %clp_dir_to, align 2, !dbg !11578
  %call93 = call i32 @write16(%struct.drxk_state* %64, i32 8593202, i16 zeroext %65) #9, !dbg !11579
  store i32 %call93, i32* %status, align 4, !dbg !11580
  %66 = load i32, i32* %status, align 4, !dbg !11581
  %cmp94 = icmp slt i32 %66, 0, !dbg !11583
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !11584

if.then95:                                        ; preds = %if.end92
  br label %error, !dbg !11585

if.end96:                                         ; preds = %if.end92
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11586
  %68 = load i16, i16* %sns_dir_to, align 2, !dbg !11587
  %call97 = call i32 @write16(%struct.drxk_state* %67, i32 8593209, i16 zeroext %68) #9, !dbg !11588
  store i32 %call97, i32* %status, align 4, !dbg !11589
  %69 = load i32, i32* %status, align 4, !dbg !11590
  %cmp98 = icmp slt i32 %69, 0, !dbg !11592
  br i1 %cmp98, label %if.then99, label %if.end100, !dbg !11593

if.then99:                                        ; preds = %if.end96
  br label %error, !dbg !11594

if.end100:                                        ; preds = %if.end96
  %70 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11595
  %call101 = call i32 @write16(%struct.drxk_state* %70, i32 8593192, i16 zeroext 32767) #9, !dbg !11596
  store i32 %call101, i32* %status, align 4, !dbg !11597
  %71 = load i32, i32* %status, align 4, !dbg !11598
  %cmp102 = icmp slt i32 %71, 0, !dbg !11600
  br i1 %cmp102, label %if.then103, label %if.end104, !dbg !11601

if.then103:                                       ; preds = %if.end100
  br label %error, !dbg !11602

if.end104:                                        ; preds = %if.end100
  %72 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11603
  %call105 = call i32 @write16(%struct.drxk_state* %72, i32 8593193, i16 zeroext 0) #9, !dbg !11604
  store i32 %call105, i32* %status, align 4, !dbg !11605
  %73 = load i32, i32* %status, align 4, !dbg !11606
  %cmp106 = icmp slt i32 %73, 0, !dbg !11608
  br i1 %cmp106, label %if.then107, label %if.end108, !dbg !11609

if.then107:                                       ; preds = %if.end104
  br label %error, !dbg !11610

if.end108:                                        ; preds = %if.end104
  %74 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11611
  %call109 = call i32 @write16(%struct.drxk_state* %74, i32 8593195, i16 zeroext 279) #9, !dbg !11612
  store i32 %call109, i32* %status, align 4, !dbg !11613
  %75 = load i32, i32* %status, align 4, !dbg !11614
  %cmp110 = icmp slt i32 %75, 0, !dbg !11616
  br i1 %cmp110, label %if.then111, label %if.end112, !dbg !11617

if.then111:                                       ; preds = %if.end108
  br label %error, !dbg !11618

if.end112:                                        ; preds = %if.end108
  %76 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11619
  %call113 = call i32 @write16(%struct.drxk_state* %76, i32 8593196, i16 zeroext 1623) #9, !dbg !11620
  store i32 %call113, i32* %status, align 4, !dbg !11621
  %77 = load i32, i32* %status, align 4, !dbg !11622
  %cmp114 = icmp slt i32 %77, 0, !dbg !11624
  br i1 %cmp114, label %if.then115, label %if.end116, !dbg !11625

if.then115:                                       ; preds = %if.end112
  br label %error, !dbg !11626

if.end116:                                        ; preds = %if.end112
  %78 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11627
  %call117 = call i32 @write16(%struct.drxk_state* %78, i32 8593197, i16 zeroext 0) #9, !dbg !11628
  store i32 %call117, i32* %status, align 4, !dbg !11629
  %79 = load i32, i32* %status, align 4, !dbg !11630
  %cmp118 = icmp slt i32 %79, 0, !dbg !11632
  br i1 %cmp118, label %if.then119, label %if.end120, !dbg !11633

if.then119:                                       ; preds = %if.end116
  br label %error, !dbg !11634

if.end120:                                        ; preds = %if.end116
  %80 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11635
  %call121 = call i32 @write16(%struct.drxk_state* %80, i32 8593201, i16 zeroext 0) #9, !dbg !11636
  store i32 %call121, i32* %status, align 4, !dbg !11637
  %81 = load i32, i32* %status, align 4, !dbg !11638
  %cmp122 = icmp slt i32 %81, 0, !dbg !11640
  br i1 %cmp122, label %if.then123, label %if.end124, !dbg !11641

if.then123:                                       ; preds = %if.end120
  br label %error, !dbg !11642

if.end124:                                        ; preds = %if.end120
  %82 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11643
  %call125 = call i32 @write16(%struct.drxk_state* %82, i32 8593203, i16 zeroext 0) #9, !dbg !11644
  store i32 %call125, i32* %status, align 4, !dbg !11645
  %83 = load i32, i32* %status, align 4, !dbg !11646
  %cmp126 = icmp slt i32 %83, 0, !dbg !11648
  br i1 %cmp126, label %if.then127, label %if.end128, !dbg !11649

if.then127:                                       ; preds = %if.end124
  br label %error, !dbg !11650

if.end128:                                        ; preds = %if.end124
  %84 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11651
  %call129 = call i32 @write16(%struct.drxk_state* %84, i32 8593204, i16 zeroext 1) #9, !dbg !11652
  store i32 %call129, i32* %status, align 4, !dbg !11653
  %85 = load i32, i32* %status, align 4, !dbg !11654
  %cmp130 = icmp slt i32 %85, 0, !dbg !11656
  br i1 %cmp130, label %if.then131, label %if.end132, !dbg !11657

if.then131:                                       ; preds = %if.end128
  br label %error, !dbg !11658

if.end132:                                        ; preds = %if.end128
  %86 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11659
  %call133 = call i32 @write16(%struct.drxk_state* %86, i32 8593205, i16 zeroext 0) #9, !dbg !11660
  store i32 %call133, i32* %status, align 4, !dbg !11661
  %87 = load i32, i32* %status, align 4, !dbg !11662
  %cmp134 = icmp slt i32 %87, 0, !dbg !11664
  br i1 %cmp134, label %if.then135, label %if.end136, !dbg !11665

if.then135:                                       ; preds = %if.end132
  br label %error, !dbg !11666

if.end136:                                        ; preds = %if.end132
  %88 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11667
  %call137 = call i32 @write16(%struct.drxk_state* %88, i32 8593208, i16 zeroext 0) #9, !dbg !11668
  store i32 %call137, i32* %status, align 4, !dbg !11669
  %89 = load i32, i32* %status, align 4, !dbg !11670
  %cmp138 = icmp slt i32 %89, 0, !dbg !11672
  br i1 %cmp138, label %if.then139, label %if.end140, !dbg !11673

if.then139:                                       ; preds = %if.end136
  br label %error, !dbg !11674

if.end140:                                        ; preds = %if.end136
  %90 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11675
  %call141 = call i32 @write16(%struct.drxk_state* %90, i32 8593210, i16 zeroext 0) #9, !dbg !11676
  store i32 %call141, i32* %status, align 4, !dbg !11677
  %91 = load i32, i32* %status, align 4, !dbg !11678
  %cmp142 = icmp slt i32 %91, 0, !dbg !11680
  br i1 %cmp142, label %if.then143, label %if.end144, !dbg !11681

if.then143:                                       ; preds = %if.end140
  br label %error, !dbg !11682

if.end144:                                        ; preds = %if.end140
  %92 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11683
  %call145 = call i32 @write16(%struct.drxk_state* %92, i32 8593211, i16 zeroext 1) #9, !dbg !11684
  store i32 %call145, i32* %status, align 4, !dbg !11685
  %93 = load i32, i32* %status, align 4, !dbg !11686
  %cmp146 = icmp slt i32 %93, 0, !dbg !11688
  br i1 %cmp146, label %if.then147, label %if.end148, !dbg !11689

if.then147:                                       ; preds = %if.end144
  br label %error, !dbg !11690

if.end148:                                        ; preds = %if.end144
  %94 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11691
  %call149 = call i32 @write16(%struct.drxk_state* %94, i32 8593176, i16 zeroext 500) #9, !dbg !11692
  store i32 %call149, i32* %status, align 4, !dbg !11693
  %95 = load i32, i32* %status, align 4, !dbg !11694
  %cmp150 = icmp slt i32 %95, 0, !dbg !11696
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !11697

if.then151:                                       ; preds = %if.end148
  br label %error, !dbg !11698

if.end152:                                        ; preds = %if.end148
  %96 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11699
  %call153 = call i32 @write16(%struct.drxk_state* %96, i32 8593175, i16 zeroext 500) #9, !dbg !11700
  store i32 %call153, i32* %status, align 4, !dbg !11701
  %97 = load i32, i32* %status, align 4, !dbg !11702
  %cmp154 = icmp slt i32 %97, 0, !dbg !11704
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !11705

if.then155:                                       ; preds = %if.end152
  br label %error, !dbg !11706

if.end156:                                        ; preds = %if.end152
  %98 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11707
  %call157 = call i32 @read16(%struct.drxk_state* %98, i32 8593189, i16* %data) #9, !dbg !11708
  store i32 %call157, i32* %status, align 4, !dbg !11709
  %99 = load i32, i32* %status, align 4, !dbg !11710
  %cmp158 = icmp slt i32 %99, 0, !dbg !11712
  br i1 %cmp158, label %if.then159, label %if.end160, !dbg !11713

if.then159:                                       ; preds = %if.end156
  br label %error, !dbg !11714

if.end160:                                        ; preds = %if.end156
  store i16 1623, i16* %data, align 2, !dbg !11715
  %100 = load i16, i16* %data, align 2, !dbg !11716
  %conv = zext i16 %100 to i32, !dbg !11716
  %and = and i32 %conv, -241, !dbg !11716
  %conv161 = trunc i32 %and to i16, !dbg !11716
  store i16 %conv161, i16* %data, align 2, !dbg !11716
  %101 = load i16, i16* %data, align 2, !dbg !11717
  %conv162 = zext i16 %101 to i32, !dbg !11717
  %or = or i32 %conv162, 48, !dbg !11717
  %conv163 = trunc i32 %or to i16, !dbg !11717
  store i16 %conv163, i16* %data, align 2, !dbg !11717
  %102 = load i16, i16* %data, align 2, !dbg !11718
  %conv164 = zext i16 %102 to i32, !dbg !11718
  %and165 = and i32 %conv164, -3841, !dbg !11718
  %conv166 = trunc i32 %and165 to i16, !dbg !11718
  store i16 %conv166, i16* %data, align 2, !dbg !11718
  %103 = load i16, i16* %data, align 2, !dbg !11719
  %conv167 = zext i16 %103 to i32, !dbg !11719
  %or168 = or i32 %conv167, 1024, !dbg !11719
  %conv169 = trunc i32 %or168 to i16, !dbg !11719
  store i16 %conv169, i16* %data, align 2, !dbg !11719
  %104 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11720
  %105 = load i16, i16* %data, align 2, !dbg !11721
  %call170 = call i32 @write16(%struct.drxk_state* %104, i32 8593189, i16 zeroext %105) #9, !dbg !11722
  store i32 %call170, i32* %status, align 4, !dbg !11723
  br label %error, !dbg !11724

error:                                            ; preds = %if.end160, %if.then159, %if.then155, %if.then151, %if.then147, %if.then143, %if.then139, %if.then135, %if.then131, %if.then127, %if.then123, %if.then119, %if.then115, %if.then111, %if.then107, %if.then103, %if.then99, %if.then95, %if.then91, %if.then87, %if.then83, %if.then79, %if.then75, %if.then71, %if.then67, %if.then63, %if.then59, %if.then55, %if.then51, %if.then47, %if.then43, %if.then39, %if.then35, %if.then31, %if.then27, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7
  call void @llvm.dbg.label(metadata !11725), !dbg !11726
  %106 = load i32, i32* %status, align 4, !dbg !11727
  %cmp171 = icmp slt i32 %106, 0, !dbg !11729
  br i1 %cmp171, label %if.then173, label %if.end175, !dbg !11730

if.then173:                                       ; preds = %error
  %107 = load i32, i32* %status, align 4, !dbg !11731
  %call174 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %107, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.init_agc, i64 0, i64 0)) #8, !dbg !11731
  br label %if.end175, !dbg !11731

if.end175:                                        ; preds = %if.then173, %error
  %108 = load i32, i32* %status, align 4, !dbg !11732
  store i32 %108, i32* %retval, align 4, !dbg !11733
  br label %return, !dbg !11733

return:                                           ; preds = %if.end175, %if.then2
  %109 = load i32, i32* %retval, align 4, !dbg !11734
  ret i32 %109, !dbg !11734
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_qam(%struct.drxk_state* %state, i16 zeroext %intermediate_freqk_hz, i32 %tuner_freq_offset) #0 !dbg !11735 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %intermediate_freqk_hz.addr = alloca i16, align 2
  %tuner_freq_offset.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %cmd_result = alloca i16, align 2
  %qam_demod_param_count = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !11738, metadata !DIExpression()), !dbg !11739
  store i16 %intermediate_freqk_hz, i16* %intermediate_freqk_hz.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %intermediate_freqk_hz.addr, metadata !11740, metadata !DIExpression()), !dbg !11741
  store i32 %tuner_freq_offset, i32* %tuner_freq_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tuner_freq_offset.addr, metadata !11742, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11744, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.declare(metadata i16* %cmd_result, metadata !11746, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.declare(metadata i32* %qam_demod_param_count, metadata !11748, metadata !DIExpression()), !dbg !11749
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11750
  %qam_demod_parameter_count = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %0, i32 0, i32 110, !dbg !11751
  %1 = load i32, i32* %qam_demod_parameter_count, align 8, !dbg !11751
  store i32 %1, i32* %qam_demod_param_count, align 4, !dbg !11749
  br label %do.body, !dbg !11752

do.body:                                          ; preds = %entry
  %2 = load i32, i32* @debug, align 4, !dbg !11753
  %cmp = icmp uge i32 %2, 1, !dbg !11753
  br i1 %cmp, label %if.then, label %if.end, !dbg !11756

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.set_qam, i64 0, i64 0)) #8, !dbg !11753
  br label %if.end, !dbg !11753

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !11756

do.end:                                           ; preds = %if.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11757
  %call1 = call i32 @write16(%struct.drxk_state* %3, i32 29491200, i16 zeroext 0) #9, !dbg !11758
  store i32 %call1, i32* %status, align 4, !dbg !11759
  %4 = load i32, i32* %status, align 4, !dbg !11760
  %cmp2 = icmp slt i32 %4, 0, !dbg !11762
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11763

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !11764

if.end4:                                          ; preds = %do.end
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11765
  %call5 = call i32 @write16(%struct.drxk_state* %5, i32 29556736, i16 zeroext 0) #9, !dbg !11766
  store i32 %call5, i32* %status, align 4, !dbg !11767
  %6 = load i32, i32* %status, align 4, !dbg !11768
  %cmp6 = icmp slt i32 %6, 0, !dbg !11770
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11771

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !11772

if.end8:                                          ; preds = %if.end4
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11773
  %call9 = call i32 @qam_reset_qam(%struct.drxk_state* %7) #9, !dbg !11774
  store i32 %call9, i32* %status, align 4, !dbg !11775
  %8 = load i32, i32* %status, align 4, !dbg !11776
  %cmp10 = icmp slt i32 %8, 0, !dbg !11778
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11779

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !11780

if.end12:                                         ; preds = %if.end8
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11781
  %call13 = call i32 @qam_set_symbolrate(%struct.drxk_state* %9) #9, !dbg !11782
  store i32 %call13, i32* %status, align 4, !dbg !11783
  %10 = load i32, i32* %status, align 4, !dbg !11784
  %cmp14 = icmp slt i32 %10, 0, !dbg !11786
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !11787

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !11788

if.end16:                                         ; preds = %if.end12
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11789
  %props = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %11, i32 0, i32 1, !dbg !11790
  %modulation = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props, i32 0, i32 1, !dbg !11791
  %12 = load i32, i32* %modulation, align 4, !dbg !11791
  switch i32 %12, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb17
    i32 3, label %sw.bb17
    i32 1, label %sw.bb19
    i32 2, label %sw.bb21
    i32 4, label %sw.bb23
  ], !dbg !11792

sw.bb:                                            ; preds = %if.end16
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11793
  %m_constellation = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %13, i32 0, i32 72, !dbg !11795
  store i32 7, i32* %m_constellation, align 4, !dbg !11796
  br label %sw.epilog, !dbg !11797

sw.bb17:                                          ; preds = %if.end16, %if.end16
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11798
  %m_constellation18 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %14, i32 0, i32 72, !dbg !11799
  store i32 5, i32* %m_constellation18, align 4, !dbg !11800
  br label %sw.epilog, !dbg !11801

sw.bb19:                                          ; preds = %if.end16
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11802
  %m_constellation20 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %15, i32 0, i32 72, !dbg !11803
  store i32 3, i32* %m_constellation20, align 4, !dbg !11804
  br label %sw.epilog, !dbg !11805

sw.bb21:                                          ; preds = %if.end16
  %16 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11806
  %m_constellation22 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %16, i32 0, i32 72, !dbg !11807
  store i32 4, i32* %m_constellation22, align 4, !dbg !11808
  br label %sw.epilog, !dbg !11809

sw.bb23:                                          ; preds = %if.end16
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11810
  %m_constellation24 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %17, i32 0, i32 72, !dbg !11811
  store i32 6, i32* %m_constellation24, align 4, !dbg !11812
  br label %sw.epilog, !dbg !11813

sw.default:                                       ; preds = %if.end16
  store i32 -22, i32* %status, align 4, !dbg !11814
  br label %sw.epilog, !dbg !11815

sw.epilog:                                        ; preds = %sw.default, %sw.bb23, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb
  %18 = load i32, i32* %status, align 4, !dbg !11816
  %cmp25 = icmp slt i32 %18, 0, !dbg !11818
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !11819

if.then26:                                        ; preds = %sw.epilog
  br label %error, !dbg !11820

if.end27:                                         ; preds = %sw.epilog
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11821
  %qam_demod_parameter_count28 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %19, i32 0, i32 110, !dbg !11823
  %20 = load i32, i32* %qam_demod_parameter_count28, align 8, !dbg !11823
  %cmp29 = icmp eq i32 %20, 4, !dbg !11824
  br i1 %cmp29, label %if.then31, label %lor.lhs.false, !dbg !11825

lor.lhs.false:                                    ; preds = %if.end27
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11826
  %qam_demod_parameter_count30 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %21, i32 0, i32 110, !dbg !11827
  %22 = load i32, i32* %qam_demod_parameter_count30, align 8, !dbg !11827
  %tobool = icmp ne i32 %22, 0, !dbg !11826
  br i1 %tobool, label %if.end33, label %if.then31, !dbg !11828

if.then31:                                        ; preds = %lor.lhs.false, %if.end27
  store i32 4, i32* %qam_demod_param_count, align 4, !dbg !11829
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11831
  %24 = load i32, i32* %qam_demod_param_count, align 4, !dbg !11832
  %call32 = call i32 @qam_demodulator_command(%struct.drxk_state* %23, i32 %24) #9, !dbg !11833
  store i32 %call32, i32* %status, align 4, !dbg !11834
  br label %if.end33, !dbg !11835

if.end33:                                         ; preds = %if.then31, %lor.lhs.false
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11836
  %qam_demod_parameter_count34 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %25, i32 0, i32 110, !dbg !11838
  %26 = load i32, i32* %qam_demod_parameter_count34, align 8, !dbg !11838
  %cmp35 = icmp eq i32 %26, 2, !dbg !11839
  br i1 %cmp35, label %if.then40, label %lor.lhs.false36, !dbg !11840

lor.lhs.false36:                                  ; preds = %if.end33
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11841
  %qam_demod_parameter_count37 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %27, i32 0, i32 110, !dbg !11842
  %28 = load i32, i32* %qam_demod_parameter_count37, align 8, !dbg !11842
  %tobool38 = icmp ne i32 %28, 0, !dbg !11841
  br i1 %tobool38, label %if.end42, label %land.lhs.true, !dbg !11843

land.lhs.true:                                    ; preds = %lor.lhs.false36
  %29 = load i32, i32* %status, align 4, !dbg !11844
  %cmp39 = icmp slt i32 %29, 0, !dbg !11845
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !11846

if.then40:                                        ; preds = %land.lhs.true, %if.end33
  store i32 2, i32* %qam_demod_param_count, align 4, !dbg !11847
  %30 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11849
  %31 = load i32, i32* %qam_demod_param_count, align 4, !dbg !11850
  %call41 = call i32 @qam_demodulator_command(%struct.drxk_state* %30, i32 %31) #9, !dbg !11851
  store i32 %call41, i32* %status, align 4, !dbg !11852
  br label %if.end42, !dbg !11853

if.end42:                                         ; preds = %if.then40, %land.lhs.true, %lor.lhs.false36
  %32 = load i32, i32* %status, align 4, !dbg !11854
  %cmp43 = icmp slt i32 %32, 0, !dbg !11856
  br i1 %cmp43, label %if.then44, label %if.else, !dbg !11857

if.then44:                                        ; preds = %if.end42
  br label %do.body45, !dbg !11858

do.body45:                                        ; preds = %if.then44
  %33 = load i32, i32* @debug, align 4, !dbg !11860
  %cmp46 = icmp uge i32 %33, 1, !dbg !11860
  br i1 %cmp46, label %if.then47, label %if.end49, !dbg !11863

if.then47:                                        ; preds = %do.body45
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.set_qam, i64 0, i64 0)) #8, !dbg !11860
  br label %if.end49, !dbg !11860

if.end49:                                         ; preds = %if.then47, %do.body45
  br label %do.end50, !dbg !11863

do.end50:                                         ; preds = %if.end49
  br label %do.body51, !dbg !11864

do.body51:                                        ; preds = %do.end50
  %34 = load i32, i32* @debug, align 4, !dbg !11865
  %cmp52 = icmp uge i32 %34, 1, !dbg !11865
  br i1 %cmp52, label %if.then53, label %if.end56, !dbg !11868

if.then53:                                        ; preds = %do.body51
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11865
  %qam_demod_parameter_count54 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %35, i32 0, i32 110, !dbg !11865
  %36 = load i32, i32* %qam_demod_parameter_count54, align 8, !dbg !11865
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11865
  %microcode_name = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %37, i32 0, i32 107, !dbg !11865
  %38 = load i8*, i8** %microcode_name, align 8, !dbg !11865
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.set_qam, i64 0, i64 0), i32 %36, i8* %38) #8, !dbg !11865
  br label %if.end56, !dbg !11865

if.end56:                                         ; preds = %if.then53, %do.body51
  br label %do.end57, !dbg !11868

do.end57:                                         ; preds = %if.end56
  br label %error, !dbg !11869

if.else:                                          ; preds = %if.end42
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11870
  %qam_demod_parameter_count58 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %39, i32 0, i32 110, !dbg !11872
  %40 = load i32, i32* %qam_demod_parameter_count58, align 8, !dbg !11872
  %tobool59 = icmp ne i32 %40, 0, !dbg !11870
  br i1 %tobool59, label %if.end68, label %if.then60, !dbg !11873

if.then60:                                        ; preds = %if.else
  br label %do.body61, !dbg !11874

do.body61:                                        ; preds = %if.then60
  %41 = load i32, i32* @debug, align 4, !dbg !11876
  %cmp62 = icmp uge i32 %41, 1, !dbg !11876
  br i1 %cmp62, label %if.then63, label %if.end65, !dbg !11879

if.then63:                                        ; preds = %do.body61
  %42 = load i32, i32* %qam_demod_param_count, align 4, !dbg !11876
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.set_qam, i64 0, i64 0), i32 %42) #8, !dbg !11876
  br label %if.end65, !dbg !11876

if.end65:                                         ; preds = %if.then63, %do.body61
  br label %do.end66, !dbg !11879

do.end66:                                         ; preds = %if.end65
  %43 = load i32, i32* %qam_demod_param_count, align 4, !dbg !11880
  %44 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11881
  %qam_demod_parameter_count67 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %44, i32 0, i32 110, !dbg !11882
  store i32 %43, i32* %qam_demod_parameter_count67, align 8, !dbg !11883
  br label %if.end68, !dbg !11884

if.end68:                                         ; preds = %do.end66, %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11885
  %46 = load i16, i16* %intermediate_freqk_hz.addr, align 2, !dbg !11886
  %47 = load i32, i32* %tuner_freq_offset.addr, align 4, !dbg !11887
  %call70 = call i32 @set_frequency_shifter(%struct.drxk_state* %45, i16 zeroext %46, i32 %47, i1 zeroext true) #9, !dbg !11888
  store i32 %call70, i32* %status, align 4, !dbg !11889
  %48 = load i32, i32* %status, align 4, !dbg !11890
  %cmp71 = icmp slt i32 %48, 0, !dbg !11892
  br i1 %cmp71, label %if.then72, label %if.end73, !dbg !11893

if.then72:                                        ; preds = %if.end69
  br label %error, !dbg !11894

if.end73:                                         ; preds = %if.end69
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11895
  %50 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11896
  %m_constellation74 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %50, i32 0, i32 72, !dbg !11897
  %51 = load i32, i32* %m_constellation74, align 4, !dbg !11897
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11898
  %props75 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %52, i32 0, i32 1, !dbg !11899
  %symbol_rate = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props75, i32 0, i32 10, !dbg !11900
  %53 = load i32, i32* %symbol_rate, align 8, !dbg !11900
  %call76 = call i32 @set_qam_measurement(%struct.drxk_state* %49, i32 %51, i32 %53) #9, !dbg !11901
  store i32 %call76, i32* %status, align 4, !dbg !11902
  %54 = load i32, i32* %status, align 4, !dbg !11903
  %cmp77 = icmp slt i32 %54, 0, !dbg !11905
  br i1 %cmp77, label %if.then78, label %if.end79, !dbg !11906

if.then78:                                        ; preds = %if.end73
  br label %error, !dbg !11907

if.end79:                                         ; preds = %if.end73
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11908
  %call80 = call i32 @write16(%struct.drxk_state* %55, i32 25559061, i16 zeroext 0) #9, !dbg !11909
  store i32 %call80, i32* %status, align 4, !dbg !11910
  %56 = load i32, i32* %status, align 4, !dbg !11911
  %cmp81 = icmp slt i32 %56, 0, !dbg !11913
  br i1 %cmp81, label %if.then82, label %if.end83, !dbg !11914

if.then82:                                        ; preds = %if.end79
  br label %error, !dbg !11915

if.end83:                                         ; preds = %if.end79
  %57 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11916
  %call84 = call i32 @write16(%struct.drxk_state* %57, i32 21430289, i16 zeroext 15000) #9, !dbg !11917
  store i32 %call84, i32* %status, align 4, !dbg !11918
  %58 = load i32, i32* %status, align 4, !dbg !11919
  %cmp85 = icmp slt i32 %58, 0, !dbg !11921
  br i1 %cmp85, label %if.then86, label %if.end87, !dbg !11922

if.then86:                                        ; preds = %if.end83
  br label %error, !dbg !11923

if.end87:                                         ; preds = %if.end83
  %59 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11924
  %call88 = call i32 @write16(%struct.drxk_state* %59, i32 21299242, i16 zeroext 3) #9, !dbg !11925
  store i32 %call88, i32* %status, align 4, !dbg !11926
  %60 = load i32, i32* %status, align 4, !dbg !11927
  %cmp89 = icmp slt i32 %60, 0, !dbg !11929
  br i1 %cmp89, label %if.then90, label %if.end91, !dbg !11930

if.then90:                                        ; preds = %if.end87
  br label %error, !dbg !11931

if.end91:                                         ; preds = %if.end87
  %61 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11932
  %call92 = call i32 @write16(%struct.drxk_state* %61, i32 21299240, i16 zeroext 4) #9, !dbg !11933
  store i32 %call92, i32* %status, align 4, !dbg !11934
  %62 = load i32, i32* %status, align 4, !dbg !11935
  %cmp93 = icmp slt i32 %62, 0, !dbg !11937
  br i1 %cmp93, label %if.then94, label %if.end95, !dbg !11938

if.then94:                                        ; preds = %if.end91
  br label %error, !dbg !11939

if.end95:                                         ; preds = %if.end91
  %63 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11940
  %call96 = call i32 @write16(%struct.drxk_state* %63, i32 21299241, i16 zeroext 4) #9, !dbg !11941
  store i32 %call96, i32* %status, align 4, !dbg !11942
  %64 = load i32, i32* %status, align 4, !dbg !11943
  %cmp97 = icmp slt i32 %64, 0, !dbg !11945
  br i1 %cmp97, label %if.then98, label %if.end99, !dbg !11946

if.then98:                                        ; preds = %if.end95
  br label %error, !dbg !11947

if.end99:                                         ; preds = %if.end95
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11948
  %call100 = call i32 @write16(%struct.drxk_state* %65, i32 21299216, i16 zeroext 7) #9, !dbg !11949
  store i32 %call100, i32* %status, align 4, !dbg !11950
  %66 = load i32, i32* %status, align 4, !dbg !11951
  %cmp101 = icmp slt i32 %66, 0, !dbg !11953
  br i1 %cmp101, label %if.then102, label %if.end103, !dbg !11954

if.then102:                                       ; preds = %if.end99
  br label %error, !dbg !11955

if.end103:                                        ; preds = %if.end99
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11956
  %call104 = call i32 @write16(%struct.drxk_state* %67, i32 21299224, i16 zeroext 1) #9, !dbg !11957
  store i32 %call104, i32* %status, align 4, !dbg !11958
  %68 = load i32, i32* %status, align 4, !dbg !11959
  %cmp105 = icmp slt i32 %68, 0, !dbg !11961
  br i1 %cmp105, label %if.then106, label %if.end107, !dbg !11962

if.then106:                                       ; preds = %if.end103
  br label %error, !dbg !11963

if.end107:                                        ; preds = %if.end103
  %69 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11964
  %call108 = call i32 @write16(%struct.drxk_state* %69, i32 21299225, i16 zeroext 1) #9, !dbg !11965
  store i32 %call108, i32* %status, align 4, !dbg !11966
  %70 = load i32, i32* %status, align 4, !dbg !11967
  %cmp109 = icmp slt i32 %70, 0, !dbg !11969
  br i1 %cmp109, label %if.then110, label %if.end111, !dbg !11970

if.then110:                                       ; preds = %if.end107
  br label %error, !dbg !11971

if.end111:                                        ; preds = %if.end107
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11972
  %call112 = call i32 @write16(%struct.drxk_state* %71, i32 21299226, i16 zeroext 1) #9, !dbg !11973
  store i32 %call112, i32* %status, align 4, !dbg !11974
  %72 = load i32, i32* %status, align 4, !dbg !11975
  %cmp113 = icmp slt i32 %72, 0, !dbg !11977
  br i1 %cmp113, label %if.then114, label %if.end115, !dbg !11978

if.then114:                                       ; preds = %if.end111
  br label %error, !dbg !11979

if.end115:                                        ; preds = %if.end111
  %73 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11980
  %call116 = call i32 @write16(%struct.drxk_state* %73, i32 21299227, i16 zeroext 1) #9, !dbg !11981
  store i32 %call116, i32* %status, align 4, !dbg !11982
  %74 = load i32, i32* %status, align 4, !dbg !11983
  %cmp117 = icmp slt i32 %74, 0, !dbg !11985
  br i1 %cmp117, label %if.then118, label %if.end119, !dbg !11986

if.then118:                                       ; preds = %if.end115
  br label %error, !dbg !11987

if.end119:                                        ; preds = %if.end115
  %75 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11988
  %call120 = call i32 @write16(%struct.drxk_state* %75, i32 21299228, i16 zeroext 2) #9, !dbg !11989
  store i32 %call120, i32* %status, align 4, !dbg !11990
  %76 = load i32, i32* %status, align 4, !dbg !11991
  %cmp121 = icmp slt i32 %76, 0, !dbg !11993
  br i1 %cmp121, label %if.then122, label %if.end123, !dbg !11994

if.then122:                                       ; preds = %if.end119
  br label %error, !dbg !11995

if.end123:                                        ; preds = %if.end119
  %77 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !11996
  %call124 = call i32 @write16(%struct.drxk_state* %77, i32 21299229, i16 zeroext 2) #9, !dbg !11997
  store i32 %call124, i32* %status, align 4, !dbg !11998
  %78 = load i32, i32* %status, align 4, !dbg !11999
  %cmp125 = icmp slt i32 %78, 0, !dbg !12001
  br i1 %cmp125, label %if.then126, label %if.end127, !dbg !12002

if.then126:                                       ; preds = %if.end123
  br label %error, !dbg !12003

if.end127:                                        ; preds = %if.end123
  %79 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12004
  %call128 = call i32 @write16(%struct.drxk_state* %79, i32 21299230, i16 zeroext 2) #9, !dbg !12005
  store i32 %call128, i32* %status, align 4, !dbg !12006
  %80 = load i32, i32* %status, align 4, !dbg !12007
  %cmp129 = icmp slt i32 %80, 0, !dbg !12009
  br i1 %cmp129, label %if.then130, label %if.end131, !dbg !12010

if.then130:                                       ; preds = %if.end127
  br label %error, !dbg !12011

if.end131:                                        ; preds = %if.end127
  %81 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12012
  %call132 = call i32 @write16(%struct.drxk_state* %81, i32 21299231, i16 zeroext 2) #9, !dbg !12013
  store i32 %call132, i32* %status, align 4, !dbg !12014
  %82 = load i32, i32* %status, align 4, !dbg !12015
  %cmp133 = icmp slt i32 %82, 0, !dbg !12017
  br i1 %cmp133, label %if.then134, label %if.end135, !dbg !12018

if.then134:                                       ; preds = %if.end131
  br label %error, !dbg !12019

if.end135:                                        ; preds = %if.end131
  %83 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12020
  %call136 = call i32 @write16(%struct.drxk_state* %83, i32 21299232, i16 zeroext 2) #9, !dbg !12021
  store i32 %call136, i32* %status, align 4, !dbg !12022
  %84 = load i32, i32* %status, align 4, !dbg !12023
  %cmp137 = icmp slt i32 %84, 0, !dbg !12025
  br i1 %cmp137, label %if.then138, label %if.end139, !dbg !12026

if.then138:                                       ; preds = %if.end135
  br label %error, !dbg !12027

if.end139:                                        ; preds = %if.end135
  %85 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12028
  %call140 = call i32 @write16(%struct.drxk_state* %85, i32 21299233, i16 zeroext 2) #9, !dbg !12029
  store i32 %call140, i32* %status, align 4, !dbg !12030
  %86 = load i32, i32* %status, align 4, !dbg !12031
  %cmp141 = icmp slt i32 %86, 0, !dbg !12033
  br i1 %cmp141, label %if.then142, label %if.end143, !dbg !12034

if.then142:                                       ; preds = %if.end139
  br label %error, !dbg !12035

if.end143:                                        ; preds = %if.end139
  %87 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12036
  %call144 = call i32 @write16(%struct.drxk_state* %87, i32 21299234, i16 zeroext 2) #9, !dbg !12037
  store i32 %call144, i32* %status, align 4, !dbg !12038
  %88 = load i32, i32* %status, align 4, !dbg !12039
  %cmp145 = icmp slt i32 %88, 0, !dbg !12041
  br i1 %cmp145, label %if.then146, label %if.end147, !dbg !12042

if.then146:                                       ; preds = %if.end143
  br label %error, !dbg !12043

if.end147:                                        ; preds = %if.end143
  %89 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12044
  %call148 = call i32 @write16(%struct.drxk_state* %89, i32 21299235, i16 zeroext 3) #9, !dbg !12045
  store i32 %call148, i32* %status, align 4, !dbg !12046
  %90 = load i32, i32* %status, align 4, !dbg !12047
  %cmp149 = icmp slt i32 %90, 0, !dbg !12049
  br i1 %cmp149, label %if.then150, label %if.end151, !dbg !12050

if.then150:                                       ; preds = %if.end147
  br label %error, !dbg !12051

if.end151:                                        ; preds = %if.end147
  %91 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12052
  %call152 = call i32 @write16(%struct.drxk_state* %91, i32 21299236, i16 zeroext 3) #9, !dbg !12053
  store i32 %call152, i32* %status, align 4, !dbg !12054
  %92 = load i32, i32* %status, align 4, !dbg !12055
  %cmp153 = icmp slt i32 %92, 0, !dbg !12057
  br i1 %cmp153, label %if.then154, label %if.end155, !dbg !12058

if.then154:                                       ; preds = %if.end151
  br label %error, !dbg !12059

if.end155:                                        ; preds = %if.end151
  %93 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12060
  %call156 = call i32 @write16(%struct.drxk_state* %93, i32 21299237, i16 zeroext 4) #9, !dbg !12061
  store i32 %call156, i32* %status, align 4, !dbg !12062
  %94 = load i32, i32* %status, align 4, !dbg !12063
  %cmp157 = icmp slt i32 %94, 0, !dbg !12065
  br i1 %cmp157, label %if.then158, label %if.end159, !dbg !12066

if.then158:                                       ; preds = %if.end155
  br label %error, !dbg !12067

if.end159:                                        ; preds = %if.end155
  %95 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12068
  %call160 = call i32 @write16(%struct.drxk_state* %95, i32 21299238, i16 zeroext 4) #9, !dbg !12069
  store i32 %call160, i32* %status, align 4, !dbg !12070
  %96 = load i32, i32* %status, align 4, !dbg !12071
  %cmp161 = icmp slt i32 %96, 0, !dbg !12073
  br i1 %cmp161, label %if.then162, label %if.end163, !dbg !12074

if.then162:                                       ; preds = %if.end159
  br label %error, !dbg !12075

if.end163:                                        ; preds = %if.end159
  %97 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12076
  %call164 = call i32 @write16(%struct.drxk_state* %97, i32 21430295, i16 zeroext 0) #9, !dbg !12077
  store i32 %call164, i32* %status, align 4, !dbg !12078
  %98 = load i32, i32* %status, align 4, !dbg !12079
  %cmp165 = icmp slt i32 %98, 0, !dbg !12081
  br i1 %cmp165, label %if.then166, label %if.end167, !dbg !12082

if.then166:                                       ; preds = %if.end163
  br label %error, !dbg !12083

if.end167:                                        ; preds = %if.end163
  %99 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12084
  %call168 = call i32 @write16(%struct.drxk_state* %99, i32 8388608, i16 zeroext 2) #9, !dbg !12085
  store i32 %call168, i32* %status, align 4, !dbg !12086
  %100 = load i32, i32* %status, align 4, !dbg !12087
  %cmp169 = icmp slt i32 %100, 0, !dbg !12089
  br i1 %cmp169, label %if.then170, label %if.end171, !dbg !12090

if.then170:                                       ; preds = %if.end167
  br label %error, !dbg !12091

if.end171:                                        ; preds = %if.end167
  %101 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12092
  %props172 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %101, i32 0, i32 1, !dbg !12093
  %modulation173 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props172, i32 0, i32 1, !dbg !12094
  %102 = load i32, i32* %modulation173, align 4, !dbg !12094
  switch i32 %102, label %sw.default184 [
    i32 1, label %sw.bb174
    i32 2, label %sw.bb176
    i32 6, label %sw.bb178
    i32 3, label %sw.bb178
    i32 4, label %sw.bb180
    i32 5, label %sw.bb182
  ], !dbg !12095

sw.bb174:                                         ; preds = %if.end171
  %103 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12096
  %call175 = call i32 @set_qam16(%struct.drxk_state* %103) #9, !dbg !12098
  store i32 %call175, i32* %status, align 4, !dbg !12099
  br label %sw.epilog185, !dbg !12100

sw.bb176:                                         ; preds = %if.end171
  %104 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12101
  %call177 = call i32 @set_qam32(%struct.drxk_state* %104) #9, !dbg !12102
  store i32 %call177, i32* %status, align 4, !dbg !12103
  br label %sw.epilog185, !dbg !12104

sw.bb178:                                         ; preds = %if.end171, %if.end171
  %105 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12105
  %call179 = call i32 @set_qam64(%struct.drxk_state* %105) #9, !dbg !12106
  store i32 %call179, i32* %status, align 4, !dbg !12107
  br label %sw.epilog185, !dbg !12108

sw.bb180:                                         ; preds = %if.end171
  %106 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12109
  %call181 = call i32 @set_qam128(%struct.drxk_state* %106) #9, !dbg !12110
  store i32 %call181, i32* %status, align 4, !dbg !12111
  br label %sw.epilog185, !dbg !12112

sw.bb182:                                         ; preds = %if.end171
  %107 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12113
  %call183 = call i32 @set_qam256(%struct.drxk_state* %107) #9, !dbg !12114
  store i32 %call183, i32* %status, align 4, !dbg !12115
  br label %sw.epilog185, !dbg !12116

sw.default184:                                    ; preds = %if.end171
  store i32 -22, i32* %status, align 4, !dbg !12117
  br label %sw.epilog185, !dbg !12118

sw.epilog185:                                     ; preds = %sw.default184, %sw.bb182, %sw.bb180, %sw.bb178, %sw.bb176, %sw.bb174
  %108 = load i32, i32* %status, align 4, !dbg !12119
  %cmp186 = icmp slt i32 %108, 0, !dbg !12121
  br i1 %cmp186, label %if.then187, label %if.end188, !dbg !12122

if.then187:                                       ; preds = %sw.epilog185
  br label %error, !dbg !12123

if.end188:                                        ; preds = %sw.epilog185
  %109 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12124
  %call189 = call i32 @write16(%struct.drxk_state* %109, i32 8388608, i16 zeroext 1) #9, !dbg !12125
  store i32 %call189, i32* %status, align 4, !dbg !12126
  %110 = load i32, i32* %status, align 4, !dbg !12127
  %cmp190 = icmp slt i32 %110, 0, !dbg !12129
  br i1 %cmp190, label %if.then191, label %if.end192, !dbg !12130

if.then191:                                       ; preds = %if.end188
  br label %error, !dbg !12131

if.end192:                                        ; preds = %if.end188
  %111 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12132
  %112 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12133
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %112, i32 0, i32 28, !dbg !12134
  %113 = load i32, i32* %m_operation_mode, align 8, !dbg !12134
  %call193 = call i32 @mpegts_dto_setup(%struct.drxk_state* %111, i32 %113) #9, !dbg !12135
  store i32 %call193, i32* %status, align 4, !dbg !12136
  %114 = load i32, i32* %status, align 4, !dbg !12137
  %cmp194 = icmp slt i32 %114, 0, !dbg !12139
  br i1 %cmp194, label %if.then195, label %if.end196, !dbg !12140

if.then195:                                       ; preds = %if.end192
  br label %error, !dbg !12141

if.end196:                                        ; preds = %if.end192
  %115 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12142
  %call197 = call i32 @mpegts_start(%struct.drxk_state* %115) #9, !dbg !12143
  store i32 %call197, i32* %status, align 4, !dbg !12144
  %116 = load i32, i32* %status, align 4, !dbg !12145
  %cmp198 = icmp slt i32 %116, 0, !dbg !12147
  br i1 %cmp198, label %if.then199, label %if.end200, !dbg !12148

if.then199:                                       ; preds = %if.end196
  br label %error, !dbg !12149

if.end200:                                        ; preds = %if.end196
  %117 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12150
  %call201 = call i32 @write16(%struct.drxk_state* %117, i32 29360128, i16 zeroext 1) #9, !dbg !12151
  store i32 %call201, i32* %status, align 4, !dbg !12152
  %118 = load i32, i32* %status, align 4, !dbg !12153
  %cmp202 = icmp slt i32 %118, 0, !dbg !12155
  br i1 %cmp202, label %if.then203, label %if.end204, !dbg !12156

if.then203:                                       ; preds = %if.end200
  br label %error, !dbg !12157

if.end204:                                        ; preds = %if.end200
  %119 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12158
  %call205 = call i32 @write16(%struct.drxk_state* %119, i32 20971520, i16 zeroext 1) #9, !dbg !12159
  store i32 %call205, i32* %status, align 4, !dbg !12160
  %120 = load i32, i32* %status, align 4, !dbg !12161
  %cmp206 = icmp slt i32 %120, 0, !dbg !12163
  br i1 %cmp206, label %if.then207, label %if.end208, !dbg !12164

if.then207:                                       ; preds = %if.end204
  br label %error, !dbg !12165

if.end208:                                        ; preds = %if.end204
  %121 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12166
  %call209 = call i32 @write16(%struct.drxk_state* %121, i32 25165824, i16 zeroext 1) #9, !dbg !12167
  store i32 %call209, i32* %status, align 4, !dbg !12168
  %122 = load i32, i32* %status, align 4, !dbg !12169
  %cmp210 = icmp slt i32 %122, 0, !dbg !12171
  br i1 %cmp210, label %if.then211, label %if.end212, !dbg !12172

if.then211:                                       ; preds = %if.end208
  br label %error, !dbg !12173

if.end212:                                        ; preds = %if.end208
  %123 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12174
  %call213 = call i32 @scu_command(%struct.drxk_state* %123, i16 zeroext 516, i8 zeroext 0, i16* null, i8 zeroext 1, i16* %cmd_result) #9, !dbg !12175
  store i32 %call213, i32* %status, align 4, !dbg !12176
  %124 = load i32, i32* %status, align 4, !dbg !12177
  %cmp214 = icmp slt i32 %124, 0, !dbg !12179
  br i1 %cmp214, label %if.then215, label %if.end216, !dbg !12180

if.then215:                                       ; preds = %if.end212
  br label %error, !dbg !12181

if.end216:                                        ; preds = %if.end212
  br label %error, !dbg !12182

error:                                            ; preds = %if.end216, %if.then215, %if.then211, %if.then207, %if.then203, %if.then199, %if.then195, %if.then191, %if.then187, %if.then170, %if.then166, %if.then162, %if.then158, %if.then154, %if.then150, %if.then146, %if.then142, %if.then138, %if.then134, %if.then130, %if.then126, %if.then122, %if.then118, %if.then114, %if.then110, %if.then106, %if.then102, %if.then98, %if.then94, %if.then90, %if.then86, %if.then82, %if.then78, %if.then72, %do.end57, %if.then26, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !12183), !dbg !12184
  %125 = load i32, i32* %status, align 4, !dbg !12185
  %cmp217 = icmp slt i32 %125, 0, !dbg !12187
  br i1 %cmp217, label %if.then218, label %if.end220, !dbg !12188

if.then218:                                       ; preds = %error
  %126 = load i32, i32* %status, align 4, !dbg !12189
  %call219 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %126, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.set_qam, i64 0, i64 0)) #8, !dbg !12189
  br label %if.end220, !dbg !12189

if.end220:                                        ; preds = %if.then218, %error
  %127 = load i32, i32* %status, align 4, !dbg !12190
  ret i32 %127, !dbg !12191
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_dvbt(%struct.drxk_state* %state, i16 zeroext %intermediate_freqk_hz, i32 %tuner_freq_offset) #0 !dbg !12192 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %intermediate_freqk_hz.addr = alloca i16, align 2
  %tuner_freq_offset.addr = alloca i32, align 4
  %cmd_result = alloca i16, align 2
  %transmission_params = alloca i16, align 2
  %operation_mode = alloca i16, align 2
  %iqm_rc_rate_ofs = alloca i32, align 4
  %bandwidth = alloca i32, align 4
  %param1 = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !12193, metadata !DIExpression()), !dbg !12194
  store i16 %intermediate_freqk_hz, i16* %intermediate_freqk_hz.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %intermediate_freqk_hz.addr, metadata !12195, metadata !DIExpression()), !dbg !12196
  store i32 %tuner_freq_offset, i32* %tuner_freq_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tuner_freq_offset.addr, metadata !12197, metadata !DIExpression()), !dbg !12198
  call void @llvm.dbg.declare(metadata i16* %cmd_result, metadata !12199, metadata !DIExpression()), !dbg !12200
  store i16 0, i16* %cmd_result, align 2, !dbg !12200
  call void @llvm.dbg.declare(metadata i16* %transmission_params, metadata !12201, metadata !DIExpression()), !dbg !12202
  store i16 0, i16* %transmission_params, align 2, !dbg !12202
  call void @llvm.dbg.declare(metadata i16* %operation_mode, metadata !12203, metadata !DIExpression()), !dbg !12204
  store i16 0, i16* %operation_mode, align 2, !dbg !12204
  call void @llvm.dbg.declare(metadata i32* %iqm_rc_rate_ofs, metadata !12205, metadata !DIExpression()), !dbg !12206
  store i32 0, i32* %iqm_rc_rate_ofs, align 4, !dbg !12206
  call void @llvm.dbg.declare(metadata i32* %bandwidth, metadata !12207, metadata !DIExpression()), !dbg !12208
  store i32 0, i32* %bandwidth, align 4, !dbg !12208
  call void @llvm.dbg.declare(metadata i16* %param1, metadata !12209, metadata !DIExpression()), !dbg !12210
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12211, metadata !DIExpression()), !dbg !12212
  br label %do.body, !dbg !12213

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !12214
  %cmp = icmp uge i32 %0, 1, !dbg !12214
  br i1 %cmp, label %if.then, label %if.end, !dbg !12217

if.then:                                          ; preds = %do.body
  %1 = load i16, i16* %intermediate_freqk_hz.addr, align 2, !dbg !12214
  %conv = zext i16 %1 to i32, !dbg !12214
  %2 = load i32, i32* %tuner_freq_offset.addr, align 4, !dbg !12214
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.set_dvbt, i64 0, i64 0), i32 %conv, i32 %2) #8, !dbg !12214
  br label %if.end, !dbg !12214

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !12217

do.end:                                           ; preds = %if.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12218
  %call1 = call i32 @scu_command(%struct.drxk_state* %3, i16 zeroext 1033, i8 zeroext 0, i16* null, i8 zeroext 1, i16* %cmd_result) #9, !dbg !12219
  store i32 %call1, i32* %status, align 4, !dbg !12220
  %4 = load i32, i32* %status, align 4, !dbg !12221
  %cmp2 = icmp slt i32 %4, 0, !dbg !12223
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !12224

if.then4:                                         ; preds = %do.end
  br label %error, !dbg !12225

if.end5:                                          ; preds = %do.end
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12226
  %call6 = call i32 @write16(%struct.drxk_state* %5, i32 8388608, i16 zeroext 2) #9, !dbg !12227
  store i32 %call6, i32* %status, align 4, !dbg !12228
  %6 = load i32, i32* %status, align 4, !dbg !12229
  %cmp7 = icmp slt i32 %6, 0, !dbg !12231
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !12232

if.then9:                                         ; preds = %if.end5
  br label %error, !dbg !12233

if.end10:                                         ; preds = %if.end5
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12234
  %call11 = call i32 @write16(%struct.drxk_state* %7, i32 62914560, i16 zeroext 0) #9, !dbg !12235
  store i32 %call11, i32* %status, align 4, !dbg !12236
  %8 = load i32, i32* %status, align 4, !dbg !12237
  %cmp12 = icmp slt i32 %8, 0, !dbg !12239
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !12240

if.then14:                                        ; preds = %if.end10
  br label %error, !dbg !12241

if.end15:                                         ; preds = %if.end10
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12242
  %call16 = call i32 @write16(%struct.drxk_state* %9, i32 58720256, i16 zeroext 0) #9, !dbg !12243
  store i32 %call16, i32* %status, align 4, !dbg !12244
  %10 = load i32, i32* %status, align 4, !dbg !12245
  %cmp17 = icmp slt i32 %10, 0, !dbg !12247
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !12248

if.then19:                                        ; preds = %if.end15
  br label %error, !dbg !12249

if.end20:                                         ; preds = %if.end15
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12250
  %call21 = call i32 @write16(%struct.drxk_state* %11, i32 41943040, i16 zeroext 0) #9, !dbg !12251
  store i32 %call21, i32* %status, align 4, !dbg !12252
  %12 = load i32, i32* %status, align 4, !dbg !12253
  %cmp22 = icmp slt i32 %12, 0, !dbg !12255
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !12256

if.then24:                                        ; preds = %if.end20
  br label %error, !dbg !12257

if.end25:                                         ; preds = %if.end20
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12258
  %props = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %13, i32 0, i32 1, !dbg !12259
  %transmission_mode = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props, i32 0, i32 6, !dbg !12260
  %14 = load i32, i32* %transmission_mode, align 8, !dbg !12260
  switch i32 %14, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb28
    i32 0, label %sw.bb32
  ], !dbg !12261

sw.bb:                                            ; preds = %if.end25
  br label %sw.default, !dbg !12262

sw.default:                                       ; preds = %if.end25, %sw.bb
  %15 = load i16, i16* %operation_mode, align 2, !dbg !12263
  %conv26 = zext i16 %15 to i32, !dbg !12263
  %or = or i32 %conv26, 1, !dbg !12263
  %conv27 = trunc i32 %or to i16, !dbg !12263
  store i16 %conv27, i16* %operation_mode, align 2, !dbg !12263
  br label %sw.bb28, !dbg !12265

sw.bb28:                                          ; preds = %if.end25, %sw.default
  %16 = load i16, i16* %transmission_params, align 2, !dbg !12266
  %conv29 = zext i16 %16 to i32, !dbg !12266
  %or30 = or i32 %conv29, 1, !dbg !12266
  %conv31 = trunc i32 %or30 to i16, !dbg !12266
  store i16 %conv31, i16* %transmission_params, align 2, !dbg !12266
  br label %sw.epilog, !dbg !12267

sw.bb32:                                          ; preds = %if.end25
  %17 = load i16, i16* %transmission_params, align 2, !dbg !12268
  %conv33 = zext i16 %17 to i32, !dbg !12268
  %conv34 = trunc i32 %conv33 to i16, !dbg !12268
  store i16 %conv34, i16* %transmission_params, align 2, !dbg !12268
  br label %sw.epilog, !dbg !12269

sw.epilog:                                        ; preds = %sw.bb32, %sw.bb28
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12270
  %props35 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %18, i32 0, i32 1, !dbg !12271
  %guard_interval = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props35, i32 0, i32 8, !dbg !12272
  %19 = load i32, i32* %guard_interval, align 8, !dbg !12272
  switch i32 %19, label %sw.default36 [
    i32 4, label %sw.bb37
    i32 3, label %sw.bb41
    i32 0, label %sw.bb45
    i32 1, label %sw.bb48
    i32 2, label %sw.bb52
  ], !dbg !12273

sw.default36:                                     ; preds = %sw.epilog
  br label %sw.bb37, !dbg !12274

sw.bb37:                                          ; preds = %sw.epilog, %sw.default36
  %20 = load i16, i16* %operation_mode, align 2, !dbg !12275
  %conv38 = zext i16 %20 to i32, !dbg !12275
  %or39 = or i32 %conv38, 2, !dbg !12275
  %conv40 = trunc i32 %or39 to i16, !dbg !12275
  store i16 %conv40, i16* %operation_mode, align 2, !dbg !12275
  br label %sw.bb41, !dbg !12277

sw.bb41:                                          ; preds = %sw.epilog, %sw.bb37
  %21 = load i16, i16* %transmission_params, align 2, !dbg !12278
  %conv42 = zext i16 %21 to i32, !dbg !12278
  %or43 = or i32 %conv42, 12, !dbg !12278
  %conv44 = trunc i32 %or43 to i16, !dbg !12278
  store i16 %conv44, i16* %transmission_params, align 2, !dbg !12278
  br label %sw.epilog56, !dbg !12279

sw.bb45:                                          ; preds = %sw.epilog
  %22 = load i16, i16* %transmission_params, align 2, !dbg !12280
  %conv46 = zext i16 %22 to i32, !dbg !12280
  %conv47 = trunc i32 %conv46 to i16, !dbg !12280
  store i16 %conv47, i16* %transmission_params, align 2, !dbg !12280
  br label %sw.epilog56, !dbg !12281

sw.bb48:                                          ; preds = %sw.epilog
  %23 = load i16, i16* %transmission_params, align 2, !dbg !12282
  %conv49 = zext i16 %23 to i32, !dbg !12282
  %or50 = or i32 %conv49, 4, !dbg !12282
  %conv51 = trunc i32 %or50 to i16, !dbg !12282
  store i16 %conv51, i16* %transmission_params, align 2, !dbg !12282
  br label %sw.epilog56, !dbg !12283

sw.bb52:                                          ; preds = %sw.epilog
  %24 = load i16, i16* %transmission_params, align 2, !dbg !12284
  %conv53 = zext i16 %24 to i32, !dbg !12284
  %or54 = or i32 %conv53, 8, !dbg !12284
  %conv55 = trunc i32 %or54 to i16, !dbg !12284
  store i16 %conv55, i16* %transmission_params, align 2, !dbg !12284
  br label %sw.epilog56, !dbg !12285

sw.epilog56:                                      ; preds = %sw.bb52, %sw.bb48, %sw.bb45, %sw.bb41
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12286
  %props57 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %25, i32 0, i32 1, !dbg !12287
  %hierarchy = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props57, i32 0, i32 9, !dbg !12288
  %26 = load i32, i32* %hierarchy, align 4, !dbg !12288
  switch i32 %26, label %sw.default59 [
    i32 4, label %sw.bb58
    i32 0, label %sw.bb58
    i32 1, label %sw.bb63
    i32 2, label %sw.bb67
    i32 3, label %sw.bb71
  ], !dbg !12289

sw.bb58:                                          ; preds = %sw.epilog56, %sw.epilog56
  br label %sw.default59, !dbg !12290

sw.default59:                                     ; preds = %sw.epilog56, %sw.bb58
  %27 = load i16, i16* %operation_mode, align 2, !dbg !12291
  %conv60 = zext i16 %27 to i32, !dbg !12291
  %or61 = or i32 %conv60, 8, !dbg !12291
  %conv62 = trunc i32 %or61 to i16, !dbg !12291
  store i16 %conv62, i16* %operation_mode, align 2, !dbg !12291
  br label %sw.bb63, !dbg !12293

sw.bb63:                                          ; preds = %sw.epilog56, %sw.default59
  %28 = load i16, i16* %transmission_params, align 2, !dbg !12294
  %conv64 = zext i16 %28 to i32, !dbg !12294
  %or65 = or i32 %conv64, 64, !dbg !12294
  %conv66 = trunc i32 %or65 to i16, !dbg !12294
  store i16 %conv66, i16* %transmission_params, align 2, !dbg !12294
  br label %sw.epilog75, !dbg !12295

sw.bb67:                                          ; preds = %sw.epilog56
  %29 = load i16, i16* %transmission_params, align 2, !dbg !12296
  %conv68 = zext i16 %29 to i32, !dbg !12296
  %or69 = or i32 %conv68, 128, !dbg !12296
  %conv70 = trunc i32 %or69 to i16, !dbg !12296
  store i16 %conv70, i16* %transmission_params, align 2, !dbg !12296
  br label %sw.epilog75, !dbg !12297

sw.bb71:                                          ; preds = %sw.epilog56
  %30 = load i16, i16* %transmission_params, align 2, !dbg !12298
  %conv72 = zext i16 %30 to i32, !dbg !12298
  %or73 = or i32 %conv72, 192, !dbg !12298
  %conv74 = trunc i32 %or73 to i16, !dbg !12298
  store i16 %conv74, i16* %transmission_params, align 2, !dbg !12298
  br label %sw.epilog75, !dbg !12299

sw.epilog75:                                      ; preds = %sw.bb71, %sw.bb67, %sw.bb63
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12300
  %props76 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %31, i32 0, i32 1, !dbg !12301
  %modulation = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props76, i32 0, i32 1, !dbg !12302
  %32 = load i32, i32* %modulation, align 4, !dbg !12302
  switch i32 %32, label %sw.default78 [
    i32 6, label %sw.bb77
    i32 3, label %sw.bb82
    i32 0, label %sw.bb86
    i32 1, label %sw.bb89
  ], !dbg !12303

sw.bb77:                                          ; preds = %sw.epilog75
  br label %sw.default78, !dbg !12304

sw.default78:                                     ; preds = %sw.epilog75, %sw.bb77
  %33 = load i16, i16* %operation_mode, align 2, !dbg !12305
  %conv79 = zext i16 %33 to i32, !dbg !12305
  %or80 = or i32 %conv79, 4, !dbg !12305
  %conv81 = trunc i32 %or80 to i16, !dbg !12305
  store i16 %conv81, i16* %operation_mode, align 2, !dbg !12305
  br label %sw.bb82, !dbg !12307

sw.bb82:                                          ; preds = %sw.epilog75, %sw.default78
  %34 = load i16, i16* %transmission_params, align 2, !dbg !12308
  %conv83 = zext i16 %34 to i32, !dbg !12308
  %or84 = or i32 %conv83, 32, !dbg !12308
  %conv85 = trunc i32 %or84 to i16, !dbg !12308
  store i16 %conv85, i16* %transmission_params, align 2, !dbg !12308
  br label %sw.epilog93, !dbg !12309

sw.bb86:                                          ; preds = %sw.epilog75
  %35 = load i16, i16* %transmission_params, align 2, !dbg !12310
  %conv87 = zext i16 %35 to i32, !dbg !12310
  %conv88 = trunc i32 %conv87 to i16, !dbg !12310
  store i16 %conv88, i16* %transmission_params, align 2, !dbg !12310
  br label %sw.epilog93, !dbg !12311

sw.bb89:                                          ; preds = %sw.epilog75
  %36 = load i16, i16* %transmission_params, align 2, !dbg !12312
  %conv90 = zext i16 %36 to i32, !dbg !12312
  %or91 = or i32 %conv90, 16, !dbg !12312
  %conv92 = trunc i32 %or91 to i16, !dbg !12312
  store i16 %conv92, i16* %transmission_params, align 2, !dbg !12312
  br label %sw.epilog93, !dbg !12313

sw.epilog93:                                      ; preds = %sw.bb89, %sw.bb86, %sw.bb82
  %37 = load i16, i16* %transmission_params, align 2, !dbg !12314
  %conv94 = zext i16 %37 to i32, !dbg !12314
  %conv95 = trunc i32 %conv94 to i16, !dbg !12314
  store i16 %conv95, i16* %transmission_params, align 2, !dbg !12314
  %38 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12315
  %call96 = call i32 @write16(%struct.drxk_state* %38, i32 54591507, i16 zeroext 0) #9, !dbg !12316
  store i32 %call96, i32* %status, align 4, !dbg !12317
  %39 = load i32, i32* %status, align 4, !dbg !12318
  %cmp97 = icmp slt i32 %39, 0, !dbg !12320
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !12321

if.then99:                                        ; preds = %sw.epilog93
  br label %error, !dbg !12322

if.end100:                                        ; preds = %sw.epilog93
  %40 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12323
  %props101 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %40, i32 0, i32 1, !dbg !12324
  %code_rate_HP = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props101, i32 0, i32 11, !dbg !12325
  %41 = load i32, i32* %code_rate_HP, align 4, !dbg !12325
  switch i32 %41, label %sw.default103 [
    i32 9, label %sw.bb102
    i32 2, label %sw.bb107
    i32 1, label %sw.bb111
    i32 3, label %sw.bb114
    i32 5, label %sw.bb118
    i32 7, label %sw.bb122
  ], !dbg !12326

sw.bb102:                                         ; preds = %if.end100
  br label %sw.default103, !dbg !12327

sw.default103:                                    ; preds = %if.end100, %sw.bb102
  %42 = load i16, i16* %operation_mode, align 2, !dbg !12328
  %conv104 = zext i16 %42 to i32, !dbg !12328
  %or105 = or i32 %conv104, 16, !dbg !12328
  %conv106 = trunc i32 %or105 to i16, !dbg !12328
  store i16 %conv106, i16* %operation_mode, align 2, !dbg !12328
  br label %sw.bb107, !dbg !12330

sw.bb107:                                         ; preds = %if.end100, %sw.default103
  %43 = load i16, i16* %transmission_params, align 2, !dbg !12331
  %conv108 = zext i16 %43 to i32, !dbg !12331
  %or109 = or i32 %conv108, 512, !dbg !12331
  %conv110 = trunc i32 %or109 to i16, !dbg !12331
  store i16 %conv110, i16* %transmission_params, align 2, !dbg !12331
  br label %sw.epilog126, !dbg !12332

sw.bb111:                                         ; preds = %if.end100
  %44 = load i16, i16* %transmission_params, align 2, !dbg !12333
  %conv112 = zext i16 %44 to i32, !dbg !12333
  %conv113 = trunc i32 %conv112 to i16, !dbg !12333
  store i16 %conv113, i16* %transmission_params, align 2, !dbg !12333
  br label %sw.epilog126, !dbg !12334

sw.bb114:                                         ; preds = %if.end100
  %45 = load i16, i16* %transmission_params, align 2, !dbg !12335
  %conv115 = zext i16 %45 to i32, !dbg !12335
  %or116 = or i32 %conv115, 1024, !dbg !12335
  %conv117 = trunc i32 %or116 to i16, !dbg !12335
  store i16 %conv117, i16* %transmission_params, align 2, !dbg !12335
  br label %sw.epilog126, !dbg !12336

sw.bb118:                                         ; preds = %if.end100
  %46 = load i16, i16* %transmission_params, align 2, !dbg !12337
  %conv119 = zext i16 %46 to i32, !dbg !12337
  %or120 = or i32 %conv119, 1536, !dbg !12337
  %conv121 = trunc i32 %or120 to i16, !dbg !12337
  store i16 %conv121, i16* %transmission_params, align 2, !dbg !12337
  br label %sw.epilog126, !dbg !12338

sw.bb122:                                         ; preds = %if.end100
  %47 = load i16, i16* %transmission_params, align 2, !dbg !12339
  %conv123 = zext i16 %47 to i32, !dbg !12339
  %or124 = or i32 %conv123, 2048, !dbg !12339
  %conv125 = trunc i32 %or124 to i16, !dbg !12339
  store i16 %conv125, i16* %transmission_params, align 2, !dbg !12339
  br label %sw.epilog126, !dbg !12340

sw.epilog126:                                     ; preds = %sw.bb122, %sw.bb118, %sw.bb114, %sw.bb111, %sw.bb107
  %48 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12341
  %props127 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %48, i32 0, i32 1, !dbg !12342
  %bandwidth_hz = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props127, i32 0, i32 7, !dbg !12343
  %49 = load i32, i32* %bandwidth_hz, align 4, !dbg !12343
  switch i32 %49, label %sw.default209 [
    i32 0, label %sw.bb128
    i32 8000000, label %sw.bb131
    i32 7000000, label %sw.bb157
    i32 6000000, label %sw.bb183
  ], !dbg !12344

sw.bb128:                                         ; preds = %sw.epilog126
  %50 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12345
  %props129 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %50, i32 0, i32 1, !dbg !12347
  %bandwidth_hz130 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props129, i32 0, i32 7, !dbg !12348
  store i32 8000000, i32* %bandwidth_hz130, align 4, !dbg !12349
  br label %sw.bb131, !dbg !12345

sw.bb131:                                         ; preds = %sw.epilog126, %sw.bb128
  store i32 9142857, i32* %bandwidth, align 4, !dbg !12350
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12351
  %call132 = call i32 @write16(%struct.drxk_state* %51, i32 63045880, i16 zeroext 3052) #9, !dbg !12352
  store i32 %call132, i32* %status, align 4, !dbg !12353
  %52 = load i32, i32* %status, align 4, !dbg !12354
  %cmp133 = icmp slt i32 %52, 0, !dbg !12356
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !12357

if.then135:                                       ; preds = %sw.bb131
  br label %error, !dbg !12358

if.end136:                                        ; preds = %sw.bb131
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12359
  %call137 = call i32 @write16(%struct.drxk_state* %53, i32 63045859, i16 zeroext 7) #9, !dbg !12360
  store i32 %call137, i32* %status, align 4, !dbg !12361
  %54 = load i32, i32* %status, align 4, !dbg !12362
  %cmp138 = icmp slt i32 %54, 0, !dbg !12364
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !12365

if.then140:                                       ; preds = %if.end136
  br label %error, !dbg !12366

if.end141:                                        ; preds = %if.end136
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12367
  %call142 = call i32 @write16(%struct.drxk_state* %55, i32 63045860, i16 zeroext 7) #9, !dbg !12368
  store i32 %call142, i32* %status, align 4, !dbg !12369
  %56 = load i32, i32* %status, align 4, !dbg !12370
  %cmp143 = icmp slt i32 %56, 0, !dbg !12372
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !12373

if.then145:                                       ; preds = %if.end141
  br label %error, !dbg !12374

if.end146:                                        ; preds = %if.end141
  %57 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12375
  %call147 = call i32 @write16(%struct.drxk_state* %57, i32 63045856, i16 zeroext 7) #9, !dbg !12376
  store i32 %call147, i32* %status, align 4, !dbg !12377
  %58 = load i32, i32* %status, align 4, !dbg !12378
  %cmp148 = icmp slt i32 %58, 0, !dbg !12380
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !12381

if.then150:                                       ; preds = %if.end146
  br label %error, !dbg !12382

if.end151:                                        ; preds = %if.end146
  %59 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12383
  %call152 = call i32 @write16(%struct.drxk_state* %59, i32 63045857, i16 zeroext 1) #9, !dbg !12384
  store i32 %call152, i32* %status, align 4, !dbg !12385
  %60 = load i32, i32* %status, align 4, !dbg !12386
  %cmp153 = icmp slt i32 %60, 0, !dbg !12388
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !12389

if.then155:                                       ; preds = %if.end151
  br label %error, !dbg !12390

if.end156:                                        ; preds = %if.end151
  br label %sw.epilog210, !dbg !12391

sw.bb157:                                         ; preds = %sw.epilog126
  store i32 8000000, i32* %bandwidth, align 4, !dbg !12392
  %61 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12393
  %call158 = call i32 @write16(%struct.drxk_state* %61, i32 63045880, i16 zeroext 3491) #9, !dbg !12394
  store i32 %call158, i32* %status, align 4, !dbg !12395
  %62 = load i32, i32* %status, align 4, !dbg !12396
  %cmp159 = icmp slt i32 %62, 0, !dbg !12398
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !12399

if.then161:                                       ; preds = %sw.bb157
  br label %error, !dbg !12400

if.end162:                                        ; preds = %sw.bb157
  %63 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12401
  %call163 = call i32 @write16(%struct.drxk_state* %63, i32 63045859, i16 zeroext 8) #9, !dbg !12402
  store i32 %call163, i32* %status, align 4, !dbg !12403
  %64 = load i32, i32* %status, align 4, !dbg !12404
  %cmp164 = icmp slt i32 %64, 0, !dbg !12406
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !12407

if.then166:                                       ; preds = %if.end162
  br label %error, !dbg !12408

if.end167:                                        ; preds = %if.end162
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12409
  %call168 = call i32 @write16(%struct.drxk_state* %65, i32 63045860, i16 zeroext 8) #9, !dbg !12410
  store i32 %call168, i32* %status, align 4, !dbg !12411
  %66 = load i32, i32* %status, align 4, !dbg !12412
  %cmp169 = icmp slt i32 %66, 0, !dbg !12414
  br i1 %cmp169, label %if.then171, label %if.end172, !dbg !12415

if.then171:                                       ; preds = %if.end167
  br label %error, !dbg !12416

if.end172:                                        ; preds = %if.end167
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12417
  %call173 = call i32 @write16(%struct.drxk_state* %67, i32 63045856, i16 zeroext 4) #9, !dbg !12418
  store i32 %call173, i32* %status, align 4, !dbg !12419
  %68 = load i32, i32* %status, align 4, !dbg !12420
  %cmp174 = icmp slt i32 %68, 0, !dbg !12422
  br i1 %cmp174, label %if.then176, label %if.end177, !dbg !12423

if.then176:                                       ; preds = %if.end172
  br label %error, !dbg !12424

if.end177:                                        ; preds = %if.end172
  %69 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12425
  %call178 = call i32 @write16(%struct.drxk_state* %69, i32 63045857, i16 zeroext 1) #9, !dbg !12426
  store i32 %call178, i32* %status, align 4, !dbg !12427
  %70 = load i32, i32* %status, align 4, !dbg !12428
  %cmp179 = icmp slt i32 %70, 0, !dbg !12430
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !12431

if.then181:                                       ; preds = %if.end177
  br label %error, !dbg !12432

if.end182:                                        ; preds = %if.end177
  br label %sw.epilog210, !dbg !12433

sw.bb183:                                         ; preds = %sw.epilog126
  store i32 6857142, i32* %bandwidth, align 4, !dbg !12434
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12435
  %call184 = call i32 @write16(%struct.drxk_state* %71, i32 63045880, i16 zeroext 4073) #9, !dbg !12436
  store i32 %call184, i32* %status, align 4, !dbg !12437
  %72 = load i32, i32* %status, align 4, !dbg !12438
  %cmp185 = icmp slt i32 %72, 0, !dbg !12440
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !12441

if.then187:                                       ; preds = %sw.bb183
  br label %error, !dbg !12442

if.end188:                                        ; preds = %sw.bb183
  %73 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12443
  %call189 = call i32 @write16(%struct.drxk_state* %73, i32 63045859, i16 zeroext 19) #9, !dbg !12444
  store i32 %call189, i32* %status, align 4, !dbg !12445
  %74 = load i32, i32* %status, align 4, !dbg !12446
  %cmp190 = icmp slt i32 %74, 0, !dbg !12448
  br i1 %cmp190, label %if.then192, label %if.end193, !dbg !12449

if.then192:                                       ; preds = %if.end188
  br label %error, !dbg !12450

if.end193:                                        ; preds = %if.end188
  %75 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12451
  %call194 = call i32 @write16(%struct.drxk_state* %75, i32 63045860, i16 zeroext 19) #9, !dbg !12452
  store i32 %call194, i32* %status, align 4, !dbg !12453
  %76 = load i32, i32* %status, align 4, !dbg !12454
  %cmp195 = icmp slt i32 %76, 0, !dbg !12456
  br i1 %cmp195, label %if.then197, label %if.end198, !dbg !12457

if.then197:                                       ; preds = %if.end193
  br label %error, !dbg !12458

if.end198:                                        ; preds = %if.end193
  %77 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12459
  %call199 = call i32 @write16(%struct.drxk_state* %77, i32 63045856, i16 zeroext 14) #9, !dbg !12460
  store i32 %call199, i32* %status, align 4, !dbg !12461
  %78 = load i32, i32* %status, align 4, !dbg !12462
  %cmp200 = icmp slt i32 %78, 0, !dbg !12464
  br i1 %cmp200, label %if.then202, label %if.end203, !dbg !12465

if.then202:                                       ; preds = %if.end198
  br label %error, !dbg !12466

if.end203:                                        ; preds = %if.end198
  %79 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12467
  %call204 = call i32 @write16(%struct.drxk_state* %79, i32 63045857, i16 zeroext 1) #9, !dbg !12468
  store i32 %call204, i32* %status, align 4, !dbg !12469
  %80 = load i32, i32* %status, align 4, !dbg !12470
  %cmp205 = icmp slt i32 %80, 0, !dbg !12472
  br i1 %cmp205, label %if.then207, label %if.end208, !dbg !12473

if.then207:                                       ; preds = %if.end203
  br label %error, !dbg !12474

if.end208:                                        ; preds = %if.end203
  br label %sw.epilog210, !dbg !12475

sw.default209:                                    ; preds = %sw.epilog126
  store i32 -22, i32* %status, align 4, !dbg !12476
  br label %error, !dbg !12477

sw.epilog210:                                     ; preds = %if.end208, %if.end182, %if.end156
  %81 = load i32, i32* %iqm_rc_rate_ofs, align 4, !dbg !12478
  %cmp211 = icmp eq i32 %81, 0, !dbg !12480
  br i1 %cmp211, label %if.then213, label %if.end222, !dbg !12481

if.then213:                                       ; preds = %sw.epilog210
  %82 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12482
  %m_sys_clock_freq = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %82, i32 0, i32 26, !dbg !12484
  %83 = load i32, i32* %m_sys_clock_freq, align 8, !dbg !12484
  %mul = mul i32 %83, 1000, !dbg !12485
  %div = sdiv i32 %mul, 3, !dbg !12486
  %84 = load i32, i32* %bandwidth, align 4, !dbg !12487
  %call214 = call i32 @Frac28a(i32 %div, i32 %84) #9, !dbg !12488
  store i32 %call214, i32* %iqm_rc_rate_ofs, align 4, !dbg !12489
  %85 = load i32, i32* %iqm_rc_rate_ofs, align 4, !dbg !12490
  %conv215 = zext i32 %85 to i64, !dbg !12490
  %and = and i64 %conv215, 127, !dbg !12492
  %cmp216 = icmp sge i64 %and, 64, !dbg !12493
  br i1 %cmp216, label %if.then218, label %if.end221, !dbg !12494

if.then218:                                       ; preds = %if.then213
  %86 = load i32, i32* %iqm_rc_rate_ofs, align 4, !dbg !12495
  %conv219 = zext i32 %86 to i64, !dbg !12495
  %add = add i64 %conv219, 128, !dbg !12495
  %conv220 = trunc i64 %add to i32, !dbg !12495
  store i32 %conv220, i32* %iqm_rc_rate_ofs, align 4, !dbg !12495
  br label %if.end221, !dbg !12496

if.end221:                                        ; preds = %if.then218, %if.then213
  %87 = load i32, i32* %iqm_rc_rate_ofs, align 4, !dbg !12497
  %shr = lshr i32 %87, 7, !dbg !12498
  store i32 %shr, i32* %iqm_rc_rate_ofs, align 4, !dbg !12499
  %88 = load i32, i32* %iqm_rc_rate_ofs, align 4, !dbg !12500
  %sub = sub i32 %88, 8388608, !dbg !12501
  store i32 %sub, i32* %iqm_rc_rate_ofs, align 4, !dbg !12502
  br label %if.end222, !dbg !12503

if.end222:                                        ; preds = %if.end221, %sw.epilog210
  %89 = load i32, i32* %iqm_rc_rate_ofs, align 4, !dbg !12504
  %and223 = and i32 %89, 16777215, !dbg !12504
  store i32 %and223, i32* %iqm_rc_rate_ofs, align 4, !dbg !12504
  %90 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12505
  %91 = load i32, i32* %iqm_rc_rate_ofs, align 4, !dbg !12506
  %call224 = call i32 @write32(%struct.drxk_state* %90, i32 25427984, i32 %91) #9, !dbg !12507
  store i32 %call224, i32* %status, align 4, !dbg !12508
  %92 = load i32, i32* %status, align 4, !dbg !12509
  %cmp225 = icmp slt i32 %92, 0, !dbg !12511
  br i1 %cmp225, label %if.then227, label %if.end228, !dbg !12512

if.then227:                                       ; preds = %if.end222
  br label %error, !dbg !12513

if.end228:                                        ; preds = %if.end222
  %93 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12514
  %94 = load i16, i16* %intermediate_freqk_hz.addr, align 2, !dbg !12515
  %95 = load i32, i32* %tuner_freq_offset.addr, align 4, !dbg !12516
  %call229 = call i32 @set_frequency_shifter(%struct.drxk_state* %93, i16 zeroext %94, i32 %95, i1 zeroext true) #9, !dbg !12517
  store i32 %call229, i32* %status, align 4, !dbg !12518
  %96 = load i32, i32* %status, align 4, !dbg !12519
  %cmp230 = icmp slt i32 %96, 0, !dbg !12521
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !12522

if.then232:                                       ; preds = %if.end228
  br label %error, !dbg !12523

if.end233:                                        ; preds = %if.end228
  %97 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12524
  %call234 = call i32 @write16(%struct.drxk_state* %97, i32 8388608, i16 zeroext 1) #9, !dbg !12525
  store i32 %call234, i32* %status, align 4, !dbg !12526
  %98 = load i32, i32* %status, align 4, !dbg !12527
  %cmp235 = icmp slt i32 %98, 0, !dbg !12529
  br i1 %cmp235, label %if.then237, label %if.end238, !dbg !12530

if.then237:                                       ; preds = %if.end233
  br label %error, !dbg !12531

if.end238:                                        ; preds = %if.end233
  %99 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12532
  %call239 = call i32 @write16(%struct.drxk_state* %99, i32 62914561, i16 zeroext 0) #9, !dbg !12533
  store i32 %call239, i32* %status, align 4, !dbg !12534
  %100 = load i32, i32* %status, align 4, !dbg !12535
  %cmp240 = icmp slt i32 %100, 0, !dbg !12537
  br i1 %cmp240, label %if.then242, label %if.end243, !dbg !12538

if.then242:                                       ; preds = %if.end238
  br label %error, !dbg !12539

if.end243:                                        ; preds = %if.end238
  %101 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12540
  %call244 = call i32 @write16(%struct.drxk_state* %101, i32 62914560, i16 zeroext 1) #9, !dbg !12541
  store i32 %call244, i32* %status, align 4, !dbg !12542
  %102 = load i32, i32* %status, align 4, !dbg !12543
  %cmp245 = icmp slt i32 %102, 0, !dbg !12545
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !12546

if.then247:                                       ; preds = %if.end243
  br label %error, !dbg !12547

if.end248:                                        ; preds = %if.end243
  %103 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12548
  %call249 = call i32 @scu_command(%struct.drxk_state* %103, i16 zeroext 1028, i8 zeroext 0, i16* null, i8 zeroext 1, i16* %cmd_result) #9, !dbg !12549
  store i32 %call249, i32* %status, align 4, !dbg !12550
  %104 = load i32, i32* %status, align 4, !dbg !12551
  %cmp250 = icmp slt i32 %104, 0, !dbg !12553
  br i1 %cmp250, label %if.then252, label %if.end253, !dbg !12554

if.then252:                                       ; preds = %if.end248
  br label %error, !dbg !12555

if.end253:                                        ; preds = %if.end248
  store i16 31, i16* %param1, align 2, !dbg !12556
  %105 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12557
  %106 = load i16, i16* %transmission_params, align 2, !dbg !12558
  %107 = load i16, i16* %param1, align 2, !dbg !12559
  %call254 = call i32 @dvbt_sc_command(%struct.drxk_state* %105, i16 zeroext 3, i16 zeroext 0, i16 zeroext %106, i16 zeroext %107, i16 zeroext 0, i16 zeroext 0, i16 zeroext 0) #9, !dbg !12560
  store i32 %call254, i32* %status, align 4, !dbg !12561
  %108 = load i32, i32* %status, align 4, !dbg !12562
  %cmp255 = icmp slt i32 %108, 0, !dbg !12564
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !12565

if.then257:                                       ; preds = %if.end253
  br label %error, !dbg !12566

if.end258:                                        ; preds = %if.end253
  %109 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12567
  %m_drxk_a3_rom_code = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %109, i32 0, i32 93, !dbg !12569
  %110 = load i8, i8* %m_drxk_a3_rom_code, align 4, !dbg !12569
  %tobool = trunc i8 %110 to i1, !dbg !12569
  br i1 %tobool, label %if.end261, label %if.then259, !dbg !12570

if.then259:                                       ; preds = %if.end258
  %111 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12571
  %112 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12572
  %m_sqi_speed = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %112, i32 0, i32 81, !dbg !12573
  %call260 = call i32 @dvbt_ctrl_set_sqi_speed(%struct.drxk_state* %111, i32* %m_sqi_speed) #9, !dbg !12574
  store i32 %call260, i32* %status, align 4, !dbg !12575
  br label %if.end261, !dbg !12576

if.end261:                                        ; preds = %if.then259, %if.end258
  br label %error, !dbg !12569

error:                                            ; preds = %if.end261, %if.then257, %if.then252, %if.then247, %if.then242, %if.then237, %if.then232, %if.then227, %sw.default209, %if.then207, %if.then202, %if.then197, %if.then192, %if.then187, %if.then181, %if.then176, %if.then171, %if.then166, %if.then161, %if.then155, %if.then150, %if.then145, %if.then140, %if.then135, %if.then99, %if.then24, %if.then19, %if.then14, %if.then9, %if.then4
  call void @llvm.dbg.label(metadata !12577), !dbg !12578
  %113 = load i32, i32* %status, align 4, !dbg !12579
  %cmp262 = icmp slt i32 %113, 0, !dbg !12581
  br i1 %cmp262, label %if.then264, label %if.end266, !dbg !12582

if.then264:                                       ; preds = %error
  %114 = load i32, i32* %status, align 4, !dbg !12583
  %call265 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %114, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__func__.set_dvbt, i64 0, i64 0)) #8, !dbg !12583
  br label %if.end266, !dbg !12583

if.end266:                                        ; preds = %if.then264, %error
  %115 = load i32, i32* %status, align 4, !dbg !12584
  ret i32 %115, !dbg !12585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dvbt_start(%struct.drxk_state* %state) #0 !dbg !12586 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %param1 = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !12587, metadata !DIExpression()), !dbg !12588
  call void @llvm.dbg.declare(metadata i16* %param1, metadata !12589, metadata !DIExpression()), !dbg !12590
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12591, metadata !DIExpression()), !dbg !12592
  br label %do.body, !dbg !12593

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !12594
  %cmp = icmp uge i32 %0, 1, !dbg !12594
  br i1 %cmp, label %if.then, label %if.end, !dbg !12597

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.dvbt_start, i64 0, i64 0)) #8, !dbg !12594
  br label %if.end, !dbg !12594

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !12597

do.end:                                           ; preds = %if.end
  store i16 1, i16* %param1, align 2, !dbg !12598
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12599
  %2 = load i16, i16* %param1, align 2, !dbg !12600
  %call1 = call i32 @dvbt_sc_command(%struct.drxk_state* %1, i16 zeroext 1, i16 zeroext 0, i16 zeroext 1, i16 zeroext %2, i16 zeroext 0, i16 zeroext 0, i16 zeroext 0) #9, !dbg !12601
  store i32 %call1, i32* %status, align 4, !dbg !12602
  %3 = load i32, i32* %status, align 4, !dbg !12603
  %cmp2 = icmp slt i32 %3, 0, !dbg !12605
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !12606

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !12607

if.end4:                                          ; preds = %do.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12608
  %call5 = call i32 @mpegts_start(%struct.drxk_state* %4) #9, !dbg !12609
  store i32 %call5, i32* %status, align 4, !dbg !12610
  %5 = load i32, i32* %status, align 4, !dbg !12611
  %cmp6 = icmp slt i32 %5, 0, !dbg !12613
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !12614

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !12615

if.end8:                                          ; preds = %if.end4
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12616
  %call9 = call i32 @write16(%struct.drxk_state* %6, i32 29360128, i16 zeroext 1) #9, !dbg !12617
  store i32 %call9, i32* %status, align 4, !dbg !12618
  %7 = load i32, i32* %status, align 4, !dbg !12619
  %cmp10 = icmp slt i32 %7, 0, !dbg !12621
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !12622

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !12623

if.end12:                                         ; preds = %if.end8
  br label %error, !dbg !12624

error:                                            ; preds = %if.end12, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !12625), !dbg !12626
  %8 = load i32, i32* %status, align 4, !dbg !12627
  %cmp13 = icmp slt i32 %8, 0, !dbg !12629
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !12630

if.then14:                                        ; preds = %error
  %9 = load i32, i32* %status, align 4, !dbg !12631
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %9, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.dvbt_start, i64 0, i64 0)) #8, !dbg !12631
  br label %if.end16, !dbg !12631

if.end16:                                         ; preds = %if.then14, %error
  %10 = load i32, i32* %status, align 4, !dbg !12632
  ret i32 %10, !dbg !12633
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @qam_set_symbolrate(%struct.drxk_state* %state) #0 !dbg !12634 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %adc_frequency = alloca i32, align 4
  %symb_freq = alloca i32, align 4
  %iqm_rc_rate = alloca i32, align 4
  %ratesel = alloca i16, align 2
  %lc_symb_rate = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !12635, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.declare(metadata i32* %adc_frequency, metadata !12637, metadata !DIExpression()), !dbg !12638
  store i32 0, i32* %adc_frequency, align 4, !dbg !12638
  call void @llvm.dbg.declare(metadata i32* %symb_freq, metadata !12639, metadata !DIExpression()), !dbg !12640
  store i32 0, i32* %symb_freq, align 4, !dbg !12640
  call void @llvm.dbg.declare(metadata i32* %iqm_rc_rate, metadata !12641, metadata !DIExpression()), !dbg !12642
  store i32 0, i32* %iqm_rc_rate, align 4, !dbg !12642
  call void @llvm.dbg.declare(metadata i16* %ratesel, metadata !12643, metadata !DIExpression()), !dbg !12644
  store i16 0, i16* %ratesel, align 2, !dbg !12644
  call void @llvm.dbg.declare(metadata i32* %lc_symb_rate, metadata !12645, metadata !DIExpression()), !dbg !12646
  store i32 0, i32* %lc_symb_rate, align 4, !dbg !12646
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12647, metadata !DIExpression()), !dbg !12648
  br label %do.body, !dbg !12649

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !12650
  %cmp = icmp uge i32 %0, 1, !dbg !12650
  br i1 %cmp, label %if.then, label %if.end, !dbg !12653

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.qam_set_symbolrate, i64 0, i64 0)) #8, !dbg !12650
  br label %if.end, !dbg !12650

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !12653

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12654
  %m_sys_clock_freq = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 26, !dbg !12655
  %2 = load i32, i32* %m_sys_clock_freq, align 8, !dbg !12655
  %mul = mul i32 %2, 1000, !dbg !12656
  %div = sdiv i32 %mul, 3, !dbg !12657
  store i32 %div, i32* %adc_frequency, align 4, !dbg !12658
  store i16 0, i16* %ratesel, align 2, !dbg !12659
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12660
  %props = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 1, !dbg !12662
  %symbol_rate = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props, i32 0, i32 10, !dbg !12663
  %4 = load i32, i32* %symbol_rate, align 8, !dbg !12663
  %cmp1 = icmp ule i32 %4, 1188750, !dbg !12664
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !12665

if.then2:                                         ; preds = %do.end
  store i16 3, i16* %ratesel, align 2, !dbg !12666
  br label %if.end14, !dbg !12667

if.else:                                          ; preds = %do.end
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12668
  %props3 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %5, i32 0, i32 1, !dbg !12670
  %symbol_rate4 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props3, i32 0, i32 10, !dbg !12671
  %6 = load i32, i32* %symbol_rate4, align 8, !dbg !12671
  %cmp5 = icmp ule i32 %6, 2377500, !dbg !12672
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !12673

if.then6:                                         ; preds = %if.else
  store i16 2, i16* %ratesel, align 2, !dbg !12674
  br label %if.end13, !dbg !12675

if.else7:                                         ; preds = %if.else
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12676
  %props8 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 1, !dbg !12678
  %symbol_rate9 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props8, i32 0, i32 10, !dbg !12679
  %8 = load i32, i32* %symbol_rate9, align 8, !dbg !12679
  %cmp10 = icmp ule i32 %8, 4755000, !dbg !12680
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !12681

if.then11:                                        ; preds = %if.else7
  store i16 1, i16* %ratesel, align 2, !dbg !12682
  br label %if.end12, !dbg !12683

if.end12:                                         ; preds = %if.then11, %if.else7
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then6
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then2
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12684
  %10 = load i16, i16* %ratesel, align 2, !dbg !12685
  %call15 = call i32 @write16(%struct.drxk_state* %9, i32 25362448, i16 zeroext %10) #9, !dbg !12686
  store i32 %call15, i32* %status, align 4, !dbg !12687
  %11 = load i32, i32* %status, align 4, !dbg !12688
  %cmp16 = icmp slt i32 %11, 0, !dbg !12690
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !12691

if.then17:                                        ; preds = %if.end14
  br label %error, !dbg !12692

if.end18:                                         ; preds = %if.end14
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12693
  %props19 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 1, !dbg !12694
  %symbol_rate20 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props19, i32 0, i32 10, !dbg !12695
  %13 = load i32, i32* %symbol_rate20, align 8, !dbg !12695
  %14 = load i16, i16* %ratesel, align 2, !dbg !12696
  %conv = zext i16 %14 to i32, !dbg !12696
  %shl = shl i32 1, %conv, !dbg !12697
  %mul21 = mul i32 %13, %shl, !dbg !12698
  store i32 %mul21, i32* %symb_freq, align 4, !dbg !12699
  %15 = load i32, i32* %symb_freq, align 4, !dbg !12700
  %cmp22 = icmp eq i32 %15, 0, !dbg !12702
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !12703

if.then24:                                        ; preds = %if.end18
  store i32 -22, i32* %status, align 4, !dbg !12704
  br label %error, !dbg !12706

if.end25:                                         ; preds = %if.end18
  %16 = load i32, i32* %adc_frequency, align 4, !dbg !12707
  %17 = load i32, i32* %symb_freq, align 4, !dbg !12708
  %div26 = udiv i32 %16, %17, !dbg !12709
  %mul27 = mul i32 %div26, 2097152, !dbg !12710
  %18 = load i32, i32* %adc_frequency, align 4, !dbg !12711
  %19 = load i32, i32* %symb_freq, align 4, !dbg !12712
  %rem = urem i32 %18, %19, !dbg !12713
  %20 = load i32, i32* %symb_freq, align 4, !dbg !12714
  %call28 = call i32 @Frac28a(i32 %rem, i32 %20) #9, !dbg !12715
  %shr = lshr i32 %call28, 7, !dbg !12716
  %add = add i32 %mul27, %shr, !dbg !12717
  %sub = sub i32 %add, 8388608, !dbg !12718
  store i32 %sub, i32* %iqm_rc_rate, align 4, !dbg !12719
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12720
  %22 = load i32, i32* %iqm_rc_rate, align 4, !dbg !12721
  %call29 = call i32 @write32(%struct.drxk_state* %21, i32 25427984, i32 %22) #9, !dbg !12722
  store i32 %call29, i32* %status, align 4, !dbg !12723
  %23 = load i32, i32* %status, align 4, !dbg !12724
  %cmp30 = icmp slt i32 %23, 0, !dbg !12726
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !12727

if.then32:                                        ; preds = %if.end25
  br label %error, !dbg !12728

if.end33:                                         ; preds = %if.end25
  %24 = load i32, i32* %iqm_rc_rate, align 4, !dbg !12729
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12730
  %m_iqm_rc_rate = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %25, i32 0, i32 97, !dbg !12731
  store i32 %24, i32* %m_iqm_rc_rate, align 8, !dbg !12732
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12733
  %props34 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %26, i32 0, i32 1, !dbg !12734
  %symbol_rate35 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props34, i32 0, i32 10, !dbg !12735
  %27 = load i32, i32* %symbol_rate35, align 8, !dbg !12735
  store i32 %27, i32* %symb_freq, align 4, !dbg !12736
  %28 = load i32, i32* %adc_frequency, align 4, !dbg !12737
  %cmp36 = icmp eq i32 %28, 0, !dbg !12739
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !12740

if.then38:                                        ; preds = %if.end33
  store i32 -22, i32* %status, align 4, !dbg !12741
  br label %error, !dbg !12743

if.end39:                                         ; preds = %if.end33
  %29 = load i32, i32* %symb_freq, align 4, !dbg !12744
  %30 = load i32, i32* %adc_frequency, align 4, !dbg !12745
  %div40 = udiv i32 %29, %30, !dbg !12746
  %mul41 = mul i32 %div40, 4096, !dbg !12747
  %31 = load i32, i32* %symb_freq, align 4, !dbg !12748
  %32 = load i32, i32* %adc_frequency, align 4, !dbg !12749
  %rem42 = urem i32 %31, %32, !dbg !12750
  %33 = load i32, i32* %adc_frequency, align 4, !dbg !12751
  %call43 = call i32 @Frac28a(i32 %rem42, i32 %33) #9, !dbg !12752
  %shr44 = lshr i32 %call43, 16, !dbg !12753
  %add45 = add i32 %mul41, %shr44, !dbg !12754
  store i32 %add45, i32* %lc_symb_rate, align 4, !dbg !12755
  %34 = load i32, i32* %lc_symb_rate, align 4, !dbg !12756
  %cmp46 = icmp ugt i32 %34, 511, !dbg !12758
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !12759

if.then48:                                        ; preds = %if.end39
  store i32 511, i32* %lc_symb_rate, align 4, !dbg !12760
  br label %if.end49, !dbg !12761

if.end49:                                         ; preds = %if.then48, %if.end39
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12762
  %36 = load i32, i32* %lc_symb_rate, align 4, !dbg !12763
  %conv50 = trunc i32 %36 to i16, !dbg !12764
  %call51 = call i32 @write16(%struct.drxk_state* %35, i32 21299243, i16 zeroext %conv50) #9, !dbg !12765
  store i32 %call51, i32* %status, align 4, !dbg !12766
  br label %error, !dbg !12767

error:                                            ; preds = %if.end49, %if.then38, %if.then32, %if.then24, %if.then17
  call void @llvm.dbg.label(metadata !12768), !dbg !12769
  %37 = load i32, i32* %status, align 4, !dbg !12770
  %cmp52 = icmp slt i32 %37, 0, !dbg !12772
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !12773

if.then54:                                        ; preds = %error
  %38 = load i32, i32* %status, align 4, !dbg !12774
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %38, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.qam_set_symbolrate, i64 0, i64 0)) #8, !dbg !12774
  br label %if.end56, !dbg !12774

if.end56:                                         ; preds = %if.then54, %error
  %39 = load i32, i32* %status, align 4, !dbg !12775
  ret i32 %39, !dbg !12776
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @qam_demodulator_command(%struct.drxk_state* %state, i32 %number_of_parameters) #0 !dbg !12777 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %number_of_parameters.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %cmd_result = alloca i16, align 2
  %set_param_parameters = alloca [4 x i16], align 2
  %set_env_parameters = alloca [1 x i16], align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !12780, metadata !DIExpression()), !dbg !12781
  store i32 %number_of_parameters, i32* %number_of_parameters.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number_of_parameters.addr, metadata !12782, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12784, metadata !DIExpression()), !dbg !12785
  call void @llvm.dbg.declare(metadata i16* %cmd_result, metadata !12786, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.declare(metadata [4 x i16]* %set_param_parameters, metadata !12788, metadata !DIExpression()), !dbg !12790
  %0 = bitcast [4 x i16]* %set_param_parameters to i8*, !dbg !12790
  call void @llvm.memset.p0i8.i64(i8* align 2 %0, i8 0, i64 8, i1 false), !dbg !12790
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12791
  %m_constellation = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 72, !dbg !12792
  %2 = load i32, i32* %m_constellation, align 4, !dbg !12792
  %conv = trunc i32 %2 to i16, !dbg !12791
  %arrayidx = getelementptr [4 x i16], [4 x i16]* %set_param_parameters, i64 0, i64 0, !dbg !12793
  store i16 %conv, i16* %arrayidx, align 2, !dbg !12794
  %arrayidx1 = getelementptr [4 x i16], [4 x i16]* %set_param_parameters, i64 0, i64 1, !dbg !12795
  store i16 16, i16* %arrayidx1, align 2, !dbg !12796
  %3 = load i32, i32* %number_of_parameters.addr, align 4, !dbg !12797
  %cmp = icmp eq i32 %3, 2, !dbg !12799
  br i1 %cmp, label %if.then, label %if.else15, !dbg !12800

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x i16]* %set_env_parameters, metadata !12801, metadata !DIExpression()), !dbg !12804
  %4 = bitcast [1 x i16]* %set_env_parameters to i8*, !dbg !12804
  call void @llvm.memset.p0i8.i64(i8* align 2 %4, i8 0, i64 2, i1 false), !dbg !12804
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12805
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %5, i32 0, i32 28, !dbg !12807
  %6 = load i32, i32* %m_operation_mode, align 8, !dbg !12807
  %cmp3 = icmp eq i32 %6, 3, !dbg !12808
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !12809

if.then5:                                         ; preds = %if.then
  %arrayidx6 = getelementptr [1 x i16], [1 x i16]* %set_env_parameters, i64 0, i64 0, !dbg !12810
  store i16 2, i16* %arrayidx6, align 2, !dbg !12811
  br label %if.end, !dbg !12810

if.else:                                          ; preds = %if.then
  %arrayidx7 = getelementptr [1 x i16], [1 x i16]* %set_env_parameters, i64 0, i64 0, !dbg !12812
  store i16 0, i16* %arrayidx7, align 2, !dbg !12813
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12814
  %arraydecay = getelementptr inbounds [1 x i16], [1 x i16]* %set_env_parameters, i64 0, i64 0, !dbg !12815
  %call = call i32 @scu_command(%struct.drxk_state* %7, i16 zeroext 514, i8 zeroext 1, i16* %arraydecay, i8 zeroext 1, i16* %cmd_result) #9, !dbg !12816
  store i32 %call, i32* %status, align 4, !dbg !12817
  %8 = load i32, i32* %status, align 4, !dbg !12818
  %cmp8 = icmp slt i32 %8, 0, !dbg !12820
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !12821

if.then10:                                        ; preds = %if.end
  br label %error, !dbg !12822

if.end11:                                         ; preds = %if.end
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12823
  %10 = load i32, i32* %number_of_parameters.addr, align 4, !dbg !12824
  %conv12 = trunc i32 %10 to i8, !dbg !12824
  %arraydecay13 = getelementptr inbounds [4 x i16], [4 x i16]* %set_param_parameters, i64 0, i64 0, !dbg !12825
  %call14 = call i32 @scu_command(%struct.drxk_state* %9, i16 zeroext 515, i8 zeroext %conv12, i16* %arraydecay13, i8 zeroext 1, i16* %cmd_result) #9, !dbg !12826
  store i32 %call14, i32* %status, align 4, !dbg !12827
  br label %if.end36, !dbg !12828

if.else15:                                        ; preds = %entry
  %11 = load i32, i32* %number_of_parameters.addr, align 4, !dbg !12829
  %cmp16 = icmp eq i32 %11, 4, !dbg !12831
  br i1 %cmp16, label %if.then18, label %if.else33, !dbg !12832

if.then18:                                        ; preds = %if.else15
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12833
  %m_operation_mode19 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 28, !dbg !12836
  %13 = load i32, i32* %m_operation_mode19, align 8, !dbg !12836
  %cmp20 = icmp eq i32 %13, 3, !dbg !12837
  br i1 %cmp20, label %if.then22, label %if.else24, !dbg !12838

if.then22:                                        ; preds = %if.then18
  %arrayidx23 = getelementptr [4 x i16], [4 x i16]* %set_param_parameters, i64 0, i64 2, !dbg !12839
  store i16 2, i16* %arrayidx23, align 2, !dbg !12840
  br label %if.end26, !dbg !12839

if.else24:                                        ; preds = %if.then18
  %arrayidx25 = getelementptr [4 x i16], [4 x i16]* %set_param_parameters, i64 0, i64 2, !dbg !12841
  store i16 0, i16* %arrayidx25, align 2, !dbg !12842
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then22
  %arrayidx27 = getelementptr [4 x i16], [4 x i16]* %set_param_parameters, i64 0, i64 3, !dbg !12843
  %14 = load i16, i16* %arrayidx27, align 2, !dbg !12844
  %conv28 = zext i16 %14 to i32, !dbg !12844
  %or = or i32 %conv28, 2, !dbg !12844
  %conv29 = trunc i32 %or to i16, !dbg !12844
  store i16 %conv29, i16* %arrayidx27, align 2, !dbg !12844
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12845
  %16 = load i32, i32* %number_of_parameters.addr, align 4, !dbg !12846
  %conv30 = trunc i32 %16 to i8, !dbg !12846
  %arraydecay31 = getelementptr inbounds [4 x i16], [4 x i16]* %set_param_parameters, i64 0, i64 0, !dbg !12847
  %call32 = call i32 @scu_command(%struct.drxk_state* %15, i16 zeroext 515, i8 zeroext %conv30, i16* %arraydecay31, i8 zeroext 1, i16* %cmd_result) #9, !dbg !12848
  store i32 %call32, i32* %status, align 4, !dbg !12849
  br label %if.end35, !dbg !12850

if.else33:                                        ; preds = %if.else15
  %17 = load i32, i32* %number_of_parameters.addr, align 4, !dbg !12851
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.34, i64 0, i64 0), i32 %17) #8, !dbg !12851
  store i32 -22, i32* %status, align 4, !dbg !12853
  br label %if.end35

if.end35:                                         ; preds = %if.else33, %if.end26
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end11
  br label %error, !dbg !12854

error:                                            ; preds = %if.end36, %if.then10
  call void @llvm.dbg.label(metadata !12855), !dbg !12856
  %18 = load i32, i32* %status, align 4, !dbg !12857
  %cmp37 = icmp slt i32 %18, 0, !dbg !12859
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !12860

if.then39:                                        ; preds = %error
  %19 = load i32, i32* %status, align 4, !dbg !12861
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0), i32 %19, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.qam_demodulator_command, i64 0, i64 0)) #8, !dbg !12861
  br label %if.end41, !dbg !12861

if.end41:                                         ; preds = %if.then39, %error
  %20 = load i32, i32* %status, align 4, !dbg !12862
  ret i32 %20, !dbg !12863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_frequency_shifter(%struct.drxk_state* %state, i16 zeroext %intermediate_freqk_hz, i32 %tuner_freq_offset, i1 zeroext %is_dtv) #0 !dbg !12864 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %intermediate_freqk_hz.addr = alloca i16, align 2
  %tuner_freq_offset.addr = alloca i32, align 4
  %is_dtv.addr = alloca i8, align 1
  %select_pos_image = alloca i8, align 1
  %rf_freq_residual = alloca i32, align 4
  %fm_frequency_shift = alloca i32, align 4
  %tuner_mirror = alloca i8, align 1
  %adc_freq = alloca i32, align 4
  %adc_flip = alloca i8, align 1
  %status = alloca i32, align 4
  %if_freq_actual = alloca i32, align 4
  %sampling_frequency = alloca i32, align 4
  %frequency_shift = alloca i32, align 4
  %image_to_select = alloca i8, align 1
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !12867, metadata !DIExpression()), !dbg !12868
  store i16 %intermediate_freqk_hz, i16* %intermediate_freqk_hz.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %intermediate_freqk_hz.addr, metadata !12869, metadata !DIExpression()), !dbg !12870
  store i32 %tuner_freq_offset, i32* %tuner_freq_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tuner_freq_offset.addr, metadata !12871, metadata !DIExpression()), !dbg !12872
  %frombool = zext i1 %is_dtv to i8
  store i8 %frombool, i8* %is_dtv.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_dtv.addr, metadata !12873, metadata !DIExpression()), !dbg !12874
  call void @llvm.dbg.declare(metadata i8* %select_pos_image, metadata !12875, metadata !DIExpression()), !dbg !12876
  store i8 0, i8* %select_pos_image, align 1, !dbg !12876
  call void @llvm.dbg.declare(metadata i32* %rf_freq_residual, metadata !12877, metadata !DIExpression()), !dbg !12878
  %0 = load i32, i32* %tuner_freq_offset.addr, align 4, !dbg !12879
  store i32 %0, i32* %rf_freq_residual, align 4, !dbg !12878
  call void @llvm.dbg.declare(metadata i32* %fm_frequency_shift, metadata !12880, metadata !DIExpression()), !dbg !12881
  store i32 0, i32* %fm_frequency_shift, align 4, !dbg !12881
  call void @llvm.dbg.declare(metadata i8* %tuner_mirror, metadata !12882, metadata !DIExpression()), !dbg !12883
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12884
  %m_b_mirror_freq_spect = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 71, !dbg !12885
  %2 = load i8, i8* %m_b_mirror_freq_spect, align 2, !dbg !12885
  %tobool = trunc i8 %2 to i1, !dbg !12885
  %lnot = xor i1 %tobool, true, !dbg !12886
  %frombool1 = zext i1 %lnot to i8, !dbg !12883
  store i8 %frombool1, i8* %tuner_mirror, align 1, !dbg !12883
  call void @llvm.dbg.declare(metadata i32* %adc_freq, metadata !12887, metadata !DIExpression()), !dbg !12888
  call void @llvm.dbg.declare(metadata i8* %adc_flip, metadata !12889, metadata !DIExpression()), !dbg !12890
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12891, metadata !DIExpression()), !dbg !12892
  call void @llvm.dbg.declare(metadata i32* %if_freq_actual, metadata !12893, metadata !DIExpression()), !dbg !12894
  call void @llvm.dbg.declare(metadata i32* %sampling_frequency, metadata !12895, metadata !DIExpression()), !dbg !12896
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12897
  %m_sys_clock_freq = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 26, !dbg !12898
  %4 = load i32, i32* %m_sys_clock_freq, align 8, !dbg !12898
  %div = sdiv i32 %4, 3, !dbg !12899
  store i32 %div, i32* %sampling_frequency, align 4, !dbg !12896
  call void @llvm.dbg.declare(metadata i32* %frequency_shift, metadata !12900, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.declare(metadata i8* %image_to_select, metadata !12902, metadata !DIExpression()), !dbg !12903
  br label %do.body, !dbg !12904

do.body:                                          ; preds = %entry
  %5 = load i32, i32* @debug, align 4, !dbg !12905
  %cmp = icmp uge i32 %5, 1, !dbg !12905
  br i1 %cmp, label %if.then, label %if.end, !dbg !12908

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.set_frequency_shifter, i64 0, i64 0)) #8, !dbg !12905
  br label %if.end, !dbg !12905

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !12908

do.end:                                           ; preds = %if.end
  %6 = load i8, i8* %is_dtv.addr, align 1, !dbg !12909
  %tobool2 = trunc i8 %6 to i1, !dbg !12909
  br i1 %tobool2, label %if.then3, label %if.end12, !dbg !12911

if.then3:                                         ; preds = %do.end
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12912
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %7, i32 0, i32 28, !dbg !12915
  %8 = load i32, i32* %m_operation_mode, align 8, !dbg !12915
  %cmp4 = icmp eq i32 %8, 1, !dbg !12916
  br i1 %cmp4, label %if.then10, label %lor.lhs.false, !dbg !12917

lor.lhs.false:                                    ; preds = %if.then3
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12918
  %m_operation_mode5 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %9, i32 0, i32 28, !dbg !12919
  %10 = load i32, i32* %m_operation_mode5, align 8, !dbg !12919
  %cmp6 = icmp eq i32 %10, 3, !dbg !12920
  br i1 %cmp6, label %if.then10, label %lor.lhs.false7, !dbg !12921

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12922
  %m_operation_mode8 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %11, i32 0, i32 28, !dbg !12923
  %12 = load i32, i32* %m_operation_mode8, align 8, !dbg !12923
  %cmp9 = icmp eq i32 %12, 4, !dbg !12924
  br i1 %cmp9, label %if.then10, label %if.else, !dbg !12925

if.then10:                                        ; preds = %lor.lhs.false7, %lor.lhs.false, %if.then3
  store i8 1, i8* %select_pos_image, align 1, !dbg !12926
  br label %if.end11, !dbg !12927

if.else:                                          ; preds = %lor.lhs.false7
  store i8 0, i8* %select_pos_image, align 1, !dbg !12928
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then10
  br label %if.end12, !dbg !12929

if.end12:                                         ; preds = %if.end11, %do.end
  %13 = load i8, i8* %tuner_mirror, align 1, !dbg !12930
  %tobool13 = trunc i8 %13 to i1, !dbg !12930
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !12932

if.then14:                                        ; preds = %if.end12
  %14 = load i16, i16* %intermediate_freqk_hz.addr, align 2, !dbg !12933
  %conv = zext i16 %14 to i32, !dbg !12933
  %15 = load i32, i32* %rf_freq_residual, align 4, !dbg !12934
  %add = add i32 %conv, %15, !dbg !12935
  %16 = load i32, i32* %fm_frequency_shift, align 4, !dbg !12936
  %add15 = add i32 %add, %16, !dbg !12937
  store i32 %add15, i32* %if_freq_actual, align 4, !dbg !12938
  br label %if.end19, !dbg !12939

if.else16:                                        ; preds = %if.end12
  %17 = load i16, i16* %intermediate_freqk_hz.addr, align 2, !dbg !12940
  %conv17 = zext i16 %17 to i32, !dbg !12940
  %18 = load i32, i32* %rf_freq_residual, align 4, !dbg !12941
  %sub = sub i32 %conv17, %18, !dbg !12942
  %19 = load i32, i32* %fm_frequency_shift, align 4, !dbg !12943
  %sub18 = sub i32 %sub, %19, !dbg !12944
  store i32 %sub18, i32* %if_freq_actual, align 4, !dbg !12945
  br label %if.end19

if.end19:                                         ; preds = %if.else16, %if.then14
  %20 = load i32, i32* %if_freq_actual, align 4, !dbg !12946
  %21 = load i32, i32* %sampling_frequency, align 4, !dbg !12948
  %div20 = udiv i32 %21, 2, !dbg !12949
  %cmp21 = icmp ugt i32 %20, %div20, !dbg !12950
  br i1 %cmp21, label %if.then23, label %if.else25, !dbg !12951

if.then23:                                        ; preds = %if.end19
  %22 = load i32, i32* %sampling_frequency, align 4, !dbg !12952
  %23 = load i32, i32* %if_freq_actual, align 4, !dbg !12954
  %sub24 = sub i32 %22, %23, !dbg !12955
  store i32 %sub24, i32* %adc_freq, align 4, !dbg !12956
  store i8 1, i8* %adc_flip, align 1, !dbg !12957
  br label %if.end26, !dbg !12958

if.else25:                                        ; preds = %if.end19
  %24 = load i32, i32* %if_freq_actual, align 4, !dbg !12959
  store i32 %24, i32* %adc_freq, align 4, !dbg !12961
  store i8 0, i8* %adc_flip, align 1, !dbg !12962
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then23
  %25 = load i32, i32* %adc_freq, align 4, !dbg !12963
  store i32 %25, i32* %frequency_shift, align 4, !dbg !12964
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12965
  %m_rfmirror = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %26, i32 0, i32 95, !dbg !12966
  %27 = load i8, i8* %m_rfmirror, align 2, !dbg !12966
  %tobool27 = trunc i8 %27 to i1, !dbg !12966
  %conv28 = zext i1 %tobool27 to i32, !dbg !12965
  %28 = load i8, i8* %tuner_mirror, align 1, !dbg !12967
  %tobool29 = trunc i8 %28 to i1, !dbg !12967
  %conv30 = zext i1 %tobool29 to i32, !dbg !12967
  %xor = xor i32 %conv28, %conv30, !dbg !12968
  %29 = load i8, i8* %adc_flip, align 1, !dbg !12969
  %tobool31 = trunc i8 %29 to i1, !dbg !12969
  %conv32 = zext i1 %tobool31 to i32, !dbg !12969
  %xor33 = xor i32 %xor, %conv32, !dbg !12970
  %30 = load i8, i8* %select_pos_image, align 1, !dbg !12971
  %tobool34 = trunc i8 %30 to i1, !dbg !12971
  %conv35 = zext i1 %tobool34 to i32, !dbg !12971
  %xor36 = xor i32 %xor33, %conv35, !dbg !12972
  %tobool37 = icmp ne i32 %xor36, 0, !dbg !12965
  %frombool38 = zext i1 %tobool37 to i8, !dbg !12973
  store i8 %frombool38, i8* %image_to_select, align 1, !dbg !12973
  %31 = load i32, i32* %frequency_shift, align 4, !dbg !12974
  %32 = load i32, i32* %sampling_frequency, align 4, !dbg !12975
  %call39 = call i32 @Frac28a(i32 %31, i32 %32) #9, !dbg !12976
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12977
  %m_iqm_fs_rate_ofs = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %33, i32 0, i32 39, !dbg !12978
  store i32 %call39, i32* %m_iqm_fs_rate_ofs, align 8, !dbg !12979
  %34 = load i8, i8* %image_to_select, align 1, !dbg !12980
  %tobool40 = trunc i8 %34 to i1, !dbg !12980
  br i1 %tobool40, label %if.then41, label %if.end45, !dbg !12982

if.then41:                                        ; preds = %if.end26
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12983
  %m_iqm_fs_rate_ofs42 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %35, i32 0, i32 39, !dbg !12984
  %36 = load i32, i32* %m_iqm_fs_rate_ofs42, align 8, !dbg !12984
  %neg = xor i32 %36, -1, !dbg !12985
  %add43 = add i32 %neg, 1, !dbg !12986
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12987
  %m_iqm_fs_rate_ofs44 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %37, i32 0, i32 39, !dbg !12988
  store i32 %add43, i32* %m_iqm_fs_rate_ofs44, align 8, !dbg !12989
  br label %if.end45, !dbg !12987

if.end45:                                         ; preds = %if.then41, %if.end26
  %38 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12990
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !12991
  %m_iqm_fs_rate_ofs46 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %39, i32 0, i32 39, !dbg !12992
  %40 = load i32, i32* %m_iqm_fs_rate_ofs46, align 8, !dbg !12992
  %call47 = call i32 @write32(%struct.drxk_state* %38, i32 25296912, i32 %40) #9, !dbg !12993
  store i32 %call47, i32* %status, align 4, !dbg !12994
  %41 = load i32, i32* %status, align 4, !dbg !12995
  %cmp48 = icmp slt i32 %41, 0, !dbg !12997
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !12998

if.then50:                                        ; preds = %if.end45
  %42 = load i32, i32* %status, align 4, !dbg !12999
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %42, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.set_frequency_shifter, i64 0, i64 0)) #8, !dbg !12999
  br label %if.end52, !dbg !12999

if.end52:                                         ; preds = %if.then50, %if.end45
  %43 = load i32, i32* %status, align 4, !dbg !13000
  ret i32 %43, !dbg !13001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_qam_measurement(%struct.drxk_state* %state, i32 %modulation, i32 %symbol_rate) #0 !dbg !13002 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %modulation.addr = alloca i32, align 4
  %symbol_rate.addr = alloca i32, align 4
  %fec_bits_desired = alloca i32, align 4
  %fec_rs_period_total = alloca i32, align 4
  %fec_rs_prescale = alloca i16, align 2
  %fec_rs_period = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !13005, metadata !DIExpression()), !dbg !13006
  store i32 %modulation, i32* %modulation.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modulation.addr, metadata !13007, metadata !DIExpression()), !dbg !13008
  store i32 %symbol_rate, i32* %symbol_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %symbol_rate.addr, metadata !13009, metadata !DIExpression()), !dbg !13010
  call void @llvm.dbg.declare(metadata i32* %fec_bits_desired, metadata !13011, metadata !DIExpression()), !dbg !13012
  store i32 0, i32* %fec_bits_desired, align 4, !dbg !13012
  call void @llvm.dbg.declare(metadata i32* %fec_rs_period_total, metadata !13013, metadata !DIExpression()), !dbg !13014
  store i32 0, i32* %fec_rs_period_total, align 4, !dbg !13014
  call void @llvm.dbg.declare(metadata i16* %fec_rs_prescale, metadata !13015, metadata !DIExpression()), !dbg !13016
  store i16 0, i16* %fec_rs_prescale, align 2, !dbg !13016
  call void @llvm.dbg.declare(metadata i16* %fec_rs_period, metadata !13017, metadata !DIExpression()), !dbg !13018
  store i16 0, i16* %fec_rs_period, align 2, !dbg !13018
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13019, metadata !DIExpression()), !dbg !13020
  store i32 0, i32* %status, align 4, !dbg !13020
  br label %do.body, !dbg !13021

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !13022
  %cmp = icmp uge i32 %0, 1, !dbg !13022
  br i1 %cmp, label %if.then, label %if.end, !dbg !13025

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.set_qam_measurement, i64 0, i64 0)) #8, !dbg !13022
  br label %if.end, !dbg !13022

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !13025

do.end:                                           ; preds = %if.end
  store i16 1, i16* %fec_rs_prescale, align 2, !dbg !13026
  %1 = load i32, i32* %modulation.addr, align 4, !dbg !13027
  switch i32 %1, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb1
    i32 5, label %sw.bb3
    i32 6, label %sw.bb5
    i32 7, label %sw.bb7
  ], !dbg !13028

sw.bb:                                            ; preds = %do.end
  %2 = load i32, i32* %symbol_rate.addr, align 4, !dbg !13029
  %mul = mul i32 4, %2, !dbg !13031
  store i32 %mul, i32* %fec_bits_desired, align 4, !dbg !13032
  br label %sw.epilog, !dbg !13033

sw.bb1:                                           ; preds = %do.end
  %3 = load i32, i32* %symbol_rate.addr, align 4, !dbg !13034
  %mul2 = mul i32 5, %3, !dbg !13035
  store i32 %mul2, i32* %fec_bits_desired, align 4, !dbg !13036
  br label %sw.epilog, !dbg !13037

sw.bb3:                                           ; preds = %do.end
  %4 = load i32, i32* %symbol_rate.addr, align 4, !dbg !13038
  %mul4 = mul i32 6, %4, !dbg !13039
  store i32 %mul4, i32* %fec_bits_desired, align 4, !dbg !13040
  br label %sw.epilog, !dbg !13041

sw.bb5:                                           ; preds = %do.end
  %5 = load i32, i32* %symbol_rate.addr, align 4, !dbg !13042
  %mul6 = mul i32 7, %5, !dbg !13043
  store i32 %mul6, i32* %fec_bits_desired, align 4, !dbg !13044
  br label %sw.epilog, !dbg !13045

sw.bb7:                                           ; preds = %do.end
  %6 = load i32, i32* %symbol_rate.addr, align 4, !dbg !13046
  %mul8 = mul i32 8, %6, !dbg !13047
  store i32 %mul8, i32* %fec_bits_desired, align 4, !dbg !13048
  br label %sw.epilog, !dbg !13049

sw.default:                                       ; preds = %do.end
  store i32 -22, i32* %status, align 4, !dbg !13050
  br label %sw.epilog, !dbg !13051

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %7 = load i32, i32* %status, align 4, !dbg !13052
  %cmp9 = icmp slt i32 %7, 0, !dbg !13054
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !13055

if.then10:                                        ; preds = %sw.epilog
  br label %error, !dbg !13056

if.end11:                                         ; preds = %sw.epilog
  %8 = load i32, i32* %fec_bits_desired, align 4, !dbg !13057
  %div = udiv i32 %8, 1000, !dbg !13057
  store i32 %div, i32* %fec_bits_desired, align 4, !dbg !13057
  %9 = load i32, i32* %fec_bits_desired, align 4, !dbg !13058
  %mul12 = mul i32 %9, 500, !dbg !13058
  store i32 %mul12, i32* %fec_bits_desired, align 4, !dbg !13058
  %10 = load i32, i32* %fec_bits_desired, align 4, !dbg !13059
  %conv = zext i32 %10 to i64, !dbg !13059
  %div13 = udiv i64 %conv, 1632, !dbg !13060
  %add = add i64 %div13, 1, !dbg !13061
  %conv14 = trunc i64 %add to i32, !dbg !13062
  store i32 %conv14, i32* %fec_rs_period_total, align 4, !dbg !13063
  %11 = load i32, i32* %fec_rs_period_total, align 4, !dbg !13064
  %shr = lshr i32 %11, 16, !dbg !13065
  %conv15 = trunc i32 %shr to i16, !dbg !13066
  %conv16 = zext i16 %conv15 to i32, !dbg !13066
  %add17 = add i32 1, %conv16, !dbg !13067
  %conv18 = trunc i32 %add17 to i16, !dbg !13068
  store i16 %conv18, i16* %fec_rs_prescale, align 2, !dbg !13069
  %12 = load i16, i16* %fec_rs_prescale, align 2, !dbg !13070
  %conv19 = zext i16 %12 to i32, !dbg !13070
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !13072
  br i1 %cmp20, label %if.then22, label %if.end27, !dbg !13073

if.then22:                                        ; preds = %if.end11
  store i32 -22, i32* %status, align 4, !dbg !13074
  %13 = load i32, i32* %status, align 4, !dbg !13076
  %cmp23 = icmp slt i32 %13, 0, !dbg !13078
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !13079

if.then25:                                        ; preds = %if.then22
  br label %error, !dbg !13080

if.end26:                                         ; preds = %if.then22
  br label %if.end27, !dbg !13081

if.end27:                                         ; preds = %if.end26, %if.end11
  %14 = load i32, i32* %fec_rs_period_total, align 4, !dbg !13082
  %conv28 = trunc i32 %14 to i16, !dbg !13083
  %conv29 = zext i16 %conv28 to i32, !dbg !13083
  %15 = load i16, i16* %fec_rs_prescale, align 2, !dbg !13084
  %conv30 = zext i16 %15 to i32, !dbg !13084
  %shr31 = ashr i32 %conv30, 1, !dbg !13085
  %add32 = add i32 %conv29, %shr31, !dbg !13086
  %16 = load i16, i16* %fec_rs_prescale, align 2, !dbg !13087
  %conv33 = zext i16 %16 to i32, !dbg !13087
  %div34 = sdiv i32 %add32, %conv33, !dbg !13088
  %conv35 = trunc i32 %div34 to i16, !dbg !13089
  store i16 %conv35, i16* %fec_rs_period, align 2, !dbg !13090
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13091
  %18 = load i16, i16* %fec_rs_period, align 2, !dbg !13092
  %call36 = call i32 @write16(%struct.drxk_state* %17, i32 29556754, i16 zeroext %18) #9, !dbg !13093
  store i32 %call36, i32* %status, align 4, !dbg !13094
  %19 = load i32, i32* %status, align 4, !dbg !13095
  %cmp37 = icmp slt i32 %19, 0, !dbg !13097
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !13098

if.then39:                                        ; preds = %if.end27
  br label %error, !dbg !13099

if.end40:                                         ; preds = %if.end27
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13100
  %21 = load i16, i16* %fec_rs_prescale, align 2, !dbg !13101
  %call41 = call i32 @write16(%struct.drxk_state* %20, i32 29556755, i16 zeroext %21) #9, !dbg !13102
  store i32 %call41, i32* %status, align 4, !dbg !13103
  %22 = load i32, i32* %status, align 4, !dbg !13104
  %cmp42 = icmp slt i32 %22, 0, !dbg !13106
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !13107

if.then44:                                        ; preds = %if.end40
  br label %error, !dbg !13108

if.end45:                                         ; preds = %if.end40
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13109
  %24 = load i16, i16* %fec_rs_period, align 2, !dbg !13110
  %call46 = call i32 @write16(%struct.drxk_state* %23, i32 29622342, i16 zeroext %24) #9, !dbg !13111
  store i32 %call46, i32* %status, align 4, !dbg !13112
  br label %error, !dbg !13113

error:                                            ; preds = %if.end45, %if.then44, %if.then39, %if.then25, %if.then10
  call void @llvm.dbg.label(metadata !13114), !dbg !13115
  %25 = load i32, i32* %status, align 4, !dbg !13116
  %cmp47 = icmp slt i32 %25, 0, !dbg !13118
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !13119

if.then49:                                        ; preds = %error
  %26 = load i32, i32* %status, align 4, !dbg !13120
  %call50 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %26, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.set_qam_measurement, i64 0, i64 0)) #8, !dbg !13120
  br label %if.end51, !dbg !13120

if.end51:                                         ; preds = %if.then49, %error
  %27 = load i32, i32* %status, align 4, !dbg !13121
  ret i32 %27, !dbg !13122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_qam16(%struct.drxk_state* %state) #0 !dbg !13123 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !13124, metadata !DIExpression()), !dbg !13125
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13126, metadata !DIExpression()), !dbg !13127
  store i32 0, i32* %status, align 4, !dbg !13127
  br label %do.body, !dbg !13128

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !13129
  %cmp = icmp uge i32 %0, 1, !dbg !13129
  br i1 %cmp, label %if.then, label %if.end, !dbg !13132

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.set_qam16, i64 0, i64 0)) #8, !dbg !13129
  br label %if.end, !dbg !13129

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !13132

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13133
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 8593325, i16 zeroext 13517) #9, !dbg !13134
  store i32 %call1, i32* %status, align 4, !dbg !13135
  %2 = load i32, i32* %status, align 4, !dbg !13136
  %cmp2 = icmp slt i32 %2, 0, !dbg !13138
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !13139

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !13140

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13141
  %call5 = call i32 @write16(%struct.drxk_state* %3, i32 8593326, i16 zeroext 13517) #9, !dbg !13142
  store i32 %call5, i32* %status, align 4, !dbg !13143
  %4 = load i32, i32* %status, align 4, !dbg !13144
  %cmp6 = icmp slt i32 %4, 0, !dbg !13146
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !13147

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !13148

if.end8:                                          ; preds = %if.end4
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13149
  %call9 = call i32 @write16(%struct.drxk_state* %5, i32 8593327, i16 zeroext 13517) #9, !dbg !13150
  store i32 %call9, i32* %status, align 4, !dbg !13151
  %6 = load i32, i32* %status, align 4, !dbg !13152
  %cmp10 = icmp slt i32 %6, 0, !dbg !13154
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !13155

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !13156

if.end12:                                         ; preds = %if.end8
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13157
  %call13 = call i32 @write16(%struct.drxk_state* %7, i32 8593328, i16 zeroext 13517) #9, !dbg !13158
  store i32 %call13, i32* %status, align 4, !dbg !13159
  %8 = load i32, i32* %status, align 4, !dbg !13160
  %cmp14 = icmp slt i32 %8, 0, !dbg !13162
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !13163

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !13164

if.end16:                                         ; preds = %if.end12
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13165
  %call17 = call i32 @write16(%struct.drxk_state* %9, i32 8593329, i16 zeroext 13517) #9, !dbg !13166
  store i32 %call17, i32* %status, align 4, !dbg !13167
  %10 = load i32, i32* %status, align 4, !dbg !13168
  %cmp18 = icmp slt i32 %10, 0, !dbg !13170
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !13171

if.then19:                                        ; preds = %if.end16
  br label %error, !dbg !13172

if.end20:                                         ; preds = %if.end16
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13173
  %call21 = call i32 @write16(%struct.drxk_state* %11, i32 8593330, i16 zeroext 13517) #9, !dbg !13174
  store i32 %call21, i32* %status, align 4, !dbg !13175
  %12 = load i32, i32* %status, align 4, !dbg !13176
  %cmp22 = icmp slt i32 %12, 0, !dbg !13178
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !13179

if.then23:                                        ; preds = %if.end20
  br label %error, !dbg !13180

if.end24:                                         ; preds = %if.end20
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13181
  %call25 = call i32 @write16(%struct.drxk_state* %13, i32 21233688, i16 zeroext 2) #9, !dbg !13182
  store i32 %call25, i32* %status, align 4, !dbg !13183
  %14 = load i32, i32* %status, align 4, !dbg !13184
  %cmp26 = icmp slt i32 %14, 0, !dbg !13186
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !13187

if.then27:                                        ; preds = %if.end24
  br label %error, !dbg !13188

if.end28:                                         ; preds = %if.end24
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13189
  %call29 = call i32 @write16(%struct.drxk_state* %15, i32 21233689, i16 zeroext 2) #9, !dbg !13190
  store i32 %call29, i32* %status, align 4, !dbg !13191
  %16 = load i32, i32* %status, align 4, !dbg !13192
  %cmp30 = icmp slt i32 %16, 0, !dbg !13194
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !13195

if.then31:                                        ; preds = %if.end28
  br label %error, !dbg !13196

if.end32:                                         ; preds = %if.end28
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13197
  %call33 = call i32 @write16(%struct.drxk_state* %17, i32 21233690, i16 zeroext 2) #9, !dbg !13198
  store i32 %call33, i32* %status, align 4, !dbg !13199
  %18 = load i32, i32* %status, align 4, !dbg !13200
  %cmp34 = icmp slt i32 %18, 0, !dbg !13202
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !13203

if.then35:                                        ; preds = %if.end32
  br label %error, !dbg !13204

if.end36:                                         ; preds = %if.end32
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13205
  %call37 = call i32 @write16(%struct.drxk_state* %19, i32 21233691, i16 zeroext 2) #9, !dbg !13206
  store i32 %call37, i32* %status, align 4, !dbg !13207
  %20 = load i32, i32* %status, align 4, !dbg !13208
  %cmp38 = icmp slt i32 %20, 0, !dbg !13210
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !13211

if.then39:                                        ; preds = %if.end36
  br label %error, !dbg !13212

if.end40:                                         ; preds = %if.end36
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13213
  %call41 = call i32 @write16(%struct.drxk_state* %21, i32 21233692, i16 zeroext 2) #9, !dbg !13214
  store i32 %call41, i32* %status, align 4, !dbg !13215
  %22 = load i32, i32* %status, align 4, !dbg !13216
  %cmp42 = icmp slt i32 %22, 0, !dbg !13218
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !13219

if.then43:                                        ; preds = %if.end40
  br label %error, !dbg !13220

if.end44:                                         ; preds = %if.end40
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13221
  %call45 = call i32 @write16(%struct.drxk_state* %23, i32 21233693, i16 zeroext 0) #9, !dbg !13222
  store i32 %call45, i32* %status, align 4, !dbg !13223
  %24 = load i32, i32* %status, align 4, !dbg !13224
  %cmp46 = icmp slt i32 %24, 0, !dbg !13226
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !13227

if.then47:                                        ; preds = %if.end44
  br label %error, !dbg !13228

if.end48:                                         ; preds = %if.end44
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13229
  %call49 = call i32 @write16(%struct.drxk_state* %25, i32 21430292, i16 zeroext 5) #9, !dbg !13230
  store i32 %call49, i32* %status, align 4, !dbg !13231
  %26 = load i32, i32* %status, align 4, !dbg !13232
  %cmp50 = icmp slt i32 %26, 0, !dbg !13234
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !13235

if.then51:                                        ; preds = %if.end48
  br label %error, !dbg !13236

if.end52:                                         ; preds = %if.end48
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13237
  %call53 = call i32 @write16(%struct.drxk_state* %27, i32 21430291, i16 zeroext 4) #9, !dbg !13238
  store i32 %call53, i32* %status, align 4, !dbg !13239
  %28 = load i32, i32* %status, align 4, !dbg !13240
  %cmp54 = icmp slt i32 %28, 0, !dbg !13242
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !13243

if.then55:                                        ; preds = %if.end52
  br label %error, !dbg !13244

if.end56:                                         ; preds = %if.end52
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13245
  %call57 = call i32 @write16(%struct.drxk_state* %29, i32 21430290, i16 zeroext 3) #9, !dbg !13246
  store i32 %call57, i32* %status, align 4, !dbg !13247
  %30 = load i32, i32* %status, align 4, !dbg !13248
  %cmp58 = icmp slt i32 %30, 0, !dbg !13250
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !13251

if.then59:                                        ; preds = %if.end56
  br label %error, !dbg !13252

if.end60:                                         ; preds = %if.end56
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13253
  %call61 = call i32 @write16(%struct.drxk_state* %31, i32 8593324, i16 zeroext -24576) #9, !dbg !13254
  store i32 %call61, i32* %status, align 4, !dbg !13255
  %32 = load i32, i32* %status, align 4, !dbg !13256
  %cmp62 = icmp slt i32 %32, 0, !dbg !13258
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !13259

if.then63:                                        ; preds = %if.end60
  br label %error, !dbg !13260

if.end64:                                         ; preds = %if.end60
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13261
  %call65 = call i32 @write16(%struct.drxk_state* %33, i32 8593305, i16 zeroext 15) #9, !dbg !13262
  store i32 %call65, i32* %status, align 4, !dbg !13263
  %34 = load i32, i32* %status, align 4, !dbg !13264
  %cmp66 = icmp slt i32 %34, 0, !dbg !13266
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !13267

if.then67:                                        ; preds = %if.end64
  br label %error, !dbg !13268

if.end68:                                         ; preds = %if.end64
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13269
  %call69 = call i32 @write16(%struct.drxk_state* %35, i32 8593303, i16 zeroext 40) #9, !dbg !13270
  store i32 %call69, i32* %status, align 4, !dbg !13271
  %36 = load i32, i32* %status, align 4, !dbg !13272
  %cmp70 = icmp slt i32 %36, 0, !dbg !13274
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !13275

if.then71:                                        ; preds = %if.end68
  br label %error, !dbg !13276

if.end72:                                         ; preds = %if.end68
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13277
  %call73 = call i32 @write16(%struct.drxk_state* %37, i32 8593314, i16 zeroext 12) #9, !dbg !13278
  store i32 %call73, i32* %status, align 4, !dbg !13279
  %38 = load i32, i32* %status, align 4, !dbg !13280
  %cmp74 = icmp slt i32 %38, 0, !dbg !13282
  br i1 %cmp74, label %if.then75, label %if.end76, !dbg !13283

if.then75:                                        ; preds = %if.end72
  br label %error, !dbg !13284

if.end76:                                         ; preds = %if.end72
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13285
  %call77 = call i32 @write16(%struct.drxk_state* %39, i32 8593313, i16 zeroext 24) #9, !dbg !13286
  store i32 %call77, i32* %status, align 4, !dbg !13287
  %40 = load i32, i32* %status, align 4, !dbg !13288
  %cmp78 = icmp slt i32 %40, 0, !dbg !13290
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !13291

if.then79:                                        ; preds = %if.end76
  br label %error, !dbg !13292

if.end80:                                         ; preds = %if.end76
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13293
  %call81 = call i32 @write16(%struct.drxk_state* %41, i32 8593312, i16 zeroext 24) #9, !dbg !13294
  store i32 %call81, i32* %status, align 4, !dbg !13295
  %42 = load i32, i32* %status, align 4, !dbg !13296
  %cmp82 = icmp slt i32 %42, 0, !dbg !13298
  br i1 %cmp82, label %if.then83, label %if.end84, !dbg !13299

if.then83:                                        ; preds = %if.end80
  br label %error, !dbg !13300

if.end84:                                         ; preds = %if.end80
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13301
  %call85 = call i32 @write16(%struct.drxk_state* %43, i32 8593317, i16 zeroext 12) #9, !dbg !13302
  store i32 %call85, i32* %status, align 4, !dbg !13303
  %44 = load i32, i32* %status, align 4, !dbg !13304
  %cmp86 = icmp slt i32 %44, 0, !dbg !13306
  br i1 %cmp86, label %if.then87, label %if.end88, !dbg !13307

if.then87:                                        ; preds = %if.end84
  br label %error, !dbg !13308

if.end88:                                         ; preds = %if.end84
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13309
  %call89 = call i32 @write16(%struct.drxk_state* %45, i32 8593316, i16 zeroext 16) #9, !dbg !13310
  store i32 %call89, i32* %status, align 4, !dbg !13311
  %46 = load i32, i32* %status, align 4, !dbg !13312
  %cmp90 = icmp slt i32 %46, 0, !dbg !13314
  br i1 %cmp90, label %if.then91, label %if.end92, !dbg !13315

if.then91:                                        ; preds = %if.end88
  br label %error, !dbg !13316

if.end92:                                         ; preds = %if.end88
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13317
  %call93 = call i32 @write16(%struct.drxk_state* %47, i32 8593315, i16 zeroext 16) #9, !dbg !13318
  store i32 %call93, i32* %status, align 4, !dbg !13319
  %48 = load i32, i32* %status, align 4, !dbg !13320
  %cmp94 = icmp slt i32 %48, 0, !dbg !13322
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !13323

if.then95:                                        ; preds = %if.end92
  br label %error, !dbg !13324

if.end96:                                         ; preds = %if.end92
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13325
  %call97 = call i32 @write16(%struct.drxk_state* %49, i32 8593308, i16 zeroext 5) #9, !dbg !13326
  store i32 %call97, i32* %status, align 4, !dbg !13327
  %50 = load i32, i32* %status, align 4, !dbg !13328
  %cmp98 = icmp slt i32 %50, 0, !dbg !13330
  br i1 %cmp98, label %if.then99, label %if.end100, !dbg !13331

if.then99:                                        ; preds = %if.end96
  br label %error, !dbg !13332

if.end100:                                        ; preds = %if.end96
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13333
  %call101 = call i32 @write16(%struct.drxk_state* %51, i32 8593307, i16 zeroext 20) #9, !dbg !13334
  store i32 %call101, i32* %status, align 4, !dbg !13335
  %52 = load i32, i32* %status, align 4, !dbg !13336
  %cmp102 = icmp slt i32 %52, 0, !dbg !13338
  br i1 %cmp102, label %if.then103, label %if.end104, !dbg !13339

if.then103:                                       ; preds = %if.end100
  br label %error, !dbg !13340

if.end104:                                        ; preds = %if.end100
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13341
  %call105 = call i32 @write16(%struct.drxk_state* %53, i32 8593306, i16 zeroext 80) #9, !dbg !13342
  store i32 %call105, i32* %status, align 4, !dbg !13343
  %54 = load i32, i32* %status, align 4, !dbg !13344
  %cmp106 = icmp slt i32 %54, 0, !dbg !13346
  br i1 %cmp106, label %if.then107, label %if.end108, !dbg !13347

if.then107:                                       ; preds = %if.end104
  br label %error, !dbg !13348

if.end108:                                        ; preds = %if.end104
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13349
  %call109 = call i32 @write16(%struct.drxk_state* %55, i32 8593311, i16 zeroext 5) #9, !dbg !13350
  store i32 %call109, i32* %status, align 4, !dbg !13351
  %56 = load i32, i32* %status, align 4, !dbg !13352
  %cmp110 = icmp slt i32 %56, 0, !dbg !13354
  br i1 %cmp110, label %if.then111, label %if.end112, !dbg !13355

if.then111:                                       ; preds = %if.end108
  br label %error, !dbg !13356

if.end112:                                        ; preds = %if.end108
  %57 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13357
  %call113 = call i32 @write16(%struct.drxk_state* %57, i32 8593310, i16 zeroext 20) #9, !dbg !13358
  store i32 %call113, i32* %status, align 4, !dbg !13359
  %58 = load i32, i32* %status, align 4, !dbg !13360
  %cmp114 = icmp slt i32 %58, 0, !dbg !13362
  br i1 %cmp114, label %if.then115, label %if.end116, !dbg !13363

if.then115:                                       ; preds = %if.end112
  br label %error, !dbg !13364

if.end116:                                        ; preds = %if.end112
  %59 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13365
  %call117 = call i32 @write16(%struct.drxk_state* %59, i32 8593309, i16 zeroext 50) #9, !dbg !13366
  store i32 %call117, i32* %status, align 4, !dbg !13367
  %60 = load i32, i32* %status, align 4, !dbg !13368
  %cmp118 = icmp slt i32 %60, 0, !dbg !13370
  br i1 %cmp118, label %if.then119, label %if.end120, !dbg !13371

if.then119:                                       ; preds = %if.end116
  br label %error, !dbg !13372

if.end120:                                        ; preds = %if.end116
  %61 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13373
  %call121 = call i32 @write16(%struct.drxk_state* %61, i32 8593320, i16 zeroext 16) #9, !dbg !13374
  store i32 %call121, i32* %status, align 4, !dbg !13375
  %62 = load i32, i32* %status, align 4, !dbg !13376
  %cmp122 = icmp slt i32 %62, 0, !dbg !13378
  br i1 %cmp122, label %if.then123, label %if.end124, !dbg !13379

if.then123:                                       ; preds = %if.end120
  br label %error, !dbg !13380

if.end124:                                        ; preds = %if.end120
  %63 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13381
  %call125 = call i32 @write16(%struct.drxk_state* %63, i32 8593319, i16 zeroext 16) #9, !dbg !13382
  store i32 %call125, i32* %status, align 4, !dbg !13383
  %64 = load i32, i32* %status, align 4, !dbg !13384
  %cmp126 = icmp slt i32 %64, 0, !dbg !13386
  br i1 %cmp126, label %if.then127, label %if.end128, !dbg !13387

if.then127:                                       ; preds = %if.end124
  br label %error, !dbg !13388

if.end128:                                        ; preds = %if.end124
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13389
  %call129 = call i32 @write16(%struct.drxk_state* %65, i32 8593318, i16 zeroext 32) #9, !dbg !13390
  store i32 %call129, i32* %status, align 4, !dbg !13391
  %66 = load i32, i32* %status, align 4, !dbg !13392
  %cmp130 = icmp slt i32 %66, 0, !dbg !13394
  br i1 %cmp130, label %if.then131, label %if.end132, !dbg !13395

if.then131:                                       ; preds = %if.end128
  br label %error, !dbg !13396

if.end132:                                        ; preds = %if.end128
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13397
  %call133 = call i32 @write16(%struct.drxk_state* %67, i32 8593323, i16 zeroext 5) #9, !dbg !13398
  store i32 %call133, i32* %status, align 4, !dbg !13399
  %68 = load i32, i32* %status, align 4, !dbg !13400
  %cmp134 = icmp slt i32 %68, 0, !dbg !13402
  br i1 %cmp134, label %if.then135, label %if.end136, !dbg !13403

if.then135:                                       ; preds = %if.end132
  br label %error, !dbg !13404

if.end136:                                        ; preds = %if.end132
  %69 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13405
  %call137 = call i32 @write16(%struct.drxk_state* %69, i32 8593322, i16 zeroext 10) #9, !dbg !13406
  store i32 %call137, i32* %status, align 4, !dbg !13407
  %70 = load i32, i32* %status, align 4, !dbg !13408
  %cmp138 = icmp slt i32 %70, 0, !dbg !13410
  br i1 %cmp138, label %if.then139, label %if.end140, !dbg !13411

if.then139:                                       ; preds = %if.end136
  br label %error, !dbg !13412

if.end140:                                        ; preds = %if.end136
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13413
  %call141 = call i32 @write16(%struct.drxk_state* %71, i32 8593321, i16 zeroext 10) #9, !dbg !13414
  store i32 %call141, i32* %status, align 4, !dbg !13415
  %72 = load i32, i32* %status, align 4, !dbg !13416
  %cmp142 = icmp slt i32 %72, 0, !dbg !13418
  br i1 %cmp142, label %if.then143, label %if.end144, !dbg !13419

if.then143:                                       ; preds = %if.end140
  br label %error, !dbg !13420

if.end144:                                        ; preds = %if.end140
  %73 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13421
  %call145 = call i32 @write16(%struct.drxk_state* %73, i32 8593294, i16 zeroext 140) #9, !dbg !13422
  store i32 %call145, i32* %status, align 4, !dbg !13423
  %74 = load i32, i32* %status, align 4, !dbg !13424
  %cmp146 = icmp slt i32 %74, 0, !dbg !13426
  br i1 %cmp146, label %if.then147, label %if.end148, !dbg !13427

if.then147:                                       ; preds = %if.end144
  br label %error, !dbg !13428

if.end148:                                        ; preds = %if.end144
  %75 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13429
  %call149 = call i32 @write16(%struct.drxk_state* %75, i32 8593295, i16 zeroext 50) #9, !dbg !13430
  store i32 %call149, i32* %status, align 4, !dbg !13431
  %76 = load i32, i32* %status, align 4, !dbg !13432
  %cmp150 = icmp slt i32 %76, 0, !dbg !13434
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !13435

if.then151:                                       ; preds = %if.end148
  br label %error, !dbg !13436

if.end152:                                        ; preds = %if.end148
  %77 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13437
  %call153 = call i32 @write16(%struct.drxk_state* %77, i32 8593298, i16 zeroext 95) #9, !dbg !13438
  store i32 %call153, i32* %status, align 4, !dbg !13439
  %78 = load i32, i32* %status, align 4, !dbg !13440
  %cmp154 = icmp slt i32 %78, 0, !dbg !13442
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !13443

if.then155:                                       ; preds = %if.end152
  br label %error, !dbg !13444

if.end156:                                        ; preds = %if.end152
  %79 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13445
  %call157 = call i32 @write16(%struct.drxk_state* %79, i32 8593296, i16 zeroext 120) #9, !dbg !13446
  store i32 %call157, i32* %status, align 4, !dbg !13447
  %80 = load i32, i32* %status, align 4, !dbg !13448
  %cmp158 = icmp slt i32 %80, 0, !dbg !13450
  br i1 %cmp158, label %if.then159, label %if.end160, !dbg !13451

if.then159:                                       ; preds = %if.end156
  br label %error, !dbg !13452

if.end160:                                        ; preds = %if.end156
  %81 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13453
  %call161 = call i32 @write16(%struct.drxk_state* %81, i32 8593299, i16 zeroext 230) #9, !dbg !13454
  store i32 %call161, i32* %status, align 4, !dbg !13455
  %82 = load i32, i32* %status, align 4, !dbg !13456
  %cmp162 = icmp slt i32 %82, 0, !dbg !13458
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !13459

if.then163:                                       ; preds = %if.end160
  br label %error, !dbg !13460

if.end164:                                        ; preds = %if.end160
  %83 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13461
  %call165 = call i32 @write16(%struct.drxk_state* %83, i32 8593297, i16 zeroext 105) #9, !dbg !13462
  store i32 %call165, i32* %status, align 4, !dbg !13463
  %84 = load i32, i32* %status, align 4, !dbg !13464
  %cmp166 = icmp slt i32 %84, 0, !dbg !13466
  br i1 %cmp166, label %if.then167, label %if.end168, !dbg !13467

if.then167:                                       ; preds = %if.end164
  br label %error, !dbg !13468

if.end168:                                        ; preds = %if.end164
  %85 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13469
  %call169 = call i32 @write16(%struct.drxk_state* %85, i32 8593300, i16 zeroext 40) #9, !dbg !13470
  store i32 %call169, i32* %status, align 4, !dbg !13471
  %86 = load i32, i32* %status, align 4, !dbg !13472
  %cmp170 = icmp slt i32 %86, 0, !dbg !13474
  br i1 %cmp170, label %if.then171, label %if.end172, !dbg !13475

if.then171:                                       ; preds = %if.end168
  br label %error, !dbg !13476

if.end172:                                        ; preds = %if.end168
  %87 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13477
  %call173 = call i32 @write16(%struct.drxk_state* %87, i32 8593302, i16 zeroext 4) #9, !dbg !13478
  store i32 %call173, i32* %status, align 4, !dbg !13479
  %88 = load i32, i32* %status, align 4, !dbg !13480
  %cmp174 = icmp slt i32 %88, 0, !dbg !13482
  br i1 %cmp174, label %if.then175, label %if.end176, !dbg !13483

if.then175:                                       ; preds = %if.end172
  br label %error, !dbg !13484

if.end176:                                        ; preds = %if.end172
  %89 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13485
  %call177 = call i32 @write16(%struct.drxk_state* %89, i32 8593301, i16 zeroext 24) #9, !dbg !13486
  store i32 %call177, i32* %status, align 4, !dbg !13487
  %90 = load i32, i32* %status, align 4, !dbg !13488
  %cmp178 = icmp slt i32 %90, 0, !dbg !13490
  br i1 %cmp178, label %if.then179, label %if.end180, !dbg !13491

if.then179:                                       ; preds = %if.end176
  br label %error, !dbg !13492

if.end180:                                        ; preds = %if.end176
  %91 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13493
  %call181 = call i32 @write16(%struct.drxk_state* %91, i32 8593284, i16 zeroext 16) #9, !dbg !13494
  store i32 %call181, i32* %status, align 4, !dbg !13495
  %92 = load i32, i32* %status, align 4, !dbg !13496
  %cmp182 = icmp slt i32 %92, 0, !dbg !13498
  br i1 %cmp182, label %if.then183, label %if.end184, !dbg !13499

if.then183:                                       ; preds = %if.end180
  br label %error, !dbg !13500

if.end184:                                        ; preds = %if.end180
  %93 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13501
  %call185 = call i32 @write16(%struct.drxk_state* %93, i32 8593285, i16 zeroext 220) #9, !dbg !13502
  store i32 %call185, i32* %status, align 4, !dbg !13503
  %94 = load i32, i32* %status, align 4, !dbg !13504
  %cmp186 = icmp slt i32 %94, 0, !dbg !13506
  br i1 %cmp186, label %if.then187, label %if.end188, !dbg !13507

if.then187:                                       ; preds = %if.end184
  br label %error, !dbg !13508

if.end188:                                        ; preds = %if.end184
  %95 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13509
  %call189 = call i32 @write16(%struct.drxk_state* %95, i32 8593286, i16 zeroext 25) #9, !dbg !13510
  store i32 %call189, i32* %status, align 4, !dbg !13511
  %96 = load i32, i32* %status, align 4, !dbg !13512
  %cmp190 = icmp slt i32 %96, 0, !dbg !13514
  br i1 %cmp190, label %if.then191, label %if.end192, !dbg !13515

if.then191:                                       ; preds = %if.end188
  br label %error, !dbg !13516

if.end192:                                        ; preds = %if.end188
  %97 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13517
  %call193 = call i32 @write16(%struct.drxk_state* %97, i32 8593287, i16 zeroext 6) #9, !dbg !13518
  store i32 %call193, i32* %status, align 4, !dbg !13519
  %98 = load i32, i32* %status, align 4, !dbg !13520
  %cmp194 = icmp slt i32 %98, 0, !dbg !13522
  br i1 %cmp194, label %if.then195, label %if.end196, !dbg !13523

if.then195:                                       ; preds = %if.end192
  br label %error, !dbg !13524

if.end196:                                        ; preds = %if.end192
  %99 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13525
  %call197 = call i32 @write16(%struct.drxk_state* %99, i32 8593288, i16 zeroext -24) #9, !dbg !13526
  store i32 %call197, i32* %status, align 4, !dbg !13527
  %100 = load i32, i32* %status, align 4, !dbg !13528
  %cmp198 = icmp slt i32 %100, 0, !dbg !13530
  br i1 %cmp198, label %if.then199, label %if.end200, !dbg !13531

if.then199:                                       ; preds = %if.end196
  br label %error, !dbg !13532

if.end200:                                        ; preds = %if.end196
  %101 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13533
  %call201 = call i32 @write16(%struct.drxk_state* %101, i32 8593289, i16 zeroext -65) #9, !dbg !13534
  store i32 %call201, i32* %status, align 4, !dbg !13535
  %102 = load i32, i32* %status, align 4, !dbg !13536
  %cmp202 = icmp slt i32 %102, 0, !dbg !13538
  br i1 %cmp202, label %if.then203, label %if.end204, !dbg !13539

if.then203:                                       ; preds = %if.end200
  br label %error, !dbg !13540

if.end204:                                        ; preds = %if.end200
  %103 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13541
  %call205 = call i32 @write16(%struct.drxk_state* %103, i32 8593290, i16 zeroext -127) #9, !dbg !13542
  store i32 %call205, i32* %status, align 4, !dbg !13543
  %104 = load i32, i32* %status, align 4, !dbg !13544
  %cmp206 = icmp slt i32 %104, 0, !dbg !13546
  br i1 %cmp206, label %if.then207, label %if.end208, !dbg !13547

if.then207:                                       ; preds = %if.end204
  br label %error, !dbg !13548

if.end208:                                        ; preds = %if.end204
  br label %error, !dbg !13549

error:                                            ; preds = %if.end208, %if.then207, %if.then203, %if.then199, %if.then195, %if.then191, %if.then187, %if.then183, %if.then179, %if.then175, %if.then171, %if.then167, %if.then163, %if.then159, %if.then155, %if.then151, %if.then147, %if.then143, %if.then139, %if.then135, %if.then131, %if.then127, %if.then123, %if.then119, %if.then115, %if.then111, %if.then107, %if.then103, %if.then99, %if.then95, %if.then91, %if.then87, %if.then83, %if.then79, %if.then75, %if.then71, %if.then67, %if.then63, %if.then59, %if.then55, %if.then51, %if.then47, %if.then43, %if.then39, %if.then35, %if.then31, %if.then27, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !13550), !dbg !13551
  %105 = load i32, i32* %status, align 4, !dbg !13552
  %cmp209 = icmp slt i32 %105, 0, !dbg !13554
  br i1 %cmp209, label %if.then210, label %if.end212, !dbg !13555

if.then210:                                       ; preds = %error
  %106 = load i32, i32* %status, align 4, !dbg !13556
  %call211 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %106, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.set_qam16, i64 0, i64 0)) #8, !dbg !13556
  br label %if.end212, !dbg !13556

if.end212:                                        ; preds = %if.then210, %error
  %107 = load i32, i32* %status, align 4, !dbg !13557
  ret i32 %107, !dbg !13558
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_qam32(%struct.drxk_state* %state) #0 !dbg !13559 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !13560, metadata !DIExpression()), !dbg !13561
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13562, metadata !DIExpression()), !dbg !13563
  store i32 0, i32* %status, align 4, !dbg !13563
  br label %do.body, !dbg !13564

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !13565
  %cmp = icmp uge i32 %0, 1, !dbg !13565
  br i1 %cmp, label %if.then, label %if.end, !dbg !13568

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.set_qam32, i64 0, i64 0)) #8, !dbg !13565
  br label %if.end, !dbg !13565

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !13568

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13569
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 8593325, i16 zeroext 6707) #9, !dbg !13570
  store i32 %call1, i32* %status, align 4, !dbg !13571
  %2 = load i32, i32* %status, align 4, !dbg !13572
  %cmp2 = icmp slt i32 %2, 0, !dbg !13574
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !13575

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !13576

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13577
  %call5 = call i32 @write16(%struct.drxk_state* %3, i32 8593326, i16 zeroext 6707) #9, !dbg !13578
  store i32 %call5, i32* %status, align 4, !dbg !13579
  %4 = load i32, i32* %status, align 4, !dbg !13580
  %cmp6 = icmp slt i32 %4, 0, !dbg !13582
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !13583

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !13584

if.end8:                                          ; preds = %if.end4
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13585
  %call9 = call i32 @write16(%struct.drxk_state* %5, i32 8593327, i16 zeroext 6707) #9, !dbg !13586
  store i32 %call9, i32* %status, align 4, !dbg !13587
  %6 = load i32, i32* %status, align 4, !dbg !13588
  %cmp10 = icmp slt i32 %6, 0, !dbg !13590
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !13591

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !13592

if.end12:                                         ; preds = %if.end8
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13593
  %call13 = call i32 @write16(%struct.drxk_state* %7, i32 8593328, i16 zeroext 6707) #9, !dbg !13594
  store i32 %call13, i32* %status, align 4, !dbg !13595
  %8 = load i32, i32* %status, align 4, !dbg !13596
  %cmp14 = icmp slt i32 %8, 0, !dbg !13598
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !13599

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !13600

if.end16:                                         ; preds = %if.end12
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13601
  %call17 = call i32 @write16(%struct.drxk_state* %9, i32 8593329, i16 zeroext 6707) #9, !dbg !13602
  store i32 %call17, i32* %status, align 4, !dbg !13603
  %10 = load i32, i32* %status, align 4, !dbg !13604
  %cmp18 = icmp slt i32 %10, 0, !dbg !13606
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !13607

if.then19:                                        ; preds = %if.end16
  br label %error, !dbg !13608

if.end20:                                         ; preds = %if.end16
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13609
  %call21 = call i32 @write16(%struct.drxk_state* %11, i32 8593330, i16 zeroext 6707) #9, !dbg !13610
  store i32 %call21, i32* %status, align 4, !dbg !13611
  %12 = load i32, i32* %status, align 4, !dbg !13612
  %cmp22 = icmp slt i32 %12, 0, !dbg !13614
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !13615

if.then23:                                        ; preds = %if.end20
  br label %error, !dbg !13616

if.end24:                                         ; preds = %if.end20
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13617
  %call25 = call i32 @write16(%struct.drxk_state* %13, i32 21233688, i16 zeroext 3) #9, !dbg !13618
  store i32 %call25, i32* %status, align 4, !dbg !13619
  %14 = load i32, i32* %status, align 4, !dbg !13620
  %cmp26 = icmp slt i32 %14, 0, !dbg !13622
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !13623

if.then27:                                        ; preds = %if.end24
  br label %error, !dbg !13624

if.end28:                                         ; preds = %if.end24
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13625
  %call29 = call i32 @write16(%struct.drxk_state* %15, i32 21233689, i16 zeroext 3) #9, !dbg !13626
  store i32 %call29, i32* %status, align 4, !dbg !13627
  %16 = load i32, i32* %status, align 4, !dbg !13628
  %cmp30 = icmp slt i32 %16, 0, !dbg !13630
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !13631

if.then31:                                        ; preds = %if.end28
  br label %error, !dbg !13632

if.end32:                                         ; preds = %if.end28
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13633
  %call33 = call i32 @write16(%struct.drxk_state* %17, i32 21233690, i16 zeroext 3) #9, !dbg !13634
  store i32 %call33, i32* %status, align 4, !dbg !13635
  %18 = load i32, i32* %status, align 4, !dbg !13636
  %cmp34 = icmp slt i32 %18, 0, !dbg !13638
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !13639

if.then35:                                        ; preds = %if.end32
  br label %error, !dbg !13640

if.end36:                                         ; preds = %if.end32
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13641
  %call37 = call i32 @write16(%struct.drxk_state* %19, i32 21233691, i16 zeroext 3) #9, !dbg !13642
  store i32 %call37, i32* %status, align 4, !dbg !13643
  %20 = load i32, i32* %status, align 4, !dbg !13644
  %cmp38 = icmp slt i32 %20, 0, !dbg !13646
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !13647

if.then39:                                        ; preds = %if.end36
  br label %error, !dbg !13648

if.end40:                                         ; preds = %if.end36
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13649
  %call41 = call i32 @write16(%struct.drxk_state* %21, i32 21233692, i16 zeroext 3) #9, !dbg !13650
  store i32 %call41, i32* %status, align 4, !dbg !13651
  %22 = load i32, i32* %status, align 4, !dbg !13652
  %cmp42 = icmp slt i32 %22, 0, !dbg !13654
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !13655

if.then43:                                        ; preds = %if.end40
  br label %error, !dbg !13656

if.end44:                                         ; preds = %if.end40
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13657
  %call45 = call i32 @write16(%struct.drxk_state* %23, i32 21233693, i16 zeroext 0) #9, !dbg !13658
  store i32 %call45, i32* %status, align 4, !dbg !13659
  %24 = load i32, i32* %status, align 4, !dbg !13660
  %cmp46 = icmp slt i32 %24, 0, !dbg !13662
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !13663

if.then47:                                        ; preds = %if.end44
  br label %error, !dbg !13664

if.end48:                                         ; preds = %if.end44
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13665
  %call49 = call i32 @write16(%struct.drxk_state* %25, i32 21430292, i16 zeroext 6) #9, !dbg !13666
  store i32 %call49, i32* %status, align 4, !dbg !13667
  %26 = load i32, i32* %status, align 4, !dbg !13668
  %cmp50 = icmp slt i32 %26, 0, !dbg !13670
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !13671

if.then51:                                        ; preds = %if.end48
  br label %error, !dbg !13672

if.end52:                                         ; preds = %if.end48
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13673
  %call53 = call i32 @write16(%struct.drxk_state* %27, i32 21430291, i16 zeroext 5) #9, !dbg !13674
  store i32 %call53, i32* %status, align 4, !dbg !13675
  %28 = load i32, i32* %status, align 4, !dbg !13676
  %cmp54 = icmp slt i32 %28, 0, !dbg !13678
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !13679

if.then55:                                        ; preds = %if.end52
  br label %error, !dbg !13680

if.end56:                                         ; preds = %if.end52
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13681
  %call57 = call i32 @write16(%struct.drxk_state* %29, i32 21430290, i16 zeroext 3) #9, !dbg !13682
  store i32 %call57, i32* %status, align 4, !dbg !13683
  %30 = load i32, i32* %status, align 4, !dbg !13684
  %cmp58 = icmp slt i32 %30, 0, !dbg !13686
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !13687

if.then59:                                        ; preds = %if.end56
  br label %error, !dbg !13688

if.end60:                                         ; preds = %if.end56
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13689
  %call61 = call i32 @write16(%struct.drxk_state* %31, i32 8593324, i16 zeroext 20480) #9, !dbg !13690
  store i32 %call61, i32* %status, align 4, !dbg !13691
  %32 = load i32, i32* %status, align 4, !dbg !13692
  %cmp62 = icmp slt i32 %32, 0, !dbg !13694
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !13695

if.then63:                                        ; preds = %if.end60
  br label %error, !dbg !13696

if.end64:                                         ; preds = %if.end60
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13697
  %call65 = call i32 @write16(%struct.drxk_state* %33, i32 8593305, i16 zeroext 15) #9, !dbg !13698
  store i32 %call65, i32* %status, align 4, !dbg !13699
  %34 = load i32, i32* %status, align 4, !dbg !13700
  %cmp66 = icmp slt i32 %34, 0, !dbg !13702
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !13703

if.then67:                                        ; preds = %if.end64
  br label %error, !dbg !13704

if.end68:                                         ; preds = %if.end64
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13705
  %call69 = call i32 @write16(%struct.drxk_state* %35, i32 8593303, i16 zeroext 40) #9, !dbg !13706
  store i32 %call69, i32* %status, align 4, !dbg !13707
  %36 = load i32, i32* %status, align 4, !dbg !13708
  %cmp70 = icmp slt i32 %36, 0, !dbg !13710
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !13711

if.then71:                                        ; preds = %if.end68
  br label %error, !dbg !13712

if.end72:                                         ; preds = %if.end68
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13713
  %call73 = call i32 @write16(%struct.drxk_state* %37, i32 8593314, i16 zeroext 12) #9, !dbg !13714
  store i32 %call73, i32* %status, align 4, !dbg !13715
  %38 = load i32, i32* %status, align 4, !dbg !13716
  %cmp74 = icmp slt i32 %38, 0, !dbg !13718
  br i1 %cmp74, label %if.then75, label %if.end76, !dbg !13719

if.then75:                                        ; preds = %if.end72
  br label %error, !dbg !13720

if.end76:                                         ; preds = %if.end72
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13721
  %call77 = call i32 @write16(%struct.drxk_state* %39, i32 8593313, i16 zeroext 24) #9, !dbg !13722
  store i32 %call77, i32* %status, align 4, !dbg !13723
  %40 = load i32, i32* %status, align 4, !dbg !13724
  %cmp78 = icmp slt i32 %40, 0, !dbg !13726
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !13727

if.then79:                                        ; preds = %if.end76
  br label %error, !dbg !13728

if.end80:                                         ; preds = %if.end76
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13729
  %call81 = call i32 @write16(%struct.drxk_state* %41, i32 8593312, i16 zeroext 24) #9, !dbg !13730
  store i32 %call81, i32* %status, align 4, !dbg !13731
  %42 = load i32, i32* %status, align 4, !dbg !13732
  %cmp82 = icmp slt i32 %42, 0, !dbg !13734
  br i1 %cmp82, label %if.then83, label %if.end84, !dbg !13735

if.then83:                                        ; preds = %if.end80
  br label %error, !dbg !13736

if.end84:                                         ; preds = %if.end80
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13737
  %call85 = call i32 @write16(%struct.drxk_state* %43, i32 8593317, i16 zeroext 12) #9, !dbg !13738
  store i32 %call85, i32* %status, align 4, !dbg !13739
  %44 = load i32, i32* %status, align 4, !dbg !13740
  %cmp86 = icmp slt i32 %44, 0, !dbg !13742
  br i1 %cmp86, label %if.then87, label %if.end88, !dbg !13743

if.then87:                                        ; preds = %if.end84
  br label %error, !dbg !13744

if.end88:                                         ; preds = %if.end84
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13745
  %call89 = call i32 @write16(%struct.drxk_state* %45, i32 8593316, i16 zeroext 16) #9, !dbg !13746
  store i32 %call89, i32* %status, align 4, !dbg !13747
  %46 = load i32, i32* %status, align 4, !dbg !13748
  %cmp90 = icmp slt i32 %46, 0, !dbg !13750
  br i1 %cmp90, label %if.then91, label %if.end92, !dbg !13751

if.then91:                                        ; preds = %if.end88
  br label %error, !dbg !13752

if.end92:                                         ; preds = %if.end88
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13753
  %call93 = call i32 @write16(%struct.drxk_state* %47, i32 8593315, i16 zeroext 16) #9, !dbg !13754
  store i32 %call93, i32* %status, align 4, !dbg !13755
  %48 = load i32, i32* %status, align 4, !dbg !13756
  %cmp94 = icmp slt i32 %48, 0, !dbg !13758
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !13759

if.then95:                                        ; preds = %if.end92
  br label %error, !dbg !13760

if.end96:                                         ; preds = %if.end92
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13761
  %call97 = call i32 @write16(%struct.drxk_state* %49, i32 8593308, i16 zeroext 5) #9, !dbg !13762
  store i32 %call97, i32* %status, align 4, !dbg !13763
  %50 = load i32, i32* %status, align 4, !dbg !13764
  %cmp98 = icmp slt i32 %50, 0, !dbg !13766
  br i1 %cmp98, label %if.then99, label %if.end100, !dbg !13767

if.then99:                                        ; preds = %if.end96
  br label %error, !dbg !13768

if.end100:                                        ; preds = %if.end96
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13769
  %call101 = call i32 @write16(%struct.drxk_state* %51, i32 8593307, i16 zeroext 20) #9, !dbg !13770
  store i32 %call101, i32* %status, align 4, !dbg !13771
  %52 = load i32, i32* %status, align 4, !dbg !13772
  %cmp102 = icmp slt i32 %52, 0, !dbg !13774
  br i1 %cmp102, label %if.then103, label %if.end104, !dbg !13775

if.then103:                                       ; preds = %if.end100
  br label %error, !dbg !13776

if.end104:                                        ; preds = %if.end100
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13777
  %call105 = call i32 @write16(%struct.drxk_state* %53, i32 8593306, i16 zeroext 80) #9, !dbg !13778
  store i32 %call105, i32* %status, align 4, !dbg !13779
  %54 = load i32, i32* %status, align 4, !dbg !13780
  %cmp106 = icmp slt i32 %54, 0, !dbg !13782
  br i1 %cmp106, label %if.then107, label %if.end108, !dbg !13783

if.then107:                                       ; preds = %if.end104
  br label %error, !dbg !13784

if.end108:                                        ; preds = %if.end104
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13785
  %call109 = call i32 @write16(%struct.drxk_state* %55, i32 8593311, i16 zeroext 5) #9, !dbg !13786
  store i32 %call109, i32* %status, align 4, !dbg !13787
  %56 = load i32, i32* %status, align 4, !dbg !13788
  %cmp110 = icmp slt i32 %56, 0, !dbg !13790
  br i1 %cmp110, label %if.then111, label %if.end112, !dbg !13791

if.then111:                                       ; preds = %if.end108
  br label %error, !dbg !13792

if.end112:                                        ; preds = %if.end108
  %57 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13793
  %call113 = call i32 @write16(%struct.drxk_state* %57, i32 8593310, i16 zeroext 20) #9, !dbg !13794
  store i32 %call113, i32* %status, align 4, !dbg !13795
  %58 = load i32, i32* %status, align 4, !dbg !13796
  %cmp114 = icmp slt i32 %58, 0, !dbg !13798
  br i1 %cmp114, label %if.then115, label %if.end116, !dbg !13799

if.then115:                                       ; preds = %if.end112
  br label %error, !dbg !13800

if.end116:                                        ; preds = %if.end112
  %59 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13801
  %call117 = call i32 @write16(%struct.drxk_state* %59, i32 8593309, i16 zeroext 50) #9, !dbg !13802
  store i32 %call117, i32* %status, align 4, !dbg !13803
  %60 = load i32, i32* %status, align 4, !dbg !13804
  %cmp118 = icmp slt i32 %60, 0, !dbg !13806
  br i1 %cmp118, label %if.then119, label %if.end120, !dbg !13807

if.then119:                                       ; preds = %if.end116
  br label %error, !dbg !13808

if.end120:                                        ; preds = %if.end116
  %61 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13809
  %call121 = call i32 @write16(%struct.drxk_state* %61, i32 8593320, i16 zeroext 16) #9, !dbg !13810
  store i32 %call121, i32* %status, align 4, !dbg !13811
  %62 = load i32, i32* %status, align 4, !dbg !13812
  %cmp122 = icmp slt i32 %62, 0, !dbg !13814
  br i1 %cmp122, label %if.then123, label %if.end124, !dbg !13815

if.then123:                                       ; preds = %if.end120
  br label %error, !dbg !13816

if.end124:                                        ; preds = %if.end120
  %63 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13817
  %call125 = call i32 @write16(%struct.drxk_state* %63, i32 8593319, i16 zeroext 16) #9, !dbg !13818
  store i32 %call125, i32* %status, align 4, !dbg !13819
  %64 = load i32, i32* %status, align 4, !dbg !13820
  %cmp126 = icmp slt i32 %64, 0, !dbg !13822
  br i1 %cmp126, label %if.then127, label %if.end128, !dbg !13823

if.then127:                                       ; preds = %if.end124
  br label %error, !dbg !13824

if.end128:                                        ; preds = %if.end124
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13825
  %call129 = call i32 @write16(%struct.drxk_state* %65, i32 8593318, i16 zeroext 16) #9, !dbg !13826
  store i32 %call129, i32* %status, align 4, !dbg !13827
  %66 = load i32, i32* %status, align 4, !dbg !13828
  %cmp130 = icmp slt i32 %66, 0, !dbg !13830
  br i1 %cmp130, label %if.then131, label %if.end132, !dbg !13831

if.then131:                                       ; preds = %if.end128
  br label %error, !dbg !13832

if.end132:                                        ; preds = %if.end128
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13833
  %call133 = call i32 @write16(%struct.drxk_state* %67, i32 8593323, i16 zeroext 5) #9, !dbg !13834
  store i32 %call133, i32* %status, align 4, !dbg !13835
  %68 = load i32, i32* %status, align 4, !dbg !13836
  %cmp134 = icmp slt i32 %68, 0, !dbg !13838
  br i1 %cmp134, label %if.then135, label %if.end136, !dbg !13839

if.then135:                                       ; preds = %if.end132
  br label %error, !dbg !13840

if.end136:                                        ; preds = %if.end132
  %69 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13841
  %call137 = call i32 @write16(%struct.drxk_state* %69, i32 8593322, i16 zeroext 10) #9, !dbg !13842
  store i32 %call137, i32* %status, align 4, !dbg !13843
  %70 = load i32, i32* %status, align 4, !dbg !13844
  %cmp138 = icmp slt i32 %70, 0, !dbg !13846
  br i1 %cmp138, label %if.then139, label %if.end140, !dbg !13847

if.then139:                                       ; preds = %if.end136
  br label %error, !dbg !13848

if.end140:                                        ; preds = %if.end136
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13849
  %call141 = call i32 @write16(%struct.drxk_state* %71, i32 8593321, i16 zeroext 0) #9, !dbg !13850
  store i32 %call141, i32* %status, align 4, !dbg !13851
  %72 = load i32, i32* %status, align 4, !dbg !13852
  %cmp142 = icmp slt i32 %72, 0, !dbg !13854
  br i1 %cmp142, label %if.then143, label %if.end144, !dbg !13855

if.then143:                                       ; preds = %if.end140
  br label %error, !dbg !13856

if.end144:                                        ; preds = %if.end140
  %73 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13857
  %call145 = call i32 @write16(%struct.drxk_state* %73, i32 8593294, i16 zeroext 90) #9, !dbg !13858
  store i32 %call145, i32* %status, align 4, !dbg !13859
  %74 = load i32, i32* %status, align 4, !dbg !13860
  %cmp146 = icmp slt i32 %74, 0, !dbg !13862
  br i1 %cmp146, label %if.then147, label %if.end148, !dbg !13863

if.then147:                                       ; preds = %if.end144
  br label %error, !dbg !13864

if.end148:                                        ; preds = %if.end144
  %75 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13865
  %call149 = call i32 @write16(%struct.drxk_state* %75, i32 8593295, i16 zeroext 50) #9, !dbg !13866
  store i32 %call149, i32* %status, align 4, !dbg !13867
  %76 = load i32, i32* %status, align 4, !dbg !13868
  %cmp150 = icmp slt i32 %76, 0, !dbg !13870
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !13871

if.then151:                                       ; preds = %if.end148
  br label %error, !dbg !13872

if.end152:                                        ; preds = %if.end148
  %77 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13873
  %call153 = call i32 @write16(%struct.drxk_state* %77, i32 8593298, i16 zeroext 80) #9, !dbg !13874
  store i32 %call153, i32* %status, align 4, !dbg !13875
  %78 = load i32, i32* %status, align 4, !dbg !13876
  %cmp154 = icmp slt i32 %78, 0, !dbg !13878
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !13879

if.then155:                                       ; preds = %if.end152
  br label %error, !dbg !13880

if.end156:                                        ; preds = %if.end152
  %79 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13881
  %call157 = call i32 @write16(%struct.drxk_state* %79, i32 8593296, i16 zeroext 100) #9, !dbg !13882
  store i32 %call157, i32* %status, align 4, !dbg !13883
  %80 = load i32, i32* %status, align 4, !dbg !13884
  %cmp158 = icmp slt i32 %80, 0, !dbg !13886
  br i1 %cmp158, label %if.then159, label %if.end160, !dbg !13887

if.then159:                                       ; preds = %if.end156
  br label %error, !dbg !13888

if.end160:                                        ; preds = %if.end156
  %81 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13889
  %call161 = call i32 @write16(%struct.drxk_state* %81, i32 8593299, i16 zeroext 170) #9, !dbg !13890
  store i32 %call161, i32* %status, align 4, !dbg !13891
  %82 = load i32, i32* %status, align 4, !dbg !13892
  %cmp162 = icmp slt i32 %82, 0, !dbg !13894
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !13895

if.then163:                                       ; preds = %if.end160
  br label %error, !dbg !13896

if.end164:                                        ; preds = %if.end160
  %83 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13897
  %call165 = call i32 @write16(%struct.drxk_state* %83, i32 8593297, i16 zeroext 100) #9, !dbg !13898
  store i32 %call165, i32* %status, align 4, !dbg !13899
  %84 = load i32, i32* %status, align 4, !dbg !13900
  %cmp166 = icmp slt i32 %84, 0, !dbg !13902
  br i1 %cmp166, label %if.then167, label %if.end168, !dbg !13903

if.then167:                                       ; preds = %if.end164
  br label %error, !dbg !13904

if.end168:                                        ; preds = %if.end164
  %85 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13905
  %call169 = call i32 @write16(%struct.drxk_state* %85, i32 8593300, i16 zeroext 40) #9, !dbg !13906
  store i32 %call169, i32* %status, align 4, !dbg !13907
  %86 = load i32, i32* %status, align 4, !dbg !13908
  %cmp170 = icmp slt i32 %86, 0, !dbg !13910
  br i1 %cmp170, label %if.then171, label %if.end172, !dbg !13911

if.then171:                                       ; preds = %if.end168
  br label %error, !dbg !13912

if.end172:                                        ; preds = %if.end168
  %87 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13913
  %call173 = call i32 @write16(%struct.drxk_state* %87, i32 8593302, i16 zeroext 4) #9, !dbg !13914
  store i32 %call173, i32* %status, align 4, !dbg !13915
  %88 = load i32, i32* %status, align 4, !dbg !13916
  %cmp174 = icmp slt i32 %88, 0, !dbg !13918
  br i1 %cmp174, label %if.then175, label %if.end176, !dbg !13919

if.then175:                                       ; preds = %if.end172
  br label %error, !dbg !13920

if.end176:                                        ; preds = %if.end172
  %89 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13921
  %call177 = call i32 @write16(%struct.drxk_state* %89, i32 8593301, i16 zeroext 10) #9, !dbg !13922
  store i32 %call177, i32* %status, align 4, !dbg !13923
  %90 = load i32, i32* %status, align 4, !dbg !13924
  %cmp178 = icmp slt i32 %90, 0, !dbg !13926
  br i1 %cmp178, label %if.then179, label %if.end180, !dbg !13927

if.then179:                                       ; preds = %if.end176
  br label %error, !dbg !13928

if.end180:                                        ; preds = %if.end176
  %91 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13929
  %call181 = call i32 @write16(%struct.drxk_state* %91, i32 8593284, i16 zeroext 12) #9, !dbg !13930
  store i32 %call181, i32* %status, align 4, !dbg !13931
  %92 = load i32, i32* %status, align 4, !dbg !13932
  %cmp182 = icmp slt i32 %92, 0, !dbg !13934
  br i1 %cmp182, label %if.then183, label %if.end184, !dbg !13935

if.then183:                                       ; preds = %if.end180
  br label %error, !dbg !13936

if.end184:                                        ; preds = %if.end180
  %93 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13937
  %call185 = call i32 @write16(%struct.drxk_state* %93, i32 8593285, i16 zeroext 140) #9, !dbg !13938
  store i32 %call185, i32* %status, align 4, !dbg !13939
  %94 = load i32, i32* %status, align 4, !dbg !13940
  %cmp186 = icmp slt i32 %94, 0, !dbg !13942
  br i1 %cmp186, label %if.then187, label %if.end188, !dbg !13943

if.then187:                                       ; preds = %if.end184
  br label %error, !dbg !13944

if.end188:                                        ; preds = %if.end184
  %95 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13945
  %call189 = call i32 @write16(%struct.drxk_state* %95, i32 8593286, i16 zeroext -8) #9, !dbg !13946
  store i32 %call189, i32* %status, align 4, !dbg !13947
  %96 = load i32, i32* %status, align 4, !dbg !13948
  %cmp190 = icmp slt i32 %96, 0, !dbg !13950
  br i1 %cmp190, label %if.then191, label %if.end192, !dbg !13951

if.then191:                                       ; preds = %if.end188
  br label %error, !dbg !13952

if.end192:                                        ; preds = %if.end188
  %97 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13953
  %call193 = call i32 @write16(%struct.drxk_state* %97, i32 8593287, i16 zeroext -16) #9, !dbg !13954
  store i32 %call193, i32* %status, align 4, !dbg !13955
  %98 = load i32, i32* %status, align 4, !dbg !13956
  %cmp194 = icmp slt i32 %98, 0, !dbg !13958
  br i1 %cmp194, label %if.then195, label %if.end196, !dbg !13959

if.then195:                                       ; preds = %if.end192
  br label %error, !dbg !13960

if.end196:                                        ; preds = %if.end192
  %99 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13961
  %call197 = call i32 @write16(%struct.drxk_state* %99, i32 8593288, i16 zeroext -26) #9, !dbg !13962
  store i32 %call197, i32* %status, align 4, !dbg !13963
  %100 = load i32, i32* %status, align 4, !dbg !13964
  %cmp198 = icmp slt i32 %100, 0, !dbg !13966
  br i1 %cmp198, label %if.then199, label %if.end200, !dbg !13967

if.then199:                                       ; preds = %if.end196
  br label %error, !dbg !13968

if.end200:                                        ; preds = %if.end196
  %101 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13969
  %call201 = call i32 @write16(%struct.drxk_state* %101, i32 8593289, i16 zeroext -56) #9, !dbg !13970
  store i32 %call201, i32* %status, align 4, !dbg !13971
  %102 = load i32, i32* %status, align 4, !dbg !13972
  %cmp202 = icmp slt i32 %102, 0, !dbg !13974
  br i1 %cmp202, label %if.then203, label %if.end204, !dbg !13975

if.then203:                                       ; preds = %if.end200
  br label %error, !dbg !13976

if.end204:                                        ; preds = %if.end200
  %103 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !13977
  %call205 = call i32 @write16(%struct.drxk_state* %103, i32 8593290, i16 zeroext -86) #9, !dbg !13978
  store i32 %call205, i32* %status, align 4, !dbg !13979
  br label %error, !dbg !13980

error:                                            ; preds = %if.end204, %if.then203, %if.then199, %if.then195, %if.then191, %if.then187, %if.then183, %if.then179, %if.then175, %if.then171, %if.then167, %if.then163, %if.then159, %if.then155, %if.then151, %if.then147, %if.then143, %if.then139, %if.then135, %if.then131, %if.then127, %if.then123, %if.then119, %if.then115, %if.then111, %if.then107, %if.then103, %if.then99, %if.then95, %if.then91, %if.then87, %if.then83, %if.then79, %if.then75, %if.then71, %if.then67, %if.then63, %if.then59, %if.then55, %if.then51, %if.then47, %if.then43, %if.then39, %if.then35, %if.then31, %if.then27, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !13981), !dbg !13982
  %104 = load i32, i32* %status, align 4, !dbg !13983
  %cmp206 = icmp slt i32 %104, 0, !dbg !13985
  br i1 %cmp206, label %if.then207, label %if.end209, !dbg !13986

if.then207:                                       ; preds = %error
  %105 = load i32, i32* %status, align 4, !dbg !13987
  %call208 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %105, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.set_qam32, i64 0, i64 0)) #8, !dbg !13987
  br label %if.end209, !dbg !13987

if.end209:                                        ; preds = %if.then207, %error
  %106 = load i32, i32* %status, align 4, !dbg !13988
  ret i32 %106, !dbg !13989
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_qam64(%struct.drxk_state* %state) #0 !dbg !13990 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !13991, metadata !DIExpression()), !dbg !13992
  call void @llvm.dbg.declare(metadata i32* %status, metadata !13993, metadata !DIExpression()), !dbg !13994
  store i32 0, i32* %status, align 4, !dbg !13994
  br label %do.body, !dbg !13995

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !13996
  %cmp = icmp uge i32 %0, 1, !dbg !13996
  br i1 %cmp, label %if.then, label %if.end, !dbg !13999

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.set_qam64, i64 0, i64 0)) #8, !dbg !13996
  br label %if.end, !dbg !13996

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !13999

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14000
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 8593325, i16 zeroext 13336) #9, !dbg !14001
  store i32 %call1, i32* %status, align 4, !dbg !14002
  %2 = load i32, i32* %status, align 4, !dbg !14003
  %cmp2 = icmp slt i32 %2, 0, !dbg !14005
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !14006

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !14007

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14008
  %call5 = call i32 @write16(%struct.drxk_state* %3, i32 8593326, i16 zeroext 12618) #9, !dbg !14009
  store i32 %call5, i32* %status, align 4, !dbg !14010
  %4 = load i32, i32* %status, align 4, !dbg !14011
  %cmp6 = icmp slt i32 %4, 0, !dbg !14013
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14014

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !14015

if.end8:                                          ; preds = %if.end4
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14016
  %call9 = call i32 @write16(%struct.drxk_state* %5, i32 8593327, i16 zeroext 11988) #9, !dbg !14017
  store i32 %call9, i32* %status, align 4, !dbg !14018
  %6 = load i32, i32* %status, align 4, !dbg !14019
  %cmp10 = icmp slt i32 %6, 0, !dbg !14021
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !14022

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !14023

if.end12:                                         ; preds = %if.end8
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14024
  %call13 = call i32 @write16(%struct.drxk_state* %7, i32 8593328, i16 zeroext 13809) #9, !dbg !14025
  store i32 %call13, i32* %status, align 4, !dbg !14026
  %8 = load i32, i32* %status, align 4, !dbg !14027
  %cmp14 = icmp slt i32 %8, 0, !dbg !14029
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !14030

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !14031

if.end16:                                         ; preds = %if.end12
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14032
  %call17 = call i32 @write16(%struct.drxk_state* %9, i32 8593329, i16 zeroext 13809) #9, !dbg !14033
  store i32 %call17, i32* %status, align 4, !dbg !14034
  %10 = load i32, i32* %status, align 4, !dbg !14035
  %cmp18 = icmp slt i32 %10, 0, !dbg !14037
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !14038

if.then19:                                        ; preds = %if.end16
  br label %error, !dbg !14039

if.end20:                                         ; preds = %if.end16
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14040
  %call21 = call i32 @write16(%struct.drxk_state* %11, i32 8593330, i16 zeroext 15609) #9, !dbg !14041
  store i32 %call21, i32* %status, align 4, !dbg !14042
  %12 = load i32, i32* %status, align 4, !dbg !14043
  %cmp22 = icmp slt i32 %12, 0, !dbg !14045
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !14046

if.then23:                                        ; preds = %if.end20
  br label %error, !dbg !14047

if.end24:                                         ; preds = %if.end20
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14048
  %call25 = call i32 @write16(%struct.drxk_state* %13, i32 21233688, i16 zeroext 4) #9, !dbg !14049
  store i32 %call25, i32* %status, align 4, !dbg !14050
  %14 = load i32, i32* %status, align 4, !dbg !14051
  %cmp26 = icmp slt i32 %14, 0, !dbg !14053
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !14054

if.then27:                                        ; preds = %if.end24
  br label %error, !dbg !14055

if.end28:                                         ; preds = %if.end24
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14056
  %call29 = call i32 @write16(%struct.drxk_state* %15, i32 21233689, i16 zeroext 4) #9, !dbg !14057
  store i32 %call29, i32* %status, align 4, !dbg !14058
  %16 = load i32, i32* %status, align 4, !dbg !14059
  %cmp30 = icmp slt i32 %16, 0, !dbg !14061
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !14062

if.then31:                                        ; preds = %if.end28
  br label %error, !dbg !14063

if.end32:                                         ; preds = %if.end28
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14064
  %call33 = call i32 @write16(%struct.drxk_state* %17, i32 21233690, i16 zeroext 4) #9, !dbg !14065
  store i32 %call33, i32* %status, align 4, !dbg !14066
  %18 = load i32, i32* %status, align 4, !dbg !14067
  %cmp34 = icmp slt i32 %18, 0, !dbg !14069
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !14070

if.then35:                                        ; preds = %if.end32
  br label %error, !dbg !14071

if.end36:                                         ; preds = %if.end32
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14072
  %call37 = call i32 @write16(%struct.drxk_state* %19, i32 21233691, i16 zeroext 4) #9, !dbg !14073
  store i32 %call37, i32* %status, align 4, !dbg !14074
  %20 = load i32, i32* %status, align 4, !dbg !14075
  %cmp38 = icmp slt i32 %20, 0, !dbg !14077
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !14078

if.then39:                                        ; preds = %if.end36
  br label %error, !dbg !14079

if.end40:                                         ; preds = %if.end36
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14080
  %call41 = call i32 @write16(%struct.drxk_state* %21, i32 21233692, i16 zeroext 3) #9, !dbg !14081
  store i32 %call41, i32* %status, align 4, !dbg !14082
  %22 = load i32, i32* %status, align 4, !dbg !14083
  %cmp42 = icmp slt i32 %22, 0, !dbg !14085
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !14086

if.then43:                                        ; preds = %if.end40
  br label %error, !dbg !14087

if.end44:                                         ; preds = %if.end40
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14088
  %call45 = call i32 @write16(%struct.drxk_state* %23, i32 21233693, i16 zeroext 0) #9, !dbg !14089
  store i32 %call45, i32* %status, align 4, !dbg !14090
  %24 = load i32, i32* %status, align 4, !dbg !14091
  %cmp46 = icmp slt i32 %24, 0, !dbg !14093
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !14094

if.then47:                                        ; preds = %if.end44
  br label %error, !dbg !14095

if.end48:                                         ; preds = %if.end44
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14096
  %call49 = call i32 @write16(%struct.drxk_state* %25, i32 21430292, i16 zeroext 5) #9, !dbg !14097
  store i32 %call49, i32* %status, align 4, !dbg !14098
  %26 = load i32, i32* %status, align 4, !dbg !14099
  %cmp50 = icmp slt i32 %26, 0, !dbg !14101
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !14102

if.then51:                                        ; preds = %if.end48
  br label %error, !dbg !14103

if.end52:                                         ; preds = %if.end48
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14104
  %call53 = call i32 @write16(%struct.drxk_state* %27, i32 21430291, i16 zeroext 4) #9, !dbg !14105
  store i32 %call53, i32* %status, align 4, !dbg !14106
  %28 = load i32, i32* %status, align 4, !dbg !14107
  %cmp54 = icmp slt i32 %28, 0, !dbg !14109
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !14110

if.then55:                                        ; preds = %if.end52
  br label %error, !dbg !14111

if.end56:                                         ; preds = %if.end52
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14112
  %call57 = call i32 @write16(%struct.drxk_state* %29, i32 21430290, i16 zeroext 3) #9, !dbg !14113
  store i32 %call57, i32* %status, align 4, !dbg !14114
  %30 = load i32, i32* %status, align 4, !dbg !14115
  %cmp58 = icmp slt i32 %30, 0, !dbg !14117
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !14118

if.then59:                                        ; preds = %if.end56
  br label %error, !dbg !14119

if.end60:                                         ; preds = %if.end56
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14120
  %call61 = call i32 @write16(%struct.drxk_state* %31, i32 8593324, i16 zeroext -22528) #9, !dbg !14121
  store i32 %call61, i32* %status, align 4, !dbg !14122
  %32 = load i32, i32* %status, align 4, !dbg !14123
  %cmp62 = icmp slt i32 %32, 0, !dbg !14125
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !14126

if.then63:                                        ; preds = %if.end60
  br label %error, !dbg !14127

if.end64:                                         ; preds = %if.end60
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14128
  %call65 = call i32 @write16(%struct.drxk_state* %33, i32 8593305, i16 zeroext 15) #9, !dbg !14129
  store i32 %call65, i32* %status, align 4, !dbg !14130
  %34 = load i32, i32* %status, align 4, !dbg !14131
  %cmp66 = icmp slt i32 %34, 0, !dbg !14133
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !14134

if.then67:                                        ; preds = %if.end64
  br label %error, !dbg !14135

if.end68:                                         ; preds = %if.end64
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14136
  %call69 = call i32 @write16(%struct.drxk_state* %35, i32 8593303, i16 zeroext 40) #9, !dbg !14137
  store i32 %call69, i32* %status, align 4, !dbg !14138
  %36 = load i32, i32* %status, align 4, !dbg !14139
  %cmp70 = icmp slt i32 %36, 0, !dbg !14141
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !14142

if.then71:                                        ; preds = %if.end68
  br label %error, !dbg !14143

if.end72:                                         ; preds = %if.end68
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14144
  %call73 = call i32 @write16(%struct.drxk_state* %37, i32 8593314, i16 zeroext 12) #9, !dbg !14145
  store i32 %call73, i32* %status, align 4, !dbg !14146
  %38 = load i32, i32* %status, align 4, !dbg !14147
  %cmp74 = icmp slt i32 %38, 0, !dbg !14149
  br i1 %cmp74, label %if.then75, label %if.end76, !dbg !14150

if.then75:                                        ; preds = %if.end72
  br label %error, !dbg !14151

if.end76:                                         ; preds = %if.end72
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14152
  %call77 = call i32 @write16(%struct.drxk_state* %39, i32 8593313, i16 zeroext 24) #9, !dbg !14153
  store i32 %call77, i32* %status, align 4, !dbg !14154
  %40 = load i32, i32* %status, align 4, !dbg !14155
  %cmp78 = icmp slt i32 %40, 0, !dbg !14157
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !14158

if.then79:                                        ; preds = %if.end76
  br label %error, !dbg !14159

if.end80:                                         ; preds = %if.end76
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14160
  %call81 = call i32 @write16(%struct.drxk_state* %41, i32 8593312, i16 zeroext 24) #9, !dbg !14161
  store i32 %call81, i32* %status, align 4, !dbg !14162
  %42 = load i32, i32* %status, align 4, !dbg !14163
  %cmp82 = icmp slt i32 %42, 0, !dbg !14165
  br i1 %cmp82, label %if.then83, label %if.end84, !dbg !14166

if.then83:                                        ; preds = %if.end80
  br label %error, !dbg !14167

if.end84:                                         ; preds = %if.end80
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14168
  %call85 = call i32 @write16(%struct.drxk_state* %43, i32 8593317, i16 zeroext 12) #9, !dbg !14169
  store i32 %call85, i32* %status, align 4, !dbg !14170
  %44 = load i32, i32* %status, align 4, !dbg !14171
  %cmp86 = icmp slt i32 %44, 0, !dbg !14173
  br i1 %cmp86, label %if.then87, label %if.end88, !dbg !14174

if.then87:                                        ; preds = %if.end84
  br label %error, !dbg !14175

if.end88:                                         ; preds = %if.end84
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14176
  %call89 = call i32 @write16(%struct.drxk_state* %45, i32 8593316, i16 zeroext 16) #9, !dbg !14177
  store i32 %call89, i32* %status, align 4, !dbg !14178
  %46 = load i32, i32* %status, align 4, !dbg !14179
  %cmp90 = icmp slt i32 %46, 0, !dbg !14181
  br i1 %cmp90, label %if.then91, label %if.end92, !dbg !14182

if.then91:                                        ; preds = %if.end88
  br label %error, !dbg !14183

if.end92:                                         ; preds = %if.end88
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14184
  %call93 = call i32 @write16(%struct.drxk_state* %47, i32 8593315, i16 zeroext 16) #9, !dbg !14185
  store i32 %call93, i32* %status, align 4, !dbg !14186
  %48 = load i32, i32* %status, align 4, !dbg !14187
  %cmp94 = icmp slt i32 %48, 0, !dbg !14189
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !14190

if.then95:                                        ; preds = %if.end92
  br label %error, !dbg !14191

if.end96:                                         ; preds = %if.end92
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14192
  %call97 = call i32 @write16(%struct.drxk_state* %49, i32 8593308, i16 zeroext 5) #9, !dbg !14193
  store i32 %call97, i32* %status, align 4, !dbg !14194
  %50 = load i32, i32* %status, align 4, !dbg !14195
  %cmp98 = icmp slt i32 %50, 0, !dbg !14197
  br i1 %cmp98, label %if.then99, label %if.end100, !dbg !14198

if.then99:                                        ; preds = %if.end96
  br label %error, !dbg !14199

if.end100:                                        ; preds = %if.end96
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14200
  %call101 = call i32 @write16(%struct.drxk_state* %51, i32 8593307, i16 zeroext 30) #9, !dbg !14201
  store i32 %call101, i32* %status, align 4, !dbg !14202
  %52 = load i32, i32* %status, align 4, !dbg !14203
  %cmp102 = icmp slt i32 %52, 0, !dbg !14205
  br i1 %cmp102, label %if.then103, label %if.end104, !dbg !14206

if.then103:                                       ; preds = %if.end100
  br label %error, !dbg !14207

if.end104:                                        ; preds = %if.end100
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14208
  %call105 = call i32 @write16(%struct.drxk_state* %53, i32 8593306, i16 zeroext 100) #9, !dbg !14209
  store i32 %call105, i32* %status, align 4, !dbg !14210
  %54 = load i32, i32* %status, align 4, !dbg !14211
  %cmp106 = icmp slt i32 %54, 0, !dbg !14213
  br i1 %cmp106, label %if.then107, label %if.end108, !dbg !14214

if.then107:                                       ; preds = %if.end104
  br label %error, !dbg !14215

if.end108:                                        ; preds = %if.end104
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14216
  %call109 = call i32 @write16(%struct.drxk_state* %55, i32 8593311, i16 zeroext 5) #9, !dbg !14217
  store i32 %call109, i32* %status, align 4, !dbg !14218
  %56 = load i32, i32* %status, align 4, !dbg !14219
  %cmp110 = icmp slt i32 %56, 0, !dbg !14221
  br i1 %cmp110, label %if.then111, label %if.end112, !dbg !14222

if.then111:                                       ; preds = %if.end108
  br label %error, !dbg !14223

if.end112:                                        ; preds = %if.end108
  %57 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14224
  %call113 = call i32 @write16(%struct.drxk_state* %57, i32 8593310, i16 zeroext 30) #9, !dbg !14225
  store i32 %call113, i32* %status, align 4, !dbg !14226
  %58 = load i32, i32* %status, align 4, !dbg !14227
  %cmp114 = icmp slt i32 %58, 0, !dbg !14229
  br i1 %cmp114, label %if.then115, label %if.end116, !dbg !14230

if.then115:                                       ; preds = %if.end112
  br label %error, !dbg !14231

if.end116:                                        ; preds = %if.end112
  %59 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14232
  %call117 = call i32 @write16(%struct.drxk_state* %59, i32 8593309, i16 zeroext 50) #9, !dbg !14233
  store i32 %call117, i32* %status, align 4, !dbg !14234
  %60 = load i32, i32* %status, align 4, !dbg !14235
  %cmp118 = icmp slt i32 %60, 0, !dbg !14237
  br i1 %cmp118, label %if.then119, label %if.end120, !dbg !14238

if.then119:                                       ; preds = %if.end116
  br label %error, !dbg !14239

if.end120:                                        ; preds = %if.end116
  %61 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14240
  %call121 = call i32 @write16(%struct.drxk_state* %61, i32 8593320, i16 zeroext 16) #9, !dbg !14241
  store i32 %call121, i32* %status, align 4, !dbg !14242
  %62 = load i32, i32* %status, align 4, !dbg !14243
  %cmp122 = icmp slt i32 %62, 0, !dbg !14245
  br i1 %cmp122, label %if.then123, label %if.end124, !dbg !14246

if.then123:                                       ; preds = %if.end120
  br label %error, !dbg !14247

if.end124:                                        ; preds = %if.end120
  %63 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14248
  %call125 = call i32 @write16(%struct.drxk_state* %63, i32 8593319, i16 zeroext 25) #9, !dbg !14249
  store i32 %call125, i32* %status, align 4, !dbg !14250
  %64 = load i32, i32* %status, align 4, !dbg !14251
  %cmp126 = icmp slt i32 %64, 0, !dbg !14253
  br i1 %cmp126, label %if.then127, label %if.end128, !dbg !14254

if.then127:                                       ; preds = %if.end124
  br label %error, !dbg !14255

if.end128:                                        ; preds = %if.end124
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14256
  %call129 = call i32 @write16(%struct.drxk_state* %65, i32 8593318, i16 zeroext 48) #9, !dbg !14257
  store i32 %call129, i32* %status, align 4, !dbg !14258
  %66 = load i32, i32* %status, align 4, !dbg !14259
  %cmp130 = icmp slt i32 %66, 0, !dbg !14261
  br i1 %cmp130, label %if.then131, label %if.end132, !dbg !14262

if.then131:                                       ; preds = %if.end128
  br label %error, !dbg !14263

if.end132:                                        ; preds = %if.end128
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14264
  %call133 = call i32 @write16(%struct.drxk_state* %67, i32 8593323, i16 zeroext 5) #9, !dbg !14265
  store i32 %call133, i32* %status, align 4, !dbg !14266
  %68 = load i32, i32* %status, align 4, !dbg !14267
  %cmp134 = icmp slt i32 %68, 0, !dbg !14269
  br i1 %cmp134, label %if.then135, label %if.end136, !dbg !14270

if.then135:                                       ; preds = %if.end132
  br label %error, !dbg !14271

if.end136:                                        ; preds = %if.end132
  %69 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14272
  %call137 = call i32 @write16(%struct.drxk_state* %69, i32 8593322, i16 zeroext 10) #9, !dbg !14273
  store i32 %call137, i32* %status, align 4, !dbg !14274
  %70 = load i32, i32* %status, align 4, !dbg !14275
  %cmp138 = icmp slt i32 %70, 0, !dbg !14277
  br i1 %cmp138, label %if.then139, label %if.end140, !dbg !14278

if.then139:                                       ; preds = %if.end136
  br label %error, !dbg !14279

if.end140:                                        ; preds = %if.end136
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14280
  %call141 = call i32 @write16(%struct.drxk_state* %71, i32 8593321, i16 zeroext 10) #9, !dbg !14281
  store i32 %call141, i32* %status, align 4, !dbg !14282
  %72 = load i32, i32* %status, align 4, !dbg !14283
  %cmp142 = icmp slt i32 %72, 0, !dbg !14285
  br i1 %cmp142, label %if.then143, label %if.end144, !dbg !14286

if.then143:                                       ; preds = %if.end140
  br label %error, !dbg !14287

if.end144:                                        ; preds = %if.end140
  %73 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14288
  %call145 = call i32 @write16(%struct.drxk_state* %73, i32 8593294, i16 zeroext 100) #9, !dbg !14289
  store i32 %call145, i32* %status, align 4, !dbg !14290
  %74 = load i32, i32* %status, align 4, !dbg !14291
  %cmp146 = icmp slt i32 %74, 0, !dbg !14293
  br i1 %cmp146, label %if.then147, label %if.end148, !dbg !14294

if.then147:                                       ; preds = %if.end144
  br label %error, !dbg !14295

if.end148:                                        ; preds = %if.end144
  %75 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14296
  %call149 = call i32 @write16(%struct.drxk_state* %75, i32 8593295, i16 zeroext 60) #9, !dbg !14297
  store i32 %call149, i32* %status, align 4, !dbg !14298
  %76 = load i32, i32* %status, align 4, !dbg !14299
  %cmp150 = icmp slt i32 %76, 0, !dbg !14301
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !14302

if.then151:                                       ; preds = %if.end148
  br label %error, !dbg !14303

if.end152:                                        ; preds = %if.end148
  %77 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14304
  %call153 = call i32 @write16(%struct.drxk_state* %77, i32 8593298, i16 zeroext 80) #9, !dbg !14305
  store i32 %call153, i32* %status, align 4, !dbg !14306
  %78 = load i32, i32* %status, align 4, !dbg !14307
  %cmp154 = icmp slt i32 %78, 0, !dbg !14309
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !14310

if.then155:                                       ; preds = %if.end152
  br label %error, !dbg !14311

if.end156:                                        ; preds = %if.end152
  %79 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14312
  %call157 = call i32 @write16(%struct.drxk_state* %79, i32 8593296, i16 zeroext 110) #9, !dbg !14313
  store i32 %call157, i32* %status, align 4, !dbg !14314
  %80 = load i32, i32* %status, align 4, !dbg !14315
  %cmp158 = icmp slt i32 %80, 0, !dbg !14317
  br i1 %cmp158, label %if.then159, label %if.end160, !dbg !14318

if.then159:                                       ; preds = %if.end156
  br label %error, !dbg !14319

if.end160:                                        ; preds = %if.end156
  %81 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14320
  %call161 = call i32 @write16(%struct.drxk_state* %81, i32 8593299, i16 zeroext 200) #9, !dbg !14321
  store i32 %call161, i32* %status, align 4, !dbg !14322
  %82 = load i32, i32* %status, align 4, !dbg !14323
  %cmp162 = icmp slt i32 %82, 0, !dbg !14325
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !14326

if.then163:                                       ; preds = %if.end160
  br label %error, !dbg !14327

if.end164:                                        ; preds = %if.end160
  %83 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14328
  %call165 = call i32 @write16(%struct.drxk_state* %83, i32 8593297, i16 zeroext 95) #9, !dbg !14329
  store i32 %call165, i32* %status, align 4, !dbg !14330
  %84 = load i32, i32* %status, align 4, !dbg !14331
  %cmp166 = icmp slt i32 %84, 0, !dbg !14333
  br i1 %cmp166, label %if.then167, label %if.end168, !dbg !14334

if.then167:                                       ; preds = %if.end164
  br label %error, !dbg !14335

if.end168:                                        ; preds = %if.end164
  %85 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14336
  %call169 = call i32 @write16(%struct.drxk_state* %85, i32 8593300, i16 zeroext 40) #9, !dbg !14337
  store i32 %call169, i32* %status, align 4, !dbg !14338
  %86 = load i32, i32* %status, align 4, !dbg !14339
  %cmp170 = icmp slt i32 %86, 0, !dbg !14341
  br i1 %cmp170, label %if.then171, label %if.end172, !dbg !14342

if.then171:                                       ; preds = %if.end168
  br label %error, !dbg !14343

if.end172:                                        ; preds = %if.end168
  %87 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14344
  %call173 = call i32 @write16(%struct.drxk_state* %87, i32 8593302, i16 zeroext 4) #9, !dbg !14345
  store i32 %call173, i32* %status, align 4, !dbg !14346
  %88 = load i32, i32* %status, align 4, !dbg !14347
  %cmp174 = icmp slt i32 %88, 0, !dbg !14349
  br i1 %cmp174, label %if.then175, label %if.end176, !dbg !14350

if.then175:                                       ; preds = %if.end172
  br label %error, !dbg !14351

if.end176:                                        ; preds = %if.end172
  %89 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14352
  %call177 = call i32 @write16(%struct.drxk_state* %89, i32 8593301, i16 zeroext 15) #9, !dbg !14353
  store i32 %call177, i32* %status, align 4, !dbg !14354
  %90 = load i32, i32* %status, align 4, !dbg !14355
  %cmp178 = icmp slt i32 %90, 0, !dbg !14357
  br i1 %cmp178, label %if.then179, label %if.end180, !dbg !14358

if.then179:                                       ; preds = %if.end176
  br label %error, !dbg !14359

if.end180:                                        ; preds = %if.end176
  %91 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14360
  %call181 = call i32 @write16(%struct.drxk_state* %91, i32 8593284, i16 zeroext 12) #9, !dbg !14361
  store i32 %call181, i32* %status, align 4, !dbg !14362
  %92 = load i32, i32* %status, align 4, !dbg !14363
  %cmp182 = icmp slt i32 %92, 0, !dbg !14365
  br i1 %cmp182, label %if.then183, label %if.end184, !dbg !14366

if.then183:                                       ; preds = %if.end180
  br label %error, !dbg !14367

if.end184:                                        ; preds = %if.end180
  %93 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14368
  %call185 = call i32 @write16(%struct.drxk_state* %93, i32 8593285, i16 zeroext 141) #9, !dbg !14369
  store i32 %call185, i32* %status, align 4, !dbg !14370
  %94 = load i32, i32* %status, align 4, !dbg !14371
  %cmp186 = icmp slt i32 %94, 0, !dbg !14373
  br i1 %cmp186, label %if.then187, label %if.end188, !dbg !14374

if.then187:                                       ; preds = %if.end184
  br label %error, !dbg !14375

if.end188:                                        ; preds = %if.end184
  %95 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14376
  %call189 = call i32 @write16(%struct.drxk_state* %95, i32 8593286, i16 zeroext 7) #9, !dbg !14377
  store i32 %call189, i32* %status, align 4, !dbg !14378
  %96 = load i32, i32* %status, align 4, !dbg !14379
  %cmp190 = icmp slt i32 %96, 0, !dbg !14381
  br i1 %cmp190, label %if.then191, label %if.end192, !dbg !14382

if.then191:                                       ; preds = %if.end188
  br label %error, !dbg !14383

if.end192:                                        ; preds = %if.end188
  %97 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14384
  %call193 = call i32 @write16(%struct.drxk_state* %97, i32 8593287, i16 zeroext 0) #9, !dbg !14385
  store i32 %call193, i32* %status, align 4, !dbg !14386
  %98 = load i32, i32* %status, align 4, !dbg !14387
  %cmp194 = icmp slt i32 %98, 0, !dbg !14389
  br i1 %cmp194, label %if.then195, label %if.end196, !dbg !14390

if.then195:                                       ; preds = %if.end192
  br label %error, !dbg !14391

if.end196:                                        ; preds = %if.end192
  %99 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14392
  %call197 = call i32 @write16(%struct.drxk_state* %99, i32 8593288, i16 zeroext -15) #9, !dbg !14393
  store i32 %call197, i32* %status, align 4, !dbg !14394
  %100 = load i32, i32* %status, align 4, !dbg !14395
  %cmp198 = icmp slt i32 %100, 0, !dbg !14397
  br i1 %cmp198, label %if.then199, label %if.end200, !dbg !14398

if.then199:                                       ; preds = %if.end196
  br label %error, !dbg !14399

if.end200:                                        ; preds = %if.end196
  %101 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14400
  %call201 = call i32 @write16(%struct.drxk_state* %101, i32 8593289, i16 zeroext -45) #9, !dbg !14401
  store i32 %call201, i32* %status, align 4, !dbg !14402
  %102 = load i32, i32* %status, align 4, !dbg !14403
  %cmp202 = icmp slt i32 %102, 0, !dbg !14405
  br i1 %cmp202, label %if.then203, label %if.end204, !dbg !14406

if.then203:                                       ; preds = %if.end200
  br label %error, !dbg !14407

if.end204:                                        ; preds = %if.end200
  %103 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14408
  %call205 = call i32 @write16(%struct.drxk_state* %103, i32 8593290, i16 zeroext -80) #9, !dbg !14409
  store i32 %call205, i32* %status, align 4, !dbg !14410
  br label %error, !dbg !14411

error:                                            ; preds = %if.end204, %if.then203, %if.then199, %if.then195, %if.then191, %if.then187, %if.then183, %if.then179, %if.then175, %if.then171, %if.then167, %if.then163, %if.then159, %if.then155, %if.then151, %if.then147, %if.then143, %if.then139, %if.then135, %if.then131, %if.then127, %if.then123, %if.then119, %if.then115, %if.then111, %if.then107, %if.then103, %if.then99, %if.then95, %if.then91, %if.then87, %if.then83, %if.then79, %if.then75, %if.then71, %if.then67, %if.then63, %if.then59, %if.then55, %if.then51, %if.then47, %if.then43, %if.then39, %if.then35, %if.then31, %if.then27, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !14412), !dbg !14413
  %104 = load i32, i32* %status, align 4, !dbg !14414
  %cmp206 = icmp slt i32 %104, 0, !dbg !14416
  br i1 %cmp206, label %if.then207, label %if.end209, !dbg !14417

if.then207:                                       ; preds = %error
  %105 = load i32, i32* %status, align 4, !dbg !14418
  %call208 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %105, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.set_qam64, i64 0, i64 0)) #8, !dbg !14418
  br label %if.end209, !dbg !14418

if.end209:                                        ; preds = %if.then207, %error
  %106 = load i32, i32* %status, align 4, !dbg !14419
  ret i32 %106, !dbg !14420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_qam128(%struct.drxk_state* %state) #0 !dbg !14421 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !14422, metadata !DIExpression()), !dbg !14423
  call void @llvm.dbg.declare(metadata i32* %status, metadata !14424, metadata !DIExpression()), !dbg !14425
  store i32 0, i32* %status, align 4, !dbg !14425
  br label %do.body, !dbg !14426

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !14427
  %cmp = icmp uge i32 %0, 1, !dbg !14427
  br i1 %cmp, label %if.then, label %if.end, !dbg !14430

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.set_qam128, i64 0, i64 0)) #8, !dbg !14427
  br label %if.end, !dbg !14427

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !14430

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14431
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 8593325, i16 zeroext 6564) #9, !dbg !14432
  store i32 %call1, i32* %status, align 4, !dbg !14433
  %2 = load i32, i32* %status, align 4, !dbg !14434
  %cmp2 = icmp slt i32 %2, 0, !dbg !14436
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !14437

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !14438

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14439
  %call5 = call i32 @write16(%struct.drxk_state* %3, i32 8593326, i16 zeroext 6598) #9, !dbg !14440
  store i32 %call5, i32* %status, align 4, !dbg !14441
  %4 = load i32, i32* %status, align 4, !dbg !14442
  %cmp6 = icmp slt i32 %4, 0, !dbg !14444
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14445

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !14446

if.end8:                                          ; preds = %if.end4
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14447
  %call9 = call i32 @write16(%struct.drxk_state* %5, i32 8593327, i16 zeroext 6394) #9, !dbg !14448
  store i32 %call9, i32* %status, align 4, !dbg !14449
  %6 = load i32, i32* %status, align 4, !dbg !14450
  %cmp10 = icmp slt i32 %6, 0, !dbg !14452
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !14453

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !14454

if.end12:                                         ; preds = %if.end8
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14455
  %call13 = call i32 @write16(%struct.drxk_state* %7, i32 8593328, i16 zeroext 6409) #9, !dbg !14456
  store i32 %call13, i32* %status, align 4, !dbg !14457
  %8 = load i32, i32* %status, align 4, !dbg !14458
  %cmp14 = icmp slt i32 %8, 0, !dbg !14460
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !14461

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !14462

if.end16:                                         ; preds = %if.end12
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14463
  %call17 = call i32 @write16(%struct.drxk_state* %9, i32 8593329, i16 zeroext 6656) #9, !dbg !14464
  store i32 %call17, i32* %status, align 4, !dbg !14465
  %10 = load i32, i32* %status, align 4, !dbg !14466
  %cmp18 = icmp slt i32 %10, 0, !dbg !14468
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !14469

if.then19:                                        ; preds = %if.end16
  br label %error, !dbg !14470

if.end20:                                         ; preds = %if.end16
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14471
  %call21 = call i32 @write16(%struct.drxk_state* %11, i32 8593330, i16 zeroext 7238) #9, !dbg !14472
  store i32 %call21, i32* %status, align 4, !dbg !14473
  %12 = load i32, i32* %status, align 4, !dbg !14474
  %cmp22 = icmp slt i32 %12, 0, !dbg !14476
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !14477

if.then23:                                        ; preds = %if.end20
  br label %error, !dbg !14478

if.end24:                                         ; preds = %if.end20
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14479
  %call25 = call i32 @write16(%struct.drxk_state* %13, i32 21233688, i16 zeroext 6) #9, !dbg !14480
  store i32 %call25, i32* %status, align 4, !dbg !14481
  %14 = load i32, i32* %status, align 4, !dbg !14482
  %cmp26 = icmp slt i32 %14, 0, !dbg !14484
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !14485

if.then27:                                        ; preds = %if.end24
  br label %error, !dbg !14486

if.end28:                                         ; preds = %if.end24
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14487
  %call29 = call i32 @write16(%struct.drxk_state* %15, i32 21233689, i16 zeroext 6) #9, !dbg !14488
  store i32 %call29, i32* %status, align 4, !dbg !14489
  %16 = load i32, i32* %status, align 4, !dbg !14490
  %cmp30 = icmp slt i32 %16, 0, !dbg !14492
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !14493

if.then31:                                        ; preds = %if.end28
  br label %error, !dbg !14494

if.end32:                                         ; preds = %if.end28
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14495
  %call33 = call i32 @write16(%struct.drxk_state* %17, i32 21233690, i16 zeroext 6) #9, !dbg !14496
  store i32 %call33, i32* %status, align 4, !dbg !14497
  %18 = load i32, i32* %status, align 4, !dbg !14498
  %cmp34 = icmp slt i32 %18, 0, !dbg !14500
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !14501

if.then35:                                        ; preds = %if.end32
  br label %error, !dbg !14502

if.end36:                                         ; preds = %if.end32
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14503
  %call37 = call i32 @write16(%struct.drxk_state* %19, i32 21233691, i16 zeroext 6) #9, !dbg !14504
  store i32 %call37, i32* %status, align 4, !dbg !14505
  %20 = load i32, i32* %status, align 4, !dbg !14506
  %cmp38 = icmp slt i32 %20, 0, !dbg !14508
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !14509

if.then39:                                        ; preds = %if.end36
  br label %error, !dbg !14510

if.end40:                                         ; preds = %if.end36
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14511
  %call41 = call i32 @write16(%struct.drxk_state* %21, i32 21233692, i16 zeroext 5) #9, !dbg !14512
  store i32 %call41, i32* %status, align 4, !dbg !14513
  %22 = load i32, i32* %status, align 4, !dbg !14514
  %cmp42 = icmp slt i32 %22, 0, !dbg !14516
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !14517

if.then43:                                        ; preds = %if.end40
  br label %error, !dbg !14518

if.end44:                                         ; preds = %if.end40
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14519
  %call45 = call i32 @write16(%struct.drxk_state* %23, i32 21233693, i16 zeroext 0) #9, !dbg !14520
  store i32 %call45, i32* %status, align 4, !dbg !14521
  %24 = load i32, i32* %status, align 4, !dbg !14522
  %cmp46 = icmp slt i32 %24, 0, !dbg !14524
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !14525

if.then47:                                        ; preds = %if.end44
  br label %error, !dbg !14526

if.end48:                                         ; preds = %if.end44
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14527
  %call49 = call i32 @write16(%struct.drxk_state* %25, i32 21430292, i16 zeroext 6) #9, !dbg !14528
  store i32 %call49, i32* %status, align 4, !dbg !14529
  %26 = load i32, i32* %status, align 4, !dbg !14530
  %cmp50 = icmp slt i32 %26, 0, !dbg !14532
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !14533

if.then51:                                        ; preds = %if.end48
  br label %error, !dbg !14534

if.end52:                                         ; preds = %if.end48
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14535
  %call53 = call i32 @write16(%struct.drxk_state* %27, i32 21430291, i16 zeroext 5) #9, !dbg !14536
  store i32 %call53, i32* %status, align 4, !dbg !14537
  %28 = load i32, i32* %status, align 4, !dbg !14538
  %cmp54 = icmp slt i32 %28, 0, !dbg !14540
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !14541

if.then55:                                        ; preds = %if.end52
  br label %error, !dbg !14542

if.end56:                                         ; preds = %if.end52
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14543
  %call57 = call i32 @write16(%struct.drxk_state* %29, i32 21430290, i16 zeroext 3) #9, !dbg !14544
  store i32 %call57, i32* %status, align 4, !dbg !14545
  %30 = load i32, i32* %status, align 4, !dbg !14546
  %cmp58 = icmp slt i32 %30, 0, !dbg !14548
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !14549

if.then59:                                        ; preds = %if.end56
  br label %error, !dbg !14550

if.end60:                                         ; preds = %if.end56
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14551
  %call61 = call i32 @write16(%struct.drxk_state* %31, i32 8593324, i16 zeroext 20992) #9, !dbg !14552
  store i32 %call61, i32* %status, align 4, !dbg !14553
  %32 = load i32, i32* %status, align 4, !dbg !14554
  %cmp62 = icmp slt i32 %32, 0, !dbg !14556
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !14557

if.then63:                                        ; preds = %if.end60
  br label %error, !dbg !14558

if.end64:                                         ; preds = %if.end60
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14559
  %call65 = call i32 @write16(%struct.drxk_state* %33, i32 8593305, i16 zeroext 15) #9, !dbg !14560
  store i32 %call65, i32* %status, align 4, !dbg !14561
  %34 = load i32, i32* %status, align 4, !dbg !14562
  %cmp66 = icmp slt i32 %34, 0, !dbg !14564
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !14565

if.then67:                                        ; preds = %if.end64
  br label %error, !dbg !14566

if.end68:                                         ; preds = %if.end64
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14567
  %call69 = call i32 @write16(%struct.drxk_state* %35, i32 8593303, i16 zeroext 40) #9, !dbg !14568
  store i32 %call69, i32* %status, align 4, !dbg !14569
  %36 = load i32, i32* %status, align 4, !dbg !14570
  %cmp70 = icmp slt i32 %36, 0, !dbg !14572
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !14573

if.then71:                                        ; preds = %if.end68
  br label %error, !dbg !14574

if.end72:                                         ; preds = %if.end68
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14575
  %call73 = call i32 @write16(%struct.drxk_state* %37, i32 8593314, i16 zeroext 12) #9, !dbg !14576
  store i32 %call73, i32* %status, align 4, !dbg !14577
  %38 = load i32, i32* %status, align 4, !dbg !14578
  %cmp74 = icmp slt i32 %38, 0, !dbg !14580
  br i1 %cmp74, label %if.then75, label %if.end76, !dbg !14581

if.then75:                                        ; preds = %if.end72
  br label %error, !dbg !14582

if.end76:                                         ; preds = %if.end72
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14583
  %call77 = call i32 @write16(%struct.drxk_state* %39, i32 8593313, i16 zeroext 24) #9, !dbg !14584
  store i32 %call77, i32* %status, align 4, !dbg !14585
  %40 = load i32, i32* %status, align 4, !dbg !14586
  %cmp78 = icmp slt i32 %40, 0, !dbg !14588
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !14589

if.then79:                                        ; preds = %if.end76
  br label %error, !dbg !14590

if.end80:                                         ; preds = %if.end76
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14591
  %call81 = call i32 @write16(%struct.drxk_state* %41, i32 8593312, i16 zeroext 24) #9, !dbg !14592
  store i32 %call81, i32* %status, align 4, !dbg !14593
  %42 = load i32, i32* %status, align 4, !dbg !14594
  %cmp82 = icmp slt i32 %42, 0, !dbg !14596
  br i1 %cmp82, label %if.then83, label %if.end84, !dbg !14597

if.then83:                                        ; preds = %if.end80
  br label %error, !dbg !14598

if.end84:                                         ; preds = %if.end80
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14599
  %call85 = call i32 @write16(%struct.drxk_state* %43, i32 8593317, i16 zeroext 12) #9, !dbg !14600
  store i32 %call85, i32* %status, align 4, !dbg !14601
  %44 = load i32, i32* %status, align 4, !dbg !14602
  %cmp86 = icmp slt i32 %44, 0, !dbg !14604
  br i1 %cmp86, label %if.then87, label %if.end88, !dbg !14605

if.then87:                                        ; preds = %if.end84
  br label %error, !dbg !14606

if.end88:                                         ; preds = %if.end84
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14607
  %call89 = call i32 @write16(%struct.drxk_state* %45, i32 8593316, i16 zeroext 16) #9, !dbg !14608
  store i32 %call89, i32* %status, align 4, !dbg !14609
  %46 = load i32, i32* %status, align 4, !dbg !14610
  %cmp90 = icmp slt i32 %46, 0, !dbg !14612
  br i1 %cmp90, label %if.then91, label %if.end92, !dbg !14613

if.then91:                                        ; preds = %if.end88
  br label %error, !dbg !14614

if.end92:                                         ; preds = %if.end88
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14615
  %call93 = call i32 @write16(%struct.drxk_state* %47, i32 8593315, i16 zeroext 16) #9, !dbg !14616
  store i32 %call93, i32* %status, align 4, !dbg !14617
  %48 = load i32, i32* %status, align 4, !dbg !14618
  %cmp94 = icmp slt i32 %48, 0, !dbg !14620
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !14621

if.then95:                                        ; preds = %if.end92
  br label %error, !dbg !14622

if.end96:                                         ; preds = %if.end92
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14623
  %call97 = call i32 @write16(%struct.drxk_state* %49, i32 8593308, i16 zeroext 5) #9, !dbg !14624
  store i32 %call97, i32* %status, align 4, !dbg !14625
  %50 = load i32, i32* %status, align 4, !dbg !14626
  %cmp98 = icmp slt i32 %50, 0, !dbg !14628
  br i1 %cmp98, label %if.then99, label %if.end100, !dbg !14629

if.then99:                                        ; preds = %if.end96
  br label %error, !dbg !14630

if.end100:                                        ; preds = %if.end96
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14631
  %call101 = call i32 @write16(%struct.drxk_state* %51, i32 8593307, i16 zeroext 40) #9, !dbg !14632
  store i32 %call101, i32* %status, align 4, !dbg !14633
  %52 = load i32, i32* %status, align 4, !dbg !14634
  %cmp102 = icmp slt i32 %52, 0, !dbg !14636
  br i1 %cmp102, label %if.then103, label %if.end104, !dbg !14637

if.then103:                                       ; preds = %if.end100
  br label %error, !dbg !14638

if.end104:                                        ; preds = %if.end100
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14639
  %call105 = call i32 @write16(%struct.drxk_state* %53, i32 8593306, i16 zeroext 120) #9, !dbg !14640
  store i32 %call105, i32* %status, align 4, !dbg !14641
  %54 = load i32, i32* %status, align 4, !dbg !14642
  %cmp106 = icmp slt i32 %54, 0, !dbg !14644
  br i1 %cmp106, label %if.then107, label %if.end108, !dbg !14645

if.then107:                                       ; preds = %if.end104
  br label %error, !dbg !14646

if.end108:                                        ; preds = %if.end104
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14647
  %call109 = call i32 @write16(%struct.drxk_state* %55, i32 8593311, i16 zeroext 5) #9, !dbg !14648
  store i32 %call109, i32* %status, align 4, !dbg !14649
  %56 = load i32, i32* %status, align 4, !dbg !14650
  %cmp110 = icmp slt i32 %56, 0, !dbg !14652
  br i1 %cmp110, label %if.then111, label %if.end112, !dbg !14653

if.then111:                                       ; preds = %if.end108
  br label %error, !dbg !14654

if.end112:                                        ; preds = %if.end108
  %57 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14655
  %call113 = call i32 @write16(%struct.drxk_state* %57, i32 8593310, i16 zeroext 40) #9, !dbg !14656
  store i32 %call113, i32* %status, align 4, !dbg !14657
  %58 = load i32, i32* %status, align 4, !dbg !14658
  %cmp114 = icmp slt i32 %58, 0, !dbg !14660
  br i1 %cmp114, label %if.then115, label %if.end116, !dbg !14661

if.then115:                                       ; preds = %if.end112
  br label %error, !dbg !14662

if.end116:                                        ; preds = %if.end112
  %59 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14663
  %call117 = call i32 @write16(%struct.drxk_state* %59, i32 8593309, i16 zeroext 60) #9, !dbg !14664
  store i32 %call117, i32* %status, align 4, !dbg !14665
  %60 = load i32, i32* %status, align 4, !dbg !14666
  %cmp118 = icmp slt i32 %60, 0, !dbg !14668
  br i1 %cmp118, label %if.then119, label %if.end120, !dbg !14669

if.then119:                                       ; preds = %if.end116
  br label %error, !dbg !14670

if.end120:                                        ; preds = %if.end116
  %61 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14671
  %call121 = call i32 @write16(%struct.drxk_state* %61, i32 8593320, i16 zeroext 16) #9, !dbg !14672
  store i32 %call121, i32* %status, align 4, !dbg !14673
  %62 = load i32, i32* %status, align 4, !dbg !14674
  %cmp122 = icmp slt i32 %62, 0, !dbg !14676
  br i1 %cmp122, label %if.then123, label %if.end124, !dbg !14677

if.then123:                                       ; preds = %if.end120
  br label %error, !dbg !14678

if.end124:                                        ; preds = %if.end120
  %63 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14679
  %call125 = call i32 @write16(%struct.drxk_state* %63, i32 8593319, i16 zeroext 25) #9, !dbg !14680
  store i32 %call125, i32* %status, align 4, !dbg !14681
  %64 = load i32, i32* %status, align 4, !dbg !14682
  %cmp126 = icmp slt i32 %64, 0, !dbg !14684
  br i1 %cmp126, label %if.then127, label %if.end128, !dbg !14685

if.then127:                                       ; preds = %if.end124
  br label %error, !dbg !14686

if.end128:                                        ; preds = %if.end124
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14687
  %call129 = call i32 @write16(%struct.drxk_state* %65, i32 8593318, i16 zeroext 64) #9, !dbg !14688
  store i32 %call129, i32* %status, align 4, !dbg !14689
  %66 = load i32, i32* %status, align 4, !dbg !14690
  %cmp130 = icmp slt i32 %66, 0, !dbg !14692
  br i1 %cmp130, label %if.then131, label %if.end132, !dbg !14693

if.then131:                                       ; preds = %if.end128
  br label %error, !dbg !14694

if.end132:                                        ; preds = %if.end128
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14695
  %call133 = call i32 @write16(%struct.drxk_state* %67, i32 8593323, i16 zeroext 5) #9, !dbg !14696
  store i32 %call133, i32* %status, align 4, !dbg !14697
  %68 = load i32, i32* %status, align 4, !dbg !14698
  %cmp134 = icmp slt i32 %68, 0, !dbg !14700
  br i1 %cmp134, label %if.then135, label %if.end136, !dbg !14701

if.then135:                                       ; preds = %if.end132
  br label %error, !dbg !14702

if.end136:                                        ; preds = %if.end132
  %69 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14703
  %call137 = call i32 @write16(%struct.drxk_state* %69, i32 8593322, i16 zeroext 10) #9, !dbg !14704
  store i32 %call137, i32* %status, align 4, !dbg !14705
  %70 = load i32, i32* %status, align 4, !dbg !14706
  %cmp138 = icmp slt i32 %70, 0, !dbg !14708
  br i1 %cmp138, label %if.then139, label %if.end140, !dbg !14709

if.then139:                                       ; preds = %if.end136
  br label %error, !dbg !14710

if.end140:                                        ; preds = %if.end136
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14711
  %call141 = call i32 @write16(%struct.drxk_state* %71, i32 8593321, i16 zeroext 0) #9, !dbg !14712
  store i32 %call141, i32* %status, align 4, !dbg !14713
  %72 = load i32, i32* %status, align 4, !dbg !14714
  %cmp142 = icmp slt i32 %72, 0, !dbg !14716
  br i1 %cmp142, label %if.then143, label %if.end144, !dbg !14717

if.then143:                                       ; preds = %if.end140
  br label %error, !dbg !14718

if.end144:                                        ; preds = %if.end140
  %73 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14719
  %call145 = call i32 @write16(%struct.drxk_state* %73, i32 8593294, i16 zeroext 50) #9, !dbg !14720
  store i32 %call145, i32* %status, align 4, !dbg !14721
  %74 = load i32, i32* %status, align 4, !dbg !14722
  %cmp146 = icmp slt i32 %74, 0, !dbg !14724
  br i1 %cmp146, label %if.then147, label %if.end148, !dbg !14725

if.then147:                                       ; preds = %if.end144
  br label %error, !dbg !14726

if.end148:                                        ; preds = %if.end144
  %75 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14727
  %call149 = call i32 @write16(%struct.drxk_state* %75, i32 8593295, i16 zeroext 60) #9, !dbg !14728
  store i32 %call149, i32* %status, align 4, !dbg !14729
  %76 = load i32, i32* %status, align 4, !dbg !14730
  %cmp150 = icmp slt i32 %76, 0, !dbg !14732
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !14733

if.then151:                                       ; preds = %if.end148
  br label %error, !dbg !14734

if.end152:                                        ; preds = %if.end148
  %77 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14735
  %call153 = call i32 @write16(%struct.drxk_state* %77, i32 8593298, i16 zeroext 80) #9, !dbg !14736
  store i32 %call153, i32* %status, align 4, !dbg !14737
  %78 = load i32, i32* %status, align 4, !dbg !14738
  %cmp154 = icmp slt i32 %78, 0, !dbg !14740
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !14741

if.then155:                                       ; preds = %if.end152
  br label %error, !dbg !14742

if.end156:                                        ; preds = %if.end152
  %79 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14743
  %call157 = call i32 @write16(%struct.drxk_state* %79, i32 8593296, i16 zeroext 100) #9, !dbg !14744
  store i32 %call157, i32* %status, align 4, !dbg !14745
  %80 = load i32, i32* %status, align 4, !dbg !14746
  %cmp158 = icmp slt i32 %80, 0, !dbg !14748
  br i1 %cmp158, label %if.then159, label %if.end160, !dbg !14749

if.then159:                                       ; preds = %if.end156
  br label %error, !dbg !14750

if.end160:                                        ; preds = %if.end156
  %81 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14751
  %call161 = call i32 @write16(%struct.drxk_state* %81, i32 8593299, i16 zeroext 140) #9, !dbg !14752
  store i32 %call161, i32* %status, align 4, !dbg !14753
  %82 = load i32, i32* %status, align 4, !dbg !14754
  %cmp162 = icmp slt i32 %82, 0, !dbg !14756
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !14757

if.then163:                                       ; preds = %if.end160
  br label %error, !dbg !14758

if.end164:                                        ; preds = %if.end160
  %83 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14759
  %call165 = call i32 @write16(%struct.drxk_state* %83, i32 8593297, i16 zeroext 100) #9, !dbg !14760
  store i32 %call165, i32* %status, align 4, !dbg !14761
  %84 = load i32, i32* %status, align 4, !dbg !14762
  %cmp166 = icmp slt i32 %84, 0, !dbg !14764
  br i1 %cmp166, label %if.then167, label %if.end168, !dbg !14765

if.then167:                                       ; preds = %if.end164
  br label %error, !dbg !14766

if.end168:                                        ; preds = %if.end164
  %85 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14767
  %call169 = call i32 @write16(%struct.drxk_state* %85, i32 8593300, i16 zeroext 40) #9, !dbg !14768
  store i32 %call169, i32* %status, align 4, !dbg !14769
  %86 = load i32, i32* %status, align 4, !dbg !14770
  %cmp170 = icmp slt i32 %86, 0, !dbg !14772
  br i1 %cmp170, label %if.then171, label %if.end172, !dbg !14773

if.then171:                                       ; preds = %if.end168
  br label %error, !dbg !14774

if.end172:                                        ; preds = %if.end168
  %87 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14775
  %call173 = call i32 @write16(%struct.drxk_state* %87, i32 8593302, i16 zeroext 5) #9, !dbg !14776
  store i32 %call173, i32* %status, align 4, !dbg !14777
  %88 = load i32, i32* %status, align 4, !dbg !14778
  %cmp174 = icmp slt i32 %88, 0, !dbg !14780
  br i1 %cmp174, label %if.then175, label %if.end176, !dbg !14781

if.then175:                                       ; preds = %if.end172
  br label %error, !dbg !14782

if.end176:                                        ; preds = %if.end172
  %89 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14783
  %call177 = call i32 @write16(%struct.drxk_state* %89, i32 8593301, i16 zeroext 12) #9, !dbg !14784
  store i32 %call177, i32* %status, align 4, !dbg !14785
  %90 = load i32, i32* %status, align 4, !dbg !14786
  %cmp178 = icmp slt i32 %90, 0, !dbg !14788
  br i1 %cmp178, label %if.then179, label %if.end180, !dbg !14789

if.then179:                                       ; preds = %if.end176
  br label %error, !dbg !14790

if.end180:                                        ; preds = %if.end176
  %91 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14791
  %call181 = call i32 @write16(%struct.drxk_state* %91, i32 8593284, i16 zeroext 8) #9, !dbg !14792
  store i32 %call181, i32* %status, align 4, !dbg !14793
  %92 = load i32, i32* %status, align 4, !dbg !14794
  %cmp182 = icmp slt i32 %92, 0, !dbg !14796
  br i1 %cmp182, label %if.then183, label %if.end184, !dbg !14797

if.then183:                                       ; preds = %if.end180
  br label %error, !dbg !14798

if.end184:                                        ; preds = %if.end180
  %93 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14799
  %call185 = call i32 @write16(%struct.drxk_state* %93, i32 8593285, i16 zeroext 65) #9, !dbg !14800
  store i32 %call185, i32* %status, align 4, !dbg !14801
  %94 = load i32, i32* %status, align 4, !dbg !14802
  %cmp186 = icmp slt i32 %94, 0, !dbg !14804
  br i1 %cmp186, label %if.then187, label %if.end188, !dbg !14805

if.then187:                                       ; preds = %if.end184
  br label %error, !dbg !14806

if.end188:                                        ; preds = %if.end184
  %95 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14807
  %call189 = call i32 @write16(%struct.drxk_state* %95, i32 8593286, i16 zeroext 5) #9, !dbg !14808
  store i32 %call189, i32* %status, align 4, !dbg !14809
  %96 = load i32, i32* %status, align 4, !dbg !14810
  %cmp190 = icmp slt i32 %96, 0, !dbg !14812
  br i1 %cmp190, label %if.then191, label %if.end192, !dbg !14813

if.then191:                                       ; preds = %if.end188
  br label %error, !dbg !14814

if.end192:                                        ; preds = %if.end188
  %97 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14815
  %call193 = call i32 @write16(%struct.drxk_state* %97, i32 8593287, i16 zeroext 3) #9, !dbg !14816
  store i32 %call193, i32* %status, align 4, !dbg !14817
  %98 = load i32, i32* %status, align 4, !dbg !14818
  %cmp194 = icmp slt i32 %98, 0, !dbg !14820
  br i1 %cmp194, label %if.then195, label %if.end196, !dbg !14821

if.then195:                                       ; preds = %if.end192
  br label %error, !dbg !14822

if.end196:                                        ; preds = %if.end192
  %99 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14823
  %call197 = call i32 @write16(%struct.drxk_state* %99, i32 8593288, i16 zeroext -1) #9, !dbg !14824
  store i32 %call197, i32* %status, align 4, !dbg !14825
  %100 = load i32, i32* %status, align 4, !dbg !14826
  %cmp198 = icmp slt i32 %100, 0, !dbg !14828
  br i1 %cmp198, label %if.then199, label %if.end200, !dbg !14829

if.then199:                                       ; preds = %if.end196
  br label %error, !dbg !14830

if.end200:                                        ; preds = %if.end196
  %101 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14831
  %call201 = call i32 @write16(%struct.drxk_state* %101, i32 8593289, i16 zeroext -12) #9, !dbg !14832
  store i32 %call201, i32* %status, align 4, !dbg !14833
  %102 = load i32, i32* %status, align 4, !dbg !14834
  %cmp202 = icmp slt i32 %102, 0, !dbg !14836
  br i1 %cmp202, label %if.then203, label %if.end204, !dbg !14837

if.then203:                                       ; preds = %if.end200
  br label %error, !dbg !14838

if.end204:                                        ; preds = %if.end200
  %103 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14839
  %call205 = call i32 @write16(%struct.drxk_state* %103, i32 8593290, i16 zeroext -23) #9, !dbg !14840
  store i32 %call205, i32* %status, align 4, !dbg !14841
  br label %error, !dbg !14842

error:                                            ; preds = %if.end204, %if.then203, %if.then199, %if.then195, %if.then191, %if.then187, %if.then183, %if.then179, %if.then175, %if.then171, %if.then167, %if.then163, %if.then159, %if.then155, %if.then151, %if.then147, %if.then143, %if.then139, %if.then135, %if.then131, %if.then127, %if.then123, %if.then119, %if.then115, %if.then111, %if.then107, %if.then103, %if.then99, %if.then95, %if.then91, %if.then87, %if.then83, %if.then79, %if.then75, %if.then71, %if.then67, %if.then63, %if.then59, %if.then55, %if.then51, %if.then47, %if.then43, %if.then39, %if.then35, %if.then31, %if.then27, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !14843), !dbg !14844
  %104 = load i32, i32* %status, align 4, !dbg !14845
  %cmp206 = icmp slt i32 %104, 0, !dbg !14847
  br i1 %cmp206, label %if.then207, label %if.end209, !dbg !14848

if.then207:                                       ; preds = %error
  %105 = load i32, i32* %status, align 4, !dbg !14849
  %call208 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %105, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.set_qam128, i64 0, i64 0)) #8, !dbg !14849
  br label %if.end209, !dbg !14849

if.end209:                                        ; preds = %if.then207, %error
  %106 = load i32, i32* %status, align 4, !dbg !14850
  ret i32 %106, !dbg !14851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_qam256(%struct.drxk_state* %state) #0 !dbg !14852 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !14853, metadata !DIExpression()), !dbg !14854
  call void @llvm.dbg.declare(metadata i32* %status, metadata !14855, metadata !DIExpression()), !dbg !14856
  store i32 0, i32* %status, align 4, !dbg !14856
  br label %do.body, !dbg !14857

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !14858
  %cmp = icmp uge i32 %0, 1, !dbg !14858
  br i1 %cmp, label %if.then, label %if.end, !dbg !14861

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.set_qam256, i64 0, i64 0)) #8, !dbg !14858
  br label %if.end, !dbg !14858

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !14861

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14862
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 8593325, i16 zeroext 11502) #9, !dbg !14863
  store i32 %call1, i32* %status, align 4, !dbg !14864
  %2 = load i32, i32* %status, align 4, !dbg !14865
  %cmp2 = icmp slt i32 %2, 0, !dbg !14867
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !14868

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !14869

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14870
  %call5 = call i32 @write16(%struct.drxk_state* %3, i32 8593326, i16 zeroext 12084) #9, !dbg !14871
  store i32 %call5, i32* %status, align 4, !dbg !14872
  %4 = load i32, i32* %status, align 4, !dbg !14873
  %cmp6 = icmp slt i32 %4, 0, !dbg !14875
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14876

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !14877

if.end8:                                          ; preds = %if.end4
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14878
  %call9 = call i32 @write16(%struct.drxk_state* %5, i32 8593327, i16 zeroext 12543) #9, !dbg !14879
  store i32 %call9, i32* %status, align 4, !dbg !14880
  %6 = load i32, i32* %status, align 4, !dbg !14881
  %cmp10 = icmp slt i32 %6, 0, !dbg !14883
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !14884

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !14885

if.end12:                                         ; preds = %if.end8
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14886
  %call13 = call i32 @write16(%struct.drxk_state* %7, i32 8593328, i16 zeroext 12931) #9, !dbg !14887
  store i32 %call13, i32* %status, align 4, !dbg !14888
  %8 = load i32, i32* %status, align 4, !dbg !14889
  %cmp14 = icmp slt i32 %8, 0, !dbg !14891
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !14892

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !14893

if.end16:                                         ; preds = %if.end12
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14894
  %call17 = call i32 @write16(%struct.drxk_state* %9, i32 8593329, i16 zeroext 13629) #9, !dbg !14895
  store i32 %call17, i32* %status, align 4, !dbg !14896
  %10 = load i32, i32* %status, align 4, !dbg !14897
  %cmp18 = icmp slt i32 %10, 0, !dbg !14899
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !14900

if.then19:                                        ; preds = %if.end16
  br label %error, !dbg !14901

if.end20:                                         ; preds = %if.end16
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14902
  %call21 = call i32 @write16(%struct.drxk_state* %11, i32 8593330, i16 zeroext 15385) #9, !dbg !14903
  store i32 %call21, i32* %status, align 4, !dbg !14904
  %12 = load i32, i32* %status, align 4, !dbg !14905
  %cmp22 = icmp slt i32 %12, 0, !dbg !14907
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !14908

if.then23:                                        ; preds = %if.end20
  br label %error, !dbg !14909

if.end24:                                         ; preds = %if.end20
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14910
  %call25 = call i32 @write16(%struct.drxk_state* %13, i32 21233688, i16 zeroext 8) #9, !dbg !14911
  store i32 %call25, i32* %status, align 4, !dbg !14912
  %14 = load i32, i32* %status, align 4, !dbg !14913
  %cmp26 = icmp slt i32 %14, 0, !dbg !14915
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !14916

if.then27:                                        ; preds = %if.end24
  br label %error, !dbg !14917

if.end28:                                         ; preds = %if.end24
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14918
  %call29 = call i32 @write16(%struct.drxk_state* %15, i32 21233689, i16 zeroext 8) #9, !dbg !14919
  store i32 %call29, i32* %status, align 4, !dbg !14920
  %16 = load i32, i32* %status, align 4, !dbg !14921
  %cmp30 = icmp slt i32 %16, 0, !dbg !14923
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !14924

if.then31:                                        ; preds = %if.end28
  br label %error, !dbg !14925

if.end32:                                         ; preds = %if.end28
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14926
  %call33 = call i32 @write16(%struct.drxk_state* %17, i32 21233690, i16 zeroext 8) #9, !dbg !14927
  store i32 %call33, i32* %status, align 4, !dbg !14928
  %18 = load i32, i32* %status, align 4, !dbg !14929
  %cmp34 = icmp slt i32 %18, 0, !dbg !14931
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !14932

if.then35:                                        ; preds = %if.end32
  br label %error, !dbg !14933

if.end36:                                         ; preds = %if.end32
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14934
  %call37 = call i32 @write16(%struct.drxk_state* %19, i32 21233691, i16 zeroext 8) #9, !dbg !14935
  store i32 %call37, i32* %status, align 4, !dbg !14936
  %20 = load i32, i32* %status, align 4, !dbg !14937
  %cmp38 = icmp slt i32 %20, 0, !dbg !14939
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !14940

if.then39:                                        ; preds = %if.end36
  br label %error, !dbg !14941

if.end40:                                         ; preds = %if.end36
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14942
  %call41 = call i32 @write16(%struct.drxk_state* %21, i32 21233692, i16 zeroext 6) #9, !dbg !14943
  store i32 %call41, i32* %status, align 4, !dbg !14944
  %22 = load i32, i32* %status, align 4, !dbg !14945
  %cmp42 = icmp slt i32 %22, 0, !dbg !14947
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !14948

if.then43:                                        ; preds = %if.end40
  br label %error, !dbg !14949

if.end44:                                         ; preds = %if.end40
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14950
  %call45 = call i32 @write16(%struct.drxk_state* %23, i32 21233693, i16 zeroext 0) #9, !dbg !14951
  store i32 %call45, i32* %status, align 4, !dbg !14952
  %24 = load i32, i32* %status, align 4, !dbg !14953
  %cmp46 = icmp slt i32 %24, 0, !dbg !14955
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !14956

if.then47:                                        ; preds = %if.end44
  br label %error, !dbg !14957

if.end48:                                         ; preds = %if.end44
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14958
  %call49 = call i32 @write16(%struct.drxk_state* %25, i32 21430292, i16 zeroext 5) #9, !dbg !14959
  store i32 %call49, i32* %status, align 4, !dbg !14960
  %26 = load i32, i32* %status, align 4, !dbg !14961
  %cmp50 = icmp slt i32 %26, 0, !dbg !14963
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !14964

if.then51:                                        ; preds = %if.end48
  br label %error, !dbg !14965

if.end52:                                         ; preds = %if.end48
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14966
  %call53 = call i32 @write16(%struct.drxk_state* %27, i32 21430291, i16 zeroext 4) #9, !dbg !14967
  store i32 %call53, i32* %status, align 4, !dbg !14968
  %28 = load i32, i32* %status, align 4, !dbg !14969
  %cmp54 = icmp slt i32 %28, 0, !dbg !14971
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !14972

if.then55:                                        ; preds = %if.end52
  br label %error, !dbg !14973

if.end56:                                         ; preds = %if.end52
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14974
  %call57 = call i32 @write16(%struct.drxk_state* %29, i32 21430290, i16 zeroext 3) #9, !dbg !14975
  store i32 %call57, i32* %status, align 4, !dbg !14976
  %30 = load i32, i32* %status, align 4, !dbg !14977
  %cmp58 = icmp slt i32 %30, 0, !dbg !14979
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !14980

if.then59:                                        ; preds = %if.end56
  br label %error, !dbg !14981

if.end60:                                         ; preds = %if.end56
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14982
  %call61 = call i32 @write16(%struct.drxk_state* %31, i32 8593324, i16 zeroext -22016) #9, !dbg !14983
  store i32 %call61, i32* %status, align 4, !dbg !14984
  %32 = load i32, i32* %status, align 4, !dbg !14985
  %cmp62 = icmp slt i32 %32, 0, !dbg !14987
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !14988

if.then63:                                        ; preds = %if.end60
  br label %error, !dbg !14989

if.end64:                                         ; preds = %if.end60
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14990
  %call65 = call i32 @write16(%struct.drxk_state* %33, i32 8593305, i16 zeroext 15) #9, !dbg !14991
  store i32 %call65, i32* %status, align 4, !dbg !14992
  %34 = load i32, i32* %status, align 4, !dbg !14993
  %cmp66 = icmp slt i32 %34, 0, !dbg !14995
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !14996

if.then67:                                        ; preds = %if.end64
  br label %error, !dbg !14997

if.end68:                                         ; preds = %if.end64
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !14998
  %call69 = call i32 @write16(%struct.drxk_state* %35, i32 8593303, i16 zeroext 40) #9, !dbg !14999
  store i32 %call69, i32* %status, align 4, !dbg !15000
  %36 = load i32, i32* %status, align 4, !dbg !15001
  %cmp70 = icmp slt i32 %36, 0, !dbg !15003
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !15004

if.then71:                                        ; preds = %if.end68
  br label %error, !dbg !15005

if.end72:                                         ; preds = %if.end68
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15006
  %call73 = call i32 @write16(%struct.drxk_state* %37, i32 8593314, i16 zeroext 12) #9, !dbg !15007
  store i32 %call73, i32* %status, align 4, !dbg !15008
  %38 = load i32, i32* %status, align 4, !dbg !15009
  %cmp74 = icmp slt i32 %38, 0, !dbg !15011
  br i1 %cmp74, label %if.then75, label %if.end76, !dbg !15012

if.then75:                                        ; preds = %if.end72
  br label %error, !dbg !15013

if.end76:                                         ; preds = %if.end72
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15014
  %call77 = call i32 @write16(%struct.drxk_state* %39, i32 8593313, i16 zeroext 24) #9, !dbg !15015
  store i32 %call77, i32* %status, align 4, !dbg !15016
  %40 = load i32, i32* %status, align 4, !dbg !15017
  %cmp78 = icmp slt i32 %40, 0, !dbg !15019
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !15020

if.then79:                                        ; preds = %if.end76
  br label %error, !dbg !15021

if.end80:                                         ; preds = %if.end76
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15022
  %call81 = call i32 @write16(%struct.drxk_state* %41, i32 8593312, i16 zeroext 24) #9, !dbg !15023
  store i32 %call81, i32* %status, align 4, !dbg !15024
  %42 = load i32, i32* %status, align 4, !dbg !15025
  %cmp82 = icmp slt i32 %42, 0, !dbg !15027
  br i1 %cmp82, label %if.then83, label %if.end84, !dbg !15028

if.then83:                                        ; preds = %if.end80
  br label %error, !dbg !15029

if.end84:                                         ; preds = %if.end80
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15030
  %call85 = call i32 @write16(%struct.drxk_state* %43, i32 8593317, i16 zeroext 12) #9, !dbg !15031
  store i32 %call85, i32* %status, align 4, !dbg !15032
  %44 = load i32, i32* %status, align 4, !dbg !15033
  %cmp86 = icmp slt i32 %44, 0, !dbg !15035
  br i1 %cmp86, label %if.then87, label %if.end88, !dbg !15036

if.then87:                                        ; preds = %if.end84
  br label %error, !dbg !15037

if.end88:                                         ; preds = %if.end84
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15038
  %call89 = call i32 @write16(%struct.drxk_state* %45, i32 8593316, i16 zeroext 16) #9, !dbg !15039
  store i32 %call89, i32* %status, align 4, !dbg !15040
  %46 = load i32, i32* %status, align 4, !dbg !15041
  %cmp90 = icmp slt i32 %46, 0, !dbg !15043
  br i1 %cmp90, label %if.then91, label %if.end92, !dbg !15044

if.then91:                                        ; preds = %if.end88
  br label %error, !dbg !15045

if.end92:                                         ; preds = %if.end88
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15046
  %call93 = call i32 @write16(%struct.drxk_state* %47, i32 8593315, i16 zeroext 16) #9, !dbg !15047
  store i32 %call93, i32* %status, align 4, !dbg !15048
  %48 = load i32, i32* %status, align 4, !dbg !15049
  %cmp94 = icmp slt i32 %48, 0, !dbg !15051
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !15052

if.then95:                                        ; preds = %if.end92
  br label %error, !dbg !15053

if.end96:                                         ; preds = %if.end92
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15054
  %call97 = call i32 @write16(%struct.drxk_state* %49, i32 8593308, i16 zeroext 5) #9, !dbg !15055
  store i32 %call97, i32* %status, align 4, !dbg !15056
  %50 = load i32, i32* %status, align 4, !dbg !15057
  %cmp98 = icmp slt i32 %50, 0, !dbg !15059
  br i1 %cmp98, label %if.then99, label %if.end100, !dbg !15060

if.then99:                                        ; preds = %if.end96
  br label %error, !dbg !15061

if.end100:                                        ; preds = %if.end96
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15062
  %call101 = call i32 @write16(%struct.drxk_state* %51, i32 8593307, i16 zeroext 50) #9, !dbg !15063
  store i32 %call101, i32* %status, align 4, !dbg !15064
  %52 = load i32, i32* %status, align 4, !dbg !15065
  %cmp102 = icmp slt i32 %52, 0, !dbg !15067
  br i1 %cmp102, label %if.then103, label %if.end104, !dbg !15068

if.then103:                                       ; preds = %if.end100
  br label %error, !dbg !15069

if.end104:                                        ; preds = %if.end100
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15070
  %call105 = call i32 @write16(%struct.drxk_state* %53, i32 8593306, i16 zeroext 250) #9, !dbg !15071
  store i32 %call105, i32* %status, align 4, !dbg !15072
  %54 = load i32, i32* %status, align 4, !dbg !15073
  %cmp106 = icmp slt i32 %54, 0, !dbg !15075
  br i1 %cmp106, label %if.then107, label %if.end108, !dbg !15076

if.then107:                                       ; preds = %if.end104
  br label %error, !dbg !15077

if.end108:                                        ; preds = %if.end104
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15078
  %call109 = call i32 @write16(%struct.drxk_state* %55, i32 8593311, i16 zeroext 5) #9, !dbg !15079
  store i32 %call109, i32* %status, align 4, !dbg !15080
  %56 = load i32, i32* %status, align 4, !dbg !15081
  %cmp110 = icmp slt i32 %56, 0, !dbg !15083
  br i1 %cmp110, label %if.then111, label %if.end112, !dbg !15084

if.then111:                                       ; preds = %if.end108
  br label %error, !dbg !15085

if.end112:                                        ; preds = %if.end108
  %57 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15086
  %call113 = call i32 @write16(%struct.drxk_state* %57, i32 8593310, i16 zeroext 50) #9, !dbg !15087
  store i32 %call113, i32* %status, align 4, !dbg !15088
  %58 = load i32, i32* %status, align 4, !dbg !15089
  %cmp114 = icmp slt i32 %58, 0, !dbg !15091
  br i1 %cmp114, label %if.then115, label %if.end116, !dbg !15092

if.then115:                                       ; preds = %if.end112
  br label %error, !dbg !15093

if.end116:                                        ; preds = %if.end112
  %59 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15094
  %call117 = call i32 @write16(%struct.drxk_state* %59, i32 8593309, i16 zeroext 125) #9, !dbg !15095
  store i32 %call117, i32* %status, align 4, !dbg !15096
  %60 = load i32, i32* %status, align 4, !dbg !15097
  %cmp118 = icmp slt i32 %60, 0, !dbg !15099
  br i1 %cmp118, label %if.then119, label %if.end120, !dbg !15100

if.then119:                                       ; preds = %if.end116
  br label %error, !dbg !15101

if.end120:                                        ; preds = %if.end116
  %61 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15102
  %call121 = call i32 @write16(%struct.drxk_state* %61, i32 8593320, i16 zeroext 16) #9, !dbg !15103
  store i32 %call121, i32* %status, align 4, !dbg !15104
  %62 = load i32, i32* %status, align 4, !dbg !15105
  %cmp122 = icmp slt i32 %62, 0, !dbg !15107
  br i1 %cmp122, label %if.then123, label %if.end124, !dbg !15108

if.then123:                                       ; preds = %if.end120
  br label %error, !dbg !15109

if.end124:                                        ; preds = %if.end120
  %63 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15110
  %call125 = call i32 @write16(%struct.drxk_state* %63, i32 8593319, i16 zeroext 25) #9, !dbg !15111
  store i32 %call125, i32* %status, align 4, !dbg !15112
  %64 = load i32, i32* %status, align 4, !dbg !15113
  %cmp126 = icmp slt i32 %64, 0, !dbg !15115
  br i1 %cmp126, label %if.then127, label %if.end128, !dbg !15116

if.then127:                                       ; preds = %if.end124
  br label %error, !dbg !15117

if.end128:                                        ; preds = %if.end124
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15118
  %call129 = call i32 @write16(%struct.drxk_state* %65, i32 8593318, i16 zeroext 48) #9, !dbg !15119
  store i32 %call129, i32* %status, align 4, !dbg !15120
  %66 = load i32, i32* %status, align 4, !dbg !15121
  %cmp130 = icmp slt i32 %66, 0, !dbg !15123
  br i1 %cmp130, label %if.then131, label %if.end132, !dbg !15124

if.then131:                                       ; preds = %if.end128
  br label %error, !dbg !15125

if.end132:                                        ; preds = %if.end128
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15126
  %call133 = call i32 @write16(%struct.drxk_state* %67, i32 8593323, i16 zeroext 5) #9, !dbg !15127
  store i32 %call133, i32* %status, align 4, !dbg !15128
  %68 = load i32, i32* %status, align 4, !dbg !15129
  %cmp134 = icmp slt i32 %68, 0, !dbg !15131
  br i1 %cmp134, label %if.then135, label %if.end136, !dbg !15132

if.then135:                                       ; preds = %if.end132
  br label %error, !dbg !15133

if.end136:                                        ; preds = %if.end132
  %69 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15134
  %call137 = call i32 @write16(%struct.drxk_state* %69, i32 8593322, i16 zeroext 10) #9, !dbg !15135
  store i32 %call137, i32* %status, align 4, !dbg !15136
  %70 = load i32, i32* %status, align 4, !dbg !15137
  %cmp138 = icmp slt i32 %70, 0, !dbg !15139
  br i1 %cmp138, label %if.then139, label %if.end140, !dbg !15140

if.then139:                                       ; preds = %if.end136
  br label %error, !dbg !15141

if.end140:                                        ; preds = %if.end136
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15142
  %call141 = call i32 @write16(%struct.drxk_state* %71, i32 8593321, i16 zeroext 10) #9, !dbg !15143
  store i32 %call141, i32* %status, align 4, !dbg !15144
  %72 = load i32, i32* %status, align 4, !dbg !15145
  %cmp142 = icmp slt i32 %72, 0, !dbg !15147
  br i1 %cmp142, label %if.then143, label %if.end144, !dbg !15148

if.then143:                                       ; preds = %if.end140
  br label %error, !dbg !15149

if.end144:                                        ; preds = %if.end140
  %73 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15150
  %call145 = call i32 @write16(%struct.drxk_state* %73, i32 8593294, i16 zeroext 50) #9, !dbg !15151
  store i32 %call145, i32* %status, align 4, !dbg !15152
  %74 = load i32, i32* %status, align 4, !dbg !15153
  %cmp146 = icmp slt i32 %74, 0, !dbg !15155
  br i1 %cmp146, label %if.then147, label %if.end148, !dbg !15156

if.then147:                                       ; preds = %if.end144
  br label %error, !dbg !15157

if.end148:                                        ; preds = %if.end144
  %75 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15158
  %call149 = call i32 @write16(%struct.drxk_state* %75, i32 8593295, i16 zeroext 60) #9, !dbg !15159
  store i32 %call149, i32* %status, align 4, !dbg !15160
  %76 = load i32, i32* %status, align 4, !dbg !15161
  %cmp150 = icmp slt i32 %76, 0, !dbg !15163
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !15164

if.then151:                                       ; preds = %if.end148
  br label %error, !dbg !15165

if.end152:                                        ; preds = %if.end148
  %77 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15166
  %call153 = call i32 @write16(%struct.drxk_state* %77, i32 8593298, i16 zeroext 80) #9, !dbg !15167
  store i32 %call153, i32* %status, align 4, !dbg !15168
  %78 = load i32, i32* %status, align 4, !dbg !15169
  %cmp154 = icmp slt i32 %78, 0, !dbg !15171
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !15172

if.then155:                                       ; preds = %if.end152
  br label %error, !dbg !15173

if.end156:                                        ; preds = %if.end152
  %79 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15174
  %call157 = call i32 @write16(%struct.drxk_state* %79, i32 8593296, i16 zeroext 100) #9, !dbg !15175
  store i32 %call157, i32* %status, align 4, !dbg !15176
  %80 = load i32, i32* %status, align 4, !dbg !15177
  %cmp158 = icmp slt i32 %80, 0, !dbg !15179
  br i1 %cmp158, label %if.then159, label %if.end160, !dbg !15180

if.then159:                                       ; preds = %if.end156
  br label %error, !dbg !15181

if.end160:                                        ; preds = %if.end156
  %81 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15182
  %call161 = call i32 @write16(%struct.drxk_state* %81, i32 8593299, i16 zeroext 150) #9, !dbg !15183
  store i32 %call161, i32* %status, align 4, !dbg !15184
  %82 = load i32, i32* %status, align 4, !dbg !15185
  %cmp162 = icmp slt i32 %82, 0, !dbg !15187
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !15188

if.then163:                                       ; preds = %if.end160
  br label %error, !dbg !15189

if.end164:                                        ; preds = %if.end160
  %83 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15190
  %call165 = call i32 @write16(%struct.drxk_state* %83, i32 8593297, i16 zeroext 110) #9, !dbg !15191
  store i32 %call165, i32* %status, align 4, !dbg !15192
  %84 = load i32, i32* %status, align 4, !dbg !15193
  %cmp166 = icmp slt i32 %84, 0, !dbg !15195
  br i1 %cmp166, label %if.then167, label %if.end168, !dbg !15196

if.then167:                                       ; preds = %if.end164
  br label %error, !dbg !15197

if.end168:                                        ; preds = %if.end164
  %85 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15198
  %call169 = call i32 @write16(%struct.drxk_state* %85, i32 8593300, i16 zeroext 40) #9, !dbg !15199
  store i32 %call169, i32* %status, align 4, !dbg !15200
  %86 = load i32, i32* %status, align 4, !dbg !15201
  %cmp170 = icmp slt i32 %86, 0, !dbg !15203
  br i1 %cmp170, label %if.then171, label %if.end172, !dbg !15204

if.then171:                                       ; preds = %if.end168
  br label %error, !dbg !15205

if.end172:                                        ; preds = %if.end168
  %87 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15206
  %call173 = call i32 @write16(%struct.drxk_state* %87, i32 8593302, i16 zeroext 4) #9, !dbg !15207
  store i32 %call173, i32* %status, align 4, !dbg !15208
  %88 = load i32, i32* %status, align 4, !dbg !15209
  %cmp174 = icmp slt i32 %88, 0, !dbg !15211
  br i1 %cmp174, label %if.then175, label %if.end176, !dbg !15212

if.then175:                                       ; preds = %if.end172
  br label %error, !dbg !15213

if.end176:                                        ; preds = %if.end172
  %89 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15214
  %call177 = call i32 @write16(%struct.drxk_state* %89, i32 8593301, i16 zeroext 12) #9, !dbg !15215
  store i32 %call177, i32* %status, align 4, !dbg !15216
  %90 = load i32, i32* %status, align 4, !dbg !15217
  %cmp178 = icmp slt i32 %90, 0, !dbg !15219
  br i1 %cmp178, label %if.then179, label %if.end180, !dbg !15220

if.then179:                                       ; preds = %if.end176
  br label %error, !dbg !15221

if.end180:                                        ; preds = %if.end176
  %91 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15222
  %call181 = call i32 @write16(%struct.drxk_state* %91, i32 8593284, i16 zeroext 8) #9, !dbg !15223
  store i32 %call181, i32* %status, align 4, !dbg !15224
  %92 = load i32, i32* %status, align 4, !dbg !15225
  %cmp182 = icmp slt i32 %92, 0, !dbg !15227
  br i1 %cmp182, label %if.then183, label %if.end184, !dbg !15228

if.then183:                                       ; preds = %if.end180
  br label %error, !dbg !15229

if.end184:                                        ; preds = %if.end180
  %93 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15230
  %call185 = call i32 @write16(%struct.drxk_state* %93, i32 8593285, i16 zeroext 74) #9, !dbg !15231
  store i32 %call185, i32* %status, align 4, !dbg !15232
  %94 = load i32, i32* %status, align 4, !dbg !15233
  %cmp186 = icmp slt i32 %94, 0, !dbg !15235
  br i1 %cmp186, label %if.then187, label %if.end188, !dbg !15236

if.then187:                                       ; preds = %if.end184
  br label %error, !dbg !15237

if.end188:                                        ; preds = %if.end184
  %95 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15238
  %call189 = call i32 @write16(%struct.drxk_state* %95, i32 8593286, i16 zeroext 18) #9, !dbg !15239
  store i32 %call189, i32* %status, align 4, !dbg !15240
  %96 = load i32, i32* %status, align 4, !dbg !15241
  %cmp190 = icmp slt i32 %96, 0, !dbg !15243
  br i1 %cmp190, label %if.then191, label %if.end192, !dbg !15244

if.then191:                                       ; preds = %if.end188
  br label %error, !dbg !15245

if.end192:                                        ; preds = %if.end188
  %97 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15246
  %call193 = call i32 @write16(%struct.drxk_state* %97, i32 8593287, i16 zeroext 13) #9, !dbg !15247
  store i32 %call193, i32* %status, align 4, !dbg !15248
  %98 = load i32, i32* %status, align 4, !dbg !15249
  %cmp194 = icmp slt i32 %98, 0, !dbg !15251
  br i1 %cmp194, label %if.then195, label %if.end196, !dbg !15252

if.then195:                                       ; preds = %if.end192
  br label %error, !dbg !15253

if.end196:                                        ; preds = %if.end192
  %99 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15254
  %call197 = call i32 @write16(%struct.drxk_state* %99, i32 8593288, i16 zeroext 7) #9, !dbg !15255
  store i32 %call197, i32* %status, align 4, !dbg !15256
  %100 = load i32, i32* %status, align 4, !dbg !15257
  %cmp198 = icmp slt i32 %100, 0, !dbg !15259
  br i1 %cmp198, label %if.then199, label %if.end200, !dbg !15260

if.then199:                                       ; preds = %if.end196
  br label %error, !dbg !15261

if.end200:                                        ; preds = %if.end196
  %101 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15262
  %call201 = call i32 @write16(%struct.drxk_state* %101, i32 8593289, i16 zeroext 0) #9, !dbg !15263
  store i32 %call201, i32* %status, align 4, !dbg !15264
  %102 = load i32, i32* %status, align 4, !dbg !15265
  %cmp202 = icmp slt i32 %102, 0, !dbg !15267
  br i1 %cmp202, label %if.then203, label %if.end204, !dbg !15268

if.then203:                                       ; preds = %if.end200
  br label %error, !dbg !15269

if.end204:                                        ; preds = %if.end200
  %103 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15270
  %call205 = call i32 @write16(%struct.drxk_state* %103, i32 8593290, i16 zeroext -8) #9, !dbg !15271
  store i32 %call205, i32* %status, align 4, !dbg !15272
  br label %error, !dbg !15273

error:                                            ; preds = %if.end204, %if.then203, %if.then199, %if.then195, %if.then191, %if.then187, %if.then183, %if.then179, %if.then175, %if.then171, %if.then167, %if.then163, %if.then159, %if.then155, %if.then151, %if.then147, %if.then143, %if.then139, %if.then135, %if.then131, %if.then127, %if.then123, %if.then119, %if.then115, %if.then111, %if.then107, %if.then103, %if.then99, %if.then95, %if.then91, %if.then87, %if.then83, %if.then79, %if.then75, %if.then71, %if.then67, %if.then63, %if.then59, %if.then55, %if.then51, %if.then47, %if.then43, %if.then39, %if.then35, %if.then31, %if.then27, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !15274), !dbg !15275
  %104 = load i32, i32* %status, align 4, !dbg !15276
  %cmp206 = icmp slt i32 %104, 0, !dbg !15278
  br i1 %cmp206, label %if.then207, label %if.end209, !dbg !15279

if.then207:                                       ; preds = %error
  %105 = load i32, i32* %status, align 4, !dbg !15280
  %call208 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %105, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__func__.set_qam256, i64 0, i64 0)) #8, !dbg !15280
  br label %if.end209, !dbg !15280

if.end209:                                        ; preds = %if.then207, %error
  %106 = load i32, i32* %status, align 4, !dbg !15281
  ret i32 %106, !dbg !15282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mpegts_start(%struct.drxk_state* %state) #0 !dbg !15283 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  %fec_oc_snc_mode = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !15284, metadata !DIExpression()), !dbg !15285
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15286, metadata !DIExpression()), !dbg !15287
  call void @llvm.dbg.declare(metadata i16* %fec_oc_snc_mode, metadata !15288, metadata !DIExpression()), !dbg !15289
  store i16 0, i16* %fec_oc_snc_mode, align 2, !dbg !15289
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15290
  %call = call i32 @read16(%struct.drxk_state* %0, i32 29622336, i16* %fec_oc_snc_mode) #9, !dbg !15291
  store i32 %call, i32* %status, align 4, !dbg !15292
  %1 = load i32, i32* %status, align 4, !dbg !15293
  %cmp = icmp slt i32 %1, 0, !dbg !15295
  br i1 %cmp, label %if.then, label %if.end, !dbg !15296

if.then:                                          ; preds = %entry
  br label %error, !dbg !15297

if.end:                                           ; preds = %entry
  %2 = load i16, i16* %fec_oc_snc_mode, align 2, !dbg !15298
  %conv = zext i16 %2 to i32, !dbg !15298
  %and = and i32 %conv, -17, !dbg !15298
  %conv1 = trunc i32 %and to i16, !dbg !15298
  store i16 %conv1, i16* %fec_oc_snc_mode, align 2, !dbg !15298
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15299
  %4 = load i16, i16* %fec_oc_snc_mode, align 2, !dbg !15300
  %call2 = call i32 @write16(%struct.drxk_state* %3, i32 29622336, i16 zeroext %4) #9, !dbg !15301
  store i32 %call2, i32* %status, align 4, !dbg !15302
  %5 = load i32, i32* %status, align 4, !dbg !15303
  %cmp3 = icmp slt i32 %5, 0, !dbg !15305
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !15306

if.then5:                                         ; preds = %if.end
  br label %error, !dbg !15307

if.end6:                                          ; preds = %if.end
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15308
  %call7 = call i32 @write16(%struct.drxk_state* %6, i32 29622339, i16 zeroext 1) #9, !dbg !15309
  store i32 %call7, i32* %status, align 4, !dbg !15310
  br label %error, !dbg !15311

error:                                            ; preds = %if.end6, %if.then5, %if.then
  call void @llvm.dbg.label(metadata !15312), !dbg !15313
  %7 = load i32, i32* %status, align 4, !dbg !15314
  %cmp8 = icmp slt i32 %7, 0, !dbg !15316
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !15317

if.then10:                                        ; preds = %error
  %8 = load i32, i32* %status, align 4, !dbg !15318
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.mpegts_start, i64 0, i64 0)) #8, !dbg !15318
  br label %if.end12, !dbg !15318

if.end12:                                         ; preds = %if.then10, %error
  %9 = load i32, i32* %status, align 4, !dbg !15319
  ret i32 %9, !dbg !15320
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @Frac28a(i32 %a, i32 %c) #0 !dbg !15321 {
entry:
  %a.addr = alloca i32, align 4
  %c.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %Q1 = alloca i32, align 4
  %R0 = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !15324, metadata !DIExpression()), !dbg !15325
  store i32 %c, i32* %c.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !15326, metadata !DIExpression()), !dbg !15327
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15328, metadata !DIExpression()), !dbg !15329
  store i32 0, i32* %i, align 4, !dbg !15329
  call void @llvm.dbg.declare(metadata i32* %Q1, metadata !15330, metadata !DIExpression()), !dbg !15331
  store i32 0, i32* %Q1, align 4, !dbg !15331
  call void @llvm.dbg.declare(metadata i32* %R0, metadata !15332, metadata !DIExpression()), !dbg !15333
  store i32 0, i32* %R0, align 4, !dbg !15333
  %0 = load i32, i32* %a.addr, align 4, !dbg !15334
  %1 = load i32, i32* %c.addr, align 4, !dbg !15335
  %rem = urem i32 %0, %1, !dbg !15336
  %shl = shl i32 %rem, 4, !dbg !15337
  store i32 %shl, i32* %R0, align 4, !dbg !15338
  %2 = load i32, i32* %a.addr, align 4, !dbg !15339
  %3 = load i32, i32* %c.addr, align 4, !dbg !15340
  %div = udiv i32 %2, %3, !dbg !15341
  store i32 %div, i32* %Q1, align 4, !dbg !15342
  store i32 0, i32* %i, align 4, !dbg !15343
  br label %for.cond, !dbg !15345

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !15346
  %cmp = icmp slt i32 %4, 7, !dbg !15348
  br i1 %cmp, label %for.body, label %for.end, !dbg !15349

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %Q1, align 4, !dbg !15350
  %shl1 = shl i32 %5, 4, !dbg !15352
  %6 = load i32, i32* %R0, align 4, !dbg !15353
  %7 = load i32, i32* %c.addr, align 4, !dbg !15354
  %div2 = udiv i32 %6, %7, !dbg !15355
  %or = or i32 %shl1, %div2, !dbg !15356
  store i32 %or, i32* %Q1, align 4, !dbg !15357
  %8 = load i32, i32* %R0, align 4, !dbg !15358
  %9 = load i32, i32* %c.addr, align 4, !dbg !15359
  %rem3 = urem i32 %8, %9, !dbg !15360
  %shl4 = shl i32 %rem3, 4, !dbg !15361
  store i32 %shl4, i32* %R0, align 4, !dbg !15362
  br label %for.inc, !dbg !15363

for.inc:                                          ; preds = %for.body
  %10 = load i32, i32* %i, align 4, !dbg !15364
  %inc = add i32 %10, 1, !dbg !15364
  store i32 %inc, i32* %i, align 4, !dbg !15364
  br label %for.cond, !dbg !15365, !llvm.loop !15366

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %R0, align 4, !dbg !15368
  %shr = lshr i32 %11, 3, !dbg !15370
  %12 = load i32, i32* %c.addr, align 4, !dbg !15371
  %cmp5 = icmp uge i32 %shr, %12, !dbg !15372
  br i1 %cmp5, label %if.then, label %if.end, !dbg !15373

if.then:                                          ; preds = %for.end
  %13 = load i32, i32* %Q1, align 4, !dbg !15374
  %inc6 = add i32 %13, 1, !dbg !15374
  store i32 %inc6, i32* %Q1, align 4, !dbg !15374
  br label %if.end, !dbg !15375

if.end:                                           ; preds = %if.then, %for.end
  %14 = load i32, i32* %Q1, align 4, !dbg !15376
  ret i32 %14, !dbg !15377
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dvbt_sc_command(%struct.drxk_state* %state, i16 zeroext %cmd, i16 zeroext %subcmd, i16 zeroext %param0, i16 zeroext %param1, i16 zeroext %param2, i16 zeroext %param3, i16 zeroext %param4) #0 !dbg !15378 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %cmd.addr = alloca i16, align 2
  %subcmd.addr = alloca i16, align 2
  %param0.addr = alloca i16, align 2
  %param1.addr = alloca i16, align 2
  %param2.addr = alloca i16, align 2
  %param3.addr = alloca i16, align 2
  %param4.addr = alloca i16, align 2
  %cur_cmd = alloca i16, align 2
  %err_code = alloca i16, align 2
  %retry_cnt = alloca i16, align 2
  %sc_exec = alloca i16, align 2
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !15381, metadata !DIExpression()), !dbg !15382
  store i16 %cmd, i16* %cmd.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %cmd.addr, metadata !15383, metadata !DIExpression()), !dbg !15384
  store i16 %subcmd, i16* %subcmd.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %subcmd.addr, metadata !15385, metadata !DIExpression()), !dbg !15386
  store i16 %param0, i16* %param0.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %param0.addr, metadata !15387, metadata !DIExpression()), !dbg !15388
  store i16 %param1, i16* %param1.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %param1.addr, metadata !15389, metadata !DIExpression()), !dbg !15390
  store i16 %param2, i16* %param2.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %param2.addr, metadata !15391, metadata !DIExpression()), !dbg !15392
  store i16 %param3, i16* %param3.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %param3.addr, metadata !15393, metadata !DIExpression()), !dbg !15394
  store i16 %param4, i16* %param4.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %param4.addr, metadata !15395, metadata !DIExpression()), !dbg !15396
  call void @llvm.dbg.declare(metadata i16* %cur_cmd, metadata !15397, metadata !DIExpression()), !dbg !15398
  store i16 0, i16* %cur_cmd, align 2, !dbg !15398
  call void @llvm.dbg.declare(metadata i16* %err_code, metadata !15399, metadata !DIExpression()), !dbg !15400
  store i16 0, i16* %err_code, align 2, !dbg !15400
  call void @llvm.dbg.declare(metadata i16* %retry_cnt, metadata !15401, metadata !DIExpression()), !dbg !15402
  store i16 0, i16* %retry_cnt, align 2, !dbg !15402
  call void @llvm.dbg.declare(metadata i16* %sc_exec, metadata !15403, metadata !DIExpression()), !dbg !15404
  store i16 0, i16* %sc_exec, align 2, !dbg !15404
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15405, metadata !DIExpression()), !dbg !15406
  br label %do.body, !dbg !15407

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !15408
  %cmp = icmp uge i32 %0, 1, !dbg !15408
  br i1 %cmp, label %if.then, label %if.end, !dbg !15411

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.dvbt_sc_command, i64 0, i64 0)) #8, !dbg !15408
  br label %if.end, !dbg !15408

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !15411

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15412
  %call1 = call i32 @read16(%struct.drxk_state* %1, i32 62914560, i16* %sc_exec) #9, !dbg !15413
  store i32 %call1, i32* %status, align 4, !dbg !15414
  %2 = load i16, i16* %sc_exec, align 2, !dbg !15415
  %conv = zext i16 %2 to i32, !dbg !15415
  %cmp2 = icmp ne i32 %conv, 1, !dbg !15417
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !15418

if.then4:                                         ; preds = %do.end
  store i32 -22, i32* %status, align 4, !dbg !15419
  br label %if.end5, !dbg !15421

if.end5:                                          ; preds = %if.then4, %do.end
  %3 = load i32, i32* %status, align 4, !dbg !15422
  %cmp6 = icmp slt i32 %3, 0, !dbg !15424
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !15425

if.then8:                                         ; preds = %if.end5
  br label %error, !dbg !15426

if.end9:                                          ; preds = %if.end5
  store i16 0, i16* %retry_cnt, align 2, !dbg !15427
  br label %do.body10, !dbg !15428

do.body10:                                        ; preds = %land.end, %if.end9
  call void @usleep_range(i64 1000, i64 2000) #9, !dbg !15429
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15431
  %call11 = call i32 @read16(%struct.drxk_state* %4, i32 63045699, i16* %cur_cmd) #9, !dbg !15432
  store i32 %call11, i32* %status, align 4, !dbg !15433
  %5 = load i16, i16* %retry_cnt, align 2, !dbg !15434
  %inc = add i16 %5, 1, !dbg !15434
  store i16 %inc, i16* %retry_cnt, align 2, !dbg !15434
  br label %do.cond, !dbg !15435

do.cond:                                          ; preds = %do.body10
  %6 = load i16, i16* %cur_cmd, align 2, !dbg !15436
  %conv12 = zext i16 %6 to i32, !dbg !15436
  %cmp13 = icmp ne i32 %conv12, 0, !dbg !15437
  br i1 %cmp13, label %land.rhs, label %land.end, !dbg !15438

land.rhs:                                         ; preds = %do.cond
  %7 = load i16, i16* %retry_cnt, align 2, !dbg !15439
  %conv15 = zext i16 %7 to i32, !dbg !15439
  %cmp16 = icmp slt i32 %conv15, 100, !dbg !15440
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %8 = phi i1 [ false, %do.cond ], [ %cmp16, %land.rhs ], !dbg !15441
  br i1 %8, label %do.body10, label %do.end18, !dbg !15435, !llvm.loop !15442

do.end18:                                         ; preds = %land.end
  %9 = load i16, i16* %retry_cnt, align 2, !dbg !15444
  %conv19 = zext i16 %9 to i32, !dbg !15444
  %cmp20 = icmp sge i32 %conv19, 100, !dbg !15446
  br i1 %cmp20, label %land.lhs.true, label %if.end25, !dbg !15447

land.lhs.true:                                    ; preds = %do.end18
  %10 = load i32, i32* %status, align 4, !dbg !15448
  %cmp22 = icmp slt i32 %10, 0, !dbg !15449
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !15450

if.then24:                                        ; preds = %land.lhs.true
  br label %error, !dbg !15451

if.end25:                                         ; preds = %land.lhs.true, %do.end18
  %11 = load i16, i16* %cmd.addr, align 2, !dbg !15452
  %conv26 = zext i16 %11 to i32, !dbg !15452
  switch i32 %conv26, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
  ], !dbg !15453

sw.bb:                                            ; preds = %if.end25, %if.end25, %if.end25
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15454
  %13 = load i16, i16* %subcmd.addr, align 2, !dbg !15456
  %call27 = call i32 @write16(%struct.drxk_state* %12, i32 63045698, i16 zeroext %13) #9, !dbg !15457
  store i32 %call27, i32* %status, align 4, !dbg !15458
  %14 = load i32, i32* %status, align 4, !dbg !15459
  %cmp28 = icmp slt i32 %14, 0, !dbg !15461
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !15462

if.then30:                                        ; preds = %sw.bb
  br label %error, !dbg !15463

if.end31:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !15464

sw.default:                                       ; preds = %if.end25
  br label %sw.epilog, !dbg !15465

sw.epilog:                                        ; preds = %sw.default, %if.end31
  store i32 0, i32* %status, align 4, !dbg !15466
  %15 = load i16, i16* %cmd.addr, align 2, !dbg !15467
  %conv32 = zext i16 %15 to i32, !dbg !15467
  switch i32 %conv32, label %sw.default41 [
    i32 1, label %sw.bb33
    i32 3, label %sw.bb33
    i32 4, label %sw.bb33
    i32 8, label %sw.bb35
    i32 6, label %sw.bb35
    i32 5, label %sw.bb38
    i32 0, label %sw.bb38
  ], !dbg !15468

sw.bb33:                                          ; preds = %sw.epilog, %sw.epilog, %sw.epilog
  %16 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15469
  %17 = load i16, i16* %param1.addr, align 2, !dbg !15471
  %call34 = call i32 @write16(%struct.drxk_state* %16, i32 63045697, i16 zeroext %17) #9, !dbg !15472
  %18 = load i32, i32* %status, align 4, !dbg !15473
  %or = or i32 %18, %call34, !dbg !15473
  store i32 %or, i32* %status, align 4, !dbg !15473
  br label %sw.bb35, !dbg !15474

sw.bb35:                                          ; preds = %sw.epilog, %sw.epilog, %sw.bb33
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15475
  %20 = load i16, i16* %param0.addr, align 2, !dbg !15476
  %call36 = call i32 @write16(%struct.drxk_state* %19, i32 63045696, i16 zeroext %20) #9, !dbg !15477
  %21 = load i32, i32* %status, align 4, !dbg !15478
  %or37 = or i32 %21, %call36, !dbg !15478
  store i32 %or37, i32* %status, align 4, !dbg !15478
  br label %sw.bb38, !dbg !15479

sw.bb38:                                          ; preds = %sw.epilog, %sw.epilog, %sw.bb35
  %22 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15480
  %23 = load i16, i16* %cmd.addr, align 2, !dbg !15481
  %call39 = call i32 @write16(%struct.drxk_state* %22, i32 63045699, i16 zeroext %23) #9, !dbg !15482
  %24 = load i32, i32* %status, align 4, !dbg !15483
  %or40 = or i32 %24, %call39, !dbg !15483
  store i32 %or40, i32* %status, align 4, !dbg !15483
  br label %sw.epilog42, !dbg !15484

sw.default41:                                     ; preds = %sw.epilog
  store i32 -22, i32* %status, align 4, !dbg !15485
  br label %sw.epilog42, !dbg !15486

sw.epilog42:                                      ; preds = %sw.default41, %sw.bb38
  %25 = load i32, i32* %status, align 4, !dbg !15487
  %cmp43 = icmp slt i32 %25, 0, !dbg !15489
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !15490

if.then45:                                        ; preds = %sw.epilog42
  br label %error, !dbg !15491

if.end46:                                         ; preds = %sw.epilog42
  store i16 0, i16* %retry_cnt, align 2, !dbg !15492
  br label %do.body47, !dbg !15493

do.body47:                                        ; preds = %land.end58, %if.end46
  call void @usleep_range(i64 1000, i64 2000) #9, !dbg !15494
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15496
  %call48 = call i32 @read16(%struct.drxk_state* %26, i32 63045699, i16* %cur_cmd) #9, !dbg !15497
  store i32 %call48, i32* %status, align 4, !dbg !15498
  %27 = load i16, i16* %retry_cnt, align 2, !dbg !15499
  %inc49 = add i16 %27, 1, !dbg !15499
  store i16 %inc49, i16* %retry_cnt, align 2, !dbg !15499
  br label %do.cond50, !dbg !15500

do.cond50:                                        ; preds = %do.body47
  %28 = load i16, i16* %cur_cmd, align 2, !dbg !15501
  %conv51 = zext i16 %28 to i32, !dbg !15501
  %cmp52 = icmp ne i32 %conv51, 0, !dbg !15502
  br i1 %cmp52, label %land.rhs54, label %land.end58, !dbg !15503

land.rhs54:                                       ; preds = %do.cond50
  %29 = load i16, i16* %retry_cnt, align 2, !dbg !15504
  %conv55 = zext i16 %29 to i32, !dbg !15504
  %cmp56 = icmp slt i32 %conv55, 100, !dbg !15505
  br label %land.end58

land.end58:                                       ; preds = %land.rhs54, %do.cond50
  %30 = phi i1 [ false, %do.cond50 ], [ %cmp56, %land.rhs54 ], !dbg !15441
  br i1 %30, label %do.body47, label %do.end59, !dbg !15500, !llvm.loop !15506

do.end59:                                         ; preds = %land.end58
  %31 = load i16, i16* %retry_cnt, align 2, !dbg !15508
  %conv60 = zext i16 %31 to i32, !dbg !15508
  %cmp61 = icmp sge i32 %conv60, 100, !dbg !15510
  br i1 %cmp61, label %land.lhs.true63, label %if.end67, !dbg !15511

land.lhs.true63:                                  ; preds = %do.end59
  %32 = load i32, i32* %status, align 4, !dbg !15512
  %cmp64 = icmp slt i32 %32, 0, !dbg !15513
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !15514

if.then66:                                        ; preds = %land.lhs.true63
  br label %error, !dbg !15515

if.end67:                                         ; preds = %land.lhs.true63, %do.end59
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15516
  %call68 = call i32 @read16(%struct.drxk_state* %33, i32 63045698, i16* %err_code) #9, !dbg !15517
  store i32 %call68, i32* %status, align 4, !dbg !15518
  %34 = load i16, i16* %err_code, align 2, !dbg !15519
  %conv69 = zext i16 %34 to i32, !dbg !15519
  %cmp70 = icmp eq i32 %conv69, 65535, !dbg !15521
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !15522

if.then72:                                        ; preds = %if.end67
  store i32 -22, i32* %status, align 4, !dbg !15523
  br label %if.end73, !dbg !15525

if.end73:                                         ; preds = %if.then72, %if.end67
  %35 = load i32, i32* %status, align 4, !dbg !15526
  %cmp74 = icmp slt i32 %35, 0, !dbg !15528
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !15529

if.then76:                                        ; preds = %if.end73
  br label %error, !dbg !15530

if.end77:                                         ; preds = %if.end73
  %36 = load i16, i16* %cmd.addr, align 2, !dbg !15531
  %conv78 = zext i16 %36 to i32, !dbg !15531
  switch i32 %conv78, label %sw.default82 [
    i32 6, label %sw.bb79
    i32 5, label %sw.bb79
    i32 8, label %sw.bb81
    i32 7, label %sw.bb81
    i32 1, label %sw.bb81
    i32 3, label %sw.bb81
    i32 4, label %sw.bb81
    i32 0, label %sw.bb81
  ], !dbg !15532

sw.bb79:                                          ; preds = %if.end77, %if.end77
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15533
  %call80 = call i32 @read16(%struct.drxk_state* %37, i32 63045696, i16* %param0.addr) #9, !dbg !15535
  store i32 %call80, i32* %status, align 4, !dbg !15536
  br label %sw.bb81, !dbg !15537

sw.bb81:                                          ; preds = %if.end77, %if.end77, %if.end77, %if.end77, %if.end77, %if.end77, %sw.bb79
  br label %sw.epilog83, !dbg !15538

sw.default82:                                     ; preds = %if.end77
  store i32 -22, i32* %status, align 4, !dbg !15539
  br label %sw.epilog83, !dbg !15540

sw.epilog83:                                      ; preds = %sw.default82, %sw.bb81
  br label %error, !dbg !15541

error:                                            ; preds = %sw.epilog83, %if.then76, %if.then66, %if.then45, %if.then30, %if.then24, %if.then8
  call void @llvm.dbg.label(metadata !15542), !dbg !15543
  %38 = load i32, i32* %status, align 4, !dbg !15544
  %cmp84 = icmp slt i32 %38, 0, !dbg !15546
  br i1 %cmp84, label %if.then86, label %if.end88, !dbg !15547

if.then86:                                        ; preds = %error
  %39 = load i32, i32* %status, align 4, !dbg !15548
  %call87 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %39, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.dvbt_sc_command, i64 0, i64 0)) #8, !dbg !15548
  br label %if.end88, !dbg !15548

if.end88:                                         ; preds = %if.then86, %error
  %40 = load i32, i32* %status, align 4, !dbg !15549
  ret i32 %40, !dbg !15550
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dvbt_ctrl_set_sqi_speed(%struct.drxk_state* %state, i32* %speed) #0 !dbg !15551 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %speed.addr = alloca i32*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !15555, metadata !DIExpression()), !dbg !15556
  store i32* %speed, i32** %speed.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %speed.addr, metadata !15557, metadata !DIExpression()), !dbg !15558
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15559, metadata !DIExpression()), !dbg !15560
  store i32 -22, i32* %status, align 4, !dbg !15560
  br label %do.body, !dbg !15561

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !15562
  %cmp = icmp uge i32 %0, 1, !dbg !15562
  br i1 %cmp, label %if.then, label %if.end, !dbg !15565

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dvbt_ctrl_set_sqi_speed, i64 0, i64 0)) #8, !dbg !15562
  br label %if.end, !dbg !15562

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !15565

do.end:                                           ; preds = %if.end
  %1 = load i32*, i32** %speed.addr, align 8, !dbg !15566
  %2 = load i32, i32* %1, align 4, !dbg !15567
  switch i32 %2, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
  ], !dbg !15568

sw.bb:                                            ; preds = %do.end, %do.end, %do.end
  br label %sw.epilog, !dbg !15569

sw.default:                                       ; preds = %do.end
  br label %error, !dbg !15571

sw.epilog:                                        ; preds = %sw.bb
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15572
  %4 = load i32*, i32** %speed.addr, align 8, !dbg !15573
  %5 = load i32, i32* %4, align 4, !dbg !15574
  %conv = trunc i32 %5 to i16, !dbg !15575
  %call1 = call i32 @write16(%struct.drxk_state* %3, i32 8593157, i16 zeroext %conv) #9, !dbg !15576
  store i32 %call1, i32* %status, align 4, !dbg !15577
  br label %error, !dbg !15578

error:                                            ; preds = %sw.epilog, %sw.default
  call void @llvm.dbg.label(metadata !15579), !dbg !15580
  %6 = load i32, i32* %status, align 4, !dbg !15581
  %cmp2 = icmp slt i32 %6, 0, !dbg !15583
  br i1 %cmp2, label %if.then4, label %if.end6, !dbg !15584

if.then4:                                         ; preds = %error
  %7 = load i32, i32* %status, align 4, !dbg !15585
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dvbt_ctrl_set_sqi_speed, i64 0, i64 0)) #8, !dbg !15585
  br label %if.end6, !dbg !15585

if.end6:                                          ; preds = %if.then4, %error
  %8 = load i32, i32* %status, align 4, !dbg !15586
  ret i32 %8, !dbg !15587
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxk_get_stats(%struct.dvb_frontend* %fe) #0 !dbg !15588 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %c = alloca %struct.dtv_frontend_properties*, align 8
  %state = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  %stat = alloca i32, align 4
  %reg16 = alloca i16, align 2
  %post_bit_count = alloca i32, align 4
  %post_bit_err_count = alloca i32, align 4
  %post_bit_error_scale = alloca i32, align 4
  %pre_bit_err_count = alloca i32, align 4
  %pre_bit_count = alloca i32, align 4
  %pkt_count = alloca i32, align 4
  %pkt_error_count = alloca i32, align 4
  %cnr = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !15589, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %c, metadata !15591, metadata !DIExpression()), !dbg !15592
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !15593
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !15594
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %c, align 8, !dbg !15592
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state, metadata !15595, metadata !DIExpression()), !dbg !15596
  %1 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !15597
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %1, i32 0, i32 3, !dbg !15598
  %2 = load i8*, i8** %demodulator_priv, align 8, !dbg !15598
  %3 = bitcast i8* %2 to %struct.drxk_state*, !dbg !15597
  store %struct.drxk_state* %3, %struct.drxk_state** %state, align 8, !dbg !15596
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15599, metadata !DIExpression()), !dbg !15600
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !15601, metadata !DIExpression()), !dbg !15602
  call void @llvm.dbg.declare(metadata i16* %reg16, metadata !15603, metadata !DIExpression()), !dbg !15604
  call void @llvm.dbg.declare(metadata i32* %post_bit_count, metadata !15605, metadata !DIExpression()), !dbg !15606
  call void @llvm.dbg.declare(metadata i32* %post_bit_err_count, metadata !15607, metadata !DIExpression()), !dbg !15608
  call void @llvm.dbg.declare(metadata i32* %post_bit_error_scale, metadata !15609, metadata !DIExpression()), !dbg !15610
  call void @llvm.dbg.declare(metadata i32* %pre_bit_err_count, metadata !15611, metadata !DIExpression()), !dbg !15612
  call void @llvm.dbg.declare(metadata i32* %pre_bit_count, metadata !15613, metadata !DIExpression()), !dbg !15614
  call void @llvm.dbg.declare(metadata i32* %pkt_count, metadata !15615, metadata !DIExpression()), !dbg !15616
  call void @llvm.dbg.declare(metadata i32* %pkt_error_count, metadata !15617, metadata !DIExpression()), !dbg !15618
  call void @llvm.dbg.declare(metadata i32* %cnr, metadata !15619, metadata !DIExpression()), !dbg !15620
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15621
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 27, !dbg !15623
  %5 = load i32, i32* %m_drxk_state, align 4, !dbg !15623
  %cmp = icmp eq i32 %5, 5, !dbg !15624
  br i1 %cmp, label %if.then, label %if.end, !dbg !15625

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !15626
  br label %return, !dbg !15626

if.end:                                           ; preds = %entry
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15627
  %m_drxk_state1 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %6, i32 0, i32 27, !dbg !15629
  %7 = load i32, i32* %m_drxk_state1, align 4, !dbg !15629
  %cmp2 = icmp eq i32 %7, 0, !dbg !15630
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !15631

if.then3:                                         ; preds = %if.end
  store i32 -11, i32* %retval, align 4, !dbg !15632
  br label %return, !dbg !15632

if.end4:                                          ; preds = %if.end
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15633
  %fe_status = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %8, i32 0, i32 106, !dbg !15634
  store i32 0, i32* %fe_status, align 4, !dbg !15635
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15636
  %call = call i32 @get_lock_status(%struct.drxk_state* %9, i32* %stat) #9, !dbg !15637
  %10 = load i32, i32* %stat, align 4, !dbg !15638
  %cmp5 = icmp eq i32 %10, 4, !dbg !15640
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !15641

if.then6:                                         ; preds = %if.end4
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15642
  %fe_status7 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %11, i32 0, i32 106, !dbg !15643
  %12 = load i32, i32* %fe_status7, align 4, !dbg !15644
  %or = or i32 %12, 31, !dbg !15644
  store i32 %or, i32* %fe_status7, align 4, !dbg !15644
  br label %if.end8, !dbg !15642

if.end8:                                          ; preds = %if.then6, %if.end4
  %13 = load i32, i32* %stat, align 4, !dbg !15645
  %cmp9 = icmp eq i32 %13, 3, !dbg !15647
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !15648

if.then10:                                        ; preds = %if.end8
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15649
  %fe_status11 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %14, i32 0, i32 106, !dbg !15650
  %15 = load i32, i32* %fe_status11, align 4, !dbg !15651
  %or12 = or i32 %15, 15, !dbg !15651
  store i32 %or12, i32* %fe_status11, align 4, !dbg !15651
  br label %if.end13, !dbg !15649

if.end13:                                         ; preds = %if.then10, %if.end8
  %16 = load i32, i32* %stat, align 4, !dbg !15652
  %cmp14 = icmp eq i32 %16, 2, !dbg !15654
  br i1 %cmp14, label %if.then15, label %if.end18, !dbg !15655

if.then15:                                        ; preds = %if.end13
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15656
  %fe_status16 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %17, i32 0, i32 106, !dbg !15657
  %18 = load i32, i32* %fe_status16, align 4, !dbg !15658
  %or17 = or i32 %18, 7, !dbg !15658
  store i32 %or17, i32* %fe_status16, align 4, !dbg !15658
  br label %if.end18, !dbg !15656

if.end18:                                         ; preds = %if.then15, %if.end13
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15659
  %20 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15660
  %strength = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %20, i32 0, i32 42, !dbg !15661
  %stat19 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength, i32 0, i32 1, !dbg !15662
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat19, i64 0, i64 0, !dbg !15660
  %21 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 1, !dbg !15663
  %uvalue = bitcast %union.anon.0* %21 to i64*, !dbg !15663
  %call20 = call i32 @get_strength(%struct.drxk_state* %19, i64* %uvalue) #9, !dbg !15664
  %22 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15665
  %strength21 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %22, i32 0, i32 42, !dbg !15666
  %stat22 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength21, i32 0, i32 1, !dbg !15667
  %arrayidx23 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat22, i64 0, i64 0, !dbg !15665
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx23, i32 0, i32 0, !dbg !15668
  store i8 2, i8* %scale, align 1, !dbg !15669
  %23 = load i32, i32* %stat, align 4, !dbg !15670
  %cmp24 = icmp uge i32 %23, 2, !dbg !15672
  br i1 %cmp24, label %if.then25, label %if.else, !dbg !15673

if.then25:                                        ; preds = %if.end18
  %24 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15674
  %call26 = call i32 @get_signal_to_noise(%struct.drxk_state* %24, i32* %cnr) #9, !dbg !15676
  %25 = load i32, i32* %cnr, align 4, !dbg !15677
  %mul = mul i32 %25, 100, !dbg !15678
  %conv = sext i32 %mul to i64, !dbg !15677
  %26 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15679
  %cnr27 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %26, i32 0, i32 43, !dbg !15680
  %stat28 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr27, i32 0, i32 1, !dbg !15681
  %arrayidx29 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat28, i64 0, i64 0, !dbg !15679
  %27 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx29, i32 0, i32 1, !dbg !15682
  %svalue = bitcast %union.anon.0* %27 to i64*, !dbg !15682
  store i64 %conv, i64* %svalue, align 1, !dbg !15683
  %28 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15684
  %cnr30 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %28, i32 0, i32 43, !dbg !15685
  %stat31 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr30, i32 0, i32 1, !dbg !15686
  %arrayidx32 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat31, i64 0, i64 0, !dbg !15684
  %scale33 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx32, i32 0, i32 0, !dbg !15687
  store i8 1, i8* %scale33, align 1, !dbg !15688
  br label %if.end38, !dbg !15689

if.else:                                          ; preds = %if.end18
  %29 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15690
  %cnr34 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %29, i32 0, i32 43, !dbg !15692
  %stat35 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr34, i32 0, i32 1, !dbg !15693
  %arrayidx36 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat35, i64 0, i64 0, !dbg !15690
  %scale37 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx36, i32 0, i32 0, !dbg !15694
  store i8 0, i8* %scale37, align 1, !dbg !15695
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then25
  %30 = load i32, i32* %stat, align 4, !dbg !15696
  %cmp39 = icmp ult i32 %30, 3, !dbg !15698
  br i1 %cmp39, label %if.then41, label %if.end62, !dbg !15699

if.then41:                                        ; preds = %if.end38
  %31 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15700
  %block_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %31, i32 0, i32 48, !dbg !15702
  %stat42 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error, i32 0, i32 1, !dbg !15703
  %arrayidx43 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat42, i64 0, i64 0, !dbg !15700
  %scale44 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx43, i32 0, i32 0, !dbg !15704
  store i8 0, i8* %scale44, align 1, !dbg !15705
  %32 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15706
  %block_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %32, i32 0, i32 49, !dbg !15707
  %stat45 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count, i32 0, i32 1, !dbg !15708
  %arrayidx46 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat45, i64 0, i64 0, !dbg !15706
  %scale47 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx46, i32 0, i32 0, !dbg !15709
  store i8 0, i8* %scale47, align 1, !dbg !15710
  %33 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15711
  %pre_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %33, i32 0, i32 44, !dbg !15712
  %stat48 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_error, i32 0, i32 1, !dbg !15713
  %arrayidx49 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat48, i64 0, i64 0, !dbg !15711
  %scale50 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx49, i32 0, i32 0, !dbg !15714
  store i8 0, i8* %scale50, align 1, !dbg !15715
  %34 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15716
  %pre_bit_count51 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %34, i32 0, i32 45, !dbg !15717
  %stat52 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_count51, i32 0, i32 1, !dbg !15718
  %arrayidx53 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat52, i64 0, i64 0, !dbg !15716
  %scale54 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx53, i32 0, i32 0, !dbg !15719
  store i8 0, i8* %scale54, align 1, !dbg !15720
  %35 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15721
  %post_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %35, i32 0, i32 46, !dbg !15722
  %stat55 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error, i32 0, i32 1, !dbg !15723
  %arrayidx56 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat55, i64 0, i64 0, !dbg !15721
  %scale57 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx56, i32 0, i32 0, !dbg !15724
  store i8 0, i8* %scale57, align 1, !dbg !15725
  %36 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15726
  %post_bit_count58 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %36, i32 0, i32 47, !dbg !15727
  %stat59 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count58, i32 0, i32 1, !dbg !15728
  %arrayidx60 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat59, i64 0, i64 0, !dbg !15726
  %scale61 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx60, i32 0, i32 0, !dbg !15729
  store i8 0, i8* %scale61, align 1, !dbg !15730
  store i32 0, i32* %retval, align 4, !dbg !15731
  br label %return, !dbg !15731

if.end62:                                         ; preds = %if.end38
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15732
  %call63 = call i32 @read16(%struct.drxk_state* %37, i32 54657047, i16* %reg16) #9, !dbg !15733
  store i32 %call63, i32* %status, align 4, !dbg !15734
  %38 = load i32, i32* %status, align 4, !dbg !15735
  %cmp64 = icmp slt i32 %38, 0, !dbg !15737
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !15738

if.then66:                                        ; preds = %if.end62
  br label %error, !dbg !15739

if.end67:                                         ; preds = %if.end62
  %39 = load i16, i16* %reg16, align 2, !dbg !15740
  %conv68 = zext i16 %39 to i32, !dbg !15740
  store i32 %conv68, i32* %pre_bit_err_count, align 4, !dbg !15741
  %40 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15742
  %call69 = call i32 @read16(%struct.drxk_state* %40, i32 54657048, i16* %reg16) #9, !dbg !15743
  store i32 %call69, i32* %status, align 4, !dbg !15744
  %41 = load i32, i32* %status, align 4, !dbg !15745
  %cmp70 = icmp slt i32 %41, 0, !dbg !15747
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !15748

if.then72:                                        ; preds = %if.end67
  br label %error, !dbg !15749

if.end73:                                         ; preds = %if.end67
  %42 = load i16, i16* %reg16, align 2, !dbg !15750
  %conv74 = zext i16 %42 to i32, !dbg !15750
  store i32 %conv74, i32* %pre_bit_count, align 4, !dbg !15751
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15752
  %call75 = call i32 @read16(%struct.drxk_state* %43, i32 29556756, i16* %reg16) #9, !dbg !15753
  store i32 %call75, i32* %status, align 4, !dbg !15754
  %44 = load i32, i32* %status, align 4, !dbg !15755
  %cmp76 = icmp slt i32 %44, 0, !dbg !15757
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !15758

if.then78:                                        ; preds = %if.end73
  br label %error, !dbg !15759

if.end79:                                         ; preds = %if.end73
  %45 = load i16, i16* %reg16, align 2, !dbg !15760
  %conv80 = zext i16 %45 to i32, !dbg !15760
  store i32 %conv80, i32* %post_bit_err_count, align 4, !dbg !15761
  %46 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15762
  %call81 = call i32 @read16(%struct.drxk_state* %46, i32 29556755, i16* %reg16) #9, !dbg !15763
  store i32 %call81, i32* %status, align 4, !dbg !15764
  %47 = load i32, i32* %status, align 4, !dbg !15765
  %cmp82 = icmp slt i32 %47, 0, !dbg !15767
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !15768

if.then84:                                        ; preds = %if.end79
  br label %error, !dbg !15769

if.end85:                                         ; preds = %if.end79
  %48 = load i16, i16* %reg16, align 2, !dbg !15770
  %conv86 = zext i16 %48 to i32, !dbg !15770
  store i32 %conv86, i32* %post_bit_error_scale, align 4, !dbg !15771
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15772
  %call87 = call i32 @read16(%struct.drxk_state* %49, i32 29556754, i16* %reg16) #9, !dbg !15773
  store i32 %call87, i32* %status, align 4, !dbg !15774
  %50 = load i32, i32* %status, align 4, !dbg !15775
  %cmp88 = icmp slt i32 %50, 0, !dbg !15777
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !15778

if.then90:                                        ; preds = %if.end85
  br label %error, !dbg !15779

if.end91:                                         ; preds = %if.end85
  %51 = load i16, i16* %reg16, align 2, !dbg !15780
  %conv92 = zext i16 %51 to i32, !dbg !15780
  store i32 %conv92, i32* %pkt_count, align 4, !dbg !15781
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15782
  %call93 = call i32 @read16(%struct.drxk_state* %52, i32 8593099, i16* %reg16) #9, !dbg !15783
  store i32 %call93, i32* %status, align 4, !dbg !15784
  %53 = load i32, i32* %status, align 4, !dbg !15785
  %cmp94 = icmp slt i32 %53, 0, !dbg !15787
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !15788

if.then96:                                        ; preds = %if.end91
  br label %error, !dbg !15789

if.end97:                                         ; preds = %if.end91
  %54 = load i16, i16* %reg16, align 2, !dbg !15790
  %conv98 = zext i16 %54 to i32, !dbg !15790
  store i32 %conv98, i32* %pkt_error_count, align 4, !dbg !15791
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state, align 8, !dbg !15792
  %call99 = call i32 @write16(%struct.drxk_state* %55, i32 8593099, i16 zeroext 0) #9, !dbg !15793
  %56 = load i32, i32* %post_bit_error_scale, align 4, !dbg !15794
  %57 = load i32, i32* %post_bit_err_count, align 4, !dbg !15795
  %mul100 = mul i32 %57, %56, !dbg !15795
  store i32 %mul100, i32* %post_bit_err_count, align 4, !dbg !15795
  %58 = load i32, i32* %pkt_count, align 4, !dbg !15796
  %mul101 = mul i32 %58, 204, !dbg !15797
  %mul102 = mul i32 %mul101, 8, !dbg !15798
  store i32 %mul102, i32* %post_bit_count, align 4, !dbg !15799
  %59 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15800
  %block_error103 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %59, i32 0, i32 48, !dbg !15801
  %stat104 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error103, i32 0, i32 1, !dbg !15802
  %arrayidx105 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat104, i64 0, i64 0, !dbg !15800
  %scale106 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx105, i32 0, i32 0, !dbg !15803
  store i8 3, i8* %scale106, align 1, !dbg !15804
  %60 = load i32, i32* %pkt_error_count, align 4, !dbg !15805
  %conv107 = zext i32 %60 to i64, !dbg !15805
  %61 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15806
  %block_error108 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %61, i32 0, i32 48, !dbg !15807
  %stat109 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error108, i32 0, i32 1, !dbg !15808
  %arrayidx110 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat109, i64 0, i64 0, !dbg !15806
  %62 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx110, i32 0, i32 1, !dbg !15809
  %uvalue111 = bitcast %union.anon.0* %62 to i64*, !dbg !15809
  %63 = load i64, i64* %uvalue111, align 1, !dbg !15810
  %add = add i64 %63, %conv107, !dbg !15810
  store i64 %add, i64* %uvalue111, align 1, !dbg !15810
  %64 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15811
  %block_count112 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %64, i32 0, i32 49, !dbg !15812
  %stat113 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count112, i32 0, i32 1, !dbg !15813
  %arrayidx114 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat113, i64 0, i64 0, !dbg !15811
  %scale115 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx114, i32 0, i32 0, !dbg !15814
  store i8 3, i8* %scale115, align 1, !dbg !15815
  %65 = load i32, i32* %pkt_count, align 4, !dbg !15816
  %conv116 = zext i32 %65 to i64, !dbg !15816
  %66 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15817
  %block_count117 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %66, i32 0, i32 49, !dbg !15818
  %stat118 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count117, i32 0, i32 1, !dbg !15819
  %arrayidx119 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat118, i64 0, i64 0, !dbg !15817
  %67 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx119, i32 0, i32 1, !dbg !15820
  %uvalue120 = bitcast %union.anon.0* %67 to i64*, !dbg !15820
  %68 = load i64, i64* %uvalue120, align 1, !dbg !15821
  %add121 = add i64 %68, %conv116, !dbg !15821
  store i64 %add121, i64* %uvalue120, align 1, !dbg !15821
  %69 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15822
  %pre_bit_error122 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %69, i32 0, i32 44, !dbg !15823
  %stat123 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_error122, i32 0, i32 1, !dbg !15824
  %arrayidx124 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat123, i64 0, i64 0, !dbg !15822
  %scale125 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx124, i32 0, i32 0, !dbg !15825
  store i8 3, i8* %scale125, align 1, !dbg !15826
  %70 = load i32, i32* %pre_bit_err_count, align 4, !dbg !15827
  %conv126 = zext i32 %70 to i64, !dbg !15827
  %71 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15828
  %pre_bit_error127 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %71, i32 0, i32 44, !dbg !15829
  %stat128 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_error127, i32 0, i32 1, !dbg !15830
  %arrayidx129 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat128, i64 0, i64 0, !dbg !15828
  %72 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx129, i32 0, i32 1, !dbg !15831
  %uvalue130 = bitcast %union.anon.0* %72 to i64*, !dbg !15831
  %73 = load i64, i64* %uvalue130, align 1, !dbg !15832
  %add131 = add i64 %73, %conv126, !dbg !15832
  store i64 %add131, i64* %uvalue130, align 1, !dbg !15832
  %74 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15833
  %pre_bit_count132 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %74, i32 0, i32 45, !dbg !15834
  %stat133 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_count132, i32 0, i32 1, !dbg !15835
  %arrayidx134 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat133, i64 0, i64 0, !dbg !15833
  %scale135 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx134, i32 0, i32 0, !dbg !15836
  store i8 3, i8* %scale135, align 1, !dbg !15837
  %75 = load i32, i32* %pre_bit_count, align 4, !dbg !15838
  %conv136 = zext i32 %75 to i64, !dbg !15838
  %76 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15839
  %pre_bit_count137 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %76, i32 0, i32 45, !dbg !15840
  %stat138 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %pre_bit_count137, i32 0, i32 1, !dbg !15841
  %arrayidx139 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat138, i64 0, i64 0, !dbg !15839
  %77 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx139, i32 0, i32 1, !dbg !15842
  %uvalue140 = bitcast %union.anon.0* %77 to i64*, !dbg !15842
  %78 = load i64, i64* %uvalue140, align 1, !dbg !15843
  %add141 = add i64 %78, %conv136, !dbg !15843
  store i64 %add141, i64* %uvalue140, align 1, !dbg !15843
  %79 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15844
  %post_bit_error142 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %79, i32 0, i32 46, !dbg !15845
  %stat143 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error142, i32 0, i32 1, !dbg !15846
  %arrayidx144 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat143, i64 0, i64 0, !dbg !15844
  %scale145 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx144, i32 0, i32 0, !dbg !15847
  store i8 3, i8* %scale145, align 1, !dbg !15848
  %80 = load i32, i32* %post_bit_err_count, align 4, !dbg !15849
  %conv146 = zext i32 %80 to i64, !dbg !15849
  %81 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15850
  %post_bit_error147 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %81, i32 0, i32 46, !dbg !15851
  %stat148 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error147, i32 0, i32 1, !dbg !15852
  %arrayidx149 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat148, i64 0, i64 0, !dbg !15850
  %82 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx149, i32 0, i32 1, !dbg !15853
  %uvalue150 = bitcast %union.anon.0* %82 to i64*, !dbg !15853
  %83 = load i64, i64* %uvalue150, align 1, !dbg !15854
  %add151 = add i64 %83, %conv146, !dbg !15854
  store i64 %add151, i64* %uvalue150, align 1, !dbg !15854
  %84 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15855
  %post_bit_count152 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %84, i32 0, i32 47, !dbg !15856
  %stat153 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count152, i32 0, i32 1, !dbg !15857
  %arrayidx154 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat153, i64 0, i64 0, !dbg !15855
  %scale155 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx154, i32 0, i32 0, !dbg !15858
  store i8 3, i8* %scale155, align 1, !dbg !15859
  %85 = load i32, i32* %post_bit_count, align 4, !dbg !15860
  %conv156 = zext i32 %85 to i64, !dbg !15860
  %86 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !15861
  %post_bit_count157 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %86, i32 0, i32 47, !dbg !15862
  %stat158 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count157, i32 0, i32 1, !dbg !15863
  %arrayidx159 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat158, i64 0, i64 0, !dbg !15861
  %87 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx159, i32 0, i32 1, !dbg !15864
  %uvalue160 = bitcast %union.anon.0* %87 to i64*, !dbg !15864
  %88 = load i64, i64* %uvalue160, align 1, !dbg !15865
  %add161 = add i64 %88, %conv156, !dbg !15865
  store i64 %add161, i64* %uvalue160, align 1, !dbg !15865
  br label %error, !dbg !15861

error:                                            ; preds = %if.end97, %if.then96, %if.then90, %if.then84, %if.then78, %if.then72, %if.then66
  call void @llvm.dbg.label(metadata !15866), !dbg !15867
  %89 = load i32, i32* %status, align 4, !dbg !15868
  store i32 %89, i32* %retval, align 4, !dbg !15869
  br label %return, !dbg !15869

return:                                           ; preds = %error, %if.then41, %if.then3, %if.then
  %90 = load i32, i32* %retval, align 4, !dbg !15870
  ret i32 %90, !dbg !15870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_lock_status(%struct.drxk_state* %state, i32* %p_lock_status) #0 !dbg !15871 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %p_lock_status.addr = alloca i32*, align 8
  %status = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !15874, metadata !DIExpression()), !dbg !15875
  store i32* %p_lock_status, i32** %p_lock_status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_lock_status.addr, metadata !15876, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15878, metadata !DIExpression()), !dbg !15879
  store i32 -22, i32* %status, align 4, !dbg !15879
  br label %do.body, !dbg !15880

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !15881
  %cmp = icmp uge i32 %0, 1, !dbg !15881
  br i1 %cmp, label %if.then, label %if.end, !dbg !15884

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.get_lock_status, i64 0, i64 0)) #8, !dbg !15881
  br label %if.end, !dbg !15881

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !15884

do.end:                                           ; preds = %if.end
  %1 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !15885
  %cmp1 = icmp eq i32* %1, null, !dbg !15887
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !15888

if.then2:                                         ; preds = %do.end
  br label %error, !dbg !15889

if.end3:                                          ; preds = %do.end
  %2 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !15890
  store i32 1, i32* %2, align 4, !dbg !15891
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15892
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 28, !dbg !15893
  %4 = load i32, i32* %m_operation_mode, align 8, !dbg !15893
  switch i32 %4, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb5
  ], !dbg !15894

sw.bb:                                            ; preds = %if.end3, %if.end3, %if.end3
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15895
  %6 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !15897
  %call4 = call i32 @get_qam_lock_status(%struct.drxk_state* %5, i32* %6) #9, !dbg !15898
  store i32 %call4, i32* %status, align 4, !dbg !15899
  br label %sw.epilog, !dbg !15900

sw.bb5:                                           ; preds = %if.end3
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15901
  %8 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !15902
  %call6 = call i32 @get_dvbt_lock_status(%struct.drxk_state* %7, i32* %8) #9, !dbg !15903
  store i32 %call6, i32* %status, align 4, !dbg !15904
  br label %sw.epilog, !dbg !15905

sw.default:                                       ; preds = %if.end3
  store i32 0, i32* %tmp, align 4, !dbg !15906
  %9 = load i32, i32* %tmp, align 4, !dbg !15909
  store i32 0, i32* %retval, align 4, !dbg !15910
  br label %return, !dbg !15910

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb
  br label %error, !dbg !15911

error:                                            ; preds = %sw.epilog, %if.then2
  call void @llvm.dbg.label(metadata !15912), !dbg !15913
  %10 = load i32, i32* %status, align 4, !dbg !15914
  %cmp7 = icmp slt i32 %10, 0, !dbg !15916
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !15917

if.then8:                                         ; preds = %error
  %11 = load i32, i32* %status, align 4, !dbg !15918
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.get_lock_status, i64 0, i64 0)) #8, !dbg !15918
  br label %if.end10, !dbg !15918

if.end10:                                         ; preds = %if.then8, %error
  %12 = load i32, i32* %status, align 4, !dbg !15919
  store i32 %12, i32* %retval, align 4, !dbg !15920
  br label %return, !dbg !15920

return:                                           ; preds = %if.end10, %sw.default
  %13 = load i32, i32* %retval, align 4, !dbg !15921
  ret i32 %13, !dbg !15921
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_strength(%struct.drxk_state* %state, i64* %strength) #0 !dbg !15922 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %strength.addr = alloca i64*, align 8
  %status = alloca i32, align 4
  %rf_agc = alloca %struct.s_cfg_agc, align 4
  %if_agc = alloca %struct.s_cfg_agc, align 4
  %total_gain = alloca i32, align 4
  %atten = alloca i32, align 4
  %agc_range = alloca i32, align 4
  %scu_lvl = alloca i16, align 2
  %scu_coc = alloca i16, align 2
  %tuner_rf_gain = alloca i16, align 2
  %tuner_if_gain = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !15925, metadata !DIExpression()), !dbg !15926
  store i64* %strength, i64** %strength.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %strength.addr, metadata !15927, metadata !DIExpression()), !dbg !15928
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15929, metadata !DIExpression()), !dbg !15930
  call void @llvm.dbg.declare(metadata %struct.s_cfg_agc* %rf_agc, metadata !15931, metadata !DIExpression()), !dbg !15932
  call void @llvm.dbg.declare(metadata %struct.s_cfg_agc* %if_agc, metadata !15933, metadata !DIExpression()), !dbg !15934
  call void @llvm.dbg.declare(metadata i32* %total_gain, metadata !15935, metadata !DIExpression()), !dbg !15936
  store i32 0, i32* %total_gain, align 4, !dbg !15936
  call void @llvm.dbg.declare(metadata i32* %atten, metadata !15937, metadata !DIExpression()), !dbg !15938
  store i32 0, i32* %atten, align 4, !dbg !15938
  call void @llvm.dbg.declare(metadata i32* %agc_range, metadata !15939, metadata !DIExpression()), !dbg !15940
  store i32 0, i32* %agc_range, align 4, !dbg !15940
  call void @llvm.dbg.declare(metadata i16* %scu_lvl, metadata !15941, metadata !DIExpression()), !dbg !15942
  store i16 0, i16* %scu_lvl, align 2, !dbg !15942
  call void @llvm.dbg.declare(metadata i16* %scu_coc, metadata !15943, metadata !DIExpression()), !dbg !15944
  store i16 0, i16* %scu_coc, align 2, !dbg !15944
  call void @llvm.dbg.declare(metadata i16* %tuner_rf_gain, metadata !15945, metadata !DIExpression()), !dbg !15946
  store i16 50, i16* %tuner_rf_gain, align 2, !dbg !15946
  call void @llvm.dbg.declare(metadata i16* %tuner_if_gain, metadata !15947, metadata !DIExpression()), !dbg !15948
  store i16 40, i16* %tuner_if_gain, align 2, !dbg !15948
  %0 = load i64*, i64** %strength.addr, align 8, !dbg !15949
  store i64 0, i64* %0, align 8, !dbg !15950
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15951
  %call = call zeroext i1 @is_dvbt(%struct.drxk_state* %1) #9, !dbg !15953
  br i1 %call, label %if.then, label %if.else, !dbg !15954

if.then:                                          ; preds = %entry
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15955
  %m_dvbt_rf_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 84, !dbg !15957
  %3 = bitcast %struct.s_cfg_agc* %rf_agc to i8*, !dbg !15957
  %4 = bitcast %struct.s_cfg_agc* %m_dvbt_rf_agc_cfg to i8*, !dbg !15957
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 20, i1 false), !dbg !15957
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15958
  %m_dvbt_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %5, i32 0, i32 85, !dbg !15959
  %6 = bitcast %struct.s_cfg_agc* %if_agc to i8*, !dbg !15959
  %7 = bitcast %struct.s_cfg_agc* %m_dvbt_if_agc_cfg to i8*, !dbg !15959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 8 %7, i64 20, i1 false), !dbg !15959
  br label %if.end4, !dbg !15960

if.else:                                          ; preds = %entry
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15961
  %call1 = call zeroext i1 @is_qam(%struct.drxk_state* %8) #9, !dbg !15963
  br i1 %call1, label %if.then2, label %if.else3, !dbg !15964

if.then2:                                         ; preds = %if.else
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15965
  %m_qam_rf_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %9, i32 0, i32 74, !dbg !15967
  %10 = bitcast %struct.s_cfg_agc* %rf_agc to i8*, !dbg !15967
  %11 = bitcast %struct.s_cfg_agc* %m_qam_rf_agc_cfg to i8*, !dbg !15967
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %10, i8* align 4 %11, i64 20, i1 false), !dbg !15967
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15968
  %m_qam_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 75, !dbg !15969
  %13 = bitcast %struct.s_cfg_agc* %if_agc to i8*, !dbg !15969
  %14 = bitcast %struct.s_cfg_agc* %m_qam_if_agc_cfg to i8*, !dbg !15969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %13, i8* align 8 %14, i64 20, i1 false), !dbg !15969
  br label %if.end, !dbg !15970

if.else3:                                         ; preds = %if.else
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15971
  %m_atv_rf_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %15, i32 0, i32 62, !dbg !15973
  %16 = bitcast %struct.s_cfg_agc* %rf_agc to i8*, !dbg !15973
  %17 = bitcast %struct.s_cfg_agc* %m_atv_rf_agc_cfg to i8*, !dbg !15973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %16, i8* align 8 %17, i64 20, i1 false), !dbg !15973
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15974
  %m_atv_if_agc_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %18, i32 0, i32 63, !dbg !15975
  %19 = bitcast %struct.s_cfg_agc* %if_agc to i8*, !dbg !15975
  %20 = bitcast %struct.s_cfg_agc* %m_atv_if_agc_cfg to i8*, !dbg !15975
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 20, i1 false), !dbg !15975
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  %ctrl_mode = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 0, !dbg !15976
  %21 = load i32, i32* %ctrl_mode, align 4, !dbg !15976
  %cmp = icmp eq i32 %21, 0, !dbg !15978
  br i1 %cmp, label %if.then5, label %if.end66, !dbg !15979

if.then5:                                         ; preds = %if.end4
  %22 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15980
  %call6 = call i32 @read16(%struct.drxk_state* %22, i32 8593221, i16* %scu_lvl) #9, !dbg !15982
  store i32 %call6, i32* %status, align 4, !dbg !15983
  %23 = load i32, i32* %status, align 4, !dbg !15984
  %cmp7 = icmp slt i32 %23, 0, !dbg !15986
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !15987

if.then8:                                         ; preds = %if.then5
  %24 = load i32, i32* %status, align 4, !dbg !15988
  store i32 %24, i32* %retval, align 4, !dbg !15989
  br label %return, !dbg !15989

if.end9:                                          ; preds = %if.then5
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !15990
  %call10 = call i32 @read16(%struct.drxk_state* %25, i32 8593223, i16* %scu_coc) #9, !dbg !15991
  store i32 %call10, i32* %status, align 4, !dbg !15992
  %26 = load i32, i32* %status, align 4, !dbg !15993
  %cmp11 = icmp slt i32 %26, 0, !dbg !15995
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !15996

if.then12:                                        ; preds = %if.end9
  %27 = load i32, i32* %status, align 4, !dbg !15997
  store i32 %27, i32* %retval, align 4, !dbg !15998
  br label %return, !dbg !15998

if.end13:                                         ; preds = %if.end9
  %28 = load i16, i16* %scu_lvl, align 2, !dbg !15999
  %conv = zext i16 %28 to i32, !dbg !16001
  %29 = load i16, i16* %scu_coc, align 2, !dbg !16002
  %conv14 = zext i16 %29 to i32, !dbg !16003
  %add = add i32 %conv, %conv14, !dbg !16004
  %cmp15 = icmp ult i32 %add, 65535, !dbg !16005
  br i1 %cmp15, label %if.then17, label %if.else22, !dbg !16006

if.then17:                                        ; preds = %if.end13
  %30 = load i16, i16* %scu_lvl, align 2, !dbg !16007
  %conv18 = zext i16 %30 to i32, !dbg !16007
  %31 = load i16, i16* %scu_coc, align 2, !dbg !16008
  %conv19 = zext i16 %31 to i32, !dbg !16008
  %add20 = add i32 %conv18, %conv19, !dbg !16009
  %conv21 = trunc i32 %add20 to i16, !dbg !16007
  %output_level = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 1, !dbg !16010
  store i16 %conv21, i16* %output_level, align 4, !dbg !16011
  br label %if.end24, !dbg !16012

if.else22:                                        ; preds = %if.end13
  %output_level23 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 1, !dbg !16013
  store i16 -1, i16* %output_level23, align 4, !dbg !16014
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.then17
  %32 = load i16, i16* %tuner_rf_gain, align 2, !dbg !16015
  %conv25 = zext i16 %32 to i32, !dbg !16015
  %33 = load i32, i32* %total_gain, align 4, !dbg !16016
  %add26 = add i32 %33, %conv25, !dbg !16016
  store i32 %add26, i32* %total_gain, align 4, !dbg !16016
  %output_level27 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 1, !dbg !16017
  %34 = load i16, i16* %output_level27, align 4, !dbg !16017
  %conv28 = zext i16 %34 to i32, !dbg !16019
  %min_output_level = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 2, !dbg !16020
  %35 = load i16, i16* %min_output_level, align 2, !dbg !16020
  %conv29 = zext i16 %35 to i32, !dbg !16021
  %cmp30 = icmp slt i32 %conv28, %conv29, !dbg !16022
  br i1 %cmp30, label %if.then32, label %if.end35, !dbg !16023

if.then32:                                        ; preds = %if.end24
  %min_output_level33 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 2, !dbg !16024
  %36 = load i16, i16* %min_output_level33, align 2, !dbg !16024
  %output_level34 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 1, !dbg !16025
  store i16 %36, i16* %output_level34, align 4, !dbg !16026
  br label %if.end35, !dbg !16027

if.end35:                                         ; preds = %if.then32, %if.end24
  %output_level36 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 1, !dbg !16028
  %37 = load i16, i16* %output_level36, align 4, !dbg !16028
  %conv37 = zext i16 %37 to i32, !dbg !16030
  %max_output_level = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 3, !dbg !16031
  %38 = load i16, i16* %max_output_level, align 4, !dbg !16031
  %conv38 = zext i16 %38 to i32, !dbg !16032
  %cmp39 = icmp sgt i32 %conv37, %conv38, !dbg !16033
  br i1 %cmp39, label %if.then41, label %if.end44, !dbg !16034

if.then41:                                        ; preds = %if.end35
  %max_output_level42 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 3, !dbg !16035
  %39 = load i16, i16* %max_output_level42, align 4, !dbg !16035
  %output_level43 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 1, !dbg !16036
  store i16 %39, i16* %output_level43, align 4, !dbg !16037
  br label %if.end44, !dbg !16038

if.end44:                                         ; preds = %if.then41, %if.end35
  %max_output_level45 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 3, !dbg !16039
  %40 = load i16, i16* %max_output_level45, align 4, !dbg !16039
  %conv46 = zext i16 %40 to i32, !dbg !16040
  %min_output_level47 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 2, !dbg !16041
  %41 = load i16, i16* %min_output_level47, align 2, !dbg !16041
  %conv48 = zext i16 %41 to i32, !dbg !16042
  %sub = sub i32 %conv46, %conv48, !dbg !16043
  store i32 %sub, i32* %agc_range, align 4, !dbg !16044
  %42 = load i32, i32* %agc_range, align 4, !dbg !16045
  %cmp49 = icmp ugt i32 %42, 0, !dbg !16047
  br i1 %cmp49, label %if.then51, label %if.end65, !dbg !16048

if.then51:                                        ; preds = %if.end44
  %43 = load i16, i16* %tuner_rf_gain, align 2, !dbg !16049
  %conv52 = zext i16 %43 to i32, !dbg !16051
  %conv53 = zext i32 %conv52 to i64, !dbg !16052
  %mul = mul i64 100, %conv53, !dbg !16053
  %output_level54 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 1, !dbg !16054
  %44 = load i16, i16* %output_level54, align 4, !dbg !16054
  %conv55 = zext i16 %44 to i32, !dbg !16055
  %min_output_level56 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %rf_agc, i32 0, i32 2, !dbg !16056
  %45 = load i16, i16* %min_output_level56, align 2, !dbg !16056
  %conv57 = zext i16 %45 to i32, !dbg !16057
  %sub58 = sub i32 %conv55, %conv57, !dbg !16058
  %conv59 = zext i32 %sub58 to i64, !dbg !16059
  %mul60 = mul i64 %mul, %conv59, !dbg !16060
  %46 = load i32, i32* %agc_range, align 4, !dbg !16061
  %conv61 = zext i32 %46 to i64, !dbg !16061
  %div = udiv i64 %mul60, %conv61, !dbg !16062
  %47 = load i32, i32* %atten, align 4, !dbg !16063
  %conv62 = zext i32 %47 to i64, !dbg !16063
  %add63 = add i64 %conv62, %div, !dbg !16063
  %conv64 = trunc i64 %add63 to i32, !dbg !16063
  store i32 %conv64, i32* %atten, align 4, !dbg !16063
  br label %if.end65, !dbg !16064

if.end65:                                         ; preds = %if.then51, %if.end44
  br label %if.end66, !dbg !16065

if.end66:                                         ; preds = %if.end65, %if.end4
  %ctrl_mode67 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 0, !dbg !16066
  %48 = load i32, i32* %ctrl_mode67, align 4, !dbg !16066
  %cmp68 = icmp eq i32 %48, 0, !dbg !16068
  br i1 %cmp68, label %if.then70, label %if.end128, !dbg !16069

if.then70:                                        ; preds = %if.end66
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16070
  %output_level71 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 1, !dbg !16072
  %call72 = call i32 @read16(%struct.drxk_state* %49, i32 8593216, i16* %output_level71) #9, !dbg !16073
  store i32 %call72, i32* %status, align 4, !dbg !16074
  %50 = load i32, i32* %status, align 4, !dbg !16075
  %cmp73 = icmp slt i32 %50, 0, !dbg !16077
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !16078

if.then75:                                        ; preds = %if.then70
  %51 = load i32, i32* %status, align 4, !dbg !16079
  store i32 %51, i32* %retval, align 4, !dbg !16080
  br label %return, !dbg !16080

if.end76:                                         ; preds = %if.then70
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16081
  %top = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 5, !dbg !16082
  %call77 = call i32 @read16(%struct.drxk_state* %52, i32 8593214, i16* %top) #9, !dbg !16083
  store i32 %call77, i32* %status, align 4, !dbg !16084
  %53 = load i32, i32* %status, align 4, !dbg !16085
  %cmp78 = icmp slt i32 %53, 0, !dbg !16087
  br i1 %cmp78, label %if.then80, label %if.end81, !dbg !16088

if.then80:                                        ; preds = %if.end76
  %54 = load i32, i32* %status, align 4, !dbg !16089
  store i32 %54, i32* %retval, align 4, !dbg !16090
  br label %return, !dbg !16090

if.end81:                                         ; preds = %if.end76
  %55 = load i16, i16* %tuner_if_gain, align 2, !dbg !16091
  %conv82 = zext i16 %55 to i32, !dbg !16092
  %56 = load i32, i32* %total_gain, align 4, !dbg !16093
  %add83 = add i32 %56, %conv82, !dbg !16093
  store i32 %add83, i32* %total_gain, align 4, !dbg !16093
  %output_level84 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 1, !dbg !16094
  %57 = load i16, i16* %output_level84, align 4, !dbg !16094
  %conv85 = zext i16 %57 to i32, !dbg !16096
  %min_output_level86 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 2, !dbg !16097
  %58 = load i16, i16* %min_output_level86, align 2, !dbg !16097
  %conv87 = zext i16 %58 to i32, !dbg !16098
  %cmp88 = icmp slt i32 %conv85, %conv87, !dbg !16099
  br i1 %cmp88, label %if.then90, label %if.end93, !dbg !16100

if.then90:                                        ; preds = %if.end81
  %min_output_level91 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 2, !dbg !16101
  %59 = load i16, i16* %min_output_level91, align 2, !dbg !16101
  %output_level92 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 1, !dbg !16102
  store i16 %59, i16* %output_level92, align 4, !dbg !16103
  br label %if.end93, !dbg !16104

if.end93:                                         ; preds = %if.then90, %if.end81
  %output_level94 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 1, !dbg !16105
  %60 = load i16, i16* %output_level94, align 4, !dbg !16105
  %conv95 = zext i16 %60 to i32, !dbg !16107
  %max_output_level96 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 3, !dbg !16108
  %61 = load i16, i16* %max_output_level96, align 4, !dbg !16108
  %conv97 = zext i16 %61 to i32, !dbg !16109
  %cmp98 = icmp sgt i32 %conv95, %conv97, !dbg !16110
  br i1 %cmp98, label %if.then100, label %if.end103, !dbg !16111

if.then100:                                       ; preds = %if.end93
  %max_output_level101 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 3, !dbg !16112
  %62 = load i16, i16* %max_output_level101, align 4, !dbg !16112
  %output_level102 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 1, !dbg !16113
  store i16 %62, i16* %output_level102, align 4, !dbg !16114
  br label %if.end103, !dbg !16115

if.end103:                                        ; preds = %if.then100, %if.end93
  %max_output_level104 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 3, !dbg !16116
  %63 = load i16, i16* %max_output_level104, align 4, !dbg !16116
  %conv105 = zext i16 %63 to i32, !dbg !16117
  %min_output_level106 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 2, !dbg !16118
  %64 = load i16, i16* %min_output_level106, align 2, !dbg !16118
  %conv107 = zext i16 %64 to i32, !dbg !16119
  %sub108 = sub i32 %conv105, %conv107, !dbg !16120
  store i32 %sub108, i32* %agc_range, align 4, !dbg !16121
  %65 = load i32, i32* %agc_range, align 4, !dbg !16122
  %cmp109 = icmp ugt i32 %65, 0, !dbg !16124
  br i1 %cmp109, label %if.then111, label %if.end127, !dbg !16125

if.then111:                                       ; preds = %if.end103
  %66 = load i16, i16* %tuner_if_gain, align 2, !dbg !16126
  %conv112 = zext i16 %66 to i32, !dbg !16128
  %conv113 = zext i32 %conv112 to i64, !dbg !16129
  %mul114 = mul i64 100, %conv113, !dbg !16130
  %output_level115 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 1, !dbg !16131
  %67 = load i16, i16* %output_level115, align 4, !dbg !16131
  %conv116 = zext i16 %67 to i32, !dbg !16132
  %min_output_level117 = getelementptr inbounds %struct.s_cfg_agc, %struct.s_cfg_agc* %if_agc, i32 0, i32 2, !dbg !16133
  %68 = load i16, i16* %min_output_level117, align 2, !dbg !16133
  %conv118 = zext i16 %68 to i32, !dbg !16134
  %sub119 = sub i32 %conv116, %conv118, !dbg !16135
  %conv120 = zext i32 %sub119 to i64, !dbg !16136
  %mul121 = mul i64 %mul114, %conv120, !dbg !16137
  %69 = load i32, i32* %agc_range, align 4, !dbg !16138
  %conv122 = zext i32 %69 to i64, !dbg !16138
  %div123 = udiv i64 %mul121, %conv122, !dbg !16139
  %70 = load i32, i32* %atten, align 4, !dbg !16140
  %conv124 = zext i32 %70 to i64, !dbg !16140
  %add125 = add i64 %conv124, %div123, !dbg !16140
  %conv126 = trunc i64 %add125 to i32, !dbg !16140
  store i32 %conv126, i32* %atten, align 4, !dbg !16140
  br label %if.end127, !dbg !16141

if.end127:                                        ; preds = %if.then111, %if.end103
  br label %if.end128, !dbg !16142

if.end128:                                        ; preds = %if.end127, %if.end66
  %71 = load i32, i32* %total_gain, align 4, !dbg !16143
  %cmp129 = icmp ugt i32 %71, 0, !dbg !16145
  br i1 %cmp129, label %if.then131, label %if.else137, !dbg !16146

if.then131:                                       ; preds = %if.end128
  %72 = load i32, i32* %atten, align 4, !dbg !16147
  %conv132 = zext i32 %72 to i64, !dbg !16147
  %mul133 = mul i64 65535, %conv132, !dbg !16148
  %73 = load i32, i32* %total_gain, align 4, !dbg !16149
  %conv134 = zext i32 %73 to i64, !dbg !16149
  %div135 = udiv i64 %mul133, %conv134, !dbg !16150
  %div136 = udiv i64 %div135, 100, !dbg !16151
  %74 = load i64*, i64** %strength.addr, align 8, !dbg !16152
  store i64 %div136, i64* %74, align 8, !dbg !16153
  br label %if.end138, !dbg !16154

if.else137:                                       ; preds = %if.end128
  %75 = load i64*, i64** %strength.addr, align 8, !dbg !16155
  store i64 65535, i64* %75, align 8, !dbg !16156
  br label %if.end138

if.end138:                                        ; preds = %if.else137, %if.then131
  store i32 0, i32* %retval, align 4, !dbg !16157
  br label %return, !dbg !16157

return:                                           ; preds = %if.end138, %if.then80, %if.then75, %if.then12, %if.then8
  %76 = load i32, i32* %retval, align 4, !dbg !16158
  ret i32 %76, !dbg !16158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_signal_to_noise(%struct.drxk_state* %state, i32* %p_signal_to_noise) #0 !dbg !16159 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %p_signal_to_noise.addr = alloca i32*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !16162, metadata !DIExpression()), !dbg !16163
  store i32* %p_signal_to_noise, i32** %p_signal_to_noise.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_signal_to_noise.addr, metadata !16164, metadata !DIExpression()), !dbg !16165
  br label %do.body, !dbg !16166

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !16167
  %cmp = icmp uge i32 %0, 1, !dbg !16167
  br i1 %cmp, label %if.then, label %if.end, !dbg !16170

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.get_signal_to_noise, i64 0, i64 0)) #8, !dbg !16167
  br label %if.end, !dbg !16167

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !16170

do.end:                                           ; preds = %if.end
  %1 = load i32*, i32** %p_signal_to_noise.addr, align 8, !dbg !16171
  store i32 0, i32* %1, align 4, !dbg !16172
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16173
  %m_operation_mode = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 28, !dbg !16174
  %3 = load i32, i32* %m_operation_mode, align 8, !dbg !16174
  switch i32 %3, label %sw.default [
    i32 4, label %sw.bb
    i32 1, label %sw.bb2
    i32 3, label %sw.bb2
  ], !dbg !16175

sw.bb:                                            ; preds = %do.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16176
  %5 = load i32*, i32** %p_signal_to_noise.addr, align 8, !dbg !16178
  %call1 = call i32 @get_dvbt_signal_to_noise(%struct.drxk_state* %4, i32* %5) #9, !dbg !16179
  store i32 %call1, i32* %retval, align 4, !dbg !16180
  br label %return, !dbg !16180

sw.bb2:                                           ; preds = %do.end, %do.end
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16181
  %7 = load i32*, i32** %p_signal_to_noise.addr, align 8, !dbg !16182
  %call3 = call i32 @get_qam_signal_to_noise(%struct.drxk_state* %6, i32* %7) #9, !dbg !16183
  store i32 %call3, i32* %retval, align 4, !dbg !16184
  br label %return, !dbg !16184

sw.default:                                       ; preds = %do.end
  br label %sw.epilog, !dbg !16185

sw.epilog:                                        ; preds = %sw.default
  store i32 0, i32* %retval, align 4, !dbg !16186
  br label %return, !dbg !16186

return:                                           ; preds = %sw.epilog, %sw.bb2, %sw.bb
  %8 = load i32, i32* %retval, align 4, !dbg !16187
  ret i32 %8, !dbg !16187
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_qam_lock_status(%struct.drxk_state* %state, i32* %p_lock_status) #0 !dbg !16188 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %p_lock_status.addr = alloca i32*, align 8
  %status = alloca i32, align 4
  %result = alloca [2 x i16], align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !16189, metadata !DIExpression()), !dbg !16190
  store i32* %p_lock_status, i32** %p_lock_status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_lock_status.addr, metadata !16191, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16193, metadata !DIExpression()), !dbg !16194
  call void @llvm.dbg.declare(metadata [2 x i16]* %result, metadata !16195, metadata !DIExpression()), !dbg !16197
  %0 = bitcast [2 x i16]* %result to i8*, !dbg !16197
  call void @llvm.memset.p0i8.i64(i8* align 2 %0, i8 0, i64 4, i1 false), !dbg !16197
  br label %do.body, !dbg !16198

do.body:                                          ; preds = %entry
  %1 = load i32, i32* @debug, align 4, !dbg !16199
  %cmp = icmp uge i32 %1, 1, !dbg !16199
  br i1 %cmp, label %if.then, label %if.end, !dbg !16202

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.get_qam_lock_status, i64 0, i64 0)) #8, !dbg !16199
  br label %if.end, !dbg !16199

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !16202

do.end:                                           ; preds = %if.end
  %2 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !16203
  store i32 1, i32* %2, align 4, !dbg !16204
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16205
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %result, i64 0, i64 0, !dbg !16206
  %call1 = call i32 @scu_command(%struct.drxk_state* %3, i16 zeroext 517, i8 zeroext 0, i16* null, i8 zeroext 2, i16* %arraydecay) #9, !dbg !16207
  store i32 %call1, i32* %status, align 4, !dbg !16208
  %4 = load i32, i32* %status, align 4, !dbg !16209
  %cmp2 = icmp slt i32 %4, 0, !dbg !16211
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !16212

if.then3:                                         ; preds = %do.end
  %5 = load i32, i32* %status, align 4, !dbg !16213
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.get_qam_lock_status, i64 0, i64 0)) #8, !dbg !16213
  br label %if.end5, !dbg !16213

if.end5:                                          ; preds = %if.then3, %do.end
  %arrayidx = getelementptr [2 x i16], [2 x i16]* %result, i64 0, i64 1, !dbg !16214
  %6 = load i16, i16* %arrayidx, align 2, !dbg !16214
  %conv = zext i16 %6 to i32, !dbg !16214
  %cmp6 = icmp slt i32 %conv, 16384, !dbg !16216
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !16217

if.then8:                                         ; preds = %if.end5
  br label %if.end23, !dbg !16218

if.else:                                          ; preds = %if.end5
  %arrayidx9 = getelementptr [2 x i16], [2 x i16]* %result, i64 0, i64 1, !dbg !16220
  %7 = load i16, i16* %arrayidx9, align 2, !dbg !16220
  %conv10 = zext i16 %7 to i32, !dbg !16220
  %cmp11 = icmp slt i32 %conv10, 32768, !dbg !16222
  br i1 %cmp11, label %if.then13, label %if.else14, !dbg !16223

if.then13:                                        ; preds = %if.else
  %8 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !16224
  store i32 2, i32* %8, align 4, !dbg !16226
  br label %if.end22, !dbg !16227

if.else14:                                        ; preds = %if.else
  %arrayidx15 = getelementptr [2 x i16], [2 x i16]* %result, i64 0, i64 1, !dbg !16228
  %9 = load i16, i16* %arrayidx15, align 2, !dbg !16228
  %conv16 = zext i16 %9 to i32, !dbg !16228
  %cmp17 = icmp slt i32 %conv16, 49152, !dbg !16230
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !16231

if.then19:                                        ; preds = %if.else14
  %10 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !16232
  store i32 4, i32* %10, align 4, !dbg !16234
  br label %if.end21, !dbg !16235

if.else20:                                        ; preds = %if.else14
  %11 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !16236
  store i32 0, i32* %11, align 4, !dbg !16238
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.then19
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then13
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then8
  %12 = load i32, i32* %status, align 4, !dbg !16239
  ret i32 %12, !dbg !16240
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_dvbt_lock_status(%struct.drxk_state* %state, i32* %p_lock_status) #0 !dbg !16241 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %p_lock_status.addr = alloca i32*, align 8
  %status = alloca i32, align 4
  %mpeg_lock_mask = alloca i16, align 2
  %fec_lock_mask = alloca i16, align 2
  %demod_lock_mask = alloca i16, align 2
  %sc_ra_ram_lock = alloca i16, align 2
  %sc_comm_exec = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !16242, metadata !DIExpression()), !dbg !16243
  store i32* %p_lock_status, i32** %p_lock_status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_lock_status.addr, metadata !16244, metadata !DIExpression()), !dbg !16245
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16246, metadata !DIExpression()), !dbg !16247
  call void @llvm.dbg.declare(metadata i16* %mpeg_lock_mask, metadata !16248, metadata !DIExpression()), !dbg !16249
  store i16 6, i16* %mpeg_lock_mask, align 2, !dbg !16249
  call void @llvm.dbg.declare(metadata i16* %fec_lock_mask, metadata !16250, metadata !DIExpression()), !dbg !16251
  store i16 2, i16* %fec_lock_mask, align 2, !dbg !16251
  call void @llvm.dbg.declare(metadata i16* %demod_lock_mask, metadata !16252, metadata !DIExpression()), !dbg !16253
  store i16 1, i16* %demod_lock_mask, align 2, !dbg !16253
  call void @llvm.dbg.declare(metadata i16* %sc_ra_ram_lock, metadata !16254, metadata !DIExpression()), !dbg !16255
  store i16 0, i16* %sc_ra_ram_lock, align 2, !dbg !16255
  call void @llvm.dbg.declare(metadata i16* %sc_comm_exec, metadata !16256, metadata !DIExpression()), !dbg !16257
  store i16 0, i16* %sc_comm_exec, align 2, !dbg !16257
  br label %do.body, !dbg !16258

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !16259
  %cmp = icmp uge i32 %0, 1, !dbg !16259
  br i1 %cmp, label %if.then, label %if.end, !dbg !16262

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.get_dvbt_lock_status, i64 0, i64 0)) #8, !dbg !16259
  br label %if.end, !dbg !16259

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !16262

do.end:                                           ; preds = %if.end
  %1 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !16263
  store i32 1, i32* %1, align 4, !dbg !16264
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16265
  %call1 = call i32 @read16(%struct.drxk_state* %2, i32 62914560, i16* %sc_comm_exec) #9, !dbg !16266
  store i32 %call1, i32* %status, align 4, !dbg !16267
  %3 = load i32, i32* %status, align 4, !dbg !16268
  %cmp2 = icmp slt i32 %3, 0, !dbg !16270
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !16271

if.then3:                                         ; preds = %do.end
  br label %end, !dbg !16272

if.end4:                                          ; preds = %do.end
  %4 = load i16, i16* %sc_comm_exec, align 2, !dbg !16273
  %conv = zext i16 %4 to i32, !dbg !16273
  %cmp5 = icmp eq i32 %conv, 0, !dbg !16275
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !16276

if.then7:                                         ; preds = %if.end4
  br label %end, !dbg !16277

if.end8:                                          ; preds = %if.end4
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16278
  %call9 = call i32 @read16(%struct.drxk_state* %5, i32 63045707, i16* %sc_ra_ram_lock) #9, !dbg !16279
  store i32 %call9, i32* %status, align 4, !dbg !16280
  %6 = load i32, i32* %status, align 4, !dbg !16281
  %cmp10 = icmp slt i32 %6, 0, !dbg !16283
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !16284

if.then12:                                        ; preds = %if.end8
  br label %end, !dbg !16285

if.end13:                                         ; preds = %if.end8
  %7 = load i16, i16* %sc_ra_ram_lock, align 2, !dbg !16286
  %conv14 = zext i16 %7 to i32, !dbg !16286
  %and = and i32 %conv14, 6, !dbg !16288
  %cmp15 = icmp eq i32 %and, 6, !dbg !16289
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !16290

if.then17:                                        ; preds = %if.end13
  %8 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !16291
  store i32 4, i32* %8, align 4, !dbg !16292
  br label %if.end36, !dbg !16293

if.else:                                          ; preds = %if.end13
  %9 = load i16, i16* %sc_ra_ram_lock, align 2, !dbg !16294
  %conv18 = zext i16 %9 to i32, !dbg !16294
  %and19 = and i32 %conv18, 2, !dbg !16296
  %cmp20 = icmp eq i32 %and19, 2, !dbg !16297
  br i1 %cmp20, label %if.then22, label %if.else23, !dbg !16298

if.then22:                                        ; preds = %if.else
  %10 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !16299
  store i32 3, i32* %10, align 4, !dbg !16300
  br label %if.end35, !dbg !16301

if.else23:                                        ; preds = %if.else
  %11 = load i16, i16* %sc_ra_ram_lock, align 2, !dbg !16302
  %conv24 = zext i16 %11 to i32, !dbg !16302
  %and25 = and i32 %conv24, 1, !dbg !16304
  %cmp26 = icmp eq i32 %and25, 1, !dbg !16305
  br i1 %cmp26, label %if.then28, label %if.else29, !dbg !16306

if.then28:                                        ; preds = %if.else23
  %12 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !16307
  store i32 2, i32* %12, align 4, !dbg !16308
  br label %if.end34, !dbg !16309

if.else29:                                        ; preds = %if.else23
  %13 = load i16, i16* %sc_ra_ram_lock, align 2, !dbg !16310
  %conv30 = zext i16 %13 to i32, !dbg !16310
  %and31 = and i32 %conv30, 8, !dbg !16312
  %tobool = icmp ne i32 %and31, 0, !dbg !16312
  br i1 %tobool, label %if.then32, label %if.end33, !dbg !16313

if.then32:                                        ; preds = %if.else29
  %14 = load i32*, i32** %p_lock_status.addr, align 8, !dbg !16314
  store i32 0, i32* %14, align 4, !dbg !16315
  br label %if.end33, !dbg !16316

if.end33:                                         ; preds = %if.then32, %if.else29
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then28
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then22
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then17
  br label %end, !dbg !16317

end:                                              ; preds = %if.end36, %if.then12, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !16318), !dbg !16319
  %15 = load i32, i32* %status, align 4, !dbg !16320
  %cmp37 = icmp slt i32 %15, 0, !dbg !16322
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !16323

if.then39:                                        ; preds = %end
  %16 = load i32, i32* %status, align 4, !dbg !16324
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %16, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.get_dvbt_lock_status, i64 0, i64 0)) #8, !dbg !16324
  br label %if.end41, !dbg !16324

if.end41:                                         ; preds = %if.then39, %end
  %17 = load i32, i32* %status, align 4, !dbg !16325
  ret i32 %17, !dbg !16326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_dvbt_signal_to_noise(%struct.drxk_state* %state, i32* %p_signal_to_noise) #0 !dbg !16327 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %p_signal_to_noise.addr = alloca i32*, align 8
  %status = alloca i32, align 4
  %reg_data = alloca i16, align 2
  %eq_reg_td_sqr_err_i = alloca i32, align 4
  %eq_reg_td_sqr_err_q = alloca i32, align 4
  %eq_reg_td_sqr_err_exp = alloca i16, align 2
  %eq_reg_td_tps_pwr_ofs = alloca i16, align 2
  %eq_reg_td_req_smb_cnt = alloca i16, align 2
  %tps_cnt = alloca i32, align 4
  %sqr_err_iq = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %i_mer = alloca i32, align 4
  %transmission_params = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !16328, metadata !DIExpression()), !dbg !16329
  store i32* %p_signal_to_noise, i32** %p_signal_to_noise.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_signal_to_noise.addr, metadata !16330, metadata !DIExpression()), !dbg !16331
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16332, metadata !DIExpression()), !dbg !16333
  call void @llvm.dbg.declare(metadata i16* %reg_data, metadata !16334, metadata !DIExpression()), !dbg !16335
  store i16 0, i16* %reg_data, align 2, !dbg !16335
  call void @llvm.dbg.declare(metadata i32* %eq_reg_td_sqr_err_i, metadata !16336, metadata !DIExpression()), !dbg !16337
  store i32 0, i32* %eq_reg_td_sqr_err_i, align 4, !dbg !16337
  call void @llvm.dbg.declare(metadata i32* %eq_reg_td_sqr_err_q, metadata !16338, metadata !DIExpression()), !dbg !16339
  store i32 0, i32* %eq_reg_td_sqr_err_q, align 4, !dbg !16339
  call void @llvm.dbg.declare(metadata i16* %eq_reg_td_sqr_err_exp, metadata !16340, metadata !DIExpression()), !dbg !16341
  store i16 0, i16* %eq_reg_td_sqr_err_exp, align 2, !dbg !16341
  call void @llvm.dbg.declare(metadata i16* %eq_reg_td_tps_pwr_ofs, metadata !16342, metadata !DIExpression()), !dbg !16343
  store i16 0, i16* %eq_reg_td_tps_pwr_ofs, align 2, !dbg !16343
  call void @llvm.dbg.declare(metadata i16* %eq_reg_td_req_smb_cnt, metadata !16344, metadata !DIExpression()), !dbg !16345
  store i16 0, i16* %eq_reg_td_req_smb_cnt, align 2, !dbg !16345
  call void @llvm.dbg.declare(metadata i32* %tps_cnt, metadata !16346, metadata !DIExpression()), !dbg !16347
  store i32 0, i32* %tps_cnt, align 4, !dbg !16347
  call void @llvm.dbg.declare(metadata i32* %sqr_err_iq, metadata !16348, metadata !DIExpression()), !dbg !16349
  store i32 0, i32* %sqr_err_iq, align 4, !dbg !16349
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16350, metadata !DIExpression()), !dbg !16351
  store i32 0, i32* %a, align 4, !dbg !16351
  call void @llvm.dbg.declare(metadata i32* %b, metadata !16352, metadata !DIExpression()), !dbg !16353
  store i32 0, i32* %b, align 4, !dbg !16353
  call void @llvm.dbg.declare(metadata i32* %c, metadata !16354, metadata !DIExpression()), !dbg !16355
  store i32 0, i32* %c, align 4, !dbg !16355
  call void @llvm.dbg.declare(metadata i32* %i_mer, metadata !16356, metadata !DIExpression()), !dbg !16357
  store i32 0, i32* %i_mer, align 4, !dbg !16357
  call void @llvm.dbg.declare(metadata i16* %transmission_params, metadata !16358, metadata !DIExpression()), !dbg !16359
  store i16 0, i16* %transmission_params, align 2, !dbg !16359
  br label %do.body, !dbg !16360

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !16361
  %cmp = icmp uge i32 %0, 1, !dbg !16361
  br i1 %cmp, label %if.then, label %if.end, !dbg !16364

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.get_dvbt_signal_to_noise, i64 0, i64 0)) #8, !dbg !16361
  br label %if.end, !dbg !16361

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !16364

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16365
  %call1 = call i32 @read16(%struct.drxk_state* %1, i32 50397282, i16* %eq_reg_td_tps_pwr_ofs) #9, !dbg !16366
  store i32 %call1, i32* %status, align 4, !dbg !16367
  %2 = load i32, i32* %status, align 4, !dbg !16368
  %cmp2 = icmp slt i32 %2, 0, !dbg !16370
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !16371

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !16372

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16373
  %call5 = call i32 @read16(%struct.drxk_state* %3, i32 50397281, i16* %eq_reg_td_req_smb_cnt) #9, !dbg !16374
  store i32 %call5, i32* %status, align 4, !dbg !16375
  %4 = load i32, i32* %status, align 4, !dbg !16376
  %cmp6 = icmp slt i32 %4, 0, !dbg !16378
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !16379

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !16380

if.end8:                                          ; preds = %if.end4
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16381
  %call9 = call i32 @read16(%struct.drxk_state* %5, i32 50397280, i16* %eq_reg_td_sqr_err_exp) #9, !dbg !16382
  store i32 %call9, i32* %status, align 4, !dbg !16383
  %6 = load i32, i32* %status, align 4, !dbg !16384
  %cmp10 = icmp slt i32 %6, 0, !dbg !16386
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !16387

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !16388

if.end12:                                         ; preds = %if.end8
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16389
  %call13 = call i32 @read16(%struct.drxk_state* %7, i32 50397278, i16* %reg_data) #9, !dbg !16390
  store i32 %call13, i32* %status, align 4, !dbg !16391
  %8 = load i32, i32* %status, align 4, !dbg !16392
  %cmp14 = icmp slt i32 %8, 0, !dbg !16394
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !16395

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !16396

if.end16:                                         ; preds = %if.end12
  %9 = load i16, i16* %reg_data, align 2, !dbg !16397
  %conv = zext i16 %9 to i32, !dbg !16398
  store i32 %conv, i32* %eq_reg_td_sqr_err_i, align 4, !dbg !16399
  %10 = load i16, i16* %eq_reg_td_sqr_err_exp, align 2, !dbg !16400
  %conv17 = zext i16 %10 to i32, !dbg !16400
  %cmp18 = icmp sgt i32 %conv17, 11, !dbg !16402
  br i1 %cmp18, label %land.lhs.true, label %if.end26, !dbg !16403

land.lhs.true:                                    ; preds = %if.end16
  %11 = load i32, i32* %eq_reg_td_sqr_err_i, align 4, !dbg !16404
  %conv20 = zext i32 %11 to i64, !dbg !16404
  %cmp21 = icmp ult i64 %conv20, 4095, !dbg !16405
  br i1 %cmp21, label %if.then23, label %if.end26, !dbg !16406

if.then23:                                        ; preds = %land.lhs.true
  %12 = load i32, i32* %eq_reg_td_sqr_err_i, align 4, !dbg !16407
  %conv24 = zext i32 %12 to i64, !dbg !16407
  %add = add i64 %conv24, 65536, !dbg !16407
  %conv25 = trunc i64 %add to i32, !dbg !16407
  store i32 %conv25, i32* %eq_reg_td_sqr_err_i, align 4, !dbg !16407
  br label %if.end26, !dbg !16409

if.end26:                                         ; preds = %if.then23, %land.lhs.true, %if.end16
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16410
  %call27 = call i32 @read16(%struct.drxk_state* %13, i32 50397279, i16* %reg_data) #9, !dbg !16411
  store i32 %call27, i32* %status, align 4, !dbg !16412
  %14 = load i32, i32* %status, align 4, !dbg !16413
  %cmp28 = icmp slt i32 %14, 0, !dbg !16415
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !16416

if.then30:                                        ; preds = %if.end26
  br label %error, !dbg !16417

if.end31:                                         ; preds = %if.end26
  %15 = load i16, i16* %reg_data, align 2, !dbg !16418
  %conv32 = zext i16 %15 to i32, !dbg !16419
  store i32 %conv32, i32* %eq_reg_td_sqr_err_q, align 4, !dbg !16420
  %16 = load i16, i16* %eq_reg_td_sqr_err_exp, align 2, !dbg !16421
  %conv33 = zext i16 %16 to i32, !dbg !16421
  %cmp34 = icmp sgt i32 %conv33, 11, !dbg !16423
  br i1 %cmp34, label %land.lhs.true36, label %if.end44, !dbg !16424

land.lhs.true36:                                  ; preds = %if.end31
  %17 = load i32, i32* %eq_reg_td_sqr_err_q, align 4, !dbg !16425
  %conv37 = zext i32 %17 to i64, !dbg !16425
  %cmp38 = icmp ult i64 %conv37, 4095, !dbg !16426
  br i1 %cmp38, label %if.then40, label %if.end44, !dbg !16427

if.then40:                                        ; preds = %land.lhs.true36
  %18 = load i32, i32* %eq_reg_td_sqr_err_q, align 4, !dbg !16428
  %conv41 = zext i32 %18 to i64, !dbg !16428
  %add42 = add i64 %conv41, 65536, !dbg !16428
  %conv43 = trunc i64 %add42 to i32, !dbg !16428
  store i32 %conv43, i32* %eq_reg_td_sqr_err_q, align 4, !dbg !16428
  br label %if.end44, !dbg !16429

if.end44:                                         ; preds = %if.then40, %land.lhs.true36, %if.end31
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16430
  %call45 = call i32 @read16(%struct.drxk_state* %19, i32 63045704, i16* %transmission_params) #9, !dbg !16431
  store i32 %call45, i32* %status, align 4, !dbg !16432
  %20 = load i32, i32* %status, align 4, !dbg !16433
  %cmp46 = icmp slt i32 %20, 0, !dbg !16435
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !16436

if.then48:                                        ; preds = %if.end44
  br label %error, !dbg !16437

if.end49:                                         ; preds = %if.end44
  %21 = load i16, i16* %eq_reg_td_tps_pwr_ofs, align 2, !dbg !16438
  %conv50 = zext i16 %21 to i32, !dbg !16438
  %cmp51 = icmp eq i32 %conv50, 0, !dbg !16440
  br i1 %cmp51, label %if.then56, label %lor.lhs.false, !dbg !16441

lor.lhs.false:                                    ; preds = %if.end49
  %22 = load i16, i16* %eq_reg_td_req_smb_cnt, align 2, !dbg !16442
  %conv53 = zext i16 %22 to i32, !dbg !16442
  %cmp54 = icmp eq i32 %conv53, 0, !dbg !16443
  br i1 %cmp54, label %if.then56, label %if.else, !dbg !16444

if.then56:                                        ; preds = %lor.lhs.false, %if.end49
  store i32 0, i32* %i_mer, align 4, !dbg !16445
  br label %if.end79, !dbg !16446

if.else:                                          ; preds = %lor.lhs.false
  %23 = load i32, i32* %eq_reg_td_sqr_err_i, align 4, !dbg !16447
  %24 = load i32, i32* %eq_reg_td_sqr_err_q, align 4, !dbg !16449
  %add57 = add i32 %23, %24, !dbg !16450
  %cmp58 = icmp eq i32 %add57, 0, !dbg !16451
  br i1 %cmp58, label %if.then60, label %if.else61, !dbg !16452

if.then60:                                        ; preds = %if.else
  store i32 0, i32* %i_mer, align 4, !dbg !16453
  br label %if.end78, !dbg !16455

if.else61:                                        ; preds = %if.else
  %25 = load i32, i32* %eq_reg_td_sqr_err_i, align 4, !dbg !16456
  %26 = load i32, i32* %eq_reg_td_sqr_err_q, align 4, !dbg !16458
  %add62 = add i32 %25, %26, !dbg !16459
  %27 = load i16, i16* %eq_reg_td_sqr_err_exp, align 2, !dbg !16460
  %conv63 = zext i16 %27 to i32, !dbg !16460
  %shl = shl i32 %add62, %conv63, !dbg !16461
  store i32 %shl, i32* %sqr_err_iq, align 4, !dbg !16462
  %28 = load i16, i16* %transmission_params, align 2, !dbg !16463
  %conv64 = zext i16 %28 to i32, !dbg !16463
  %and = and i32 %conv64, 3, !dbg !16465
  %cmp65 = icmp eq i32 %and, 0, !dbg !16466
  br i1 %cmp65, label %if.then67, label %if.else68, !dbg !16467

if.then67:                                        ; preds = %if.else61
  store i32 17, i32* %tps_cnt, align 4, !dbg !16468
  br label %if.end69, !dbg !16469

if.else68:                                        ; preds = %if.else61
  store i32 68, i32* %tps_cnt, align 4, !dbg !16470
  br label %if.end69

if.end69:                                         ; preds = %if.else68, %if.then67
  %29 = load i16, i16* %eq_reg_td_tps_pwr_ofs, align 2, !dbg !16471
  %conv70 = zext i16 %29 to i32, !dbg !16471
  %30 = load i16, i16* %eq_reg_td_tps_pwr_ofs, align 2, !dbg !16472
  %conv71 = zext i16 %30 to i32, !dbg !16472
  %mul = mul i32 %conv70, %conv71, !dbg !16473
  %call72 = call i32 @log10times100(i32 %mul) #9, !dbg !16474
  store i32 %call72, i32* %a, align 4, !dbg !16475
  %31 = load i16, i16* %eq_reg_td_req_smb_cnt, align 2, !dbg !16476
  %conv73 = zext i16 %31 to i32, !dbg !16476
  %32 = load i32, i32* %tps_cnt, align 4, !dbg !16477
  %mul74 = mul i32 %conv73, %32, !dbg !16478
  %call75 = call i32 @log10times100(i32 %mul74) #9, !dbg !16479
  store i32 %call75, i32* %b, align 4, !dbg !16480
  %33 = load i32, i32* %sqr_err_iq, align 4, !dbg !16481
  %call76 = call i32 @log10times100(i32 %33) #9, !dbg !16482
  store i32 %call76, i32* %c, align 4, !dbg !16483
  %34 = load i32, i32* %a, align 4, !dbg !16484
  %35 = load i32, i32* %b, align 4, !dbg !16485
  %add77 = add i32 %34, %35, !dbg !16486
  %36 = load i32, i32* %c, align 4, !dbg !16487
  %sub = sub i32 %add77, %36, !dbg !16488
  store i32 %sub, i32* %i_mer, align 4, !dbg !16489
  br label %if.end78

if.end78:                                         ; preds = %if.end69, %if.then60
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then56
  %37 = load i32, i32* %i_mer, align 4, !dbg !16490
  %38 = load i32*, i32** %p_signal_to_noise.addr, align 8, !dbg !16491
  store i32 %37, i32* %38, align 4, !dbg !16492
  br label %error, !dbg !16493

error:                                            ; preds = %if.end79, %if.then48, %if.then30, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !16494), !dbg !16495
  %39 = load i32, i32* %status, align 4, !dbg !16496
  %cmp80 = icmp slt i32 %39, 0, !dbg !16498
  br i1 %cmp80, label %if.then82, label %if.end84, !dbg !16499

if.then82:                                        ; preds = %error
  %40 = load i32, i32* %status, align 4, !dbg !16500
  %call83 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %40, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.get_dvbt_signal_to_noise, i64 0, i64 0)) #8, !dbg !16500
  br label %if.end84, !dbg !16500

if.end84:                                         ; preds = %if.then82, %error
  %41 = load i32, i32* %status, align 4, !dbg !16501
  ret i32 %41, !dbg !16502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_qam_signal_to_noise(%struct.drxk_state* %state, i32* %p_signal_to_noise) #0 !dbg !16503 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %p_signal_to_noise.addr = alloca i32*, align 8
  %status = alloca i32, align 4
  %qam_sl_err_power = alloca i16, align 2
  %qam_sl_sig_power = alloca i32, align 4
  %qam_sl_mer = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !16504, metadata !DIExpression()), !dbg !16505
  store i32* %p_signal_to_noise, i32** %p_signal_to_noise.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %p_signal_to_noise.addr, metadata !16506, metadata !DIExpression()), !dbg !16507
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16508, metadata !DIExpression()), !dbg !16509
  store i32 0, i32* %status, align 4, !dbg !16509
  call void @llvm.dbg.declare(metadata i16* %qam_sl_err_power, metadata !16510, metadata !DIExpression()), !dbg !16511
  store i16 0, i16* %qam_sl_err_power, align 2, !dbg !16511
  call void @llvm.dbg.declare(metadata i32* %qam_sl_sig_power, metadata !16512, metadata !DIExpression()), !dbg !16513
  store i32 0, i32* %qam_sl_sig_power, align 4, !dbg !16513
  call void @llvm.dbg.declare(metadata i32* %qam_sl_mer, metadata !16514, metadata !DIExpression()), !dbg !16515
  store i32 0, i32* %qam_sl_mer, align 4, !dbg !16515
  br label %do.body, !dbg !16516

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !16517
  %cmp = icmp uge i32 %0, 1, !dbg !16517
  br i1 %cmp, label %if.then, label %if.end, !dbg !16520

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.get_qam_signal_to_noise, i64 0, i64 0)) #8, !dbg !16517
  br label %if.end, !dbg !16517

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !16520

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16521
  %call1 = call i32 @read16(%struct.drxk_state* %1, i32 21168151, i16* %qam_sl_err_power) #9, !dbg !16522
  store i32 %call1, i32* %status, align 4, !dbg !16523
  %2 = load i32, i32* %status, align 4, !dbg !16524
  %cmp2 = icmp slt i32 %2, 0, !dbg !16526
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !16527

if.then3:                                         ; preds = %do.end
  %3 = load i32, i32* %status, align 4, !dbg !16528
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %3, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.get_qam_signal_to_noise, i64 0, i64 0)) #8, !dbg !16528
  store i32 -22, i32* %retval, align 4, !dbg !16530
  br label %return, !dbg !16530

if.end5:                                          ; preds = %do.end
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16531
  %props = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 1, !dbg !16532
  %modulation = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %props, i32 0, i32 1, !dbg !16533
  %5 = load i32, i32* %modulation, align 4, !dbg !16533
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb6
    i32 3, label %sw.bb7
    i32 4, label %sw.bb8
    i32 5, label %sw.bb9
  ], !dbg !16534

sw.bb:                                            ; preds = %if.end5
  store i32 163840, i32* %qam_sl_sig_power, align 4, !dbg !16535
  br label %sw.epilog, !dbg !16537

sw.bb6:                                           ; preds = %if.end5
  store i32 81920, i32* %qam_sl_sig_power, align 4, !dbg !16538
  br label %sw.epilog, !dbg !16539

sw.bb7:                                           ; preds = %if.end5
  store i32 172032, i32* %qam_sl_sig_power, align 4, !dbg !16540
  br label %sw.epilog, !dbg !16541

sw.bb8:                                           ; preds = %if.end5
  store i32 83968, i32* %qam_sl_sig_power, align 4, !dbg !16542
  br label %sw.epilog, !dbg !16543

sw.default:                                       ; preds = %if.end5
  br label %sw.bb9, !dbg !16543

sw.bb9:                                           ; preds = %if.end5, %sw.default
  store i32 174080, i32* %qam_sl_sig_power, align 4, !dbg !16544
  br label %sw.epilog, !dbg !16545

sw.epilog:                                        ; preds = %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb
  %6 = load i16, i16* %qam_sl_err_power, align 2, !dbg !16546
  %conv = zext i16 %6 to i32, !dbg !16546
  %cmp10 = icmp sgt i32 %conv, 0, !dbg !16548
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !16549

if.then12:                                        ; preds = %sw.epilog
  %7 = load i32, i32* %qam_sl_sig_power, align 4, !dbg !16550
  %call13 = call i32 @log10times100(i32 %7) #9, !dbg !16552
  %8 = load i16, i16* %qam_sl_err_power, align 2, !dbg !16553
  %conv14 = zext i16 %8 to i32, !dbg !16554
  %call15 = call i32 @log10times100(i32 %conv14) #9, !dbg !16555
  %sub = sub i32 %call13, %call15, !dbg !16556
  store i32 %sub, i32* %qam_sl_mer, align 4, !dbg !16557
  br label %if.end16, !dbg !16558

if.end16:                                         ; preds = %if.then12, %sw.epilog
  %9 = load i32, i32* %qam_sl_mer, align 4, !dbg !16559
  %10 = load i32*, i32** %p_signal_to_noise.addr, align 8, !dbg !16560
  store i32 %9, i32* %10, align 4, !dbg !16561
  %11 = load i32, i32* %status, align 4, !dbg !16562
  store i32 %11, i32* %retval, align 4, !dbg !16563
  br label %return, !dbg !16563

return:                                           ; preds = %if.end16, %if.then3
  %12 = load i32, i32* %retval, align 4, !dbg !16564
  ret i32 %12, !dbg !16564
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @log10times100(i32 %value) #0 !dbg !16565 {
entry:
  %value.addr = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !16568, metadata !DIExpression()), !dbg !16569
  %0 = load i32, i32* %value.addr, align 4, !dbg !16570
  %call = call i32 @intlog10(i32 %0) #9, !dbg !16571
  %conv = zext i32 %call to i64, !dbg !16571
  %mul = mul i64 100, %conv, !dbg !16572
  %shr = ashr i64 %mul, 24, !dbg !16573
  %conv1 = trunc i64 %shr to i32, !dbg !16574
  ret i32 %conv1, !dbg !16575
}

; Function Attrs: noredzone
declare dso_local i32 @intlog10(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dvbtqam_get_acc_pkt_err(%struct.drxk_state* %state, i16* %packet_err) #0 !dbg !16576 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %packet_err.addr = alloca i16*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !16577, metadata !DIExpression()), !dbg !16578
  store i16* %packet_err, i16** %packet_err.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %packet_err.addr, metadata !16579, metadata !DIExpression()), !dbg !16580
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16581, metadata !DIExpression()), !dbg !16582
  br label %do.body, !dbg !16583

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !16584
  %cmp = icmp uge i32 %0, 1, !dbg !16584
  br i1 %cmp, label %if.then, label %if.end, !dbg !16587

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dvbtqam_get_acc_pkt_err, i64 0, i64 0)) #8, !dbg !16584
  br label %if.end, !dbg !16584

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !16587

do.end:                                           ; preds = %if.end
  %1 = load i16*, i16** %packet_err.addr, align 8, !dbg !16588
  %cmp1 = icmp eq i16* %1, null, !dbg !16590
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !16591

if.then2:                                         ; preds = %do.end
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16592
  %call3 = call i32 @write16(%struct.drxk_state* %2, i32 8593099, i16 zeroext 0) #9, !dbg !16593
  store i32 %call3, i32* %status, align 4, !dbg !16594
  br label %if.end5, !dbg !16595

if.else:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16596
  %4 = load i16*, i16** %packet_err.addr, align 8, !dbg !16597
  %call4 = call i32 @read16(%struct.drxk_state* %3, i32 8593099, i16* %4) #9, !dbg !16598
  store i32 %call4, i32* %status, align 4, !dbg !16599
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %5 = load i32, i32* %status, align 4, !dbg !16600
  %cmp6 = icmp slt i32 %5, 0, !dbg !16602
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !16603

if.then7:                                         ; preds = %if.end5
  %6 = load i32, i32* %status, align 4, !dbg !16604
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dvbtqam_get_acc_pkt_err, i64 0, i64 0)) #8, !dbg !16604
  br label %if.end9, !dbg !16604

if.end9:                                          ; preds = %if.then7, %if.end5
  %7 = load i32, i32* %status, align 4, !dbg !16605
  ret i32 %7, !dbg !16606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ConfigureI2CBridge(%struct.drxk_state* %state, i1 zeroext %b_enable_bridge) #0 !dbg !16607 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %b_enable_bridge.addr = alloca i8, align 1
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !16608, metadata !DIExpression()), !dbg !16609
  %frombool = zext i1 %b_enable_bridge to i8
  store i8 %frombool, i8* %b_enable_bridge.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %b_enable_bridge.addr, metadata !16610, metadata !DIExpression()), !dbg !16611
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16612, metadata !DIExpression()), !dbg !16613
  store i32 -22, i32* %status, align 4, !dbg !16613
  br label %do.body, !dbg !16614

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !16615
  %cmp = icmp uge i32 %0, 1, !dbg !16615
  br i1 %cmp, label %if.then, label %if.end, !dbg !16618

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.ConfigureI2CBridge, i64 0, i64 0)) #8, !dbg !16615
  br label %if.end, !dbg !16615

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !16618

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16619
  %m_drxk_state = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 27, !dbg !16621
  %2 = load i32, i32* %m_drxk_state, align 4, !dbg !16621
  %cmp1 = icmp eq i32 %2, 0, !dbg !16622
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !16623

if.then2:                                         ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !16624
  br label %return, !dbg !16624

if.end3:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16625
  %m_drxk_state4 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 27, !dbg !16627
  %4 = load i32, i32* %m_drxk_state4, align 4, !dbg !16627
  %cmp5 = icmp eq i32 %4, 4, !dbg !16628
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !16629

if.then6:                                         ; preds = %if.end3
  br label %error, !dbg !16630

if.end7:                                          ; preds = %if.end3
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16631
  %no_i2c_bridge = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %5, i32 0, i32 103, !dbg !16633
  %6 = load i8, i8* %no_i2c_bridge, align 2, !dbg !16633
  %tobool = trunc i8 %6 to i1, !dbg !16633
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !16634

if.then8:                                         ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !16635
  br label %return, !dbg !16635

if.end9:                                          ; preds = %if.end7
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16636
  %call10 = call i32 @write16(%struct.drxk_state* %7, i32 4325427, i16 zeroext 14661) #9, !dbg !16637
  store i32 %call10, i32* %status, align 4, !dbg !16638
  %8 = load i32, i32* %status, align 4, !dbg !16639
  %cmp11 = icmp slt i32 %8, 0, !dbg !16641
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !16642

if.then12:                                        ; preds = %if.end9
  br label %error, !dbg !16643

if.end13:                                         ; preds = %if.end9
  %9 = load i8, i8* %b_enable_bridge.addr, align 1, !dbg !16644
  %tobool14 = trunc i8 %9 to i1, !dbg !16644
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !16646

if.then15:                                        ; preds = %if.end13
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16647
  %call16 = call i32 @write16(%struct.drxk_state* %10, i32 4325428, i16 zeroext 4) #9, !dbg !16649
  store i32 %call16, i32* %status, align 4, !dbg !16650
  %11 = load i32, i32* %status, align 4, !dbg !16651
  %cmp17 = icmp slt i32 %11, 0, !dbg !16653
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !16654

if.then18:                                        ; preds = %if.then15
  br label %error, !dbg !16655

if.end19:                                         ; preds = %if.then15
  br label %if.end24, !dbg !16656

if.else:                                          ; preds = %if.end13
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16657
  %call20 = call i32 @write16(%struct.drxk_state* %12, i32 4325428, i16 zeroext 0) #9, !dbg !16659
  store i32 %call20, i32* %status, align 4, !dbg !16660
  %13 = load i32, i32* %status, align 4, !dbg !16661
  %cmp21 = icmp slt i32 %13, 0, !dbg !16663
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !16664

if.then22:                                        ; preds = %if.else
  br label %error, !dbg !16665

if.end23:                                         ; preds = %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end19
  %14 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16666
  %call25 = call i32 @hi_command(%struct.drxk_state* %14, i16 zeroext 7, i16* null) #9, !dbg !16667
  store i32 %call25, i32* %status, align 4, !dbg !16668
  br label %error, !dbg !16669

error:                                            ; preds = %if.end24, %if.then22, %if.then18, %if.then12, %if.then6
  call void @llvm.dbg.label(metadata !16670), !dbg !16671
  %15 = load i32, i32* %status, align 4, !dbg !16672
  %cmp26 = icmp slt i32 %15, 0, !dbg !16674
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !16675

if.then27:                                        ; preds = %error
  %16 = load i32, i32* %status, align 4, !dbg !16676
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.ConfigureI2CBridge, i64 0, i64 0)) #8, !dbg !16676
  br label %if.end29, !dbg !16676

if.end29:                                         ; preds = %if.then27, %error
  %17 = load i32, i32* %status, align 4, !dbg !16677
  store i32 %17, i32* %retval, align 4, !dbg !16678
  br label %return, !dbg !16678

return:                                           ; preds = %if.end29, %if.then8, %if.then2
  %18 = load i32, i32* %retval, align 4, !dbg !16679
  ret i32 %18, !dbg !16679
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxk_i2c_lock(%struct.drxk_state* %state) #0 !dbg !16680 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !16681, metadata !DIExpression()), !dbg !16682
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16683
  %i2c = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %0, i32 0, i32 3, !dbg !16684
  %1 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !16684
  call void @i2c_lock_bus(%struct.i2c_adapter* %1, i32 2) #9, !dbg !16685
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16686
  %drxk_i2c_exclusive_lock = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 99, !dbg !16687
  store i8 1, i8* %drxk_i2c_exclusive_lock, align 8, !dbg !16688
  ret i32 0, !dbg !16689
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drxx_open(%struct.drxk_state* %state) #0 !dbg !16690 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  %jtag = alloca i32, align 4
  %bid = alloca i16, align 2
  %key = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !16691, metadata !DIExpression()), !dbg !16692
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16693, metadata !DIExpression()), !dbg !16694
  store i32 0, i32* %status, align 4, !dbg !16694
  call void @llvm.dbg.declare(metadata i32* %jtag, metadata !16695, metadata !DIExpression()), !dbg !16696
  store i32 0, i32* %jtag, align 4, !dbg !16696
  call void @llvm.dbg.declare(metadata i16* %bid, metadata !16697, metadata !DIExpression()), !dbg !16698
  store i16 0, i16* %bid, align 2, !dbg !16698
  call void @llvm.dbg.declare(metadata i16* %key, metadata !16699, metadata !DIExpression()), !dbg !16700
  store i16 0, i16* %key, align 2, !dbg !16700
  br label %do.body, !dbg !16701

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !16702
  %cmp = icmp uge i32 %0, 1, !dbg !16702
  br i1 %cmp, label %if.then, label %if.end, !dbg !16705

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.drxx_open, i64 0, i64 0)) #8, !dbg !16702
  br label %if.end, !dbg !16702

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !16705

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16706
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 8593095, i16 zeroext 0) #9, !dbg !16707
  store i32 %call1, i32* %status, align 4, !dbg !16708
  %2 = load i32, i32* %status, align 4, !dbg !16709
  %cmp2 = icmp slt i32 %2, 0, !dbg !16711
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !16712

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !16713

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16714
  %call5 = call i32 @read16(%struct.drxk_state* %3, i32 4259855, i16* %key) #9, !dbg !16715
  store i32 %call5, i32* %status, align 4, !dbg !16716
  %4 = load i32, i32* %status, align 4, !dbg !16717
  %cmp6 = icmp slt i32 %4, 0, !dbg !16719
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !16720

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !16721

if.end8:                                          ; preds = %if.end4
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16722
  %call9 = call i32 @write16(%struct.drxk_state* %5, i32 4259855, i16 zeroext -1350) #9, !dbg !16723
  store i32 %call9, i32* %status, align 4, !dbg !16724
  %6 = load i32, i32* %status, align 4, !dbg !16725
  %cmp10 = icmp slt i32 %6, 0, !dbg !16727
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !16728

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !16729

if.end12:                                         ; preds = %if.end8
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16730
  %call13 = call i32 @read32(%struct.drxk_state* %7, i32 4259858, i32* %jtag) #9, !dbg !16731
  store i32 %call13, i32* %status, align 4, !dbg !16732
  %8 = load i32, i32* %status, align 4, !dbg !16733
  %cmp14 = icmp slt i32 %8, 0, !dbg !16735
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !16736

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !16737

if.end16:                                         ; preds = %if.end12
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16738
  %call17 = call i32 @read16(%struct.drxk_state* %9, i32 8323093, i16* %bid) #9, !dbg !16739
  store i32 %call17, i32* %status, align 4, !dbg !16740
  %10 = load i32, i32* %status, align 4, !dbg !16741
  %cmp18 = icmp slt i32 %10, 0, !dbg !16743
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !16744

if.then19:                                        ; preds = %if.end16
  br label %error, !dbg !16745

if.end20:                                         ; preds = %if.end16
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16746
  %12 = load i16, i16* %key, align 2, !dbg !16747
  %call21 = call i32 @write16(%struct.drxk_state* %11, i32 4259855, i16 zeroext %12) #9, !dbg !16748
  store i32 %call21, i32* %status, align 4, !dbg !16749
  br label %error, !dbg !16750

error:                                            ; preds = %if.end20, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !16751), !dbg !16752
  %13 = load i32, i32* %status, align 4, !dbg !16753
  %cmp22 = icmp slt i32 %13, 0, !dbg !16755
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !16756

if.then23:                                        ; preds = %error
  %14 = load i32, i32* %status, align 4, !dbg !16757
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.drxx_open, i64 0, i64 0)) #8, !dbg !16757
  br label %if.end25, !dbg !16757

if.end25:                                         ; preds = %if.then23, %error
  %15 = load i32, i32* %status, align 4, !dbg !16758
  ret i32 %15, !dbg !16759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_device_capabilities(%struct.drxk_state* %state) #0 !dbg !16760 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %sio_pdr_ohw_cfg = alloca i16, align 2
  %sio_top_jtagid_lo = alloca i32, align 4
  %status = alloca i32, align 4
  %spin = alloca i8*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !16761, metadata !DIExpression()), !dbg !16762
  call void @llvm.dbg.declare(metadata i16* %sio_pdr_ohw_cfg, metadata !16763, metadata !DIExpression()), !dbg !16764
  store i16 0, i16* %sio_pdr_ohw_cfg, align 2, !dbg !16764
  call void @llvm.dbg.declare(metadata i32* %sio_top_jtagid_lo, metadata !16765, metadata !DIExpression()), !dbg !16766
  store i32 0, i32* %sio_top_jtagid_lo, align 4, !dbg !16766
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16767, metadata !DIExpression()), !dbg !16768
  call void @llvm.dbg.declare(metadata i8** %spin, metadata !16769, metadata !DIExpression()), !dbg !16770
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.47, i64 0, i64 0), i8** %spin, align 8, !dbg !16770
  br label %do.body, !dbg !16771

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !16772
  %cmp = icmp uge i32 %0, 1, !dbg !16772
  br i1 %cmp, label %if.then, label %if.end, !dbg !16775

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.get_device_capabilities, i64 0, i64 0)) #8, !dbg !16772
  br label %if.end, !dbg !16772

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !16775

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16776
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 8593095, i16 zeroext 0) #9, !dbg !16777
  store i32 %call1, i32* %status, align 4, !dbg !16778
  %2 = load i32, i32* %status, align 4, !dbg !16779
  %cmp2 = icmp slt i32 %2, 0, !dbg !16781
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !16782

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !16783

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16784
  %call5 = call i32 @write16(%struct.drxk_state* %3, i32 4259855, i16 zeroext -1350) #9, !dbg !16785
  store i32 %call5, i32* %status, align 4, !dbg !16786
  %4 = load i32, i32* %status, align 4, !dbg !16787
  %cmp6 = icmp slt i32 %4, 0, !dbg !16789
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !16790

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !16791

if.end8:                                          ; preds = %if.end4
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16792
  %call9 = call i32 @read16(%struct.drxk_state* %5, i32 8323103, i16* %sio_pdr_ohw_cfg) #9, !dbg !16793
  store i32 %call9, i32* %status, align 4, !dbg !16794
  %6 = load i32, i32* %status, align 4, !dbg !16795
  %cmp10 = icmp slt i32 %6, 0, !dbg !16797
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !16798

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !16799

if.end12:                                         ; preds = %if.end8
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16800
  %call13 = call i32 @write16(%struct.drxk_state* %7, i32 4259855, i16 zeroext 0) #9, !dbg !16801
  store i32 %call13, i32* %status, align 4, !dbg !16802
  %8 = load i32, i32* %status, align 4, !dbg !16803
  %cmp14 = icmp slt i32 %8, 0, !dbg !16805
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !16806

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !16807

if.end16:                                         ; preds = %if.end12
  %9 = load i16, i16* %sio_pdr_ohw_cfg, align 2, !dbg !16808
  %conv = zext i16 %9 to i32, !dbg !16808
  %and = and i32 %conv, 3, !dbg !16809
  switch i32 %and, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb17
    i32 2, label %sw.bb18
    i32 3, label %sw.bb20
  ], !dbg !16810

sw.bb:                                            ; preds = %if.end16
  br label %sw.epilog, !dbg !16811

sw.bb17:                                          ; preds = %if.end16
  %10 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16813
  %m_osc_clock_freq = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %10, i32 0, i32 20, !dbg !16814
  store i16 27000, i16* %m_osc_clock_freq, align 2, !dbg !16815
  br label %sw.epilog, !dbg !16816

sw.bb18:                                          ; preds = %if.end16
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16817
  %m_osc_clock_freq19 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %11, i32 0, i32 20, !dbg !16818
  store i16 20250, i16* %m_osc_clock_freq19, align 2, !dbg !16819
  br label %sw.epilog, !dbg !16820

sw.bb20:                                          ; preds = %if.end16
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16821
  %m_osc_clock_freq21 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 20, !dbg !16822
  store i16 20250, i16* %m_osc_clock_freq21, align 2, !dbg !16823
  br label %sw.epilog, !dbg !16824

sw.default:                                       ; preds = %if.end16
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.48, i64 0, i64 0)) #8, !dbg !16825
  store i32 -22, i32* %retval, align 4, !dbg !16826
  br label %return, !dbg !16826

sw.epilog:                                        ; preds = %sw.bb20, %sw.bb18, %sw.bb17, %sw.bb
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16827
  %call23 = call i32 @read32(%struct.drxk_state* %13, i32 4259858, i32* %sio_top_jtagid_lo) #9, !dbg !16828
  store i32 %call23, i32* %status, align 4, !dbg !16829
  %14 = load i32, i32* %status, align 4, !dbg !16830
  %cmp24 = icmp slt i32 %14, 0, !dbg !16832
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !16833

if.then26:                                        ; preds = %sw.epilog
  br label %error, !dbg !16834

if.end27:                                         ; preds = %sw.epilog
  %15 = load i32, i32* %sio_top_jtagid_lo, align 4, !dbg !16835
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.49, i64 0, i64 0), i32 %15) #8, !dbg !16835
  %16 = load i32, i32* %sio_top_jtagid_lo, align 4, !dbg !16836
  %shr = lshr i32 %16, 29, !dbg !16837
  %and29 = and i32 %shr, 15, !dbg !16838
  switch i32 %and29, label %sw.default35 [
    i32 0, label %sw.bb30
    i32 2, label %sw.bb31
    i32 3, label %sw.bb33
  ], !dbg !16839

sw.bb30:                                          ; preds = %if.end27
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16840
  %m_device_spin = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %17, i32 0, i32 96, !dbg !16842
  store i8 0, i8* %m_device_spin, align 1, !dbg !16843
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i64 0, i64 0), i8** %spin, align 8, !dbg !16844
  br label %sw.epilog40, !dbg !16845

sw.bb31:                                          ; preds = %if.end27
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16846
  %m_device_spin32 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %18, i32 0, i32 96, !dbg !16847
  store i8 1, i8* %m_device_spin32, align 1, !dbg !16848
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.51, i64 0, i64 0), i8** %spin, align 8, !dbg !16849
  br label %sw.epilog40, !dbg !16850

sw.bb33:                                          ; preds = %if.end27
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16851
  %m_device_spin34 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %19, i32 0, i32 96, !dbg !16852
  store i8 2, i8* %m_device_spin34, align 1, !dbg !16853
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i64 0, i64 0), i8** %spin, align 8, !dbg !16854
  br label %sw.epilog40, !dbg !16855

sw.default35:                                     ; preds = %if.end27
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16856
  %m_device_spin36 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %20, i32 0, i32 96, !dbg !16857
  store i8 3, i8* %m_device_spin36, align 1, !dbg !16858
  store i32 -22, i32* %status, align 4, !dbg !16859
  %21 = load i32, i32* %sio_top_jtagid_lo, align 4, !dbg !16860
  %shr37 = lshr i32 %21, 29, !dbg !16860
  %and38 = and i32 %shr37, 15, !dbg !16860
  %call39 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.53, i64 0, i64 0), i32 %and38) #8, !dbg !16860
  br label %error2, !dbg !16861

sw.epilog40:                                      ; preds = %sw.bb33, %sw.bb31, %sw.bb30
  %22 = load i32, i32* %sio_top_jtagid_lo, align 4, !dbg !16862
  %shr41 = lshr i32 %22, 12, !dbg !16863
  %and42 = and i32 %shr41, 255, !dbg !16864
  switch i32 %and42, label %sw.default121 [
    i32 19, label %sw.bb43
    i32 21, label %sw.bb44
    i32 22, label %sw.bb55
    i32 24, label %sw.bb66
    i32 33, label %sw.bb77
    i32 35, label %sw.bb88
    i32 37, label %sw.bb99
    i32 38, label %sw.bb110
  ], !dbg !16865

sw.bb43:                                          ; preds = %sw.epilog40
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16866
  %m_has_lna = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %23, i32 0, i32 10, !dbg !16868
  store i8 0, i8* %m_has_lna, align 8, !dbg !16869
  %24 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16870
  %m_has_oob = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %24, i32 0, i32 15, !dbg !16871
  store i8 0, i8* %m_has_oob, align 1, !dbg !16872
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16873
  %m_has_atv = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %25, i32 0, i32 14, !dbg !16874
  store i8 0, i8* %m_has_atv, align 4, !dbg !16875
  %26 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16876
  %m_has_audio = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %26, i32 0, i32 13, !dbg !16877
  store i8 0, i8* %m_has_audio, align 1, !dbg !16878
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16879
  %m_has_dvbt = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %27, i32 0, i32 11, !dbg !16880
  store i8 1, i8* %m_has_dvbt, align 1, !dbg !16881
  %28 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16882
  %m_has_dvbc = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %28, i32 0, i32 12, !dbg !16883
  store i8 1, i8* %m_has_dvbc, align 2, !dbg !16884
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16885
  %m_has_sawsw = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %29, i32 0, i32 16, !dbg !16886
  store i8 1, i8* %m_has_sawsw, align 2, !dbg !16887
  %30 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16888
  %m_has_gpio2 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %30, i32 0, i32 18, !dbg !16889
  store i8 0, i8* %m_has_gpio2, align 8, !dbg !16890
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16891
  %m_has_gpio1 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %31, i32 0, i32 17, !dbg !16892
  store i8 0, i8* %m_has_gpio1, align 1, !dbg !16893
  %32 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16894
  %m_has_irqn = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %32, i32 0, i32 19, !dbg !16895
  store i8 0, i8* %m_has_irqn, align 1, !dbg !16896
  br label %sw.epilog125, !dbg !16897

sw.bb44:                                          ; preds = %sw.epilog40
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16898
  %m_has_lna45 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %33, i32 0, i32 10, !dbg !16899
  store i8 0, i8* %m_has_lna45, align 8, !dbg !16900
  %34 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16901
  %m_has_oob46 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %34, i32 0, i32 15, !dbg !16902
  store i8 0, i8* %m_has_oob46, align 1, !dbg !16903
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16904
  %m_has_atv47 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %35, i32 0, i32 14, !dbg !16905
  store i8 1, i8* %m_has_atv47, align 4, !dbg !16906
  %36 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16907
  %m_has_audio48 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %36, i32 0, i32 13, !dbg !16908
  store i8 0, i8* %m_has_audio48, align 1, !dbg !16909
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16910
  %m_has_dvbt49 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %37, i32 0, i32 11, !dbg !16911
  store i8 1, i8* %m_has_dvbt49, align 1, !dbg !16912
  %38 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16913
  %m_has_dvbc50 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %38, i32 0, i32 12, !dbg !16914
  store i8 0, i8* %m_has_dvbc50, align 2, !dbg !16915
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16916
  %m_has_sawsw51 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %39, i32 0, i32 16, !dbg !16917
  store i8 1, i8* %m_has_sawsw51, align 2, !dbg !16918
  %40 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16919
  %m_has_gpio252 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %40, i32 0, i32 18, !dbg !16920
  store i8 1, i8* %m_has_gpio252, align 8, !dbg !16921
  %41 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16922
  %m_has_gpio153 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %41, i32 0, i32 17, !dbg !16923
  store i8 1, i8* %m_has_gpio153, align 1, !dbg !16924
  %42 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16925
  %m_has_irqn54 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %42, i32 0, i32 19, !dbg !16926
  store i8 0, i8* %m_has_irqn54, align 1, !dbg !16927
  br label %sw.epilog125, !dbg !16928

sw.bb55:                                          ; preds = %sw.epilog40
  %43 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16929
  %m_has_lna56 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %43, i32 0, i32 10, !dbg !16930
  store i8 0, i8* %m_has_lna56, align 8, !dbg !16931
  %44 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16932
  %m_has_oob57 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %44, i32 0, i32 15, !dbg !16933
  store i8 0, i8* %m_has_oob57, align 1, !dbg !16934
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16935
  %m_has_atv58 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %45, i32 0, i32 14, !dbg !16936
  store i8 1, i8* %m_has_atv58, align 4, !dbg !16937
  %46 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16938
  %m_has_audio59 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %46, i32 0, i32 13, !dbg !16939
  store i8 0, i8* %m_has_audio59, align 1, !dbg !16940
  %47 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16941
  %m_has_dvbt60 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %47, i32 0, i32 11, !dbg !16942
  store i8 1, i8* %m_has_dvbt60, align 1, !dbg !16943
  %48 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16944
  %m_has_dvbc61 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %48, i32 0, i32 12, !dbg !16945
  store i8 0, i8* %m_has_dvbc61, align 2, !dbg !16946
  %49 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16947
  %m_has_sawsw62 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %49, i32 0, i32 16, !dbg !16948
  store i8 1, i8* %m_has_sawsw62, align 2, !dbg !16949
  %50 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16950
  %m_has_gpio263 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %50, i32 0, i32 18, !dbg !16951
  store i8 1, i8* %m_has_gpio263, align 8, !dbg !16952
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16953
  %m_has_gpio164 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %51, i32 0, i32 17, !dbg !16954
  store i8 1, i8* %m_has_gpio164, align 1, !dbg !16955
  %52 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16956
  %m_has_irqn65 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %52, i32 0, i32 19, !dbg !16957
  store i8 0, i8* %m_has_irqn65, align 1, !dbg !16958
  br label %sw.epilog125, !dbg !16959

sw.bb66:                                          ; preds = %sw.epilog40
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16960
  %m_has_lna67 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %53, i32 0, i32 10, !dbg !16961
  store i8 0, i8* %m_has_lna67, align 8, !dbg !16962
  %54 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16963
  %m_has_oob68 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %54, i32 0, i32 15, !dbg !16964
  store i8 0, i8* %m_has_oob68, align 1, !dbg !16965
  %55 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16966
  %m_has_atv69 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %55, i32 0, i32 14, !dbg !16967
  store i8 1, i8* %m_has_atv69, align 4, !dbg !16968
  %56 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16969
  %m_has_audio70 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %56, i32 0, i32 13, !dbg !16970
  store i8 1, i8* %m_has_audio70, align 1, !dbg !16971
  %57 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16972
  %m_has_dvbt71 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %57, i32 0, i32 11, !dbg !16973
  store i8 1, i8* %m_has_dvbt71, align 1, !dbg !16974
  %58 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16975
  %m_has_dvbc72 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %58, i32 0, i32 12, !dbg !16976
  store i8 0, i8* %m_has_dvbc72, align 2, !dbg !16977
  %59 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16978
  %m_has_sawsw73 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %59, i32 0, i32 16, !dbg !16979
  store i8 1, i8* %m_has_sawsw73, align 2, !dbg !16980
  %60 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16981
  %m_has_gpio274 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %60, i32 0, i32 18, !dbg !16982
  store i8 1, i8* %m_has_gpio274, align 8, !dbg !16983
  %61 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16984
  %m_has_gpio175 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %61, i32 0, i32 17, !dbg !16985
  store i8 1, i8* %m_has_gpio175, align 1, !dbg !16986
  %62 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16987
  %m_has_irqn76 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %62, i32 0, i32 19, !dbg !16988
  store i8 0, i8* %m_has_irqn76, align 1, !dbg !16989
  br label %sw.epilog125, !dbg !16990

sw.bb77:                                          ; preds = %sw.epilog40
  %63 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16991
  %m_has_lna78 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %63, i32 0, i32 10, !dbg !16992
  store i8 0, i8* %m_has_lna78, align 8, !dbg !16993
  %64 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16994
  %m_has_oob79 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %64, i32 0, i32 15, !dbg !16995
  store i8 0, i8* %m_has_oob79, align 1, !dbg !16996
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !16997
  %m_has_atv80 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %65, i32 0, i32 14, !dbg !16998
  store i8 1, i8* %m_has_atv80, align 4, !dbg !16999
  %66 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17000
  %m_has_audio81 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %66, i32 0, i32 13, !dbg !17001
  store i8 1, i8* %m_has_audio81, align 1, !dbg !17002
  %67 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17003
  %m_has_dvbt82 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %67, i32 0, i32 11, !dbg !17004
  store i8 1, i8* %m_has_dvbt82, align 1, !dbg !17005
  %68 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17006
  %m_has_dvbc83 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %68, i32 0, i32 12, !dbg !17007
  store i8 1, i8* %m_has_dvbc83, align 2, !dbg !17008
  %69 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17009
  %m_has_sawsw84 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %69, i32 0, i32 16, !dbg !17010
  store i8 1, i8* %m_has_sawsw84, align 2, !dbg !17011
  %70 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17012
  %m_has_gpio285 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %70, i32 0, i32 18, !dbg !17013
  store i8 1, i8* %m_has_gpio285, align 8, !dbg !17014
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17015
  %m_has_gpio186 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %71, i32 0, i32 17, !dbg !17016
  store i8 1, i8* %m_has_gpio186, align 1, !dbg !17017
  %72 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17018
  %m_has_irqn87 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %72, i32 0, i32 19, !dbg !17019
  store i8 0, i8* %m_has_irqn87, align 1, !dbg !17020
  br label %sw.epilog125, !dbg !17021

sw.bb88:                                          ; preds = %sw.epilog40
  %73 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17022
  %m_has_lna89 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %73, i32 0, i32 10, !dbg !17023
  store i8 0, i8* %m_has_lna89, align 8, !dbg !17024
  %74 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17025
  %m_has_oob90 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %74, i32 0, i32 15, !dbg !17026
  store i8 0, i8* %m_has_oob90, align 1, !dbg !17027
  %75 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17028
  %m_has_atv91 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %75, i32 0, i32 14, !dbg !17029
  store i8 1, i8* %m_has_atv91, align 4, !dbg !17030
  %76 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17031
  %m_has_audio92 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %76, i32 0, i32 13, !dbg !17032
  store i8 1, i8* %m_has_audio92, align 1, !dbg !17033
  %77 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17034
  %m_has_dvbt93 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %77, i32 0, i32 11, !dbg !17035
  store i8 1, i8* %m_has_dvbt93, align 1, !dbg !17036
  %78 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17037
  %m_has_dvbc94 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %78, i32 0, i32 12, !dbg !17038
  store i8 1, i8* %m_has_dvbc94, align 2, !dbg !17039
  %79 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17040
  %m_has_sawsw95 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %79, i32 0, i32 16, !dbg !17041
  store i8 1, i8* %m_has_sawsw95, align 2, !dbg !17042
  %80 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17043
  %m_has_gpio296 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %80, i32 0, i32 18, !dbg !17044
  store i8 1, i8* %m_has_gpio296, align 8, !dbg !17045
  %81 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17046
  %m_has_gpio197 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %81, i32 0, i32 17, !dbg !17047
  store i8 1, i8* %m_has_gpio197, align 1, !dbg !17048
  %82 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17049
  %m_has_irqn98 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %82, i32 0, i32 19, !dbg !17050
  store i8 0, i8* %m_has_irqn98, align 1, !dbg !17051
  br label %sw.epilog125, !dbg !17052

sw.bb99:                                          ; preds = %sw.epilog40
  %83 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17053
  %m_has_lna100 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %83, i32 0, i32 10, !dbg !17054
  store i8 0, i8* %m_has_lna100, align 8, !dbg !17055
  %84 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17056
  %m_has_oob101 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %84, i32 0, i32 15, !dbg !17057
  store i8 0, i8* %m_has_oob101, align 1, !dbg !17058
  %85 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17059
  %m_has_atv102 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %85, i32 0, i32 14, !dbg !17060
  store i8 1, i8* %m_has_atv102, align 4, !dbg !17061
  %86 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17062
  %m_has_audio103 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %86, i32 0, i32 13, !dbg !17063
  store i8 1, i8* %m_has_audio103, align 1, !dbg !17064
  %87 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17065
  %m_has_dvbt104 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %87, i32 0, i32 11, !dbg !17066
  store i8 1, i8* %m_has_dvbt104, align 1, !dbg !17067
  %88 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17068
  %m_has_dvbc105 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %88, i32 0, i32 12, !dbg !17069
  store i8 1, i8* %m_has_dvbc105, align 2, !dbg !17070
  %89 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17071
  %m_has_sawsw106 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %89, i32 0, i32 16, !dbg !17072
  store i8 1, i8* %m_has_sawsw106, align 2, !dbg !17073
  %90 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17074
  %m_has_gpio2107 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %90, i32 0, i32 18, !dbg !17075
  store i8 1, i8* %m_has_gpio2107, align 8, !dbg !17076
  %91 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17077
  %m_has_gpio1108 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %91, i32 0, i32 17, !dbg !17078
  store i8 1, i8* %m_has_gpio1108, align 1, !dbg !17079
  %92 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17080
  %m_has_irqn109 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %92, i32 0, i32 19, !dbg !17081
  store i8 0, i8* %m_has_irqn109, align 1, !dbg !17082
  br label %sw.epilog125, !dbg !17083

sw.bb110:                                         ; preds = %sw.epilog40
  %93 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17084
  %m_has_lna111 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %93, i32 0, i32 10, !dbg !17085
  store i8 0, i8* %m_has_lna111, align 8, !dbg !17086
  %94 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17087
  %m_has_oob112 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %94, i32 0, i32 15, !dbg !17088
  store i8 0, i8* %m_has_oob112, align 1, !dbg !17089
  %95 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17090
  %m_has_atv113 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %95, i32 0, i32 14, !dbg !17091
  store i8 1, i8* %m_has_atv113, align 4, !dbg !17092
  %96 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17093
  %m_has_audio114 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %96, i32 0, i32 13, !dbg !17094
  store i8 0, i8* %m_has_audio114, align 1, !dbg !17095
  %97 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17096
  %m_has_dvbt115 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %97, i32 0, i32 11, !dbg !17097
  store i8 1, i8* %m_has_dvbt115, align 1, !dbg !17098
  %98 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17099
  %m_has_dvbc116 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %98, i32 0, i32 12, !dbg !17100
  store i8 1, i8* %m_has_dvbc116, align 2, !dbg !17101
  %99 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17102
  %m_has_sawsw117 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %99, i32 0, i32 16, !dbg !17103
  store i8 1, i8* %m_has_sawsw117, align 2, !dbg !17104
  %100 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17105
  %m_has_gpio2118 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %100, i32 0, i32 18, !dbg !17106
  store i8 1, i8* %m_has_gpio2118, align 8, !dbg !17107
  %101 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17108
  %m_has_gpio1119 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %101, i32 0, i32 17, !dbg !17109
  store i8 1, i8* %m_has_gpio1119, align 1, !dbg !17110
  %102 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17111
  %m_has_irqn120 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %102, i32 0, i32 19, !dbg !17112
  store i8 0, i8* %m_has_irqn120, align 1, !dbg !17113
  br label %sw.epilog125, !dbg !17114

sw.default121:                                    ; preds = %sw.epilog40
  %103 = load i32, i32* %sio_top_jtagid_lo, align 4, !dbg !17115
  %shr122 = lshr i32 %103, 12, !dbg !17115
  %and123 = and i32 %shr122, 255, !dbg !17115
  %call124 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.54, i64 0, i64 0), i32 %and123) #8, !dbg !17115
  store i32 -22, i32* %status, align 4, !dbg !17116
  br label %error2, !dbg !17117

sw.epilog125:                                     ; preds = %sw.bb110, %sw.bb99, %sw.bb88, %sw.bb77, %sw.bb66, %sw.bb55, %sw.bb44, %sw.bb43
  %104 = load i32, i32* %sio_top_jtagid_lo, align 4, !dbg !17118
  %shr126 = lshr i32 %104, 12, !dbg !17118
  %and127 = and i32 %shr126, 255, !dbg !17118
  %105 = load i8*, i8** %spin, align 8, !dbg !17118
  %106 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17118
  %m_osc_clock_freq128 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %106, i32 0, i32 20, !dbg !17118
  %107 = load i16, i16* %m_osc_clock_freq128, align 2, !dbg !17118
  %conv129 = zext i16 %107 to i32, !dbg !17118
  %div = sdiv i32 %conv129, 1000, !dbg !17118
  %108 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17118
  %m_osc_clock_freq130 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %108, i32 0, i32 20, !dbg !17118
  %109 = load i16, i16* %m_osc_clock_freq130, align 2, !dbg !17118
  %conv131 = zext i16 %109 to i32, !dbg !17118
  %rem = srem i32 %conv131, 1000, !dbg !17118
  %call132 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.55, i64 0, i64 0), i32 %and127, i8* %105, i32 %div, i32 %rem) #8, !dbg !17118
  br label %error, !dbg !17118

error:                                            ; preds = %sw.epilog125, %if.then26, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !17119), !dbg !17120
  %110 = load i32, i32* %status, align 4, !dbg !17121
  %cmp133 = icmp slt i32 %110, 0, !dbg !17123
  br i1 %cmp133, label %if.then135, label %if.end137, !dbg !17124

if.then135:                                       ; preds = %error
  %111 = load i32, i32* %status, align 4, !dbg !17125
  %call136 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %111, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.get_device_capabilities, i64 0, i64 0)) #8, !dbg !17125
  br label %if.end137, !dbg !17125

if.end137:                                        ; preds = %if.then135, %error
  br label %error2, !dbg !17126

error2:                                           ; preds = %if.end137, %sw.default121, %sw.default35
  call void @llvm.dbg.label(metadata !17127), !dbg !17128
  %112 = load i32, i32* %status, align 4, !dbg !17129
  store i32 %112, i32* %retval, align 4, !dbg !17130
  br label %return, !dbg !17130

return:                                           ; preds = %error2, %sw.default
  %113 = load i32, i32* %retval, align 4, !dbg !17131
  ret i32 %113, !dbg !17131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @init_hi(%struct.drxk_state* %state) #0 !dbg !17132 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !17133, metadata !DIExpression()), !dbg !17134
  br label %do.body, !dbg !17135

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !17136
  %cmp = icmp uge i32 %0, 1, !dbg !17136
  br i1 %cmp, label %if.then, label %if.end, !dbg !17139

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__func__.init_hi, i64 0, i64 0)) #8, !dbg !17136
  br label %if.end, !dbg !17136

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !17139

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17140
  %demod_address = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 4, !dbg !17141
  %2 = load i8, i8* %demod_address, align 8, !dbg !17141
  %conv = zext i8 %2 to i32, !dbg !17140
  %shl = shl i32 %conv, 1, !dbg !17142
  %conv1 = trunc i32 %shl to i16, !dbg !17143
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17144
  %m_hi_cfg_wake_up_key = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 23, !dbg !17145
  store i16 %conv1, i16* %m_hi_cfg_wake_up_key, align 8, !dbg !17146
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17147
  %m_hi_cfg_timeout = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 24, !dbg !17148
  store i16 -26881, i16* %m_hi_cfg_timeout, align 2, !dbg !17149
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17150
  %m_hi_cfg_ctrl = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %5, i32 0, i32 25, !dbg !17151
  store i16 1, i16* %m_hi_cfg_ctrl, align 4, !dbg !17152
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17153
  %call2 = call i32 @hi_cfg_command(%struct.drxk_state* %6) #9, !dbg !17154
  ret i32 %call2, !dbg !17155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mpegts_disable(%struct.drxk_state* %state) #0 !dbg !17156 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !17157, metadata !DIExpression()), !dbg !17158
  br label %do.body, !dbg !17159

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !17160
  %cmp = icmp uge i32 %0, 1, !dbg !17160
  br i1 %cmp, label %if.then, label %if.end, !dbg !17163

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.mpegts_disable, i64 0, i64 0)) #8, !dbg !17160
  br label %if.end, !dbg !17160

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !17163

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17164
  %call1 = call i32 @mpegts_configure_pins(%struct.drxk_state* %1, i1 zeroext false) #9, !dbg !17165
  ret i32 %call1, !dbg !17166
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @download_microcode(%struct.drxk_state* %state, i8* %p_mc_image, i32 %length) #0 !dbg !17167 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %p_mc_image.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %p_src = alloca i8*, align 8
  %address = alloca i32, align 4
  %n_blocks = alloca i16, align 2
  %block_size = alloca i16, align 2
  %offset = alloca i32, align 4
  %i = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !17170, metadata !DIExpression()), !dbg !17171
  store i8* %p_mc_image, i8** %p_mc_image.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p_mc_image.addr, metadata !17172, metadata !DIExpression()), !dbg !17173
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !17174, metadata !DIExpression()), !dbg !17175
  call void @llvm.dbg.declare(metadata i8** %p_src, metadata !17176, metadata !DIExpression()), !dbg !17177
  %0 = load i8*, i8** %p_mc_image.addr, align 8, !dbg !17178
  store i8* %0, i8** %p_src, align 8, !dbg !17177
  call void @llvm.dbg.declare(metadata i32* %address, metadata !17179, metadata !DIExpression()), !dbg !17180
  call void @llvm.dbg.declare(metadata i16* %n_blocks, metadata !17181, metadata !DIExpression()), !dbg !17182
  call void @llvm.dbg.declare(metadata i16* %block_size, metadata !17183, metadata !DIExpression()), !dbg !17184
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !17185, metadata !DIExpression()), !dbg !17186
  store i32 0, i32* %offset, align 4, !dbg !17186
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17187, metadata !DIExpression()), !dbg !17188
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17189, metadata !DIExpression()), !dbg !17190
  store i32 0, i32* %status, align 4, !dbg !17190
  br label %do.body, !dbg !17191

do.body:                                          ; preds = %entry
  %1 = load i32, i32* @debug, align 4, !dbg !17192
  %cmp = icmp uge i32 %1, 1, !dbg !17192
  br i1 %cmp, label %if.then, label %if.end, !dbg !17195

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.download_microcode, i64 0, i64 0)) #8, !dbg !17192
  br label %if.end, !dbg !17192

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !17195

do.end:                                           ; preds = %if.end
  %2 = load i8*, i8** %p_src, align 8, !dbg !17196
  %add.ptr = getelementptr i8, i8* %2, i64 2, !dbg !17196
  store i8* %add.ptr, i8** %p_src, align 8, !dbg !17196
  %3 = load i32, i32* %offset, align 4, !dbg !17197
  %conv = zext i32 %3 to i64, !dbg !17197
  %add = add i64 %conv, 2, !dbg !17197
  %conv1 = trunc i64 %add to i32, !dbg !17197
  store i32 %conv1, i32* %offset, align 4, !dbg !17197
  %4 = load i8*, i8** %p_src, align 8, !dbg !17198
  %arrayidx = getelementptr i8, i8* %4, i64 0, !dbg !17198
  %5 = load i8, i8* %arrayidx, align 1, !dbg !17198
  %conv2 = zext i8 %5 to i32, !dbg !17198
  %shl = shl i32 %conv2, 8, !dbg !17199
  %6 = load i8*, i8** %p_src, align 8, !dbg !17200
  %arrayidx3 = getelementptr i8, i8* %6, i64 1, !dbg !17200
  %7 = load i8, i8* %arrayidx3, align 1, !dbg !17200
  %conv4 = zext i8 %7 to i32, !dbg !17200
  %or = or i32 %shl, %conv4, !dbg !17201
  %conv5 = trunc i32 %or to i16, !dbg !17202
  store i16 %conv5, i16* %n_blocks, align 2, !dbg !17203
  %8 = load i8*, i8** %p_src, align 8, !dbg !17204
  %add.ptr6 = getelementptr i8, i8* %8, i64 2, !dbg !17204
  store i8* %add.ptr6, i8** %p_src, align 8, !dbg !17204
  %9 = load i32, i32* %offset, align 4, !dbg !17205
  %conv7 = zext i32 %9 to i64, !dbg !17205
  %add8 = add i64 %conv7, 2, !dbg !17205
  %conv9 = trunc i64 %add8 to i32, !dbg !17205
  store i32 %conv9, i32* %offset, align 4, !dbg !17205
  store i32 0, i32* %i, align 4, !dbg !17206
  br label %for.cond, !dbg !17208

for.cond:                                         ; preds = %for.inc, %do.end
  %10 = load i32, i32* %i, align 4, !dbg !17209
  %11 = load i16, i16* %n_blocks, align 2, !dbg !17211
  %conv10 = zext i16 %11 to i32, !dbg !17211
  %cmp11 = icmp ult i32 %10, %conv10, !dbg !17212
  br i1 %cmp11, label %for.body, label %for.end, !dbg !17213

for.body:                                         ; preds = %for.cond
  %12 = load i8*, i8** %p_src, align 8, !dbg !17214
  %arrayidx13 = getelementptr i8, i8* %12, i64 0, !dbg !17214
  %13 = load i8, i8* %arrayidx13, align 1, !dbg !17214
  %conv14 = zext i8 %13 to i32, !dbg !17214
  %shl15 = shl i32 %conv14, 24, !dbg !17216
  %14 = load i8*, i8** %p_src, align 8, !dbg !17217
  %arrayidx16 = getelementptr i8, i8* %14, i64 1, !dbg !17217
  %15 = load i8, i8* %arrayidx16, align 1, !dbg !17217
  %conv17 = zext i8 %15 to i32, !dbg !17217
  %shl18 = shl i32 %conv17, 16, !dbg !17218
  %or19 = or i32 %shl15, %shl18, !dbg !17219
  %16 = load i8*, i8** %p_src, align 8, !dbg !17220
  %arrayidx20 = getelementptr i8, i8* %16, i64 2, !dbg !17220
  %17 = load i8, i8* %arrayidx20, align 1, !dbg !17220
  %conv21 = zext i8 %17 to i32, !dbg !17220
  %shl22 = shl i32 %conv21, 8, !dbg !17221
  %or23 = or i32 %or19, %shl22, !dbg !17222
  %18 = load i8*, i8** %p_src, align 8, !dbg !17223
  %arrayidx24 = getelementptr i8, i8* %18, i64 3, !dbg !17223
  %19 = load i8, i8* %arrayidx24, align 1, !dbg !17223
  %conv25 = zext i8 %19 to i32, !dbg !17223
  %or26 = or i32 %or23, %conv25, !dbg !17224
  store i32 %or26, i32* %address, align 4, !dbg !17225
  %20 = load i8*, i8** %p_src, align 8, !dbg !17226
  %add.ptr27 = getelementptr i8, i8* %20, i64 4, !dbg !17226
  store i8* %add.ptr27, i8** %p_src, align 8, !dbg !17226
  %21 = load i32, i32* %offset, align 4, !dbg !17227
  %conv28 = zext i32 %21 to i64, !dbg !17227
  %add29 = add i64 %conv28, 4, !dbg !17227
  %conv30 = trunc i64 %add29 to i32, !dbg !17227
  store i32 %conv30, i32* %offset, align 4, !dbg !17227
  %22 = load i8*, i8** %p_src, align 8, !dbg !17228
  %arrayidx31 = getelementptr i8, i8* %22, i64 0, !dbg !17228
  %23 = load i8, i8* %arrayidx31, align 1, !dbg !17228
  %conv32 = zext i8 %23 to i32, !dbg !17228
  %shl33 = shl i32 %conv32, 8, !dbg !17229
  %24 = load i8*, i8** %p_src, align 8, !dbg !17230
  %arrayidx34 = getelementptr i8, i8* %24, i64 1, !dbg !17230
  %25 = load i8, i8* %arrayidx34, align 1, !dbg !17230
  %conv35 = zext i8 %25 to i32, !dbg !17230
  %or36 = or i32 %shl33, %conv35, !dbg !17231
  %conv37 = sext i32 %or36 to i64, !dbg !17232
  %mul = mul i64 %conv37, 2, !dbg !17233
  %conv38 = trunc i64 %mul to i16, !dbg !17232
  store i16 %conv38, i16* %block_size, align 2, !dbg !17234
  %26 = load i8*, i8** %p_src, align 8, !dbg !17235
  %add.ptr39 = getelementptr i8, i8* %26, i64 2, !dbg !17235
  store i8* %add.ptr39, i8** %p_src, align 8, !dbg !17235
  %27 = load i32, i32* %offset, align 4, !dbg !17236
  %conv40 = zext i32 %27 to i64, !dbg !17236
  %add41 = add i64 %conv40, 2, !dbg !17236
  %conv42 = trunc i64 %add41 to i32, !dbg !17236
  store i32 %conv42, i32* %offset, align 4, !dbg !17236
  %28 = load i8*, i8** %p_src, align 8, !dbg !17237
  %add.ptr43 = getelementptr i8, i8* %28, i64 2, !dbg !17237
  store i8* %add.ptr43, i8** %p_src, align 8, !dbg !17237
  %29 = load i32, i32* %offset, align 4, !dbg !17238
  %conv44 = zext i32 %29 to i64, !dbg !17238
  %add45 = add i64 %conv44, 2, !dbg !17238
  %conv46 = trunc i64 %add45 to i32, !dbg !17238
  store i32 %conv46, i32* %offset, align 4, !dbg !17238
  %30 = load i8*, i8** %p_src, align 8, !dbg !17239
  %add.ptr47 = getelementptr i8, i8* %30, i64 2, !dbg !17239
  store i8* %add.ptr47, i8** %p_src, align 8, !dbg !17239
  %31 = load i32, i32* %offset, align 4, !dbg !17240
  %conv48 = zext i32 %31 to i64, !dbg !17240
  %add49 = add i64 %conv48, 2, !dbg !17240
  %conv50 = trunc i64 %add49 to i32, !dbg !17240
  store i32 %conv50, i32* %offset, align 4, !dbg !17240
  %32 = load i32, i32* %offset, align 4, !dbg !17241
  %33 = load i16, i16* %block_size, align 2, !dbg !17243
  %conv51 = zext i16 %33 to i32, !dbg !17243
  %add52 = add i32 %32, %conv51, !dbg !17244
  %34 = load i32, i32* %length.addr, align 4, !dbg !17245
  %cmp53 = icmp ugt i32 %add52, %34, !dbg !17246
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !17247

if.then55:                                        ; preds = %for.body
  %call56 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.56, i64 0, i64 0)) #8, !dbg !17248
  store i32 -22, i32* %retval, align 4, !dbg !17250
  br label %return, !dbg !17250

if.end57:                                         ; preds = %for.body
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17251
  %36 = load i32, i32* %address, align 4, !dbg !17252
  %37 = load i16, i16* %block_size, align 2, !dbg !17253
  %conv58 = zext i16 %37 to i32, !dbg !17253
  %38 = load i8*, i8** %p_src, align 8, !dbg !17254
  %call59 = call i32 @write_block(%struct.drxk_state* %35, i32 %36, i32 %conv58, i8* %38) #9, !dbg !17255
  store i32 %call59, i32* %status, align 4, !dbg !17256
  %39 = load i32, i32* %status, align 4, !dbg !17257
  %cmp60 = icmp slt i32 %39, 0, !dbg !17259
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !17260

if.then62:                                        ; preds = %if.end57
  %40 = load i32, i32* %status, align 4, !dbg !17261
  %call63 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.57, i64 0, i64 0), i32 %40) #8, !dbg !17261
  br label %for.end, !dbg !17263

if.end64:                                         ; preds = %if.end57
  %41 = load i16, i16* %block_size, align 2, !dbg !17264
  %conv65 = zext i16 %41 to i32, !dbg !17264
  %42 = load i8*, i8** %p_src, align 8, !dbg !17265
  %idx.ext = sext i32 %conv65 to i64, !dbg !17265
  %add.ptr66 = getelementptr i8, i8* %42, i64 %idx.ext, !dbg !17265
  store i8* %add.ptr66, i8** %p_src, align 8, !dbg !17265
  %43 = load i16, i16* %block_size, align 2, !dbg !17266
  %conv67 = zext i16 %43 to i32, !dbg !17266
  %44 = load i32, i32* %offset, align 4, !dbg !17267
  %add68 = add i32 %44, %conv67, !dbg !17267
  store i32 %add68, i32* %offset, align 4, !dbg !17267
  br label %for.inc, !dbg !17268

for.inc:                                          ; preds = %if.end64
  %45 = load i32, i32* %i, align 4, !dbg !17269
  %add69 = add i32 %45, 1, !dbg !17269
  store i32 %add69, i32* %i, align 4, !dbg !17269
  br label %for.cond, !dbg !17270, !llvm.loop !17271

for.end:                                          ; preds = %if.then62, %for.cond
  %46 = load i32, i32* %status, align 4, !dbg !17273
  store i32 %46, i32* %retval, align 4, !dbg !17274
  br label %return, !dbg !17274

return:                                           ; preds = %for.end, %if.then55
  %47 = load i32, i32* %retval, align 4, !dbg !17275
  ret i32 %47, !dbg !17275
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mpegts_dto_init(%struct.drxk_state* %state) #0 !dbg !17276 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !17277, metadata !DIExpression()), !dbg !17278
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17279, metadata !DIExpression()), !dbg !17280
  br label %do.body, !dbg !17281

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !17282
  %cmp = icmp uge i32 %0, 1, !dbg !17282
  br i1 %cmp, label %if.then, label %if.end, !dbg !17285

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.mpegts_dto_init, i64 0, i64 0)) #8, !dbg !17282
  br label %if.end, !dbg !17282

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !17285

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17286
  %call1 = call i32 @write16(%struct.drxk_state* %1, i32 29622322, i16 zeroext 0) #9, !dbg !17287
  store i32 %call1, i32* %status, align 4, !dbg !17288
  %2 = load i32, i32* %status, align 4, !dbg !17289
  %cmp2 = icmp slt i32 %2, 0, !dbg !17291
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !17292

if.then3:                                         ; preds = %do.end
  br label %error, !dbg !17293

if.end4:                                          ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17294
  %call5 = call i32 @write16(%struct.drxk_state* %3, i32 29622323, i16 zeroext 12) #9, !dbg !17295
  store i32 %call5, i32* %status, align 4, !dbg !17296
  %4 = load i32, i32* %status, align 4, !dbg !17297
  %cmp6 = icmp slt i32 %4, 0, !dbg !17299
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !17300

if.then7:                                         ; preds = %if.end4
  br label %error, !dbg !17301

if.end8:                                          ; preds = %if.end4
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17302
  %call9 = call i32 @write16(%struct.drxk_state* %5, i32 29622318, i16 zeroext 10) #9, !dbg !17303
  store i32 %call9, i32* %status, align 4, !dbg !17304
  %6 = load i32, i32* %status, align 4, !dbg !17305
  %cmp10 = icmp slt i32 %6, 0, !dbg !17307
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !17308

if.then11:                                        ; preds = %if.end8
  br label %error, !dbg !17309

if.end12:                                         ; preds = %if.end8
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17310
  %call13 = call i32 @write16(%struct.drxk_state* %7, i32 29622310, i16 zeroext 8) #9, !dbg !17311
  store i32 %call13, i32* %status, align 4, !dbg !17312
  %8 = load i32, i32* %status, align 4, !dbg !17313
  %cmp14 = icmp slt i32 %8, 0, !dbg !17315
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !17316

if.then15:                                        ; preds = %if.end12
  br label %error, !dbg !17317

if.end16:                                         ; preds = %if.end12
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17318
  %call17 = call i32 @write16(%struct.drxk_state* %9, i32 29622311, i16 zeroext 6) #9, !dbg !17319
  store i32 %call17, i32* %status, align 4, !dbg !17320
  %10 = load i32, i32* %status, align 4, !dbg !17321
  %cmp18 = icmp slt i32 %10, 0, !dbg !17323
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !17324

if.then19:                                        ; preds = %if.end16
  br label %error, !dbg !17325

if.end20:                                         ; preds = %if.end16
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17326
  %call21 = call i32 @write16(%struct.drxk_state* %11, i32 29622304, i16 zeroext 1664) #9, !dbg !17327
  store i32 %call21, i32* %status, align 4, !dbg !17328
  %12 = load i32, i32* %status, align 4, !dbg !17329
  %cmp22 = icmp slt i32 %12, 0, !dbg !17331
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !17332

if.then23:                                        ; preds = %if.end20
  br label %error, !dbg !17333

if.end24:                                         ; preds = %if.end20
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17334
  %call25 = call i32 @write16(%struct.drxk_state* %13, i32 29622305, i16 zeroext 128) #9, !dbg !17335
  store i32 %call25, i32* %status, align 4, !dbg !17336
  %14 = load i32, i32* %status, align 4, !dbg !17337
  %cmp26 = icmp slt i32 %14, 0, !dbg !17339
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !17340

if.then27:                                        ; preds = %if.end24
  br label %error, !dbg !17341

if.end28:                                         ; preds = %if.end24
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17342
  %call29 = call i32 @write16(%struct.drxk_state* %15, i32 29622303, i16 zeroext 1012) #9, !dbg !17343
  store i32 %call29, i32* %status, align 4, !dbg !17344
  %16 = load i32, i32* %status, align 4, !dbg !17345
  %cmp30 = icmp slt i32 %16, 0, !dbg !17347
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !17348

if.then31:                                        ; preds = %if.end28
  br label %error, !dbg !17349

if.end32:                                         ; preds = %if.end28
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17350
  %call33 = call i32 @write16(%struct.drxk_state* %17, i32 29622354, i16 zeroext 0) #9, !dbg !17351
  store i32 %call33, i32* %status, align 4, !dbg !17352
  %18 = load i32, i32* %status, align 4, !dbg !17353
  %cmp34 = icmp slt i32 %18, 0, !dbg !17355
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !17356

if.then35:                                        ; preds = %if.end32
  br label %error, !dbg !17357

if.end36:                                         ; preds = %if.end32
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17358
  %call37 = call i32 @write16(%struct.drxk_state* %19, i32 29622337, i16 zeroext 2) #9, !dbg !17359
  store i32 %call37, i32* %status, align 4, !dbg !17360
  %20 = load i32, i32* %status, align 4, !dbg !17361
  %cmp38 = icmp slt i32 %20, 0, !dbg !17363
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !17364

if.then39:                                        ; preds = %if.end36
  br label %error, !dbg !17365

if.end40:                                         ; preds = %if.end36
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17366
  %call41 = call i32 @write16(%struct.drxk_state* %21, i32 29622338, i16 zeroext 12) #9, !dbg !17367
  store i32 %call41, i32* %status, align 4, !dbg !17368
  br label %error, !dbg !17369

error:                                            ; preds = %if.end40, %if.then39, %if.then35, %if.then31, %if.then27, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3
  call void @llvm.dbg.label(metadata !17370), !dbg !17371
  %22 = load i32, i32* %status, align 4, !dbg !17372
  %cmp42 = icmp slt i32 %22, 0, !dbg !17374
  br i1 %cmp42, label %if.then43, label %if.end45, !dbg !17375

if.then43:                                        ; preds = %error
  %23 = load i32, i32* %status, align 4, !dbg !17376
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.mpegts_dto_init, i64 0, i64 0)) #8, !dbg !17376
  br label %if.end45, !dbg !17376

if.end45:                                         ; preds = %if.then43, %error
  %24 = load i32, i32* %status, align 4, !dbg !17377
  ret i32 %24, !dbg !17378
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mpegts_configure_polarity(%struct.drxk_state* %state) #0 !dbg !17379 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %fec_oc_reg_ipr_invert = alloca i16, align 2
  %invert_data_mask = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !17380, metadata !DIExpression()), !dbg !17381
  call void @llvm.dbg.declare(metadata i16* %fec_oc_reg_ipr_invert, metadata !17382, metadata !DIExpression()), !dbg !17383
  store i16 0, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17383
  call void @llvm.dbg.declare(metadata i16* %invert_data_mask, metadata !17384, metadata !DIExpression()), !dbg !17385
  store i16 255, i16* %invert_data_mask, align 2, !dbg !17385
  br label %do.body, !dbg !17386

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !17387
  %cmp = icmp uge i32 %0, 1, !dbg !17387
  br i1 %cmp, label %if.then, label %if.end, !dbg !17390

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.mpegts_configure_polarity, i64 0, i64 0)) #8, !dbg !17387
  br label %if.end, !dbg !17387

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !17390

do.end:                                           ; preds = %if.end
  %1 = load i16, i16* %invert_data_mask, align 2, !dbg !17391
  %conv = zext i16 %1 to i32, !dbg !17392
  %neg = xor i32 %conv, -1, !dbg !17393
  %2 = load i16, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17394
  %conv1 = zext i16 %2 to i32, !dbg !17394
  %and = and i32 %conv1, %neg, !dbg !17394
  %conv2 = trunc i32 %and to i16, !dbg !17394
  store i16 %conv2, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17394
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17395
  %m_invert_data = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 43, !dbg !17397
  %4 = load i8, i8* %m_invert_data, align 1, !dbg !17397
  %tobool = trunc i8 %4 to i1, !dbg !17397
  br i1 %tobool, label %if.then3, label %if.end7, !dbg !17398

if.then3:                                         ; preds = %do.end
  %5 = load i16, i16* %invert_data_mask, align 2, !dbg !17399
  %conv4 = zext i16 %5 to i32, !dbg !17399
  %6 = load i16, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17400
  %conv5 = zext i16 %6 to i32, !dbg !17400
  %or = or i32 %conv5, %conv4, !dbg !17400
  %conv6 = trunc i32 %or to i16, !dbg !17400
  store i16 %conv6, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17400
  br label %if.end7, !dbg !17401

if.end7:                                          ; preds = %if.then3, %do.end
  %7 = load i16, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17402
  %conv8 = zext i16 %7 to i32, !dbg !17402
  %and9 = and i32 %conv8, -257, !dbg !17402
  %conv10 = trunc i32 %and9 to i16, !dbg !17402
  store i16 %conv10, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17402
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17403
  %m_invert_err = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %8, i32 0, i32 44, !dbg !17405
  %9 = load i8, i8* %m_invert_err, align 8, !dbg !17405
  %tobool11 = trunc i8 %9 to i1, !dbg !17405
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !17406

if.then12:                                        ; preds = %if.end7
  %10 = load i16, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17407
  %conv13 = zext i16 %10 to i32, !dbg !17407
  %or14 = or i32 %conv13, 256, !dbg !17407
  %conv15 = trunc i32 %or14 to i16, !dbg !17407
  store i16 %conv15, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17407
  br label %if.end16, !dbg !17408

if.end16:                                         ; preds = %if.then12, %if.end7
  %11 = load i16, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17409
  %conv17 = zext i16 %11 to i32, !dbg !17409
  %and18 = and i32 %conv17, -513, !dbg !17409
  %conv19 = trunc i32 %and18 to i16, !dbg !17409
  store i16 %conv19, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17409
  %12 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17410
  %m_invert_str = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %12, i32 0, i32 45, !dbg !17412
  %13 = load i8, i8* %m_invert_str, align 1, !dbg !17412
  %tobool20 = trunc i8 %13 to i1, !dbg !17412
  br i1 %tobool20, label %if.then21, label %if.end25, !dbg !17413

if.then21:                                        ; preds = %if.end16
  %14 = load i16, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17414
  %conv22 = zext i16 %14 to i32, !dbg !17414
  %or23 = or i32 %conv22, 512, !dbg !17414
  %conv24 = trunc i32 %or23 to i16, !dbg !17414
  store i16 %conv24, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17414
  br label %if.end25, !dbg !17415

if.end25:                                         ; preds = %if.then21, %if.end16
  %15 = load i16, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17416
  %conv26 = zext i16 %15 to i32, !dbg !17416
  %and27 = and i32 %conv26, -1025, !dbg !17416
  %conv28 = trunc i32 %and27 to i16, !dbg !17416
  store i16 %conv28, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17416
  %16 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17417
  %m_invert_val = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %16, i32 0, i32 46, !dbg !17419
  %17 = load i8, i8* %m_invert_val, align 2, !dbg !17419
  %tobool29 = trunc i8 %17 to i1, !dbg !17419
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !17420

if.then30:                                        ; preds = %if.end25
  %18 = load i16, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17421
  %conv31 = zext i16 %18 to i32, !dbg !17421
  %or32 = or i32 %conv31, 1024, !dbg !17421
  %conv33 = trunc i32 %or32 to i16, !dbg !17421
  store i16 %conv33, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17421
  br label %if.end34, !dbg !17422

if.end34:                                         ; preds = %if.then30, %if.end25
  %19 = load i16, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17423
  %conv35 = zext i16 %19 to i32, !dbg !17423
  %and36 = and i32 %conv35, -2049, !dbg !17423
  %conv37 = trunc i32 %and36 to i16, !dbg !17423
  store i16 %conv37, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17423
  %20 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17424
  %m_invert_clk = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %20, i32 0, i32 47, !dbg !17426
  %21 = load i8, i8* %m_invert_clk, align 1, !dbg !17426
  %tobool38 = trunc i8 %21 to i1, !dbg !17426
  br i1 %tobool38, label %if.then39, label %if.end43, !dbg !17427

if.then39:                                        ; preds = %if.end34
  %22 = load i16, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17428
  %conv40 = zext i16 %22 to i32, !dbg !17428
  %or41 = or i32 %conv40, 2048, !dbg !17428
  %conv42 = trunc i32 %or41 to i16, !dbg !17428
  store i16 %conv42, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17428
  br label %if.end43, !dbg !17429

if.end43:                                         ; preds = %if.then39, %if.end34
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17430
  %24 = load i16, i16* %fec_oc_reg_ipr_invert, align 2, !dbg !17431
  %call44 = call i32 @write16(%struct.drxk_state* %23, i32 29622345, i16 zeroext %24) #9, !dbg !17432
  ret i32 %call44, !dbg !17433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mpegts_configure_pins(%struct.drxk_state* %state, i1 zeroext %mpeg_enable) #0 !dbg !17434 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %mpeg_enable.addr = alloca i8, align 1
  %status = alloca i32, align 4
  %sio_pdr_mclk_cfg = alloca i16, align 2
  %sio_pdr_mdx_cfg = alloca i16, align 2
  %err_cfg = alloca i16, align 2
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !17435, metadata !DIExpression()), !dbg !17436
  %frombool = zext i1 %mpeg_enable to i8
  store i8 %frombool, i8* %mpeg_enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mpeg_enable.addr, metadata !17437, metadata !DIExpression()), !dbg !17438
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17439, metadata !DIExpression()), !dbg !17440
  call void @llvm.dbg.declare(metadata i16* %sio_pdr_mclk_cfg, metadata !17441, metadata !DIExpression()), !dbg !17442
  store i16 0, i16* %sio_pdr_mclk_cfg, align 2, !dbg !17442
  call void @llvm.dbg.declare(metadata i16* %sio_pdr_mdx_cfg, metadata !17443, metadata !DIExpression()), !dbg !17444
  store i16 0, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17444
  call void @llvm.dbg.declare(metadata i16* %err_cfg, metadata !17445, metadata !DIExpression()), !dbg !17446
  store i16 0, i16* %err_cfg, align 2, !dbg !17446
  br label %do.body, !dbg !17447

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !17448
  %cmp = icmp uge i32 %0, 1, !dbg !17448
  br i1 %cmp, label %if.then, label %if.end, !dbg !17451

if.then:                                          ; preds = %do.body
  %1 = load i8, i8* %mpeg_enable.addr, align 1, !dbg !17448
  %tobool = trunc i8 %1 to i1, !dbg !17448
  %2 = zext i1 %tobool to i64, !dbg !17448
  %cond = select i1 %tobool, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.39, i64 0, i64 0), !dbg !17448
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17448
  %m_enable_parallel = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %3, i32 0, i32 42, !dbg !17448
  %4 = load i8, i8* %m_enable_parallel, align 2, !dbg !17448
  %tobool1 = trunc i8 %4 to i1, !dbg !17448
  %5 = zext i1 %tobool1 to i64, !dbg !17448
  %cond2 = select i1 %tobool1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i64 0, i64 0), !dbg !17448
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.mpegts_configure_pins, i64 0, i64 0), i8* %cond, i8* %cond2) #8, !dbg !17448
  br label %if.end, !dbg !17448

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !17451

do.end:                                           ; preds = %if.end
  %6 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17452
  %call3 = call i32 @write16(%struct.drxk_state* %6, i32 8593095, i16 zeroext 0) #9, !dbg !17453
  store i32 %call3, i32* %status, align 4, !dbg !17454
  %7 = load i32, i32* %status, align 4, !dbg !17455
  %cmp4 = icmp slt i32 %7, 0, !dbg !17457
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !17458

if.then5:                                         ; preds = %do.end
  br label %error, !dbg !17459

if.end6:                                          ; preds = %do.end
  %8 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17460
  %call7 = call i32 @write16(%struct.drxk_state* %8, i32 4259855, i16 zeroext -1350) #9, !dbg !17461
  store i32 %call7, i32* %status, align 4, !dbg !17462
  %9 = load i32, i32* %status, align 4, !dbg !17463
  %cmp8 = icmp slt i32 %9, 0, !dbg !17465
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !17466

if.then9:                                         ; preds = %if.end6
  br label %error, !dbg !17467

if.end10:                                         ; preds = %if.end6
  %10 = load i8, i8* %mpeg_enable.addr, align 1, !dbg !17468
  %tobool11 = trunc i8 %10 to i1, !dbg !17468
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !17470

if.then12:                                        ; preds = %if.end10
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17471
  %call13 = call i32 @write16(%struct.drxk_state* %11, i32 8323109, i16 zeroext 0) #9, !dbg !17473
  store i32 %call13, i32* %status, align 4, !dbg !17474
  %12 = load i32, i32* %status, align 4, !dbg !17475
  %cmp14 = icmp slt i32 %12, 0, !dbg !17477
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !17478

if.then15:                                        ; preds = %if.then12
  br label %error, !dbg !17479

if.end16:                                         ; preds = %if.then12
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17480
  %call17 = call i32 @write16(%struct.drxk_state* %13, i32 8323110, i16 zeroext 0) #9, !dbg !17481
  store i32 %call17, i32* %status, align 4, !dbg !17482
  %14 = load i32, i32* %status, align 4, !dbg !17483
  %cmp18 = icmp slt i32 %14, 0, !dbg !17485
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !17486

if.then19:                                        ; preds = %if.end16
  br label %error, !dbg !17487

if.end20:                                         ; preds = %if.end16
  %15 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17488
  %call21 = call i32 @write16(%struct.drxk_state* %15, i32 8323112, i16 zeroext 0) #9, !dbg !17489
  store i32 %call21, i32* %status, align 4, !dbg !17490
  %16 = load i32, i32* %status, align 4, !dbg !17491
  %cmp22 = icmp slt i32 %16, 0, !dbg !17493
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !17494

if.then23:                                        ; preds = %if.end20
  br label %error, !dbg !17495

if.end24:                                         ; preds = %if.end20
  %17 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17496
  %call25 = call i32 @write16(%struct.drxk_state* %17, i32 8323113, i16 zeroext 0) #9, !dbg !17497
  store i32 %call25, i32* %status, align 4, !dbg !17498
  %18 = load i32, i32* %status, align 4, !dbg !17499
  %cmp26 = icmp slt i32 %18, 0, !dbg !17501
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !17502

if.then27:                                        ; preds = %if.end24
  br label %error, !dbg !17503

if.end28:                                         ; preds = %if.end24
  %19 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17504
  %call29 = call i32 @write16(%struct.drxk_state* %19, i32 8323114, i16 zeroext 0) #9, !dbg !17505
  store i32 %call29, i32* %status, align 4, !dbg !17506
  %20 = load i32, i32* %status, align 4, !dbg !17507
  %cmp30 = icmp slt i32 %20, 0, !dbg !17509
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !17510

if.then31:                                        ; preds = %if.end28
  br label %error, !dbg !17511

if.end32:                                         ; preds = %if.end28
  %21 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17512
  %call33 = call i32 @write16(%struct.drxk_state* %21, i32 8323115, i16 zeroext 0) #9, !dbg !17513
  store i32 %call33, i32* %status, align 4, !dbg !17514
  %22 = load i32, i32* %status, align 4, !dbg !17515
  %cmp34 = icmp slt i32 %22, 0, !dbg !17517
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !17518

if.then35:                                        ; preds = %if.end32
  br label %error, !dbg !17519

if.end36:                                         ; preds = %if.end32
  %23 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17520
  %call37 = call i32 @write16(%struct.drxk_state* %23, i32 8323116, i16 zeroext 0) #9, !dbg !17521
  store i32 %call37, i32* %status, align 4, !dbg !17522
  %24 = load i32, i32* %status, align 4, !dbg !17523
  %cmp38 = icmp slt i32 %24, 0, !dbg !17525
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !17526

if.then39:                                        ; preds = %if.end36
  br label %error, !dbg !17527

if.end40:                                         ; preds = %if.end36
  %25 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17528
  %call41 = call i32 @write16(%struct.drxk_state* %25, i32 8323117, i16 zeroext 0) #9, !dbg !17529
  store i32 %call41, i32* %status, align 4, !dbg !17530
  %26 = load i32, i32* %status, align 4, !dbg !17531
  %cmp42 = icmp slt i32 %26, 0, !dbg !17533
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !17534

if.then43:                                        ; preds = %if.end40
  br label %error, !dbg !17535

if.end44:                                         ; preds = %if.end40
  %27 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17536
  %call45 = call i32 @write16(%struct.drxk_state* %27, i32 8323119, i16 zeroext 0) #9, !dbg !17537
  store i32 %call45, i32* %status, align 4, !dbg !17538
  %28 = load i32, i32* %status, align 4, !dbg !17539
  %cmp46 = icmp slt i32 %28, 0, !dbg !17541
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !17542

if.then47:                                        ; preds = %if.end44
  br label %error, !dbg !17543

if.end48:                                         ; preds = %if.end44
  %29 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17544
  %call49 = call i32 @write16(%struct.drxk_state* %29, i32 8323120, i16 zeroext 0) #9, !dbg !17545
  store i32 %call49, i32* %status, align 4, !dbg !17546
  %30 = load i32, i32* %status, align 4, !dbg !17547
  %cmp50 = icmp slt i32 %30, 0, !dbg !17549
  br i1 %cmp50, label %if.then51, label %if.end52, !dbg !17550

if.then51:                                        ; preds = %if.end48
  br label %error, !dbg !17551

if.end52:                                         ; preds = %if.end48
  %31 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17552
  %call53 = call i32 @write16(%struct.drxk_state* %31, i32 8323121, i16 zeroext 0) #9, !dbg !17553
  store i32 %call53, i32* %status, align 4, !dbg !17554
  %32 = load i32, i32* %status, align 4, !dbg !17555
  %cmp54 = icmp slt i32 %32, 0, !dbg !17557
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !17558

if.then55:                                        ; preds = %if.end52
  br label %error, !dbg !17559

if.end56:                                         ; preds = %if.end52
  %33 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17560
  %call57 = call i32 @write16(%struct.drxk_state* %33, i32 8323122, i16 zeroext 0) #9, !dbg !17561
  store i32 %call57, i32* %status, align 4, !dbg !17562
  %34 = load i32, i32* %status, align 4, !dbg !17563
  %cmp58 = icmp slt i32 %34, 0, !dbg !17565
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !17566

if.then59:                                        ; preds = %if.end56
  br label %error, !dbg !17567

if.end60:                                         ; preds = %if.end56
  br label %if.end174, !dbg !17568

if.else:                                          ; preds = %if.end10
  %35 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17569
  %m_ts_data_strength = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %35, i32 0, i32 52, !dbg !17571
  %36 = load i8, i8* %m_ts_data_strength, align 8, !dbg !17571
  %conv = zext i8 %36 to i32, !dbg !17569
  %shl = shl i32 %conv, 3, !dbg !17572
  %or = or i32 %shl, 3, !dbg !17573
  %conv61 = trunc i32 %or to i16, !dbg !17574
  store i16 %conv61, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17575
  %37 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17576
  %m_ts_clockk_strength = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %37, i32 0, i32 53, !dbg !17577
  %38 = load i8, i8* %m_ts_clockk_strength, align 1, !dbg !17577
  %conv62 = zext i8 %38 to i32, !dbg !17576
  %shl63 = shl i32 %conv62, 3, !dbg !17578
  %or64 = or i32 %shl63, 3, !dbg !17579
  %conv65 = trunc i32 %or64 to i16, !dbg !17580
  store i16 %conv65, i16* %sio_pdr_mclk_cfg, align 2, !dbg !17581
  %39 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17582
  %40 = load i16, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17583
  %call66 = call i32 @write16(%struct.drxk_state* %39, i32 8323109, i16 zeroext %40) #9, !dbg !17584
  store i32 %call66, i32* %status, align 4, !dbg !17585
  %41 = load i32, i32* %status, align 4, !dbg !17586
  %cmp67 = icmp slt i32 %41, 0, !dbg !17588
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !17589

if.then69:                                        ; preds = %if.else
  br label %error, !dbg !17590

if.end70:                                         ; preds = %if.else
  %42 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17591
  %enable_merr_cfg = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %42, i32 0, i32 101, !dbg !17593
  %43 = load i8, i8* %enable_merr_cfg, align 4, !dbg !17593
  %tobool71 = trunc i8 %43 to i1, !dbg !17593
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !17594

if.then72:                                        ; preds = %if.end70
  %44 = load i16, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17595
  store i16 %44, i16* %err_cfg, align 2, !dbg !17596
  br label %if.end73, !dbg !17597

if.end73:                                         ; preds = %if.then72, %if.end70
  %45 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17598
  %46 = load i16, i16* %err_cfg, align 2, !dbg !17599
  %call74 = call i32 @write16(%struct.drxk_state* %45, i32 8323110, i16 zeroext %46) #9, !dbg !17600
  store i32 %call74, i32* %status, align 4, !dbg !17601
  %47 = load i32, i32* %status, align 4, !dbg !17602
  %cmp75 = icmp slt i32 %47, 0, !dbg !17604
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !17605

if.then77:                                        ; preds = %if.end73
  br label %error, !dbg !17606

if.end78:                                         ; preds = %if.end73
  %48 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17607
  %49 = load i16, i16* %err_cfg, align 2, !dbg !17608
  %call79 = call i32 @write16(%struct.drxk_state* %48, i32 8323113, i16 zeroext %49) #9, !dbg !17609
  store i32 %call79, i32* %status, align 4, !dbg !17610
  %50 = load i32, i32* %status, align 4, !dbg !17611
  %cmp80 = icmp slt i32 %50, 0, !dbg !17613
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !17614

if.then82:                                        ; preds = %if.end78
  br label %error, !dbg !17615

if.end83:                                         ; preds = %if.end78
  %51 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17616
  %m_enable_parallel84 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %51, i32 0, i32 42, !dbg !17618
  %52 = load i8, i8* %m_enable_parallel84, align 2, !dbg !17618
  %tobool85 = trunc i8 %52 to i1, !dbg !17618
  br i1 %tobool85, label %if.then86, label %if.else122, !dbg !17619

if.then86:                                        ; preds = %if.end83
  %53 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17620
  %54 = load i16, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17622
  %call87 = call i32 @write16(%struct.drxk_state* %53, i32 8323115, i16 zeroext %54) #9, !dbg !17623
  store i32 %call87, i32* %status, align 4, !dbg !17624
  %55 = load i32, i32* %status, align 4, !dbg !17625
  %cmp88 = icmp slt i32 %55, 0, !dbg !17627
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !17628

if.then90:                                        ; preds = %if.then86
  br label %error, !dbg !17629

if.end91:                                         ; preds = %if.then86
  %56 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17630
  %57 = load i16, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17631
  %call92 = call i32 @write16(%struct.drxk_state* %56, i32 8323116, i16 zeroext %57) #9, !dbg !17632
  store i32 %call92, i32* %status, align 4, !dbg !17633
  %58 = load i32, i32* %status, align 4, !dbg !17634
  %cmp93 = icmp slt i32 %58, 0, !dbg !17636
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !17637

if.then95:                                        ; preds = %if.end91
  br label %error, !dbg !17638

if.end96:                                         ; preds = %if.end91
  %59 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17639
  %60 = load i16, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17640
  %call97 = call i32 @write16(%struct.drxk_state* %59, i32 8323117, i16 zeroext %60) #9, !dbg !17641
  store i32 %call97, i32* %status, align 4, !dbg !17642
  %61 = load i32, i32* %status, align 4, !dbg !17643
  %cmp98 = icmp slt i32 %61, 0, !dbg !17645
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !17646

if.then100:                                       ; preds = %if.end96
  br label %error, !dbg !17647

if.end101:                                        ; preds = %if.end96
  %62 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17648
  %63 = load i16, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17649
  %call102 = call i32 @write16(%struct.drxk_state* %62, i32 8323119, i16 zeroext %63) #9, !dbg !17650
  store i32 %call102, i32* %status, align 4, !dbg !17651
  %64 = load i32, i32* %status, align 4, !dbg !17652
  %cmp103 = icmp slt i32 %64, 0, !dbg !17654
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !17655

if.then105:                                       ; preds = %if.end101
  br label %error, !dbg !17656

if.end106:                                        ; preds = %if.end101
  %65 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17657
  %66 = load i16, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17658
  %call107 = call i32 @write16(%struct.drxk_state* %65, i32 8323120, i16 zeroext %66) #9, !dbg !17659
  store i32 %call107, i32* %status, align 4, !dbg !17660
  %67 = load i32, i32* %status, align 4, !dbg !17661
  %cmp108 = icmp slt i32 %67, 0, !dbg !17663
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !17664

if.then110:                                       ; preds = %if.end106
  br label %error, !dbg !17665

if.end111:                                        ; preds = %if.end106
  %68 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17666
  %69 = load i16, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17667
  %call112 = call i32 @write16(%struct.drxk_state* %68, i32 8323121, i16 zeroext %69) #9, !dbg !17668
  store i32 %call112, i32* %status, align 4, !dbg !17669
  %70 = load i32, i32* %status, align 4, !dbg !17670
  %cmp113 = icmp slt i32 %70, 0, !dbg !17672
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !17673

if.then115:                                       ; preds = %if.end111
  br label %error, !dbg !17674

if.end116:                                        ; preds = %if.end111
  %71 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17675
  %72 = load i16, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17676
  %call117 = call i32 @write16(%struct.drxk_state* %71, i32 8323122, i16 zeroext %72) #9, !dbg !17677
  store i32 %call117, i32* %status, align 4, !dbg !17678
  %73 = load i32, i32* %status, align 4, !dbg !17679
  %cmp118 = icmp slt i32 %73, 0, !dbg !17681
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !17682

if.then120:                                       ; preds = %if.end116
  br label %error, !dbg !17683

if.end121:                                        ; preds = %if.end116
  br label %if.end163, !dbg !17684

if.else122:                                       ; preds = %if.end83
  %74 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17685
  %m_ts_data_strength123 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %74, i32 0, i32 52, !dbg !17687
  %75 = load i8, i8* %m_ts_data_strength123, align 8, !dbg !17687
  %conv124 = zext i8 %75 to i32, !dbg !17685
  %shl125 = shl i32 %conv124, 3, !dbg !17688
  %or126 = or i32 %shl125, 3, !dbg !17689
  %conv127 = trunc i32 %or126 to i16, !dbg !17690
  store i16 %conv127, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17691
  %76 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17692
  %call128 = call i32 @write16(%struct.drxk_state* %76, i32 8323115, i16 zeroext 0) #9, !dbg !17693
  store i32 %call128, i32* %status, align 4, !dbg !17694
  %77 = load i32, i32* %status, align 4, !dbg !17695
  %cmp129 = icmp slt i32 %77, 0, !dbg !17697
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !17698

if.then131:                                       ; preds = %if.else122
  br label %error, !dbg !17699

if.end132:                                        ; preds = %if.else122
  %78 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17700
  %call133 = call i32 @write16(%struct.drxk_state* %78, i32 8323116, i16 zeroext 0) #9, !dbg !17701
  store i32 %call133, i32* %status, align 4, !dbg !17702
  %79 = load i32, i32* %status, align 4, !dbg !17703
  %cmp134 = icmp slt i32 %79, 0, !dbg !17705
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !17706

if.then136:                                       ; preds = %if.end132
  br label %error, !dbg !17707

if.end137:                                        ; preds = %if.end132
  %80 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17708
  %call138 = call i32 @write16(%struct.drxk_state* %80, i32 8323117, i16 zeroext 0) #9, !dbg !17709
  store i32 %call138, i32* %status, align 4, !dbg !17710
  %81 = load i32, i32* %status, align 4, !dbg !17711
  %cmp139 = icmp slt i32 %81, 0, !dbg !17713
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !17714

if.then141:                                       ; preds = %if.end137
  br label %error, !dbg !17715

if.end142:                                        ; preds = %if.end137
  %82 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17716
  %call143 = call i32 @write16(%struct.drxk_state* %82, i32 8323119, i16 zeroext 0) #9, !dbg !17717
  store i32 %call143, i32* %status, align 4, !dbg !17718
  %83 = load i32, i32* %status, align 4, !dbg !17719
  %cmp144 = icmp slt i32 %83, 0, !dbg !17721
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !17722

if.then146:                                       ; preds = %if.end142
  br label %error, !dbg !17723

if.end147:                                        ; preds = %if.end142
  %84 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17724
  %call148 = call i32 @write16(%struct.drxk_state* %84, i32 8323120, i16 zeroext 0) #9, !dbg !17725
  store i32 %call148, i32* %status, align 4, !dbg !17726
  %85 = load i32, i32* %status, align 4, !dbg !17727
  %cmp149 = icmp slt i32 %85, 0, !dbg !17729
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !17730

if.then151:                                       ; preds = %if.end147
  br label %error, !dbg !17731

if.end152:                                        ; preds = %if.end147
  %86 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17732
  %call153 = call i32 @write16(%struct.drxk_state* %86, i32 8323121, i16 zeroext 0) #9, !dbg !17733
  store i32 %call153, i32* %status, align 4, !dbg !17734
  %87 = load i32, i32* %status, align 4, !dbg !17735
  %cmp154 = icmp slt i32 %87, 0, !dbg !17737
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !17738

if.then156:                                       ; preds = %if.end152
  br label %error, !dbg !17739

if.end157:                                        ; preds = %if.end152
  %88 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17740
  %call158 = call i32 @write16(%struct.drxk_state* %88, i32 8323122, i16 zeroext 0) #9, !dbg !17741
  store i32 %call158, i32* %status, align 4, !dbg !17742
  %89 = load i32, i32* %status, align 4, !dbg !17743
  %cmp159 = icmp slt i32 %89, 0, !dbg !17745
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !17746

if.then161:                                       ; preds = %if.end157
  br label %error, !dbg !17747

if.end162:                                        ; preds = %if.end157
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.end121
  %90 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17748
  %91 = load i16, i16* %sio_pdr_mclk_cfg, align 2, !dbg !17749
  %call164 = call i32 @write16(%struct.drxk_state* %90, i32 8323112, i16 zeroext %91) #9, !dbg !17750
  store i32 %call164, i32* %status, align 4, !dbg !17751
  %92 = load i32, i32* %status, align 4, !dbg !17752
  %cmp165 = icmp slt i32 %92, 0, !dbg !17754
  br i1 %cmp165, label %if.then167, label %if.end168, !dbg !17755

if.then167:                                       ; preds = %if.end163
  br label %error, !dbg !17756

if.end168:                                        ; preds = %if.end163
  %93 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17757
  %94 = load i16, i16* %sio_pdr_mdx_cfg, align 2, !dbg !17758
  %call169 = call i32 @write16(%struct.drxk_state* %93, i32 8323114, i16 zeroext %94) #9, !dbg !17759
  store i32 %call169, i32* %status, align 4, !dbg !17760
  %95 = load i32, i32* %status, align 4, !dbg !17761
  %cmp170 = icmp slt i32 %95, 0, !dbg !17763
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !17764

if.then172:                                       ; preds = %if.end168
  br label %error, !dbg !17765

if.end173:                                        ; preds = %if.end168
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.end60
  %96 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17766
  %call175 = call i32 @write16(%struct.drxk_state* %96, i32 8323088, i16 zeroext 0) #9, !dbg !17767
  store i32 %call175, i32* %status, align 4, !dbg !17768
  %97 = load i32, i32* %status, align 4, !dbg !17769
  %cmp176 = icmp slt i32 %97, 0, !dbg !17771
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !17772

if.then178:                                       ; preds = %if.end174
  br label %error, !dbg !17773

if.end179:                                        ; preds = %if.end174
  %98 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17774
  %call180 = call i32 @write16(%struct.drxk_state* %98, i32 4259855, i16 zeroext 0) #9, !dbg !17775
  store i32 %call180, i32* %status, align 4, !dbg !17776
  br label %error, !dbg !17777

error:                                            ; preds = %if.end179, %if.then178, %if.then172, %if.then167, %if.then161, %if.then156, %if.then151, %if.then146, %if.then141, %if.then136, %if.then131, %if.then120, %if.then115, %if.then110, %if.then105, %if.then100, %if.then95, %if.then90, %if.then82, %if.then77, %if.then69, %if.then59, %if.then55, %if.then51, %if.then47, %if.then43, %if.then39, %if.then35, %if.then31, %if.then27, %if.then23, %if.then19, %if.then15, %if.then9, %if.then5
  call void @llvm.dbg.label(metadata !17778), !dbg !17779
  %99 = load i32, i32* %status, align 4, !dbg !17780
  %cmp181 = icmp slt i32 %99, 0, !dbg !17782
  br i1 %cmp181, label %if.then183, label %if.end185, !dbg !17783

if.then183:                                       ; preds = %error
  %100 = load i32, i32* %status, align 4, !dbg !17784
  %call184 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %100, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.mpegts_configure_pins, i64 0, i64 0)) #8, !dbg !17784
  br label %if.end185, !dbg !17784

if.end185:                                        ; preds = %if.then183, %error
  %101 = load i32, i32* %status, align 4, !dbg !17785
  ret i32 %101, !dbg !17786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @power_down_device(%struct.drxk_state* %state) #0 !dbg !17787 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %status = alloca i32, align 4
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !17788, metadata !DIExpression()), !dbg !17789
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17790, metadata !DIExpression()), !dbg !17791
  br label %do.body, !dbg !17792

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !17793
  %cmp = icmp uge i32 %0, 1, !dbg !17793
  br i1 %cmp, label %if.then, label %if.end, !dbg !17796

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.power_down_device, i64 0, i64 0)) #8, !dbg !17793
  br label %if.end, !dbg !17793

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !17796

do.end:                                           ; preds = %if.end
  %1 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17797
  %m_b_p_down_open_bridge = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %1, i32 0, i32 37, !dbg !17799
  %2 = load i8, i8* %m_b_p_down_open_bridge, align 2, !dbg !17799
  %tobool = trunc i8 %2 to i1, !dbg !17799
  br i1 %tobool, label %if.then1, label %if.end6, !dbg !17800

if.then1:                                         ; preds = %do.end
  %3 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17801
  %call2 = call i32 @ConfigureI2CBridge(%struct.drxk_state* %3, i1 zeroext true) #9, !dbg !17803
  store i32 %call2, i32* %status, align 4, !dbg !17804
  %4 = load i32, i32* %status, align 4, !dbg !17805
  %cmp3 = icmp slt i32 %4, 0, !dbg !17807
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !17808

if.then4:                                         ; preds = %if.then1
  br label %error, !dbg !17809

if.end5:                                          ; preds = %if.then1
  br label %if.end6, !dbg !17810

if.end6:                                          ; preds = %if.end5, %do.end
  %5 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17811
  %call7 = call i32 @dvbt_enable_ofdm_token_ring(%struct.drxk_state* %5, i1 zeroext false) #9, !dbg !17812
  store i32 %call7, i32* %status, align 4, !dbg !17813
  %6 = load i32, i32* %status, align 4, !dbg !17814
  %cmp8 = icmp slt i32 %6, 0, !dbg !17816
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !17817

if.then9:                                         ; preds = %if.end6
  br label %error, !dbg !17818

if.end10:                                         ; preds = %if.end6
  %7 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17819
  %call11 = call i32 @write16(%struct.drxk_state* %7, i32 4522005, i16 zeroext 2) #9, !dbg !17820
  store i32 %call11, i32* %status, align 4, !dbg !17821
  %8 = load i32, i32* %status, align 4, !dbg !17822
  %cmp12 = icmp slt i32 %8, 0, !dbg !17824
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !17825

if.then13:                                        ; preds = %if.end10
  br label %error, !dbg !17826

if.end14:                                         ; preds = %if.end10
  %9 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17827
  %call15 = call i32 @write16(%struct.drxk_state* %9, i32 4522007, i16 zeroext -1350) #9, !dbg !17828
  store i32 %call15, i32* %status, align 4, !dbg !17829
  %10 = load i32, i32* %status, align 4, !dbg !17830
  %cmp16 = icmp slt i32 %10, 0, !dbg !17832
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !17833

if.then17:                                        ; preds = %if.end14
  br label %error, !dbg !17834

if.end18:                                         ; preds = %if.end14
  %11 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17835
  %m_hi_cfg_ctrl = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %11, i32 0, i32 25, !dbg !17836
  %12 = load i16, i16* %m_hi_cfg_ctrl, align 4, !dbg !17837
  %conv = zext i16 %12 to i32, !dbg !17837
  %or = or i32 %conv, 8, !dbg !17837
  %conv19 = trunc i32 %or to i16, !dbg !17837
  store i16 %conv19, i16* %m_hi_cfg_ctrl, align 4, !dbg !17837
  %13 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17838
  %call20 = call i32 @hi_cfg_command(%struct.drxk_state* %13) #9, !dbg !17839
  store i32 %call20, i32* %status, align 4, !dbg !17840
  br label %error, !dbg !17841

error:                                            ; preds = %if.end18, %if.then17, %if.then13, %if.then9, %if.then4
  call void @llvm.dbg.label(metadata !17842), !dbg !17843
  %14 = load i32, i32* %status, align 4, !dbg !17844
  %cmp21 = icmp slt i32 %14, 0, !dbg !17846
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !17847

if.then23:                                        ; preds = %error
  %15 = load i32, i32* %status, align 4, !dbg !17848
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i32 %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.power_down_device, i64 0, i64 0)) #8, !dbg !17848
  br label %if.end25, !dbg !17848

if.end25:                                         ; preds = %if.then23, %error
  %16 = load i32, i32* %status, align 4, !dbg !17849
  ret i32 %16, !dbg !17850
}

; Function Attrs: noredzone
declare dso_local i64 @strlcat(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drxk_i2c_unlock(%struct.drxk_state* %state) #0 !dbg !17851 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !17854, metadata !DIExpression()), !dbg !17855
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17856
  %drxk_i2c_exclusive_lock = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %0, i32 0, i32 99, !dbg !17858
  %1 = load i8, i8* %drxk_i2c_exclusive_lock, align 8, !dbg !17858
  %tobool = trunc i8 %1 to i1, !dbg !17858
  br i1 %tobool, label %if.end, label %if.then, !dbg !17859

if.then:                                          ; preds = %entry
  br label %return, !dbg !17860

if.end:                                           ; preds = %entry
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17861
  %i2c = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 3, !dbg !17862
  %3 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !17862
  call void @i2c_unlock_bus(%struct.i2c_adapter* %3, i32 2) #9, !dbg !17863
  %4 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17864
  %drxk_i2c_exclusive_lock1 = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %4, i32 0, i32 99, !dbg !17865
  store i8 0, i8* %drxk_i2c_exclusive_lock1, align 8, !dbg !17866
  br label %return, !dbg !17867

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !17867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @i2c_lock_bus(%struct.i2c_adapter* %adapter, i32 %flags) #0 !dbg !17868 {
entry:
  %adapter.addr = alloca %struct.i2c_adapter*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.i2c_adapter* %adapter, %struct.i2c_adapter** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %adapter.addr, metadata !17869, metadata !DIExpression()), !dbg !17870
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17871, metadata !DIExpression()), !dbg !17872
  %0 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter.addr, align 8, !dbg !17873
  %lock_ops = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %0, i32 0, i32 4, !dbg !17874
  %1 = load %struct.i2c_lock_operations*, %struct.i2c_lock_operations** %lock_ops, align 8, !dbg !17874
  %lock_bus = getelementptr inbounds %struct.i2c_lock_operations, %struct.i2c_lock_operations* %1, i32 0, i32 0, !dbg !17875
  %2 = load void (%struct.i2c_adapter*, i32)*, void (%struct.i2c_adapter*, i32)** %lock_bus, align 8, !dbg !17875
  %3 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter.addr, align 8, !dbg !17876
  %4 = load i32, i32* %flags.addr, align 4, !dbg !17877
  call void %2(%struct.i2c_adapter* %3, i32 %4) #9, !dbg !17873
  ret void, !dbg !17878
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @read32(%struct.drxk_state* %state, i32 %reg, i32* %data) #0 !dbg !17879 {
entry:
  %state.addr = alloca %struct.drxk_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i32*, align 8
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !17882, metadata !DIExpression()), !dbg !17883
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !17884, metadata !DIExpression()), !dbg !17885
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !17886, metadata !DIExpression()), !dbg !17887
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17888
  %1 = load i32, i32* %reg.addr, align 4, !dbg !17889
  %2 = load i32*, i32** %data.addr, align 8, !dbg !17890
  %call = call i32 @read32_flags(%struct.drxk_state* %0, i32 %1, i32* %2, i8 zeroext 0) #9, !dbg !17891
  ret i32 %call, !dbg !17892
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @read32_flags(%struct.drxk_state* %state, i32 %reg, i32* %data, i8 zeroext %flags) #0 !dbg !17893 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drxk_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i32*, align 8
  %flags.addr = alloca i8, align 1
  %status = alloca i32, align 4
  %adr = alloca i8, align 1
  %mm1 = alloca [4 x i8], align 1
  %mm2 = alloca [4 x i8], align 1
  %len = alloca i8, align 1
  store %struct.drxk_state* %state, %struct.drxk_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drxk_state** %state.addr, metadata !17896, metadata !DIExpression()), !dbg !17897
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !17898, metadata !DIExpression()), !dbg !17899
  store i32* %data, i32** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %data.addr, metadata !17900, metadata !DIExpression()), !dbg !17901
  store i8 %flags, i8* %flags.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %flags.addr, metadata !17902, metadata !DIExpression()), !dbg !17903
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17904, metadata !DIExpression()), !dbg !17905
  call void @llvm.dbg.declare(metadata i8* %adr, metadata !17906, metadata !DIExpression()), !dbg !17907
  %0 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17908
  %demod_address = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %0, i32 0, i32 4, !dbg !17909
  %1 = load i8, i8* %demod_address, align 8, !dbg !17909
  store i8 %1, i8* %adr, align 1, !dbg !17907
  call void @llvm.dbg.declare(metadata [4 x i8]* %mm1, metadata !17910, metadata !DIExpression()), !dbg !17911
  call void @llvm.dbg.declare(metadata [4 x i8]* %mm2, metadata !17912, metadata !DIExpression()), !dbg !17913
  call void @llvm.dbg.declare(metadata i8* %len, metadata !17914, metadata !DIExpression()), !dbg !17915
  %2 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17916
  %single_master = getelementptr inbounds %struct.drxk_state, %struct.drxk_state* %2, i32 0, i32 102, !dbg !17918
  %3 = load i8, i8* %single_master, align 1, !dbg !17918
  %tobool = trunc i8 %3 to i1, !dbg !17918
  br i1 %tobool, label %if.then, label %if.end, !dbg !17919

if.then:                                          ; preds = %entry
  %4 = load i8, i8* %flags.addr, align 1, !dbg !17920
  %conv = zext i8 %4 to i32, !dbg !17920
  %or = or i32 %conv, 192, !dbg !17920
  %conv1 = trunc i32 %or to i8, !dbg !17920
  store i8 %conv1, i8* %flags.addr, align 1, !dbg !17920
  br label %if.end, !dbg !17921

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %reg.addr, align 4, !dbg !17922
  %and = and i32 %5, -63897728, !dbg !17922
  %cmp = icmp ne i32 %and, 0, !dbg !17922
  br i1 %cmp, label %if.then6, label %lor.lhs.false, !dbg !17924

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i8, i8* %flags.addr, align 1, !dbg !17925
  %conv3 = zext i8 %6 to i32, !dbg !17925
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !17926
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !17927

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %reg.addr, align 4, !dbg !17928
  %shl = shl i32 %7, 1, !dbg !17930
  %and7 = and i32 %shl, 255, !dbg !17931
  %or8 = or i32 %and7, 1, !dbg !17932
  %conv9 = trunc i32 %or8 to i8, !dbg !17933
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 0, !dbg !17934
  store i8 %conv9, i8* %arrayidx, align 1, !dbg !17935
  %8 = load i32, i32* %reg.addr, align 4, !dbg !17936
  %shr = lshr i32 %8, 16, !dbg !17937
  %and10 = and i32 %shr, 255, !dbg !17938
  %conv11 = trunc i32 %and10 to i8, !dbg !17939
  %arrayidx12 = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 1, !dbg !17940
  store i8 %conv11, i8* %arrayidx12, align 1, !dbg !17941
  %9 = load i32, i32* %reg.addr, align 4, !dbg !17942
  %shr13 = lshr i32 %9, 24, !dbg !17943
  %and14 = and i32 %shr13, 255, !dbg !17944
  %10 = load i8, i8* %flags.addr, align 1, !dbg !17945
  %conv15 = zext i8 %10 to i32, !dbg !17945
  %or16 = or i32 %and14, %conv15, !dbg !17946
  %conv17 = trunc i32 %or16 to i8, !dbg !17947
  %arrayidx18 = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 2, !dbg !17948
  store i8 %conv17, i8* %arrayidx18, align 1, !dbg !17949
  %11 = load i32, i32* %reg.addr, align 4, !dbg !17950
  %shr19 = lshr i32 %11, 7, !dbg !17951
  %and20 = and i32 %shr19, 255, !dbg !17952
  %conv21 = trunc i32 %and20 to i8, !dbg !17953
  %arrayidx22 = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 3, !dbg !17954
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !17955
  store i8 4, i8* %len, align 1, !dbg !17956
  br label %if.end34, !dbg !17957

if.else:                                          ; preds = %lor.lhs.false
  %12 = load i32, i32* %reg.addr, align 4, !dbg !17958
  %shl23 = shl i32 %12, 1, !dbg !17960
  %and24 = and i32 %shl23, 255, !dbg !17961
  %conv25 = trunc i32 %and24 to i8, !dbg !17962
  %arrayidx26 = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 0, !dbg !17963
  store i8 %conv25, i8* %arrayidx26, align 1, !dbg !17964
  %13 = load i32, i32* %reg.addr, align 4, !dbg !17965
  %shr27 = lshr i32 %13, 16, !dbg !17966
  %and28 = and i32 %shr27, 15, !dbg !17967
  %14 = load i32, i32* %reg.addr, align 4, !dbg !17968
  %shr29 = lshr i32 %14, 18, !dbg !17969
  %and30 = and i32 %shr29, 240, !dbg !17970
  %or31 = or i32 %and28, %and30, !dbg !17971
  %conv32 = trunc i32 %or31 to i8, !dbg !17972
  %arrayidx33 = getelementptr [4 x i8], [4 x i8]* %mm1, i64 0, i64 1, !dbg !17973
  store i8 %conv32, i8* %arrayidx33, align 1, !dbg !17974
  store i8 2, i8* %len, align 1, !dbg !17975
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then6
  br label %do.body, !dbg !17976

do.body:                                          ; preds = %if.end34
  %15 = load i32, i32* @debug, align 4, !dbg !17977
  %cmp35 = icmp uge i32 %15, 2, !dbg !17977
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !17980

if.then37:                                        ; preds = %do.body
  %16 = load i32, i32* %reg.addr, align 4, !dbg !17977
  %17 = load i8, i8* %flags.addr, align 1, !dbg !17977
  %conv38 = zext i8 %17 to i32, !dbg !17977
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.read32_flags, i64 0, i64 0), i32 %16, i32 %conv38) #8, !dbg !17977
  br label %if.end39, !dbg !17977

if.end39:                                         ; preds = %if.then37, %do.body
  br label %do.end, !dbg !17980

do.end:                                           ; preds = %if.end39
  %18 = load %struct.drxk_state*, %struct.drxk_state** %state.addr, align 8, !dbg !17981
  %19 = load i8, i8* %adr, align 1, !dbg !17982
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %mm1, i64 0, i64 0, !dbg !17983
  %20 = load i8, i8* %len, align 1, !dbg !17984
  %conv40 = zext i8 %20 to i32, !dbg !17984
  %arraydecay41 = getelementptr inbounds [4 x i8], [4 x i8]* %mm2, i64 0, i64 0, !dbg !17985
  %call42 = call i32 @i2c_read(%struct.drxk_state* %18, i8 zeroext %19, i8* %arraydecay, i32 %conv40, i8* %arraydecay41, i32 4) #9, !dbg !17986
  store i32 %call42, i32* %status, align 4, !dbg !17987
  %21 = load i32, i32* %status, align 4, !dbg !17988
  %cmp43 = icmp slt i32 %21, 0, !dbg !17990
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !17991

if.then45:                                        ; preds = %do.end
  %22 = load i32, i32* %status, align 4, !dbg !17992
  store i32 %22, i32* %retval, align 4, !dbg !17993
  br label %return, !dbg !17993

if.end46:                                         ; preds = %do.end
  %23 = load i32*, i32** %data.addr, align 8, !dbg !17994
  %tobool47 = icmp ne i32* %23, null, !dbg !17994
  br i1 %tobool47, label %if.then48, label %if.end63, !dbg !17996

if.then48:                                        ; preds = %if.end46
  %arrayidx49 = getelementptr [4 x i8], [4 x i8]* %mm2, i64 0, i64 0, !dbg !17997
  %24 = load i8, i8* %arrayidx49, align 1, !dbg !17997
  %conv50 = zext i8 %24 to i32, !dbg !17997
  %arrayidx51 = getelementptr [4 x i8], [4 x i8]* %mm2, i64 0, i64 1, !dbg !17998
  %25 = load i8, i8* %arrayidx51, align 1, !dbg !17998
  %conv52 = zext i8 %25 to i32, !dbg !17998
  %shl53 = shl i32 %conv52, 8, !dbg !17999
  %or54 = or i32 %conv50, %shl53, !dbg !18000
  %arrayidx55 = getelementptr [4 x i8], [4 x i8]* %mm2, i64 0, i64 2, !dbg !18001
  %26 = load i8, i8* %arrayidx55, align 1, !dbg !18001
  %conv56 = zext i8 %26 to i32, !dbg !18001
  %shl57 = shl i32 %conv56, 16, !dbg !18002
  %or58 = or i32 %or54, %shl57, !dbg !18003
  %arrayidx59 = getelementptr [4 x i8], [4 x i8]* %mm2, i64 0, i64 3, !dbg !18004
  %27 = load i8, i8* %arrayidx59, align 1, !dbg !18004
  %conv60 = zext i8 %27 to i32, !dbg !18004
  %shl61 = shl i32 %conv60, 24, !dbg !18005
  %or62 = or i32 %or58, %shl61, !dbg !18006
  %28 = load i32*, i32** %data.addr, align 8, !dbg !18007
  store i32 %or62, i32* %28, align 4, !dbg !18008
  br label %if.end63, !dbg !18009

if.end63:                                         ; preds = %if.then48, %if.end46
  store i32 0, i32* %retval, align 4, !dbg !18010
  br label %return, !dbg !18010

return:                                           ; preds = %if.end63, %if.then45
  %29 = load i32, i32* %retval, align 4, !dbg !18011
  ret i32 %29, !dbg !18011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @i2c_unlock_bus(%struct.i2c_adapter* %adapter, i32 %flags) #0 !dbg !18012 {
entry:
  %adapter.addr = alloca %struct.i2c_adapter*, align 8
  %flags.addr = alloca i32, align 4
  store %struct.i2c_adapter* %adapter, %struct.i2c_adapter** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %adapter.addr, metadata !18013, metadata !DIExpression()), !dbg !18014
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !18015, metadata !DIExpression()), !dbg !18016
  %0 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter.addr, align 8, !dbg !18017
  %lock_ops = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %0, i32 0, i32 4, !dbg !18018
  %1 = load %struct.i2c_lock_operations*, %struct.i2c_lock_operations** %lock_ops, align 8, !dbg !18018
  %unlock_bus = getelementptr inbounds %struct.i2c_lock_operations, %struct.i2c_lock_operations* %1, i32 0, i32 2, !dbg !18019
  %2 = load void (%struct.i2c_adapter*, i32)*, void (%struct.i2c_adapter*, i32)** %unlock_bus, align 8, !dbg !18019
  %3 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter.addr, align 8, !dbg !18020
  %4 = load i32, i32* %flags.addr, align 4, !dbg !18021
  call void %2(%struct.i2c_adapter* %3, i32 %4) #9, !dbg !18017
  ret void, !dbg !18022
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noredzone }
attributes #9 = { noredzone }
attributes #10 = { nounwind }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }
attributes #13 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4550, !4551, !4552, !4553}
!llvm.ident = !{!4554}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_debug", scope: !2, file: !3, line: 150, type: !4547, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !395, globals: !413, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/media/dvb-frontends/drxk_hard.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !40, !50, !57, !73, !78, !82, !87, !102, !113, !126, !133, !138, !144, !165, !171, !175, !183, !190, !195, !201, !207, !216, !224, !230, !236, !243, !251, !257, !271, !283, !292, !299, !304, !308, !314, !328, !332, !338, !358, !363, !369, !376, !382, !389}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_caps", file: !6, line: 72, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/uapi/linux/dvb/frontend.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39}
!9 = !DIEnumerator(name: "FE_IS_STUPID", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "FE_CAN_INVERSION_AUTO", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "FE_CAN_FEC_1_2", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "FE_CAN_FEC_2_3", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "FE_CAN_FEC_3_4", value: 8, isUnsigned: true)
!14 = !DIEnumerator(name: "FE_CAN_FEC_4_5", value: 16, isUnsigned: true)
!15 = !DIEnumerator(name: "FE_CAN_FEC_5_6", value: 32, isUnsigned: true)
!16 = !DIEnumerator(name: "FE_CAN_FEC_6_7", value: 64, isUnsigned: true)
!17 = !DIEnumerator(name: "FE_CAN_FEC_7_8", value: 128, isUnsigned: true)
!18 = !DIEnumerator(name: "FE_CAN_FEC_8_9", value: 256, isUnsigned: true)
!19 = !DIEnumerator(name: "FE_CAN_FEC_AUTO", value: 512, isUnsigned: true)
!20 = !DIEnumerator(name: "FE_CAN_QPSK", value: 1024, isUnsigned: true)
!21 = !DIEnumerator(name: "FE_CAN_QAM_16", value: 2048, isUnsigned: true)
!22 = !DIEnumerator(name: "FE_CAN_QAM_32", value: 4096, isUnsigned: true)
!23 = !DIEnumerator(name: "FE_CAN_QAM_64", value: 8192, isUnsigned: true)
!24 = !DIEnumerator(name: "FE_CAN_QAM_128", value: 16384, isUnsigned: true)
!25 = !DIEnumerator(name: "FE_CAN_QAM_256", value: 32768, isUnsigned: true)
!26 = !DIEnumerator(name: "FE_CAN_QAM_AUTO", value: 65536, isUnsigned: true)
!27 = !DIEnumerator(name: "FE_CAN_TRANSMISSION_MODE_AUTO", value: 131072, isUnsigned: true)
!28 = !DIEnumerator(name: "FE_CAN_BANDWIDTH_AUTO", value: 262144, isUnsigned: true)
!29 = !DIEnumerator(name: "FE_CAN_GUARD_INTERVAL_AUTO", value: 524288, isUnsigned: true)
!30 = !DIEnumerator(name: "FE_CAN_HIERARCHY_AUTO", value: 1048576, isUnsigned: true)
!31 = !DIEnumerator(name: "FE_CAN_8VSB", value: 2097152, isUnsigned: true)
!32 = !DIEnumerator(name: "FE_CAN_16VSB", value: 4194304, isUnsigned: true)
!33 = !DIEnumerator(name: "FE_HAS_EXTENDED_CAPS", value: 8388608, isUnsigned: true)
!34 = !DIEnumerator(name: "FE_CAN_MULTISTREAM", value: 67108864, isUnsigned: true)
!35 = !DIEnumerator(name: "FE_CAN_TURBO_FEC", value: 134217728, isUnsigned: true)
!36 = !DIEnumerator(name: "FE_CAN_2G_MODULATION", value: 268435456, isUnsigned: true)
!37 = !DIEnumerator(name: "FE_NEEDS_BENDING", value: 536870912, isUnsigned: true)
!38 = !DIEnumerator(name: "FE_CAN_RECOVER", value: 1073741824, isUnsigned: true)
!39 = !DIEnumerator(name: "FE_CAN_MUTE_TS", value: 2147483648, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_status", file: !6, line: 252, baseType: !7, size: 32, elements: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !48, !49}
!42 = !DIEnumerator(name: "FE_NONE", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "FE_HAS_SIGNAL", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "FE_HAS_CARRIER", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "FE_HAS_VITERBI", value: 4, isUnsigned: true)
!46 = !DIEnumerator(name: "FE_HAS_SYNC", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "FE_HAS_LOCK", value: 16, isUnsigned: true)
!48 = !DIEnumerator(name: "FE_TIMEDOUT", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "FE_REINIT", value: 64, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvbfe_algo", file: !51, line: 144, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/media/dvb_frontend.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54, !55, !56}
!53 = !DIEnumerator(name: "DVBFE_ALGO_HW", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "DVBFE_ALGO_SW", value: 2, isUnsigned: true)
!55 = !DIEnumerator(name: "DVBFE_ALGO_CUSTOM", value: 4, isUnsigned: true)
!56 = !DIEnumerator(name: "DVBFE_ALGO_RECOVERY", value: 2147483648, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_modulation", file: !6, line: 338, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72}
!59 = !DIEnumerator(name: "QPSK", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "QAM_16", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "QAM_32", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "QAM_64", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "QAM_128", value: 4, isUnsigned: true)
!64 = !DIEnumerator(name: "QAM_256", value: 5, isUnsigned: true)
!65 = !DIEnumerator(name: "QAM_AUTO", value: 6, isUnsigned: true)
!66 = !DIEnumerator(name: "VSB_8", value: 7, isUnsigned: true)
!67 = !DIEnumerator(name: "VSB_16", value: 8, isUnsigned: true)
!68 = !DIEnumerator(name: "PSK_8", value: 9, isUnsigned: true)
!69 = !DIEnumerator(name: "APSK_16", value: 10, isUnsigned: true)
!70 = !DIEnumerator(name: "APSK_32", value: 11, isUnsigned: true)
!71 = !DIEnumerator(name: "DQPSK", value: 12, isUnsigned: true)
!72 = !DIEnumerator(name: "QAM_4_NR", value: 13, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_voltage", file: !6, line: 208, baseType: !7, size: 32, elements: !74)
!74 = !{!75, !76, !77}
!75 = !DIEnumerator(name: "SEC_VOLTAGE_13", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "SEC_VOLTAGE_18", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "SEC_VOLTAGE_OFF", value: 2, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_tone_mode", file: !6, line: 220, baseType: !7, size: 32, elements: !79)
!79 = !{!80, !81}
!80 = !DIEnumerator(name: "SEC_TONE_ON", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "SEC_TONE_OFF", value: 1, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_spectral_inversion", file: !6, line: 276, baseType: !7, size: 32, elements: !83)
!83 = !{!84, !85, !86}
!84 = !DIEnumerator(name: "INVERSION_OFF", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "INVERSION_ON", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "INVERSION_AUTO", value: 2, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_code_rate", file: !6, line: 302, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101}
!89 = !DIEnumerator(name: "FEC_NONE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "FEC_1_2", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "FEC_2_3", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "FEC_3_4", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "FEC_4_5", value: 4, isUnsigned: true)
!94 = !DIEnumerator(name: "FEC_5_6", value: 5, isUnsigned: true)
!95 = !DIEnumerator(name: "FEC_6_7", value: 6, isUnsigned: true)
!96 = !DIEnumerator(name: "FEC_7_8", value: 7, isUnsigned: true)
!97 = !DIEnumerator(name: "FEC_8_9", value: 8, isUnsigned: true)
!98 = !DIEnumerator(name: "FEC_AUTO", value: 9, isUnsigned: true)
!99 = !DIEnumerator(name: "FEC_3_5", value: 10, isUnsigned: true)
!100 = !DIEnumerator(name: "FEC_9_10", value: 11, isUnsigned: true)
!101 = !DIEnumerator(name: "FEC_2_5", value: 12, isUnsigned: true)
!102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_transmit_mode", file: !6, line: 381, baseType: !7, size: 32, elements: !103)
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112}
!104 = !DIEnumerator(name: "TRANSMISSION_MODE_2K", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "TRANSMISSION_MODE_8K", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "TRANSMISSION_MODE_AUTO", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TRANSMISSION_MODE_4K", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "TRANSMISSION_MODE_1K", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "TRANSMISSION_MODE_16K", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "TRANSMISSION_MODE_32K", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "TRANSMISSION_MODE_C1", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "TRANSMISSION_MODE_C3780", value: 8, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_guard_interval", file: !6, line: 410, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125}
!115 = !DIEnumerator(name: "GUARD_INTERVAL_1_32", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "GUARD_INTERVAL_1_16", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "GUARD_INTERVAL_1_8", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "GUARD_INTERVAL_1_4", value: 3, isUnsigned: true)
!119 = !DIEnumerator(name: "GUARD_INTERVAL_AUTO", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "GUARD_INTERVAL_1_128", value: 5, isUnsigned: true)
!121 = !DIEnumerator(name: "GUARD_INTERVAL_19_128", value: 6, isUnsigned: true)
!122 = !DIEnumerator(name: "GUARD_INTERVAL_19_256", value: 7, isUnsigned: true)
!123 = !DIEnumerator(name: "GUARD_INTERVAL_PN420", value: 8, isUnsigned: true)
!124 = !DIEnumerator(name: "GUARD_INTERVAL_PN595", value: 9, isUnsigned: true)
!125 = !DIEnumerator(name: "GUARD_INTERVAL_PN945", value: 10, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_hierarchy", file: !6, line: 434, baseType: !7, size: 32, elements: !127)
!127 = !{!128, !129, !130, !131, !132}
!128 = !DIEnumerator(name: "HIERARCHY_NONE", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "HIERARCHY_1", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "HIERARCHY_2", value: 2, isUnsigned: true)
!131 = !DIEnumerator(name: "HIERARCHY_4", value: 3, isUnsigned: true)
!132 = !DIEnumerator(name: "HIERARCHY_AUTO", value: 4, isUnsigned: true)
!133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_pilot", file: !6, line: 562, baseType: !7, size: 32, elements: !134)
!134 = !{!135, !136, !137}
!135 = !DIEnumerator(name: "PILOT_ON", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "PILOT_OFF", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "PILOT_AUTO", value: 2, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_rolloff", file: !6, line: 579, baseType: !7, size: 32, elements: !139)
!139 = !{!140, !141, !142, !143}
!140 = !DIEnumerator(name: "ROLLOFF_35", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "ROLLOFF_20", value: 1, isUnsigned: true)
!142 = !DIEnumerator(name: "ROLLOFF_25", value: 2, isUnsigned: true)
!143 = !DIEnumerator(name: "ROLLOFF_AUTO", value: 3, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_delivery_system", file: !6, line: 628, baseType: !7, size: 32, elements: !145)
!145 = !{!146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164}
!146 = !DIEnumerator(name: "SYS_UNDEFINED", value: 0, isUnsigned: true)
!147 = !DIEnumerator(name: "SYS_DVBC_ANNEX_A", value: 1, isUnsigned: true)
!148 = !DIEnumerator(name: "SYS_DVBC_ANNEX_B", value: 2, isUnsigned: true)
!149 = !DIEnumerator(name: "SYS_DVBT", value: 3, isUnsigned: true)
!150 = !DIEnumerator(name: "SYS_DSS", value: 4, isUnsigned: true)
!151 = !DIEnumerator(name: "SYS_DVBS", value: 5, isUnsigned: true)
!152 = !DIEnumerator(name: "SYS_DVBS2", value: 6, isUnsigned: true)
!153 = !DIEnumerator(name: "SYS_DVBH", value: 7, isUnsigned: true)
!154 = !DIEnumerator(name: "SYS_ISDBT", value: 8, isUnsigned: true)
!155 = !DIEnumerator(name: "SYS_ISDBS", value: 9, isUnsigned: true)
!156 = !DIEnumerator(name: "SYS_ISDBC", value: 10, isUnsigned: true)
!157 = !DIEnumerator(name: "SYS_ATSC", value: 11, isUnsigned: true)
!158 = !DIEnumerator(name: "SYS_ATSCMH", value: 12, isUnsigned: true)
!159 = !DIEnumerator(name: "SYS_DTMB", value: 13, isUnsigned: true)
!160 = !DIEnumerator(name: "SYS_CMMB", value: 14, isUnsigned: true)
!161 = !DIEnumerator(name: "SYS_DAB", value: 15, isUnsigned: true)
!162 = !DIEnumerator(name: "SYS_DVBT2", value: 16, isUnsigned: true)
!163 = !DIEnumerator(name: "SYS_TURBO", value: 17, isUnsigned: true)
!164 = !DIEnumerator(name: "SYS_DVBC_ANNEX_C", value: 18, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_interleaving", file: !6, line: 451, baseType: !7, size: 32, elements: !166)
!166 = !{!167, !168, !169, !170}
!167 = !DIEnumerator(name: "INTERLEAVING_NONE", value: 0, isUnsigned: true)
!168 = !DIEnumerator(name: "INTERLEAVING_AUTO", value: 1, isUnsigned: true)
!169 = !DIEnumerator(name: "INTERLEAVING_240", value: 2, isUnsigned: true)
!170 = !DIEnumerator(name: "INTERLEAVING_720", value: 3, isUnsigned: true)
!171 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_mini_cmd", file: !6, line: 233, baseType: !7, size: 32, elements: !172)
!172 = !{!173, !174}
!173 = !DIEnumerator(name: "SEC_MINI_A", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "SEC_MINI_B", value: 1, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvbfe_search", file: !51, line: 173, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181, !182}
!177 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_SUCCESS", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_ASLEEP", value: 2, isUnsigned: true)
!179 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_FAILED", value: 4, isUnsigned: true)
!180 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_INVALID", value: 8, isUnsigned: true)
!181 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_AGAIN", value: 16, isUnsigned: true)
!182 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_ERROR", value: 2147483648, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !184, line: 15, baseType: !7, size: 32, elements: !185)
!184 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!185 = !{!186, !187, !188, !189}
!186 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!187 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!188 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!189 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !191, line: 65, baseType: !7, size: 32, elements: !192)
!191 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!192 = !{!193, !194}
!193 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!194 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !196, line: 16, baseType: !7, size: 32, elements: !197)
!196 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!197 = !{!198, !199, !200}
!198 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !202, line: 54, baseType: !7, size: 32, elements: !203)
!202 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!203 = !{!204, !205, !206}
!204 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!205 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!206 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !208, line: 296, baseType: !7, size: 32, elements: !209)
!208 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!209 = !{!210, !211, !212, !213, !214, !215}
!210 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!211 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!212 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!213 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!214 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!215 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !217, line: 9, baseType: !7, size: 32, elements: !218)
!217 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!218 = !{!219, !220, !221, !222, !223}
!219 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!220 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!221 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!222 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!223 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!224 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !225, line: 26, baseType: !7, size: 32, elements: !226)
!225 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!226 = !{!227, !228, !229}
!227 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!228 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!230 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !231, line: 44, baseType: !7, size: 32, elements: !232)
!231 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!232 = !{!233, !234, !235}
!233 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!234 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!235 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!236 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !237, line: 343, baseType: !7, size: 32, elements: !238)
!237 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!238 = !{!239, !240, !241, !242}
!239 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!240 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!241 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!242 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!243 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !244, line: 524, baseType: !7, size: 32, elements: !245)
!244 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!245 = !{!246, !247, !248, !249, !250}
!246 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!247 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!248 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!249 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!250 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !244, line: 502, baseType: !7, size: 32, elements: !252)
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !258, line: 76, baseType: !7, size: 32, elements: !259)
!258 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!259 = !{!260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270}
!260 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!261 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!262 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!263 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!264 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!265 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!266 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!267 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!268 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!269 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!270 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!271 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvb_device_type", file: !272, line: 57, baseType: !7, size: 32, elements: !273)
!272 = !DIFile(filename: "./include/media/dvbdev.h", directory: "/home/lizy2001/genbc/linux")
!273 = !{!274, !275, !276, !277, !278, !279, !280, !281, !282}
!274 = !DIEnumerator(name: "DVB_DEVICE_SEC", value: 0, isUnsigned: true)
!275 = !DIEnumerator(name: "DVB_DEVICE_FRONTEND", value: 1, isUnsigned: true)
!276 = !DIEnumerator(name: "DVB_DEVICE_DEMUX", value: 2, isUnsigned: true)
!277 = !DIEnumerator(name: "DVB_DEVICE_DVR", value: 3, isUnsigned: true)
!278 = !DIEnumerator(name: "DVB_DEVICE_CA", value: 4, isUnsigned: true)
!279 = !DIEnumerator(name: "DVB_DEVICE_NET", value: 5, isUnsigned: true)
!280 = !DIEnumerator(name: "DVB_DEVICE_VIDEO", value: 6, isUnsigned: true)
!281 = !DIEnumerator(name: "DVB_DEVICE_AUDIO", value: 7, isUnsigned: true)
!282 = !DIEnumerator(name: "DVB_DEVICE_OSD", value: 8, isUnsigned: true)
!283 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "e_drxk_state", file: !284, line: 103, baseType: !7, size: 32, elements: !285)
!284 = !DIFile(filename: "drivers/media/dvb-frontends/drxk_hard.h", directory: "/home/lizy2001/genbc/linux")
!285 = !{!286, !287, !288, !289, !290, !291}
!286 = !DIEnumerator(name: "DRXK_UNINITIALIZED", value: 0, isUnsigned: true)
!287 = !DIEnumerator(name: "DRXK_STOPPED", value: 1, isUnsigned: true)
!288 = !DIEnumerator(name: "DRXK_DTV_STARTED", value: 2, isUnsigned: true)
!289 = !DIEnumerator(name: "DRXK_ATV_STARTED", value: 3, isUnsigned: true)
!290 = !DIEnumerator(name: "DRXK_POWERED_DOWN", value: 4, isUnsigned: true)
!291 = !DIEnumerator(name: "DRXK_NO_DEV", value: 5, isUnsigned: true)
!292 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "operation_mode", file: !284, line: 50, baseType: !7, size: 32, elements: !293)
!293 = !{!294, !295, !296, !297, !298}
!294 = !DIEnumerator(name: "OM_NONE", value: 0, isUnsigned: true)
!295 = !DIEnumerator(name: "OM_QAM_ITU_A", value: 1, isUnsigned: true)
!296 = !DIEnumerator(name: "OM_QAM_ITU_B", value: 2, isUnsigned: true)
!297 = !DIEnumerator(name: "OM_QAM_ITU_C", value: 3, isUnsigned: true)
!298 = !DIEnumerator(name: "OM_DVBT", value: 4, isUnsigned: true)
!299 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "agc_ctrl_mode", file: !284, line: 97, baseType: !7, size: 32, elements: !300)
!300 = !{!301, !302, !303}
!301 = !DIEnumerator(name: "DRXK_AGC_CTRL_AUTO", value: 0, isUnsigned: true)
!302 = !DIEnumerator(name: "DRXK_AGC_CTRL_USER", value: 1, isUnsigned: true)
!303 = !DIEnumerator(name: "DRXK_AGC_CTRL_OFF", value: 2, isUnsigned: true)
!304 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drxmpeg_str_width_t", file: !284, line: 168, baseType: !7, size: 32, elements: !305)
!305 = !{!306, !307}
!306 = !DIEnumerator(name: "DRX_MPEG_STR_WIDTH_1", value: 0, isUnsigned: true)
!307 = !DIEnumerator(name: "DRX_MPEG_STR_WIDTH_8", value: 1, isUnsigned: true)
!308 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "e_drxk_sif_attenuation", file: !284, line: 122, baseType: !7, size: 32, elements: !309)
!309 = !{!310, !311, !312, !313}
!310 = !DIEnumerator(name: "DRXK_SIF_ATTENUATION_0DB", value: 0, isUnsigned: true)
!311 = !DIEnumerator(name: "DRXK_SIF_ATTENUATION_3DB", value: 1, isUnsigned: true)
!312 = !DIEnumerator(name: "DRXK_SIF_ATTENUATION_6DB", value: 2, isUnsigned: true)
!313 = !DIEnumerator(name: "DRXK_SIF_ATTENUATION_9DB", value: 3, isUnsigned: true)
!314 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "e_drxk_constellation", file: !284, line: 128, baseType: !7, size: 32, elements: !315)
!315 = !{!316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327}
!316 = !DIEnumerator(name: "DRX_CONSTELLATION_BPSK", value: 0, isUnsigned: true)
!317 = !DIEnumerator(name: "DRX_CONSTELLATION_QPSK", value: 1, isUnsigned: true)
!318 = !DIEnumerator(name: "DRX_CONSTELLATION_PSK8", value: 2, isUnsigned: true)
!319 = !DIEnumerator(name: "DRX_CONSTELLATION_QAM16", value: 3, isUnsigned: true)
!320 = !DIEnumerator(name: "DRX_CONSTELLATION_QAM32", value: 4, isUnsigned: true)
!321 = !DIEnumerator(name: "DRX_CONSTELLATION_QAM64", value: 5, isUnsigned: true)
!322 = !DIEnumerator(name: "DRX_CONSTELLATION_QAM128", value: 6, isUnsigned: true)
!323 = !DIEnumerator(name: "DRX_CONSTELLATION_QAM256", value: 7, isUnsigned: true)
!324 = !DIEnumerator(name: "DRX_CONSTELLATION_QAM512", value: 8, isUnsigned: true)
!325 = !DIEnumerator(name: "DRX_CONSTELLATION_QAM1024", value: 9, isUnsigned: true)
!326 = !DIEnumerator(name: "DRX_CONSTELLATION_UNKNOWN", value: 254, isUnsigned: true)
!327 = !DIEnumerator(name: "DRX_CONSTELLATION_AUTO", value: 255, isUnsigned: true)
!328 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "e_drxk_interleave_mode", file: !284, line: 142, baseType: !7, size: 32, elements: !329)
!329 = !{!330, !331}
!330 = !DIEnumerator(name: "DRXK_QAM_I12_J17", value: 16, isUnsigned: true)
!331 = !DIEnumerator(name: "DRXK_QAM_I_UNKNOWN", value: 254, isUnsigned: true)
!332 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drxk_cfg_dvbt_sqi_speed", file: !284, line: 153, baseType: !7, size: 32, elements: !333)
!333 = !{!334, !335, !336, !337}
!334 = !DIEnumerator(name: "DRXK_DVBT_SQI_SPEED_FAST", value: 0, isUnsigned: true)
!335 = !DIEnumerator(name: "DRXK_DVBT_SQI_SPEED_MEDIUM", value: 1, isUnsigned: true)
!336 = !DIEnumerator(name: "DRXK_DVBT_SQI_SPEED_SLOW", value: 2, isUnsigned: true)
!337 = !DIEnumerator(name: "DRXK_DVBT_SQI_SPEED_UNKNOWN", value: 254, isUnsigned: true)
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drx_power_mode", file: !284, line: 58, baseType: !7, size: 32, elements: !339)
!339 = !{!340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357}
!340 = !DIEnumerator(name: "DRX_POWER_UP", value: 0, isUnsigned: true)
!341 = !DIEnumerator(name: "DRX_POWER_MODE_1", value: 1, isUnsigned: true)
!342 = !DIEnumerator(name: "DRX_POWER_MODE_2", value: 2, isUnsigned: true)
!343 = !DIEnumerator(name: "DRX_POWER_MODE_3", value: 3, isUnsigned: true)
!344 = !DIEnumerator(name: "DRX_POWER_MODE_4", value: 4, isUnsigned: true)
!345 = !DIEnumerator(name: "DRX_POWER_MODE_5", value: 5, isUnsigned: true)
!346 = !DIEnumerator(name: "DRX_POWER_MODE_6", value: 6, isUnsigned: true)
!347 = !DIEnumerator(name: "DRX_POWER_MODE_7", value: 7, isUnsigned: true)
!348 = !DIEnumerator(name: "DRX_POWER_MODE_8", value: 8, isUnsigned: true)
!349 = !DIEnumerator(name: "DRX_POWER_MODE_9", value: 9, isUnsigned: true)
!350 = !DIEnumerator(name: "DRX_POWER_MODE_10", value: 10, isUnsigned: true)
!351 = !DIEnumerator(name: "DRX_POWER_MODE_11", value: 11, isUnsigned: true)
!352 = !DIEnumerator(name: "DRX_POWER_MODE_12", value: 12, isUnsigned: true)
!353 = !DIEnumerator(name: "DRX_POWER_MODE_13", value: 13, isUnsigned: true)
!354 = !DIEnumerator(name: "DRX_POWER_MODE_14", value: 14, isUnsigned: true)
!355 = !DIEnumerator(name: "DRX_POWER_MODE_15", value: 15, isUnsigned: true)
!356 = !DIEnumerator(name: "DRX_POWER_MODE_16", value: 16, isUnsigned: true)
!357 = !DIEnumerator(name: "DRX_POWER_DOWN", value: 255, isUnsigned: true)
!358 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !359, line: 10, baseType: !7, size: 32, elements: !360)
!359 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!360 = !{!361, !362}
!361 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!362 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!363 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fecap_scale_params", file: !6, line: 752, baseType: !7, size: 32, elements: !364)
!364 = !{!365, !366, !367, !368}
!365 = !DIEnumerator(name: "FE_SCALE_NOT_AVAILABLE", value: 0, isUnsigned: true)
!366 = !DIEnumerator(name: "FE_SCALE_DECIBEL", value: 1, isUnsigned: true)
!367 = !DIEnumerator(name: "FE_SCALE_RELATIVE", value: 2, isUnsigned: true)
!368 = !DIEnumerator(name: "FE_SCALE_COUNTER", value: 3, isUnsigned: true)
!369 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !370, line: 305, baseType: !7, size: 32, elements: !371)
!370 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!371 = !{!372, !373, !374, !375}
!372 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!376 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !377, line: 567, baseType: !7, size: 32, elements: !378)
!377 = !DIFile(filename: "./include/linux/printk.h", directory: "/home/lizy2001/genbc/linux")
!378 = !{!379, !380, !381}
!379 = !DIEnumerator(name: "DUMP_PREFIX_NONE", value: 0, isUnsigned: true)
!380 = !DIEnumerator(name: "DUMP_PREFIX_ADDRESS", value: 1, isUnsigned: true)
!381 = !DIEnumerator(name: "DUMP_PREFIX_OFFSET", value: 2, isUnsigned: true)
!382 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drx_fftmode_t", file: !284, line: 160, baseType: !7, size: 32, elements: !383)
!383 = !{!384, !385, !386, !387, !388}
!384 = !DIEnumerator(name: "DRX_FFTMODE_2K", value: 0, isUnsigned: true)
!385 = !DIEnumerator(name: "DRX_FFTMODE_4K", value: 1, isUnsigned: true)
!386 = !DIEnumerator(name: "DRX_FFTMODE_8K", value: 2, isUnsigned: true)
!387 = !DIEnumerator(name: "DRX_FFTMODE_UNKNOWN", value: 254, isUnsigned: true)
!388 = !DIEnumerator(name: "DRX_FFTMODE_AUTO", value: 255, isUnsigned: true)
!389 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !284, line: 146, baseType: !7, size: 32, elements: !390)
!390 = !{!391, !392, !393, !394}
!391 = !DIEnumerator(name: "DRXK_SPIN_A1", value: 0, isUnsigned: true)
!392 = !DIEnumerator(name: "DRXK_SPIN_A2", value: 1, isUnsigned: true)
!393 = !DIEnumerator(name: "DRXK_SPIN_A3", value: 2, isUnsigned: true)
!394 = !DIEnumerator(name: "DRXK_SPIN_UNKNOWN", value: 3, isUnsigned: true)
!395 = !{!396, !398, !399, !400, !405, !406, !408, !411}
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !397, line: 148, baseType: !7)
!397 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!399 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!400 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !401, line: 18, baseType: !402)
!401 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !403, line: 23, baseType: !404)
!403 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!404 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!405 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !397, line: 30, baseType: !407)
!407 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!408 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !401, line: 19, baseType: !409)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !403, line: 24, baseType: !410)
!410 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !401, line: 21, baseType: !412)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !403, line: 27, baseType: !7)
!413 = !{!414, !480, !485, !490, !4522, !4527, !4532, !4537, !4542, !0, !4544}
!414 = !DIGlobalVariableExpression(var: !415, expr: !DIExpression())
!415 = distinct !DIGlobalVariable(name: "__param_debug", scope: !2, file: !3, line: 150, type: !416, isLocal: true, isDefinition: true, align: 64)
!416 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !417)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !418, line: 69, size: 320, elements: !419)
!418 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!419 = !{!420, !424, !428, !448, !450, !454, !458}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !417, file: !418, line: 70, baseType: !421, size: 64)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!423 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !417, file: !418, line: 71, baseType: !425, size: 64, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!426 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !427, line: 76, flags: DIFlagFwdDecl)
!427 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!428 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !417, file: !418, line: 72, baseType: !429, size: 64, offset: 128)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !431)
!431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !418, line: 47, size: 256, elements: !432)
!432 = !{!433, !434, !439, !444}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !431, file: !418, line: 49, baseType: !7, size: 32)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !431, file: !418, line: 51, baseType: !435, size: 64, offset: 64)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DISubroutineType(types: !437)
!437 = !{!405, !421, !438}
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !431, file: !418, line: 53, baseType: !440, size: 64, offset: 128)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = !DISubroutineType(types: !442)
!442 = !{!405, !443, !438}
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !431, file: !418, line: 55, baseType: !445, size: 64, offset: 192)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DISubroutineType(types: !447)
!447 = !{null, !398}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !417, file: !418, line: 73, baseType: !449, size: 16, offset: 192)
!449 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !408)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !417, file: !418, line: 74, baseType: !451, size: 8, offset: 208)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !401, line: 16, baseType: !452)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !403, line: 20, baseType: !453)
!453 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !417, file: !418, line: 75, baseType: !455, size: 8, offset: 216)
!455 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !401, line: 17, baseType: !456)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !403, line: 21, baseType: !457)
!457 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!458 = !DIDerivedType(tag: DW_TAG_member, scope: !417, file: !418, line: 76, baseType: !459, size: 64, offset: 256)
!459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !417, file: !418, line: 76, size: 64, elements: !460)
!460 = !{!461, !462, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !459, file: !418, line: 77, baseType: !398, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !459, file: !418, line: 78, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !465)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !418, line: 86, size: 128, elements: !466)
!466 = !{!467, !468}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !465, file: !418, line: 87, baseType: !7, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !465, file: !418, line: 88, baseType: !443, size: 64, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !459, file: !418, line: 79, baseType: !470, size: 64)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !472)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !418, line: 92, size: 256, elements: !473)
!473 = !{!474, !475, !476, !478, !479}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !472, file: !418, line: 94, baseType: !7, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !472, file: !418, line: 95, baseType: !7, size: 32, offset: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !472, file: !418, line: 96, baseType: !477, size: 64, offset: 64)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !472, file: !418, line: 97, baseType: !429, size: 64, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !472, file: !418, line: 98, baseType: !398, size: 64, offset: 192)
!480 = !DIGlobalVariableExpression(var: !481, expr: !DIExpression())
!481 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debugtype220", scope: !2, file: !3, line: 150, type: !482, isLocal: true, isDefinition: true, align: 8)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !422, size: 192, elements: !483)
!483 = !{!484}
!484 = !DISubrange(count: 24)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug221", scope: !2, file: !3, line: 151, type: !487, isLocal: true, isDefinition: true, align: 8)
!487 = !DICompositeType(tag: DW_TAG_array_type, baseType: !422, size: 304, elements: !488)
!488 = !{!489}
!489 = !DISubrange(count: 38)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "__key", scope: !492, file: !3, line: 6800, type: !1227, isLocal: true, isDefinition: true)
!492 = distinct !DISubprogram(name: "drxk_attach", scope: !3, file: !3, line: 6748, type: !493, scopeLine: 6750, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !850)
!493 = !DISubroutineType(types: !494)
!494 = !{!495, !4383, !4400}
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend", file: !51, line: 686, size: 10240, elements: !497)
!497 = !{!498, !512, !802, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4381, !4382}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !496, file: !51, line: 687, baseType: !499, size: 32)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !500, line: 19, size: 32, elements: !501)
!500 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!501 = !{!502}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !499, file: !500, line: 20, baseType: !503, size: 32)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !504, line: 113, baseType: !505)
!504 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !504, line: 111, size: 32, elements: !506)
!506 = !{!507}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !505, file: !504, line: 112, baseType: !508, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !397, line: 168, baseType: !509)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !397, line: 166, size: 32, elements: !510)
!510 = !{!511}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !509, file: !397, line: 167, baseType: !405, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !496, file: !51, line: 688, baseType: !513, size: 6016, offset: 64)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_ops", file: !51, line: 435, size: 6016, elements: !514)
!514 = !{!515, !530, !534, !538, !539, !540, !544, !545, !551, !556, !560, !561, !571, !656, !660, !665, !670, !671, !672, !673, !685, !696, !700, !704, !708, !712, !717, !721, !722, !723, !727, !784}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !513, file: !51, line: 436, baseType: !516, size: 1280)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_internal_info", file: !51, line: 338, size: 1280, elements: !517)
!517 = !{!518, !522, !523, !524, !525, !526, !527, !528, !529}
!518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !516, file: !51, line: 339, baseType: !519, size: 1024)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 1024, elements: !520)
!520 = !{!521}
!521 = !DISubrange(count: 128)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_min_hz", scope: !516, file: !51, line: 340, baseType: !411, size: 32, offset: 1024)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_max_hz", scope: !516, file: !51, line: 341, baseType: !411, size: 32, offset: 1056)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_stepsize_hz", scope: !516, file: !51, line: 342, baseType: !411, size: 32, offset: 1088)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_tolerance_hz", scope: !516, file: !51, line: 343, baseType: !411, size: 32, offset: 1120)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_min", scope: !516, file: !51, line: 344, baseType: !411, size: 32, offset: 1152)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_max", scope: !516, file: !51, line: 345, baseType: !411, size: 32, offset: 1184)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_tolerance", scope: !516, file: !51, line: 346, baseType: !411, size: 32, offset: 1216)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !516, file: !51, line: 347, baseType: !5, size: 32, offset: 1248)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "delsys", scope: !513, file: !51, line: 438, baseType: !531, size: 64, offset: 1280)
!531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 64, elements: !532)
!532 = !{!533}
!533 = !DISubrange(count: 8)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !513, file: !51, line: 440, baseType: !535, size: 64, offset: 1344)
!535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !536, size: 64)
!536 = !DISubroutineType(types: !537)
!537 = !{null, !495}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !513, file: !51, line: 441, baseType: !535, size: 64, offset: 1408)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "release_sec", scope: !513, file: !51, line: 442, baseType: !535, size: 64, offset: 1472)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !513, file: !51, line: 444, baseType: !541, size: 64, offset: 1536)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DISubroutineType(types: !543)
!543 = !{!405, !495}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !513, file: !51, line: 445, baseType: !541, size: 64, offset: 1600)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !513, file: !51, line: 447, baseType: !546, size: 64, offset: 1664)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = !DISubroutineType(types: !548)
!548 = !{!405, !495, !549, !405}
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !513, file: !51, line: 450, baseType: !552, size: 64, offset: 1728)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = !DISubroutineType(types: !554)
!554 = !{!405, !495, !406, !7, !477, !555}
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "get_frontend_algo", scope: !513, file: !51, line: 457, baseType: !557, size: 64, offset: 1792)
!557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!558 = !DISubroutineType(types: !559)
!559 = !{!50, !495}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "set_frontend", scope: !513, file: !51, line: 460, baseType: !541, size: 64, offset: 1856)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "get_tune_settings", scope: !513, file: !51, line: 461, baseType: !562, size: 64, offset: 1920)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = !DISubroutineType(types: !564)
!564 = !{!405, !495, !565}
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_tune_settings", file: !51, line: 69, size: 96, elements: !567)
!567 = !{!568, !569, !570}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "min_delay_ms", scope: !566, file: !51, line: 70, baseType: !405, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "step_size", scope: !566, file: !51, line: 71, baseType: !405, size: 32, offset: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "max_drift", scope: !566, file: !51, line: 72, baseType: !405, size: 32, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "get_frontend", scope: !513, file: !51, line: 463, baseType: !572, size: 64, offset: 1984)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DISubroutineType(types: !574)
!574 = !{!405, !495, !575}
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_frontend_properties", file: !51, line: 586, size: 3648, elements: !577)
!577 = !{!578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !649, !650, !651, !652, !653, !654, !655}
!578 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !576, file: !51, line: 587, baseType: !411, size: 32)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !576, file: !51, line: 588, baseType: !57, size: 32, offset: 32)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "voltage", scope: !576, file: !51, line: 590, baseType: !73, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "sectone", scope: !576, file: !51, line: 591, baseType: !78, size: 32, offset: 96)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "inversion", scope: !576, file: !51, line: 592, baseType: !82, size: 32, offset: 128)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "fec_inner", scope: !576, file: !51, line: 593, baseType: !87, size: 32, offset: 160)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_mode", scope: !576, file: !51, line: 594, baseType: !102, size: 32, offset: 192)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_hz", scope: !576, file: !51, line: 595, baseType: !411, size: 32, offset: 224)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "guard_interval", scope: !576, file: !51, line: 596, baseType: !113, size: 32, offset: 256)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "hierarchy", scope: !576, file: !51, line: 597, baseType: !126, size: 32, offset: 288)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate", scope: !576, file: !51, line: 598, baseType: !411, size: 32, offset: 320)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "code_rate_HP", scope: !576, file: !51, line: 599, baseType: !87, size: 32, offset: 352)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "code_rate_LP", scope: !576, file: !51, line: 600, baseType: !87, size: 32, offset: 384)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "pilot", scope: !576, file: !51, line: 602, baseType: !133, size: 32, offset: 416)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "rolloff", scope: !576, file: !51, line: 603, baseType: !138, size: 32, offset: 448)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "delivery_system", scope: !576, file: !51, line: 605, baseType: !144, size: 32, offset: 480)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "interleaving", scope: !576, file: !51, line: 607, baseType: !165, size: 32, offset: 512)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_partial_reception", scope: !576, file: !51, line: 610, baseType: !455, size: 8, offset: 544)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_mode", scope: !576, file: !51, line: 611, baseType: !455, size: 8, offset: 552)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_subchannel", scope: !576, file: !51, line: 612, baseType: !455, size: 8, offset: 560)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_segment_idx", scope: !576, file: !51, line: 613, baseType: !411, size: 32, offset: 576)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_segment_count", scope: !576, file: !51, line: 614, baseType: !411, size: 32, offset: 608)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_layer_enabled", scope: !576, file: !51, line: 615, baseType: !455, size: 8, offset: 640)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !576, file: !51, line: 621, baseType: !602, size: 384, offset: 672)
!602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !603, size: 384, elements: !609)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !576, file: !51, line: 616, size: 128, elements: !604)
!604 = !{!605, !606, !607, !608}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "segment_count", scope: !603, file: !51, line: 617, baseType: !455, size: 8)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !603, file: !51, line: 618, baseType: !87, size: 32, offset: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !603, file: !51, line: 619, baseType: !57, size: 32, offset: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "interleaving", scope: !603, file: !51, line: 620, baseType: !455, size: 8, offset: 96)
!609 = !{!610}
!610 = !DISubrange(count: 3)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !576, file: !51, line: 624, baseType: !411, size: 32, offset: 1056)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "scrambling_sequence_index", scope: !576, file: !51, line: 627, baseType: !411, size: 32, offset: 1088)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_fic_ver", scope: !576, file: !51, line: 630, baseType: !455, size: 8, offset: 1120)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_parade_id", scope: !576, file: !51, line: 631, baseType: !455, size: 8, offset: 1128)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_nog", scope: !576, file: !51, line: 632, baseType: !455, size: 8, offset: 1136)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_tnog", scope: !576, file: !51, line: 633, baseType: !455, size: 8, offset: 1144)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sgn", scope: !576, file: !51, line: 634, baseType: !455, size: 8, offset: 1152)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_prc", scope: !576, file: !51, line: 635, baseType: !455, size: 8, offset: 1160)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_frame_mode", scope: !576, file: !51, line: 637, baseType: !455, size: 8, offset: 1168)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_frame_ensemble", scope: !576, file: !51, line: 638, baseType: !455, size: 8, offset: 1176)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_code_mode_pri", scope: !576, file: !51, line: 639, baseType: !455, size: 8, offset: 1184)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_code_mode_sec", scope: !576, file: !51, line: 640, baseType: !455, size: 8, offset: 1192)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_block_mode", scope: !576, file: !51, line: 641, baseType: !455, size: 8, offset: 1200)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_a", scope: !576, file: !51, line: 642, baseType: !455, size: 8, offset: 1208)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_b", scope: !576, file: !51, line: 643, baseType: !455, size: 8, offset: 1216)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_c", scope: !576, file: !51, line: 644, baseType: !455, size: 8, offset: 1224)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_d", scope: !576, file: !51, line: 645, baseType: !455, size: 8, offset: 1232)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "lna", scope: !576, file: !51, line: 647, baseType: !411, size: 32, offset: 1248)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !576, file: !51, line: 650, baseType: !630, size: 296, offset: 1280)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_fe_stats", file: !6, line: 825, size: 296, elements: !631)
!631 = !{!632, !633}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !630, file: !6, line: 826, baseType: !456, size: 8)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !630, file: !6, line: 827, baseType: !634, size: 288, offset: 8)
!634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !635, size: 288, elements: !647)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_stats", file: !6, line: 803, size: 72, elements: !636)
!636 = !{!637, !638}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !635, file: !6, line: 804, baseType: !456, size: 8)
!638 = !DIDerivedType(tag: DW_TAG_member, scope: !635, file: !6, line: 805, baseType: !639, size: 64, offset: 8)
!639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !635, file: !6, line: 805, size: 64, elements: !640)
!640 = !{!641, !644}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "uvalue", scope: !639, file: !6, line: 806, baseType: !642, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !403, line: 31, baseType: !643)
!643 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "svalue", scope: !639, file: !6, line: 807, baseType: !645, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !403, line: 30, baseType: !646)
!646 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!647 = !{!648}
!648 = !DISubrange(count: 4)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "cnr", scope: !576, file: !51, line: 651, baseType: !630, size: 296, offset: 1576)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "pre_bit_error", scope: !576, file: !51, line: 652, baseType: !630, size: 296, offset: 1872)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "pre_bit_count", scope: !576, file: !51, line: 653, baseType: !630, size: 296, offset: 2168)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "post_bit_error", scope: !576, file: !51, line: 654, baseType: !630, size: 296, offset: 2464)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "post_bit_count", scope: !576, file: !51, line: 655, baseType: !630, size: 296, offset: 2760)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "block_error", scope: !576, file: !51, line: 656, baseType: !630, size: 296, offset: 3056)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "block_count", scope: !576, file: !51, line: 657, baseType: !630, size: 296, offset: 3352)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "read_status", scope: !513, file: !51, line: 466, baseType: !657, size: 64, offset: 2048)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DISubroutineType(types: !659)
!659 = !{!405, !495, !555}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "read_ber", scope: !513, file: !51, line: 467, baseType: !661, size: 64, offset: 2112)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DISubroutineType(types: !663)
!663 = !{!405, !495, !664}
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "read_signal_strength", scope: !513, file: !51, line: 468, baseType: !666, size: 64, offset: 2176)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!405, !495, !669}
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "read_snr", scope: !513, file: !51, line: 469, baseType: !666, size: 64, offset: 2240)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "read_ucblocks", scope: !513, file: !51, line: 470, baseType: !661, size: 64, offset: 2304)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_reset_overload", scope: !513, file: !51, line: 472, baseType: !541, size: 64, offset: 2368)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_send_master_cmd", scope: !513, file: !51, line: 473, baseType: !674, size: 64, offset: 2432)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = !DISubroutineType(types: !676)
!676 = !{!405, !495, !677}
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_diseqc_master_cmd", file: !6, line: 173, size: 56, elements: !679)
!679 = !{!680, !684}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !678, file: !6, line: 174, baseType: !681, size: 48)
!681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 48, elements: !682)
!682 = !{!683}
!683 = !DISubrange(count: 6)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !678, file: !6, line: 175, baseType: !456, size: 8, offset: 48)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_recv_slave_reply", scope: !513, file: !51, line: 474, baseType: !686, size: 64, offset: 2496)
!686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !687, size: 64)
!687 = !DISubroutineType(types: !688)
!688 = !{!405, !495, !689}
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_diseqc_slave_reply", file: !6, line: 195, size: 96, elements: !691)
!691 = !{!692, !694, !695}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !690, file: !6, line: 196, baseType: !693, size: 32)
!693 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 32, elements: !647)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !690, file: !6, line: 197, baseType: !456, size: 8, offset: 32)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !690, file: !6, line: 198, baseType: !405, size: 32, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_send_burst", scope: !513, file: !51, line: 475, baseType: !697, size: 64, offset: 2560)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DISubroutineType(types: !699)
!699 = !{!405, !495, !171}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "set_tone", scope: !513, file: !51, line: 477, baseType: !701, size: 64, offset: 2624)
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !702, size: 64)
!702 = !DISubroutineType(types: !703)
!703 = !{!405, !495, !78}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "set_voltage", scope: !513, file: !51, line: 478, baseType: !705, size: 64, offset: 2688)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DISubroutineType(types: !707)
!707 = !{!405, !495, !73}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "enable_high_lnb_voltage", scope: !513, file: !51, line: 480, baseType: !709, size: 64, offset: 2752)
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 64)
!710 = !DISubroutineType(types: !711)
!711 = !{!405, !495, !399}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "dishnetwork_send_legacy_command", scope: !513, file: !51, line: 481, baseType: !713, size: 64, offset: 2816)
!713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !714, size: 64)
!714 = !DISubroutineType(types: !715)
!715 = !{!405, !495, !716}
!716 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_gate_ctrl", scope: !513, file: !51, line: 482, baseType: !718, size: 64, offset: 2880)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DISubroutineType(types: !720)
!720 = !{!405, !495, !405}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "ts_bus_ctrl", scope: !513, file: !51, line: 483, baseType: !718, size: 64, offset: 2944)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "set_lna", scope: !513, file: !51, line: 484, baseType: !541, size: 64, offset: 3008)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "search", scope: !513, file: !51, line: 490, baseType: !724, size: 64, offset: 3072)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = !DISubroutineType(types: !726)
!726 = !{!175, !495}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_ops", scope: !513, file: !51, line: 492, baseType: !728, size: 2304, offset: 3136)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_tuner_ops", file: !51, line: 226, size: 2304, elements: !729)
!729 = !{!730, !740, !741, !742, !743, !744, !745, !746, !758, !762, !763, !764, !765, !766, !767, !774, !779, !783}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !728, file: !51, line: 228, baseType: !731, size: 1216)
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_tuner_info", file: !51, line: 88, size: 1216, elements: !732)
!732 = !{!733, !734, !735, !736, !737, !738, !739}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !731, file: !51, line: 89, baseType: !519, size: 1024)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_min_hz", scope: !731, file: !51, line: 91, baseType: !411, size: 32, offset: 1024)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_max_hz", scope: !731, file: !51, line: 92, baseType: !411, size: 32, offset: 1056)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_step_hz", scope: !731, file: !51, line: 93, baseType: !411, size: 32, offset: 1088)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_min", scope: !731, file: !51, line: 95, baseType: !411, size: 32, offset: 1120)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_max", scope: !731, file: !51, line: 96, baseType: !411, size: 32, offset: 1152)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_step", scope: !731, file: !51, line: 97, baseType: !411, size: 32, offset: 1184)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !728, file: !51, line: 230, baseType: !535, size: 64, offset: 1216)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !728, file: !51, line: 231, baseType: !541, size: 64, offset: 1280)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !728, file: !51, line: 232, baseType: !541, size: 64, offset: 1344)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !728, file: !51, line: 233, baseType: !541, size: 64, offset: 1408)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !728, file: !51, line: 234, baseType: !541, size: 64, offset: 1472)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "set_params", scope: !728, file: !51, line: 237, baseType: !541, size: 64, offset: 1536)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "set_analog_params", scope: !728, file: !51, line: 238, baseType: !747, size: 64, offset: 1600)
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!748 = !DISubroutineType(types: !749)
!749 = !{!405, !495, !750}
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_parameters", file: !51, line: 114, size: 192, elements: !752)
!752 = !{!753, !754, !755, !756}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !751, file: !51, line: 115, baseType: !7, size: 32)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !751, file: !51, line: 116, baseType: !7, size: 32, offset: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "audmode", scope: !751, file: !51, line: 117, baseType: !7, size: 32, offset: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "std", scope: !751, file: !51, line: 118, baseType: !757, size: 64, offset: 128)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !401, line: 23, baseType: !642)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !728, file: !51, line: 240, baseType: !759, size: 64, offset: 1664)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DISubroutineType(types: !761)
!761 = !{!405, !495, !398}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "get_frequency", scope: !728, file: !51, line: 242, baseType: !661, size: 64, offset: 1728)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "get_bandwidth", scope: !728, file: !51, line: 243, baseType: !661, size: 64, offset: 1792)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "get_if_frequency", scope: !728, file: !51, line: 244, baseType: !661, size: 64, offset: 1856)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !728, file: !51, line: 248, baseType: !661, size: 64, offset: 1920)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "get_rf_strength", scope: !728, file: !51, line: 249, baseType: !666, size: 64, offset: 1984)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "get_afc", scope: !728, file: !51, line: 250, baseType: !768, size: 64, offset: 2048)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!405, !495, !771}
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !401, line: 20, baseType: !773)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !403, line: 26, baseType: !405)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "calc_regs", scope: !728, file: !51, line: 258, baseType: !775, size: 64, offset: 2112)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DISubroutineType(types: !777)
!777 = !{!405, !495, !778, !405}
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "set_frequency", scope: !728, file: !51, line: 267, baseType: !780, size: 64, offset: 2176)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DISubroutineType(types: !782)
!782 = !{!405, !495, !411}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "set_bandwidth", scope: !728, file: !51, line: 268, baseType: !780, size: 64, offset: 2240)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "analog_ops", scope: !513, file: !51, line: 493, baseType: !785, size: 576, offset: 5440)
!785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_demod_ops", file: !51, line: 302, size: 576, elements: !786)
!786 = !{!787, !791, !795, !796, !797, !798, !799, !800, !801}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !785, file: !51, line: 304, baseType: !788, size: 64)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_demod_info", file: !51, line: 276, size: 64, elements: !789)
!789 = !{!790}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !788, file: !51, line: 277, baseType: !443, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "set_params", scope: !785, file: !51, line: 306, baseType: !792, size: 64, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DISubroutineType(types: !794)
!794 = !{null, !495, !750}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "has_signal", scope: !785, file: !51, line: 308, baseType: !666, size: 64, offset: 128)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "get_afc", scope: !785, file: !51, line: 309, baseType: !768, size: 64, offset: 192)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_status", scope: !785, file: !51, line: 310, baseType: !535, size: 64, offset: 256)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "standby", scope: !785, file: !51, line: 311, baseType: !535, size: 64, offset: 320)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !785, file: !51, line: 312, baseType: !535, size: 64, offset: 384)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_gate_ctrl", scope: !785, file: !51, line: 313, baseType: !718, size: 64, offset: 448)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !785, file: !51, line: 316, baseType: !759, size: 64, offset: 512)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "dvb", scope: !496, file: !51, line: 689, baseType: !803, size: 64, offset: 6080)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_adapter", file: !272, line: 101, size: 960, elements: !805)
!805 = !{!806, !807, !813, !814, !815, !817, !818, !4349, !4350, !4351, !4370}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !804, file: !272, line: 102, baseType: !405, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "list_head", scope: !804, file: !272, line: 103, baseType: !808, size: 128, offset: 64)
!808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !397, line: 178, size: 128, elements: !809)
!809 = !{!810, !812}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !808, file: !397, line: 179, baseType: !811, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !808, file: !397, line: 179, baseType: !811, size: 64, offset: 64)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "device_list", scope: !804, file: !272, line: 104, baseType: !808, size: 128, offset: 192)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !804, file: !272, line: 105, baseType: !421, size: 64, offset: 320)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "proposed_mac", scope: !804, file: !272, line: 106, baseType: !816, size: 48, offset: 384)
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 48, elements: !682)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !804, file: !272, line: 107, baseType: !398, size: 64, offset: 448)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !804, file: !272, line: 109, baseType: !819, size: 64, offset: 512)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !237, line: 461, size: 5568, elements: !821)
!821 = !{!822, !3806, !3807, !3810, !3811, !3862, !3950, !3951, !3952, !3953, !3954, !3963, !4068, !4081, !4276, !4277, !4281, !4283, !4284, !4285, !4289, !4295, !4296, !4299, !4300, !4301, !4302, !4303, !4304, !4305, !4337, !4338, !4339, !4342, !4345, !4346, !4347, !4348}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !820, file: !237, line: 462, baseType: !823, size: 512)
!823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !824, line: 64, size: 512, elements: !825)
!824 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!825 = !{!826, !827, !828, !830, !887, !3661, !3800, !3801, !3802, !3803, !3804, !3805}
!826 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !823, file: !824, line: 65, baseType: !421, size: 64)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !823, file: !824, line: 66, baseType: !808, size: 128, offset: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !823, file: !824, line: 67, baseType: !829, size: 64, offset: 192)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !823, size: 64)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !823, file: !824, line: 68, baseType: !831, size: 64, offset: 256)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !824, line: 192, size: 704, elements: !833)
!833 = !{!834, !835, !851, !852}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !832, file: !824, line: 193, baseType: !808, size: 128)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !832, file: !824, line: 194, baseType: !836, offset: 128)
!836 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !837, line: 83, baseType: !838)
!837 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !837, line: 71, elements: !839)
!839 = !{!840}
!840 = !DIDerivedType(tag: DW_TAG_member, scope: !838, file: !837, line: 72, baseType: !841)
!841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !838, file: !837, line: 72, elements: !842)
!842 = !{!843}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !841, file: !837, line: 73, baseType: !844)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !837, line: 20, elements: !845)
!845 = !{!846}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !844, file: !837, line: 21, baseType: !847)
!847 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !848, line: 25, baseType: !849)
!848 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !848, line: 25, elements: !850)
!850 = !{}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !832, file: !824, line: 195, baseType: !823, size: 512, offset: 128)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !832, file: !824, line: 196, baseType: !853, size: 64, offset: 640)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !824, line: 156, size: 192, elements: !856)
!856 = !{!857, !862, !867}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !855, file: !824, line: 157, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DISubroutineType(types: !861)
!861 = !{!405, !831, !829}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !855, file: !824, line: 158, baseType: !863, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !864)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{!421, !831, !829}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !855, file: !824, line: 159, baseType: !868, size: 64, offset: 128)
!868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !869)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DISubroutineType(types: !871)
!871 = !{!405, !831, !829, !872}
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !824, line: 148, size: 20736, elements: !874)
!874 = !{!875, !877, !881, !882, !886}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !873, file: !824, line: 149, baseType: !876, size: 192)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 192, elements: !609)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !873, file: !824, line: 150, baseType: !878, size: 4096, offset: 192)
!878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 4096, elements: !879)
!879 = !{!880}
!880 = !DISubrange(count: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !873, file: !824, line: 151, baseType: !405, size: 32, offset: 4288)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !873, file: !824, line: 152, baseType: !883, size: 16384, offset: 4320)
!883 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 16384, elements: !884)
!884 = !{!885}
!885 = !DISubrange(count: 2048)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !873, file: !824, line: 153, baseType: !405, size: 32, offset: 20704)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !823, file: !824, line: 69, baseType: !888, size: 64, offset: 320)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !824, line: 138, size: 448, elements: !890)
!890 = !{!891, !895, !922, !924, !3623, !3651, !3655}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !889, file: !824, line: 139, baseType: !892, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !829}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !889, file: !824, line: 140, baseType: !896, size: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !898)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !899, line: 230, size: 128, elements: !900)
!899 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!900 = !{!901, !915}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !898, file: !899, line: 231, baseType: !902, size: 64)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{!905, !829, !909, !443}
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !397, line: 60, baseType: !906)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !907, line: 73, baseType: !908)
!907 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !907, line: 15, baseType: !399)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !899, line: 30, size: 128, elements: !911)
!911 = !{!912, !913}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !910, file: !899, line: 31, baseType: !421, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !910, file: !899, line: 32, baseType: !914, size: 16, offset: 64)
!914 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !397, line: 19, baseType: !410)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !898, file: !899, line: 232, baseType: !916, size: 64, offset: 64)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DISubroutineType(types: !918)
!918 = !{!905, !829, !909, !421, !919}
!919 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !397, line: 55, baseType: !920)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !907, line: 72, baseType: !921)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !907, line: 16, baseType: !716)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !889, file: !824, line: 141, baseType: !923, size: 64, offset: 128)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !889, file: !824, line: 142, baseType: !925, size: 64, offset: 192)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !928)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !899, line: 84, size: 320, elements: !929)
!929 = !{!930, !931, !935, !3620, !3621}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !928, file: !899, line: 85, baseType: !421, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !928, file: !899, line: 86, baseType: !932, size: 64, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{!914, !829, !909, !405}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !928, file: !899, line: 88, baseType: !936, size: 64, offset: 128)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{!914, !829, !939, !405}
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !899, line: 168, size: 448, elements: !941)
!941 = !{!942, !943, !944, !945, !3615, !3616}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !940, file: !899, line: 169, baseType: !910, size: 128)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !940, file: !899, line: 170, baseType: !919, size: 64, offset: 128)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !940, file: !899, line: 171, baseType: !398, size: 64, offset: 192)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !940, file: !899, line: 172, baseType: !946, size: 64, offset: 256)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = !DISubroutineType(types: !948)
!948 = !{!905, !949, !829, !939, !443, !1115, !919}
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !208, line: 916, size: 1856, align: 32, elements: !951)
!951 = !{!952, !970, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3587, !3588, !3589, !3598, !3599, !3608, !3609, !3610, !3611, !3612, !3613, !3614}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !950, file: !208, line: 920, baseType: !953, size: 128)
!953 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !950, file: !208, line: 917, size: 128, elements: !954)
!954 = !{!955, !961}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !953, file: !208, line: 918, baseType: !956, size: 64)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !957, line: 58, size: 64, elements: !958)
!957 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!958 = !{!959}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !956, file: !957, line: 59, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !953, file: !208, line: 919, baseType: !962, size: 128, align: 64)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !397, line: 216, size: 128, align: 64, elements: !963)
!963 = !{!964, !966}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !962, file: !397, line: 217, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !962, file: !397, line: 218, baseType: !967, size: 64, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = !DISubroutineType(types: !969)
!969 = !{null, !965}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !950, file: !208, line: 921, baseType: !971, size: 128, offset: 128)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !972, line: 8, size: 128, elements: !973)
!972 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!973 = !{!974, !978}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !971, file: !972, line: 9, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !977, line: 18, flags: DIFlagFwdDecl)
!977 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!978 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !971, file: !972, line: 10, baseType: !979, size: 64, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !977, line: 89, size: 1536, elements: !981)
!981 = !{!982, !983, !993, !1001, !1002, !1017, !3549, !3551, !3563, !3564, !3565, !3566, !3567, !3572, !3573, !3574}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !980, file: !977, line: 91, baseType: !7, size: 32)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !980, file: !977, line: 92, baseType: !984, size: 32, offset: 32)
!984 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !985, line: 277, baseType: !986)
!985 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !985, line: 277, size: 32, elements: !987)
!987 = !{!988}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !986, file: !985, line: 277, baseType: !989, size: 32)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !985, line: 70, baseType: !990)
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !985, line: 65, size: 32, elements: !991)
!991 = !{!992}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !990, file: !985, line: 66, baseType: !7, size: 32)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !980, file: !977, line: 93, baseType: !994, size: 128, offset: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !995, line: 38, size: 128, elements: !996)
!995 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!996 = !{!997, !999}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !994, file: !995, line: 39, baseType: !998, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !994, file: !995, line: 39, baseType: !1000, size: 64, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !980, file: !977, line: 94, baseType: !979, size: 64, offset: 192)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !980, file: !977, line: 95, baseType: !1003, size: 128, offset: 256)
!1003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !977, line: 47, size: 128, elements: !1004)
!1004 = !{!1005, !1014}
!1005 = !DIDerivedType(tag: DW_TAG_member, scope: !1003, file: !977, line: 48, baseType: !1006, size: 64)
!1006 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1003, file: !977, line: 48, size: 64, elements: !1007)
!1007 = !{!1008, !1013}
!1008 = !DIDerivedType(tag: DW_TAG_member, scope: !1006, file: !977, line: 49, baseType: !1009, size: 64)
!1009 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1006, file: !977, line: 49, size: 64, elements: !1010)
!1010 = !{!1011, !1012}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1009, file: !977, line: 50, baseType: !411, size: 32)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1009, file: !977, line: 50, baseType: !411, size: 32, offset: 32)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1006, file: !977, line: 52, baseType: !757, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1003, file: !977, line: 54, baseType: !1015, size: 64, offset: 64)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !457)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !980, file: !977, line: 96, baseType: !1018, size: 64, offset: 384)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !208, line: 610, size: 4224, elements: !1020)
!1020 = !{!1021, !1022, !1023, !1031, !1038, !1039, !1180, !3243, !3244, !3245, !3251, !3252, !3253, !3254, !3255, !3256, !3257, !3258, !3259, !3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3517, !3525, !3526, !3527, !3545, !3546, !3547, !3548}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1019, file: !208, line: 611, baseType: !914, size: 16)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1019, file: !208, line: 612, baseType: !410, size: 16, offset: 16)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1019, file: !208, line: 613, baseType: !1024, size: 32, offset: 32)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1025, line: 23, baseType: !1026)
!1025 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1025, line: 21, size: 32, elements: !1027)
!1027 = !{!1028}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1026, file: !1025, line: 22, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !397, line: 32, baseType: !1030)
!1030 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !907, line: 49, baseType: !7)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1019, file: !208, line: 614, baseType: !1032, size: 32, offset: 64)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1025, line: 28, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1025, line: 26, size: 32, elements: !1034)
!1034 = !{!1035}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1033, file: !1025, line: 27, baseType: !1036, size: 32)
!1036 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !397, line: 33, baseType: !1037)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !907, line: 50, baseType: !7)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1019, file: !208, line: 615, baseType: !7, size: 32, offset: 96)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1019, file: !208, line: 622, baseType: !1040, size: 64, offset: 128)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !208, line: 1864, size: 1536, align: 512, elements: !1043)
!1043 = !{!1044, !1048, !1058, !1062, !1068, !1072, !1076, !1080, !1084, !1088, !1092, !1093, !1099, !1103, !1127, !1156, !1160, !1166, !1171, !1175, !1176}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1042, file: !208, line: 1865, baseType: !1045, size: 64)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!979, !1018, !979, !7}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1042, file: !208, line: 1866, baseType: !1049, size: 64, offset: 64)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!421, !979, !1018, !1052}
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1054, line: 10, size: 128, elements: !1055)
!1054 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1055 = !{!1056, !1057}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1053, file: !1054, line: 11, baseType: !445, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1053, file: !1054, line: 12, baseType: !398, size: 64, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1042, file: !208, line: 1867, baseType: !1059, size: 64, offset: 128)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!405, !1018, !405}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1042, file: !208, line: 1868, baseType: !1063, size: 64, offset: 192)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{!1066, !1018, !405}
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !208, line: 581, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1042, file: !208, line: 1870, baseType: !1069, size: 64, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!405, !979, !443, !405}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1042, file: !208, line: 1872, baseType: !1073, size: 64, offset: 320)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!405, !1018, !979, !914, !406}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1042, file: !208, line: 1873, baseType: !1077, size: 64, offset: 384)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!405, !979, !1018, !979}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1042, file: !208, line: 1874, baseType: !1081, size: 64, offset: 448)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!405, !1018, !979}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1042, file: !208, line: 1875, baseType: !1085, size: 64, offset: 512)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!405, !1018, !979, !421}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1042, file: !208, line: 1876, baseType: !1089, size: 64, offset: 576)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 64)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!405, !1018, !979, !914}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1042, file: !208, line: 1877, baseType: !1081, size: 64, offset: 640)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1042, file: !208, line: 1878, baseType: !1094, size: 64, offset: 704)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!405, !1018, !979, !914, !1097}
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !397, line: 16, baseType: !1098)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !397, line: 13, baseType: !411)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1042, file: !208, line: 1879, baseType: !1100, size: 64, offset: 768)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!405, !1018, !979, !1018, !979, !7}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1042, file: !208, line: 1881, baseType: !1104, size: 64, offset: 832)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!405, !979, !1107}
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !208, line: 219, size: 640, elements: !1109)
!1109 = !{!1110, !1111, !1112, !1113, !1114, !1117, !1124, !1125, !1126}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1108, file: !208, line: 220, baseType: !7, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1108, file: !208, line: 221, baseType: !914, size: 16, offset: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1108, file: !208, line: 222, baseType: !1024, size: 32, offset: 64)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1108, file: !208, line: 223, baseType: !1032, size: 32, offset: 96)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1108, file: !208, line: 224, baseType: !1115, size: 64, offset: 128)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !397, line: 46, baseType: !1116)
!1116 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !907, line: 88, baseType: !646)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1108, file: !208, line: 225, baseType: !1118, size: 128, offset: 192)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1119, line: 13, size: 128, elements: !1120)
!1119 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1120 = !{!1121, !1123}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1118, file: !1119, line: 14, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1119, line: 8, baseType: !645)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1118, file: !1119, line: 15, baseType: !399, size: 64, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1108, file: !208, line: 226, baseType: !1118, size: 128, offset: 320)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1108, file: !208, line: 227, baseType: !1118, size: 128, offset: 448)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1108, file: !208, line: 234, baseType: !949, size: 64, offset: 576)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1042, file: !208, line: 1882, baseType: !1128, size: 64, offset: 896)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{!405, !1131, !1133, !411, !7}
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !971)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1135, line: 22, size: 1152, elements: !1136)
!1135 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1136 = !{!1137, !1138, !1139, !1140, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1134, file: !1135, line: 23, baseType: !411, size: 32)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1134, file: !1135, line: 24, baseType: !914, size: 16, offset: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1134, file: !1135, line: 25, baseType: !7, size: 32, offset: 64)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1134, file: !1135, line: 26, baseType: !1141, size: 32, offset: 96)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !397, line: 104, baseType: !411)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1134, file: !1135, line: 27, baseType: !757, size: 64, offset: 128)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1134, file: !1135, line: 28, baseType: !757, size: 64, offset: 192)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1134, file: !1135, line: 37, baseType: !757, size: 64, offset: 256)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1134, file: !1135, line: 38, baseType: !1097, size: 32, offset: 320)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1134, file: !1135, line: 39, baseType: !1097, size: 32, offset: 352)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1134, file: !1135, line: 40, baseType: !1024, size: 32, offset: 384)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1134, file: !1135, line: 41, baseType: !1032, size: 32, offset: 416)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1134, file: !1135, line: 42, baseType: !1115, size: 64, offset: 448)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1134, file: !1135, line: 43, baseType: !1118, size: 128, offset: 512)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1134, file: !1135, line: 44, baseType: !1118, size: 128, offset: 640)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1134, file: !1135, line: 45, baseType: !1118, size: 128, offset: 768)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1134, file: !1135, line: 46, baseType: !1118, size: 128, offset: 896)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1134, file: !1135, line: 47, baseType: !757, size: 64, offset: 1024)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1134, file: !1135, line: 48, baseType: !757, size: 64, offset: 1088)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1042, file: !208, line: 1883, baseType: !1157, size: 64, offset: 960)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DISubroutineType(types: !1159)
!1159 = !{!905, !979, !443, !919}
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1042, file: !208, line: 1884, baseType: !1161, size: 64, offset: 1024)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!405, !1018, !1164, !757, !757}
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !208, line: 50, flags: DIFlagFwdDecl)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1042, file: !208, line: 1886, baseType: !1167, size: 64, offset: 1088)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!405, !1018, !1170, !405}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1042, file: !208, line: 1887, baseType: !1172, size: 64, offset: 1152)
!1172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 64)
!1173 = !DISubroutineType(types: !1174)
!1174 = !{!405, !1018, !979, !949, !7, !914}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1042, file: !208, line: 1890, baseType: !1089, size: 64, offset: 1216)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1042, file: !208, line: 1891, baseType: !1177, size: 64, offset: 1280)
!1177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!1178 = !DISubroutineType(types: !1179)
!1179 = !{!405, !1018, !1066, !405}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1019, file: !208, line: 623, baseType: !1181, size: 64, offset: 192)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !208, line: 1416, size: 9472, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1188, !1189, !1236, !2851, !2933, !3016, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3032, !3036, !3037, !3040, !3041, !3044, !3045, !3046, !3087, !3113, !3114, !3115, !3116, !3117, !3118, !3121, !3123, !3130, !3131, !3133, !3134, !3135, !3194, !3195, !3210, !3211, !3212, !3213, !3214, !3217, !3218, !3219, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1182, file: !208, line: 1417, baseType: !808, size: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1182, file: !208, line: 1418, baseType: !1097, size: 32, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1182, file: !208, line: 1419, baseType: !457, size: 8, offset: 160)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1182, file: !208, line: 1420, baseType: !716, size: 64, offset: 192)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1182, file: !208, line: 1421, baseType: !1115, size: 64, offset: 256)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1182, file: !208, line: 1422, baseType: !1190, size: 64, offset: 320)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !208, line: 2228, size: 576, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1202, !1206, !1210, !1214, !1215, !1216, !1226, !1229, !1230, !1231, !1233, !1234, !1235}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1191, file: !208, line: 2229, baseType: !421, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1191, file: !208, line: 2230, baseType: !405, size: 32, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1191, file: !208, line: 2238, baseType: !1196, size: 64, offset: 128)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!405, !1199}
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1200, size: 64)
!1200 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1201, line: 28, flags: DIFlagFwdDecl)
!1201 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1191, file: !208, line: 2239, baseType: !1203, size: 64, offset: 192)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 64)
!1204 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1205)
!1205 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !208, line: 70, flags: DIFlagFwdDecl)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1191, file: !208, line: 2240, baseType: !1207, size: 64, offset: 256)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!979, !1190, !405, !421, !398}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1191, file: !208, line: 2242, baseType: !1211, size: 64, offset: 320)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{null, !1181}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1191, file: !208, line: 2243, baseType: !425, size: 64, offset: 384)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1191, file: !208, line: 2244, baseType: !1190, size: 64, offset: 448)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1191, file: !208, line: 2245, baseType: !1217, size: 64, offset: 512)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !397, line: 182, size: 64, elements: !1218)
!1218 = !{!1219}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1217, file: !397, line: 183, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !397, line: 186, size: 128, elements: !1222)
!1222 = !{!1223, !1224}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1221, file: !397, line: 187, baseType: !1220, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1221, file: !397, line: 187, baseType: !1225, size: 64, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1191, file: !208, line: 2247, baseType: !1227, offset: 576)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1228, line: 187, elements: !850)
!1228 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1191, file: !208, line: 2248, baseType: !1227, offset: 576)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1191, file: !208, line: 2249, baseType: !1227, offset: 576)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1191, file: !208, line: 2250, baseType: !1232, offset: 576)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1227, elements: !609)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1191, file: !208, line: 2252, baseType: !1227, offset: 576)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1191, file: !208, line: 2253, baseType: !1227, offset: 576)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1191, file: !208, line: 2254, baseType: !1227, offset: 576)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1182, file: !208, line: 1423, baseType: !1237, size: 64, offset: 384)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !208, line: 1935, size: 1472, elements: !1240)
!1240 = !{!1241, !1245, !1249, !1250, !1254, !1260, !1264, !1265, !1266, !1270, !1274, !1275, !1276, !1277, !1283, !1288, !1289, !1296, !1297, !1298, !1299, !2835, !2850}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1239, file: !208, line: 1936, baseType: !1242, size: 64)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!1018, !1181}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1239, file: !208, line: 1937, baseType: !1246, size: 64, offset: 64)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{null, !1018}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1239, file: !208, line: 1938, baseType: !1246, size: 64, offset: 128)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1239, file: !208, line: 1940, baseType: !1251, size: 64, offset: 192)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{null, !1018, !405}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1239, file: !208, line: 1941, baseType: !1255, size: 64, offset: 256)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{!405, !1018, !1258}
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !208, line: 289, flags: DIFlagFwdDecl)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1239, file: !208, line: 1942, baseType: !1261, size: 64, offset: 320)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!405, !1018}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1239, file: !208, line: 1943, baseType: !1246, size: 64, offset: 384)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1239, file: !208, line: 1944, baseType: !1211, size: 64, offset: 448)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1239, file: !208, line: 1945, baseType: !1267, size: 64, offset: 512)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{!405, !1181, !405}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1239, file: !208, line: 1946, baseType: !1271, size: 64, offset: 576)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!405, !1181}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1239, file: !208, line: 1947, baseType: !1271, size: 64, offset: 640)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1239, file: !208, line: 1948, baseType: !1271, size: 64, offset: 704)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1239, file: !208, line: 1949, baseType: !1271, size: 64, offset: 768)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1239, file: !208, line: 1950, baseType: !1278, size: 64, offset: 832)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!405, !979, !1281}
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !208, line: 57, flags: DIFlagFwdDecl)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1239, file: !208, line: 1951, baseType: !1284, size: 64, offset: 896)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!405, !1181, !1287, !443}
!1287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1239, file: !208, line: 1952, baseType: !1211, size: 64, offset: 960)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1239, file: !208, line: 1954, baseType: !1290, size: 64, offset: 1024)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!405, !1293, !979}
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1295, line: 539, flags: DIFlagFwdDecl)
!1295 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1239, file: !208, line: 1955, baseType: !1290, size: 64, offset: 1088)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1239, file: !208, line: 1956, baseType: !1290, size: 64, offset: 1152)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1239, file: !208, line: 1957, baseType: !1290, size: 64, offset: 1216)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1239, file: !208, line: 1963, baseType: !1300, size: 64, offset: 1280)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DISubroutineType(types: !1302)
!1302 = !{!405, !1181, !1303, !396}
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1305, line: 68, size: 512, align: 128, elements: !1306)
!1305 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1306 = !{!1307, !1308, !2827, !2834}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1304, file: !1305, line: 69, baseType: !716, size: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, scope: !1304, file: !1305, line: 77, baseType: !1309, size: 320, offset: 64)
!1309 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1304, file: !1305, line: 77, size: 320, elements: !1310)
!1310 = !{!1311, !1492, !1497, !1525, !1533, !1539, !2819, !2826}
!1311 = !DIDerivedType(tag: DW_TAG_member, scope: !1309, file: !1305, line: 78, baseType: !1312, size: 320)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1309, file: !1305, line: 78, size: 320, elements: !1313)
!1313 = !{!1314, !1315, !1490, !1491}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1312, file: !1305, line: 84, baseType: !808, size: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1312, file: !1305, line: 86, baseType: !1316, size: 64, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1317, size: 64)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !208, line: 451, size: 1216, align: 64, elements: !1318)
!1318 = !{!1319, !1320, !1327, !1328, !1329, !1344, !1360, !1361, !1362, !1363, !1483, !1484, !1487, !1488, !1489}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1317, file: !208, line: 452, baseType: !1018, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1317, file: !208, line: 453, baseType: !1321, size: 128, offset: 64)
!1321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1322, line: 292, size: 128, elements: !1323)
!1322 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1323 = !{!1324, !1325, !1326}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1321, file: !1322, line: 293, baseType: !836)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1321, file: !1322, line: 295, baseType: !396, size: 32)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1321, file: !1322, line: 296, baseType: !398, size: 64, offset: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1317, file: !208, line: 454, baseType: !396, size: 32, offset: 192)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1317, file: !208, line: 455, baseType: !508, size: 32, offset: 224)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1317, file: !208, line: 460, baseType: !1330, size: 128, offset: 256)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1331, line: 125, size: 128, elements: !1332)
!1331 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1332 = !{!1333, !1343}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1330, file: !1331, line: 126, baseType: !1334, size: 64)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1331, line: 31, size: 64, elements: !1335)
!1335 = !{!1336}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1334, file: !1331, line: 32, baseType: !1337, size: 64)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1331, line: 24, size: 192, align: 64, elements: !1339)
!1339 = !{!1340, !1341, !1342}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1338, file: !1331, line: 25, baseType: !716, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1338, file: !1331, line: 26, baseType: !1337, size: 64, offset: 64)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1338, file: !1331, line: 27, baseType: !1337, size: 64, offset: 128)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1330, file: !1331, line: 127, baseType: !1337, size: 64, offset: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1317, file: !208, line: 461, baseType: !1345, size: 256, offset: 384)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1346, line: 35, size: 256, elements: !1347)
!1346 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1347 = !{!1348, !1356, !1357, !1359}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1345, file: !1346, line: 36, baseType: !1349, size: 64)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1350, line: 13, baseType: !1351)
!1350 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !397, line: 175, baseType: !1352)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !397, line: 173, size: 64, elements: !1353)
!1353 = !{!1354}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1352, file: !397, line: 174, baseType: !1355, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !401, line: 22, baseType: !645)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1345, file: !1346, line: 42, baseType: !1349, size: 64, offset: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1345, file: !1346, line: 46, baseType: !1358, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !837, line: 29, baseType: !844)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1345, file: !1346, line: 47, baseType: !808, size: 128, offset: 128)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1317, file: !208, line: 462, baseType: !716, size: 64, offset: 640)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1317, file: !208, line: 463, baseType: !716, size: 64, offset: 704)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1317, file: !208, line: 464, baseType: !716, size: 64, offset: 768)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1317, file: !208, line: 465, baseType: !1364, size: 64, offset: 832)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1366)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !208, line: 367, size: 1408, elements: !1367)
!1367 = !{!1368, !1372, !1376, !1380, !1384, !1388, !1394, !1400, !1404, !1409, !1413, !1417, !1421, !1447, !1451, !1457, !1458, !1459, !1463, !1468, !1472, !1479}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1366, file: !208, line: 368, baseType: !1369, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!405, !1303, !1258}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1366, file: !208, line: 369, baseType: !1373, size: 64, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = !DISubroutineType(types: !1375)
!1375 = !{!405, !949, !1303}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1366, file: !208, line: 372, baseType: !1377, size: 64, offset: 128)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!405, !1316, !1258}
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1366, file: !208, line: 375, baseType: !1381, size: 64, offset: 192)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{!405, !1303}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1366, file: !208, line: 381, baseType: !1385, size: 64, offset: 256)
!1385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!1386 = !DISubroutineType(types: !1387)
!1387 = !{!405, !949, !1316, !811, !7}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1366, file: !208, line: 383, baseType: !1389, size: 64, offset: 320)
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = !DISubroutineType(types: !1391)
!1391 = !{null, !1392}
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !208, line: 290, flags: DIFlagFwdDecl)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1366, file: !208, line: 385, baseType: !1395, size: 64, offset: 384)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{!405, !949, !1316, !1115, !7, !7, !1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1366, file: !208, line: 388, baseType: !1401, size: 64, offset: 448)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1402, size: 64)
!1402 = !DISubroutineType(types: !1403)
!1403 = !{!405, !949, !1316, !1115, !7, !7, !1303, !398}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1366, file: !208, line: 393, baseType: !1405, size: 64, offset: 512)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{!1408, !1316, !1408}
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !397, line: 125, baseType: !757)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1366, file: !208, line: 394, baseType: !1410, size: 64, offset: 576)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1411, size: 64)
!1411 = !DISubroutineType(types: !1412)
!1412 = !{null, !1303, !7, !7}
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1366, file: !208, line: 395, baseType: !1414, size: 64, offset: 640)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!405, !1303, !396}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1366, file: !208, line: 396, baseType: !1418, size: 64, offset: 704)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{null, !1303}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1366, file: !208, line: 397, baseType: !1422, size: 64, offset: 768)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DISubroutineType(types: !1424)
!1424 = !{!905, !1425, !1445}
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !208, line: 320, size: 384, elements: !1427)
!1427 = !{!1428, !1429, !1430, !1434, !1435, !1436, !1437, !1438}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1426, file: !208, line: 321, baseType: !949, size: 64)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1426, file: !208, line: 326, baseType: !1115, size: 64, offset: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1426, file: !208, line: 327, baseType: !1431, size: 64, offset: 128)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = !DISubroutineType(types: !1433)
!1433 = !{null, !1425, !399, !399}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1426, file: !208, line: 328, baseType: !398, size: 64, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1426, file: !208, line: 329, baseType: !405, size: 32, offset: 256)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1426, file: !208, line: 330, baseType: !408, size: 16, offset: 288)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1426, file: !208, line: 331, baseType: !408, size: 16, offset: 304)
!1438 = !DIDerivedType(tag: DW_TAG_member, scope: !1426, file: !208, line: 332, baseType: !1439, size: 64, offset: 320)
!1439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1426, file: !208, line: 332, size: 64, elements: !1440)
!1440 = !{!1441, !1442}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1439, file: !208, line: 333, baseType: !7, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1439, file: !208, line: 334, baseType: !1443, size: 64)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !208, line: 334, flags: DIFlagFwdDecl)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !208, line: 64, flags: DIFlagFwdDecl)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1366, file: !208, line: 402, baseType: !1448, size: 64, offset: 832)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{!405, !1316, !1303, !1303, !183}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1366, file: !208, line: 404, baseType: !1452, size: 64, offset: 896)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DISubroutineType(types: !1454)
!1454 = !{!406, !1303, !1455}
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1456, line: 305, baseType: !7)
!1456 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1366, file: !208, line: 405, baseType: !1418, size: 64, offset: 960)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1366, file: !208, line: 406, baseType: !1381, size: 64, offset: 1024)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1366, file: !208, line: 407, baseType: !1460, size: 64, offset: 1088)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!405, !1303, !716, !716}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1366, file: !208, line: 409, baseType: !1464, size: 64, offset: 1152)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{null, !1303, !1467, !1467}
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1366, file: !208, line: 410, baseType: !1469, size: 64, offset: 1216)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = !DISubroutineType(types: !1471)
!1471 = !{!405, !1316, !1303}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1366, file: !208, line: 413, baseType: !1473, size: 64, offset: 1280)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!405, !1476, !949, !1478}
!1476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1477, size: 64)
!1477 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !208, line: 61, flags: DIFlagFwdDecl)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1366, file: !208, line: 415, baseType: !1480, size: 64, offset: 1344)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = !DISubroutineType(types: !1482)
!1482 = !{null, !949}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1317, file: !208, line: 466, baseType: !716, size: 64, offset: 896)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1317, file: !208, line: 467, baseType: !1485, size: 32, offset: 960)
!1485 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1486, line: 8, baseType: !411)
!1486 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1317, file: !208, line: 468, baseType: !836, offset: 992)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1317, file: !208, line: 469, baseType: !808, size: 128, offset: 1024)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1317, file: !208, line: 470, baseType: !398, size: 64, offset: 1152)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1312, file: !1305, line: 87, baseType: !716, size: 64, offset: 192)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1312, file: !1305, line: 94, baseType: !716, size: 64, offset: 256)
!1492 = !DIDerivedType(tag: DW_TAG_member, scope: !1309, file: !1305, line: 96, baseType: !1493, size: 64)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1309, file: !1305, line: 96, size: 64, elements: !1494)
!1494 = !{!1495}
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1493, file: !1305, line: 101, baseType: !1496, size: 64)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !397, line: 143, baseType: !757)
!1497 = !DIDerivedType(tag: DW_TAG_member, scope: !1309, file: !1305, line: 103, baseType: !1498, size: 320)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1309, file: !1305, line: 103, size: 320, elements: !1499)
!1499 = !{!1500, !1510, !1513, !1514}
!1500 = !DIDerivedType(tag: DW_TAG_member, scope: !1498, file: !1305, line: 104, baseType: !1501, size: 128)
!1501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1498, file: !1305, line: 104, size: 128, elements: !1502)
!1502 = !{!1503, !1504}
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1501, file: !1305, line: 105, baseType: !808, size: 128)
!1504 = !DIDerivedType(tag: DW_TAG_member, scope: !1501, file: !1305, line: 106, baseType: !1505, size: 128)
!1505 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1501, file: !1305, line: 106, size: 128, elements: !1506)
!1506 = !{!1507, !1508, !1509}
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1505, file: !1305, line: 107, baseType: !1303, size: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1505, file: !1305, line: 109, baseType: !405, size: 32, offset: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1505, file: !1305, line: 110, baseType: !405, size: 32, offset: 96)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1498, file: !1305, line: 117, baseType: !1511, size: 64, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1512, size: 64)
!1512 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1305, line: 117, flags: DIFlagFwdDecl)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1498, file: !1305, line: 119, baseType: !398, size: 64, offset: 192)
!1514 = !DIDerivedType(tag: DW_TAG_member, scope: !1498, file: !1305, line: 120, baseType: !1515, size: 64, offset: 256)
!1515 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1498, file: !1305, line: 120, size: 64, elements: !1516)
!1516 = !{!1517, !1518, !1519}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1515, file: !1305, line: 121, baseType: !398, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1515, file: !1305, line: 122, baseType: !716, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, scope: !1515, file: !1305, line: 123, baseType: !1520, size: 32)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1515, file: !1305, line: 123, size: 32, elements: !1521)
!1521 = !{!1522, !1523, !1524}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1520, file: !1305, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1520, file: !1305, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1520, file: !1305, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1525 = !DIDerivedType(tag: DW_TAG_member, scope: !1309, file: !1305, line: 130, baseType: !1526, size: 192)
!1526 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1309, file: !1305, line: 130, size: 192, elements: !1527)
!1527 = !{!1528, !1529, !1530, !1531, !1532}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1526, file: !1305, line: 131, baseType: !716, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1526, file: !1305, line: 134, baseType: !457, size: 8, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1526, file: !1305, line: 135, baseType: !457, size: 8, offset: 72)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1526, file: !1305, line: 136, baseType: !508, size: 32, offset: 96)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1526, file: !1305, line: 137, baseType: !7, size: 32, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, scope: !1309, file: !1305, line: 139, baseType: !1534, size: 256)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1309, file: !1305, line: 139, size: 256, elements: !1535)
!1535 = !{!1536, !1537, !1538}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1534, file: !1305, line: 140, baseType: !716, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1534, file: !1305, line: 141, baseType: !508, size: 32, offset: 64)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1534, file: !1305, line: 143, baseType: !808, size: 128, offset: 128)
!1539 = !DIDerivedType(tag: DW_TAG_member, scope: !1309, file: !1305, line: 145, baseType: !1540, size: 256)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1309, file: !1305, line: 145, size: 256, elements: !1541)
!1541 = !{!1542, !1543, !1545, !1546, !2818}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1540, file: !1305, line: 146, baseType: !716, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1540, file: !1305, line: 147, baseType: !1544, size: 64, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1295, line: 509, baseType: !1303)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1540, file: !1305, line: 148, baseType: !716, size: 64, offset: 128)
!1546 = !DIDerivedType(tag: DW_TAG_member, scope: !1540, file: !1305, line: 149, baseType: !1547, size: 64, offset: 192)
!1547 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1540, file: !1305, line: 149, size: 64, elements: !1548)
!1548 = !{!1549, !2817}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1547, file: !1305, line: 150, baseType: !1550, size: 64)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1305, line: 388, size: 7296, elements: !1552)
!1552 = !{!1553, !2813}
!1553 = !DIDerivedType(tag: DW_TAG_member, scope: !1551, file: !1305, line: 389, baseType: !1554, size: 7296)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1551, file: !1305, line: 389, size: 7296, elements: !1555)
!1555 = !{!1556, !1594, !1595, !1596, !1600, !1601, !1602, !1603, !1604, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1645, !1651, !1654, !1697, !1698, !2797, !2798, !2801, !2802, !2803, !2806, !2807, !2808, !2811, !2812}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1554, file: !1305, line: 390, baseType: !1557, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1305, line: 305, size: 1472, elements: !1559)
!1559 = !{!1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1574, !1575, !1580, !1581, !1584, !1588, !1589, !1590, !1591, !1592}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1558, file: !1305, line: 308, baseType: !716, size: 64)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1558, file: !1305, line: 309, baseType: !716, size: 64, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1558, file: !1305, line: 313, baseType: !1557, size: 64, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1558, file: !1305, line: 313, baseType: !1557, size: 64, offset: 192)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1558, file: !1305, line: 315, baseType: !1338, size: 192, align: 64, offset: 256)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1558, file: !1305, line: 323, baseType: !716, size: 64, offset: 448)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1558, file: !1305, line: 327, baseType: !1550, size: 64, offset: 512)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1558, file: !1305, line: 333, baseType: !1568, size: 64, offset: 576)
!1568 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1295, line: 284, baseType: !1569)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1295, line: 284, size: 64, elements: !1570)
!1570 = !{!1571}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1569, file: !1295, line: 284, baseType: !1572, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1573, line: 19, baseType: !716)
!1573 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1558, file: !1305, line: 334, baseType: !716, size: 64, offset: 640)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1558, file: !1305, line: 343, baseType: !1576, size: 256, offset: 704)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1558, file: !1305, line: 340, size: 256, elements: !1577)
!1577 = !{!1578, !1579}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1576, file: !1305, line: 341, baseType: !1338, size: 192, align: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1576, file: !1305, line: 342, baseType: !716, size: 64, offset: 192)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1558, file: !1305, line: 351, baseType: !808, size: 128, offset: 960)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1558, file: !1305, line: 353, baseType: !1582, size: 64, offset: 1088)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1305, line: 353, flags: DIFlagFwdDecl)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1558, file: !1305, line: 356, baseType: !1585, size: 64, offset: 1152)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1587)
!1587 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !1305, line: 356, flags: DIFlagFwdDecl)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1558, file: !1305, line: 359, baseType: !716, size: 64, offset: 1216)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1558, file: !1305, line: 361, baseType: !949, size: 64, offset: 1280)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1558, file: !1305, line: 362, baseType: !398, size: 64, offset: 1344)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1558, file: !1305, line: 365, baseType: !1349, size: 64, offset: 1408)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1558, file: !1305, line: 373, baseType: !1593, offset: 1472)
!1593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1305, line: 296, elements: !850)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1554, file: !1305, line: 391, baseType: !1334, size: 64, offset: 64)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1554, file: !1305, line: 392, baseType: !757, size: 64, offset: 128)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1554, file: !1305, line: 394, baseType: !1597, size: 64, offset: 192)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!716, !949, !716, !716, !716, !716}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1554, file: !1305, line: 398, baseType: !716, size: 64, offset: 256)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1554, file: !1305, line: 399, baseType: !716, size: 64, offset: 320)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1554, file: !1305, line: 405, baseType: !716, size: 64, offset: 384)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1554, file: !1305, line: 406, baseType: !716, size: 64, offset: 448)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1554, file: !1305, line: 407, baseType: !1605, size: 64, offset: 512)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1295, line: 286, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1295, line: 286, size: 64, elements: !1608)
!1608 = !{!1609}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1607, file: !1295, line: 286, baseType: !1610, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1573, line: 18, baseType: !716)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1554, file: !1305, line: 416, baseType: !508, size: 32, offset: 576)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1554, file: !1305, line: 428, baseType: !508, size: 32, offset: 608)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1554, file: !1305, line: 437, baseType: !508, size: 32, offset: 640)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1554, file: !1305, line: 447, baseType: !508, size: 32, offset: 672)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1554, file: !1305, line: 450, baseType: !1349, size: 64, offset: 704)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1554, file: !1305, line: 452, baseType: !405, size: 32, offset: 768)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1554, file: !1305, line: 454, baseType: !836, offset: 800)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1554, file: !1305, line: 457, baseType: !1345, size: 256, offset: 832)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1554, file: !1305, line: 459, baseType: !808, size: 128, offset: 1088)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1554, file: !1305, line: 466, baseType: !716, size: 64, offset: 1216)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1554, file: !1305, line: 467, baseType: !716, size: 64, offset: 1280)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1554, file: !1305, line: 469, baseType: !716, size: 64, offset: 1344)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1554, file: !1305, line: 470, baseType: !716, size: 64, offset: 1408)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1554, file: !1305, line: 471, baseType: !1351, size: 64, offset: 1472)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1554, file: !1305, line: 472, baseType: !716, size: 64, offset: 1536)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1554, file: !1305, line: 473, baseType: !716, size: 64, offset: 1600)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1554, file: !1305, line: 474, baseType: !716, size: 64, offset: 1664)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1554, file: !1305, line: 475, baseType: !716, size: 64, offset: 1728)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1554, file: !1305, line: 477, baseType: !836, offset: 1792)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1554, file: !1305, line: 478, baseType: !716, size: 64, offset: 1792)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1554, file: !1305, line: 478, baseType: !716, size: 64, offset: 1856)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1554, file: !1305, line: 478, baseType: !716, size: 64, offset: 1920)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1554, file: !1305, line: 478, baseType: !716, size: 64, offset: 1984)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1554, file: !1305, line: 479, baseType: !716, size: 64, offset: 2048)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1554, file: !1305, line: 479, baseType: !716, size: 64, offset: 2112)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1554, file: !1305, line: 479, baseType: !716, size: 64, offset: 2176)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1554, file: !1305, line: 480, baseType: !716, size: 64, offset: 2240)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1554, file: !1305, line: 480, baseType: !716, size: 64, offset: 2304)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1554, file: !1305, line: 480, baseType: !716, size: 64, offset: 2368)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1554, file: !1305, line: 480, baseType: !716, size: 64, offset: 2432)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1554, file: !1305, line: 482, baseType: !1642, size: 2816, offset: 2496)
!1642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 2816, elements: !1643)
!1643 = !{!1644}
!1644 = !DISubrange(count: 44)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1554, file: !1305, line: 488, baseType: !1646, size: 256, offset: 5312)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1647, line: 60, size: 256, elements: !1648)
!1647 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1648 = !{!1649}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1646, file: !1647, line: 61, baseType: !1650, size: 256)
!1650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1349, size: 256, elements: !647)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1554, file: !1305, line: 490, baseType: !1652, size: 64, offset: 5568)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1305, line: 490, flags: DIFlagFwdDecl)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1554, file: !1305, line: 493, baseType: !1655, size: 896, offset: 5632)
!1655 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1656, line: 53, baseType: !1657)
!1656 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1656, line: 13, size: 896, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662, !1665, !1666, !1673, !1674, !1694, !1695, !1696}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1657, file: !1656, line: 18, baseType: !757, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1657, file: !1656, line: 28, baseType: !1351, size: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1657, file: !1656, line: 31, baseType: !1345, size: 256, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1657, file: !1656, line: 32, baseType: !1663, size: 64, offset: 384)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 64)
!1664 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1656, line: 32, flags: DIFlagFwdDecl)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1657, file: !1656, line: 37, baseType: !410, size: 16, offset: 448)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1657, file: !1656, line: 40, baseType: !1667, size: 192, offset: 512)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1668, line: 53, size: 192, elements: !1669)
!1668 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1669 = !{!1670, !1671, !1672}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1667, file: !1668, line: 54, baseType: !1349, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1667, file: !1668, line: 55, baseType: !836, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1667, file: !1668, line: 59, baseType: !808, size: 128, offset: 64)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1657, file: !1656, line: 41, baseType: !398, size: 64, offset: 704)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1657, file: !1656, line: 42, baseType: !1675, size: 64, offset: 768)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1678, line: 13, size: 896, elements: !1679)
!1678 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1679 = !{!1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1677, file: !1678, line: 14, baseType: !398, size: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1677, file: !1678, line: 15, baseType: !716, size: 64, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1677, file: !1678, line: 17, baseType: !716, size: 64, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1677, file: !1678, line: 17, baseType: !716, size: 64, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1677, file: !1678, line: 19, baseType: !399, size: 64, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1677, file: !1678, line: 21, baseType: !399, size: 64, offset: 320)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1677, file: !1678, line: 22, baseType: !399, size: 64, offset: 384)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1677, file: !1678, line: 23, baseType: !399, size: 64, offset: 448)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1677, file: !1678, line: 24, baseType: !399, size: 64, offset: 512)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1677, file: !1678, line: 25, baseType: !399, size: 64, offset: 576)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1677, file: !1678, line: 26, baseType: !399, size: 64, offset: 640)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1677, file: !1678, line: 27, baseType: !399, size: 64, offset: 704)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1677, file: !1678, line: 28, baseType: !399, size: 64, offset: 768)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1677, file: !1678, line: 29, baseType: !399, size: 64, offset: 832)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1657, file: !1656, line: 44, baseType: !508, size: 32, offset: 832)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1657, file: !1656, line: 50, baseType: !408, size: 16, offset: 864)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1657, file: !1656, line: 51, baseType: !400, size: 16, offset: 880)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1554, file: !1305, line: 495, baseType: !716, size: 64, offset: 6528)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1554, file: !1305, line: 497, baseType: !1699, size: 64, offset: 6592)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1305, line: 381, size: 384, elements: !1701)
!1701 = !{!1702, !1703, !2796}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1700, file: !1305, line: 382, baseType: !508, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1700, file: !1305, line: 383, baseType: !1704, size: 128, offset: 64)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1305, line: 376, size: 128, elements: !1705)
!1705 = !{!1706, !2794}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1704, file: !1305, line: 377, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1709, line: 640, size: 48640, elements: !1710)
!1709 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1710 = !{!1711, !1717, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1732, !1750, !1761, !1842, !1843, !1844, !1855, !1856, !1858, !1859, !1860, !1861, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1942, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1980, !1982, !1983, !1984, !1996, !1997, !1998, !1999, !2000, !2001, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2025, !2030, !2212, !2213, !2214, !2215, !2219, !2222, !2225, !2228, !2231, !2235, !2336, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2382, !2383, !2384, !2385, !2386, !2391, !2392, !2393, !2396, !2397, !2400, !2403, !2406, !2409, !2452, !2455, !2456, !2535, !2536, !2539, !2540, !2543, !2544, !2545, !2549, !2550, !2551, !2564, !2565, !2566, !2576, !2581, !2584, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1708, file: !1709, line: 646, baseType: !1712, size: 128)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1713, line: 56, size: 128, elements: !1714)
!1713 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1714 = !{!1715, !1716}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1712, file: !1713, line: 57, baseType: !716, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1712, file: !1713, line: 58, baseType: !411, size: 32, offset: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1708, file: !1709, line: 649, baseType: !1718, size: 64, offset: 128)
!1718 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !399)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1708, file: !1709, line: 657, baseType: !398, size: 64, offset: 192)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1708, file: !1709, line: 658, baseType: !503, size: 32, offset: 256)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1708, file: !1709, line: 660, baseType: !7, size: 32, offset: 288)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1708, file: !1709, line: 661, baseType: !7, size: 32, offset: 320)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1708, file: !1709, line: 684, baseType: !405, size: 32, offset: 352)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1708, file: !1709, line: 686, baseType: !405, size: 32, offset: 384)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1708, file: !1709, line: 687, baseType: !405, size: 32, offset: 416)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1708, file: !1709, line: 688, baseType: !405, size: 32, offset: 448)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1708, file: !1709, line: 689, baseType: !7, size: 32, offset: 480)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1708, file: !1709, line: 691, baseType: !1729, size: 64, offset: 512)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1731)
!1731 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1709, line: 691, flags: DIFlagFwdDecl)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1708, file: !1709, line: 692, baseType: !1733, size: 832, offset: 576)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1709, line: 451, size: 832, elements: !1734)
!1734 = !{!1735, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1733, file: !1709, line: 453, baseType: !1736, size: 128)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1709, line: 325, size: 128, elements: !1737)
!1737 = !{!1738, !1739}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1736, file: !1709, line: 326, baseType: !716, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1736, file: !1709, line: 327, baseType: !411, size: 32, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1733, file: !1709, line: 454, baseType: !1338, size: 192, align: 64, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1733, file: !1709, line: 455, baseType: !808, size: 128, offset: 320)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1733, file: !1709, line: 456, baseType: !7, size: 32, offset: 448)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1733, file: !1709, line: 458, baseType: !757, size: 64, offset: 512)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1733, file: !1709, line: 459, baseType: !757, size: 64, offset: 576)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1733, file: !1709, line: 460, baseType: !757, size: 64, offset: 640)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1733, file: !1709, line: 461, baseType: !757, size: 64, offset: 704)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1733, file: !1709, line: 463, baseType: !757, size: 64, offset: 768)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1733, file: !1709, line: 465, baseType: !1749, offset: 832)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1709, line: 415, elements: !850)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1708, file: !1709, line: 693, baseType: !1751, size: 384, offset: 1408)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1709, line: 489, size: 384, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1756, !1757, !1758, !1759}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1751, file: !1709, line: 490, baseType: !808, size: 128)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1751, file: !1709, line: 491, baseType: !716, size: 64, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1751, file: !1709, line: 492, baseType: !716, size: 64, offset: 192)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1751, file: !1709, line: 493, baseType: !7, size: 32, offset: 256)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1751, file: !1709, line: 494, baseType: !410, size: 16, offset: 288)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1751, file: !1709, line: 495, baseType: !410, size: 16, offset: 304)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1751, file: !1709, line: 497, baseType: !1760, size: 64, offset: 320)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1708, file: !1709, line: 697, baseType: !1762, size: 1792, offset: 1792)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1709, line: 507, size: 1792, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1839, !1840}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1762, file: !1709, line: 508, baseType: !1338, size: 192, align: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1762, file: !1709, line: 515, baseType: !757, size: 64, offset: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1762, file: !1709, line: 516, baseType: !757, size: 64, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1762, file: !1709, line: 517, baseType: !757, size: 64, offset: 320)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1762, file: !1709, line: 518, baseType: !757, size: 64, offset: 384)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1762, file: !1709, line: 519, baseType: !757, size: 64, offset: 448)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1762, file: !1709, line: 526, baseType: !1355, size: 64, offset: 512)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1762, file: !1709, line: 527, baseType: !757, size: 64, offset: 576)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1762, file: !1709, line: 528, baseType: !7, size: 32, offset: 640)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1762, file: !1709, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1762, file: !1709, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1762, file: !1709, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1762, file: !1709, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1762, file: !1709, line: 563, baseType: !1778, size: 512, offset: 704)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !191, line: 118, size: 512, elements: !1779)
!1779 = !{!1780, !1788, !1789, !1794, !1835, !1836, !1837, !1838}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1778, file: !191, line: 119, baseType: !1781, size: 256)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1782, line: 9, size: 256, elements: !1783)
!1782 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1783 = !{!1784, !1785}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1781, file: !1782, line: 10, baseType: !1338, size: 192, align: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1781, file: !1782, line: 11, baseType: !1786, size: 64, offset: 192)
!1786 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1787, line: 29, baseType: !1355)
!1787 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1778, file: !191, line: 120, baseType: !1786, size: 64, offset: 256)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1778, file: !191, line: 121, baseType: !1790, size: 64, offset: 320)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!190, !1793}
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1778, file: !191, line: 122, baseType: !1795, size: 64, offset: 384)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !191, line: 159, size: 512, align: 512, elements: !1797)
!1797 = !{!1798, !1816, !1817, !1820, !1825, !1826, !1830, !1834}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1796, file: !191, line: 160, baseType: !1799, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !191, line: 214, size: 4608, align: 512, elements: !1801)
!1801 = !{!1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1800, file: !191, line: 215, baseType: !1358)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1800, file: !191, line: 216, baseType: !7, size: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1800, file: !191, line: 217, baseType: !7, size: 32, offset: 32)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1800, file: !191, line: 218, baseType: !7, size: 32, offset: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1800, file: !191, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1800, file: !191, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1800, file: !191, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1800, file: !191, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1800, file: !191, line: 233, baseType: !1786, size: 64, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1800, file: !191, line: 234, baseType: !1793, size: 64, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1800, file: !191, line: 235, baseType: !1786, size: 64, offset: 256)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1800, file: !191, line: 236, baseType: !1793, size: 64, offset: 320)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1800, file: !191, line: 237, baseType: !1815, size: 4096, offset: 512)
!1815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1796, size: 4096, elements: !532)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1796, file: !191, line: 161, baseType: !7, size: 32, offset: 64)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1796, file: !191, line: 162, baseType: !1818, size: 32, offset: 96)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !397, line: 27, baseType: !1819)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !907, line: 96, baseType: !405)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1796, file: !191, line: 163, baseType: !1821, size: 32, offset: 128)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !985, line: 276, baseType: !1822)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !985, line: 276, size: 32, elements: !1823)
!1823 = !{!1824}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1822, file: !985, line: 276, baseType: !989, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1796, file: !191, line: 164, baseType: !1793, size: 64, offset: 192)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1796, file: !191, line: 165, baseType: !1827, size: 128, offset: 256)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1782, line: 14, size: 128, elements: !1828)
!1828 = !{!1829}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1827, file: !1782, line: 15, baseType: !1330, size: 128)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1796, file: !191, line: 166, baseType: !1831, size: 64, offset: 384)
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!1786}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1796, file: !191, line: 167, baseType: !1786, size: 64, offset: 448)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1778, file: !191, line: 123, baseType: !455, size: 8, offset: 448)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1778, file: !191, line: 124, baseType: !455, size: 8, offset: 456)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1778, file: !191, line: 125, baseType: !455, size: 8, offset: 464)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1778, file: !191, line: 126, baseType: !455, size: 8, offset: 472)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1762, file: !1709, line: 572, baseType: !1778, size: 512, offset: 1216)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1762, file: !1709, line: 580, baseType: !1841, size: 64, offset: 1728)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1708, file: !1709, line: 721, baseType: !7, size: 32, offset: 3584)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1708, file: !1709, line: 722, baseType: !405, size: 32, offset: 3616)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1708, file: !1709, line: 723, baseType: !1845, size: 64, offset: 3648)
!1845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1846, size: 64)
!1846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1847)
!1847 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1848, line: 17, baseType: !1849)
!1848 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1848, line: 17, size: 64, elements: !1850)
!1850 = !{!1851}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1849, file: !1848, line: 17, baseType: !1852, size: 64)
!1852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, size: 64, elements: !1853)
!1853 = !{!1854}
!1854 = !DISubrange(count: 1)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1708, file: !1709, line: 724, baseType: !1847, size: 64, offset: 3712)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1708, file: !1709, line: 749, baseType: !1857, offset: 3776)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1709, line: 290, elements: !850)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1708, file: !1709, line: 751, baseType: !808, size: 128, offset: 3776)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1708, file: !1709, line: 757, baseType: !1550, size: 64, offset: 3904)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1708, file: !1709, line: 758, baseType: !1550, size: 64, offset: 3968)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1708, file: !1709, line: 761, baseType: !1862, size: 320, offset: 4032)
!1862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1647, line: 34, size: 320, elements: !1863)
!1863 = !{!1864, !1865}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1862, file: !1647, line: 35, baseType: !757, size: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1862, file: !1647, line: 36, baseType: !1866, size: 256, offset: 64)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1557, size: 256, elements: !647)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1708, file: !1709, line: 766, baseType: !405, size: 32, offset: 4352)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1708, file: !1709, line: 767, baseType: !405, size: 32, offset: 4384)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1708, file: !1709, line: 768, baseType: !405, size: 32, offset: 4416)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1708, file: !1709, line: 770, baseType: !405, size: 32, offset: 4448)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1708, file: !1709, line: 772, baseType: !716, size: 64, offset: 4480)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1708, file: !1709, line: 775, baseType: !7, size: 32, offset: 4544)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1708, file: !1709, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1708, file: !1709, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1708, file: !1709, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1708, file: !1709, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1708, file: !1709, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1708, file: !1709, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1708, file: !1709, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1708, file: !1709, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1708, file: !1709, line: 831, baseType: !716, size: 64, offset: 4672)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1708, file: !1709, line: 833, baseType: !1883, size: 384, offset: 4736)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !196, line: 25, size: 384, elements: !1884)
!1884 = !{!1885, !1890}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1883, file: !196, line: 26, baseType: !1886, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{!399, !1889}
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, scope: !1883, file: !196, line: 27, baseType: !1891, size: 320, offset: 64)
!1891 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1883, file: !196, line: 27, size: 320, elements: !1892)
!1892 = !{!1893, !1902, !1927}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1891, file: !196, line: 36, baseType: !1894, size: 320)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1891, file: !196, line: 29, size: 320, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899, !1900, !1901}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1894, file: !196, line: 30, baseType: !664, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1894, file: !196, line: 31, baseType: !411, size: 32, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1894, file: !196, line: 32, baseType: !411, size: 32, offset: 96)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1894, file: !196, line: 33, baseType: !411, size: 32, offset: 128)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1894, file: !196, line: 34, baseType: !757, size: 64, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1894, file: !196, line: 35, baseType: !664, size: 64, offset: 256)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1891, file: !196, line: 46, baseType: !1903, size: 192)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1891, file: !196, line: 38, size: 192, elements: !1904)
!1904 = !{!1905, !1906, !1907, !1926}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1903, file: !196, line: 39, baseType: !1818, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1903, file: !196, line: 40, baseType: !195, size: 32, offset: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, scope: !1903, file: !196, line: 41, baseType: !1908, size: 64, offset: 64)
!1908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1903, file: !196, line: 41, size: 64, elements: !1909)
!1909 = !{!1910, !1918}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1908, file: !196, line: 42, baseType: !1911, size: 64)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1913, line: 7, size: 128, elements: !1914)
!1913 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1914 = !{!1915, !1917}
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1912, file: !1913, line: 8, baseType: !1916, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !907, line: 93, baseType: !646)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1912, file: !1913, line: 9, baseType: !646, size: 64, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1908, file: !196, line: 43, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1921, line: 7, size: 64, elements: !1922)
!1921 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1922 = !{!1923, !1925}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1920, file: !1921, line: 8, baseType: !1924, size: 32)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1921, line: 5, baseType: !772)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1920, file: !1921, line: 9, baseType: !772, size: 32, offset: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1903, file: !196, line: 45, baseType: !757, size: 64, offset: 128)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1891, file: !196, line: 54, baseType: !1928, size: 256)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1891, file: !196, line: 48, size: 256, elements: !1929)
!1929 = !{!1930, !1938, !1939, !1940, !1941}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1928, file: !196, line: 49, baseType: !1931, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1933, line: 36, size: 64, elements: !1934)
!1933 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1934 = !{!1935, !1936, !1937}
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1932, file: !1933, line: 37, baseType: !405, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1932, file: !1933, line: 38, baseType: !404, size: 16, offset: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1932, file: !1933, line: 39, baseType: !404, size: 16, offset: 48)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1928, file: !196, line: 50, baseType: !405, size: 32, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1928, file: !196, line: 51, baseType: !405, size: 32, offset: 96)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1928, file: !196, line: 52, baseType: !716, size: 64, offset: 128)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1928, file: !196, line: 53, baseType: !716, size: 64, offset: 192)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1708, file: !1709, line: 835, baseType: !1943, size: 32, offset: 5120)
!1943 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !397, line: 22, baseType: !1944)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !907, line: 28, baseType: !405)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1708, file: !1709, line: 836, baseType: !1943, size: 32, offset: 5152)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1708, file: !1709, line: 840, baseType: !716, size: 64, offset: 5184)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1708, file: !1709, line: 849, baseType: !1707, size: 64, offset: 5248)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1708, file: !1709, line: 852, baseType: !1707, size: 64, offset: 5312)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1708, file: !1709, line: 857, baseType: !808, size: 128, offset: 5376)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1708, file: !1709, line: 858, baseType: !808, size: 128, offset: 5504)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1708, file: !1709, line: 859, baseType: !1707, size: 64, offset: 5632)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1708, file: !1709, line: 867, baseType: !808, size: 128, offset: 5696)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1708, file: !1709, line: 868, baseType: !808, size: 128, offset: 5824)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1708, file: !1709, line: 871, baseType: !1955, size: 64, offset: 5952)
!1955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1956, size: 64)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !217, line: 59, size: 768, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1961, !1963, !1964, !1971, !1972}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1956, file: !217, line: 61, baseType: !503, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1956, file: !217, line: 62, baseType: !7, size: 32, offset: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1956, file: !217, line: 63, baseType: !836, offset: 64)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1956, file: !217, line: 65, baseType: !1962, size: 256, offset: 64)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1217, size: 256, elements: !647)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1956, file: !217, line: 66, baseType: !1217, size: 64, offset: 320)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1956, file: !217, line: 68, baseType: !1965, size: 128, offset: 384)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1966, line: 40, baseType: !1967)
!1966 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1966, line: 36, size: 128, elements: !1968)
!1968 = !{!1969, !1970}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1967, file: !1966, line: 37, baseType: !836)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1967, file: !1966, line: 38, baseType: !808, size: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1956, file: !217, line: 69, baseType: !962, size: 128, align: 64, offset: 512)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1956, file: !217, line: 70, baseType: !1973, size: 128, offset: 640)
!1973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1974, size: 128, elements: !1853)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !217, line: 54, size: 128, elements: !1975)
!1975 = !{!1976, !1977}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1974, file: !217, line: 55, baseType: !405, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1974, file: !217, line: 56, baseType: !1978, size: 64, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !217, line: 56, flags: DIFlagFwdDecl)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1708, file: !1709, line: 872, baseType: !1981, size: 512, offset: 6016)
!1981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1221, size: 512, elements: !647)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1708, file: !1709, line: 873, baseType: !808, size: 128, offset: 6528)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1708, file: !1709, line: 874, baseType: !808, size: 128, offset: 6656)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1708, file: !1709, line: 876, baseType: !1985, size: 64, offset: 6784)
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1987, line: 26, size: 192, elements: !1988)
!1987 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1988 = !{!1989, !1990}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1986, file: !1987, line: 27, baseType: !7, size: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1986, file: !1987, line: 28, baseType: !1991, size: 128, offset: 64)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1992, line: 43, size: 128, elements: !1993)
!1992 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1993 = !{!1994, !1995}
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1991, file: !1992, line: 44, baseType: !1358)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1991, file: !1992, line: 45, baseType: !808, size: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1708, file: !1709, line: 879, baseType: !1287, size: 64, offset: 6848)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1708, file: !1709, line: 882, baseType: !1287, size: 64, offset: 6912)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1708, file: !1709, line: 884, baseType: !757, size: 64, offset: 6976)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1708, file: !1709, line: 885, baseType: !757, size: 64, offset: 7040)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1708, file: !1709, line: 890, baseType: !757, size: 64, offset: 7104)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1708, file: !1709, line: 891, baseType: !2002, size: 128, offset: 7168)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1709, line: 242, size: 128, elements: !2003)
!2003 = !{!2004, !2005, !2006}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2002, file: !1709, line: 244, baseType: !757, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2002, file: !1709, line: 245, baseType: !757, size: 64, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2002, file: !1709, line: 246, baseType: !1358, offset: 128)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1708, file: !1709, line: 900, baseType: !716, size: 64, offset: 7296)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1708, file: !1709, line: 901, baseType: !716, size: 64, offset: 7360)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1708, file: !1709, line: 904, baseType: !757, size: 64, offset: 7424)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1708, file: !1709, line: 907, baseType: !757, size: 64, offset: 7488)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1708, file: !1709, line: 910, baseType: !716, size: 64, offset: 7552)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1708, file: !1709, line: 911, baseType: !716, size: 64, offset: 7616)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1708, file: !1709, line: 914, baseType: !2014, size: 640, offset: 7680)
!2014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2015, line: 123, size: 640, elements: !2016)
!2015 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2016 = !{!2017, !2023, !2024}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2014, file: !2015, line: 124, baseType: !2018, size: 576)
!2018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2019, size: 576, elements: !609)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2015, line: 108, size: 192, elements: !2020)
!2020 = !{!2021, !2022}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2019, file: !2015, line: 109, baseType: !757, size: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2019, file: !2015, line: 110, baseType: !1827, size: 128, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2014, file: !2015, line: 125, baseType: !7, size: 32, offset: 576)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2014, file: !2015, line: 126, baseType: !7, size: 32, offset: 608)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1708, file: !1709, line: 917, baseType: !2026, size: 192, offset: 8320)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2015, line: 134, size: 192, elements: !2027)
!2027 = !{!2028, !2029}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2026, file: !2015, line: 135, baseType: !962, size: 128, align: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2026, file: !2015, line: 136, baseType: !7, size: 32, offset: 128)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1708, file: !1709, line: 923, baseType: !2031, size: 64, offset: 8512)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2033)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2034, line: 111, size: 1280, elements: !2035)
!2034 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2035 = !{!2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2055, !2056, !2057, !2058, !2059, !2060, !2165, !2166, !2167, !2168, !2194, !2197, !2207}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2033, file: !2034, line: 112, baseType: !508, size: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2033, file: !2034, line: 120, baseType: !1024, size: 32, offset: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2033, file: !2034, line: 121, baseType: !1032, size: 32, offset: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2033, file: !2034, line: 122, baseType: !1024, size: 32, offset: 96)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2033, file: !2034, line: 123, baseType: !1032, size: 32, offset: 128)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2033, file: !2034, line: 124, baseType: !1024, size: 32, offset: 160)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2033, file: !2034, line: 125, baseType: !1032, size: 32, offset: 192)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2033, file: !2034, line: 126, baseType: !1024, size: 32, offset: 224)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2033, file: !2034, line: 127, baseType: !1032, size: 32, offset: 256)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2033, file: !2034, line: 128, baseType: !7, size: 32, offset: 288)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2033, file: !2034, line: 129, baseType: !2047, size: 64, offset: 320)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2048, line: 26, baseType: !2049)
!2048 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2048, line: 24, size: 64, elements: !2050)
!2050 = !{!2051}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2049, file: !2048, line: 25, baseType: !2052, size: 64)
!2052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !412, size: 64, elements: !2053)
!2053 = !{!2054}
!2054 = !DISubrange(count: 2)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2033, file: !2034, line: 130, baseType: !2047, size: 64, offset: 384)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2033, file: !2034, line: 131, baseType: !2047, size: 64, offset: 448)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2033, file: !2034, line: 132, baseType: !2047, size: 64, offset: 512)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2033, file: !2034, line: 133, baseType: !2047, size: 64, offset: 576)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2033, file: !2034, line: 135, baseType: !457, size: 8, offset: 640)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2033, file: !2034, line: 137, baseType: !2061, size: 64, offset: 704)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2063, line: 189, size: 1664, elements: !2064)
!2063 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2064 = !{!2065, !2066, !2069, !2074, !2075, !2078, !2079, !2084, !2085, !2086, !2087, !2089, !2090, !2091, !2092, !2093, !2129, !2150}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2062, file: !2063, line: 190, baseType: !503, size: 32)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2062, file: !2063, line: 191, baseType: !2067, size: 32, offset: 32)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2063, line: 28, baseType: !2068)
!2068 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !397, line: 98, baseType: !772)
!2069 = !DIDerivedType(tag: DW_TAG_member, scope: !2062, file: !2063, line: 192, baseType: !2070, size: 192, offset: 64)
!2070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2062, file: !2063, line: 192, size: 192, elements: !2071)
!2071 = !{!2072, !2073}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2070, file: !2063, line: 193, baseType: !808, size: 128)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2070, file: !2063, line: 194, baseType: !1338, size: 192, align: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2062, file: !2063, line: 199, baseType: !1345, size: 256, offset: 256)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2062, file: !2063, line: 200, baseType: !2076, size: 64, offset: 512)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2063, line: 200, flags: DIFlagFwdDecl)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2062, file: !2063, line: 201, baseType: !398, size: 64, offset: 576)
!2079 = !DIDerivedType(tag: DW_TAG_member, scope: !2062, file: !2063, line: 202, baseType: !2080, size: 64, offset: 640)
!2080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2062, file: !2063, line: 202, size: 64, elements: !2081)
!2081 = !{!2082, !2083}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2080, file: !2063, line: 203, baseType: !1122, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2080, file: !2063, line: 204, baseType: !1122, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2062, file: !2063, line: 206, baseType: !1122, size: 64, offset: 704)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2062, file: !2063, line: 207, baseType: !1024, size: 32, offset: 768)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2062, file: !2063, line: 208, baseType: !1032, size: 32, offset: 800)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2062, file: !2063, line: 209, baseType: !2088, size: 32, offset: 832)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2063, line: 31, baseType: !1141)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2062, file: !2063, line: 210, baseType: !410, size: 16, offset: 864)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2062, file: !2063, line: 211, baseType: !410, size: 16, offset: 880)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2062, file: !2063, line: 215, baseType: !404, size: 16, offset: 896)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2062, file: !2063, line: 222, baseType: !716, size: 64, offset: 960)
!2093 = !DIDerivedType(tag: DW_TAG_member, scope: !2062, file: !2063, line: 239, baseType: !2094, size: 320, offset: 1024)
!2094 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2062, file: !2063, line: 239, size: 320, elements: !2095)
!2095 = !{!2096, !2121}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2094, file: !2063, line: 240, baseType: !2097, size: 320)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2063, line: 108, size: 320, elements: !2098)
!2098 = !{!2099, !2100, !2110, !2113, !2120}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2097, file: !2063, line: 110, baseType: !716, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_member, scope: !2097, file: !2063, line: 111, baseType: !2101, size: 64, offset: 64)
!2101 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2097, file: !2063, line: 111, size: 64, elements: !2102)
!2102 = !{!2103, !2109}
!2103 = !DIDerivedType(tag: DW_TAG_member, scope: !2101, file: !2063, line: 112, baseType: !2104, size: 64)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2101, file: !2063, line: 112, size: 64, elements: !2105)
!2105 = !{!2106, !2107}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2104, file: !2063, line: 114, baseType: !408, size: 16)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2104, file: !2063, line: 115, baseType: !2108, size: 48, offset: 16)
!2108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 48, elements: !682)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2101, file: !2063, line: 121, baseType: !716, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2097, file: !2063, line: 123, baseType: !2111, size: 64, offset: 128)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2063, line: 96, flags: DIFlagFwdDecl)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2097, file: !2063, line: 124, baseType: !2114, size: 64, offset: 192)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!2115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2063, line: 102, size: 192, elements: !2116)
!2116 = !{!2117, !2118, !2119}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2115, file: !2063, line: 103, baseType: !962, size: 128, align: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2115, file: !2063, line: 104, baseType: !503, size: 32, offset: 128)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2115, file: !2063, line: 105, baseType: !406, size: 8, offset: 160)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2097, file: !2063, line: 125, baseType: !421, size: 64, offset: 256)
!2121 = !DIDerivedType(tag: DW_TAG_member, scope: !2094, file: !2063, line: 241, baseType: !2122, size: 320)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2094, file: !2063, line: 241, size: 320, elements: !2123)
!2123 = !{!2124, !2125, !2126, !2127, !2128}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2122, file: !2063, line: 242, baseType: !716, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2122, file: !2063, line: 243, baseType: !716, size: 64, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2122, file: !2063, line: 244, baseType: !2111, size: 64, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2122, file: !2063, line: 245, baseType: !2114, size: 64, offset: 192)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2122, file: !2063, line: 246, baseType: !443, size: 64, offset: 256)
!2129 = !DIDerivedType(tag: DW_TAG_member, scope: !2062, file: !2063, line: 254, baseType: !2130, size: 256, offset: 1344)
!2130 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2062, file: !2063, line: 254, size: 256, elements: !2131)
!2131 = !{!2132, !2138}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2130, file: !2063, line: 255, baseType: !2133, size: 256)
!2133 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2063, line: 128, size: 256, elements: !2134)
!2134 = !{!2135, !2136}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2133, file: !2063, line: 129, baseType: !398, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2133, file: !2063, line: 130, baseType: !2137, size: 256)
!2137 = !DICompositeType(tag: DW_TAG_array_type, baseType: !398, size: 256, elements: !647)
!2138 = !DIDerivedType(tag: DW_TAG_member, scope: !2130, file: !2063, line: 256, baseType: !2139, size: 256)
!2139 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2130, file: !2063, line: 256, size: 256, elements: !2140)
!2140 = !{!2141, !2142}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2139, file: !2063, line: 258, baseType: !808, size: 128)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2139, file: !2063, line: 259, baseType: !2143, size: 128, offset: 128)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2144, line: 22, size: 128, elements: !2145)
!2144 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2145 = !{!2146, !2149}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2143, file: !2144, line: 23, baseType: !2147, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2144, line: 23, flags: DIFlagFwdDecl)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2143, file: !2144, line: 24, baseType: !716, size: 64, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2062, file: !2063, line: 274, baseType: !2151, size: 64, offset: 1600)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2063, line: 170, size: 192, elements: !2153)
!2153 = !{!2154, !2163, !2164}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2152, file: !2063, line: 171, baseType: !2155, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2063, line: 165, baseType: !2156)
!2156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2157 = !DISubroutineType(types: !2158)
!2158 = !{!405, !2061, !2159, !2161, !2061}
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2112)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2162, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2133)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2152, file: !2063, line: 172, baseType: !2061, size: 64, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2152, file: !2063, line: 173, baseType: !2111, size: 64, offset: 128)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2033, file: !2034, line: 138, baseType: !2061, size: 64, offset: 768)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2033, file: !2034, line: 139, baseType: !2061, size: 64, offset: 832)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2033, file: !2034, line: 140, baseType: !2061, size: 64, offset: 896)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2033, file: !2034, line: 145, baseType: !2169, size: 64, offset: 960)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2171, line: 13, size: 896, elements: !2172)
!2171 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2172 = !{!2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2170, file: !2171, line: 14, baseType: !503, size: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2170, file: !2171, line: 15, baseType: !508, size: 32, offset: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2170, file: !2171, line: 16, baseType: !508, size: 32, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2170, file: !2171, line: 21, baseType: !1349, size: 64, offset: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2170, file: !2171, line: 27, baseType: !716, size: 64, offset: 192)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2170, file: !2171, line: 28, baseType: !716, size: 64, offset: 256)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2170, file: !2171, line: 29, baseType: !1349, size: 64, offset: 320)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2170, file: !2171, line: 32, baseType: !1221, size: 128, offset: 384)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2170, file: !2171, line: 33, baseType: !1024, size: 32, offset: 512)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2170, file: !2171, line: 37, baseType: !1349, size: 64, offset: 576)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2170, file: !2171, line: 44, baseType: !2184, size: 256, offset: 640)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2185, line: 15, size: 256, elements: !2186)
!2185 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2186 = !{!2187, !2188, !2189, !2190, !2191, !2192, !2193}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2184, file: !2185, line: 16, baseType: !1358)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2184, file: !2185, line: 18, baseType: !405, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2184, file: !2185, line: 19, baseType: !405, size: 32, offset: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2184, file: !2185, line: 20, baseType: !405, size: 32, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2184, file: !2185, line: 21, baseType: !405, size: 32, offset: 96)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2184, file: !2185, line: 22, baseType: !716, size: 64, offset: 128)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2184, file: !2185, line: 23, baseType: !716, size: 64, offset: 192)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2033, file: !2034, line: 146, baseType: !2195, size: 64, offset: 1024)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1025, line: 18, flags: DIFlagFwdDecl)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2033, file: !2034, line: 147, baseType: !2198, size: 64, offset: 1088)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2034, line: 25, size: 64, elements: !2200)
!2200 = !{!2201, !2202, !2203}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2199, file: !2034, line: 26, baseType: !508, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2199, file: !2034, line: 27, baseType: !405, size: 32, offset: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2199, file: !2034, line: 28, baseType: !2204, offset: 64)
!2204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, elements: !2205)
!2205 = !{!2206}
!2206 = !DISubrange(count: 0)
!2207 = !DIDerivedType(tag: DW_TAG_member, scope: !2033, file: !2034, line: 149, baseType: !2208, size: 128, offset: 1152)
!2208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2033, file: !2034, line: 149, size: 128, elements: !2209)
!2209 = !{!2210, !2211}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2208, file: !2034, line: 150, baseType: !405, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2208, file: !2034, line: 151, baseType: !962, size: 128, align: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1708, file: !1709, line: 926, baseType: !2031, size: 64, offset: 8576)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1708, file: !1709, line: 929, baseType: !2031, size: 64, offset: 8640)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1708, file: !1709, line: 933, baseType: !2061, size: 64, offset: 8704)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1708, file: !1709, line: 943, baseType: !2216, size: 128, offset: 8768)
!2216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 128, elements: !2217)
!2217 = !{!2218}
!2218 = !DISubrange(count: 16)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1708, file: !1709, line: 945, baseType: !2220, size: 64, offset: 8896)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1709, line: 49, flags: DIFlagFwdDecl)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1708, file: !1709, line: 956, baseType: !2223, size: 64, offset: 8960)
!2223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2224, size: 64)
!2224 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1709, line: 45, flags: DIFlagFwdDecl)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1708, file: !1709, line: 959, baseType: !2226, size: 64, offset: 9024)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1709, line: 959, flags: DIFlagFwdDecl)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1708, file: !1709, line: 962, baseType: !2229, size: 64, offset: 9088)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!2230 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1709, line: 66, flags: DIFlagFwdDecl)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1708, file: !1709, line: 966, baseType: !2232, size: 64, offset: 9152)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 64)
!2233 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2234, line: 35, flags: DIFlagFwdDecl)
!2234 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1708, file: !1709, line: 969, baseType: !2236, size: 64, offset: 9216)
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2238, line: 82, size: 7296, elements: !2239)
!2238 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2239 = !{!2240, !2241, !2242, !2243, !2244, !2245, !2246, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2275, !2284, !2285, !2287, !2288, !2289, !2292, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2322, !2323, !2330, !2331, !2332, !2333, !2334, !2335}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2237, file: !2238, line: 83, baseType: !503, size: 32)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2237, file: !2238, line: 84, baseType: !508, size: 32, offset: 32)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2237, file: !2238, line: 85, baseType: !405, size: 32, offset: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2237, file: !2238, line: 86, baseType: !808, size: 128, offset: 128)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2237, file: !2238, line: 88, baseType: !1965, size: 128, offset: 256)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2237, file: !2238, line: 91, baseType: !1707, size: 64, offset: 384)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2237, file: !2238, line: 94, baseType: !2247, size: 192, offset: 448)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2248, line: 30, size: 192, elements: !2249)
!2248 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2249 = !{!2250, !2251}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2247, file: !2248, line: 31, baseType: !808, size: 128)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2247, file: !2248, line: 32, baseType: !2252, size: 64, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2253, line: 25, baseType: !2254)
!2253 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2253, line: 23, size: 64, elements: !2255)
!2255 = !{!2256}
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2254, file: !2253, line: 24, baseType: !1852, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2237, file: !2238, line: 97, baseType: !1217, size: 64, offset: 640)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2237, file: !2238, line: 100, baseType: !405, size: 32, offset: 704)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2237, file: !2238, line: 106, baseType: !405, size: 32, offset: 736)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2237, file: !2238, line: 107, baseType: !1707, size: 64, offset: 768)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2237, file: !2238, line: 110, baseType: !405, size: 32, offset: 832)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2237, file: !2238, line: 111, baseType: !7, size: 32, offset: 864)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2237, file: !2238, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2237, file: !2238, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2237, file: !2238, line: 128, baseType: !405, size: 32, offset: 928)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2237, file: !2238, line: 129, baseType: !808, size: 128, offset: 960)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2237, file: !2238, line: 132, baseType: !1778, size: 512, offset: 1088)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2237, file: !2238, line: 133, baseType: !1786, size: 64, offset: 1600)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2237, file: !2238, line: 140, baseType: !2270, size: 256, offset: 1664)
!2270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2271, size: 256, elements: !2053)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2238, line: 38, size: 128, elements: !2272)
!2272 = !{!2273, !2274}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2271, file: !2238, line: 39, baseType: !757, size: 64)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2271, file: !2238, line: 40, baseType: !757, size: 64, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2237, file: !2238, line: 146, baseType: !2276, size: 192, offset: 1920)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2238, line: 66, size: 192, elements: !2277)
!2277 = !{!2278}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2276, file: !2238, line: 67, baseType: !2279, size: 192)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2238, line: 47, size: 192, elements: !2280)
!2280 = !{!2281, !2282, !2283}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2279, file: !2238, line: 48, baseType: !1351, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2279, file: !2238, line: 49, baseType: !1351, size: 64, offset: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2279, file: !2238, line: 50, baseType: !1351, size: 64, offset: 128)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2237, file: !2238, line: 150, baseType: !2014, size: 640, offset: 2112)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2237, file: !2238, line: 153, baseType: !2286, size: 256, offset: 2752)
!2286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 256, elements: !647)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2237, file: !2238, line: 159, baseType: !1955, size: 64, offset: 3008)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2237, file: !2238, line: 162, baseType: !405, size: 32, offset: 3072)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2237, file: !2238, line: 164, baseType: !2290, size: 64, offset: 3136)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2238, line: 164, flags: DIFlagFwdDecl)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2237, file: !2238, line: 175, baseType: !2293, size: 32, offset: 3200)
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !985, line: 805, baseType: !2294)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !985, line: 798, size: 32, elements: !2295)
!2295 = !{!2296, !2297}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2294, file: !985, line: 803, baseType: !984, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2294, file: !985, line: 804, baseType: !836, offset: 32)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2237, file: !2238, line: 176, baseType: !757, size: 64, offset: 3264)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2237, file: !2238, line: 176, baseType: !757, size: 64, offset: 3328)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2237, file: !2238, line: 176, baseType: !757, size: 64, offset: 3392)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2237, file: !2238, line: 176, baseType: !757, size: 64, offset: 3456)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2237, file: !2238, line: 177, baseType: !757, size: 64, offset: 3520)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2237, file: !2238, line: 178, baseType: !757, size: 64, offset: 3584)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2237, file: !2238, line: 179, baseType: !2002, size: 128, offset: 3648)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2237, file: !2238, line: 180, baseType: !716, size: 64, offset: 3776)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2237, file: !2238, line: 180, baseType: !716, size: 64, offset: 3840)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2237, file: !2238, line: 180, baseType: !716, size: 64, offset: 3904)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2237, file: !2238, line: 180, baseType: !716, size: 64, offset: 3968)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2237, file: !2238, line: 181, baseType: !716, size: 64, offset: 4032)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2237, file: !2238, line: 181, baseType: !716, size: 64, offset: 4096)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2237, file: !2238, line: 181, baseType: !716, size: 64, offset: 4160)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2237, file: !2238, line: 181, baseType: !716, size: 64, offset: 4224)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2237, file: !2238, line: 182, baseType: !716, size: 64, offset: 4288)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2237, file: !2238, line: 182, baseType: !716, size: 64, offset: 4352)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2237, file: !2238, line: 182, baseType: !716, size: 64, offset: 4416)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2237, file: !2238, line: 182, baseType: !716, size: 64, offset: 4480)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2237, file: !2238, line: 183, baseType: !716, size: 64, offset: 4544)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2237, file: !2238, line: 183, baseType: !716, size: 64, offset: 4608)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2237, file: !2238, line: 184, baseType: !2320, offset: 4672)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2321, line: 12, elements: !850)
!2321 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2237, file: !2238, line: 192, baseType: !643, size: 64, offset: 4672)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2237, file: !2238, line: 203, baseType: !2324, size: 2048, offset: 4736)
!2324 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2325, size: 2048, elements: !2217)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2326, line: 43, size: 128, elements: !2327)
!2326 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2327 = !{!2328, !2329}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2325, file: !2326, line: 44, baseType: !921, size: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2325, file: !2326, line: 45, baseType: !921, size: 64, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2237, file: !2238, line: 220, baseType: !406, size: 8, offset: 6784)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2237, file: !2238, line: 221, baseType: !404, size: 16, offset: 6800)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2237, file: !2238, line: 222, baseType: !404, size: 16, offset: 6816)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2237, file: !2238, line: 224, baseType: !1550, size: 64, offset: 6848)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2237, file: !2238, line: 227, baseType: !1667, size: 192, offset: 6912)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2237, file: !2238, line: 233, baseType: !1667, size: 192, offset: 7104)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1708, file: !1709, line: 970, baseType: !2337, size: 64, offset: 9280)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2238, line: 20, size: 16576, elements: !2339)
!2339 = !{!2340, !2341, !2342, !2343}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2338, file: !2238, line: 21, baseType: !836)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2338, file: !2238, line: 22, baseType: !503, size: 32)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2338, file: !2238, line: 23, baseType: !1965, size: 128, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2338, file: !2238, line: 24, baseType: !2344, size: 16384, offset: 192)
!2344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2345, size: 16384, elements: !879)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2248, line: 49, size: 256, elements: !2346)
!2346 = !{!2347}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2345, file: !2248, line: 50, baseType: !2348, size: 256)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2248, line: 35, size: 256, elements: !2349)
!2349 = !{!2350, !2357, !2358, !2364}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2348, file: !2248, line: 37, baseType: !2351, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2352, line: 19, baseType: !2353)
!2352 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2354, size: 64)
!2354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2352, line: 18, baseType: !2355)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{null, !405}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2348, file: !2248, line: 38, baseType: !716, size: 64, offset: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2348, file: !2248, line: 44, baseType: !2359, size: 64, offset: 128)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2352, line: 22, baseType: !2360)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!2361 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2352, line: 21, baseType: !2362)
!2362 = !DISubroutineType(types: !2363)
!2363 = !{null}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2348, file: !2248, line: 46, baseType: !2252, size: 64, offset: 192)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1708, file: !1709, line: 971, baseType: !2252, size: 64, offset: 9344)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1708, file: !1709, line: 972, baseType: !2252, size: 64, offset: 9408)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1708, file: !1709, line: 974, baseType: !2252, size: 64, offset: 9472)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1708, file: !1709, line: 975, baseType: !2247, size: 192, offset: 9536)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1708, file: !1709, line: 976, baseType: !716, size: 64, offset: 9728)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1708, file: !1709, line: 977, baseType: !919, size: 64, offset: 9792)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1708, file: !1709, line: 978, baseType: !7, size: 32, offset: 9856)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1708, file: !1709, line: 980, baseType: !965, size: 64, offset: 9920)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1708, file: !1709, line: 989, baseType: !2374, size: 128, offset: 9984)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2375, line: 35, size: 128, elements: !2376)
!2375 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2376 = !{!2377, !2378, !2379}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2374, file: !2375, line: 36, baseType: !405, size: 32)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2374, file: !2375, line: 37, baseType: !508, size: 32, offset: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2374, file: !2375, line: 38, baseType: !2380, size: 64, offset: 64)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2375, line: 23, flags: DIFlagFwdDecl)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1708, file: !1709, line: 992, baseType: !757, size: 64, offset: 10112)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1708, file: !1709, line: 993, baseType: !757, size: 64, offset: 10176)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1708, file: !1709, line: 996, baseType: !836, offset: 10240)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1708, file: !1709, line: 999, baseType: !1358, offset: 10240)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1708, file: !1709, line: 1001, baseType: !2387, size: 64, offset: 10240)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1709, line: 636, size: 64, elements: !2388)
!2388 = !{!2389}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2387, file: !1709, line: 637, baseType: !2390, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1708, file: !1709, line: 1005, baseType: !1330, size: 128, offset: 10304)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1708, file: !1709, line: 1007, baseType: !1707, size: 64, offset: 10432)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1708, file: !1709, line: 1009, baseType: !2394, size: 64, offset: 10496)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1709, line: 1009, flags: DIFlagFwdDecl)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1708, file: !1709, line: 1043, baseType: !398, size: 64, offset: 10560)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1708, file: !1709, line: 1046, baseType: !2398, size: 64, offset: 10624)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1709, line: 41, flags: DIFlagFwdDecl)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1708, file: !1709, line: 1050, baseType: !2401, size: 64, offset: 10688)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2402, size: 64)
!2402 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1709, line: 42, flags: DIFlagFwdDecl)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1708, file: !1709, line: 1054, baseType: !2404, size: 64, offset: 10752)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1709, line: 55, flags: DIFlagFwdDecl)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1708, file: !1709, line: 1056, baseType: !2407, size: 64, offset: 10816)
!2407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2408, size: 64)
!2408 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1709, line: 40, flags: DIFlagFwdDecl)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1708, file: !1709, line: 1058, baseType: !2410, size: 64, offset: 10880)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2412, line: 99, size: 704, elements: !2413)
!2412 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2413 = !{!2414, !2415, !2416, !2417, !2418, !2419, !2420, !2439, !2440}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2411, file: !2412, line: 100, baseType: !1349, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2411, file: !2412, line: 101, baseType: !508, size: 32, offset: 64)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2411, file: !2412, line: 102, baseType: !508, size: 32, offset: 96)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2411, file: !2412, line: 105, baseType: !836, offset: 128)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2411, file: !2412, line: 107, baseType: !410, size: 16, offset: 128)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2411, file: !2412, line: 109, baseType: !1321, size: 128, offset: 192)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2411, file: !2412, line: 110, baseType: !2421, size: 64, offset: 320)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2412, line: 73, size: 448, elements: !2423)
!2423 = !{!2424, !2427, !2428, !2433, !2438}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2422, file: !2412, line: 74, baseType: !2425, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2426, size: 64)
!2426 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2412, line: 74, flags: DIFlagFwdDecl)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2422, file: !2412, line: 75, baseType: !2410, size: 64, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, scope: !2422, file: !2412, line: 83, baseType: !2429, size: 128, offset: 128)
!2429 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2422, file: !2412, line: 83, size: 128, elements: !2430)
!2430 = !{!2431, !2432}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2429, file: !2412, line: 84, baseType: !808, size: 128)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2429, file: !2412, line: 85, baseType: !1511, size: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, scope: !2422, file: !2412, line: 87, baseType: !2434, size: 128, offset: 256)
!2434 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2422, file: !2412, line: 87, size: 128, elements: !2435)
!2435 = !{!2436, !2437}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2434, file: !2412, line: 88, baseType: !1221, size: 128)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2434, file: !2412, line: 89, baseType: !962, size: 128, align: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2422, file: !2412, line: 92, baseType: !7, size: 32, offset: 384)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2411, file: !2412, line: 111, baseType: !1217, size: 64, offset: 384)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2411, file: !2412, line: 113, baseType: !2441, size: 256, offset: 448)
!2441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2442, line: 102, size: 256, elements: !2443)
!2442 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2443 = !{!2444, !2445, !2446}
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2441, file: !2442, line: 103, baseType: !1349, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2441, file: !2442, line: 104, baseType: !808, size: 128, offset: 64)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2441, file: !2442, line: 105, baseType: !2447, size: 64, offset: 192)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2442, line: 21, baseType: !2448)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = !DISubroutineType(types: !2450)
!2450 = !{null, !2451}
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2441, size: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1708, file: !1709, line: 1061, baseType: !2453, size: 64, offset: 10944)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1709, line: 43, flags: DIFlagFwdDecl)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1708, file: !1709, line: 1064, baseType: !716, size: 64, offset: 11008)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1708, file: !1709, line: 1065, baseType: !2457, size: 64, offset: 11072)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2248, line: 14, baseType: !2459)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2248, line: 12, size: 384, elements: !2460)
!2460 = !{!2461}
!2461 = !DIDerivedType(tag: DW_TAG_member, scope: !2459, file: !2248, line: 13, baseType: !2462, size: 384)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2459, file: !2248, line: 13, size: 384, elements: !2463)
!2463 = !{!2464, !2465, !2466, !2467}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2462, file: !2248, line: 13, baseType: !405, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2462, file: !2248, line: 13, baseType: !405, size: 32, offset: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2462, file: !2248, line: 13, baseType: !405, size: 32, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2462, file: !2248, line: 13, baseType: !2468, size: 256, offset: 128)
!2468 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2469, line: 32, size: 256, elements: !2470)
!2469 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2470 = !{!2471, !2476, !2489, !2495, !2504, !2524, !2529}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2468, file: !2469, line: 37, baseType: !2472, size: 64)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2468, file: !2469, line: 34, size: 64, elements: !2473)
!2473 = !{!2474, !2475}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2472, file: !2469, line: 35, baseType: !1944, size: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2472, file: !2469, line: 36, baseType: !1030, size: 32, offset: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2468, file: !2469, line: 45, baseType: !2477, size: 192)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2468, file: !2469, line: 40, size: 192, elements: !2478)
!2478 = !{!2479, !2481, !2482, !2488}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2477, file: !2469, line: 41, baseType: !2480, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !907, line: 95, baseType: !405)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2477, file: !2469, line: 42, baseType: !405, size: 32, offset: 32)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2477, file: !2469, line: 43, baseType: !2483, size: 64, offset: 64)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2469, line: 11, baseType: !2484)
!2484 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2469, line: 8, size: 64, elements: !2485)
!2485 = !{!2486, !2487}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2484, file: !2469, line: 9, baseType: !405, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2484, file: !2469, line: 10, baseType: !398, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2477, file: !2469, line: 44, baseType: !405, size: 32, offset: 128)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2468, file: !2469, line: 52, baseType: !2490, size: 128)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2468, file: !2469, line: 48, size: 128, elements: !2491)
!2491 = !{!2492, !2493, !2494}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2490, file: !2469, line: 49, baseType: !1944, size: 32)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2490, file: !2469, line: 50, baseType: !1030, size: 32, offset: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2490, file: !2469, line: 51, baseType: !2483, size: 64, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2468, file: !2469, line: 61, baseType: !2496, size: 256)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2468, file: !2469, line: 55, size: 256, elements: !2497)
!2497 = !{!2498, !2499, !2500, !2501, !2503}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2496, file: !2469, line: 56, baseType: !1944, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2496, file: !2469, line: 57, baseType: !1030, size: 32, offset: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2496, file: !2469, line: 58, baseType: !405, size: 32, offset: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2496, file: !2469, line: 59, baseType: !2502, size: 64, offset: 128)
!2502 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !907, line: 94, baseType: !908)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2496, file: !2469, line: 60, baseType: !2502, size: 64, offset: 192)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2468, file: !2469, line: 95, baseType: !2505, size: 256)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2468, file: !2469, line: 64, size: 256, elements: !2506)
!2506 = !{!2507, !2508}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2505, file: !2469, line: 65, baseType: !398, size: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, scope: !2505, file: !2469, line: 77, baseType: !2509, size: 192, offset: 64)
!2509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2505, file: !2469, line: 77, size: 192, elements: !2510)
!2510 = !{!2511, !2512, !2519}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2509, file: !2469, line: 82, baseType: !404, size: 16)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2509, file: !2469, line: 88, baseType: !2513, size: 192)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2509, file: !2469, line: 84, size: 192, elements: !2514)
!2514 = !{!2515, !2517, !2518}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2513, file: !2469, line: 85, baseType: !2516, size: 64)
!2516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 64, elements: !532)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2513, file: !2469, line: 86, baseType: !398, size: 64, offset: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2513, file: !2469, line: 87, baseType: !398, size: 64, offset: 128)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2509, file: !2469, line: 93, baseType: !2520, size: 96)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2509, file: !2469, line: 90, size: 96, elements: !2521)
!2521 = !{!2522, !2523}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2520, file: !2469, line: 91, baseType: !2516, size: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2520, file: !2469, line: 92, baseType: !412, size: 32, offset: 64)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2468, file: !2469, line: 101, baseType: !2525, size: 128)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2468, file: !2469, line: 98, size: 128, elements: !2526)
!2526 = !{!2527, !2528}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2525, file: !2469, line: 99, baseType: !399, size: 64)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2525, file: !2469, line: 100, baseType: !405, size: 32, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2468, file: !2469, line: 108, baseType: !2530, size: 128)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2468, file: !2469, line: 104, size: 128, elements: !2531)
!2531 = !{!2532, !2533, !2534}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2530, file: !2469, line: 105, baseType: !398, size: 64)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2530, file: !2469, line: 106, baseType: !405, size: 32, offset: 64)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2530, file: !2469, line: 107, baseType: !7, size: 32, offset: 96)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1708, file: !1709, line: 1067, baseType: !2320, offset: 11136)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1708, file: !1709, line: 1099, baseType: !2537, size: 64, offset: 11136)
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2538 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1709, line: 56, flags: DIFlagFwdDecl)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1708, file: !1709, line: 1103, baseType: !808, size: 128, offset: 11200)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1708, file: !1709, line: 1104, baseType: !2541, size: 64, offset: 11328)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2542, size: 64)
!2542 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1709, line: 46, flags: DIFlagFwdDecl)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1708, file: !1709, line: 1105, baseType: !1667, size: 192, offset: 11392)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1708, file: !1709, line: 1106, baseType: !7, size: 32, offset: 11584)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1708, file: !1709, line: 1109, baseType: !2546, size: 128, offset: 11648)
!2546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2547, size: 128, elements: !2053)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1709, line: 51, flags: DIFlagFwdDecl)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1708, file: !1709, line: 1110, baseType: !1667, size: 192, offset: 11776)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1708, file: !1709, line: 1111, baseType: !808, size: 128, offset: 11968)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1708, file: !1709, line: 1173, baseType: !2552, size: 64, offset: 12096)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2554, line: 62, size: 256, align: 256, elements: !2555)
!2554 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2555 = !{!2556, !2557, !2558, !2563}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2553, file: !2554, line: 75, baseType: !412, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2553, file: !2554, line: 90, baseType: !412, size: 32, offset: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2553, file: !2554, line: 124, baseType: !2559, size: 64, offset: 64)
!2559 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2553, file: !2554, line: 109, size: 64, elements: !2560)
!2560 = !{!2561, !2562}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2559, file: !2554, line: 110, baseType: !642, size: 64)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2559, file: !2554, line: 112, baseType: !642, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2553, file: !2554, line: 144, baseType: !412, size: 32, offset: 128)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1708, file: !1709, line: 1174, baseType: !411, size: 32, offset: 12160)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1708, file: !1709, line: 1179, baseType: !716, size: 64, offset: 12224)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1708, file: !1709, line: 1182, baseType: !2567, size: 128, offset: 12288)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1647, line: 76, size: 128, elements: !2568)
!2568 = !{!2569, !2574, !2575}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2567, file: !1647, line: 85, baseType: !2570, size: 64)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2571, line: 7, size: 64, elements: !2572)
!2571 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2572 = !{!2573}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2570, file: !2571, line: 12, baseType: !1849, size: 64)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2567, file: !1647, line: 88, baseType: !406, size: 8, offset: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2567, file: !1647, line: 95, baseType: !406, size: 8, offset: 72)
!2576 = !DIDerivedType(tag: DW_TAG_member, scope: !1708, file: !1709, line: 1184, baseType: !2577, size: 128, offset: 12416)
!2577 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1708, file: !1709, line: 1184, size: 128, elements: !2578)
!2578 = !{!2579, !2580}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2577, file: !1709, line: 1185, baseType: !503, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2577, file: !1709, line: 1186, baseType: !962, size: 128, align: 64)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1708, file: !1709, line: 1190, baseType: !2582, size: 64, offset: 12544)
!2582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2583, size: 64)
!2583 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1709, line: 53, flags: DIFlagFwdDecl)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1708, file: !1709, line: 1192, baseType: !2585, size: 128, offset: 12608)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1647, line: 64, size: 128, elements: !2586)
!2586 = !{!2587, !2588, !2589}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2585, file: !1647, line: 65, baseType: !1303, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2585, file: !1647, line: 67, baseType: !412, size: 32, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2585, file: !1647, line: 68, baseType: !412, size: 32, offset: 96)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1708, file: !1709, line: 1206, baseType: !405, size: 32, offset: 12736)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1708, file: !1709, line: 1207, baseType: !405, size: 32, offset: 12768)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1708, file: !1709, line: 1209, baseType: !716, size: 64, offset: 12800)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1708, file: !1709, line: 1219, baseType: !757, size: 64, offset: 12864)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1708, file: !1709, line: 1220, baseType: !757, size: 64, offset: 12928)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1708, file: !1709, line: 1317, baseType: !405, size: 32, offset: 12992)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1708, file: !1709, line: 1319, baseType: !1707, size: 64, offset: 13056)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1708, file: !1709, line: 1322, baseType: !2598, size: 64, offset: 13120)
!2598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2599, size: 64)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2600, line: 56, size: 512, elements: !2601)
!2600 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2601 = !{!2602, !2603, !2604, !2605, !2606, !2607, !2608, !2610}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2599, file: !2600, line: 57, baseType: !2598, size: 64)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2599, file: !2600, line: 58, baseType: !398, size: 64, offset: 64)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2599, file: !2600, line: 59, baseType: !716, size: 64, offset: 128)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2599, file: !2600, line: 60, baseType: !716, size: 64, offset: 192)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2599, file: !2600, line: 61, baseType: !1398, size: 64, offset: 256)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2599, file: !2600, line: 62, baseType: !7, size: 32, offset: 320)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2599, file: !2600, line: 63, baseType: !2609, size: 64, offset: 384)
!2609 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !397, line: 153, baseType: !757)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2599, file: !2600, line: 64, baseType: !2611, size: 64, offset: 448)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1708, file: !1709, line: 1326, baseType: !503, size: 32, offset: 13184)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1708, file: !1709, line: 1342, baseType: !398, size: 64, offset: 13248)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1708, file: !1709, line: 1343, baseType: !642, size: 64, offset: 13312)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1708, file: !1709, line: 1344, baseType: !757, size: 64, offset: 13376)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1708, file: !1709, line: 1345, baseType: !642, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1708, file: !1709, line: 1346, baseType: !642, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1708, file: !1709, line: 1347, baseType: !642, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1708, file: !1709, line: 1348, baseType: !962, size: 128, align: 64, offset: 13504)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1708, file: !1709, line: 1358, baseType: !2622, size: 34816, offset: 13824)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2623, line: 485, size: 34816, elements: !2624)
!2623 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2624 = !{!2625, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2654, !2655, !2656, !2657, !2658, !2659, !2662, !2663, !2664}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2622, file: !2623, line: 487, baseType: !2626, size: 192)
!2626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2627, size: 192, elements: !609)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2628, line: 16, size: 64, elements: !2629)
!2628 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2629 = !{!2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2627, file: !2628, line: 17, baseType: !408, size: 16)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2627, file: !2628, line: 18, baseType: !408, size: 16, offset: 16)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2627, file: !2628, line: 19, baseType: !408, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2627, file: !2628, line: 19, baseType: !408, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2627, file: !2628, line: 19, baseType: !408, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2627, file: !2628, line: 19, baseType: !408, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2627, file: !2628, line: 19, baseType: !408, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2627, file: !2628, line: 20, baseType: !408, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2627, file: !2628, line: 20, baseType: !408, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2627, file: !2628, line: 20, baseType: !408, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2627, file: !2628, line: 20, baseType: !408, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2627, file: !2628, line: 20, baseType: !408, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2627, file: !2628, line: 20, baseType: !408, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2622, file: !2623, line: 491, baseType: !716, size: 64, offset: 192)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2622, file: !2623, line: 495, baseType: !410, size: 16, offset: 256)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2622, file: !2623, line: 496, baseType: !410, size: 16, offset: 272)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2622, file: !2623, line: 497, baseType: !410, size: 16, offset: 288)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2622, file: !2623, line: 498, baseType: !410, size: 16, offset: 304)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2622, file: !2623, line: 502, baseType: !716, size: 64, offset: 320)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2622, file: !2623, line: 503, baseType: !716, size: 64, offset: 384)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2622, file: !2623, line: 514, baseType: !2651, size: 256, offset: 448)
!2651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2652, size: 256, elements: !647)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!2653 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2623, line: 483, flags: DIFlagFwdDecl)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2622, file: !2623, line: 516, baseType: !716, size: 64, offset: 704)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2622, file: !2623, line: 518, baseType: !716, size: 64, offset: 768)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2622, file: !2623, line: 520, baseType: !716, size: 64, offset: 832)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2622, file: !2623, line: 521, baseType: !716, size: 64, offset: 896)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2622, file: !2623, line: 522, baseType: !716, size: 64, offset: 960)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2622, file: !2623, line: 528, baseType: !2660, size: 64, offset: 1024)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 64)
!2661 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2623, line: 10, flags: DIFlagFwdDecl)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2622, file: !2623, line: 535, baseType: !716, size: 64, offset: 1088)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2622, file: !2623, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2622, file: !2623, line: 540, baseType: !2665, size: 33280, offset: 1536)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2666, line: 317, size: 33280, elements: !2667)
!2666 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2667 = !{!2668, !2669, !2670}
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2665, file: !2666, line: 330, baseType: !7, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2665, file: !2666, line: 337, baseType: !716, size: 64, offset: 64)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2665, file: !2666, line: 348, baseType: !2671, size: 32768, offset: 512)
!2671 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2666, line: 304, size: 32768, elements: !2672)
!2672 = !{!2673, !2688, !2727, !2777, !2790}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2671, file: !2666, line: 305, baseType: !2674, size: 896)
!2674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2666, line: 12, size: 896, elements: !2675)
!2675 = !{!2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2687}
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2674, file: !2666, line: 13, baseType: !411, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2674, file: !2666, line: 14, baseType: !411, size: 32, offset: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2674, file: !2666, line: 15, baseType: !411, size: 32, offset: 64)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2674, file: !2666, line: 16, baseType: !411, size: 32, offset: 96)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2674, file: !2666, line: 17, baseType: !411, size: 32, offset: 128)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2674, file: !2666, line: 18, baseType: !411, size: 32, offset: 160)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2674, file: !2666, line: 19, baseType: !411, size: 32, offset: 192)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2674, file: !2666, line: 22, baseType: !2684, size: 640, offset: 224)
!2684 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 640, elements: !2685)
!2685 = !{!2686}
!2686 = !DISubrange(count: 20)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2674, file: !2666, line: 25, baseType: !411, size: 32, offset: 864)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2671, file: !2666, line: 306, baseType: !2689, size: 4096, align: 128)
!2689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2666, line: 34, size: 4096, align: 128, elements: !2690)
!2690 = !{!2691, !2692, !2693, !2694, !2695, !2710, !2711, !2712, !2716, !2718, !2722}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2689, file: !2666, line: 35, baseType: !408, size: 16)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2689, file: !2666, line: 36, baseType: !408, size: 16, offset: 16)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2689, file: !2666, line: 37, baseType: !408, size: 16, offset: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2689, file: !2666, line: 38, baseType: !408, size: 16, offset: 48)
!2695 = !DIDerivedType(tag: DW_TAG_member, scope: !2689, file: !2666, line: 39, baseType: !2696, size: 128, offset: 64)
!2696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2689, file: !2666, line: 39, size: 128, elements: !2697)
!2697 = !{!2698, !2703}
!2698 = !DIDerivedType(tag: DW_TAG_member, scope: !2696, file: !2666, line: 40, baseType: !2699, size: 128)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2696, file: !2666, line: 40, size: 128, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2699, file: !2666, line: 41, baseType: !757, size: 64)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2699, file: !2666, line: 42, baseType: !757, size: 64, offset: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, scope: !2696, file: !2666, line: 44, baseType: !2704, size: 128)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2696, file: !2666, line: 44, size: 128, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2704, file: !2666, line: 45, baseType: !411, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2704, file: !2666, line: 46, baseType: !411, size: 32, offset: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2704, file: !2666, line: 47, baseType: !411, size: 32, offset: 64)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2704, file: !2666, line: 48, baseType: !411, size: 32, offset: 96)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2689, file: !2666, line: 51, baseType: !411, size: 32, offset: 192)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2689, file: !2666, line: 52, baseType: !411, size: 32, offset: 224)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2689, file: !2666, line: 55, baseType: !2713, size: 1024, offset: 256)
!2713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 1024, elements: !2714)
!2714 = !{!2715}
!2715 = !DISubrange(count: 32)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2689, file: !2666, line: 58, baseType: !2717, size: 2048, offset: 1280)
!2717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 2048, elements: !879)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2689, file: !2666, line: 60, baseType: !2719, size: 384, offset: 3328)
!2719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 384, elements: !2720)
!2720 = !{!2721}
!2721 = !DISubrange(count: 12)
!2722 = !DIDerivedType(tag: DW_TAG_member, scope: !2689, file: !2666, line: 62, baseType: !2723, size: 384, offset: 3712)
!2723 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2689, file: !2666, line: 62, size: 384, elements: !2724)
!2724 = !{!2725, !2726}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2723, file: !2666, line: 63, baseType: !2719, size: 384)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2723, file: !2666, line: 64, baseType: !2719, size: 384)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2671, file: !2666, line: 307, baseType: !2728, size: 1088)
!2728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2666, line: 79, size: 1088, elements: !2729)
!2729 = !{!2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2776}
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2728, file: !2666, line: 80, baseType: !411, size: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2728, file: !2666, line: 81, baseType: !411, size: 32, offset: 32)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2728, file: !2666, line: 82, baseType: !411, size: 32, offset: 64)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2728, file: !2666, line: 83, baseType: !411, size: 32, offset: 96)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2728, file: !2666, line: 84, baseType: !411, size: 32, offset: 128)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2728, file: !2666, line: 85, baseType: !411, size: 32, offset: 160)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2728, file: !2666, line: 86, baseType: !411, size: 32, offset: 192)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2728, file: !2666, line: 88, baseType: !2684, size: 640, offset: 224)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2728, file: !2666, line: 89, baseType: !455, size: 8, offset: 864)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2728, file: !2666, line: 90, baseType: !455, size: 8, offset: 872)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2728, file: !2666, line: 91, baseType: !455, size: 8, offset: 880)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2728, file: !2666, line: 92, baseType: !455, size: 8, offset: 888)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2728, file: !2666, line: 93, baseType: !455, size: 8, offset: 896)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2728, file: !2666, line: 94, baseType: !455, size: 8, offset: 904)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2728, file: !2666, line: 95, baseType: !2745, size: 64, offset: 960)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2747, line: 11, size: 128, elements: !2748)
!2747 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2748 = !{!2749, !2750}
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2746, file: !2747, line: 12, baseType: !399, size: 64)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2746, file: !2747, line: 13, baseType: !2751, size: 64, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2753, line: 56, size: 1344, elements: !2754)
!2753 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2754 = !{!2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2752, file: !2753, line: 61, baseType: !716, size: 64)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2752, file: !2753, line: 62, baseType: !716, size: 64, offset: 64)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2752, file: !2753, line: 63, baseType: !716, size: 64, offset: 128)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2752, file: !2753, line: 64, baseType: !716, size: 64, offset: 192)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2752, file: !2753, line: 65, baseType: !716, size: 64, offset: 256)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2752, file: !2753, line: 66, baseType: !716, size: 64, offset: 320)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2752, file: !2753, line: 68, baseType: !716, size: 64, offset: 384)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2752, file: !2753, line: 69, baseType: !716, size: 64, offset: 448)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2752, file: !2753, line: 70, baseType: !716, size: 64, offset: 512)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2752, file: !2753, line: 71, baseType: !716, size: 64, offset: 576)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2752, file: !2753, line: 72, baseType: !716, size: 64, offset: 640)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2752, file: !2753, line: 73, baseType: !716, size: 64, offset: 704)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2752, file: !2753, line: 74, baseType: !716, size: 64, offset: 768)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2752, file: !2753, line: 75, baseType: !716, size: 64, offset: 832)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2752, file: !2753, line: 76, baseType: !716, size: 64, offset: 896)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2752, file: !2753, line: 81, baseType: !716, size: 64, offset: 960)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2752, file: !2753, line: 83, baseType: !716, size: 64, offset: 1024)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2752, file: !2753, line: 84, baseType: !716, size: 64, offset: 1088)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2752, file: !2753, line: 85, baseType: !716, size: 64, offset: 1152)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2752, file: !2753, line: 86, baseType: !716, size: 64, offset: 1216)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2752, file: !2753, line: 87, baseType: !716, size: 64, offset: 1280)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2728, file: !2666, line: 96, baseType: !411, size: 32, offset: 1024)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2671, file: !2666, line: 308, baseType: !2778, size: 4608, align: 512)
!2778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2666, line: 289, size: 4608, align: 512, elements: !2779)
!2779 = !{!2780, !2781, !2788}
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2778, file: !2666, line: 290, baseType: !2689, size: 4096, align: 128)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2778, file: !2666, line: 291, baseType: !2782, size: 512, offset: 4096)
!2782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2666, line: 268, size: 512, elements: !2783)
!2783 = !{!2784, !2785, !2786}
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2782, file: !2666, line: 269, baseType: !757, size: 64)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2782, file: !2666, line: 270, baseType: !757, size: 64, offset: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2782, file: !2666, line: 271, baseType: !2787, size: 384, offset: 128)
!2787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 384, elements: !682)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2778, file: !2666, line: 292, baseType: !2789, offset: 4608)
!2789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, elements: !2205)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2671, file: !2666, line: 309, baseType: !2791, size: 32768)
!2791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 32768, elements: !2792)
!2792 = !{!2793}
!2793 = !DISubrange(count: 4096)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1704, file: !1305, line: 378, baseType: !2795, size: 64, offset: 64)
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1700, file: !1305, line: 384, baseType: !1986, size: 192, offset: 192)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1554, file: !1305, line: 500, baseType: !836, offset: 6656)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1554, file: !1305, line: 501, baseType: !2799, size: 64, offset: 6656)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1305, line: 387, flags: DIFlagFwdDecl)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1554, file: !1305, line: 516, baseType: !2195, size: 64, offset: 6720)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1554, file: !1305, line: 519, baseType: !949, size: 64, offset: 6784)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1554, file: !1305, line: 521, baseType: !2804, size: 64, offset: 6848)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1305, line: 521, flags: DIFlagFwdDecl)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1554, file: !1305, line: 545, baseType: !508, size: 32, offset: 6912)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1554, file: !1305, line: 548, baseType: !406, size: 8, offset: 6944)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1554, file: !1305, line: 550, baseType: !2809, offset: 6952)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2810, line: 142, elements: !850)
!2810 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1554, file: !1305, line: 554, baseType: !2441, size: 256, offset: 6976)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1554, file: !1305, line: 557, baseType: !411, size: 32, offset: 7232)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1551, file: !1305, line: 565, baseType: !2814, offset: 7296)
!2814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !716, elements: !2815)
!2815 = !{!2816}
!2816 = !DISubrange(count: -1)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1547, file: !1305, line: 151, baseType: !508, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1540, file: !1305, line: 156, baseType: !836, offset: 256)
!2819 = !DIDerivedType(tag: DW_TAG_member, scope: !1309, file: !1305, line: 159, baseType: !2820, size: 128)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1309, file: !1305, line: 159, size: 128, elements: !2821)
!2821 = !{!2822, !2825}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2820, file: !1305, line: 161, baseType: !2823, size: 64)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !1305, line: 161, flags: DIFlagFwdDecl)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2820, file: !1305, line: 162, baseType: !398, size: 64, offset: 64)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1309, file: !1305, line: 176, baseType: !962, size: 128, align: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, scope: !1304, file: !1305, line: 179, baseType: !2828, size: 32, offset: 384)
!2828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1304, file: !1305, line: 179, size: 32, elements: !2829)
!2829 = !{!2830, !2831, !2832, !2833}
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2828, file: !1305, line: 184, baseType: !508, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2828, file: !1305, line: 192, baseType: !7, size: 32)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2828, file: !1305, line: 194, baseType: !7, size: 32)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2828, file: !1305, line: 195, baseType: !405, size: 32)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1304, file: !1305, line: 199, baseType: !508, size: 32, offset: 416)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1239, file: !208, line: 1964, baseType: !2836, size: 64, offset: 1344)
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = !DISubroutineType(types: !2838)
!2838 = !{!399, !1181, !2839}
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2841, line: 12, size: 256, elements: !2842)
!2841 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2842 = !{!2843, !2844, !2845, !2846, !2847}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2840, file: !2841, line: 13, baseType: !396, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2840, file: !2841, line: 16, baseType: !405, size: 32, offset: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2840, file: !2841, line: 23, baseType: !716, size: 64, offset: 64)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2840, file: !2841, line: 30, baseType: !716, size: 64, offset: 128)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2840, file: !2841, line: 33, baseType: !2848, size: 64, offset: 192)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2849, size: 64)
!2849 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1305, line: 27, flags: DIFlagFwdDecl)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1239, file: !208, line: 1966, baseType: !2836, size: 64, offset: 1408)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1182, file: !208, line: 1424, baseType: !2852, size: 64, offset: 448)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2854)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !202, line: 322, size: 704, elements: !2855)
!2855 = !{!2856, !2902, !2906, !2910, !2911, !2912, !2913, !2914, !2919, !2924, !2928}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2854, file: !202, line: 323, baseType: !2857, size: 64)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!405, !2860}
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !202, line: 294, size: 1600, elements: !2862)
!2862 = !{!2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2887, !2888, !2889}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2861, file: !202, line: 295, baseType: !1221, size: 128)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2861, file: !202, line: 296, baseType: !808, size: 128, offset: 128)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2861, file: !202, line: 297, baseType: !808, size: 128, offset: 256)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2861, file: !202, line: 298, baseType: !808, size: 128, offset: 384)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2861, file: !202, line: 299, baseType: !1667, size: 192, offset: 512)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2861, file: !202, line: 300, baseType: !836, offset: 704)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2861, file: !202, line: 301, baseType: !508, size: 32, offset: 704)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2861, file: !202, line: 302, baseType: !1181, size: 64, offset: 768)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2861, file: !202, line: 303, baseType: !2872, size: 64, offset: 832)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !202, line: 68, size: 64, elements: !2873)
!2873 = !{!2874, !2886}
!2874 = !DIDerivedType(tag: DW_TAG_member, scope: !2872, file: !202, line: 69, baseType: !2875, size: 32)
!2875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2872, file: !202, line: 69, size: 32, elements: !2876)
!2876 = !{!2877, !2878, !2879}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2875, file: !202, line: 70, baseType: !1024, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2875, file: !202, line: 71, baseType: !1032, size: 32)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2875, file: !202, line: 72, baseType: !2880, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2881, line: 24, baseType: !2882)
!2881 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2881, line: 22, size: 32, elements: !2883)
!2883 = !{!2884}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2882, file: !2881, line: 23, baseType: !2885, size: 32)
!2885 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2881, line: 20, baseType: !1030)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2872, file: !202, line: 74, baseType: !201, size: 32, offset: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2861, file: !202, line: 304, baseType: !1115, size: 64, offset: 896)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2861, file: !202, line: 305, baseType: !716, size: 64, offset: 960)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2861, file: !202, line: 306, baseType: !2890, size: 576, offset: 1024)
!2890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !202, line: 205, size: 576, elements: !2891)
!2891 = !{!2892, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901}
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2890, file: !202, line: 206, baseType: !2893, size: 64)
!2893 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !202, line: 66, baseType: !646)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2890, file: !202, line: 207, baseType: !2893, size: 64, offset: 64)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2890, file: !202, line: 208, baseType: !2893, size: 64, offset: 128)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2890, file: !202, line: 209, baseType: !2893, size: 64, offset: 192)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2890, file: !202, line: 210, baseType: !2893, size: 64, offset: 256)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2890, file: !202, line: 211, baseType: !2893, size: 64, offset: 320)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2890, file: !202, line: 212, baseType: !2893, size: 64, offset: 384)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2890, file: !202, line: 213, baseType: !1122, size: 64, offset: 448)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2890, file: !202, line: 214, baseType: !1122, size: 64, offset: 512)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2854, file: !202, line: 324, baseType: !2903, size: 64, offset: 64)
!2903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!2904 = !DISubroutineType(types: !2905)
!2905 = !{!2860, !1181, !405}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2854, file: !202, line: 325, baseType: !2907, size: 64, offset: 128)
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = !DISubroutineType(types: !2909)
!2909 = !{null, !2860}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2854, file: !202, line: 326, baseType: !2857, size: 64, offset: 192)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2854, file: !202, line: 327, baseType: !2857, size: 64, offset: 256)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2854, file: !202, line: 328, baseType: !2857, size: 64, offset: 320)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2854, file: !202, line: 329, baseType: !1267, size: 64, offset: 384)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2854, file: !202, line: 332, baseType: !2915, size: 64, offset: 448)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 64)
!2916 = !DISubroutineType(types: !2917)
!2917 = !{!2918, !1018}
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2854, file: !202, line: 333, baseType: !2920, size: 64, offset: 512)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = !DISubroutineType(types: !2922)
!2922 = !{!405, !1018, !2923}
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2854, file: !202, line: 335, baseType: !2925, size: 64, offset: 576)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = !DISubroutineType(types: !2927)
!2927 = !{!405, !1018, !2918}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2854, file: !202, line: 337, baseType: !2929, size: 64, offset: 640)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{!405, !1181, !2932}
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1182, file: !208, line: 1425, baseType: !2934, size: 64, offset: 512)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2936)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !202, line: 428, size: 704, elements: !2937)
!2937 = !{!2938, !2942, !2943, !2947, !2948, !2949, !2964, !2987, !2991, !2992, !3015}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2936, file: !202, line: 429, baseType: !2939, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!405, !1181, !405, !405, !1131}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2936, file: !202, line: 430, baseType: !1267, size: 64, offset: 64)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2936, file: !202, line: 431, baseType: !2944, size: 64, offset: 128)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DISubroutineType(types: !2946)
!2946 = !{!405, !1181, !7}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2936, file: !202, line: 432, baseType: !2944, size: 64, offset: 192)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2936, file: !202, line: 433, baseType: !1267, size: 64, offset: 256)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2936, file: !202, line: 434, baseType: !2950, size: 64, offset: 320)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{!405, !1181, !405, !2953}
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !202, line: 415, size: 256, elements: !2955)
!2955 = !{!2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2954, file: !202, line: 416, baseType: !405, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2954, file: !202, line: 417, baseType: !7, size: 32, offset: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2954, file: !202, line: 418, baseType: !7, size: 32, offset: 64)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2954, file: !202, line: 420, baseType: !7, size: 32, offset: 96)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2954, file: !202, line: 421, baseType: !7, size: 32, offset: 128)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2954, file: !202, line: 422, baseType: !7, size: 32, offset: 160)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2954, file: !202, line: 423, baseType: !7, size: 32, offset: 192)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2954, file: !202, line: 424, baseType: !7, size: 32, offset: 224)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2936, file: !202, line: 435, baseType: !2965, size: 64, offset: 384)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DISubroutineType(types: !2967)
!2967 = !{!405, !1181, !2872, !2968}
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !202, line: 343, size: 960, elements: !2970)
!2970 = !{!2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2969, file: !202, line: 344, baseType: !405, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2969, file: !202, line: 345, baseType: !757, size: 64, offset: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2969, file: !202, line: 346, baseType: !757, size: 64, offset: 128)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2969, file: !202, line: 347, baseType: !757, size: 64, offset: 192)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2969, file: !202, line: 348, baseType: !757, size: 64, offset: 256)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2969, file: !202, line: 349, baseType: !757, size: 64, offset: 320)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2969, file: !202, line: 350, baseType: !757, size: 64, offset: 384)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2969, file: !202, line: 351, baseType: !1355, size: 64, offset: 448)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2969, file: !202, line: 353, baseType: !1355, size: 64, offset: 512)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2969, file: !202, line: 354, baseType: !405, size: 32, offset: 576)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2969, file: !202, line: 355, baseType: !405, size: 32, offset: 608)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2969, file: !202, line: 356, baseType: !757, size: 64, offset: 640)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2969, file: !202, line: 357, baseType: !757, size: 64, offset: 704)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2969, file: !202, line: 358, baseType: !757, size: 64, offset: 768)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2969, file: !202, line: 359, baseType: !1355, size: 64, offset: 832)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2969, file: !202, line: 360, baseType: !405, size: 32, offset: 896)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2936, file: !202, line: 436, baseType: !2988, size: 64, offset: 448)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!405, !1181, !2932, !2968}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2936, file: !202, line: 438, baseType: !2965, size: 64, offset: 512)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2936, file: !202, line: 439, baseType: !2993, size: 64, offset: 576)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!405, !1181, !2996}
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !202, line: 409, size: 1408, elements: !2998)
!2998 = !{!2999, !3000}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2997, file: !202, line: 410, baseType: !7, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2997, file: !202, line: 411, baseType: !3001, size: 1344, offset: 64)
!3001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3002, size: 1344, elements: !609)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !202, line: 395, size: 448, elements: !3003)
!3003 = !{!3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3014}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3002, file: !202, line: 396, baseType: !7, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3002, file: !202, line: 397, baseType: !7, size: 32, offset: 32)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3002, file: !202, line: 399, baseType: !7, size: 32, offset: 64)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3002, file: !202, line: 400, baseType: !7, size: 32, offset: 96)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3002, file: !202, line: 401, baseType: !7, size: 32, offset: 128)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3002, file: !202, line: 402, baseType: !7, size: 32, offset: 160)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3002, file: !202, line: 403, baseType: !7, size: 32, offset: 192)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3002, file: !202, line: 404, baseType: !643, size: 64, offset: 256)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3002, file: !202, line: 405, baseType: !3013, size: 64, offset: 320)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !397, line: 126, baseType: !757)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3002, file: !202, line: 406, baseType: !3013, size: 64, offset: 384)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2936, file: !202, line: 440, baseType: !2944, size: 64, offset: 640)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1182, file: !208, line: 1426, baseType: !3017, size: 64, offset: 576)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3018 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3019)
!3019 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !208, line: 49, flags: DIFlagFwdDecl)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1182, file: !208, line: 1427, baseType: !716, size: 64, offset: 640)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1182, file: !208, line: 1428, baseType: !716, size: 64, offset: 704)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1182, file: !208, line: 1429, baseType: !716, size: 64, offset: 768)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1182, file: !208, line: 1430, baseType: !979, size: 64, offset: 832)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1182, file: !208, line: 1431, baseType: !1345, size: 256, offset: 896)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1182, file: !208, line: 1432, baseType: !405, size: 32, offset: 1152)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1182, file: !208, line: 1433, baseType: !508, size: 32, offset: 1184)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1182, file: !208, line: 1437, baseType: !3028, size: 64, offset: 1216)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3031)
!3031 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !208, line: 1437, flags: DIFlagFwdDecl)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1182, file: !208, line: 1449, baseType: !3033, size: 64, offset: 1280)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !995, line: 34, size: 64, elements: !3034)
!3034 = !{!3035}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3033, file: !995, line: 35, baseType: !998, size: 64)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1182, file: !208, line: 1450, baseType: !808, size: 128, offset: 1344)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1182, file: !208, line: 1451, baseType: !3038, size: 64, offset: 1472)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !208, line: 699, flags: DIFlagFwdDecl)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1182, file: !208, line: 1452, baseType: !2407, size: 64, offset: 1536)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1182, file: !208, line: 1453, baseType: !3042, size: 64, offset: 1600)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3043, size: 64)
!3043 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !208, line: 1453, flags: DIFlagFwdDecl)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1182, file: !208, line: 1454, baseType: !1221, size: 128, offset: 1664)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1182, file: !208, line: 1455, baseType: !7, size: 32, offset: 1792)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1182, file: !208, line: 1456, baseType: !3047, size: 2432, offset: 1856)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !202, line: 518, size: 2432, elements: !3048)
!3048 = !{!3049, !3050, !3051, !3053, !3085}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3047, file: !202, line: 519, baseType: !7, size: 32)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3047, file: !202, line: 520, baseType: !1345, size: 256, offset: 64)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3047, file: !202, line: 521, baseType: !3052, size: 192, offset: 320)
!3052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1018, size: 192, elements: !609)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3047, file: !202, line: 522, baseType: !3054, size: 1728, offset: 512)
!3054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3055, size: 1728, elements: !609)
!3055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !202, line: 222, size: 576, elements: !3056)
!3056 = !{!3057, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084}
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3055, file: !202, line: 223, baseType: !3058, size: 64)
!3058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3059, size: 64)
!3059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !202, line: 443, size: 256, elements: !3060)
!3060 = !{!3061, !3062, !3075, !3076}
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3059, file: !202, line: 444, baseType: !405, size: 32)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3059, file: !202, line: 445, baseType: !3063, size: 64, offset: 64)
!3063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 64)
!3064 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3065)
!3065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !202, line: 310, size: 512, elements: !3066)
!3066 = !{!3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3065, file: !202, line: 311, baseType: !1267, size: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3065, file: !202, line: 312, baseType: !1267, size: 64, offset: 64)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3065, file: !202, line: 313, baseType: !1267, size: 64, offset: 128)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3065, file: !202, line: 314, baseType: !1267, size: 64, offset: 192)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3065, file: !202, line: 315, baseType: !2857, size: 64, offset: 256)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3065, file: !202, line: 316, baseType: !2857, size: 64, offset: 320)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3065, file: !202, line: 317, baseType: !2857, size: 64, offset: 384)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3065, file: !202, line: 318, baseType: !2929, size: 64, offset: 448)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3059, file: !202, line: 446, baseType: !425, size: 64, offset: 128)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3059, file: !202, line: 447, baseType: !3058, size: 64, offset: 192)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3055, file: !202, line: 224, baseType: !405, size: 32, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3055, file: !202, line: 226, baseType: !808, size: 128, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3055, file: !202, line: 227, baseType: !716, size: 64, offset: 256)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3055, file: !202, line: 228, baseType: !7, size: 32, offset: 320)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3055, file: !202, line: 229, baseType: !7, size: 32, offset: 352)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3055, file: !202, line: 230, baseType: !2893, size: 64, offset: 384)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3055, file: !202, line: 231, baseType: !2893, size: 64, offset: 448)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3055, file: !202, line: 232, baseType: !398, size: 64, offset: 512)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3047, file: !202, line: 523, baseType: !3086, size: 192, offset: 2240)
!3086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3063, size: 192, elements: !609)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1182, file: !208, line: 1458, baseType: !3088, size: 2112, offset: 4288)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !208, line: 1410, size: 2112, elements: !3089)
!3089 = !{!3090, !3091, !3092}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3088, file: !208, line: 1411, baseType: !405, size: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3088, file: !208, line: 1412, baseType: !1965, size: 128, offset: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3088, file: !208, line: 1413, baseType: !3093, size: 1920, offset: 192)
!3093 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3094, size: 1920, elements: !609)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3095, line: 12, size: 640, elements: !3096)
!3095 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3096 = !{!3097, !3105, !3106, !3111, !3112}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3094, file: !3095, line: 13, baseType: !3098, size: 320)
!3098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3099, line: 17, size: 320, elements: !3100)
!3099 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3100 = !{!3101, !3102, !3103, !3104}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3098, file: !3099, line: 18, baseType: !405, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3098, file: !3099, line: 19, baseType: !405, size: 32, offset: 32)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3098, file: !3099, line: 20, baseType: !1965, size: 128, offset: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3098, file: !3099, line: 22, baseType: !962, size: 128, align: 64, offset: 192)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3094, file: !3095, line: 14, baseType: !477, size: 64, offset: 320)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3094, file: !3095, line: 15, baseType: !3107, size: 64, offset: 384)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3108, line: 16, size: 64, elements: !3109)
!3108 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3109 = !{!3110}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3107, file: !3108, line: 17, baseType: !1707, size: 64)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3094, file: !3095, line: 16, baseType: !1965, size: 128, offset: 448)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3094, file: !3095, line: 17, baseType: !508, size: 32, offset: 576)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1182, file: !208, line: 1465, baseType: !398, size: 64, offset: 6400)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1182, file: !208, line: 1468, baseType: !411, size: 32, offset: 6464)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1182, file: !208, line: 1470, baseType: !1122, size: 64, offset: 6528)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1182, file: !208, line: 1471, baseType: !1122, size: 64, offset: 6592)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1182, file: !208, line: 1473, baseType: !412, size: 32, offset: 6656)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1182, file: !208, line: 1474, baseType: !3119, size: 64, offset: 6720)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !208, line: 603, flags: DIFlagFwdDecl)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1182, file: !208, line: 1477, baseType: !3122, size: 256, offset: 6784)
!3122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 256, elements: !2714)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1182, file: !208, line: 1478, baseType: !3124, size: 128, offset: 7040)
!3124 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3125, line: 18, baseType: !3126)
!3125 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3126 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3125, line: 16, size: 128, elements: !3127)
!3127 = !{!3128}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3126, file: !3125, line: 17, baseType: !3129, size: 128)
!3129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 128, elements: !2217)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1182, file: !208, line: 1480, baseType: !7, size: 32, offset: 7168)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1182, file: !208, line: 1481, baseType: !3132, size: 32, offset: 7200)
!3132 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !397, line: 150, baseType: !7)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1182, file: !208, line: 1487, baseType: !1667, size: 192, offset: 7232)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1182, file: !208, line: 1493, baseType: !421, size: 64, offset: 7424)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1182, file: !208, line: 1495, baseType: !3136, size: 64, offset: 7488)
!3136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3137, size: 64)
!3137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3138)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !977, line: 135, size: 1024, align: 512, elements: !3139)
!3139 = !{!3140, !3144, !3145, !3152, !3158, !3162, !3166, !3170, !3171, !3175, !3179, !3184, !3188}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3138, file: !977, line: 136, baseType: !3141, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!405, !979, !7}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3138, file: !977, line: 137, baseType: !3141, size: 64, offset: 64)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3138, file: !977, line: 138, baseType: !3146, size: 64, offset: 128)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = !DISubroutineType(types: !3148)
!3148 = !{!405, !3149, !3151}
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !980)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3138, file: !977, line: 139, baseType: !3153, size: 64, offset: 192)
!3153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3154, size: 64)
!3154 = !DISubroutineType(types: !3155)
!3155 = !{!405, !3149, !7, !421, !3156}
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1003)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3138, file: !977, line: 141, baseType: !3159, size: 64, offset: 256)
!3159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3160 = !DISubroutineType(types: !3161)
!3161 = !{!405, !3149}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3138, file: !977, line: 142, baseType: !3163, size: 64, offset: 320)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3164 = !DISubroutineType(types: !3165)
!3165 = !{!405, !979}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3138, file: !977, line: 143, baseType: !3167, size: 64, offset: 384)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 64)
!3168 = !DISubroutineType(types: !3169)
!3169 = !{null, !979}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3138, file: !977, line: 144, baseType: !3167, size: 64, offset: 448)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3138, file: !977, line: 145, baseType: !3172, size: 64, offset: 512)
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = !DISubroutineType(types: !3174)
!3174 = !{null, !979, !1018}
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3138, file: !977, line: 146, baseType: !3176, size: 64, offset: 576)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = !DISubroutineType(types: !3178)
!3178 = !{!443, !979, !443, !405}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3138, file: !977, line: 147, baseType: !3180, size: 64, offset: 640)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 64)
!3181 = !DISubroutineType(types: !3182)
!3182 = !{!975, !3183}
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3138, file: !977, line: 148, baseType: !3185, size: 64, offset: 704)
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 64)
!3186 = !DISubroutineType(types: !3187)
!3187 = !{!405, !1131, !406}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3138, file: !977, line: 149, baseType: !3189, size: 64, offset: 768)
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DISubroutineType(types: !3191)
!3191 = !{!979, !979, !3192}
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1019)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1182, file: !208, line: 1500, baseType: !405, size: 32, offset: 7552)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1182, file: !208, line: 1502, baseType: !3196, size: 448, offset: 7616)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2841, line: 60, size: 448, elements: !3197)
!3197 = !{!3198, !3203, !3204, !3205, !3206, !3207, !3208}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3196, file: !2841, line: 61, baseType: !3199, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3200, size: 64)
!3200 = !DISubroutineType(types: !3201)
!3201 = !{!716, !3202, !2839}
!3202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3196, size: 64)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3196, file: !2841, line: 63, baseType: !3199, size: 64, offset: 64)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3196, file: !2841, line: 66, baseType: !399, size: 64, offset: 128)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3196, file: !2841, line: 67, baseType: !405, size: 32, offset: 192)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3196, file: !2841, line: 68, baseType: !7, size: 32, offset: 224)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3196, file: !2841, line: 71, baseType: !808, size: 128, offset: 256)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3196, file: !2841, line: 77, baseType: !3209, size: 64, offset: 384)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1182, file: !208, line: 1505, baseType: !1349, size: 64, offset: 8064)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1182, file: !208, line: 1508, baseType: !1349, size: 64, offset: 8128)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1182, file: !208, line: 1511, baseType: !405, size: 32, offset: 8192)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1182, file: !208, line: 1514, baseType: !1485, size: 32, offset: 8224)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1182, file: !208, line: 1517, baseType: !3215, size: 64, offset: 8256)
!3215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3216, size: 64)
!3216 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2442, line: 18, flags: DIFlagFwdDecl)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1182, file: !208, line: 1518, baseType: !1217, size: 64, offset: 8320)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1182, file: !208, line: 1525, baseType: !2195, size: 64, offset: 8384)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1182, file: !208, line: 1532, baseType: !3220, size: 64, offset: 8448)
!3220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3221, line: 52, size: 64, elements: !3222)
!3221 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3222 = !{!3223}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3220, file: !3221, line: 53, baseType: !3224, size: 64)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3221, line: 40, size: 256, elements: !3226)
!3226 = !{!3227, !3228, !3233}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3225, file: !3221, line: 42, baseType: !836)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3225, file: !3221, line: 44, baseType: !3229, size: 192)
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3221, line: 28, size: 192, elements: !3230)
!3230 = !{!3231, !3232}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3229, file: !3221, line: 29, baseType: !808, size: 128)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3229, file: !3221, line: 31, baseType: !399, size: 64, offset: 128)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3225, file: !3221, line: 49, baseType: !399, size: 64, offset: 192)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1182, file: !208, line: 1533, baseType: !3220, size: 64, offset: 8512)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1182, file: !208, line: 1534, baseType: !962, size: 128, align: 64, offset: 8576)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1182, file: !208, line: 1535, baseType: !2441, size: 256, offset: 8704)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1182, file: !208, line: 1537, baseType: !1667, size: 192, offset: 8960)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1182, file: !208, line: 1542, baseType: !405, size: 32, offset: 9152)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1182, file: !208, line: 1545, baseType: !836, offset: 9184)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1182, file: !208, line: 1546, baseType: !808, size: 128, offset: 9216)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1182, file: !208, line: 1548, baseType: !836, offset: 9344)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1182, file: !208, line: 1549, baseType: !808, size: 128, offset: 9344)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1019, file: !208, line: 624, baseType: !1316, size: 64, offset: 256)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1019, file: !208, line: 631, baseType: !716, size: 64, offset: 320)
!3245 = !DIDerivedType(tag: DW_TAG_member, scope: !1019, file: !208, line: 639, baseType: !3246, size: 32, offset: 384)
!3246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1019, file: !208, line: 639, size: 32, elements: !3247)
!3247 = !{!3248, !3250}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3246, file: !208, line: 640, baseType: !3249, size: 32)
!3249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3246, file: !208, line: 641, baseType: !7, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1019, file: !208, line: 643, baseType: !1097, size: 32, offset: 416)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1019, file: !208, line: 644, baseType: !1115, size: 64, offset: 448)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1019, file: !208, line: 645, baseType: !1118, size: 128, offset: 512)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1019, file: !208, line: 646, baseType: !1118, size: 128, offset: 640)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1019, file: !208, line: 647, baseType: !1118, size: 128, offset: 768)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1019, file: !208, line: 648, baseType: !836, offset: 896)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1019, file: !208, line: 649, baseType: !410, size: 16, offset: 896)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1019, file: !208, line: 650, baseType: !455, size: 8, offset: 912)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1019, file: !208, line: 651, baseType: !455, size: 8, offset: 920)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1019, file: !208, line: 652, baseType: !3013, size: 64, offset: 960)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1019, file: !208, line: 659, baseType: !716, size: 64, offset: 1024)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1019, file: !208, line: 660, baseType: !1345, size: 256, offset: 1088)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1019, file: !208, line: 662, baseType: !716, size: 64, offset: 1344)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1019, file: !208, line: 663, baseType: !716, size: 64, offset: 1408)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1019, file: !208, line: 665, baseType: !1221, size: 128, offset: 1472)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1019, file: !208, line: 666, baseType: !808, size: 128, offset: 1600)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1019, file: !208, line: 675, baseType: !808, size: 128, offset: 1728)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1019, file: !208, line: 676, baseType: !808, size: 128, offset: 1856)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1019, file: !208, line: 677, baseType: !808, size: 128, offset: 1984)
!3270 = !DIDerivedType(tag: DW_TAG_member, scope: !1019, file: !208, line: 678, baseType: !3271, size: 128, offset: 2112)
!3271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1019, file: !208, line: 678, size: 128, elements: !3272)
!3272 = !{!3273, !3274}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3271, file: !208, line: 679, baseType: !1217, size: 64)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3271, file: !208, line: 680, baseType: !962, size: 128, align: 64)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1019, file: !208, line: 682, baseType: !1351, size: 64, offset: 2240)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1019, file: !208, line: 683, baseType: !1351, size: 64, offset: 2304)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1019, file: !208, line: 684, baseType: !508, size: 32, offset: 2368)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1019, file: !208, line: 685, baseType: !508, size: 32, offset: 2400)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1019, file: !208, line: 686, baseType: !508, size: 32, offset: 2432)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1019, file: !208, line: 688, baseType: !508, size: 32, offset: 2464)
!3281 = !DIDerivedType(tag: DW_TAG_member, scope: !1019, file: !208, line: 690, baseType: !3282, size: 64, offset: 2496)
!3282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1019, file: !208, line: 690, size: 64, elements: !3283)
!3283 = !{!3284, !3516}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3282, file: !208, line: 691, baseType: !3285, size: 64)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 64)
!3286 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3287)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !208, line: 1822, size: 2048, elements: !3288)
!3288 = !{!3289, !3290, !3294, !3299, !3303, !3304, !3305, !3309, !3322, !3323, !3340, !3344, !3345, !3349, !3350, !3354, !3359, !3360, !3364, !3368, !3476, !3480, !3481, !3485, !3486, !3490, !3494, !3499, !3503, !3507, !3511, !3515}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3287, file: !208, line: 1823, baseType: !425, size: 64)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3287, file: !208, line: 1824, baseType: !3291, size: 64, offset: 64)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!1115, !949, !1115, !405}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3287, file: !208, line: 1825, baseType: !3295, size: 64, offset: 128)
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = !DISubroutineType(types: !3297)
!3297 = !{!905, !949, !443, !919, !3298}
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3287, file: !208, line: 1826, baseType: !3300, size: 64, offset: 192)
!3300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3301, size: 64)
!3301 = !DISubroutineType(types: !3302)
!3302 = !{!905, !949, !421, !919, !3298}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3287, file: !208, line: 1827, baseType: !1422, size: 64, offset: 256)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3287, file: !208, line: 1828, baseType: !1422, size: 64, offset: 320)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3287, file: !208, line: 1829, baseType: !3306, size: 64, offset: 384)
!3306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3307, size: 64)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{!405, !1425, !406}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3287, file: !208, line: 1830, baseType: !3310, size: 64, offset: 448)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{!405, !949, !3313}
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !208, line: 1776, size: 128, elements: !3315)
!3315 = !{!3316, !3321}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3314, file: !208, line: 1777, baseType: !3317, size: 64)
!3317 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !208, line: 1773, baseType: !3318)
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 64)
!3319 = !DISubroutineType(types: !3320)
!3320 = !{!405, !3313, !421, !405, !1115, !757, !7}
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3314, file: !208, line: 1778, baseType: !1115, size: 64, offset: 64)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3287, file: !208, line: 1831, baseType: !3310, size: 64, offset: 512)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3287, file: !208, line: 1832, baseType: !3324, size: 64, offset: 576)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!3327, !949, !3329}
!3327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3328, line: 52, baseType: !7)
!3328 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 64)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !3331, line: 43, size: 128, elements: !3332)
!3331 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!3332 = !{!3333, !3339}
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !3330, file: !3331, line: 44, baseType: !3334, size: 64)
!3334 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !3331, line: 37, baseType: !3335)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{null, !949, !3338, !3329}
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !3330, file: !3331, line: 45, baseType: !3327, size: 32, offset: 64)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3287, file: !208, line: 1833, baseType: !3341, size: 64, offset: 640)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!399, !949, !7, !716}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3287, file: !208, line: 1834, baseType: !3341, size: 64, offset: 704)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3287, file: !208, line: 1835, baseType: !3346, size: 64, offset: 768)
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 64)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{!405, !949, !1557}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3287, file: !208, line: 1836, baseType: !716, size: 64, offset: 832)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3287, file: !208, line: 1837, baseType: !3351, size: 64, offset: 896)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!405, !1018, !949}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3287, file: !208, line: 1838, baseType: !3355, size: 64, offset: 960)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!405, !949, !3358}
!3358 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !208, line: 1007, baseType: !398)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3287, file: !208, line: 1839, baseType: !3351, size: 64, offset: 1024)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3287, file: !208, line: 1840, baseType: !3361, size: 64, offset: 1088)
!3361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3362, size: 64)
!3362 = !DISubroutineType(types: !3363)
!3363 = !{!405, !949, !1115, !1115, !405}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3287, file: !208, line: 1841, baseType: !3365, size: 64, offset: 1152)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{!405, !405, !949, !405}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3287, file: !208, line: 1842, baseType: !3369, size: 64, offset: 1216)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{!405, !949, !405, !3372}
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 64)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !208, line: 1062, size: 1664, elements: !3374)
!3374 = !{!3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3406, !3407, !3408, !3421, !3452}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3373, file: !208, line: 1063, baseType: !3372, size: 64)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3373, file: !208, line: 1064, baseType: !808, size: 128, offset: 64)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3373, file: !208, line: 1065, baseType: !1221, size: 128, offset: 192)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3373, file: !208, line: 1066, baseType: !808, size: 128, offset: 320)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3373, file: !208, line: 1069, baseType: !808, size: 128, offset: 448)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3373, file: !208, line: 1072, baseType: !3358, size: 64, offset: 576)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3373, file: !208, line: 1073, baseType: !7, size: 32, offset: 640)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3373, file: !208, line: 1074, baseType: !457, size: 8, offset: 672)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3373, file: !208, line: 1075, baseType: !7, size: 32, offset: 704)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3373, file: !208, line: 1076, baseType: !405, size: 32, offset: 736)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3373, file: !208, line: 1077, baseType: !1965, size: 128, offset: 768)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3373, file: !208, line: 1078, baseType: !949, size: 64, offset: 896)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3373, file: !208, line: 1079, baseType: !1115, size: 64, offset: 960)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3373, file: !208, line: 1080, baseType: !1115, size: 64, offset: 1024)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3373, file: !208, line: 1082, baseType: !3390, size: 64, offset: 1088)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !208, line: 1314, size: 320, elements: !3392)
!3392 = !{!3393, !3401, !3402, !3403, !3404, !3405}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3391, file: !208, line: 1315, baseType: !3394)
!3394 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3395, line: 20, baseType: !3396)
!3395 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3395, line: 11, elements: !3397)
!3397 = !{!3398}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3396, file: !3395, line: 12, baseType: !3399)
!3399 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !848, line: 33, baseType: !3400)
!3400 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !848, line: 31, elements: !850)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3391, file: !208, line: 1316, baseType: !405, size: 32)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3391, file: !208, line: 1317, baseType: !405, size: 32, offset: 32)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3391, file: !208, line: 1318, baseType: !3390, size: 64, offset: 64)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3391, file: !208, line: 1319, baseType: !949, size: 64, offset: 128)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3391, file: !208, line: 1320, baseType: !962, size: 128, align: 64, offset: 192)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3373, file: !208, line: 1084, baseType: !716, size: 64, offset: 1152)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3373, file: !208, line: 1085, baseType: !716, size: 64, offset: 1216)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3373, file: !208, line: 1087, baseType: !3409, size: 64, offset: 1280)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3411)
!3411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !208, line: 1011, size: 128, elements: !3412)
!3412 = !{!3413, !3417}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3411, file: !208, line: 1012, baseType: !3414, size: 64)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{null, !3372, !3372}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3411, file: !208, line: 1013, baseType: !3418, size: 64, offset: 64)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 64)
!3419 = !DISubroutineType(types: !3420)
!3420 = !{null, !3372}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3373, file: !208, line: 1088, baseType: !3422, size: 64, offset: 1344)
!3422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3423, size: 64)
!3423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3424)
!3424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !208, line: 1016, size: 512, elements: !3425)
!3425 = !{!3426, !3430, !3434, !3435, !3439, !3443, !3447, !3451}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3424, file: !208, line: 1017, baseType: !3427, size: 64)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 64)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{!3358, !3358}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3424, file: !208, line: 1018, baseType: !3431, size: 64, offset: 64)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{null, !3358}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3424, file: !208, line: 1019, baseType: !3418, size: 64, offset: 128)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3424, file: !208, line: 1020, baseType: !3436, size: 64, offset: 192)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DISubroutineType(types: !3438)
!3438 = !{!405, !3372, !405}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3424, file: !208, line: 1021, baseType: !3440, size: 64, offset: 256)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = !DISubroutineType(types: !3442)
!3442 = !{!406, !3372}
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3424, file: !208, line: 1022, baseType: !3444, size: 64, offset: 320)
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = !DISubroutineType(types: !3446)
!3446 = !{!405, !3372, !405, !811}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3424, file: !208, line: 1023, baseType: !3448, size: 64, offset: 384)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{null, !3372, !1399}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3424, file: !208, line: 1024, baseType: !3440, size: 64, offset: 448)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3373, file: !208, line: 1097, baseType: !3453, size: 256, offset: 1408)
!3453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3373, file: !208, line: 1089, size: 256, elements: !3454)
!3454 = !{!3455, !3464, !3470}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3453, file: !208, line: 1090, baseType: !3456, size: 256)
!3456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3457, line: 10, size: 256, elements: !3458)
!3457 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3458 = !{!3459, !3460, !3463}
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3456, file: !3457, line: 11, baseType: !411, size: 32)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3456, file: !3457, line: 12, baseType: !3461, size: 64, offset: 64)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3457, line: 5, flags: DIFlagFwdDecl)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3456, file: !3457, line: 13, baseType: !808, size: 128, offset: 128)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3453, file: !208, line: 1091, baseType: !3465, size: 64)
!3465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3457, line: 17, size: 64, elements: !3466)
!3466 = !{!3467}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3465, file: !3457, line: 18, baseType: !3468, size: 64)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3457, line: 16, flags: DIFlagFwdDecl)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3453, file: !208, line: 1096, baseType: !3471, size: 192)
!3471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3453, file: !208, line: 1092, size: 192, elements: !3472)
!3472 = !{!3473, !3474, !3475}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3471, file: !208, line: 1093, baseType: !808, size: 128)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3471, file: !208, line: 1094, baseType: !405, size: 32, offset: 128)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3471, file: !208, line: 1095, baseType: !7, size: 32, offset: 160)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3287, file: !208, line: 1843, baseType: !3477, size: 64, offset: 1280)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!905, !949, !1303, !405, !919, !3298, !405}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3287, file: !208, line: 1844, baseType: !1597, size: 64, offset: 1344)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3287, file: !208, line: 1845, baseType: !3482, size: 64, offset: 1408)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 64)
!3483 = !DISubroutineType(types: !3484)
!3484 = !{!405, !405}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3287, file: !208, line: 1846, baseType: !3369, size: 64, offset: 1472)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3287, file: !208, line: 1847, baseType: !3487, size: 64, offset: 1536)
!3487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3488, size: 64)
!3488 = !DISubroutineType(types: !3489)
!3489 = !{!905, !2582, !949, !3298, !919, !7}
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3287, file: !208, line: 1848, baseType: !3491, size: 64, offset: 1600)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3492, size: 64)
!3492 = !DISubroutineType(types: !3493)
!3493 = !{!905, !949, !3298, !2582, !919, !7}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3287, file: !208, line: 1849, baseType: !3495, size: 64, offset: 1664)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{!405, !949, !399, !3498, !1399}
!3498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3287, file: !208, line: 1850, baseType: !3500, size: 64, offset: 1728)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{!399, !949, !405, !1115, !1115}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3287, file: !208, line: 1852, baseType: !3504, size: 64, offset: 1792)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{null, !1293, !949}
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3287, file: !208, line: 1856, baseType: !3508, size: 64, offset: 1856)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DISubroutineType(types: !3510)
!3510 = !{!905, !949, !1115, !949, !1115, !919, !7}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3287, file: !208, line: 1858, baseType: !3512, size: 64, offset: 1920)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{!1115, !949, !1115, !949, !1115, !1115, !7}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3287, file: !208, line: 1861, baseType: !3361, size: 64, offset: 1984)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3282, file: !208, line: 692, baseType: !1246, size: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1019, file: !208, line: 694, baseType: !3518, size: 64, offset: 2560)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !208, line: 1100, size: 384, elements: !3520)
!3520 = !{!3521, !3522, !3523, !3524}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3519, file: !208, line: 1101, baseType: !836)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3519, file: !208, line: 1102, baseType: !808, size: 128)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3519, file: !208, line: 1103, baseType: !808, size: 128, offset: 128)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3519, file: !208, line: 1104, baseType: !808, size: 128, offset: 256)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1019, file: !208, line: 695, baseType: !1317, size: 1216, align: 64, offset: 2624)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1019, file: !208, line: 696, baseType: !808, size: 128, offset: 3840)
!3527 = !DIDerivedType(tag: DW_TAG_member, scope: !1019, file: !208, line: 697, baseType: !3528, size: 64, offset: 3968)
!3528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1019, file: !208, line: 697, size: 64, elements: !3529)
!3529 = !{!3530, !3531, !3532, !3543, !3544}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3528, file: !208, line: 698, baseType: !2582, size: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3528, file: !208, line: 699, baseType: !3038, size: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3528, file: !208, line: 700, baseType: !3533, size: 64)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3535, line: 14, size: 832, elements: !3536)
!3535 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3536 = !{!3537, !3538, !3539, !3540, !3541, !3542}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3534, file: !3535, line: 15, baseType: !823, size: 512)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3534, file: !3535, line: 16, baseType: !425, size: 64, offset: 512)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3534, file: !3535, line: 17, baseType: !3285, size: 64, offset: 576)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3534, file: !3535, line: 18, baseType: !808, size: 128, offset: 640)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3534, file: !3535, line: 19, baseType: !1097, size: 32, offset: 768)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3534, file: !3535, line: 20, baseType: !7, size: 32, offset: 800)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3528, file: !208, line: 701, baseType: !443, size: 64)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3528, file: !208, line: 702, baseType: !7, size: 32)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1019, file: !208, line: 705, baseType: !412, size: 32, offset: 4032)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1019, file: !208, line: 708, baseType: !412, size: 32, offset: 4064)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1019, file: !208, line: 709, baseType: !3119, size: 64, offset: 4096)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1019, file: !208, line: 720, baseType: !398, size: 64, offset: 4160)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !980, file: !977, line: 98, baseType: !3550, size: 256, offset: 448)
!3550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !457, size: 256, elements: !2714)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !980, file: !977, line: 101, baseType: !3552, size: 32, offset: 704)
!3552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3553, line: 25, size: 32, elements: !3554)
!3553 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3554 = !{!3555}
!3555 = !DIDerivedType(tag: DW_TAG_member, scope: !3552, file: !3553, line: 26, baseType: !3556, size: 32)
!3556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3552, file: !3553, line: 26, size: 32, elements: !3557)
!3557 = !{!3558}
!3558 = !DIDerivedType(tag: DW_TAG_member, scope: !3556, file: !3553, line: 30, baseType: !3559, size: 32)
!3559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3556, file: !3553, line: 30, size: 32, elements: !3560)
!3560 = !{!3561, !3562}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3559, file: !3553, line: 31, baseType: !836)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3559, file: !3553, line: 32, baseType: !405, size: 32)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !980, file: !977, line: 102, baseType: !3136, size: 64, offset: 768)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !980, file: !977, line: 103, baseType: !1181, size: 64, offset: 832)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !980, file: !977, line: 104, baseType: !716, size: 64, offset: 896)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !980, file: !977, line: 105, baseType: !398, size: 64, offset: 960)
!3567 = !DIDerivedType(tag: DW_TAG_member, scope: !980, file: !977, line: 107, baseType: !3568, size: 128, offset: 1024)
!3568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !980, file: !977, line: 107, size: 128, elements: !3569)
!3569 = !{!3570, !3571}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3568, file: !977, line: 108, baseType: !808, size: 128)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3568, file: !977, line: 109, baseType: !3338, size: 64)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !980, file: !977, line: 111, baseType: !808, size: 128, offset: 1152)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !980, file: !977, line: 112, baseType: !808, size: 128, offset: 1280)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !980, file: !977, line: 120, baseType: !3575, size: 128, offset: 1408)
!3575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !980, file: !977, line: 116, size: 128, elements: !3576)
!3576 = !{!3577, !3578, !3579}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3575, file: !977, line: 117, baseType: !1221, size: 128)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3575, file: !977, line: 118, baseType: !994, size: 128)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3575, file: !977, line: 119, baseType: !962, size: 128, align: 64)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !950, file: !208, line: 922, baseType: !1018, size: 64, offset: 256)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !950, file: !208, line: 923, baseType: !3285, size: 64, offset: 320)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !950, file: !208, line: 929, baseType: !836, offset: 384)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !950, file: !208, line: 930, baseType: !207, size: 32, offset: 384)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !950, file: !208, line: 931, baseType: !1349, size: 64, offset: 448)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !950, file: !208, line: 932, baseType: !7, size: 32, offset: 512)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !950, file: !208, line: 933, baseType: !3132, size: 32, offset: 544)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !950, file: !208, line: 934, baseType: !1667, size: 192, offset: 576)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !950, file: !208, line: 935, baseType: !1115, size: 64, offset: 768)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !950, file: !208, line: 936, baseType: !3590, size: 192, offset: 832)
!3590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !208, line: 885, size: 192, elements: !3591)
!3591 = !{!3592, !3593, !3594, !3595, !3596, !3597}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3590, file: !208, line: 886, baseType: !3394)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3590, file: !208, line: 887, baseType: !1955, size: 64)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3590, file: !208, line: 888, baseType: !216, size: 32, offset: 64)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3590, file: !208, line: 889, baseType: !1024, size: 32, offset: 96)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3590, file: !208, line: 889, baseType: !1024, size: 32, offset: 128)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3590, file: !208, line: 890, baseType: !405, size: 32, offset: 160)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !950, file: !208, line: 937, baseType: !2031, size: 64, offset: 1024)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !950, file: !208, line: 938, baseType: !3600, size: 256, offset: 1088)
!3600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !208, line: 896, size: 256, elements: !3601)
!3601 = !{!3602, !3603, !3604, !3605, !3606, !3607}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3600, file: !208, line: 897, baseType: !716, size: 64)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3600, file: !208, line: 898, baseType: !7, size: 32, offset: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3600, file: !208, line: 899, baseType: !7, size: 32, offset: 96)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3600, file: !208, line: 902, baseType: !7, size: 32, offset: 128)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3600, file: !208, line: 903, baseType: !7, size: 32, offset: 160)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3600, file: !208, line: 904, baseType: !1115, size: 64, offset: 192)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !950, file: !208, line: 940, baseType: !757, size: 64, offset: 1344)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !950, file: !208, line: 945, baseType: !398, size: 64, offset: 1408)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !950, file: !208, line: 949, baseType: !808, size: 128, offset: 1472)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !950, file: !208, line: 950, baseType: !808, size: 128, offset: 1600)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !950, file: !208, line: 952, baseType: !1316, size: 64, offset: 1728)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !950, file: !208, line: 953, baseType: !1485, size: 32, offset: 1792)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !950, file: !208, line: 954, baseType: !1485, size: 32, offset: 1824)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !940, file: !899, line: 174, baseType: !946, size: 64, offset: 320)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !940, file: !899, line: 176, baseType: !3617, size: 64, offset: 384)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!405, !949, !829, !939, !1557}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !928, file: !899, line: 90, baseType: !923, size: 64, offset: 192)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !928, file: !899, line: 91, baseType: !3622, size: 64, offset: 256)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !889, file: !824, line: 143, baseType: !3624, size: 64, offset: 256)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DISubroutineType(types: !3626)
!3626 = !{!3627, !829}
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3628, size: 64)
!3628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3629)
!3629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !225, line: 39, size: 384, elements: !3630)
!3630 = !{!3631, !3632, !3636, !3640, !3646, !3650}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3629, file: !225, line: 40, baseType: !224, size: 32)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3629, file: !225, line: 41, baseType: !3633, size: 64, offset: 64)
!3633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3634, size: 64)
!3634 = !DISubroutineType(types: !3635)
!3635 = !{!406}
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3629, file: !225, line: 42, baseType: !3637, size: 64, offset: 128)
!3637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3638, size: 64)
!3638 = !DISubroutineType(types: !3639)
!3639 = !{!398}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3629, file: !225, line: 43, baseType: !3641, size: 64, offset: 192)
!3641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3642, size: 64)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{!2611, !3644}
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 64)
!3645 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !225, line: 19, flags: DIFlagFwdDecl)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3629, file: !225, line: 44, baseType: !3647, size: 64, offset: 256)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{!2611}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3629, file: !225, line: 45, baseType: !445, size: 64, offset: 320)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !889, file: !824, line: 144, baseType: !3652, size: 64, offset: 320)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 64)
!3653 = !DISubroutineType(types: !3654)
!3654 = !{!2611, !829}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !889, file: !824, line: 145, baseType: !3656, size: 64, offset: 384)
!3656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3657, size: 64)
!3657 = !DISubroutineType(types: !3658)
!3658 = !{null, !829, !3659, !3660}
!3659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !823, file: !824, line: 70, baseType: !3662, size: 64, offset: 384)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1201, line: 123, size: 1024, elements: !3664)
!3664 = !{!3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3793, !3794, !3795, !3796, !3797}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3663, file: !1201, line: 124, baseType: !508, size: 32)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3663, file: !1201, line: 125, baseType: !508, size: 32, offset: 32)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3663, file: !1201, line: 135, baseType: !3662, size: 64, offset: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3663, file: !1201, line: 136, baseType: !421, size: 64, offset: 128)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3663, file: !1201, line: 138, baseType: !1338, size: 192, align: 64, offset: 192)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3663, file: !1201, line: 140, baseType: !2611, size: 64, offset: 384)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3663, file: !1201, line: 141, baseType: !7, size: 32, offset: 448)
!3672 = !DIDerivedType(tag: DW_TAG_member, scope: !3663, file: !1201, line: 142, baseType: !3673, size: 256, offset: 512)
!3673 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3663, file: !1201, line: 142, size: 256, elements: !3674)
!3674 = !{!3675, !3721, !3725}
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3673, file: !1201, line: 143, baseType: !3676, size: 192)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1201, line: 91, size: 192, elements: !3677)
!3677 = !{!3678, !3679, !3680}
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3676, file: !1201, line: 92, baseType: !716, size: 64)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3676, file: !1201, line: 94, baseType: !1334, size: 64, offset: 64)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3676, file: !1201, line: 100, baseType: !3681, size: 64, offset: 128)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1201, line: 180, size: 704, elements: !3683)
!3683 = !{!3684, !3685, !3686, !3693, !3694, !3695, !3719, !3720}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3682, file: !1201, line: 182, baseType: !3662, size: 64)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3682, file: !1201, line: 183, baseType: !7, size: 32, offset: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3682, file: !1201, line: 186, baseType: !3687, size: 192, offset: 128)
!3687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3688, line: 19, size: 192, elements: !3689)
!3688 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3689 = !{!3690, !3691, !3692}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3687, file: !3688, line: 20, baseType: !1321, size: 128)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3687, file: !3688, line: 21, baseType: !7, size: 32, offset: 128)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3687, file: !3688, line: 22, baseType: !7, size: 32, offset: 160)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3682, file: !1201, line: 187, baseType: !411, size: 32, offset: 320)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3682, file: !1201, line: 188, baseType: !411, size: 32, offset: 352)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3682, file: !1201, line: 189, baseType: !3696, size: 64, offset: 384)
!3696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1201, line: 168, size: 320, elements: !3698)
!3698 = !{!3699, !3703, !3707, !3711, !3715}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3697, file: !1201, line: 169, baseType: !3700, size: 64)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 64)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{!405, !1293, !3681}
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3697, file: !1201, line: 171, baseType: !3704, size: 64, offset: 64)
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 64)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{!405, !3662, !421, !914}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3697, file: !1201, line: 173, baseType: !3708, size: 64, offset: 128)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{!405, !3662}
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3697, file: !1201, line: 174, baseType: !3712, size: 64, offset: 192)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3713, size: 64)
!3713 = !DISubroutineType(types: !3714)
!3714 = !{!405, !3662, !3662, !421}
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3697, file: !1201, line: 176, baseType: !3716, size: 64, offset: 256)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!405, !1293, !3662, !3681}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3682, file: !1201, line: 192, baseType: !808, size: 128, offset: 448)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3682, file: !1201, line: 194, baseType: !1965, size: 128, offset: 576)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3673, file: !1201, line: 144, baseType: !3722, size: 64)
!3722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1201, line: 103, size: 64, elements: !3723)
!3723 = !{!3724}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3722, file: !1201, line: 104, baseType: !3662, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3673, file: !1201, line: 145, baseType: !3726, size: 256)
!3726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1201, line: 107, size: 256, elements: !3727)
!3727 = !{!3728, !3788, !3791, !3792}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3726, file: !1201, line: 108, baseType: !3729, size: 64)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3731)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1201, line: 217, size: 768, elements: !3732)
!3732 = !{!3733, !3753, !3757, !3761, !3765, !3769, !3773, !3777, !3778, !3779, !3780, !3784}
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3731, file: !1201, line: 222, baseType: !3734, size: 64)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = !DISubroutineType(types: !3736)
!3736 = !{!405, !3737}
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1201, line: 197, size: 1088, elements: !3739)
!3739 = !{!3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3738, file: !1201, line: 199, baseType: !3662, size: 64)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3738, file: !1201, line: 200, baseType: !949, size: 64, offset: 64)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3738, file: !1201, line: 201, baseType: !1293, size: 64, offset: 128)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3738, file: !1201, line: 202, baseType: !398, size: 64, offset: 192)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3738, file: !1201, line: 205, baseType: !1667, size: 192, offset: 256)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3738, file: !1201, line: 206, baseType: !1667, size: 192, offset: 448)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3738, file: !1201, line: 207, baseType: !405, size: 32, offset: 640)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3738, file: !1201, line: 208, baseType: !808, size: 128, offset: 704)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3738, file: !1201, line: 209, baseType: !443, size: 64, offset: 832)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3738, file: !1201, line: 211, baseType: !919, size: 64, offset: 896)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3738, file: !1201, line: 212, baseType: !406, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3738, file: !1201, line: 213, baseType: !406, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3738, file: !1201, line: 214, baseType: !1585, size: 64, offset: 1024)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3731, file: !1201, line: 223, baseType: !3754, size: 64, offset: 64)
!3754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3755, size: 64)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{null, !3737}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3731, file: !1201, line: 236, baseType: !3758, size: 64, offset: 128)
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 64)
!3759 = !DISubroutineType(types: !3760)
!3760 = !{!405, !1293, !398}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3731, file: !1201, line: 238, baseType: !3762, size: 64, offset: 192)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DISubroutineType(types: !3764)
!3764 = !{!398, !1293, !3298}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3731, file: !1201, line: 239, baseType: !3766, size: 64, offset: 256)
!3766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3767, size: 64)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!398, !1293, !398, !3298}
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3731, file: !1201, line: 240, baseType: !3770, size: 64, offset: 320)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = !DISubroutineType(types: !3772)
!3772 = !{null, !1293, !398}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3731, file: !1201, line: 242, baseType: !3774, size: 64, offset: 384)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!905, !3737, !443, !919, !1115}
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3731, file: !1201, line: 252, baseType: !919, size: 64, offset: 448)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3731, file: !1201, line: 259, baseType: !406, size: 8, offset: 512)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3731, file: !1201, line: 260, baseType: !3774, size: 64, offset: 576)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3731, file: !1201, line: 263, baseType: !3781, size: 64, offset: 640)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!3327, !3737, !3329}
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3731, file: !1201, line: 266, baseType: !3785, size: 64, offset: 704)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!405, !3737, !1557}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3726, file: !1201, line: 109, baseType: !3789, size: 64, offset: 64)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1201, line: 31, flags: DIFlagFwdDecl)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3726, file: !1201, line: 110, baseType: !1115, size: 64, offset: 128)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3726, file: !1201, line: 111, baseType: !3662, size: 64, offset: 192)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3663, file: !1201, line: 148, baseType: !398, size: 64, offset: 768)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3663, file: !1201, line: 154, baseType: !757, size: 64, offset: 832)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3663, file: !1201, line: 156, baseType: !410, size: 16, offset: 896)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3663, file: !1201, line: 157, baseType: !914, size: 16, offset: 912)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3663, file: !1201, line: 158, baseType: !3798, size: 64, offset: 960)
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1201, line: 32, flags: DIFlagFwdDecl)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !823, file: !824, line: 71, baseType: !499, size: 32, offset: 448)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !823, file: !824, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !823, file: !824, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !823, file: !824, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !823, file: !824, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !823, file: !824, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !820, file: !237, line: 463, baseType: !819, size: 64, offset: 512)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !820, file: !237, line: 465, baseType: !3808, size: 64, offset: 576)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !237, line: 36, flags: DIFlagFwdDecl)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !820, file: !237, line: 467, baseType: !421, size: 64, offset: 640)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !820, file: !237, line: 468, baseType: !3812, size: 64, offset: 704)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3814)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !237, line: 87, size: 384, elements: !3815)
!3815 = !{!3816, !3817, !3818, !3822, !3827, !3831}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3814, file: !237, line: 88, baseType: !421, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3814, file: !237, line: 89, baseType: !925, size: 64, offset: 64)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3814, file: !237, line: 90, baseType: !3819, size: 64, offset: 128)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!405, !819, !872}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3814, file: !237, line: 91, baseType: !3823, size: 64, offset: 192)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{!443, !819, !3826, !3659, !3660}
!3826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3814, file: !237, line: 93, baseType: !3828, size: 64, offset: 256)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{null, !819}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3814, file: !237, line: 95, baseType: !3832, size: 64, offset: 320)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3834)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !244, line: 278, size: 1472, elements: !3835)
!3835 = !{!3836, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3834, file: !244, line: 279, baseType: !3837, size: 64)
!3837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3838, size: 64)
!3838 = !DISubroutineType(types: !3839)
!3839 = !{!405, !819}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3834, file: !244, line: 280, baseType: !3828, size: 64, offset: 64)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3834, file: !244, line: 281, baseType: !3837, size: 64, offset: 128)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3834, file: !244, line: 282, baseType: !3837, size: 64, offset: 192)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3834, file: !244, line: 283, baseType: !3837, size: 64, offset: 256)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3834, file: !244, line: 284, baseType: !3837, size: 64, offset: 320)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3834, file: !244, line: 285, baseType: !3837, size: 64, offset: 384)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3834, file: !244, line: 286, baseType: !3837, size: 64, offset: 448)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3834, file: !244, line: 287, baseType: !3837, size: 64, offset: 512)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3834, file: !244, line: 288, baseType: !3837, size: 64, offset: 576)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3834, file: !244, line: 289, baseType: !3837, size: 64, offset: 640)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3834, file: !244, line: 290, baseType: !3837, size: 64, offset: 704)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3834, file: !244, line: 291, baseType: !3837, size: 64, offset: 768)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3834, file: !244, line: 292, baseType: !3837, size: 64, offset: 832)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3834, file: !244, line: 293, baseType: !3837, size: 64, offset: 896)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3834, file: !244, line: 294, baseType: !3837, size: 64, offset: 960)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3834, file: !244, line: 295, baseType: !3837, size: 64, offset: 1024)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3834, file: !244, line: 296, baseType: !3837, size: 64, offset: 1088)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3834, file: !244, line: 297, baseType: !3837, size: 64, offset: 1152)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3834, file: !244, line: 298, baseType: !3837, size: 64, offset: 1216)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3834, file: !244, line: 299, baseType: !3837, size: 64, offset: 1280)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3834, file: !244, line: 300, baseType: !3837, size: 64, offset: 1344)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3834, file: !244, line: 301, baseType: !3837, size: 64, offset: 1408)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !820, file: !237, line: 470, baseType: !3863, size: 64, offset: 768)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3865, line: 82, size: 1408, elements: !3866)
!3865 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3866 = !{!3867, !3868, !3869, !3870, !3871, !3872, !3873, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3945, !3948, !3949}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3864, file: !3865, line: 83, baseType: !421, size: 64)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3864, file: !3865, line: 84, baseType: !421, size: 64, offset: 64)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3864, file: !3865, line: 85, baseType: !819, size: 64, offset: 128)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3864, file: !3865, line: 86, baseType: !925, size: 64, offset: 192)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3864, file: !3865, line: 87, baseType: !925, size: 64, offset: 256)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3864, file: !3865, line: 88, baseType: !925, size: 64, offset: 320)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3864, file: !3865, line: 90, baseType: !3874, size: 64, offset: 384)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = !DISubroutineType(types: !3876)
!3876 = !{!405, !819, !3877}
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !231, line: 95, size: 1152, elements: !3879)
!3879 = !{!3880, !3881, !3882, !3883, !3884, !3885, !3886, !3896, !3909, !3910, !3911, !3912, !3913, !3921, !3922, !3923, !3924, !3925, !3926}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3878, file: !231, line: 96, baseType: !421, size: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3878, file: !231, line: 97, baseType: !3863, size: 64, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3878, file: !231, line: 99, baseType: !425, size: 64, offset: 128)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3878, file: !231, line: 100, baseType: !421, size: 64, offset: 192)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3878, file: !231, line: 102, baseType: !406, size: 8, offset: 256)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3878, file: !231, line: 103, baseType: !230, size: 32, offset: 288)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3878, file: !231, line: 105, baseType: !3887, size: 64, offset: 320)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3889)
!3889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3890, line: 262, size: 1600, elements: !3891)
!3890 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3891 = !{!3892, !3893, !3894, !3895}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3889, file: !3890, line: 263, baseType: !3122, size: 256)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3889, file: !3890, line: 264, baseType: !3122, size: 256, offset: 256)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3889, file: !3890, line: 265, baseType: !519, size: 1024, offset: 512)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3889, file: !3890, line: 266, baseType: !2611, size: 64, offset: 1536)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3878, file: !231, line: 106, baseType: !3897, size: 64, offset: 384)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3898 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3899)
!3899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3890, line: 210, size: 256, elements: !3900)
!3900 = !{!3901, !3905, !3907, !3908}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3899, file: !3890, line: 211, baseType: !3902, size: 72)
!3902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 72, elements: !3903)
!3903 = !{!3904}
!3904 = !DISubrange(count: 9)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3899, file: !3890, line: 212, baseType: !3906, size: 64, offset: 128)
!3906 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3890, line: 14, baseType: !716)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3899, file: !3890, line: 213, baseType: !412, size: 32, offset: 192)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3899, file: !3890, line: 214, baseType: !412, size: 32, offset: 224)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3878, file: !231, line: 108, baseType: !3837, size: 64, offset: 448)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3878, file: !231, line: 109, baseType: !3828, size: 64, offset: 512)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3878, file: !231, line: 110, baseType: !3837, size: 64, offset: 576)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3878, file: !231, line: 111, baseType: !3828, size: 64, offset: 640)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3878, file: !231, line: 112, baseType: !3914, size: 64, offset: 704)
!3914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3915, size: 64)
!3915 = !DISubroutineType(types: !3916)
!3916 = !{!405, !819, !3917}
!3917 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !244, line: 52, baseType: !3918)
!3918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !244, line: 50, size: 32, elements: !3919)
!3919 = !{!3920}
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3918, file: !244, line: 51, baseType: !405, size: 32)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3878, file: !231, line: 113, baseType: !3837, size: 64, offset: 768)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3878, file: !231, line: 114, baseType: !925, size: 64, offset: 832)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3878, file: !231, line: 115, baseType: !925, size: 64, offset: 896)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3878, file: !231, line: 117, baseType: !3832, size: 64, offset: 960)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3878, file: !231, line: 118, baseType: !3828, size: 64, offset: 1024)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3878, file: !231, line: 120, baseType: !3927, size: 64, offset: 1088)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3928 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !231, line: 120, flags: DIFlagFwdDecl)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3864, file: !3865, line: 91, baseType: !3819, size: 64, offset: 448)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3864, file: !3865, line: 92, baseType: !3837, size: 64, offset: 512)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3864, file: !3865, line: 93, baseType: !3828, size: 64, offset: 576)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3864, file: !3865, line: 94, baseType: !3837, size: 64, offset: 640)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3864, file: !3865, line: 95, baseType: !3828, size: 64, offset: 704)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3864, file: !3865, line: 97, baseType: !3837, size: 64, offset: 768)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3864, file: !3865, line: 98, baseType: !3837, size: 64, offset: 832)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3864, file: !3865, line: 100, baseType: !3914, size: 64, offset: 896)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3864, file: !3865, line: 101, baseType: !3837, size: 64, offset: 960)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3864, file: !3865, line: 103, baseType: !3837, size: 64, offset: 1024)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3864, file: !3865, line: 105, baseType: !3837, size: 64, offset: 1088)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3864, file: !3865, line: 107, baseType: !3832, size: 64, offset: 1152)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3864, file: !3865, line: 109, baseType: !3942, size: 64, offset: 1216)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3944)
!3944 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3865, line: 109, flags: DIFlagFwdDecl)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3864, file: !3865, line: 111, baseType: !3946, size: 64, offset: 1280)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3865, line: 111, flags: DIFlagFwdDecl)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3864, file: !3865, line: 112, baseType: !1227, offset: 1344)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3864, file: !3865, line: 114, baseType: !406, size: 8, offset: 1344)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !820, file: !237, line: 471, baseType: !3877, size: 64, offset: 832)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !820, file: !237, line: 473, baseType: !398, size: 64, offset: 896)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !820, file: !237, line: 475, baseType: !398, size: 64, offset: 960)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !820, file: !237, line: 480, baseType: !1667, size: 192, offset: 1024)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !820, file: !237, line: 484, baseType: !3955, size: 576, offset: 1216)
!3955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !237, line: 361, size: 576, elements: !3956)
!3956 = !{!3957, !3958, !3959, !3960, !3961, !3962}
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3955, file: !237, line: 362, baseType: !808, size: 128)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3955, file: !237, line: 363, baseType: !808, size: 128, offset: 128)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3955, file: !237, line: 364, baseType: !808, size: 128, offset: 256)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3955, file: !237, line: 365, baseType: !808, size: 128, offset: 384)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3955, file: !237, line: 366, baseType: !406, size: 8, offset: 512)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3955, file: !237, line: 367, baseType: !236, size: 32, offset: 544)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !820, file: !237, line: 485, baseType: !3964, size: 2304, offset: 1792)
!3964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !244, line: 565, size: 2304, elements: !3965)
!3965 = !{!3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4061, !4065}
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3964, file: !244, line: 566, baseType: !3917, size: 32)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3964, file: !244, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3964, file: !244, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3964, file: !244, line: 569, baseType: !406, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3964, file: !244, line: 570, baseType: !406, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3964, file: !244, line: 571, baseType: !406, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3964, file: !244, line: 572, baseType: !406, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3964, file: !244, line: 573, baseType: !406, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3964, file: !244, line: 574, baseType: !406, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3964, file: !244, line: 575, baseType: !406, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3964, file: !244, line: 576, baseType: !406, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3964, file: !244, line: 577, baseType: !411, size: 32, offset: 64)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3964, file: !244, line: 578, baseType: !836, offset: 96)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3964, file: !244, line: 580, baseType: !808, size: 128, offset: 128)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3964, file: !244, line: 581, baseType: !1986, size: 192, offset: 256)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3964, file: !244, line: 582, baseType: !3982, size: 64, offset: 448)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3984, line: 43, size: 1472, elements: !3985)
!3984 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3985 = !{!3986, !3987, !3988, !3989, !3990, !3993, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3983, file: !3984, line: 44, baseType: !421, size: 64)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3983, file: !3984, line: 45, baseType: !405, size: 32, offset: 64)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3983, file: !3984, line: 46, baseType: !808, size: 128, offset: 128)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3983, file: !3984, line: 47, baseType: !836, offset: 256)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3983, file: !3984, line: 48, baseType: !3991, size: 64, offset: 256)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !244, line: 533, flags: DIFlagFwdDecl)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3983, file: !3984, line: 49, baseType: !3994, size: 320, offset: 320)
!3994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3995, line: 11, size: 320, elements: !3996)
!3995 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3996 = !{!3997, !3998, !3999, !4004}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3994, file: !3995, line: 16, baseType: !1221, size: 128)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3994, file: !3995, line: 17, baseType: !716, size: 64, offset: 128)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3994, file: !3995, line: 18, baseType: !4000, size: 64, offset: 192)
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = !DISubroutineType(types: !4002)
!4002 = !{null, !4003}
!4003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3994, file: !3995, line: 19, baseType: !411, size: 32, offset: 256)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3983, file: !3984, line: 50, baseType: !716, size: 64, offset: 640)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3983, file: !3984, line: 51, baseType: !1786, size: 64, offset: 704)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3983, file: !3984, line: 52, baseType: !1786, size: 64, offset: 768)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3983, file: !3984, line: 53, baseType: !1786, size: 64, offset: 832)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3983, file: !3984, line: 54, baseType: !1786, size: 64, offset: 896)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3983, file: !3984, line: 55, baseType: !1786, size: 64, offset: 960)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3983, file: !3984, line: 56, baseType: !716, size: 64, offset: 1024)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3983, file: !3984, line: 57, baseType: !716, size: 64, offset: 1088)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3983, file: !3984, line: 58, baseType: !716, size: 64, offset: 1152)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3983, file: !3984, line: 59, baseType: !716, size: 64, offset: 1216)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3983, file: !3984, line: 60, baseType: !716, size: 64, offset: 1280)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3983, file: !3984, line: 61, baseType: !819, size: 64, offset: 1344)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3983, file: !3984, line: 62, baseType: !406, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3983, file: !3984, line: 63, baseType: !406, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3964, file: !244, line: 583, baseType: !406, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3964, file: !244, line: 584, baseType: !406, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3964, file: !244, line: 585, baseType: !406, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3964, file: !244, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3964, file: !244, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3964, file: !244, line: 592, baseType: !1778, size: 512, offset: 576)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3964, file: !244, line: 593, baseType: !757, size: 64, offset: 1088)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3964, file: !244, line: 594, baseType: !2441, size: 256, offset: 1152)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3964, file: !244, line: 595, baseType: !1965, size: 128, offset: 1408)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3964, file: !244, line: 596, baseType: !3991, size: 64, offset: 1536)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3964, file: !244, line: 597, baseType: !508, size: 32, offset: 1600)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3964, file: !244, line: 598, baseType: !508, size: 32, offset: 1632)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3964, file: !244, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3964, file: !244, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3964, file: !244, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3964, file: !244, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3964, file: !244, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3964, file: !244, line: 604, baseType: !406, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3964, file: !244, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3964, file: !244, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3964, file: !244, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3964, file: !244, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3964, file: !244, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3964, file: !244, line: 610, baseType: !7, size: 32, offset: 1696)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3964, file: !244, line: 611, baseType: !243, size: 32, offset: 1728)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3964, file: !244, line: 612, baseType: !251, size: 32, offset: 1760)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3964, file: !244, line: 613, baseType: !405, size: 32, offset: 1792)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3964, file: !244, line: 614, baseType: !405, size: 32, offset: 1824)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3964, file: !244, line: 615, baseType: !757, size: 64, offset: 1856)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3964, file: !244, line: 616, baseType: !757, size: 64, offset: 1920)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3964, file: !244, line: 617, baseType: !757, size: 64, offset: 1984)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3964, file: !244, line: 618, baseType: !757, size: 64, offset: 2048)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3964, file: !244, line: 620, baseType: !4052, size: 64, offset: 2112)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !244, line: 536, size: 256, elements: !4054)
!4054 = !{!4055, !4056, !4057, !4058}
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4053, file: !244, line: 537, baseType: !836)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4053, file: !244, line: 538, baseType: !7, size: 32)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4053, file: !244, line: 540, baseType: !808, size: 128, offset: 64)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4053, file: !244, line: 543, baseType: !4059, size: 64, offset: 192)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !244, line: 534, flags: DIFlagFwdDecl)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3964, file: !244, line: 621, baseType: !4062, size: 64, offset: 2176)
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{null, !819, !772}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3964, file: !244, line: 622, baseType: !4066, size: 64, offset: 2240)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !244, line: 622, flags: DIFlagFwdDecl)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !820, file: !237, line: 486, baseType: !4069, size: 64, offset: 4096)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !244, line: 642, size: 1792, elements: !4071)
!4071 = !{!4072, !4073, !4074, !4078, !4079, !4080}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4070, file: !244, line: 643, baseType: !3834, size: 1472)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4070, file: !244, line: 644, baseType: !3837, size: 64, offset: 1472)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4070, file: !244, line: 645, baseType: !4075, size: 64, offset: 1536)
!4075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4076, size: 64)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{null, !819, !406}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4070, file: !244, line: 646, baseType: !3837, size: 64, offset: 1600)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4070, file: !244, line: 647, baseType: !3828, size: 64, offset: 1664)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4070, file: !244, line: 648, baseType: !3828, size: 64, offset: 1728)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !820, file: !237, line: 493, baseType: !4082, size: 64, offset: 4160)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !258, line: 162, size: 1088, elements: !4084)
!4084 = !{!4085, !4086, !4087, !4260, !4261, !4262, !4263, !4264, !4265, !4268, !4269, !4270, !4271, !4272, !4273, !4274}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4083, file: !258, line: 163, baseType: !808, size: 128)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4083, file: !258, line: 164, baseType: !421, size: 64, offset: 128)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4083, file: !258, line: 165, baseType: !4088, size: 64, offset: 192)
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4090)
!4090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !258, line: 105, size: 640, elements: !4091)
!4091 = !{!4092, !4210, !4221, !4226, !4230, !4237, !4241, !4245, !4252, !4256}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4090, file: !258, line: 106, baseType: !4093, size: 64)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!405, !4082, !4096, !257}
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4097, size: 64)
!4097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4098, line: 51, size: 1344, elements: !4099)
!4098 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4099 = !{!4100, !4101, !4103, !4104, !4194, !4203, !4204, !4205, !4206, !4207, !4208, !4209}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4097, file: !4098, line: 52, baseType: !421, size: 64)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4097, file: !4098, line: 53, baseType: !4102, size: 32, offset: 64)
!4102 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4098, line: 28, baseType: !411)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4097, file: !4098, line: 54, baseType: !421, size: 64, offset: 128)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4097, file: !4098, line: 55, baseType: !4105, size: 192, offset: 192)
!4105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4106, line: 17, size: 192, elements: !4107)
!4106 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4107 = !{!4108, !4110, !4193}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4105, file: !4106, line: 18, baseType: !4109, size: 64)
!4109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4105, size: 64)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4105, file: !4106, line: 19, baseType: !4111, size: 64, offset: 64)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4113)
!4113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4106, line: 110, size: 1152, elements: !4114)
!4114 = !{!4115, !4119, !4123, !4129, !4135, !4139, !4143, !4148, !4152, !4153, !4157, !4161, !4165, !4176, !4177, !4178, !4179, !4189}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4113, file: !4106, line: 111, baseType: !4116, size: 64)
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = !DISubroutineType(types: !4118)
!4118 = !{!4109, !4109}
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4113, file: !4106, line: 112, baseType: !4120, size: 64, offset: 64)
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4121, size: 64)
!4121 = !DISubroutineType(types: !4122)
!4122 = !{null, !4109}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4113, file: !4106, line: 113, baseType: !4124, size: 64, offset: 128)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{!406, !4127}
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4105)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4113, file: !4106, line: 114, baseType: !4130, size: 64, offset: 192)
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4131 = !DISubroutineType(types: !4132)
!4132 = !{!2611, !4127, !4133}
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !820)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4113, file: !4106, line: 116, baseType: !4136, size: 64, offset: 256)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{!406, !4127, !421}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4113, file: !4106, line: 118, baseType: !4140, size: 64, offset: 320)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{!405, !4127, !421, !7, !398, !919}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4113, file: !4106, line: 123, baseType: !4144, size: 64, offset: 384)
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4145, size: 64)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!405, !4127, !421, !4147, !919}
!4147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4113, file: !4106, line: 126, baseType: !4149, size: 64, offset: 448)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!421, !4127}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4113, file: !4106, line: 127, baseType: !4149, size: 64, offset: 512)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4113, file: !4106, line: 128, baseType: !4154, size: 64, offset: 576)
!4154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4155, size: 64)
!4155 = !DISubroutineType(types: !4156)
!4156 = !{!4109, !4127}
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4113, file: !4106, line: 130, baseType: !4158, size: 64, offset: 640)
!4158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4159, size: 64)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!4109, !4127, !4109}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4113, file: !4106, line: 133, baseType: !4162, size: 64, offset: 704)
!4162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4163, size: 64)
!4163 = !DISubroutineType(types: !4164)
!4164 = !{!4109, !4127, !421}
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4113, file: !4106, line: 135, baseType: !4166, size: 64, offset: 768)
!4166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4167, size: 64)
!4167 = !DISubroutineType(types: !4168)
!4168 = !{!405, !4127, !421, !421, !7, !7, !4169}
!4169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4170, size: 64)
!4170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4106, line: 43, size: 640, elements: !4171)
!4171 = !{!4172, !4173, !4174}
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4170, file: !4106, line: 44, baseType: !4109, size: 64)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4170, file: !4106, line: 45, baseType: !7, size: 32, offset: 64)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4170, file: !4106, line: 46, baseType: !4175, size: 512, offset: 128)
!4175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 512, elements: !532)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4113, file: !4106, line: 140, baseType: !4158, size: 64, offset: 832)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4113, file: !4106, line: 143, baseType: !4154, size: 64, offset: 896)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4113, file: !4106, line: 145, baseType: !4116, size: 64, offset: 960)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4113, file: !4106, line: 146, baseType: !4180, size: 64, offset: 1024)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!405, !4127, !4183}
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4106, line: 29, size: 128, elements: !4185)
!4185 = !{!4186, !4187, !4188}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4184, file: !4106, line: 30, baseType: !7, size: 32)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4184, file: !4106, line: 31, baseType: !7, size: 32, offset: 32)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4184, file: !4106, line: 32, baseType: !4127, size: 64, offset: 64)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4113, file: !4106, line: 148, baseType: !4190, size: 64, offset: 1088)
!4190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4191, size: 64)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!405, !4127, !819}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4105, file: !4106, line: 20, baseType: !819, size: 64, offset: 128)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4097, file: !4098, line: 57, baseType: !4195, size: 64, offset: 384)
!4195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4196, size: 64)
!4196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4098, line: 31, size: 704, elements: !4197)
!4197 = !{!4198, !4199, !4200, !4201, !4202}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4196, file: !4098, line: 32, baseType: !443, size: 64)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4196, file: !4098, line: 33, baseType: !405, size: 32, offset: 64)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4196, file: !4098, line: 34, baseType: !398, size: 64, offset: 128)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4196, file: !4098, line: 35, baseType: !4195, size: 64, offset: 192)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4196, file: !4098, line: 43, baseType: !940, size: 448, offset: 256)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4097, file: !4098, line: 58, baseType: !4195, size: 64, offset: 448)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4097, file: !4098, line: 59, baseType: !4096, size: 64, offset: 512)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4097, file: !4098, line: 60, baseType: !4096, size: 64, offset: 576)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4097, file: !4098, line: 61, baseType: !4096, size: 64, offset: 640)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4097, file: !4098, line: 63, baseType: !823, size: 512, offset: 704)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4097, file: !4098, line: 65, baseType: !716, size: 64, offset: 1216)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4097, file: !4098, line: 66, baseType: !398, size: 64, offset: 1280)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4090, file: !258, line: 108, baseType: !4211, size: 64, offset: 64)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = !DISubroutineType(types: !4213)
!4213 = !{!405, !4082, !4214, !257}
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !258, line: 63, size: 640, elements: !4216)
!4216 = !{!4217, !4218, !4219}
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4215, file: !258, line: 64, baseType: !4109, size: 64)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4215, file: !258, line: 65, baseType: !405, size: 32, offset: 64)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4215, file: !258, line: 66, baseType: !4220, size: 512, offset: 96)
!4220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 512, elements: !2217)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4090, file: !258, line: 110, baseType: !4222, size: 64, offset: 128)
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4223 = !DISubroutineType(types: !4224)
!4224 = !{!405, !4082, !7, !4225}
!4225 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !397, line: 164, baseType: !716)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4090, file: !258, line: 111, baseType: !4227, size: 64, offset: 192)
!4227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4228, size: 64)
!4228 = !DISubroutineType(types: !4229)
!4229 = !{null, !4082, !7}
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !4090, file: !258, line: 112, baseType: !4231, size: 64, offset: 256)
!4231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4232, size: 64)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!405, !4082, !4096, !4234, !7, !4236, !477}
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !411)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4090, file: !258, line: 117, baseType: !4238, size: 64, offset: 320)
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4239, size: 64)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!405, !4082, !7, !7, !398}
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4090, file: !258, line: 119, baseType: !4242, size: 64, offset: 384)
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{null, !4082, !7, !7}
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4090, file: !258, line: 121, baseType: !4246, size: 64, offset: 448)
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4247, size: 64)
!4247 = !DISubroutineType(types: !4248)
!4248 = !{!405, !4082, !4249, !406}
!4249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4250, size: 64)
!4250 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4251, line: 11, flags: DIFlagFwdDecl)
!4251 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !4090, file: !258, line: 122, baseType: !4253, size: 64, offset: 512)
!4253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4254, size: 64)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{null, !4082, !4249}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !4090, file: !258, line: 123, baseType: !4257, size: 64, offset: 576)
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4258, size: 64)
!4258 = !DISubroutineType(types: !4259)
!4259 = !{!405, !4082, !4214, !4236, !477}
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !4083, file: !258, line: 166, baseType: !398, size: 64, offset: 256)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4083, file: !258, line: 167, baseType: !7, size: 32, offset: 320)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !4083, file: !258, line: 168, baseType: !7, size: 32, offset: 352)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4083, file: !258, line: 171, baseType: !4109, size: 64, offset: 384)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !4083, file: !258, line: 172, baseType: !257, size: 32, offset: 448)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4083, file: !258, line: 173, baseType: !4266, size: 64, offset: 512)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !258, line: 134, flags: DIFlagFwdDecl)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4083, file: !258, line: 175, baseType: !4082, size: 64, offset: 576)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !4083, file: !258, line: 182, baseType: !4225, size: 64, offset: 640)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !4083, file: !258, line: 183, baseType: !7, size: 32, offset: 704)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !4083, file: !258, line: 184, baseType: !7, size: 32, offset: 736)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !4083, file: !258, line: 185, baseType: !1321, size: 128, offset: 768)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !4083, file: !258, line: 186, baseType: !1667, size: 192, offset: 896)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !4083, file: !258, line: 187, baseType: !4275, offset: 1088)
!4275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2815)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !820, file: !237, line: 499, baseType: !808, size: 128, offset: 4224)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !820, file: !237, line: 502, baseType: !4278, size: 64, offset: 4352)
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4280)
!4280 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !237, line: 502, flags: DIFlagFwdDecl)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !820, file: !237, line: 504, baseType: !4282, size: 64, offset: 4416)
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !820, file: !237, line: 505, baseType: !757, size: 64, offset: 4480)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !820, file: !237, line: 510, baseType: !757, size: 64, offset: 4544)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !820, file: !237, line: 511, baseType: !4286, size: 64, offset: 4608)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4288)
!4288 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !237, line: 511, flags: DIFlagFwdDecl)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !820, file: !237, line: 513, baseType: !4290, size: 64, offset: 4672)
!4290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4291, size: 64)
!4291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !237, line: 288, size: 128, elements: !4292)
!4292 = !{!4293, !4294}
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4291, file: !237, line: 293, baseType: !7, size: 32)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4291, file: !237, line: 294, baseType: !716, size: 64, offset: 64)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !820, file: !237, line: 515, baseType: !808, size: 128, offset: 4736)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !820, file: !237, line: 526, baseType: !4297, offset: 4864)
!4297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4298, line: 5, elements: !850)
!4298 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !820, file: !237, line: 528, baseType: !4096, size: 64, offset: 4864)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !820, file: !237, line: 529, baseType: !4109, size: 64, offset: 4928)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !820, file: !237, line: 534, baseType: !1097, size: 32, offset: 4992)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !820, file: !237, line: 535, baseType: !411, size: 32, offset: 5024)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !820, file: !237, line: 537, baseType: !836, offset: 5056)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !820, file: !237, line: 538, baseType: !808, size: 128, offset: 5056)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !820, file: !237, line: 540, baseType: !4306, size: 64, offset: 5184)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!4307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4308, line: 54, size: 960, elements: !4309)
!4308 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4309 = !{!4310, !4311, !4312, !4313, !4314, !4315, !4316, !4320, !4324, !4325, !4326, !4327, !4331, !4335, !4336}
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4307, file: !4308, line: 55, baseType: !421, size: 64)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4307, file: !4308, line: 56, baseType: !425, size: 64, offset: 64)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4307, file: !4308, line: 58, baseType: !925, size: 64, offset: 128)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4307, file: !4308, line: 59, baseType: !925, size: 64, offset: 192)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4307, file: !4308, line: 60, baseType: !829, size: 64, offset: 256)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4307, file: !4308, line: 62, baseType: !3819, size: 64, offset: 320)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4307, file: !4308, line: 63, baseType: !4317, size: 64, offset: 384)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{!443, !819, !3826}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4307, file: !4308, line: 65, baseType: !4321, size: 64, offset: 448)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{null, !4306}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4307, file: !4308, line: 66, baseType: !3828, size: 64, offset: 512)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4307, file: !4308, line: 68, baseType: !3837, size: 64, offset: 576)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4307, file: !4308, line: 70, baseType: !3627, size: 64, offset: 640)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4307, file: !4308, line: 71, baseType: !4328, size: 64, offset: 704)
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4329, size: 64)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{!2611, !819}
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4307, file: !4308, line: 73, baseType: !4332, size: 64, offset: 768)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{null, !819, !3659, !3660}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4307, file: !4308, line: 75, baseType: !3832, size: 64, offset: 832)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4307, file: !4308, line: 77, baseType: !3946, size: 64, offset: 896)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !820, file: !237, line: 541, baseType: !925, size: 64, offset: 5248)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !820, file: !237, line: 543, baseType: !3828, size: 64, offset: 5312)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !820, file: !237, line: 544, baseType: !4340, size: 64, offset: 5376)
!4340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4341, size: 64)
!4341 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !237, line: 45, flags: DIFlagFwdDecl)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !820, file: !237, line: 545, baseType: !4343, size: 64, offset: 5440)
!4343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4344, size: 64)
!4344 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !237, line: 47, flags: DIFlagFwdDecl)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !820, file: !237, line: 547, baseType: !406, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !820, file: !237, line: 548, baseType: !406, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !820, file: !237, line: 549, baseType: !406, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !820, file: !237, line: 550, baseType: !406, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !804, file: !272, line: 111, baseType: !425, size: 64, offset: 576)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_shared", scope: !804, file: !272, line: 113, baseType: !405, size: 32, offset: 640)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_dvbdev", scope: !804, file: !272, line: 114, baseType: !4352, size: 64, offset: 704)
!4352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4353, size: 64)
!4353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_device", file: !272, line: 157, size: 704, elements: !4354)
!4354 = !{!4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4369}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "list_head", scope: !4353, file: !272, line: 158, baseType: !808, size: 128)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !4353, file: !272, line: 159, baseType: !3285, size: 64, offset: 128)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "adapter", scope: !4353, file: !272, line: 160, baseType: !803, size: 64, offset: 192)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4353, file: !272, line: 161, baseType: !271, size: 32, offset: 256)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4353, file: !272, line: 162, baseType: !405, size: 32, offset: 288)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4353, file: !272, line: 163, baseType: !411, size: 32, offset: 320)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !4353, file: !272, line: 167, baseType: !405, size: 32, offset: 352)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !4353, file: !272, line: 168, baseType: !405, size: 32, offset: 384)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !4353, file: !272, line: 169, baseType: !405, size: 32, offset: 416)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4353, file: !272, line: 171, baseType: !1965, size: 128, offset: 448)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "kernel_ioctl", scope: !4353, file: !272, line: 173, baseType: !4366, size: 64, offset: 576)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4367 = !DISubroutineType(types: !4368)
!4368 = !{!405, !949, !7, !398}
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4353, file: !272, line: 187, baseType: !398, size: 64, offset: 640)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_lock", scope: !804, file: !272, line: 115, baseType: !1667, size: 192, offset: 768)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "demodulator_priv", scope: !496, file: !51, line: 690, baseType: !398, size: 64, offset: 6144)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_priv", scope: !496, file: !51, line: 691, baseType: !398, size: 64, offset: 6208)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "frontend_priv", scope: !496, file: !51, line: 692, baseType: !398, size: 64, offset: 6272)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "sec_priv", scope: !496, file: !51, line: 693, baseType: !398, size: 64, offset: 6336)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "analog_demod_priv", scope: !496, file: !51, line: 694, baseType: !398, size: 64, offset: 6400)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "dtv_property_cache", scope: !496, file: !51, line: 695, baseType: !576, size: 3648, offset: 6464)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !496, file: !51, line: 698, baseType: !4378, size: 64, offset: 10112)
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = !DISubroutineType(types: !4380)
!4380 = !{!405, !398, !405, !405, !405}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !496, file: !51, line: 699, baseType: !405, size: 32, offset: 10176)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !496, file: !51, line: 700, baseType: !7, size: 32, offset: 10208)
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 64)
!4384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4385)
!4385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drxk_config", file: !4386, line: 37, size: 256, elements: !4387)
!4386 = !DIFile(filename: "drivers/media/dvb-frontends/drxk.h", directory: "/home/lizy2001/genbc/linux")
!4387 = !{!4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399}
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "adr", scope: !4385, file: !4386, line: 38, baseType: !455, size: 8)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "single_master", scope: !4385, file: !4386, line: 39, baseType: !406, size: 8, offset: 8)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "no_i2c_bridge", scope: !4385, file: !4386, line: 40, baseType: !406, size: 8, offset: 16)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "parallel_ts", scope: !4385, file: !4386, line: 41, baseType: !406, size: 8, offset: 24)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_clk", scope: !4385, file: !4386, line: 42, baseType: !406, size: 8, offset: 32)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "enable_merr_cfg", scope: !4385, file: !4386, line: 43, baseType: !406, size: 8, offset: 40)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "antenna_dvbt", scope: !4385, file: !4386, line: 45, baseType: !406, size: 8, offset: 48)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "antenna_gpio", scope: !4385, file: !4386, line: 46, baseType: !408, size: 16, offset: 64)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "mpeg_out_clk_strength", scope: !4385, file: !4386, line: 48, baseType: !455, size: 8, offset: 80)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !4385, file: !4386, line: 49, baseType: !405, size: 32, offset: 96)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "microcode_name", scope: !4385, file: !4386, line: 51, baseType: !421, size: 64, offset: 128)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "qam_demod_parameter_count", scope: !4385, file: !4386, line: 52, baseType: !405, size: 32, offset: 192)
!4400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4401, size: 64)
!4401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter", file: !4402, line: 695, size: 7552, elements: !4403)
!4402 = !DIFile(filename: "./include/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!4403 = !{!4404, !4405, !4406, !4443, !4444, !4458, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4475, !4476, !4477, !4478, !4510, !4521}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4401, file: !4402, line: 696, baseType: !425, size: 64)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4401, file: !4402, line: 697, baseType: !7, size: 32, offset: 64)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !4401, file: !4402, line: 698, baseType: !4407, size: 64, offset: 128)
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 64)
!4408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4409)
!4409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_algorithm", file: !4402, line: 519, size: 320, elements: !4410)
!4410 = !{!4411, !4424, !4425, !4438, !4439}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer", scope: !4409, file: !4402, line: 529, baseType: !4412, size: 64)
!4412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4413, size: 64)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!405, !4400, !4415, !405}
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4416, size: 64)
!4416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_msg", file: !4417, line: 69, size: 128, elements: !4418)
!4417 = !DIFile(filename: "./include/uapi/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!4418 = !{!4419, !4420, !4421, !4422}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4416, file: !4417, line: 70, baseType: !409, size: 16)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4416, file: !4417, line: 71, baseType: !409, size: 16, offset: 16)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4416, file: !4417, line: 84, baseType: !409, size: 16, offset: 32)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4416, file: !4417, line: 85, baseType: !4423, size: 64, offset: 64)
!4423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !456, size: 64)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer_atomic", scope: !4409, file: !4402, line: 531, baseType: !4412, size: 64, offset: 64)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer", scope: !4409, file: !4402, line: 533, baseType: !4426, size: 64, offset: 128)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!405, !4400, !408, !410, !423, !455, !405, !4429}
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 64)
!4430 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "i2c_smbus_data", file: !4417, line: 135, size: 272, elements: !4431)
!4431 = !{!4432, !4433, !4434}
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !4430, file: !4417, line: 136, baseType: !456, size: 8)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !4430, file: !4417, line: 137, baseType: !409, size: 16)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4430, file: !4417, line: 138, baseType: !4435, size: 272)
!4435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !456, size: 272, elements: !4436)
!4436 = !{!4437}
!4437 = !DISubrange(count: 34)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer_atomic", scope: !4409, file: !4402, line: 536, baseType: !4426, size: 64, offset: 192)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "functionality", scope: !4409, file: !4402, line: 541, baseType: !4440, size: 64, offset: 256)
!4440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4441, size: 64)
!4441 = !DISubroutineType(types: !4442)
!4442 = !{!411, !4400}
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "algo_data", scope: !4401, file: !4402, line: 699, baseType: !398, size: 64, offset: 192)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "lock_ops", scope: !4401, file: !4402, line: 702, baseType: !4445, size: 64, offset: 256)
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4446, size: 64)
!4446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4447)
!4447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_lock_operations", file: !4402, line: 557, size: 192, elements: !4448)
!4448 = !{!4449, !4453, !4457}
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "lock_bus", scope: !4447, file: !4402, line: 558, baseType: !4450, size: 64)
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4451, size: 64)
!4451 = !DISubroutineType(types: !4452)
!4452 = !{null, !4400, !7}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "trylock_bus", scope: !4447, file: !4402, line: 559, baseType: !4454, size: 64, offset: 64)
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{!405, !4400, !7}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_bus", scope: !4447, file: !4402, line: 560, baseType: !4450, size: 64, offset: 128)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock", scope: !4401, file: !4402, line: 703, baseType: !4459, size: 192, offset: 320)
!4459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex", file: !4460, line: 30, size: 192, elements: !4461)
!4460 = !DIFile(filename: "./include/linux/rtmutex.h", directory: "/home/lizy2001/genbc/linux")
!4461 = !{!4462, !4463, !4464}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !4459, file: !4460, line: 31, baseType: !1358)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4459, file: !4460, line: 32, baseType: !1330, size: 128)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4459, file: !4460, line: 33, baseType: !1707, size: 64, offset: 128)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "mux_lock", scope: !4401, file: !4402, line: 704, baseType: !4459, size: 192, offset: 512)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4401, file: !4402, line: 706, baseType: !405, size: 32, offset: 704)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !4401, file: !4402, line: 707, baseType: !405, size: 32, offset: 736)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4401, file: !4402, line: 708, baseType: !820, size: 5568, offset: 768)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "locked_flags", scope: !4401, file: !4402, line: 709, baseType: !716, size: 64, offset: 6336)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !4401, file: !4402, line: 713, baseType: !405, size: 32, offset: 6400)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4401, file: !4402, line: 714, baseType: !4472, size: 384, offset: 6432)
!4472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 384, elements: !4473)
!4473 = !{!4474}
!4474 = !DISubrange(count: 48)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "dev_released", scope: !4401, file: !4402, line: 715, baseType: !1986, size: 192, offset: 6848)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients_lock", scope: !4401, file: !4402, line: 717, baseType: !1667, size: 192, offset: 7040)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients", scope: !4401, file: !4402, line: 718, baseType: !808, size: 128, offset: 7232)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "bus_recovery_info", scope: !4401, file: !4402, line: 720, baseType: !4479, size: 64, offset: 7360)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!4480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_bus_recovery_info", file: !4402, line: 618, size: 832, elements: !4481)
!4481 = !{!4482, !4486, !4487, !4491, !4492, !4493, !4494, !4498, !4499, !4502, !4503, !4506, !4509}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "recover_bus", scope: !4480, file: !4402, line: 619, baseType: !4483, size: 64)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 64)
!4484 = !DISubroutineType(types: !4485)
!4485 = !{!405, !4400}
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "get_scl", scope: !4480, file: !4402, line: 621, baseType: !4483, size: 64, offset: 64)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "set_scl", scope: !4480, file: !4402, line: 622, baseType: !4488, size: 64, offset: 128)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{null, !4400, !405}
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "get_sda", scope: !4480, file: !4402, line: 623, baseType: !4483, size: 64, offset: 192)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "set_sda", scope: !4480, file: !4402, line: 624, baseType: !4488, size: 64, offset: 256)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "get_bus_free", scope: !4480, file: !4402, line: 625, baseType: !4483, size: 64, offset: 320)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_recovery", scope: !4480, file: !4402, line: 627, baseType: !4495, size: 64, offset: 384)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{null, !4400}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_recovery", scope: !4480, file: !4402, line: 628, baseType: !4495, size: 64, offset: 448)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "scl_gpiod", scope: !4480, file: !4402, line: 631, baseType: !4500, size: 64, offset: 512)
!4500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4501, size: 64)
!4501 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !4402, line: 631, flags: DIFlagFwdDecl)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "sda_gpiod", scope: !4480, file: !4402, line: 632, baseType: !4500, size: 64, offset: 576)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "pinctrl", scope: !4480, file: !4402, line: 633, baseType: !4504, size: 64, offset: 640)
!4504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4505, size: 64)
!4505 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl", file: !4402, line: 633, flags: DIFlagFwdDecl)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "pins_default", scope: !4480, file: !4402, line: 634, baseType: !4507, size: 64, offset: 704)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !4402, line: 634, flags: DIFlagFwdDecl)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "pins_gpio", scope: !4480, file: !4402, line: 635, baseType: !4507, size: 64, offset: 768)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !4401, file: !4402, line: 721, baseType: !4511, size: 64, offset: 7424)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4513)
!4513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter_quirks", file: !4402, line: 664, size: 192, elements: !4514)
!4514 = !{!4515, !4516, !4517, !4518, !4519, !4520}
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4513, file: !4402, line: 665, baseType: !757, size: 64)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_msgs", scope: !4513, file: !4402, line: 666, baseType: !405, size: 32, offset: 64)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_len", scope: !4513, file: !4402, line: 667, baseType: !408, size: 16, offset: 96)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "max_read_len", scope: !4513, file: !4402, line: 668, baseType: !408, size: 16, offset: 112)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_1st_msg_len", scope: !4513, file: !4402, line: 669, baseType: !408, size: 16, offset: 128)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_2nd_msg_len", scope: !4513, file: !4402, line: 670, baseType: !408, size: 16, offset: 144)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "host_notify_domain", scope: !4401, file: !4402, line: 723, baseType: !4082, size: 64, offset: 7488)
!4522 = !DIGlobalVariableExpression(var: !4523, expr: !DIExpression())
!4523 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description222", scope: !2, file: !3, line: 6850, type: !4524, isLocal: true, isDefinition: true, align: 8)
!4524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !422, size: 240, elements: !4525)
!4525 = !{!4526}
!4526 = !DISubrange(count: 30)
!4527 = !DIGlobalVariableExpression(var: !4528, expr: !DIExpression())
!4528 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author223", scope: !2, file: !3, line: 6851, type: !4529, isLocal: true, isDefinition: true, align: 8)
!4529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !422, size: 208, elements: !4530)
!4530 = !{!4531}
!4531 = !DISubrange(count: 26)
!4532 = !DIGlobalVariableExpression(var: !4533, expr: !DIExpression())
!4533 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file224", scope: !2, file: !3, line: 6852, type: !4534, isLocal: true, isDefinition: true, align: 8)
!4534 = !DICompositeType(tag: DW_TAG_array_type, baseType: !422, size: 344, elements: !4535)
!4535 = !{!4536}
!4536 = !DISubrange(count: 43)
!4537 = !DIGlobalVariableExpression(var: !4538, expr: !DIExpression())
!4538 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license225", scope: !2, file: !3, line: 6852, type: !4539, isLocal: true, isDefinition: true, align: 8)
!4539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !422, size: 136, elements: !4540)
!4540 = !{!4541}
!4541 = !DISubrange(count: 17)
!4542 = !DIGlobalVariableExpression(var: !4543, expr: !DIExpression())
!4543 = distinct !DIGlobalVariable(name: "debug", scope: !2, file: !3, line: 149, type: !7, isLocal: true, isDefinition: true)
!4544 = !DIGlobalVariableExpression(var: !4545, expr: !DIExpression())
!4545 = distinct !DIGlobalVariable(name: "drxk_ops", scope: !2, file: !3, line: 6715, type: !4546, isLocal: true, isDefinition: true)
!4546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !513)
!4547 = !DICompositeType(tag: DW_TAG_array_type, baseType: !422, size: 88, elements: !4548)
!4548 = !{!4549}
!4549 = !DISubrange(count: 11)
!4550 = !{i32 7, !"Dwarf Version", i32 4}
!4551 = !{i32 2, !"Debug Info Version", i32 3}
!4552 = !{i32 1, !"wchar_size", i32 2}
!4553 = !{i32 1, !"Code Model", i32 2}
!4554 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4555 = !DILocalVariable(name: "config", arg: 1, scope: !492, file: !3, line: 6748, type: !4383)
!4556 = !DILocation(line: 6748, column: 60, scope: !492)
!4557 = !DILocalVariable(name: "i2c", arg: 2, scope: !492, file: !3, line: 6749, type: !4400)
!4558 = !DILocation(line: 6749, column: 26, scope: !492)
!4559 = !DILocalVariable(name: "p", scope: !492, file: !3, line: 6751, type: !575)
!4560 = !DILocation(line: 6751, column: 34, scope: !492)
!4561 = !DILocalVariable(name: "state", scope: !492, file: !3, line: 6752, type: !4562)
!4562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4563, size: 64)
!4563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drxk_state", file: !284, line: 211, size: 20800, elements: !4564)
!4564 = !{!4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573, !4574, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4609, !4610, !4611, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623, !4624, !4625, !4626, !4627, !4628, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4672, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4702}
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "frontend", scope: !4563, file: !284, line: 212, baseType: !496, size: 10240)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "props", scope: !4563, file: !284, line: 213, baseType: !576, size: 3648, offset: 10240)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4563, file: !284, line: 214, baseType: !819, size: 64, offset: 13888)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "i2c", scope: !4563, file: !284, line: 216, baseType: !4400, size: 64, offset: 13952)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "demod_address", scope: !4563, file: !284, line: 217, baseType: !455, size: 8, offset: 14016)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4563, file: !284, line: 218, baseType: !398, size: 64, offset: 14080)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4563, file: !284, line: 220, baseType: !1667, size: 192, offset: 14144)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "m_instance", scope: !4563, file: !284, line: 222, baseType: !411, size: 32, offset: 14336)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "m_chunk_size", scope: !4563, file: !284, line: 224, baseType: !405, size: 32, offset: 14368)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !4563, file: !284, line: 225, baseType: !4575, size: 2048, offset: 14400)
!4575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 2048, elements: !4576)
!4576 = !{!4577}
!4577 = !DISubrange(count: 256)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "m_has_lna", scope: !4563, file: !284, line: 227, baseType: !406, size: 8, offset: 16448)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "m_has_dvbt", scope: !4563, file: !284, line: 228, baseType: !406, size: 8, offset: 16456)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "m_has_dvbc", scope: !4563, file: !284, line: 229, baseType: !406, size: 8, offset: 16464)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "m_has_audio", scope: !4563, file: !284, line: 230, baseType: !406, size: 8, offset: 16472)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "m_has_atv", scope: !4563, file: !284, line: 231, baseType: !406, size: 8, offset: 16480)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "m_has_oob", scope: !4563, file: !284, line: 232, baseType: !406, size: 8, offset: 16488)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "m_has_sawsw", scope: !4563, file: !284, line: 233, baseType: !406, size: 8, offset: 16496)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "m_has_gpio1", scope: !4563, file: !284, line: 234, baseType: !406, size: 8, offset: 16504)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "m_has_gpio2", scope: !4563, file: !284, line: 235, baseType: !406, size: 8, offset: 16512)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "m_has_irqn", scope: !4563, file: !284, line: 236, baseType: !406, size: 8, offset: 16520)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "m_osc_clock_freq", scope: !4563, file: !284, line: 237, baseType: !408, size: 16, offset: 16528)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "m_hi_cfg_timing_div", scope: !4563, file: !284, line: 238, baseType: !408, size: 16, offset: 16544)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "m_hi_cfg_bridge_delay", scope: !4563, file: !284, line: 239, baseType: !408, size: 16, offset: 16560)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "m_hi_cfg_wake_up_key", scope: !4563, file: !284, line: 240, baseType: !408, size: 16, offset: 16576)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "m_hi_cfg_timeout", scope: !4563, file: !284, line: 241, baseType: !408, size: 16, offset: 16592)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "m_hi_cfg_ctrl", scope: !4563, file: !284, line: 242, baseType: !408, size: 16, offset: 16608)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "m_sys_clock_freq", scope: !4563, file: !284, line: 243, baseType: !772, size: 32, offset: 16640)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "m_drxk_state", scope: !4563, file: !284, line: 245, baseType: !283, size: 32, offset: 16672)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "m_operation_mode", scope: !4563, file: !284, line: 246, baseType: !292, size: 32, offset: 16704)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "m_vsb_rf_agc_cfg", scope: !4563, file: !284, line: 247, baseType: !4598, size: 160, offset: 16736)
!4598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s_cfg_agc", file: !284, line: 183, size: 160, elements: !4599)
!4599 = !{!4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_mode", scope: !4598, file: !284, line: 184, baseType: !299, size: 32)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "output_level", scope: !4598, file: !284, line: 185, baseType: !408, size: 16, offset: 32)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "min_output_level", scope: !4598, file: !284, line: 186, baseType: !408, size: 16, offset: 48)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "max_output_level", scope: !4598, file: !284, line: 187, baseType: !408, size: 16, offset: 64)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !4598, file: !284, line: 188, baseType: !408, size: 16, offset: 80)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !4598, file: !284, line: 189, baseType: !408, size: 16, offset: 96)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "cut_off_current", scope: !4598, file: !284, line: 190, baseType: !408, size: 16, offset: 112)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "ingain_tgt_max", scope: !4598, file: !284, line: 192, baseType: !408, size: 16, offset: 128)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "fast_clip_ctrl_delay", scope: !4598, file: !284, line: 193, baseType: !408, size: 16, offset: 144)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "m_vsb_if_agc_cfg", scope: !4563, file: !284, line: 248, baseType: !4598, size: 160, offset: 16896)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "m_vsb_pga_cfg", scope: !4563, file: !284, line: 249, baseType: !408, size: 16, offset: 17056)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "m_vsb_pre_saw_cfg", scope: !4563, file: !284, line: 250, baseType: !4612, size: 32, offset: 17072)
!4612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "s_cfg_pre_saw", file: !284, line: 196, size: 32, elements: !4613)
!4613 = !{!4614, !4615}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !4612, file: !284, line: 197, baseType: !408, size: 16)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "use_pre_saw", scope: !4612, file: !284, line: 198, baseType: !406, size: 8, offset: 16)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "m_Quality83percent", scope: !4563, file: !284, line: 251, baseType: !772, size: 32, offset: 17120)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "m_Quality93percent", scope: !4563, file: !284, line: 252, baseType: !772, size: 32, offset: 17152)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "m_smart_ant_inverted", scope: !4563, file: !284, line: 253, baseType: !406, size: 8, offset: 17184)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "m_b_debug_enable_bridge", scope: !4563, file: !284, line: 254, baseType: !406, size: 8, offset: 17192)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "m_b_p_down_open_bridge", scope: !4563, file: !284, line: 255, baseType: !406, size: 8, offset: 17200)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "m_b_power_down", scope: !4563, file: !284, line: 256, baseType: !406, size: 8, offset: 17208)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "m_iqm_fs_rate_ofs", scope: !4563, file: !284, line: 258, baseType: !411, size: 32, offset: 17216)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "m_enable_mpeg_output", scope: !4563, file: !284, line: 260, baseType: !406, size: 8, offset: 17248)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "m_insert_rs_byte", scope: !4563, file: !284, line: 261, baseType: !406, size: 8, offset: 17256)
!4625 = !DIDerivedType(tag: DW_TAG_member, name: "m_enable_parallel", scope: !4563, file: !284, line: 262, baseType: !406, size: 8, offset: 17264)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "m_invert_data", scope: !4563, file: !284, line: 263, baseType: !406, size: 8, offset: 17272)
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "m_invert_err", scope: !4563, file: !284, line: 264, baseType: !406, size: 8, offset: 17280)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "m_invert_str", scope: !4563, file: !284, line: 265, baseType: !406, size: 8, offset: 17288)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "m_invert_val", scope: !4563, file: !284, line: 266, baseType: !406, size: 8, offset: 17296)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "m_invert_clk", scope: !4563, file: !284, line: 267, baseType: !406, size: 8, offset: 17304)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "m_dvbc_static_clk", scope: !4563, file: !284, line: 268, baseType: !406, size: 8, offset: 17312)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "m_dvbt_static_clk", scope: !4563, file: !284, line: 269, baseType: !406, size: 8, offset: 17320)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "m_dvbt_bitrate", scope: !4563, file: !284, line: 272, baseType: !411, size: 32, offset: 17344)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "m_dvbc_bitrate", scope: !4563, file: !284, line: 273, baseType: !411, size: 32, offset: 17376)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "m_ts_data_strength", scope: !4563, file: !284, line: 275, baseType: !455, size: 8, offset: 17408)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "m_ts_clockk_strength", scope: !4563, file: !284, line: 276, baseType: !455, size: 8, offset: 17416)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "m_itut_annex_c", scope: !4563, file: !284, line: 278, baseType: !406, size: 8, offset: 17424)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "m_width_str", scope: !4563, file: !284, line: 280, baseType: !304, size: 32, offset: 17440)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "m_mpeg_ts_static_bitrate", scope: !4563, file: !284, line: 281, baseType: !411, size: 32, offset: 17472)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "m_mpeg_lock_time_out", scope: !4563, file: !284, line: 285, baseType: !772, size: 32, offset: 17504)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "m_demod_lock_time_out", scope: !4563, file: !284, line: 286, baseType: !772, size: 32, offset: 17536)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "m_disable_te_ihandling", scope: !4563, file: !284, line: 288, baseType: !406, size: 8, offset: 17568)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "m_rf_agc_pol", scope: !4563, file: !284, line: 290, baseType: !406, size: 8, offset: 17576)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "m_if_agc_pol", scope: !4563, file: !284, line: 291, baseType: !406, size: 8, offset: 17584)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "m_atv_rf_agc_cfg", scope: !4563, file: !284, line: 293, baseType: !4598, size: 160, offset: 17600)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "m_atv_if_agc_cfg", scope: !4563, file: !284, line: 294, baseType: !4598, size: 160, offset: 17760)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "m_atv_pre_saw_cfg", scope: !4563, file: !284, line: 295, baseType: !4612, size: 32, offset: 17920)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "m_phase_correction_bypass", scope: !4563, file: !284, line: 296, baseType: !406, size: 8, offset: 17952)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "m_atv_top_vid_peak", scope: !4563, file: !284, line: 297, baseType: !400, size: 16, offset: 17968)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "m_atv_top_noise_th", scope: !4563, file: !284, line: 298, baseType: !408, size: 16, offset: 17984)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "m_sif_attenuation", scope: !4563, file: !284, line: 299, baseType: !308, size: 32, offset: 18016)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "m_enable_cvbs_output", scope: !4563, file: !284, line: 300, baseType: !406, size: 8, offset: 18048)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "m_enable_sif_output", scope: !4563, file: !284, line: 301, baseType: !406, size: 8, offset: 18056)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "m_b_mirror_freq_spect", scope: !4563, file: !284, line: 302, baseType: !406, size: 8, offset: 18064)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "m_constellation", scope: !4563, file: !284, line: 303, baseType: !314, size: 32, offset: 18080)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "m_curr_symbol_rate", scope: !4563, file: !284, line: 304, baseType: !411, size: 32, offset: 18112)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "m_qam_rf_agc_cfg", scope: !4563, file: !284, line: 305, baseType: !4598, size: 160, offset: 18144)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "m_qam_if_agc_cfg", scope: !4563, file: !284, line: 306, baseType: !4598, size: 160, offset: 18304)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "m_qam_pga_cfg", scope: !4563, file: !284, line: 307, baseType: !408, size: 16, offset: 18464)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "m_qam_pre_saw_cfg", scope: !4563, file: !284, line: 308, baseType: !4612, size: 32, offset: 18480)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "m_qam_interleave_mode", scope: !4563, file: !284, line: 309, baseType: !328, size: 32, offset: 18528)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "m_fec_rs_plen", scope: !4563, file: !284, line: 310, baseType: !408, size: 16, offset: 18560)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "m_fec_rs_prescale", scope: !4563, file: !284, line: 311, baseType: !408, size: 16, offset: 18576)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "m_sqi_speed", scope: !4563, file: !284, line: 313, baseType: !332, size: 32, offset: 18592)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "m_gpio", scope: !4563, file: !284, line: 315, baseType: !408, size: 16, offset: 18624)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "m_gpio_cfg", scope: !4563, file: !284, line: 316, baseType: !408, size: 16, offset: 18640)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "m_dvbt_rf_agc_cfg", scope: !4563, file: !284, line: 318, baseType: !4598, size: 160, offset: 18656)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "m_dvbt_if_agc_cfg", scope: !4563, file: !284, line: 319, baseType: !4598, size: 160, offset: 18816)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "m_dvbt_pre_saw_cfg", scope: !4563, file: !284, line: 320, baseType: !4612, size: 32, offset: 18976)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "m_agcfast_clip_ctrl_delay", scope: !4563, file: !284, line: 322, baseType: !408, size: 16, offset: 19008)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "m_adc_comp_passed", scope: !4563, file: !284, line: 323, baseType: !406, size: 8, offset: 19024)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "m_adcCompCoef", scope: !4563, file: !284, line: 324, baseType: !4673, size: 1024, offset: 19040)
!4673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 1024, elements: !879)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "m_adc_state", scope: !4563, file: !284, line: 325, baseType: !408, size: 16, offset: 20064)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "m_microcode", scope: !4563, file: !284, line: 327, baseType: !778, size: 64, offset: 20096)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "m_microcode_length", scope: !4563, file: !284, line: 328, baseType: !405, size: 32, offset: 20160)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "m_drxk_a3_rom_code", scope: !4563, file: !284, line: 329, baseType: !406, size: 8, offset: 20192)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "m_drxk_a3_patch_code", scope: !4563, file: !284, line: 330, baseType: !406, size: 8, offset: 20200)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "m_rfmirror", scope: !4563, file: !284, line: 332, baseType: !406, size: 8, offset: 20208)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "m_device_spin", scope: !4563, file: !284, line: 333, baseType: !455, size: 8, offset: 20216)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "m_iqm_rc_rate", scope: !4563, file: !284, line: 334, baseType: !411, size: 32, offset: 20224)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "m_current_power_mode", scope: !4563, file: !284, line: 336, baseType: !338, size: 32, offset: 20256)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "drxk_i2c_exclusive_lock", scope: !4563, file: !284, line: 339, baseType: !406, size: 8, offset: 20288)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "uio_mask", scope: !4563, file: !284, line: 346, baseType: !408, size: 16, offset: 20304)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "enable_merr_cfg", scope: !4563, file: !284, line: 348, baseType: !406, size: 8, offset: 20320)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "single_master", scope: !4563, file: !284, line: 349, baseType: !406, size: 8, offset: 20328)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "no_i2c_bridge", scope: !4563, file: !284, line: 350, baseType: !406, size: 8, offset: 20336)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "antenna_dvbt", scope: !4563, file: !284, line: 351, baseType: !406, size: 8, offset: 20344)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "antenna_gpio", scope: !4563, file: !284, line: 352, baseType: !408, size: 16, offset: 20352)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "fe_status", scope: !4563, file: !284, line: 354, baseType: !40, size: 32, offset: 20384)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "microcode_name", scope: !4563, file: !284, line: 357, baseType: !421, size: 64, offset: 20416)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "fw_wait_load", scope: !4563, file: !284, line: 358, baseType: !1986, size: 192, offset: 20480)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !4563, file: !284, line: 359, baseType: !4694, size: 64, offset: 20672)
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4696)
!4696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "firmware", file: !4697, line: 12, size: 192, elements: !4698)
!4697 = !DIFile(filename: "./include/linux/firmware.h", directory: "/home/lizy2001/genbc/linux")
!4698 = !{!4699, !4700, !4701}
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4696, file: !4697, line: 13, baseType: !919, size: 64)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4696, file: !4697, line: 14, baseType: !549, size: 64, offset: 64)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4696, file: !4697, line: 17, baseType: !398, size: 64, offset: 128)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "qam_demod_parameter_count", scope: !4563, file: !284, line: 360, baseType: !405, size: 32, offset: 20736)
!4703 = !DILocation(line: 6752, column: 21, scope: !492)
!4704 = !DILocalVariable(name: "adr", scope: !492, file: !3, line: 6753, type: !455)
!4705 = !DILocation(line: 6753, column: 5, scope: !492)
!4706 = !DILocation(line: 6753, column: 11, scope: !492)
!4707 = !DILocation(line: 6753, column: 19, scope: !492)
!4708 = !DILocalVariable(name: "status", scope: !492, file: !3, line: 6754, type: !405)
!4709 = !DILocation(line: 6754, column: 6, scope: !492)
!4710 = !DILocation(line: 6756, column: 2, scope: !492)
!4711 = !DILocation(line: 6756, column: 2, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 6756, column: 2)
!4713 = distinct !DILexicalBlock(scope: !492, file: !3, line: 6756, column: 2)
!4714 = !DILocation(line: 6756, column: 2, scope: !4713)
!4715 = !DILocation(line: 6757, column: 10, scope: !492)
!4716 = !DILocation(line: 6757, column: 8, scope: !492)
!4717 = !DILocation(line: 6758, column: 7, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !492, file: !3, line: 6758, column: 6)
!4719 = !DILocation(line: 6758, column: 6, scope: !492)
!4720 = !DILocation(line: 6759, column: 3, scope: !4718)
!4721 = !DILocation(line: 6761, column: 15, scope: !492)
!4722 = !DILocation(line: 6761, column: 2, scope: !492)
!4723 = !DILocation(line: 6761, column: 9, scope: !492)
!4724 = !DILocation(line: 6761, column: 13, scope: !492)
!4725 = !DILocation(line: 6762, column: 25, scope: !492)
!4726 = !DILocation(line: 6762, column: 2, scope: !492)
!4727 = !DILocation(line: 6762, column: 9, scope: !492)
!4728 = !DILocation(line: 6762, column: 23, scope: !492)
!4729 = !DILocation(line: 6763, column: 25, scope: !492)
!4730 = !DILocation(line: 6763, column: 33, scope: !492)
!4731 = !DILocation(line: 6763, column: 2, scope: !492)
!4732 = !DILocation(line: 6763, column: 9, scope: !492)
!4733 = !DILocation(line: 6763, column: 23, scope: !492)
!4734 = !DILocation(line: 6764, column: 26, scope: !492)
!4735 = !DILocation(line: 6764, column: 34, scope: !492)
!4736 = !DILocation(line: 6764, column: 2, scope: !492)
!4737 = !DILocation(line: 6764, column: 9, scope: !492)
!4738 = !DILocation(line: 6764, column: 24, scope: !492)
!4739 = !DILocation(line: 6765, column: 37, scope: !492)
!4740 = !DILocation(line: 6765, column: 45, scope: !492)
!4741 = !DILocation(line: 6765, column: 2, scope: !492)
!4742 = !DILocation(line: 6765, column: 9, scope: !492)
!4743 = !DILocation(line: 6765, column: 35, scope: !492)
!4744 = !DILocation(line: 6766, column: 25, scope: !492)
!4745 = !DILocation(line: 6766, column: 33, scope: !492)
!4746 = !DILocation(line: 6766, column: 2, scope: !492)
!4747 = !DILocation(line: 6766, column: 9, scope: !492)
!4748 = !DILocation(line: 6766, column: 23, scope: !492)
!4749 = !DILocation(line: 6767, column: 24, scope: !492)
!4750 = !DILocation(line: 6767, column: 32, scope: !492)
!4751 = !DILocation(line: 6767, column: 2, scope: !492)
!4752 = !DILocation(line: 6767, column: 9, scope: !492)
!4753 = !DILocation(line: 6767, column: 22, scope: !492)
!4754 = !DILocation(line: 6768, column: 24, scope: !492)
!4755 = !DILocation(line: 6768, column: 32, scope: !492)
!4756 = !DILocation(line: 6768, column: 2, scope: !492)
!4757 = !DILocation(line: 6768, column: 9, scope: !492)
!4758 = !DILocation(line: 6768, column: 22, scope: !492)
!4759 = !DILocation(line: 6769, column: 24, scope: !492)
!4760 = !DILocation(line: 6769, column: 32, scope: !492)
!4761 = !DILocation(line: 6769, column: 2, scope: !492)
!4762 = !DILocation(line: 6769, column: 9, scope: !492)
!4763 = !DILocation(line: 6769, column: 22, scope: !492)
!4764 = !DILocation(line: 6770, column: 27, scope: !492)
!4765 = !DILocation(line: 6770, column: 35, scope: !492)
!4766 = !DILocation(line: 6770, column: 2, scope: !492)
!4767 = !DILocation(line: 6770, column: 9, scope: !492)
!4768 = !DILocation(line: 6770, column: 25, scope: !492)
!4769 = !DILocation(line: 6772, column: 6, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !492, file: !3, line: 6772, column: 6)
!4771 = !DILocation(line: 6772, column: 14, scope: !4770)
!4772 = !DILocation(line: 6772, column: 6, scope: !492)
!4773 = !DILocation(line: 6773, column: 3, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 6772, column: 27)
!4775 = !DILocation(line: 6773, column: 10, scope: !4774)
!4776 = !DILocation(line: 6773, column: 28, scope: !4774)
!4777 = !DILocation(line: 6774, column: 3, scope: !4774)
!4778 = !DILocation(line: 6774, column: 10, scope: !4774)
!4779 = !DILocation(line: 6774, column: 28, scope: !4774)
!4780 = !DILocation(line: 6775, column: 2, scope: !4774)
!4781 = !DILocation(line: 6776, column: 3, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 6775, column: 9)
!4783 = !DILocation(line: 6776, column: 10, scope: !4782)
!4784 = !DILocation(line: 6776, column: 28, scope: !4782)
!4785 = !DILocation(line: 6777, column: 3, scope: !4782)
!4786 = !DILocation(line: 6777, column: 10, scope: !4782)
!4787 = !DILocation(line: 6777, column: 28, scope: !4782)
!4788 = !DILocation(line: 6781, column: 6, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !492, file: !3, line: 6781, column: 6)
!4790 = !DILocation(line: 6781, column: 14, scope: !4789)
!4791 = !DILocation(line: 6781, column: 6, scope: !492)
!4792 = !DILocation(line: 6782, column: 33, scope: !4789)
!4793 = !DILocation(line: 6782, column: 41, scope: !4789)
!4794 = !DILocation(line: 6782, column: 63, scope: !4789)
!4795 = !DILocation(line: 6782, column: 3, scope: !4789)
!4796 = !DILocation(line: 6782, column: 10, scope: !4789)
!4797 = !DILocation(line: 6782, column: 31, scope: !4789)
!4798 = !DILocation(line: 6784, column: 3, scope: !4789)
!4799 = !DILocation(line: 6784, column: 10, scope: !4789)
!4800 = !DILocation(line: 6784, column: 31, scope: !4789)
!4801 = !DILocation(line: 6786, column: 6, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !492, file: !3, line: 6786, column: 6)
!4803 = !DILocation(line: 6786, column: 14, scope: !4802)
!4804 = !DILocation(line: 6786, column: 6, scope: !492)
!4805 = !DILocation(line: 6787, column: 3, scope: !4802)
!4806 = !DILocation(line: 6787, column: 10, scope: !4802)
!4807 = !DILocation(line: 6787, column: 28, scope: !4802)
!4808 = !DILocation(line: 6789, column: 3, scope: !4802)
!4809 = !DILocation(line: 6789, column: 10, scope: !4802)
!4810 = !DILocation(line: 6789, column: 28, scope: !4802)
!4811 = !DILocation(line: 6792, column: 20, scope: !492)
!4812 = !DILocation(line: 6792, column: 28, scope: !492)
!4813 = !DILocation(line: 6792, column: 2, scope: !492)
!4814 = !DILocation(line: 6792, column: 9, scope: !492)
!4815 = !DILocation(line: 6792, column: 18, scope: !492)
!4816 = !DILocation(line: 6795, column: 7, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !492, file: !3, line: 6795, column: 6)
!4818 = !DILocation(line: 6795, column: 14, scope: !4817)
!4819 = !DILocation(line: 6795, column: 27, scope: !4817)
!4820 = !DILocation(line: 6795, column: 30, scope: !4817)
!4821 = !DILocation(line: 6795, column: 37, scope: !4817)
!4822 = !DILocation(line: 6795, column: 6, scope: !492)
!4823 = !DILocation(line: 6796, column: 20, scope: !4817)
!4824 = !DILocation(line: 6796, column: 27, scope: !4817)
!4825 = !DILocation(line: 6796, column: 3, scope: !4817)
!4826 = !DILocation(line: 6796, column: 10, scope: !4817)
!4827 = !DILocation(line: 6796, column: 17, scope: !4817)
!4828 = !DILocation(line: 6798, column: 21, scope: !4817)
!4829 = !DILocation(line: 6798, column: 28, scope: !4817)
!4830 = !DILocation(line: 6798, column: 20, scope: !4817)
!4831 = !DILocation(line: 6798, column: 3, scope: !4817)
!4832 = !DILocation(line: 6798, column: 10, scope: !4817)
!4833 = !DILocation(line: 6798, column: 17, scope: !4817)
!4834 = !DILocation(line: 6800, column: 2, scope: !492)
!4835 = !DILocation(line: 6800, column: 2, scope: !4836)
!4836 = distinct !DILexicalBlock(scope: !492, file: !3, line: 6800, column: 2)
!4837 = !DILocation(line: 6802, column: 10, scope: !492)
!4838 = !DILocation(line: 6802, column: 17, scope: !492)
!4839 = !DILocation(line: 6802, column: 26, scope: !492)
!4840 = !DILocation(line: 6802, column: 2, scope: !492)
!4841 = !DILocation(line: 6803, column: 37, scope: !492)
!4842 = !DILocation(line: 6803, column: 2, scope: !492)
!4843 = !DILocation(line: 6803, column: 9, scope: !492)
!4844 = !DILocation(line: 6803, column: 18, scope: !492)
!4845 = !DILocation(line: 6803, column: 35, scope: !492)
!4846 = !DILocation(line: 6805, column: 13, scope: !492)
!4847 = !DILocation(line: 6805, column: 2, scope: !492)
!4848 = !DILocation(line: 6808, column: 6, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !492, file: !3, line: 6808, column: 6)
!4850 = !DILocation(line: 6808, column: 13, scope: !4849)
!4851 = !DILocation(line: 6808, column: 6, scope: !492)
!4852 = !DILocalVariable(name: "fw", scope: !4853, file: !3, line: 6809, type: !4694)
!4853 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 6808, column: 29)
!4854 = !DILocation(line: 6809, column: 26, scope: !4853)
!4855 = !DILocation(line: 6811, column: 34, scope: !4853)
!4856 = !DILocation(line: 6811, column: 41, scope: !4853)
!4857 = !DILocation(line: 6812, column: 8, scope: !4853)
!4858 = !DILocation(line: 6812, column: 15, scope: !4853)
!4859 = !DILocation(line: 6812, column: 20, scope: !4853)
!4860 = !DILocation(line: 6812, column: 24, scope: !4853)
!4861 = !DILocation(line: 6811, column: 12, scope: !4853)
!4862 = !DILocation(line: 6811, column: 10, scope: !4853)
!4863 = !DILocation(line: 6813, column: 7, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4853, file: !3, line: 6813, column: 7)
!4865 = !DILocation(line: 6813, column: 14, scope: !4864)
!4866 = !DILocation(line: 6813, column: 7, scope: !4853)
!4867 = !DILocation(line: 6814, column: 7, scope: !4864)
!4868 = !DILocation(line: 6814, column: 4, scope: !4864)
!4869 = !DILocation(line: 6815, column: 20, scope: !4853)
!4870 = !DILocation(line: 6815, column: 24, scope: !4853)
!4871 = !DILocation(line: 6815, column: 3, scope: !4853)
!4872 = !DILocation(line: 6816, column: 2, scope: !4853)
!4873 = !DILocation(line: 6816, column: 23, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 6816, column: 13)
!4875 = !DILocation(line: 6816, column: 13, scope: !4874)
!4876 = !DILocation(line: 6816, column: 30, scope: !4874)
!4877 = !DILocation(line: 6816, column: 13, scope: !4849)
!4878 = !DILocation(line: 6817, column: 3, scope: !4874)
!4879 = !DILocation(line: 6821, column: 7, scope: !492)
!4880 = !DILocation(line: 6821, column: 14, scope: !492)
!4881 = !DILocation(line: 6821, column: 23, scope: !492)
!4882 = !DILocation(line: 6821, column: 4, scope: !492)
!4883 = !DILocation(line: 6822, column: 2, scope: !492)
!4884 = !DILocation(line: 6822, column: 5, scope: !492)
!4885 = !DILocation(line: 6822, column: 14, scope: !492)
!4886 = !DILocation(line: 6822, column: 18, scope: !492)
!4887 = !DILocation(line: 6823, column: 2, scope: !492)
!4888 = !DILocation(line: 6823, column: 5, scope: !492)
!4889 = !DILocation(line: 6823, column: 9, scope: !492)
!4890 = !DILocation(line: 6823, column: 13, scope: !492)
!4891 = !DILocation(line: 6824, column: 2, scope: !492)
!4892 = !DILocation(line: 6824, column: 5, scope: !492)
!4893 = !DILocation(line: 6824, column: 17, scope: !492)
!4894 = !DILocation(line: 6824, column: 21, scope: !492)
!4895 = !DILocation(line: 6825, column: 2, scope: !492)
!4896 = !DILocation(line: 6825, column: 5, scope: !492)
!4897 = !DILocation(line: 6825, column: 17, scope: !492)
!4898 = !DILocation(line: 6825, column: 21, scope: !492)
!4899 = !DILocation(line: 6826, column: 2, scope: !492)
!4900 = !DILocation(line: 6826, column: 5, scope: !492)
!4901 = !DILocation(line: 6826, column: 19, scope: !492)
!4902 = !DILocation(line: 6826, column: 23, scope: !492)
!4903 = !DILocation(line: 6827, column: 2, scope: !492)
!4904 = !DILocation(line: 6827, column: 5, scope: !492)
!4905 = !DILocation(line: 6827, column: 19, scope: !492)
!4906 = !DILocation(line: 6827, column: 23, scope: !492)
!4907 = !DILocation(line: 6828, column: 2, scope: !492)
!4908 = !DILocation(line: 6828, column: 5, scope: !492)
!4909 = !DILocation(line: 6828, column: 20, scope: !492)
!4910 = !DILocation(line: 6828, column: 24, scope: !492)
!4911 = !DILocation(line: 6829, column: 2, scope: !492)
!4912 = !DILocation(line: 6829, column: 5, scope: !492)
!4913 = !DILocation(line: 6829, column: 20, scope: !492)
!4914 = !DILocation(line: 6829, column: 24, scope: !492)
!4915 = !DILocation(line: 6831, column: 2, scope: !492)
!4916 = !DILocation(line: 6831, column: 5, scope: !492)
!4917 = !DILocation(line: 6831, column: 14, scope: !492)
!4918 = !DILocation(line: 6831, column: 22, scope: !492)
!4919 = !DILocation(line: 6831, column: 28, scope: !492)
!4920 = !DILocation(line: 6832, column: 2, scope: !492)
!4921 = !DILocation(line: 6832, column: 5, scope: !492)
!4922 = !DILocation(line: 6832, column: 9, scope: !492)
!4923 = !DILocation(line: 6832, column: 17, scope: !492)
!4924 = !DILocation(line: 6832, column: 23, scope: !492)
!4925 = !DILocation(line: 6833, column: 2, scope: !492)
!4926 = !DILocation(line: 6833, column: 5, scope: !492)
!4927 = !DILocation(line: 6833, column: 17, scope: !492)
!4928 = !DILocation(line: 6833, column: 25, scope: !492)
!4929 = !DILocation(line: 6833, column: 31, scope: !492)
!4930 = !DILocation(line: 6834, column: 2, scope: !492)
!4931 = !DILocation(line: 6834, column: 5, scope: !492)
!4932 = !DILocation(line: 6834, column: 17, scope: !492)
!4933 = !DILocation(line: 6834, column: 25, scope: !492)
!4934 = !DILocation(line: 6834, column: 31, scope: !492)
!4935 = !DILocation(line: 6835, column: 2, scope: !492)
!4936 = !DILocation(line: 6835, column: 5, scope: !492)
!4937 = !DILocation(line: 6835, column: 19, scope: !492)
!4938 = !DILocation(line: 6835, column: 27, scope: !492)
!4939 = !DILocation(line: 6835, column: 33, scope: !492)
!4940 = !DILocation(line: 6836, column: 2, scope: !492)
!4941 = !DILocation(line: 6836, column: 5, scope: !492)
!4942 = !DILocation(line: 6836, column: 19, scope: !492)
!4943 = !DILocation(line: 6836, column: 27, scope: !492)
!4944 = !DILocation(line: 6836, column: 33, scope: !492)
!4945 = !DILocation(line: 6837, column: 2, scope: !492)
!4946 = !DILocation(line: 6837, column: 5, scope: !492)
!4947 = !DILocation(line: 6837, column: 20, scope: !492)
!4948 = !DILocation(line: 6837, column: 28, scope: !492)
!4949 = !DILocation(line: 6837, column: 34, scope: !492)
!4950 = !DILocation(line: 6838, column: 2, scope: !492)
!4951 = !DILocation(line: 6838, column: 5, scope: !492)
!4952 = !DILocation(line: 6838, column: 20, scope: !492)
!4953 = !DILocation(line: 6838, column: 28, scope: !492)
!4954 = !DILocation(line: 6838, column: 34, scope: !492)
!4955 = !DILocation(line: 6840, column: 2, scope: !492)
!4956 = !DILocation(line: 6841, column: 10, scope: !492)
!4957 = !DILocation(line: 6841, column: 17, scope: !492)
!4958 = !DILocation(line: 6841, column: 2, scope: !492)
!4959 = !DILabel(scope: !492, name: "error", file: !3, line: 6843)
!4960 = !DILocation(line: 6843, column: 1, scope: !492)
!4961 = !DILocation(line: 6844, column: 2, scope: !492)
!4962 = !DILocation(line: 6845, column: 8, scope: !492)
!4963 = !DILocation(line: 6845, column: 2, scope: !492)
!4964 = !DILocation(line: 6846, column: 2, scope: !492)
!4965 = !DILocation(line: 6847, column: 1, scope: !492)
!4966 = distinct !DISubprogram(name: "kzalloc", scope: !370, file: !370, line: 662, type: !4967, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!4967 = !DISubroutineType(types: !4968)
!4968 = !{!398, !919, !396}
!4969 = !DILocalVariable(name: "s", arg: 1, scope: !4970, file: !370, line: 445, type: !1511)
!4970 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !370, file: !370, line: 445, type: !4971, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!4971 = !DISubroutineType(types: !4972)
!4972 = !{!398, !1511, !396, !919}
!4973 = !DILocation(line: 445, column: 72, scope: !4970, inlinedAt: !4974)
!4974 = distinct !DILocation(line: 552, column: 10, scope: !4975, inlinedAt: !4978)
!4975 = distinct !DILexicalBlock(scope: !4976, file: !370, line: 540, column: 34)
!4976 = distinct !DILexicalBlock(scope: !4977, file: !370, line: 540, column: 6)
!4977 = distinct !DISubprogram(name: "kmalloc", scope: !370, file: !370, line: 538, type: !4967, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!4978 = distinct !DILocation(line: 664, column: 9, scope: !4966)
!4979 = !DILocalVariable(name: "flags", arg: 2, scope: !4970, file: !370, line: 446, type: !396)
!4980 = !DILocation(line: 446, column: 9, scope: !4970, inlinedAt: !4974)
!4981 = !DILocalVariable(name: "size", arg: 3, scope: !4970, file: !370, line: 446, type: !919)
!4982 = !DILocation(line: 446, column: 23, scope: !4970, inlinedAt: !4974)
!4983 = !DILocalVariable(name: "ret", scope: !4970, file: !370, line: 448, type: !398)
!4984 = !DILocation(line: 448, column: 8, scope: !4970, inlinedAt: !4974)
!4985 = !DILocalVariable(name: "flags", arg: 1, scope: !4986, file: !370, line: 318, type: !396)
!4986 = distinct !DISubprogram(name: "kmalloc_type", scope: !370, file: !370, line: 318, type: !4987, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{!369, !396}
!4989 = !DILocation(line: 318, column: 67, scope: !4986, inlinedAt: !4990)
!4990 = distinct !DILocation(line: 553, column: 20, scope: !4975, inlinedAt: !4978)
!4991 = !DILocalVariable(name: "size", arg: 1, scope: !4992, file: !370, line: 346, type: !919)
!4992 = distinct !DISubprogram(name: "kmalloc_index", scope: !370, file: !370, line: 346, type: !4993, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!4993 = !DISubroutineType(types: !4994)
!4994 = !{!7, !919}
!4995 = !DILocation(line: 346, column: 58, scope: !4992, inlinedAt: !4996)
!4996 = distinct !DILocation(line: 547, column: 11, scope: !4975, inlinedAt: !4978)
!4997 = !DILocalVariable(name: "size", arg: 1, scope: !4998, file: !370, line: 472, type: !919)
!4998 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !370, file: !370, line: 472, type: !4999, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!4999 = !DISubroutineType(types: !5000)
!5000 = !{!398, !919, !396, !7}
!5001 = !DILocation(line: 472, column: 28, scope: !4998, inlinedAt: !5002)
!5002 = distinct !DILocation(line: 481, column: 9, scope: !5003, inlinedAt: !5004)
!5003 = distinct !DISubprogram(name: "kmalloc_large", scope: !370, file: !370, line: 478, type: !4967, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!5004 = distinct !DILocation(line: 545, column: 11, scope: !5005, inlinedAt: !4978)
!5005 = distinct !DILexicalBlock(scope: !4975, file: !370, line: 544, column: 7)
!5006 = !DILocalVariable(name: "flags", arg: 2, scope: !4998, file: !370, line: 472, type: !396)
!5007 = !DILocation(line: 472, column: 40, scope: !4998, inlinedAt: !5002)
!5008 = !DILocalVariable(name: "order", arg: 3, scope: !4998, file: !370, line: 472, type: !7)
!5009 = !DILocation(line: 472, column: 60, scope: !4998, inlinedAt: !5002)
!5010 = !DILocalVariable(name: "size", arg: 1, scope: !5003, file: !370, line: 478, type: !919)
!5011 = !DILocation(line: 478, column: 51, scope: !5003, inlinedAt: !5004)
!5012 = !DILocalVariable(name: "flags", arg: 2, scope: !5003, file: !370, line: 478, type: !396)
!5013 = !DILocation(line: 478, column: 63, scope: !5003, inlinedAt: !5004)
!5014 = !DILocalVariable(name: "order", scope: !5003, file: !370, line: 480, type: !7)
!5015 = !DILocation(line: 480, column: 15, scope: !5003, inlinedAt: !5004)
!5016 = !DILocalVariable(name: "size", arg: 1, scope: !4977, file: !370, line: 538, type: !919)
!5017 = !DILocation(line: 538, column: 45, scope: !4977, inlinedAt: !4978)
!5018 = !DILocalVariable(name: "flags", arg: 2, scope: !4977, file: !370, line: 538, type: !396)
!5019 = !DILocation(line: 538, column: 57, scope: !4977, inlinedAt: !4978)
!5020 = !DILocalVariable(name: "index", scope: !4975, file: !370, line: 542, type: !7)
!5021 = !DILocation(line: 542, column: 16, scope: !4975, inlinedAt: !4978)
!5022 = !DILocalVariable(name: "size", arg: 1, scope: !4966, file: !370, line: 662, type: !919)
!5023 = !DILocation(line: 662, column: 36, scope: !4966)
!5024 = !DILocalVariable(name: "flags", arg: 2, scope: !4966, file: !370, line: 662, type: !396)
!5025 = !DILocation(line: 662, column: 48, scope: !4966)
!5026 = !DILocation(line: 664, column: 17, scope: !4966)
!5027 = !DILocation(line: 664, column: 23, scope: !4966)
!5028 = !DILocation(line: 664, column: 29, scope: !4966)
!5029 = !DILocation(line: 540, column: 27, scope: !4976, inlinedAt: !4978)
!5030 = !DILocation(line: 540, column: 6, scope: !4976, inlinedAt: !4978)
!5031 = !DILocation(line: 540, column: 6, scope: !4977, inlinedAt: !4978)
!5032 = !DILocation(line: 544, column: 7, scope: !5005, inlinedAt: !4978)
!5033 = !DILocation(line: 544, column: 12, scope: !5005, inlinedAt: !4978)
!5034 = !DILocation(line: 544, column: 7, scope: !4975, inlinedAt: !4978)
!5035 = !DILocation(line: 545, column: 25, scope: !5005, inlinedAt: !4978)
!5036 = !DILocation(line: 545, column: 31, scope: !5005, inlinedAt: !4978)
!5037 = !DILocation(line: 480, column: 33, scope: !5003, inlinedAt: !5004)
!5038 = !DILocation(line: 480, column: 23, scope: !5003, inlinedAt: !5004)
!5039 = !DILocation(line: 481, column: 29, scope: !5003, inlinedAt: !5004)
!5040 = !DILocation(line: 481, column: 35, scope: !5003, inlinedAt: !5004)
!5041 = !DILocation(line: 481, column: 42, scope: !5003, inlinedAt: !5004)
!5042 = !DILocation(line: 474, column: 23, scope: !4998, inlinedAt: !5002)
!5043 = !DILocation(line: 474, column: 29, scope: !4998, inlinedAt: !5002)
!5044 = !DILocation(line: 474, column: 36, scope: !4998, inlinedAt: !5002)
!5045 = !DILocation(line: 474, column: 9, scope: !4998, inlinedAt: !5002)
!5046 = !DILocation(line: 545, column: 4, scope: !5005, inlinedAt: !4978)
!5047 = !DILocation(line: 547, column: 25, scope: !4975, inlinedAt: !4978)
!5048 = !DILocation(line: 348, column: 7, scope: !5049, inlinedAt: !4996)
!5049 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 348, column: 6)
!5050 = !DILocation(line: 348, column: 6, scope: !4992, inlinedAt: !4996)
!5051 = !DILocation(line: 349, column: 3, scope: !5049, inlinedAt: !4996)
!5052 = !DILocation(line: 351, column: 6, scope: !5053, inlinedAt: !4996)
!5053 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 351, column: 6)
!5054 = !DILocation(line: 351, column: 11, scope: !5053, inlinedAt: !4996)
!5055 = !DILocation(line: 351, column: 6, scope: !4992, inlinedAt: !4996)
!5056 = !DILocation(line: 352, column: 3, scope: !5053, inlinedAt: !4996)
!5057 = !DILocation(line: 354, column: 32, scope: !5058, inlinedAt: !4996)
!5058 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 354, column: 6)
!5059 = !DILocation(line: 354, column: 37, scope: !5058, inlinedAt: !4996)
!5060 = !DILocation(line: 354, column: 42, scope: !5058, inlinedAt: !4996)
!5061 = !DILocation(line: 354, column: 45, scope: !5058, inlinedAt: !4996)
!5062 = !DILocation(line: 354, column: 50, scope: !5058, inlinedAt: !4996)
!5063 = !DILocation(line: 354, column: 6, scope: !4992, inlinedAt: !4996)
!5064 = !DILocation(line: 355, column: 3, scope: !5058, inlinedAt: !4996)
!5065 = !DILocation(line: 356, column: 32, scope: !5066, inlinedAt: !4996)
!5066 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 356, column: 6)
!5067 = !DILocation(line: 356, column: 37, scope: !5066, inlinedAt: !4996)
!5068 = !DILocation(line: 356, column: 43, scope: !5066, inlinedAt: !4996)
!5069 = !DILocation(line: 356, column: 46, scope: !5066, inlinedAt: !4996)
!5070 = !DILocation(line: 356, column: 51, scope: !5066, inlinedAt: !4996)
!5071 = !DILocation(line: 356, column: 6, scope: !4992, inlinedAt: !4996)
!5072 = !DILocation(line: 357, column: 3, scope: !5066, inlinedAt: !4996)
!5073 = !DILocation(line: 358, column: 6, scope: !5074, inlinedAt: !4996)
!5074 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 358, column: 6)
!5075 = !DILocation(line: 358, column: 11, scope: !5074, inlinedAt: !4996)
!5076 = !DILocation(line: 358, column: 6, scope: !4992, inlinedAt: !4996)
!5077 = !DILocation(line: 358, column: 26, scope: !5074, inlinedAt: !4996)
!5078 = !DILocation(line: 359, column: 6, scope: !5079, inlinedAt: !4996)
!5079 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 359, column: 6)
!5080 = !DILocation(line: 359, column: 11, scope: !5079, inlinedAt: !4996)
!5081 = !DILocation(line: 359, column: 6, scope: !4992, inlinedAt: !4996)
!5082 = !DILocation(line: 359, column: 26, scope: !5079, inlinedAt: !4996)
!5083 = !DILocation(line: 360, column: 6, scope: !5084, inlinedAt: !4996)
!5084 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 360, column: 6)
!5085 = !DILocation(line: 360, column: 11, scope: !5084, inlinedAt: !4996)
!5086 = !DILocation(line: 360, column: 6, scope: !4992, inlinedAt: !4996)
!5087 = !DILocation(line: 360, column: 26, scope: !5084, inlinedAt: !4996)
!5088 = !DILocation(line: 361, column: 6, scope: !5089, inlinedAt: !4996)
!5089 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 361, column: 6)
!5090 = !DILocation(line: 361, column: 11, scope: !5089, inlinedAt: !4996)
!5091 = !DILocation(line: 361, column: 6, scope: !4992, inlinedAt: !4996)
!5092 = !DILocation(line: 361, column: 26, scope: !5089, inlinedAt: !4996)
!5093 = !DILocation(line: 362, column: 6, scope: !5094, inlinedAt: !4996)
!5094 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 362, column: 6)
!5095 = !DILocation(line: 362, column: 11, scope: !5094, inlinedAt: !4996)
!5096 = !DILocation(line: 362, column: 6, scope: !4992, inlinedAt: !4996)
!5097 = !DILocation(line: 362, column: 26, scope: !5094, inlinedAt: !4996)
!5098 = !DILocation(line: 363, column: 6, scope: !5099, inlinedAt: !4996)
!5099 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 363, column: 6)
!5100 = !DILocation(line: 363, column: 11, scope: !5099, inlinedAt: !4996)
!5101 = !DILocation(line: 363, column: 6, scope: !4992, inlinedAt: !4996)
!5102 = !DILocation(line: 363, column: 26, scope: !5099, inlinedAt: !4996)
!5103 = !DILocation(line: 364, column: 6, scope: !5104, inlinedAt: !4996)
!5104 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 364, column: 6)
!5105 = !DILocation(line: 364, column: 11, scope: !5104, inlinedAt: !4996)
!5106 = !DILocation(line: 364, column: 6, scope: !4992, inlinedAt: !4996)
!5107 = !DILocation(line: 364, column: 26, scope: !5104, inlinedAt: !4996)
!5108 = !DILocation(line: 365, column: 6, scope: !5109, inlinedAt: !4996)
!5109 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 365, column: 6)
!5110 = !DILocation(line: 365, column: 11, scope: !5109, inlinedAt: !4996)
!5111 = !DILocation(line: 365, column: 6, scope: !4992, inlinedAt: !4996)
!5112 = !DILocation(line: 365, column: 26, scope: !5109, inlinedAt: !4996)
!5113 = !DILocation(line: 366, column: 6, scope: !5114, inlinedAt: !4996)
!5114 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 366, column: 6)
!5115 = !DILocation(line: 366, column: 11, scope: !5114, inlinedAt: !4996)
!5116 = !DILocation(line: 366, column: 6, scope: !4992, inlinedAt: !4996)
!5117 = !DILocation(line: 366, column: 26, scope: !5114, inlinedAt: !4996)
!5118 = !DILocation(line: 367, column: 6, scope: !5119, inlinedAt: !4996)
!5119 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 367, column: 6)
!5120 = !DILocation(line: 367, column: 11, scope: !5119, inlinedAt: !4996)
!5121 = !DILocation(line: 367, column: 6, scope: !4992, inlinedAt: !4996)
!5122 = !DILocation(line: 367, column: 26, scope: !5119, inlinedAt: !4996)
!5123 = !DILocation(line: 368, column: 6, scope: !5124, inlinedAt: !4996)
!5124 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 368, column: 6)
!5125 = !DILocation(line: 368, column: 11, scope: !5124, inlinedAt: !4996)
!5126 = !DILocation(line: 368, column: 6, scope: !4992, inlinedAt: !4996)
!5127 = !DILocation(line: 368, column: 26, scope: !5124, inlinedAt: !4996)
!5128 = !DILocation(line: 369, column: 6, scope: !5129, inlinedAt: !4996)
!5129 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 369, column: 6)
!5130 = !DILocation(line: 369, column: 11, scope: !5129, inlinedAt: !4996)
!5131 = !DILocation(line: 369, column: 6, scope: !4992, inlinedAt: !4996)
!5132 = !DILocation(line: 369, column: 26, scope: !5129, inlinedAt: !4996)
!5133 = !DILocation(line: 370, column: 6, scope: !5134, inlinedAt: !4996)
!5134 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 370, column: 6)
!5135 = !DILocation(line: 370, column: 11, scope: !5134, inlinedAt: !4996)
!5136 = !DILocation(line: 370, column: 6, scope: !4992, inlinedAt: !4996)
!5137 = !DILocation(line: 370, column: 26, scope: !5134, inlinedAt: !4996)
!5138 = !DILocation(line: 371, column: 6, scope: !5139, inlinedAt: !4996)
!5139 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 371, column: 6)
!5140 = !DILocation(line: 371, column: 11, scope: !5139, inlinedAt: !4996)
!5141 = !DILocation(line: 371, column: 6, scope: !4992, inlinedAt: !4996)
!5142 = !DILocation(line: 371, column: 26, scope: !5139, inlinedAt: !4996)
!5143 = !DILocation(line: 372, column: 6, scope: !5144, inlinedAt: !4996)
!5144 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 372, column: 6)
!5145 = !DILocation(line: 372, column: 11, scope: !5144, inlinedAt: !4996)
!5146 = !DILocation(line: 372, column: 6, scope: !4992, inlinedAt: !4996)
!5147 = !DILocation(line: 372, column: 26, scope: !5144, inlinedAt: !4996)
!5148 = !DILocation(line: 373, column: 6, scope: !5149, inlinedAt: !4996)
!5149 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 373, column: 6)
!5150 = !DILocation(line: 373, column: 11, scope: !5149, inlinedAt: !4996)
!5151 = !DILocation(line: 373, column: 6, scope: !4992, inlinedAt: !4996)
!5152 = !DILocation(line: 373, column: 26, scope: !5149, inlinedAt: !4996)
!5153 = !DILocation(line: 374, column: 6, scope: !5154, inlinedAt: !4996)
!5154 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 374, column: 6)
!5155 = !DILocation(line: 374, column: 11, scope: !5154, inlinedAt: !4996)
!5156 = !DILocation(line: 374, column: 6, scope: !4992, inlinedAt: !4996)
!5157 = !DILocation(line: 374, column: 26, scope: !5154, inlinedAt: !4996)
!5158 = !DILocation(line: 375, column: 6, scope: !5159, inlinedAt: !4996)
!5159 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 375, column: 6)
!5160 = !DILocation(line: 375, column: 11, scope: !5159, inlinedAt: !4996)
!5161 = !DILocation(line: 375, column: 6, scope: !4992, inlinedAt: !4996)
!5162 = !DILocation(line: 375, column: 27, scope: !5159, inlinedAt: !4996)
!5163 = !DILocation(line: 376, column: 6, scope: !5164, inlinedAt: !4996)
!5164 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 376, column: 6)
!5165 = !DILocation(line: 376, column: 11, scope: !5164, inlinedAt: !4996)
!5166 = !DILocation(line: 376, column: 6, scope: !4992, inlinedAt: !4996)
!5167 = !DILocation(line: 376, column: 32, scope: !5164, inlinedAt: !4996)
!5168 = !DILocation(line: 377, column: 6, scope: !5169, inlinedAt: !4996)
!5169 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 377, column: 6)
!5170 = !DILocation(line: 377, column: 11, scope: !5169, inlinedAt: !4996)
!5171 = !DILocation(line: 377, column: 6, scope: !4992, inlinedAt: !4996)
!5172 = !DILocation(line: 377, column: 32, scope: !5169, inlinedAt: !4996)
!5173 = !DILocation(line: 378, column: 6, scope: !5174, inlinedAt: !4996)
!5174 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 378, column: 6)
!5175 = !DILocation(line: 378, column: 11, scope: !5174, inlinedAt: !4996)
!5176 = !DILocation(line: 378, column: 6, scope: !4992, inlinedAt: !4996)
!5177 = !DILocation(line: 378, column: 32, scope: !5174, inlinedAt: !4996)
!5178 = !DILocation(line: 379, column: 6, scope: !5179, inlinedAt: !4996)
!5179 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 379, column: 6)
!5180 = !DILocation(line: 379, column: 11, scope: !5179, inlinedAt: !4996)
!5181 = !DILocation(line: 379, column: 6, scope: !4992, inlinedAt: !4996)
!5182 = !DILocation(line: 379, column: 33, scope: !5179, inlinedAt: !4996)
!5183 = !DILocation(line: 380, column: 6, scope: !5184, inlinedAt: !4996)
!5184 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 380, column: 6)
!5185 = !DILocation(line: 380, column: 11, scope: !5184, inlinedAt: !4996)
!5186 = !DILocation(line: 380, column: 6, scope: !4992, inlinedAt: !4996)
!5187 = !DILocation(line: 380, column: 33, scope: !5184, inlinedAt: !4996)
!5188 = !DILocation(line: 381, column: 6, scope: !5189, inlinedAt: !4996)
!5189 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 381, column: 6)
!5190 = !DILocation(line: 381, column: 11, scope: !5189, inlinedAt: !4996)
!5191 = !DILocation(line: 381, column: 6, scope: !4992, inlinedAt: !4996)
!5192 = !DILocation(line: 381, column: 33, scope: !5189, inlinedAt: !4996)
!5193 = !DILocation(line: 382, column: 2, scope: !5194, inlinedAt: !4996)
!5194 = distinct !DILexicalBlock(scope: !5195, file: !370, line: 382, column: 2)
!5195 = distinct !DILexicalBlock(scope: !4992, file: !370, line: 382, column: 2)
!5196 = !{i32 -2143830953, i32 -2143830924, i32 -2143830878, i32 -2143830820, i32 -2143830766, i32 -2143830712, i32 -2143830657, i32 -2143830626}
!5197 = !DILocation(line: 382, column: 2, scope: !5198, inlinedAt: !4996)
!5198 = distinct !DILexicalBlock(scope: !5199, file: !370, line: 382, column: 2)
!5199 = distinct !DILexicalBlock(scope: !5195, file: !370, line: 382, column: 2)
!5200 = !{i32 -2143830183, i32 -2143830176, i32 -2143830122, i32 -2143830091, i32 -2143830061}
!5201 = !DILocation(line: 382, column: 2, scope: !5199, inlinedAt: !4996)
!5202 = !DILocation(line: 386, column: 1, scope: !4992, inlinedAt: !4996)
!5203 = !DILocation(line: 547, column: 9, scope: !4975, inlinedAt: !4978)
!5204 = !DILocation(line: 549, column: 8, scope: !5205, inlinedAt: !4978)
!5205 = distinct !DILexicalBlock(scope: !4975, file: !370, line: 549, column: 7)
!5206 = !DILocation(line: 549, column: 7, scope: !4975, inlinedAt: !4978)
!5207 = !DILocation(line: 550, column: 4, scope: !5205, inlinedAt: !4978)
!5208 = !DILocation(line: 553, column: 33, scope: !4975, inlinedAt: !4978)
!5209 = !DILocation(line: 325, column: 6, scope: !5210, inlinedAt: !4990)
!5210 = distinct !DILexicalBlock(scope: !4986, file: !370, line: 325, column: 6)
!5211 = !DILocation(line: 325, column: 6, scope: !4986, inlinedAt: !4990)
!5212 = !DILocation(line: 326, column: 3, scope: !5210, inlinedAt: !4990)
!5213 = !DILocation(line: 332, column: 9, scope: !4986, inlinedAt: !4990)
!5214 = !DILocation(line: 332, column: 15, scope: !4986, inlinedAt: !4990)
!5215 = !DILocation(line: 332, column: 2, scope: !4986, inlinedAt: !4990)
!5216 = !DILocation(line: 336, column: 1, scope: !4986, inlinedAt: !4990)
!5217 = !DILocation(line: 553, column: 5, scope: !4975, inlinedAt: !4978)
!5218 = !DILocation(line: 553, column: 41, scope: !4975, inlinedAt: !4978)
!5219 = !DILocation(line: 554, column: 5, scope: !4975, inlinedAt: !4978)
!5220 = !DILocation(line: 554, column: 12, scope: !4975, inlinedAt: !4978)
!5221 = !DILocation(line: 448, column: 31, scope: !4970, inlinedAt: !4974)
!5222 = !DILocation(line: 448, column: 34, scope: !4970, inlinedAt: !4974)
!5223 = !DILocation(line: 448, column: 14, scope: !4970, inlinedAt: !4974)
!5224 = !DILocation(line: 450, column: 22, scope: !4970, inlinedAt: !4974)
!5225 = !DILocation(line: 450, column: 25, scope: !4970, inlinedAt: !4974)
!5226 = !DILocation(line: 450, column: 30, scope: !4970, inlinedAt: !4974)
!5227 = !DILocation(line: 450, column: 36, scope: !4970, inlinedAt: !4974)
!5228 = !DILocation(line: 450, column: 8, scope: !4970, inlinedAt: !4974)
!5229 = !DILocation(line: 450, column: 6, scope: !4970, inlinedAt: !4974)
!5230 = !DILocation(line: 451, column: 9, scope: !4970, inlinedAt: !4974)
!5231 = !DILocation(line: 552, column: 3, scope: !4975, inlinedAt: !4978)
!5232 = !DILocation(line: 557, column: 19, scope: !4977, inlinedAt: !4978)
!5233 = !DILocation(line: 557, column: 25, scope: !4977, inlinedAt: !4978)
!5234 = !DILocation(line: 557, column: 9, scope: !4977, inlinedAt: !4978)
!5235 = !DILocation(line: 557, column: 2, scope: !4977, inlinedAt: !4978)
!5236 = !DILocation(line: 558, column: 1, scope: !4977, inlinedAt: !4978)
!5237 = !DILocation(line: 664, column: 2, scope: !4966)
!5238 = distinct !DISubprogram(name: "init_state", scope: !3, file: !3, line: 517, type: !5239, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!405, !4562}
!5241 = !DILocalVariable(name: "state", arg: 1, scope: !5238, file: !3, line: 517, type: !4562)
!5242 = !DILocation(line: 517, column: 42, scope: !5238)
!5243 = !DILocalVariable(name: "ul_vsb_if_agc_mode", scope: !5238, file: !3, line: 523, type: !411)
!5244 = !DILocation(line: 523, column: 6, scope: !5238)
!5245 = !DILocalVariable(name: "ul_vsb_if_agc_output_level", scope: !5238, file: !3, line: 524, type: !411)
!5246 = !DILocation(line: 524, column: 6, scope: !5238)
!5247 = !DILocalVariable(name: "ul_vsb_if_agc_min_level", scope: !5238, file: !3, line: 525, type: !411)
!5248 = !DILocation(line: 525, column: 6, scope: !5238)
!5249 = !DILocalVariable(name: "ul_vsb_if_agc_max_level", scope: !5238, file: !3, line: 526, type: !411)
!5250 = !DILocation(line: 526, column: 6, scope: !5238)
!5251 = !DILocalVariable(name: "ul_vsb_if_agc_speed", scope: !5238, file: !3, line: 527, type: !411)
!5252 = !DILocation(line: 527, column: 6, scope: !5238)
!5253 = !DILocalVariable(name: "ul_vsb_rf_agc_mode", scope: !5238, file: !3, line: 529, type: !411)
!5254 = !DILocation(line: 529, column: 6, scope: !5238)
!5255 = !DILocalVariable(name: "ul_vsb_rf_agc_output_level", scope: !5238, file: !3, line: 530, type: !411)
!5256 = !DILocation(line: 530, column: 6, scope: !5238)
!5257 = !DILocalVariable(name: "ul_vsb_rf_agc_min_level", scope: !5238, file: !3, line: 531, type: !411)
!5258 = !DILocation(line: 531, column: 6, scope: !5238)
!5259 = !DILocalVariable(name: "ul_vsb_rf_agc_max_level", scope: !5238, file: !3, line: 532, type: !411)
!5260 = !DILocation(line: 532, column: 6, scope: !5238)
!5261 = !DILocalVariable(name: "ul_vsb_rf_agc_speed", scope: !5238, file: !3, line: 533, type: !411)
!5262 = !DILocation(line: 533, column: 6, scope: !5238)
!5263 = !DILocalVariable(name: "ul_vsb_rf_agc_top", scope: !5238, file: !3, line: 534, type: !411)
!5264 = !DILocation(line: 534, column: 6, scope: !5238)
!5265 = !DILocalVariable(name: "ul_vsb_rf_agc_cut_off_current", scope: !5238, file: !3, line: 535, type: !411)
!5266 = !DILocation(line: 535, column: 6, scope: !5238)
!5267 = !DILocalVariable(name: "ul_atv_if_agc_mode", scope: !5238, file: !3, line: 537, type: !411)
!5268 = !DILocation(line: 537, column: 6, scope: !5238)
!5269 = !DILocalVariable(name: "ul_atv_if_agc_output_level", scope: !5238, file: !3, line: 538, type: !411)
!5270 = !DILocation(line: 538, column: 6, scope: !5238)
!5271 = !DILocalVariable(name: "ul_atv_if_agc_min_level", scope: !5238, file: !3, line: 539, type: !411)
!5272 = !DILocation(line: 539, column: 6, scope: !5238)
!5273 = !DILocalVariable(name: "ul_atv_if_agc_max_level", scope: !5238, file: !3, line: 540, type: !411)
!5274 = !DILocation(line: 540, column: 6, scope: !5238)
!5275 = !DILocalVariable(name: "ul_atv_if_agc_speed", scope: !5238, file: !3, line: 541, type: !411)
!5276 = !DILocation(line: 541, column: 6, scope: !5238)
!5277 = !DILocalVariable(name: "ul_atv_rf_agc_mode", scope: !5238, file: !3, line: 543, type: !411)
!5278 = !DILocation(line: 543, column: 6, scope: !5238)
!5279 = !DILocalVariable(name: "ul_atv_rf_agc_output_level", scope: !5238, file: !3, line: 544, type: !411)
!5280 = !DILocation(line: 544, column: 6, scope: !5238)
!5281 = !DILocalVariable(name: "ul_atv_rf_agc_min_level", scope: !5238, file: !3, line: 545, type: !411)
!5282 = !DILocation(line: 545, column: 6, scope: !5238)
!5283 = !DILocalVariable(name: "ul_atv_rf_agc_max_level", scope: !5238, file: !3, line: 546, type: !411)
!5284 = !DILocation(line: 546, column: 6, scope: !5238)
!5285 = !DILocalVariable(name: "ul_atv_rf_agc_top", scope: !5238, file: !3, line: 547, type: !411)
!5286 = !DILocation(line: 547, column: 6, scope: !5238)
!5287 = !DILocalVariable(name: "ul_atv_rf_agc_cut_off_current", scope: !5238, file: !3, line: 548, type: !411)
!5288 = !DILocation(line: 548, column: 6, scope: !5238)
!5289 = !DILocalVariable(name: "ul_atv_rf_agc_speed", scope: !5238, file: !3, line: 549, type: !411)
!5290 = !DILocation(line: 549, column: 6, scope: !5238)
!5291 = !DILocalVariable(name: "ulQual83", scope: !5238, file: !3, line: 551, type: !411)
!5292 = !DILocation(line: 551, column: 6, scope: !5238)
!5293 = !DILocalVariable(name: "ulQual93", scope: !5238, file: !3, line: 552, type: !411)
!5294 = !DILocation(line: 552, column: 6, scope: !5238)
!5295 = !DILocalVariable(name: "ul_mpeg_lock_time_out", scope: !5238, file: !3, line: 554, type: !411)
!5296 = !DILocation(line: 554, column: 6, scope: !5238)
!5297 = !DILocalVariable(name: "ul_demod_lock_time_out", scope: !5238, file: !3, line: 555, type: !411)
!5298 = !DILocation(line: 555, column: 6, scope: !5238)
!5299 = !DILocalVariable(name: "ul_gpio_cfg", scope: !5238, file: !3, line: 560, type: !411)
!5300 = !DILocation(line: 560, column: 6, scope: !5238)
!5301 = !DILocalVariable(name: "ul_invert_ts_clock", scope: !5238, file: !3, line: 561, type: !411)
!5302 = !DILocation(line: 561, column: 6, scope: !5238)
!5303 = !DILocalVariable(name: "ul_ts_data_strength", scope: !5238, file: !3, line: 562, type: !411)
!5304 = !DILocation(line: 562, column: 6, scope: !5238)
!5305 = !DILocalVariable(name: "ul_dvbt_bitrate", scope: !5238, file: !3, line: 563, type: !411)
!5306 = !DILocation(line: 563, column: 6, scope: !5238)
!5307 = !DILocalVariable(name: "ul_dvbc_bitrate", scope: !5238, file: !3, line: 564, type: !411)
!5308 = !DILocation(line: 564, column: 6, scope: !5238)
!5309 = !DILocalVariable(name: "ul_insert_rs_byte", scope: !5238, file: !3, line: 566, type: !411)
!5310 = !DILocation(line: 566, column: 6, scope: !5238)
!5311 = !DILocalVariable(name: "ul_rf_mirror", scope: !5238, file: !3, line: 568, type: !411)
!5312 = !DILocation(line: 568, column: 6, scope: !5238)
!5313 = !DILocalVariable(name: "ul_power_down", scope: !5238, file: !3, line: 569, type: !411)
!5314 = !DILocation(line: 569, column: 6, scope: !5238)
!5315 = !DILocation(line: 571, column: 2, scope: !5238)
!5316 = !DILocation(line: 571, column: 2, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 571, column: 2)
!5318 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 571, column: 2)
!5319 = !DILocation(line: 571, column: 2, scope: !5318)
!5320 = !DILocation(line: 573, column: 2, scope: !5238)
!5321 = !DILocation(line: 573, column: 9, scope: !5238)
!5322 = !DILocation(line: 573, column: 19, scope: !5238)
!5323 = !DILocation(line: 574, column: 2, scope: !5238)
!5324 = !DILocation(line: 574, column: 9, scope: !5238)
!5325 = !DILocation(line: 574, column: 20, scope: !5238)
!5326 = !DILocation(line: 575, column: 2, scope: !5238)
!5327 = !DILocation(line: 575, column: 9, scope: !5238)
!5328 = !DILocation(line: 575, column: 20, scope: !5238)
!5329 = !DILocation(line: 576, column: 2, scope: !5238)
!5330 = !DILocation(line: 576, column: 9, scope: !5238)
!5331 = !DILocation(line: 576, column: 19, scope: !5238)
!5332 = !DILocation(line: 577, column: 2, scope: !5238)
!5333 = !DILocation(line: 577, column: 9, scope: !5238)
!5334 = !DILocation(line: 577, column: 19, scope: !5238)
!5335 = !DILocation(line: 578, column: 2, scope: !5238)
!5336 = !DILocation(line: 578, column: 9, scope: !5238)
!5337 = !DILocation(line: 578, column: 21, scope: !5238)
!5338 = !DILocation(line: 580, column: 7, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 580, column: 6)
!5340 = !DILocation(line: 580, column: 14, scope: !5339)
!5341 = !DILocation(line: 580, column: 6, scope: !5238)
!5342 = !DILocation(line: 581, column: 3, scope: !5339)
!5343 = !DILocation(line: 581, column: 10, scope: !5339)
!5344 = !DILocation(line: 581, column: 23, scope: !5339)
!5345 = !DILocation(line: 583, column: 2, scope: !5238)
!5346 = !DILocation(line: 583, column: 9, scope: !5238)
!5347 = !DILocation(line: 583, column: 26, scope: !5238)
!5348 = !DILocation(line: 584, column: 2, scope: !5238)
!5349 = !DILocation(line: 584, column: 9, scope: !5238)
!5350 = !DILocation(line: 584, column: 30, scope: !5238)
!5351 = !DILocation(line: 585, column: 2, scope: !5238)
!5352 = !DILocation(line: 585, column: 9, scope: !5238)
!5353 = !DILocation(line: 585, column: 32, scope: !5238)
!5354 = !DILocation(line: 588, column: 2, scope: !5238)
!5355 = !DILocation(line: 588, column: 9, scope: !5238)
!5356 = !DILocation(line: 588, column: 26, scope: !5238)
!5357 = !DILocation(line: 591, column: 33, scope: !5238)
!5358 = !DILocation(line: 591, column: 40, scope: !5238)
!5359 = !DILocation(line: 591, column: 57, scope: !5238)
!5360 = !DILocation(line: 591, column: 65, scope: !5238)
!5361 = !DILocation(line: 592, column: 22, scope: !5238)
!5362 = !DILocation(line: 591, column: 31, scope: !5238)
!5363 = !DILocation(line: 591, column: 2, scope: !5238)
!5364 = !DILocation(line: 591, column: 9, scope: !5238)
!5365 = !DILocation(line: 591, column: 29, scope: !5238)
!5366 = !DILocation(line: 594, column: 6, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 594, column: 6)
!5368 = !DILocation(line: 594, column: 13, scope: !5367)
!5369 = !DILocation(line: 594, column: 33, scope: !5367)
!5370 = !DILocation(line: 594, column: 6, scope: !5238)
!5371 = !DILocation(line: 595, column: 3, scope: !5367)
!5372 = !DILocation(line: 595, column: 10, scope: !5367)
!5373 = !DILocation(line: 595, column: 30, scope: !5367)
!5374 = !DILocation(line: 596, column: 33, scope: !5238)
!5375 = !DILocation(line: 596, column: 40, scope: !5238)
!5376 = !DILocation(line: 596, column: 54, scope: !5238)
!5377 = !DILocation(line: 596, column: 32, scope: !5238)
!5378 = !DILocation(line: 596, column: 2, scope: !5238)
!5379 = !DILocation(line: 596, column: 9, scope: !5238)
!5380 = !DILocation(line: 596, column: 30, scope: !5238)
!5381 = !DILocation(line: 598, column: 2, scope: !5238)
!5382 = !DILocation(line: 598, column: 9, scope: !5238)
!5383 = !DILocation(line: 598, column: 23, scope: !5238)
!5384 = !DILocation(line: 600, column: 27, scope: !5238)
!5385 = !DILocation(line: 600, column: 41, scope: !5238)
!5386 = !DILocation(line: 600, column: 2, scope: !5238)
!5387 = !DILocation(line: 600, column: 9, scope: !5238)
!5388 = !DILocation(line: 600, column: 24, scope: !5238)
!5389 = !DILocation(line: 602, column: 2, scope: !5238)
!5390 = !DILocation(line: 602, column: 9, scope: !5238)
!5391 = !DILocation(line: 602, column: 30, scope: !5238)
!5392 = !DILocation(line: 606, column: 38, scope: !5238)
!5393 = !DILocation(line: 606, column: 2, scope: !5238)
!5394 = !DILocation(line: 606, column: 9, scope: !5238)
!5395 = !DILocation(line: 606, column: 26, scope: !5238)
!5396 = !DILocation(line: 606, column: 36, scope: !5238)
!5397 = !DILocation(line: 607, column: 41, scope: !5238)
!5398 = !DILocation(line: 607, column: 2, scope: !5238)
!5399 = !DILocation(line: 607, column: 9, scope: !5238)
!5400 = !DILocation(line: 607, column: 26, scope: !5238)
!5401 = !DILocation(line: 607, column: 39, scope: !5238)
!5402 = !DILocation(line: 608, column: 45, scope: !5238)
!5403 = !DILocation(line: 608, column: 2, scope: !5238)
!5404 = !DILocation(line: 608, column: 9, scope: !5238)
!5405 = !DILocation(line: 608, column: 26, scope: !5238)
!5406 = !DILocation(line: 608, column: 43, scope: !5238)
!5407 = !DILocation(line: 609, column: 45, scope: !5238)
!5408 = !DILocation(line: 609, column: 2, scope: !5238)
!5409 = !DILocation(line: 609, column: 9, scope: !5238)
!5410 = !DILocation(line: 609, column: 26, scope: !5238)
!5411 = !DILocation(line: 609, column: 43, scope: !5238)
!5412 = !DILocation(line: 610, column: 34, scope: !5238)
!5413 = !DILocation(line: 610, column: 2, scope: !5238)
!5414 = !DILocation(line: 610, column: 9, scope: !5238)
!5415 = !DILocation(line: 610, column: 26, scope: !5238)
!5416 = !DILocation(line: 610, column: 32, scope: !5238)
!5417 = !DILocation(line: 611, column: 2, scope: !5238)
!5418 = !DILocation(line: 611, column: 9, scope: !5238)
!5419 = !DILocation(line: 611, column: 23, scope: !5238)
!5420 = !DILocation(line: 614, column: 38, scope: !5238)
!5421 = !DILocation(line: 614, column: 2, scope: !5238)
!5422 = !DILocation(line: 614, column: 9, scope: !5238)
!5423 = !DILocation(line: 614, column: 26, scope: !5238)
!5424 = !DILocation(line: 614, column: 36, scope: !5238)
!5425 = !DILocation(line: 615, column: 41, scope: !5238)
!5426 = !DILocation(line: 615, column: 2, scope: !5238)
!5427 = !DILocation(line: 615, column: 9, scope: !5238)
!5428 = !DILocation(line: 615, column: 26, scope: !5238)
!5429 = !DILocation(line: 615, column: 39, scope: !5238)
!5430 = !DILocation(line: 616, column: 45, scope: !5238)
!5431 = !DILocation(line: 616, column: 2, scope: !5238)
!5432 = !DILocation(line: 616, column: 9, scope: !5238)
!5433 = !DILocation(line: 616, column: 26, scope: !5238)
!5434 = !DILocation(line: 616, column: 43, scope: !5238)
!5435 = !DILocation(line: 617, column: 45, scope: !5238)
!5436 = !DILocation(line: 617, column: 2, scope: !5238)
!5437 = !DILocation(line: 617, column: 9, scope: !5238)
!5438 = !DILocation(line: 617, column: 26, scope: !5238)
!5439 = !DILocation(line: 617, column: 43, scope: !5238)
!5440 = !DILocation(line: 618, column: 34, scope: !5238)
!5441 = !DILocation(line: 618, column: 2, scope: !5238)
!5442 = !DILocation(line: 618, column: 9, scope: !5238)
!5443 = !DILocation(line: 618, column: 26, scope: !5238)
!5444 = !DILocation(line: 618, column: 32, scope: !5238)
!5445 = !DILocation(line: 619, column: 32, scope: !5238)
!5446 = !DILocation(line: 619, column: 2, scope: !5238)
!5447 = !DILocation(line: 619, column: 9, scope: !5238)
!5448 = !DILocation(line: 619, column: 26, scope: !5238)
!5449 = !DILocation(line: 619, column: 30, scope: !5238)
!5450 = !DILocation(line: 620, column: 44, scope: !5238)
!5451 = !DILocation(line: 620, column: 2, scope: !5238)
!5452 = !DILocation(line: 620, column: 9, scope: !5238)
!5453 = !DILocation(line: 620, column: 26, scope: !5238)
!5454 = !DILocation(line: 620, column: 42, scope: !5238)
!5455 = !DILocation(line: 621, column: 2, scope: !5238)
!5456 = !DILocation(line: 621, column: 9, scope: !5238)
!5457 = !DILocation(line: 621, column: 27, scope: !5238)
!5458 = !DILocation(line: 621, column: 37, scope: !5238)
!5459 = !DILocation(line: 622, column: 2, scope: !5238)
!5460 = !DILocation(line: 622, column: 9, scope: !5238)
!5461 = !DILocation(line: 622, column: 27, scope: !5238)
!5462 = !DILocation(line: 622, column: 39, scope: !5238)
!5463 = !DILocation(line: 624, column: 2, scope: !5238)
!5464 = !DILocation(line: 624, column: 9, scope: !5238)
!5465 = !DILocation(line: 624, column: 28, scope: !5238)
!5466 = !DILocation(line: 625, column: 2, scope: !5238)
!5467 = !DILocation(line: 625, column: 9, scope: !5238)
!5468 = !DILocation(line: 625, column: 28, scope: !5238)
!5469 = !DILocation(line: 626, column: 6, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 626, column: 6)
!5471 = !DILocation(line: 626, column: 15, scope: !5470)
!5472 = !DILocation(line: 626, column: 22, scope: !5470)
!5473 = !DILocation(line: 626, column: 25, scope: !5470)
!5474 = !DILocation(line: 626, column: 36, scope: !5470)
!5475 = !DILocation(line: 626, column: 34, scope: !5470)
!5476 = !DILocation(line: 626, column: 6, scope: !5238)
!5477 = !DILocation(line: 627, column: 31, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 626, column: 46)
!5479 = !DILocation(line: 627, column: 3, scope: !5478)
!5480 = !DILocation(line: 627, column: 10, scope: !5478)
!5481 = !DILocation(line: 627, column: 29, scope: !5478)
!5482 = !DILocation(line: 628, column: 31, scope: !5478)
!5483 = !DILocation(line: 628, column: 3, scope: !5478)
!5484 = !DILocation(line: 628, column: 10, scope: !5478)
!5485 = !DILocation(line: 628, column: 29, scope: !5478)
!5486 = !DILocation(line: 629, column: 2, scope: !5478)
!5487 = !DILocation(line: 632, column: 38, scope: !5238)
!5488 = !DILocation(line: 632, column: 2, scope: !5238)
!5489 = !DILocation(line: 632, column: 9, scope: !5238)
!5490 = !DILocation(line: 632, column: 26, scope: !5238)
!5491 = !DILocation(line: 632, column: 36, scope: !5238)
!5492 = !DILocation(line: 633, column: 41, scope: !5238)
!5493 = !DILocation(line: 633, column: 2, scope: !5238)
!5494 = !DILocation(line: 633, column: 9, scope: !5238)
!5495 = !DILocation(line: 633, column: 26, scope: !5238)
!5496 = !DILocation(line: 633, column: 39, scope: !5238)
!5497 = !DILocation(line: 634, column: 45, scope: !5238)
!5498 = !DILocation(line: 634, column: 2, scope: !5238)
!5499 = !DILocation(line: 634, column: 9, scope: !5238)
!5500 = !DILocation(line: 634, column: 26, scope: !5238)
!5501 = !DILocation(line: 634, column: 43, scope: !5238)
!5502 = !DILocation(line: 635, column: 45, scope: !5238)
!5503 = !DILocation(line: 635, column: 2, scope: !5238)
!5504 = !DILocation(line: 635, column: 9, scope: !5238)
!5505 = !DILocation(line: 635, column: 26, scope: !5238)
!5506 = !DILocation(line: 635, column: 43, scope: !5238)
!5507 = !DILocation(line: 636, column: 34, scope: !5238)
!5508 = !DILocation(line: 636, column: 2, scope: !5238)
!5509 = !DILocation(line: 636, column: 9, scope: !5238)
!5510 = !DILocation(line: 636, column: 26, scope: !5238)
!5511 = !DILocation(line: 636, column: 32, scope: !5238)
!5512 = !DILocation(line: 639, column: 38, scope: !5238)
!5513 = !DILocation(line: 639, column: 2, scope: !5238)
!5514 = !DILocation(line: 639, column: 9, scope: !5238)
!5515 = !DILocation(line: 639, column: 26, scope: !5238)
!5516 = !DILocation(line: 639, column: 36, scope: !5238)
!5517 = !DILocation(line: 640, column: 41, scope: !5238)
!5518 = !DILocation(line: 640, column: 2, scope: !5238)
!5519 = !DILocation(line: 640, column: 9, scope: !5238)
!5520 = !DILocation(line: 640, column: 26, scope: !5238)
!5521 = !DILocation(line: 640, column: 39, scope: !5238)
!5522 = !DILocation(line: 641, column: 45, scope: !5238)
!5523 = !DILocation(line: 641, column: 2, scope: !5238)
!5524 = !DILocation(line: 641, column: 9, scope: !5238)
!5525 = !DILocation(line: 641, column: 26, scope: !5238)
!5526 = !DILocation(line: 641, column: 43, scope: !5238)
!5527 = !DILocation(line: 642, column: 45, scope: !5238)
!5528 = !DILocation(line: 642, column: 2, scope: !5238)
!5529 = !DILocation(line: 642, column: 9, scope: !5238)
!5530 = !DILocation(line: 642, column: 26, scope: !5238)
!5531 = !DILocation(line: 642, column: 43, scope: !5238)
!5532 = !DILocation(line: 643, column: 34, scope: !5238)
!5533 = !DILocation(line: 643, column: 2, scope: !5238)
!5534 = !DILocation(line: 643, column: 9, scope: !5238)
!5535 = !DILocation(line: 643, column: 26, scope: !5238)
!5536 = !DILocation(line: 643, column: 32, scope: !5238)
!5537 = !DILocation(line: 644, column: 32, scope: !5238)
!5538 = !DILocation(line: 644, column: 2, scope: !5238)
!5539 = !DILocation(line: 644, column: 9, scope: !5238)
!5540 = !DILocation(line: 644, column: 26, scope: !5238)
!5541 = !DILocation(line: 644, column: 30, scope: !5238)
!5542 = !DILocation(line: 645, column: 44, scope: !5238)
!5543 = !DILocation(line: 645, column: 2, scope: !5238)
!5544 = !DILocation(line: 645, column: 9, scope: !5238)
!5545 = !DILocation(line: 645, column: 26, scope: !5238)
!5546 = !DILocation(line: 645, column: 42, scope: !5238)
!5547 = !DILocation(line: 646, column: 2, scope: !5238)
!5548 = !DILocation(line: 646, column: 9, scope: !5238)
!5549 = !DILocation(line: 646, column: 27, scope: !5238)
!5550 = !DILocation(line: 646, column: 37, scope: !5238)
!5551 = !DILocation(line: 647, column: 2, scope: !5238)
!5552 = !DILocation(line: 647, column: 9, scope: !5238)
!5553 = !DILocation(line: 647, column: 27, scope: !5238)
!5554 = !DILocation(line: 647, column: 39, scope: !5238)
!5555 = !DILocation(line: 651, column: 2, scope: !5238)
!5556 = !DILocation(line: 651, column: 9, scope: !5238)
!5557 = !DILocation(line: 651, column: 27, scope: !5238)
!5558 = !DILocation(line: 651, column: 37, scope: !5238)
!5559 = !DILocation(line: 652, column: 2, scope: !5238)
!5560 = !DILocation(line: 652, column: 9, scope: !5238)
!5561 = !DILocation(line: 652, column: 27, scope: !5238)
!5562 = !DILocation(line: 652, column: 40, scope: !5238)
!5563 = !DILocation(line: 653, column: 2, scope: !5238)
!5564 = !DILocation(line: 653, column: 9, scope: !5238)
!5565 = !DILocation(line: 653, column: 27, scope: !5238)
!5566 = !DILocation(line: 653, column: 44, scope: !5238)
!5567 = !DILocation(line: 654, column: 2, scope: !5238)
!5568 = !DILocation(line: 654, column: 9, scope: !5238)
!5569 = !DILocation(line: 654, column: 27, scope: !5238)
!5570 = !DILocation(line: 654, column: 44, scope: !5238)
!5571 = !DILocation(line: 655, column: 2, scope: !5238)
!5572 = !DILocation(line: 655, column: 9, scope: !5238)
!5573 = !DILocation(line: 655, column: 27, scope: !5238)
!5574 = !DILocation(line: 655, column: 31, scope: !5238)
!5575 = !DILocation(line: 656, column: 2, scope: !5238)
!5576 = !DILocation(line: 656, column: 9, scope: !5238)
!5577 = !DILocation(line: 656, column: 27, scope: !5238)
!5578 = !DILocation(line: 656, column: 43, scope: !5238)
!5579 = !DILocation(line: 657, column: 2, scope: !5238)
!5580 = !DILocation(line: 657, column: 9, scope: !5238)
!5581 = !DILocation(line: 657, column: 27, scope: !5238)
!5582 = !DILocation(line: 657, column: 33, scope: !5238)
!5583 = !DILocation(line: 661, column: 2, scope: !5238)
!5584 = !DILocation(line: 661, column: 9, scope: !5238)
!5585 = !DILocation(line: 661, column: 27, scope: !5238)
!5586 = !DILocation(line: 661, column: 37, scope: !5238)
!5587 = !DILocation(line: 662, column: 2, scope: !5238)
!5588 = !DILocation(line: 662, column: 9, scope: !5238)
!5589 = !DILocation(line: 662, column: 27, scope: !5238)
!5590 = !DILocation(line: 662, column: 40, scope: !5238)
!5591 = !DILocation(line: 663, column: 2, scope: !5238)
!5592 = !DILocation(line: 663, column: 9, scope: !5238)
!5593 = !DILocation(line: 663, column: 27, scope: !5238)
!5594 = !DILocation(line: 663, column: 44, scope: !5238)
!5595 = !DILocation(line: 664, column: 2, scope: !5238)
!5596 = !DILocation(line: 664, column: 9, scope: !5238)
!5597 = !DILocation(line: 664, column: 27, scope: !5238)
!5598 = !DILocation(line: 664, column: 44, scope: !5238)
!5599 = !DILocation(line: 665, column: 2, scope: !5238)
!5600 = !DILocation(line: 665, column: 9, scope: !5238)
!5601 = !DILocation(line: 665, column: 27, scope: !5238)
!5602 = !DILocation(line: 665, column: 31, scope: !5238)
!5603 = !DILocation(line: 666, column: 2, scope: !5238)
!5604 = !DILocation(line: 666, column: 9, scope: !5238)
!5605 = !DILocation(line: 666, column: 27, scope: !5238)
!5606 = !DILocation(line: 666, column: 43, scope: !5238)
!5607 = !DILocation(line: 667, column: 2, scope: !5238)
!5608 = !DILocation(line: 667, column: 9, scope: !5238)
!5609 = !DILocation(line: 667, column: 27, scope: !5238)
!5610 = !DILocation(line: 667, column: 33, scope: !5238)
!5611 = !DILocation(line: 668, column: 2, scope: !5238)
!5612 = !DILocation(line: 668, column: 9, scope: !5238)
!5613 = !DILocation(line: 668, column: 27, scope: !5238)
!5614 = !DILocation(line: 668, column: 48, scope: !5238)
!5615 = !DILocation(line: 669, column: 2, scope: !5238)
!5616 = !DILocation(line: 669, column: 9, scope: !5238)
!5617 = !DILocation(line: 669, column: 27, scope: !5238)
!5618 = !DILocation(line: 669, column: 42, scope: !5238)
!5619 = !DILocation(line: 672, column: 2, scope: !5238)
!5620 = !DILocation(line: 672, column: 9, scope: !5238)
!5621 = !DILocation(line: 672, column: 28, scope: !5238)
!5622 = !DILocation(line: 672, column: 38, scope: !5238)
!5623 = !DILocation(line: 673, column: 2, scope: !5238)
!5624 = !DILocation(line: 673, column: 9, scope: !5238)
!5625 = !DILocation(line: 673, column: 28, scope: !5238)
!5626 = !DILocation(line: 673, column: 40, scope: !5238)
!5627 = !DILocation(line: 676, column: 2, scope: !5238)
!5628 = !DILocation(line: 676, column: 9, scope: !5238)
!5629 = !DILocation(line: 676, column: 26, scope: !5238)
!5630 = !DILocation(line: 676, column: 36, scope: !5238)
!5631 = !DILocation(line: 677, column: 2, scope: !5238)
!5632 = !DILocation(line: 677, column: 9, scope: !5238)
!5633 = !DILocation(line: 677, column: 26, scope: !5238)
!5634 = !DILocation(line: 677, column: 39, scope: !5238)
!5635 = !DILocation(line: 678, column: 2, scope: !5238)
!5636 = !DILocation(line: 678, column: 9, scope: !5238)
!5637 = !DILocation(line: 678, column: 26, scope: !5238)
!5638 = !DILocation(line: 678, column: 43, scope: !5238)
!5639 = !DILocation(line: 679, column: 2, scope: !5238)
!5640 = !DILocation(line: 679, column: 9, scope: !5238)
!5641 = !DILocation(line: 679, column: 26, scope: !5238)
!5642 = !DILocation(line: 679, column: 43, scope: !5238)
!5643 = !DILocation(line: 680, column: 2, scope: !5238)
!5644 = !DILocation(line: 680, column: 9, scope: !5238)
!5645 = !DILocation(line: 680, column: 26, scope: !5238)
!5646 = !DILocation(line: 680, column: 30, scope: !5238)
!5647 = !DILocation(line: 681, column: 2, scope: !5238)
!5648 = !DILocation(line: 681, column: 9, scope: !5238)
!5649 = !DILocation(line: 681, column: 26, scope: !5238)
!5650 = !DILocation(line: 681, column: 42, scope: !5238)
!5651 = !DILocation(line: 682, column: 2, scope: !5238)
!5652 = !DILocation(line: 682, column: 9, scope: !5238)
!5653 = !DILocation(line: 682, column: 26, scope: !5238)
!5654 = !DILocation(line: 682, column: 32, scope: !5238)
!5655 = !DILocation(line: 685, column: 2, scope: !5238)
!5656 = !DILocation(line: 685, column: 9, scope: !5238)
!5657 = !DILocation(line: 685, column: 26, scope: !5238)
!5658 = !DILocation(line: 685, column: 36, scope: !5238)
!5659 = !DILocation(line: 686, column: 2, scope: !5238)
!5660 = !DILocation(line: 686, column: 9, scope: !5238)
!5661 = !DILocation(line: 686, column: 26, scope: !5238)
!5662 = !DILocation(line: 686, column: 39, scope: !5238)
!5663 = !DILocation(line: 687, column: 2, scope: !5238)
!5664 = !DILocation(line: 687, column: 9, scope: !5238)
!5665 = !DILocation(line: 687, column: 26, scope: !5238)
!5666 = !DILocation(line: 687, column: 43, scope: !5238)
!5667 = !DILocation(line: 688, column: 2, scope: !5238)
!5668 = !DILocation(line: 688, column: 9, scope: !5238)
!5669 = !DILocation(line: 688, column: 26, scope: !5238)
!5670 = !DILocation(line: 688, column: 43, scope: !5238)
!5671 = !DILocation(line: 689, column: 2, scope: !5238)
!5672 = !DILocation(line: 689, column: 9, scope: !5238)
!5673 = !DILocation(line: 689, column: 26, scope: !5238)
!5674 = !DILocation(line: 689, column: 30, scope: !5238)
!5675 = !DILocation(line: 690, column: 2, scope: !5238)
!5676 = !DILocation(line: 690, column: 9, scope: !5238)
!5677 = !DILocation(line: 690, column: 26, scope: !5238)
!5678 = !DILocation(line: 690, column: 42, scope: !5238)
!5679 = !DILocation(line: 691, column: 2, scope: !5238)
!5680 = !DILocation(line: 691, column: 9, scope: !5238)
!5681 = !DILocation(line: 691, column: 26, scope: !5238)
!5682 = !DILocation(line: 691, column: 32, scope: !5238)
!5683 = !DILocation(line: 692, column: 2, scope: !5238)
!5684 = !DILocation(line: 692, column: 9, scope: !5238)
!5685 = !DILocation(line: 692, column: 26, scope: !5238)
!5686 = !DILocation(line: 692, column: 41, scope: !5238)
!5687 = !DILocation(line: 693, column: 2, scope: !5238)
!5688 = !DILocation(line: 693, column: 9, scope: !5238)
!5689 = !DILocation(line: 693, column: 26, scope: !5238)
!5690 = !DILocation(line: 693, column: 47, scope: !5238)
!5691 = !DILocation(line: 695, column: 2, scope: !5238)
!5692 = !DILocation(line: 695, column: 9, scope: !5238)
!5693 = !DILocation(line: 695, column: 23, scope: !5238)
!5694 = !DILocation(line: 696, column: 2, scope: !5238)
!5695 = !DILocation(line: 696, column: 9, scope: !5238)
!5696 = !DILocation(line: 696, column: 27, scope: !5238)
!5697 = !DILocation(line: 696, column: 37, scope: !5238)
!5698 = !DILocation(line: 697, column: 2, scope: !5238)
!5699 = !DILocation(line: 697, column: 9, scope: !5238)
!5700 = !DILocation(line: 697, column: 27, scope: !5238)
!5701 = !DILocation(line: 697, column: 39, scope: !5238)
!5702 = !DILocation(line: 699, column: 2, scope: !5238)
!5703 = !DILocation(line: 699, column: 9, scope: !5238)
!5704 = !DILocation(line: 699, column: 26, scope: !5238)
!5705 = !DILocation(line: 700, column: 2, scope: !5238)
!5706 = !DILocation(line: 700, column: 9, scope: !5238)
!5707 = !DILocation(line: 700, column: 22, scope: !5238)
!5708 = !DILocation(line: 703, column: 2, scope: !5238)
!5709 = !DILocation(line: 703, column: 9, scope: !5238)
!5710 = !DILocation(line: 703, column: 30, scope: !5238)
!5711 = !DILocation(line: 704, column: 2, scope: !5238)
!5712 = !DILocation(line: 704, column: 9, scope: !5238)
!5713 = !DILocation(line: 704, column: 26, scope: !5238)
!5714 = !DILocation(line: 705, column: 2, scope: !5238)
!5715 = !DILocation(line: 705, column: 9, scope: !5238)
!5716 = !DILocation(line: 705, column: 23, scope: !5238)
!5717 = !DILocation(line: 706, column: 2, scope: !5238)
!5718 = !DILocation(line: 706, column: 9, scope: !5238)
!5719 = !DILocation(line: 706, column: 22, scope: !5238)
!5720 = !DILocation(line: 707, column: 2, scope: !5238)
!5721 = !DILocation(line: 707, column: 9, scope: !5238)
!5722 = !DILocation(line: 707, column: 22, scope: !5238)
!5723 = !DILocation(line: 708, column: 2, scope: !5238)
!5724 = !DILocation(line: 708, column: 9, scope: !5238)
!5725 = !DILocation(line: 708, column: 22, scope: !5238)
!5726 = !DILocation(line: 709, column: 25, scope: !5238)
!5727 = !DILocation(line: 709, column: 44, scope: !5238)
!5728 = !DILocation(line: 709, column: 2, scope: !5238)
!5729 = !DILocation(line: 709, column: 9, scope: !5238)
!5730 = !DILocation(line: 709, column: 22, scope: !5238)
!5731 = !DILocation(line: 714, column: 26, scope: !5238)
!5732 = !DILocation(line: 714, column: 2, scope: !5238)
!5733 = !DILocation(line: 714, column: 9, scope: !5238)
!5734 = !DILocation(line: 714, column: 24, scope: !5238)
!5735 = !DILocation(line: 715, column: 26, scope: !5238)
!5736 = !DILocation(line: 715, column: 2, scope: !5238)
!5737 = !DILocation(line: 715, column: 9, scope: !5238)
!5738 = !DILocation(line: 715, column: 24, scope: !5238)
!5739 = !DILocation(line: 717, column: 31, scope: !5238)
!5740 = !DILocation(line: 717, column: 51, scope: !5238)
!5741 = !DILocation(line: 717, column: 30, scope: !5238)
!5742 = !DILocation(line: 717, column: 2, scope: !5238)
!5743 = !DILocation(line: 717, column: 9, scope: !5238)
!5744 = !DILocation(line: 717, column: 28, scope: !5238)
!5745 = !DILocation(line: 720, column: 2, scope: !5238)
!5746 = !DILocation(line: 720, column: 9, scope: !5238)
!5747 = !DILocation(line: 720, column: 34, scope: !5238)
!5748 = !DILocation(line: 721, column: 2, scope: !5238)
!5749 = !DILocation(line: 721, column: 9, scope: !5238)
!5750 = !DILocation(line: 721, column: 32, scope: !5238)
!5751 = !DILocation(line: 723, column: 6, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 723, column: 6)
!5753 = !DILocation(line: 723, column: 6, scope: !5238)
!5754 = !DILocation(line: 724, column: 3, scope: !5752)
!5755 = !DILocation(line: 724, column: 10, scope: !5752)
!5756 = !DILocation(line: 724, column: 27, scope: !5752)
!5757 = !DILocation(line: 726, column: 2, scope: !5238)
!5758 = !DILocation(line: 726, column: 9, scope: !5238)
!5759 = !DILocation(line: 726, column: 30, scope: !5238)
!5760 = !DILocation(line: 727, column: 6, scope: !5761)
!5761 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 727, column: 6)
!5762 = !DILocation(line: 727, column: 28, scope: !5761)
!5763 = !DILocation(line: 727, column: 6, scope: !5238)
!5764 = !DILocation(line: 728, column: 33, scope: !5761)
!5765 = !DILocation(line: 728, column: 3, scope: !5761)
!5766 = !DILocation(line: 728, column: 10, scope: !5761)
!5767 = !DILocation(line: 728, column: 31, scope: !5761)
!5768 = !DILocation(line: 729, column: 2, scope: !5238)
!5769 = !DILocation(line: 729, column: 9, scope: !5238)
!5770 = !DILocation(line: 729, column: 31, scope: !5238)
!5771 = !DILocation(line: 730, column: 6, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5238, file: !3, line: 730, column: 6)
!5773 = !DILocation(line: 730, column: 29, scope: !5772)
!5774 = !DILocation(line: 730, column: 6, scope: !5238)
!5775 = !DILocation(line: 731, column: 34, scope: !5772)
!5776 = !DILocation(line: 731, column: 3, scope: !5772)
!5777 = !DILocation(line: 731, column: 10, scope: !5772)
!5778 = !DILocation(line: 731, column: 32, scope: !5772)
!5779 = !DILocation(line: 734, column: 2, scope: !5238)
!5780 = !DILocation(line: 734, column: 9, scope: !5238)
!5781 = !DILocation(line: 734, column: 25, scope: !5238)
!5782 = !DILocation(line: 735, column: 2, scope: !5238)
!5783 = !DILocation(line: 735, column: 9, scope: !5238)
!5784 = !DILocation(line: 735, column: 31, scope: !5238)
!5785 = !DILocation(line: 736, column: 2, scope: !5238)
!5786 = !DILocation(line: 736, column: 9, scope: !5238)
!5787 = !DILocation(line: 736, column: 23, scope: !5238)
!5788 = !DILocation(line: 737, column: 2, scope: !5238)
!5789 = !DILocation(line: 737, column: 9, scope: !5238)
!5790 = !DILocation(line: 737, column: 27, scope: !5238)
!5791 = !DILocation(line: 739, column: 2, scope: !5238)
!5792 = !DILocation(line: 739, column: 9, scope: !5238)
!5793 = !DILocation(line: 739, column: 21, scope: !5238)
!5794 = !DILocation(line: 740, column: 2, scope: !5238)
!5795 = !DILocation(line: 740, column: 9, scope: !5238)
!5796 = !DILocation(line: 740, column: 35, scope: !5238)
!5797 = !DILocation(line: 742, column: 22, scope: !5238)
!5798 = !DILocation(line: 742, column: 2, scope: !5238)
!5799 = !DILocation(line: 742, column: 9, scope: !5238)
!5800 = !DILocation(line: 742, column: 20, scope: !5238)
!5801 = !DILocation(line: 744, column: 2, scope: !5238)
!5802 = !DILocation(line: 744, column: 9, scope: !5238)
!5803 = !DILocation(line: 744, column: 24, scope: !5238)
!5804 = !DILocation(line: 745, column: 2, scope: !5238)
!5805 = !DILocation(line: 745, column: 9, scope: !5238)
!5806 = !DILocation(line: 745, column: 30, scope: !5238)
!5807 = !DILocation(line: 747, column: 23, scope: !5238)
!5808 = !DILocation(line: 747, column: 36, scope: !5238)
!5809 = !DILocation(line: 747, column: 2, scope: !5238)
!5810 = !DILocation(line: 747, column: 9, scope: !5238)
!5811 = !DILocation(line: 747, column: 20, scope: !5238)
!5812 = !DILocation(line: 748, column: 2, scope: !5238)
!5813 = !DILocation(line: 748, column: 9, scope: !5238)
!5814 = !DILocation(line: 748, column: 22, scope: !5238)
!5815 = !DILocation(line: 749, column: 2, scope: !5238)
!5816 = distinct !DISubprogram(name: "load_firmware_cb", scope: !3, file: !3, line: 6255, type: !5817, scopeLine: 6257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!5817 = !DISubroutineType(types: !5818)
!5818 = !{null, !4694, !398}
!5819 = !DILocalVariable(name: "fw", arg: 1, scope: !5816, file: !3, line: 6255, type: !4694)
!5820 = !DILocation(line: 6255, column: 53, scope: !5816)
!5821 = !DILocalVariable(name: "context", arg: 2, scope: !5816, file: !3, line: 6256, type: !398)
!5822 = !DILocation(line: 6256, column: 15, scope: !5816)
!5823 = !DILocalVariable(name: "state", scope: !5816, file: !3, line: 6258, type: !4562)
!5824 = !DILocation(line: 6258, column: 21, scope: !5816)
!5825 = !DILocation(line: 6258, column: 29, scope: !5816)
!5826 = !DILocation(line: 6260, column: 2, scope: !5816)
!5827 = !DILocation(line: 6260, column: 2, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 6260, column: 2)
!5829 = distinct !DILexicalBlock(scope: !5816, file: !3, line: 6260, column: 2)
!5830 = !DILocation(line: 6260, column: 2, scope: !5829)
!5831 = !DILocation(line: 6261, column: 7, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5816, file: !3, line: 6261, column: 6)
!5833 = !DILocation(line: 6261, column: 6, scope: !5816)
!5834 = !DILocation(line: 6262, column: 3, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5832, file: !3, line: 6261, column: 11)
!5836 = !DILocation(line: 6264, column: 3, scope: !5835)
!5837 = !DILocation(line: 6266, column: 3, scope: !5835)
!5838 = !DILocation(line: 6266, column: 10, scope: !5835)
!5839 = !DILocation(line: 6266, column: 25, scope: !5835)
!5840 = !DILocation(line: 6278, column: 2, scope: !5835)
!5841 = !DILocation(line: 6279, column: 14, scope: !5816)
!5842 = !DILocation(line: 6279, column: 2, scope: !5816)
!5843 = !DILocation(line: 6279, column: 9, scope: !5816)
!5844 = !DILocation(line: 6279, column: 12, scope: !5816)
!5845 = !DILocation(line: 6281, column: 12, scope: !5816)
!5846 = !DILocation(line: 6281, column: 2, scope: !5816)
!5847 = !DILocation(line: 6282, column: 1, scope: !5816)
!5848 = distinct !DISubprogram(name: "init_drxk", scope: !3, file: !3, line: 6030, type: !5239, scopeLine: 6031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!5849 = !DILocalVariable(name: "state", arg: 1, scope: !5848, file: !3, line: 6030, type: !4562)
!5850 = !DILocation(line: 6030, column: 41, scope: !5848)
!5851 = !DILocalVariable(name: "status", scope: !5848, file: !3, line: 6032, type: !405)
!5852 = !DILocation(line: 6032, column: 6, scope: !5848)
!5853 = !DILocalVariable(name: "n", scope: !5848, file: !3, line: 6032, type: !405)
!5854 = !DILocation(line: 6032, column: 18, scope: !5848)
!5855 = !DILocalVariable(name: "power_mode", scope: !5848, file: !3, line: 6033, type: !338)
!5856 = !DILocation(line: 6033, column: 22, scope: !5848)
!5857 = !DILocalVariable(name: "driver_version", scope: !5848, file: !3, line: 6034, type: !408)
!5858 = !DILocation(line: 6034, column: 6, scope: !5848)
!5859 = !DILocation(line: 6036, column: 2, scope: !5848)
!5860 = !DILocation(line: 6036, column: 2, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5862, file: !3, line: 6036, column: 2)
!5862 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 6036, column: 2)
!5863 = !DILocation(line: 6036, column: 2, scope: !5862)
!5864 = !DILocation(line: 6037, column: 6, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 6037, column: 6)
!5866 = !DILocation(line: 6037, column: 13, scope: !5865)
!5867 = !DILocation(line: 6037, column: 26, scope: !5865)
!5868 = !DILocation(line: 6037, column: 6, scope: !5848)
!5869 = !DILocation(line: 6038, column: 17, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 6037, column: 49)
!5871 = !DILocation(line: 6038, column: 3, scope: !5870)
!5872 = !DILocation(line: 6039, column: 28, scope: !5870)
!5873 = !DILocation(line: 6039, column: 12, scope: !5870)
!5874 = !DILocation(line: 6039, column: 10, scope: !5870)
!5875 = !DILocation(line: 6040, column: 7, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6040, column: 7)
!5877 = !DILocation(line: 6040, column: 14, scope: !5876)
!5878 = !DILocation(line: 6040, column: 7, scope: !5870)
!5879 = !DILocation(line: 6041, column: 4, scope: !5876)
!5880 = !DILocation(line: 6042, column: 22, scope: !5870)
!5881 = !DILocation(line: 6042, column: 12, scope: !5870)
!5882 = !DILocation(line: 6042, column: 10, scope: !5870)
!5883 = !DILocation(line: 6043, column: 7, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6043, column: 7)
!5885 = !DILocation(line: 6043, column: 14, scope: !5884)
!5886 = !DILocation(line: 6043, column: 7, scope: !5870)
!5887 = !DILocation(line: 6044, column: 4, scope: !5884)
!5888 = !DILocation(line: 6046, column: 20, scope: !5870)
!5889 = !DILocation(line: 6046, column: 12, scope: !5870)
!5890 = !DILocation(line: 6046, column: 10, scope: !5870)
!5891 = !DILocation(line: 6050, column: 7, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6050, column: 7)
!5893 = !DILocation(line: 6050, column: 14, scope: !5892)
!5894 = !DILocation(line: 6050, column: 7, scope: !5870)
!5895 = !DILocation(line: 6051, column: 4, scope: !5892)
!5896 = !DILocation(line: 6052, column: 20, scope: !5870)
!5897 = !DILocation(line: 6052, column: 12, scope: !5870)
!5898 = !DILocation(line: 6052, column: 10, scope: !5870)
!5899 = !DILocation(line: 6053, column: 7, scope: !5900)
!5900 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6053, column: 7)
!5901 = !DILocation(line: 6053, column: 14, scope: !5900)
!5902 = !DILocation(line: 6053, column: 7, scope: !5870)
!5903 = !DILocation(line: 6054, column: 4, scope: !5900)
!5904 = !DILocation(line: 6059, column: 3, scope: !5870)
!5905 = !DILocation(line: 6060, column: 3, scope: !5870)
!5906 = !DILocation(line: 6060, column: 10, scope: !5870)
!5907 = !DILocation(line: 6060, column: 31, scope: !5870)
!5908 = !DILocation(line: 6061, column: 36, scope: !5870)
!5909 = !DILocation(line: 6061, column: 12, scope: !5870)
!5910 = !DILocation(line: 6061, column: 10, scope: !5870)
!5911 = !DILocation(line: 6062, column: 7, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6062, column: 7)
!5913 = !DILocation(line: 6062, column: 14, scope: !5912)
!5914 = !DILocation(line: 6062, column: 7, scope: !5870)
!5915 = !DILocation(line: 6063, column: 4, scope: !5912)
!5916 = !DILocation(line: 6069, column: 12, scope: !5870)
!5917 = !DILocation(line: 6069, column: 19, scope: !5870)
!5918 = !DILocation(line: 6069, column: 36, scope: !5870)
!5919 = !DILocation(line: 6069, column: 44, scope: !5870)
!5920 = !DILocation(line: 6069, column: 4, scope: !5870)
!5921 = !DILocation(line: 6070, column: 26, scope: !5870)
!5922 = !DILocation(line: 6068, column: 3, scope: !5870)
!5923 = !DILocation(line: 6068, column: 10, scope: !5870)
!5924 = !DILocation(line: 6068, column: 32, scope: !5870)
!5925 = !DILocation(line: 6072, column: 7, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6072, column: 7)
!5927 = !DILocation(line: 6072, column: 14, scope: !5926)
!5928 = !DILocation(line: 6072, column: 36, scope: !5926)
!5929 = !DILocation(line: 6072, column: 7, scope: !5870)
!5930 = !DILocation(line: 6074, column: 4, scope: !5931)
!5931 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 6073, column: 40)
!5932 = !DILocation(line: 6074, column: 11, scope: !5931)
!5933 = !DILocation(line: 6074, column: 33, scope: !5931)
!5934 = !DILocation(line: 6076, column: 3, scope: !5931)
!5935 = !DILocation(line: 6079, column: 4, scope: !5870)
!5936 = !DILocation(line: 6079, column: 11, scope: !5870)
!5937 = !DILocation(line: 6079, column: 33, scope: !5870)
!5938 = !DILocation(line: 6078, column: 3, scope: !5870)
!5939 = !DILocation(line: 6078, column: 10, scope: !5870)
!5940 = !DILocation(line: 6078, column: 32, scope: !5870)
!5941 = !DILocation(line: 6082, column: 20, scope: !5870)
!5942 = !DILocation(line: 6082, column: 12, scope: !5870)
!5943 = !DILocation(line: 6082, column: 10, scope: !5870)
!5944 = !DILocation(line: 6083, column: 7, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6083, column: 7)
!5946 = !DILocation(line: 6083, column: 14, scope: !5945)
!5947 = !DILocation(line: 6083, column: 7, scope: !5870)
!5948 = !DILocation(line: 6084, column: 4, scope: !5945)
!5949 = !DILocation(line: 6091, column: 21, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6090, column: 3)
!5951 = !DILocation(line: 6091, column: 13, scope: !5950)
!5952 = !DILocation(line: 6091, column: 11, scope: !5950)
!5953 = !DILocation(line: 6093, column: 8, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 6093, column: 8)
!5955 = !DILocation(line: 6093, column: 15, scope: !5954)
!5956 = !DILocation(line: 6093, column: 8, scope: !5950)
!5957 = !DILocation(line: 6094, column: 5, scope: !5954)
!5958 = !DILocation(line: 6098, column: 27, scope: !5870)
!5959 = !DILocation(line: 6098, column: 12, scope: !5870)
!5960 = !DILocation(line: 6098, column: 10, scope: !5870)
!5961 = !DILocation(line: 6099, column: 7, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6099, column: 7)
!5963 = !DILocation(line: 6099, column: 14, scope: !5962)
!5964 = !DILocation(line: 6099, column: 7, scope: !5870)
!5965 = !DILocation(line: 6100, column: 4, scope: !5962)
!5966 = !DILocation(line: 6103, column: 20, scope: !5870)
!5967 = !DILocation(line: 6103, column: 12, scope: !5870)
!5968 = !DILocation(line: 6103, column: 10, scope: !5870)
!5969 = !DILocation(line: 6104, column: 7, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6104, column: 7)
!5971 = !DILocation(line: 6104, column: 14, scope: !5970)
!5972 = !DILocation(line: 6104, column: 7, scope: !5870)
!5973 = !DILocation(line: 6105, column: 4, scope: !5970)
!5974 = !DILocation(line: 6106, column: 20, scope: !5870)
!5975 = !DILocation(line: 6106, column: 12, scope: !5870)
!5976 = !DILocation(line: 6106, column: 10, scope: !5870)
!5977 = !DILocation(line: 6107, column: 7, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6107, column: 7)
!5979 = !DILocation(line: 6107, column: 14, scope: !5978)
!5980 = !DILocation(line: 6107, column: 7, scope: !5870)
!5981 = !DILocation(line: 6108, column: 4, scope: !5978)
!5982 = !DILocation(line: 6111, column: 20, scope: !5870)
!5983 = !DILocation(line: 6111, column: 12, scope: !5870)
!5984 = !DILocation(line: 6111, column: 10, scope: !5870)
!5985 = !DILocation(line: 6113, column: 7, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6113, column: 7)
!5987 = !DILocation(line: 6113, column: 14, scope: !5986)
!5988 = !DILocation(line: 6113, column: 7, scope: !5870)
!5989 = !DILocation(line: 6114, column: 4, scope: !5986)
!5990 = !DILocation(line: 6117, column: 20, scope: !5870)
!5991 = !DILocation(line: 6117, column: 12, scope: !5870)
!5992 = !DILocation(line: 6117, column: 10, scope: !5870)
!5993 = !DILocation(line: 6119, column: 7, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6119, column: 7)
!5995 = !DILocation(line: 6119, column: 14, scope: !5994)
!5996 = !DILocation(line: 6119, column: 7, scope: !5870)
!5997 = !DILocation(line: 6120, column: 4, scope: !5994)
!5998 = !DILocation(line: 6121, column: 25, scope: !5870)
!5999 = !DILocation(line: 6121, column: 12, scope: !5870)
!6000 = !DILocation(line: 6121, column: 10, scope: !5870)
!6001 = !DILocation(line: 6122, column: 7, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6122, column: 7)
!6003 = !DILocation(line: 6122, column: 14, scope: !6002)
!6004 = !DILocation(line: 6122, column: 7, scope: !5870)
!6005 = !DILocation(line: 6123, column: 4, scope: !6002)
!6006 = !DILocation(line: 6125, column: 7, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6125, column: 7)
!6008 = !DILocation(line: 6125, column: 14, scope: !6007)
!6009 = !DILocation(line: 6125, column: 7, scope: !5870)
!6010 = !DILocation(line: 6126, column: 32, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 6125, column: 18)
!6012 = !DILocation(line: 6126, column: 39, scope: !6011)
!6013 = !DILocation(line: 6126, column: 46, scope: !6011)
!6014 = !DILocation(line: 6126, column: 50, scope: !6011)
!6015 = !DILocation(line: 6127, column: 10, scope: !6011)
!6016 = !DILocation(line: 6127, column: 17, scope: !6011)
!6017 = !DILocation(line: 6127, column: 21, scope: !6011)
!6018 = !DILocation(line: 6126, column: 13, scope: !6011)
!6019 = !DILocation(line: 6126, column: 11, scope: !6011)
!6020 = !DILocation(line: 6128, column: 8, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 6128, column: 8)
!6022 = !DILocation(line: 6128, column: 15, scope: !6021)
!6023 = !DILocation(line: 6128, column: 8, scope: !6011)
!6024 = !DILocation(line: 6129, column: 5, scope: !6021)
!6025 = !DILocation(line: 6130, column: 3, scope: !6011)
!6026 = !DILocation(line: 6133, column: 20, scope: !5870)
!6027 = !DILocation(line: 6133, column: 12, scope: !5870)
!6028 = !DILocation(line: 6133, column: 10, scope: !5870)
!6029 = !DILocation(line: 6135, column: 7, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6135, column: 7)
!6031 = !DILocation(line: 6135, column: 14, scope: !6030)
!6032 = !DILocation(line: 6135, column: 7, scope: !5870)
!6033 = !DILocation(line: 6136, column: 4, scope: !6030)
!6034 = !DILocation(line: 6139, column: 20, scope: !5870)
!6035 = !DILocation(line: 6139, column: 12, scope: !5870)
!6036 = !DILocation(line: 6139, column: 10, scope: !5870)
!6037 = !DILocation(line: 6140, column: 7, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6140, column: 7)
!6039 = !DILocation(line: 6140, column: 14, scope: !6038)
!6040 = !DILocation(line: 6140, column: 7, scope: !5870)
!6041 = !DILocation(line: 6141, column: 4, scope: !6038)
!6042 = !DILocation(line: 6142, column: 22, scope: !5870)
!6043 = !DILocation(line: 6142, column: 12, scope: !5870)
!6044 = !DILocation(line: 6142, column: 10, scope: !5870)
!6045 = !DILocation(line: 6143, column: 7, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6143, column: 7)
!6047 = !DILocation(line: 6143, column: 14, scope: !6046)
!6048 = !DILocation(line: 6143, column: 7, scope: !5870)
!6049 = !DILocation(line: 6144, column: 4, scope: !6046)
!6050 = !DILocation(line: 6146, column: 3, scope: !5870)
!6051 = !DILocation(line: 6148, column: 14, scope: !5870)
!6052 = !DILocation(line: 6149, column: 28, scope: !5870)
!6053 = !DILocation(line: 6149, column: 12, scope: !5870)
!6054 = !DILocation(line: 6149, column: 10, scope: !5870)
!6055 = !DILocation(line: 6150, column: 7, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6150, column: 7)
!6057 = !DILocation(line: 6150, column: 14, scope: !6056)
!6058 = !DILocation(line: 6150, column: 7, scope: !5870)
!6059 = !DILocation(line: 6151, column: 4, scope: !6056)
!6060 = !DILocation(line: 6159, column: 18, scope: !5870)
!6061 = !DILocation(line: 6164, column: 20, scope: !5870)
!6062 = !DILocation(line: 6165, column: 6, scope: !5870)
!6063 = !DILocation(line: 6164, column: 12, scope: !5870)
!6064 = !DILocation(line: 6164, column: 10, scope: !5870)
!6065 = !DILocation(line: 6166, column: 7, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6166, column: 7)
!6067 = !DILocation(line: 6166, column: 14, scope: !6066)
!6068 = !DILocation(line: 6166, column: 7, scope: !5870)
!6069 = !DILocation(line: 6167, column: 4, scope: !6066)
!6070 = !DILocation(line: 6168, column: 18, scope: !5870)
!6071 = !DILocation(line: 6173, column: 20, scope: !5870)
!6072 = !DILocation(line: 6174, column: 6, scope: !5870)
!6073 = !DILocation(line: 6173, column: 12, scope: !5870)
!6074 = !DILocation(line: 6173, column: 10, scope: !5870)
!6075 = !DILocation(line: 6175, column: 7, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6175, column: 7)
!6077 = !DILocation(line: 6175, column: 14, scope: !6076)
!6078 = !DILocation(line: 6175, column: 7, scope: !5870)
!6079 = !DILocation(line: 6176, column: 4, scope: !6076)
!6080 = !DILocation(line: 6178, column: 3, scope: !5870)
!6081 = !DILocation(line: 6193, column: 20, scope: !5870)
!6082 = !DILocation(line: 6193, column: 12, scope: !5870)
!6083 = !DILocation(line: 6193, column: 10, scope: !5870)
!6084 = !DILocation(line: 6194, column: 7, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6194, column: 7)
!6086 = !DILocation(line: 6194, column: 14, scope: !6085)
!6087 = !DILocation(line: 6194, column: 7, scope: !5870)
!6088 = !DILocation(line: 6195, column: 4, scope: !6085)
!6089 = !DILocation(line: 6199, column: 20, scope: !5870)
!6090 = !DILocation(line: 6199, column: 12, scope: !5870)
!6091 = !DILocation(line: 6199, column: 10, scope: !5870)
!6092 = !DILocation(line: 6200, column: 7, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6200, column: 7)
!6094 = !DILocation(line: 6200, column: 14, scope: !6093)
!6095 = !DILocation(line: 6200, column: 7, scope: !5870)
!6096 = !DILocation(line: 6201, column: 4, scope: !6093)
!6097 = !DILocation(line: 6203, column: 28, scope: !5870)
!6098 = !DILocation(line: 6203, column: 12, scope: !5870)
!6099 = !DILocation(line: 6203, column: 10, scope: !5870)
!6100 = !DILocation(line: 6204, column: 7, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6204, column: 7)
!6102 = !DILocation(line: 6204, column: 14, scope: !6101)
!6103 = !DILocation(line: 6204, column: 7, scope: !5870)
!6104 = !DILocation(line: 6205, column: 4, scope: !6101)
!6105 = !DILocation(line: 6206, column: 24, scope: !5870)
!6106 = !DILocation(line: 6206, column: 12, scope: !5870)
!6107 = !DILocation(line: 6206, column: 10, scope: !5870)
!6108 = !DILocation(line: 6207, column: 7, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6207, column: 7)
!6110 = !DILocation(line: 6207, column: 14, scope: !6109)
!6111 = !DILocation(line: 6207, column: 7, scope: !5870)
!6112 = !DILocation(line: 6208, column: 4, scope: !6109)
!6113 = !DILocation(line: 6209, column: 38, scope: !5870)
!6114 = !DILocation(line: 6209, column: 12, scope: !5870)
!6115 = !DILocation(line: 6209, column: 10, scope: !5870)
!6116 = !DILocation(line: 6210, column: 7, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6210, column: 7)
!6118 = !DILocation(line: 6210, column: 14, scope: !6117)
!6119 = !DILocation(line: 6210, column: 7, scope: !5870)
!6120 = !DILocation(line: 6211, column: 4, scope: !6117)
!6121 = !DILocation(line: 6212, column: 34, scope: !5870)
!6122 = !DILocation(line: 6212, column: 41, scope: !5870)
!6123 = !DILocation(line: 6212, column: 48, scope: !5870)
!6124 = !DILocation(line: 6212, column: 12, scope: !5870)
!6125 = !DILocation(line: 6212, column: 10, scope: !5870)
!6126 = !DILocation(line: 6213, column: 7, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6213, column: 7)
!6128 = !DILocation(line: 6213, column: 14, scope: !6127)
!6129 = !DILocation(line: 6213, column: 7, scope: !5870)
!6130 = !DILocation(line: 6214, column: 4, scope: !6127)
!6131 = !DILocation(line: 6216, column: 23, scope: !5870)
!6132 = !DILocation(line: 6216, column: 12, scope: !5870)
!6133 = !DILocation(line: 6216, column: 10, scope: !5870)
!6134 = !DILocation(line: 6217, column: 7, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6217, column: 7)
!6136 = !DILocation(line: 6217, column: 14, scope: !6135)
!6137 = !DILocation(line: 6217, column: 7, scope: !5870)
!6138 = !DILocation(line: 6218, column: 4, scope: !6135)
!6139 = !DILocation(line: 6220, column: 3, scope: !5870)
!6140 = !DILocation(line: 6220, column: 10, scope: !5870)
!6141 = !DILocation(line: 6220, column: 23, scope: !5870)
!6142 = !DILocation(line: 6222, column: 7, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6222, column: 7)
!6144 = !DILocation(line: 6222, column: 14, scope: !6143)
!6145 = !DILocation(line: 6222, column: 7, scope: !5870)
!6146 = !DILocation(line: 6223, column: 31, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 6222, column: 30)
!6148 = !DILocation(line: 6223, column: 13, scope: !6147)
!6149 = !DILocation(line: 6223, column: 11, scope: !6147)
!6150 = !DILocation(line: 6224, column: 8, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 6224, column: 8)
!6152 = !DILocation(line: 6224, column: 15, scope: !6151)
!6153 = !DILocation(line: 6224, column: 8, scope: !6147)
!6154 = !DILocation(line: 6225, column: 5, scope: !6151)
!6155 = !DILocation(line: 6226, column: 4, scope: !6147)
!6156 = !DILocation(line: 6226, column: 11, scope: !6147)
!6157 = !DILocation(line: 6226, column: 24, scope: !6147)
!6158 = !DILocation(line: 6227, column: 3, scope: !6147)
!6159 = !DILocation(line: 6228, column: 4, scope: !6143)
!6160 = !DILocation(line: 6228, column: 11, scope: !6143)
!6161 = !DILocation(line: 6228, column: 24, scope: !6143)
!6162 = !DILocation(line: 6231, column: 5, scope: !5870)
!6163 = !DILocation(line: 6232, column: 7, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6232, column: 7)
!6165 = !DILocation(line: 6232, column: 14, scope: !6164)
!6166 = !DILocation(line: 6232, column: 7, scope: !5870)
!6167 = !DILocation(line: 6233, column: 4, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6164, file: !3, line: 6232, column: 26)
!6169 = !DILocation(line: 6233, column: 11, scope: !6168)
!6170 = !DILocation(line: 6233, column: 20, scope: !6168)
!6171 = !DILocation(line: 6233, column: 24, scope: !6168)
!6172 = !DILocation(line: 6233, column: 32, scope: !6168)
!6173 = !DILocation(line: 6233, column: 36, scope: !6168)
!6174 = !DILocation(line: 6234, column: 4, scope: !6168)
!6175 = !DILocation(line: 6234, column: 11, scope: !6168)
!6176 = !DILocation(line: 6234, column: 20, scope: !6168)
!6177 = !DILocation(line: 6234, column: 24, scope: !6168)
!6178 = !DILocation(line: 6234, column: 32, scope: !6168)
!6179 = !DILocation(line: 6234, column: 36, scope: !6168)
!6180 = !DILocation(line: 6235, column: 12, scope: !6168)
!6181 = !DILocation(line: 6235, column: 19, scope: !6168)
!6182 = !DILocation(line: 6235, column: 28, scope: !6168)
!6183 = !DILocation(line: 6235, column: 32, scope: !6168)
!6184 = !DILocation(line: 6235, column: 37, scope: !6168)
!6185 = !DILocation(line: 6235, column: 4, scope: !6168)
!6186 = !DILocation(line: 6237, column: 3, scope: !6168)
!6187 = !DILocation(line: 6238, column: 7, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 6238, column: 7)
!6189 = !DILocation(line: 6238, column: 14, scope: !6188)
!6190 = !DILocation(line: 6238, column: 7, scope: !5870)
!6191 = !DILocation(line: 6239, column: 4, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 6238, column: 26)
!6193 = !DILocation(line: 6239, column: 11, scope: !6192)
!6194 = !DILocation(line: 6239, column: 20, scope: !6192)
!6195 = !DILocation(line: 6239, column: 24, scope: !6192)
!6196 = !DILocation(line: 6239, column: 32, scope: !6192)
!6197 = !DILocation(line: 6239, column: 36, scope: !6192)
!6198 = !DILocation(line: 6240, column: 12, scope: !6192)
!6199 = !DILocation(line: 6240, column: 19, scope: !6192)
!6200 = !DILocation(line: 6240, column: 28, scope: !6192)
!6201 = !DILocation(line: 6240, column: 32, scope: !6192)
!6202 = !DILocation(line: 6240, column: 37, scope: !6192)
!6203 = !DILocation(line: 6240, column: 4, scope: !6192)
!6204 = !DILocation(line: 6242, column: 3, scope: !6192)
!6205 = !DILocation(line: 6243, column: 19, scope: !5870)
!6206 = !DILocation(line: 6243, column: 3, scope: !5870)
!6207 = !DILocation(line: 6244, column: 2, scope: !5870)
!6208 = !DILocation(line: 6037, column: 29, scope: !5865)
!6209 = !DILabel(scope: !5848, name: "error", file: !3, line: 6245)
!6210 = !DILocation(line: 6245, column: 1, scope: !5848)
!6211 = !DILocation(line: 6246, column: 6, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 6246, column: 6)
!6213 = !DILocation(line: 6246, column: 13, scope: !6212)
!6214 = !DILocation(line: 6246, column: 6, scope: !5848)
!6215 = !DILocation(line: 6247, column: 3, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 6246, column: 18)
!6217 = !DILocation(line: 6247, column: 10, scope: !6216)
!6218 = !DILocation(line: 6247, column: 23, scope: !6216)
!6219 = !DILocation(line: 6248, column: 19, scope: !6216)
!6220 = !DILocation(line: 6248, column: 3, scope: !6216)
!6221 = !DILocation(line: 6249, column: 3, scope: !6216)
!6222 = !DILocation(line: 6250, column: 2, scope: !6216)
!6223 = !DILocation(line: 6252, column: 9, scope: !5848)
!6224 = !DILocation(line: 6252, column: 2, scope: !5848)
!6225 = distinct !DISubprogram(name: "get_order", scope: !6226, file: !6226, line: 29, type: !6227, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6226 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!6227 = !DISubroutineType(types: !6228)
!6228 = !{!405, !716}
!6229 = !DILocalVariable(name: "x", arg: 1, scope: !6230, file: !6231, line: 366, type: !642)
!6230 = distinct !DISubprogram(name: "fls64", scope: !6231, file: !6231, line: 366, type: !6232, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6231 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6232 = !DISubroutineType(types: !6233)
!6233 = !{!405, !642}
!6234 = !DILocation(line: 366, column: 40, scope: !6230, inlinedAt: !6235)
!6235 = distinct !DILocation(line: 46, column: 9, scope: !6225)
!6236 = !DILocalVariable(name: "bitpos", scope: !6230, file: !6231, line: 368, type: !405)
!6237 = !DILocation(line: 368, column: 6, scope: !6230, inlinedAt: !6235)
!6238 = !DILocalVariable(name: "size", arg: 1, scope: !6225, file: !6226, line: 29, type: !716)
!6239 = !DILocation(line: 29, column: 63, scope: !6225)
!6240 = !DILocation(line: 31, column: 27, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6225, file: !6226, line: 31, column: 6)
!6242 = !DILocation(line: 31, column: 6, scope: !6241)
!6243 = !DILocation(line: 31, column: 6, scope: !6225)
!6244 = !DILocation(line: 32, column: 8, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6246, file: !6226, line: 32, column: 7)
!6246 = distinct !DILexicalBlock(scope: !6241, file: !6226, line: 31, column: 34)
!6247 = !DILocation(line: 32, column: 7, scope: !6246)
!6248 = !DILocation(line: 33, column: 4, scope: !6245)
!6249 = !DILocation(line: 35, column: 7, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6246, file: !6226, line: 35, column: 7)
!6251 = !DILocation(line: 35, column: 12, scope: !6250)
!6252 = !DILocation(line: 35, column: 7, scope: !6246)
!6253 = !DILocation(line: 36, column: 4, scope: !6250)
!6254 = !DILocation(line: 38, column: 10, scope: !6246)
!6255 = !DILocation(line: 38, column: 28, scope: !6246)
!6256 = !DILocation(line: 38, column: 41, scope: !6246)
!6257 = !DILocation(line: 38, column: 3, scope: !6246)
!6258 = !DILocation(line: 41, column: 6, scope: !6225)
!6259 = !DILocation(line: 42, column: 7, scope: !6225)
!6260 = !DILocation(line: 46, column: 15, scope: !6225)
!6261 = !DILocation(line: 374, column: 2, scope: !6230, inlinedAt: !6235)
!6262 = !DILocation(line: 376, column: 14, scope: !6230, inlinedAt: !6235)
!6263 = !{i32 419550}
!6264 = !DILocation(line: 377, column: 9, scope: !6230, inlinedAt: !6235)
!6265 = !DILocation(line: 377, column: 16, scope: !6230, inlinedAt: !6235)
!6266 = !DILocation(line: 46, column: 2, scope: !6225)
!6267 = !DILocation(line: 48, column: 1, scope: !6225)
!6268 = distinct !DISubprogram(name: "__ilog2_u64", scope: !6269, file: !6269, line: 30, type: !6270, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6269 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!6270 = !DISubroutineType(types: !6271)
!6271 = !{!405, !757}
!6272 = !DILocation(line: 366, column: 40, scope: !6230, inlinedAt: !6273)
!6273 = distinct !DILocation(line: 32, column: 9, scope: !6268)
!6274 = !DILocation(line: 368, column: 6, scope: !6230, inlinedAt: !6273)
!6275 = !DILocalVariable(name: "n", arg: 1, scope: !6268, file: !6269, line: 30, type: !757)
!6276 = !DILocation(line: 30, column: 21, scope: !6268)
!6277 = !DILocation(line: 32, column: 15, scope: !6268)
!6278 = !DILocation(line: 374, column: 2, scope: !6230, inlinedAt: !6273)
!6279 = !DILocation(line: 376, column: 14, scope: !6230, inlinedAt: !6273)
!6280 = !DILocation(line: 377, column: 9, scope: !6230, inlinedAt: !6273)
!6281 = !DILocation(line: 377, column: 16, scope: !6230, inlinedAt: !6273)
!6282 = !DILocation(line: 32, column: 18, scope: !6268)
!6283 = !DILocation(line: 32, column: 2, scope: !6268)
!6284 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !6285, file: !6285, line: 137, type: !6286, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6285 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!6286 = !DISubroutineType(types: !6287)
!6287 = !{!398, !1511, !2611, !919, !396}
!6288 = !DILocalVariable(name: "s", arg: 1, scope: !6284, file: !6285, line: 137, type: !1511)
!6289 = !DILocation(line: 137, column: 54, scope: !6284)
!6290 = !DILocalVariable(name: "object", arg: 2, scope: !6284, file: !6285, line: 137, type: !2611)
!6291 = !DILocation(line: 137, column: 69, scope: !6284)
!6292 = !DILocalVariable(name: "size", arg: 3, scope: !6284, file: !6285, line: 138, type: !919)
!6293 = !DILocation(line: 138, column: 12, scope: !6284)
!6294 = !DILocalVariable(name: "flags", arg: 4, scope: !6284, file: !6285, line: 138, type: !396)
!6295 = !DILocation(line: 138, column: 24, scope: !6284)
!6296 = !DILocation(line: 140, column: 17, scope: !6284)
!6297 = !DILocation(line: 140, column: 2, scope: !6284)
!6298 = distinct !DISubprogram(name: "drxk_release", scope: !3, file: !3, line: 6284, type: !536, scopeLine: 6285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6299 = !DILocalVariable(name: "fe", arg: 1, scope: !6298, file: !3, line: 6284, type: !495)
!6300 = !DILocation(line: 6284, column: 47, scope: !6298)
!6301 = !DILocalVariable(name: "state", scope: !6298, file: !3, line: 6286, type: !4562)
!6302 = !DILocation(line: 6286, column: 21, scope: !6298)
!6303 = !DILocation(line: 6286, column: 29, scope: !6298)
!6304 = !DILocation(line: 6286, column: 33, scope: !6298)
!6305 = !DILocation(line: 6288, column: 2, scope: !6298)
!6306 = !DILocation(line: 6288, column: 2, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 6288, column: 2)
!6308 = distinct !DILexicalBlock(scope: !6298, file: !3, line: 6288, column: 2)
!6309 = !DILocation(line: 6288, column: 2, scope: !6308)
!6310 = !DILocation(line: 6289, column: 19, scope: !6298)
!6311 = !DILocation(line: 6289, column: 26, scope: !6298)
!6312 = !DILocation(line: 6289, column: 2, scope: !6298)
!6313 = !DILocation(line: 6291, column: 8, scope: !6298)
!6314 = !DILocation(line: 6291, column: 2, scope: !6298)
!6315 = !DILocation(line: 6292, column: 1, scope: !6298)
!6316 = distinct !DISubprogram(name: "drxk_sleep", scope: !3, file: !3, line: 6294, type: !542, scopeLine: 6295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6317 = !DILocalVariable(name: "fe", arg: 1, scope: !6316, file: !3, line: 6294, type: !495)
!6318 = !DILocation(line: 6294, column: 44, scope: !6316)
!6319 = !DILocalVariable(name: "state", scope: !6316, file: !3, line: 6296, type: !4562)
!6320 = !DILocation(line: 6296, column: 21, scope: !6316)
!6321 = !DILocation(line: 6296, column: 29, scope: !6316)
!6322 = !DILocation(line: 6296, column: 33, scope: !6316)
!6323 = !DILocation(line: 6298, column: 2, scope: !6316)
!6324 = !DILocation(line: 6298, column: 2, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6326, file: !3, line: 6298, column: 2)
!6326 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 6298, column: 2)
!6327 = !DILocation(line: 6298, column: 2, scope: !6326)
!6328 = !DILocation(line: 6300, column: 6, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 6300, column: 6)
!6330 = !DILocation(line: 6300, column: 13, scope: !6329)
!6331 = !DILocation(line: 6300, column: 26, scope: !6329)
!6332 = !DILocation(line: 6300, column: 6, scope: !6316)
!6333 = !DILocation(line: 6301, column: 3, scope: !6329)
!6334 = !DILocation(line: 6302, column: 6, scope: !6335)
!6335 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 6302, column: 6)
!6336 = !DILocation(line: 6302, column: 13, scope: !6335)
!6337 = !DILocation(line: 6302, column: 26, scope: !6335)
!6338 = !DILocation(line: 6302, column: 6, scope: !6316)
!6339 = !DILocation(line: 6303, column: 3, scope: !6335)
!6340 = !DILocation(line: 6305, column: 12, scope: !6316)
!6341 = !DILocation(line: 6305, column: 2, scope: !6316)
!6342 = !DILocation(line: 6306, column: 2, scope: !6316)
!6343 = !DILocation(line: 6307, column: 1, scope: !6316)
!6344 = distinct !DISubprogram(name: "drxk_set_parameters", scope: !3, file: !3, line: 6321, type: !542, scopeLine: 6322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6345 = !DILocalVariable(name: "fe", arg: 1, scope: !6344, file: !3, line: 6321, type: !495)
!6346 = !DILocation(line: 6321, column: 53, scope: !6344)
!6347 = !DILocalVariable(name: "p", scope: !6344, file: !3, line: 6323, type: !575)
!6348 = !DILocation(line: 6323, column: 34, scope: !6344)
!6349 = !DILocation(line: 6323, column: 39, scope: !6344)
!6350 = !DILocation(line: 6323, column: 43, scope: !6344)
!6351 = !DILocalVariable(name: "delsys", scope: !6344, file: !3, line: 6324, type: !411)
!6352 = !DILocation(line: 6324, column: 6, scope: !6344)
!6353 = !DILocation(line: 6324, column: 16, scope: !6344)
!6354 = !DILocation(line: 6324, column: 19, scope: !6344)
!6355 = !DILocalVariable(name: "old_delsys", scope: !6344, file: !3, line: 6324, type: !411)
!6356 = !DILocation(line: 6324, column: 36, scope: !6344)
!6357 = !DILocalVariable(name: "state", scope: !6344, file: !3, line: 6325, type: !4562)
!6358 = !DILocation(line: 6325, column: 21, scope: !6344)
!6359 = !DILocation(line: 6325, column: 29, scope: !6344)
!6360 = !DILocation(line: 6325, column: 33, scope: !6344)
!6361 = !DILocalVariable(name: "IF", scope: !6344, file: !3, line: 6326, type: !411)
!6362 = !DILocation(line: 6326, column: 6, scope: !6344)
!6363 = !DILocation(line: 6328, column: 2, scope: !6344)
!6364 = !DILocation(line: 6328, column: 2, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 6328, column: 2)
!6366 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 6328, column: 2)
!6367 = !DILocation(line: 6328, column: 2, scope: !6366)
!6368 = !DILocation(line: 6330, column: 6, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 6330, column: 6)
!6370 = !DILocation(line: 6330, column: 13, scope: !6369)
!6371 = !DILocation(line: 6330, column: 26, scope: !6369)
!6372 = !DILocation(line: 6330, column: 6, scope: !6344)
!6373 = !DILocation(line: 6331, column: 3, scope: !6369)
!6374 = !DILocation(line: 6333, column: 6, scope: !6375)
!6375 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 6333, column: 6)
!6376 = !DILocation(line: 6333, column: 13, scope: !6375)
!6377 = !DILocation(line: 6333, column: 26, scope: !6375)
!6378 = !DILocation(line: 6333, column: 6, scope: !6344)
!6379 = !DILocation(line: 6334, column: 3, scope: !6375)
!6380 = !DILocation(line: 6336, column: 7, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 6336, column: 6)
!6382 = !DILocation(line: 6336, column: 11, scope: !6381)
!6383 = !DILocation(line: 6336, column: 15, scope: !6381)
!6384 = !DILocation(line: 6336, column: 25, scope: !6381)
!6385 = !DILocation(line: 6336, column: 6, scope: !6344)
!6386 = !DILocation(line: 6337, column: 3, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 6336, column: 43)
!6388 = !DILocation(line: 6338, column: 3, scope: !6387)
!6389 = !DILocation(line: 6341, column: 6, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 6341, column: 6)
!6391 = !DILocation(line: 6341, column: 10, scope: !6390)
!6392 = !DILocation(line: 6341, column: 14, scope: !6390)
!6393 = !DILocation(line: 6341, column: 6, scope: !6344)
!6394 = !DILocation(line: 6342, column: 3, scope: !6390)
!6395 = !DILocation(line: 6342, column: 7, scope: !6390)
!6396 = !DILocation(line: 6342, column: 11, scope: !6390)
!6397 = !DILocation(line: 6342, column: 25, scope: !6390)
!6398 = !DILocation(line: 6343, column: 6, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 6343, column: 6)
!6400 = !DILocation(line: 6343, column: 10, scope: !6399)
!6401 = !DILocation(line: 6343, column: 14, scope: !6399)
!6402 = !DILocation(line: 6343, column: 24, scope: !6399)
!6403 = !DILocation(line: 6343, column: 6, scope: !6344)
!6404 = !DILocation(line: 6344, column: 3, scope: !6399)
!6405 = !DILocation(line: 6344, column: 7, scope: !6399)
!6406 = !DILocation(line: 6344, column: 11, scope: !6399)
!6407 = !DILocation(line: 6344, column: 21, scope: !6399)
!6408 = !DILocation(line: 6344, column: 32, scope: !6399)
!6409 = !DILocation(line: 6345, column: 6, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 6345, column: 6)
!6411 = !DILocation(line: 6345, column: 10, scope: !6410)
!6412 = !DILocation(line: 6345, column: 14, scope: !6410)
!6413 = !DILocation(line: 6345, column: 6, scope: !6344)
!6414 = !DILocation(line: 6346, column: 3, scope: !6410)
!6415 = !DILocation(line: 6346, column: 7, scope: !6410)
!6416 = !DILocation(line: 6346, column: 11, scope: !6410)
!6417 = !DILocation(line: 6346, column: 25, scope: !6410)
!6418 = !DILocation(line: 6348, column: 15, scope: !6344)
!6419 = !DILocation(line: 6348, column: 22, scope: !6344)
!6420 = !DILocation(line: 6348, column: 28, scope: !6344)
!6421 = !DILocation(line: 6348, column: 13, scope: !6344)
!6422 = !DILocation(line: 6349, column: 2, scope: !6344)
!6423 = !DILocation(line: 6349, column: 9, scope: !6344)
!6424 = !DILocation(line: 6349, column: 18, scope: !6344)
!6425 = !DILocation(line: 6349, column: 17, scope: !6344)
!6426 = !DILocation(line: 6351, column: 6, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 6351, column: 6)
!6428 = !DILocation(line: 6351, column: 20, scope: !6427)
!6429 = !DILocation(line: 6351, column: 17, scope: !6427)
!6430 = !DILocation(line: 6351, column: 6, scope: !6344)
!6431 = !DILocation(line: 6352, column: 13, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6427, file: !3, line: 6351, column: 28)
!6433 = !DILocation(line: 6352, column: 3, scope: !6432)
!6434 = !DILocation(line: 6353, column: 11, scope: !6432)
!6435 = !DILocation(line: 6353, column: 3, scope: !6432)
!6436 = !DILocation(line: 6356, column: 9, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 6356, column: 8)
!6438 = distinct !DILexicalBlock(scope: !6432, file: !3, line: 6353, column: 19)
!6439 = !DILocation(line: 6356, column: 16, scope: !6437)
!6440 = !DILocation(line: 6356, column: 8, scope: !6438)
!6441 = !DILocation(line: 6357, column: 5, scope: !6437)
!6442 = !DILocation(line: 6358, column: 29, scope: !6438)
!6443 = !DILocation(line: 6358, column: 36, scope: !6438)
!6444 = !DILocation(line: 6358, column: 28, scope: !6438)
!6445 = !DILocation(line: 6358, column: 4, scope: !6438)
!6446 = !DILocation(line: 6358, column: 11, scope: !6438)
!6447 = !DILocation(line: 6358, column: 26, scope: !6438)
!6448 = !DILocation(line: 6360, column: 8, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 6360, column: 8)
!6450 = !DILocation(line: 6360, column: 15, scope: !6449)
!6451 = !DILocation(line: 6360, column: 8, scope: !6438)
!6452 = !DILocation(line: 6361, column: 23, scope: !6449)
!6453 = !DILocation(line: 6361, column: 5, scope: !6449)
!6454 = !DILocation(line: 6363, column: 23, scope: !6449)
!6455 = !DILocation(line: 6363, column: 5, scope: !6449)
!6456 = !DILocation(line: 6364, column: 4, scope: !6438)
!6457 = !DILocation(line: 6366, column: 9, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 6366, column: 8)
!6459 = !DILocation(line: 6366, column: 16, scope: !6458)
!6460 = !DILocation(line: 6366, column: 8, scope: !6438)
!6461 = !DILocation(line: 6367, column: 5, scope: !6458)
!6462 = !DILocation(line: 6368, column: 22, scope: !6438)
!6463 = !DILocation(line: 6368, column: 4, scope: !6438)
!6464 = !DILocation(line: 6369, column: 4, scope: !6438)
!6465 = !DILocation(line: 6371, column: 4, scope: !6438)
!6466 = !DILocation(line: 6373, column: 2, scope: !6432)
!6467 = !DILocation(line: 6375, column: 2, scope: !6344)
!6468 = !DILocation(line: 6375, column: 6, scope: !6344)
!6469 = !DILocation(line: 6375, column: 10, scope: !6344)
!6470 = !DILocation(line: 6375, column: 20, scope: !6344)
!6471 = !DILocation(line: 6375, column: 37, scope: !6344)
!6472 = !DILocation(line: 6376, column: 8, scope: !6344)
!6473 = !DILocation(line: 6376, column: 18, scope: !6344)
!6474 = !DILocation(line: 6376, column: 2, scope: !6344)
!6475 = !DILocation(line: 6379, column: 2, scope: !6344)
!6476 = !DILocation(line: 6379, column: 5, scope: !6344)
!6477 = !DILocation(line: 6379, column: 14, scope: !6344)
!6478 = !DILocation(line: 6379, column: 22, scope: !6344)
!6479 = !DILocation(line: 6379, column: 28, scope: !6344)
!6480 = !DILocation(line: 6380, column: 2, scope: !6344)
!6481 = !DILocation(line: 6380, column: 5, scope: !6344)
!6482 = !DILocation(line: 6380, column: 9, scope: !6344)
!6483 = !DILocation(line: 6380, column: 17, scope: !6344)
!6484 = !DILocation(line: 6380, column: 23, scope: !6344)
!6485 = !DILocation(line: 6381, column: 2, scope: !6344)
!6486 = !DILocation(line: 6381, column: 5, scope: !6344)
!6487 = !DILocation(line: 6381, column: 17, scope: !6344)
!6488 = !DILocation(line: 6381, column: 25, scope: !6344)
!6489 = !DILocation(line: 6381, column: 31, scope: !6344)
!6490 = !DILocation(line: 6382, column: 2, scope: !6344)
!6491 = !DILocation(line: 6382, column: 5, scope: !6344)
!6492 = !DILocation(line: 6382, column: 17, scope: !6344)
!6493 = !DILocation(line: 6382, column: 25, scope: !6344)
!6494 = !DILocation(line: 6382, column: 31, scope: !6344)
!6495 = !DILocation(line: 6383, column: 2, scope: !6344)
!6496 = !DILocation(line: 6383, column: 5, scope: !6344)
!6497 = !DILocation(line: 6383, column: 19, scope: !6344)
!6498 = !DILocation(line: 6383, column: 27, scope: !6344)
!6499 = !DILocation(line: 6383, column: 33, scope: !6344)
!6500 = !DILocation(line: 6384, column: 2, scope: !6344)
!6501 = !DILocation(line: 6384, column: 5, scope: !6344)
!6502 = !DILocation(line: 6384, column: 19, scope: !6344)
!6503 = !DILocation(line: 6384, column: 27, scope: !6344)
!6504 = !DILocation(line: 6384, column: 33, scope: !6344)
!6505 = !DILocation(line: 6385, column: 2, scope: !6344)
!6506 = !DILocation(line: 6385, column: 5, scope: !6344)
!6507 = !DILocation(line: 6385, column: 20, scope: !6344)
!6508 = !DILocation(line: 6385, column: 28, scope: !6344)
!6509 = !DILocation(line: 6385, column: 34, scope: !6344)
!6510 = !DILocation(line: 6386, column: 2, scope: !6344)
!6511 = !DILocation(line: 6386, column: 5, scope: !6344)
!6512 = !DILocation(line: 6386, column: 20, scope: !6344)
!6513 = !DILocation(line: 6386, column: 28, scope: !6344)
!6514 = !DILocation(line: 6386, column: 34, scope: !6344)
!6515 = !DILocation(line: 6390, column: 2, scope: !6344)
!6516 = !DILocation(line: 6391, column: 1, scope: !6344)
!6517 = distinct !DISubprogram(name: "drxk_get_tune_settings", scope: !3, file: !3, line: 6689, type: !563, scopeLine: 6691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6518 = !DILocalVariable(name: "fe", arg: 1, scope: !6517, file: !3, line: 6689, type: !495)
!6519 = !DILocation(line: 6689, column: 56, scope: !6517)
!6520 = !DILocalVariable(name: "sets", arg: 2, scope: !6517, file: !3, line: 6690, type: !565)
!6521 = !DILocation(line: 6690, column: 42, scope: !6517)
!6522 = !DILocalVariable(name: "state", scope: !6517, file: !3, line: 6692, type: !4562)
!6523 = !DILocation(line: 6692, column: 21, scope: !6517)
!6524 = !DILocation(line: 6692, column: 29, scope: !6517)
!6525 = !DILocation(line: 6692, column: 33, scope: !6517)
!6526 = !DILocalVariable(name: "p", scope: !6517, file: !3, line: 6693, type: !575)
!6527 = !DILocation(line: 6693, column: 34, scope: !6517)
!6528 = !DILocation(line: 6693, column: 39, scope: !6517)
!6529 = !DILocation(line: 6693, column: 43, scope: !6517)
!6530 = !DILocation(line: 6695, column: 2, scope: !6517)
!6531 = !DILocation(line: 6695, column: 2, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 6695, column: 2)
!6533 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 6695, column: 2)
!6534 = !DILocation(line: 6695, column: 2, scope: !6533)
!6535 = !DILocation(line: 6697, column: 6, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 6697, column: 6)
!6537 = !DILocation(line: 6697, column: 13, scope: !6536)
!6538 = !DILocation(line: 6697, column: 26, scope: !6536)
!6539 = !DILocation(line: 6697, column: 6, scope: !6517)
!6540 = !DILocation(line: 6698, column: 3, scope: !6536)
!6541 = !DILocation(line: 6699, column: 6, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 6699, column: 6)
!6543 = !DILocation(line: 6699, column: 13, scope: !6542)
!6544 = !DILocation(line: 6699, column: 26, scope: !6542)
!6545 = !DILocation(line: 6699, column: 6, scope: !6517)
!6546 = !DILocation(line: 6700, column: 3, scope: !6542)
!6547 = !DILocation(line: 6702, column: 10, scope: !6517)
!6548 = !DILocation(line: 6702, column: 13, scope: !6517)
!6549 = !DILocation(line: 6702, column: 2, scope: !6517)
!6550 = !DILocation(line: 6706, column: 3, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6517, file: !3, line: 6702, column: 30)
!6552 = !DILocation(line: 6706, column: 9, scope: !6551)
!6553 = !DILocation(line: 6706, column: 22, scope: !6551)
!6554 = !DILocation(line: 6707, column: 3, scope: !6551)
!6555 = !DILocation(line: 6707, column: 9, scope: !6551)
!6556 = !DILocation(line: 6707, column: 19, scope: !6551)
!6557 = !DILocation(line: 6708, column: 3, scope: !6551)
!6558 = !DILocation(line: 6708, column: 9, scope: !6551)
!6559 = !DILocation(line: 6708, column: 19, scope: !6551)
!6560 = !DILocation(line: 6709, column: 3, scope: !6551)
!6561 = !DILocation(line: 6711, column: 3, scope: !6551)
!6562 = !DILocation(line: 6713, column: 1, scope: !6517)
!6563 = distinct !DISubprogram(name: "drxk_read_status", scope: !3, file: !3, line: 6618, type: !658, scopeLine: 6619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6564 = !DILocalVariable(name: "fe", arg: 1, scope: !6563, file: !3, line: 6618, type: !495)
!6565 = !DILocation(line: 6618, column: 50, scope: !6563)
!6566 = !DILocalVariable(name: "status", arg: 2, scope: !6563, file: !3, line: 6618, type: !555)
!6567 = !DILocation(line: 6618, column: 70, scope: !6563)
!6568 = !DILocalVariable(name: "state", scope: !6563, file: !3, line: 6620, type: !4562)
!6569 = !DILocation(line: 6620, column: 21, scope: !6563)
!6570 = !DILocation(line: 6620, column: 29, scope: !6563)
!6571 = !DILocation(line: 6620, column: 33, scope: !6563)
!6572 = !DILocalVariable(name: "rc", scope: !6563, file: !3, line: 6621, type: !405)
!6573 = !DILocation(line: 6621, column: 6, scope: !6563)
!6574 = !DILocation(line: 6623, column: 2, scope: !6563)
!6575 = !DILocation(line: 6623, column: 2, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 6623, column: 2)
!6577 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 6623, column: 2)
!6578 = !DILocation(line: 6623, column: 2, scope: !6577)
!6579 = !DILocation(line: 6625, column: 22, scope: !6563)
!6580 = !DILocation(line: 6625, column: 7, scope: !6563)
!6581 = !DILocation(line: 6625, column: 5, scope: !6563)
!6582 = !DILocation(line: 6626, column: 6, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 6626, column: 6)
!6584 = !DILocation(line: 6626, column: 9, scope: !6583)
!6585 = !DILocation(line: 6626, column: 6, scope: !6563)
!6586 = !DILocation(line: 6627, column: 10, scope: !6583)
!6587 = !DILocation(line: 6627, column: 3, scope: !6583)
!6588 = !DILocation(line: 6629, column: 12, scope: !6563)
!6589 = !DILocation(line: 6629, column: 19, scope: !6563)
!6590 = !DILocation(line: 6629, column: 3, scope: !6563)
!6591 = !DILocation(line: 6629, column: 10, scope: !6563)
!6592 = !DILocation(line: 6631, column: 2, scope: !6563)
!6593 = !DILocation(line: 6632, column: 1, scope: !6563)
!6594 = distinct !DISubprogram(name: "drxk_read_signal_strength", scope: !3, file: !3, line: 6634, type: !667, scopeLine: 6636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6595 = !DILocalVariable(name: "fe", arg: 1, scope: !6594, file: !3, line: 6634, type: !495)
!6596 = !DILocation(line: 6634, column: 59, scope: !6594)
!6597 = !DILocalVariable(name: "strength", arg: 2, scope: !6594, file: !3, line: 6635, type: !669)
!6598 = !DILocation(line: 6635, column: 15, scope: !6594)
!6599 = !DILocalVariable(name: "state", scope: !6594, file: !3, line: 6637, type: !4562)
!6600 = !DILocation(line: 6637, column: 21, scope: !6594)
!6601 = !DILocation(line: 6637, column: 29, scope: !6594)
!6602 = !DILocation(line: 6637, column: 33, scope: !6594)
!6603 = !DILocalVariable(name: "c", scope: !6594, file: !3, line: 6638, type: !575)
!6604 = !DILocation(line: 6638, column: 34, scope: !6594)
!6605 = !DILocation(line: 6638, column: 39, scope: !6594)
!6606 = !DILocation(line: 6638, column: 43, scope: !6594)
!6607 = !DILocation(line: 6640, column: 2, scope: !6594)
!6608 = !DILocation(line: 6640, column: 2, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 6640, column: 2)
!6610 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 6640, column: 2)
!6611 = !DILocation(line: 6640, column: 2, scope: !6610)
!6612 = !DILocation(line: 6642, column: 6, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 6642, column: 6)
!6614 = !DILocation(line: 6642, column: 13, scope: !6613)
!6615 = !DILocation(line: 6642, column: 26, scope: !6613)
!6616 = !DILocation(line: 6642, column: 6, scope: !6594)
!6617 = !DILocation(line: 6643, column: 3, scope: !6613)
!6618 = !DILocation(line: 6644, column: 6, scope: !6619)
!6619 = distinct !DILexicalBlock(scope: !6594, file: !3, line: 6644, column: 6)
!6620 = !DILocation(line: 6644, column: 13, scope: !6619)
!6621 = !DILocation(line: 6644, column: 26, scope: !6619)
!6622 = !DILocation(line: 6644, column: 6, scope: !6594)
!6623 = !DILocation(line: 6645, column: 3, scope: !6619)
!6624 = !DILocation(line: 6647, column: 14, scope: !6594)
!6625 = !DILocation(line: 6647, column: 17, scope: !6594)
!6626 = !DILocation(line: 6647, column: 26, scope: !6594)
!6627 = !DILocation(line: 6647, column: 34, scope: !6594)
!6628 = !DILocation(line: 6647, column: 3, scope: !6594)
!6629 = !DILocation(line: 6647, column: 12, scope: !6594)
!6630 = !DILocation(line: 6648, column: 2, scope: !6594)
!6631 = !DILocation(line: 6649, column: 1, scope: !6594)
!6632 = distinct !DISubprogram(name: "drxk_read_snr", scope: !3, file: !3, line: 6651, type: !667, scopeLine: 6652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6633 = !DILocalVariable(name: "fe", arg: 1, scope: !6632, file: !3, line: 6651, type: !495)
!6634 = !DILocation(line: 6651, column: 47, scope: !6632)
!6635 = !DILocalVariable(name: "snr", arg: 2, scope: !6632, file: !3, line: 6651, type: !669)
!6636 = !DILocation(line: 6651, column: 56, scope: !6632)
!6637 = !DILocalVariable(name: "state", scope: !6632, file: !3, line: 6653, type: !4562)
!6638 = !DILocation(line: 6653, column: 21, scope: !6632)
!6639 = !DILocation(line: 6653, column: 29, scope: !6632)
!6640 = !DILocation(line: 6653, column: 33, scope: !6632)
!6641 = !DILocalVariable(name: "snr2", scope: !6632, file: !3, line: 6654, type: !772)
!6642 = !DILocation(line: 6654, column: 6, scope: !6632)
!6643 = !DILocation(line: 6656, column: 2, scope: !6632)
!6644 = !DILocation(line: 6656, column: 2, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 6656, column: 2)
!6646 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 6656, column: 2)
!6647 = !DILocation(line: 6656, column: 2, scope: !6646)
!6648 = !DILocation(line: 6658, column: 6, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 6658, column: 6)
!6650 = !DILocation(line: 6658, column: 13, scope: !6649)
!6651 = !DILocation(line: 6658, column: 26, scope: !6649)
!6652 = !DILocation(line: 6658, column: 6, scope: !6632)
!6653 = !DILocation(line: 6659, column: 3, scope: !6649)
!6654 = !DILocation(line: 6660, column: 6, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 6660, column: 6)
!6656 = !DILocation(line: 6660, column: 13, scope: !6655)
!6657 = !DILocation(line: 6660, column: 26, scope: !6655)
!6658 = !DILocation(line: 6660, column: 6, scope: !6632)
!6659 = !DILocation(line: 6661, column: 3, scope: !6655)
!6660 = !DILocation(line: 6663, column: 22, scope: !6632)
!6661 = !DILocation(line: 6663, column: 2, scope: !6632)
!6662 = !DILocation(line: 6666, column: 6, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 6666, column: 6)
!6664 = !DILocation(line: 6666, column: 11, scope: !6663)
!6665 = !DILocation(line: 6666, column: 6, scope: !6632)
!6666 = !DILocation(line: 6667, column: 8, scope: !6663)
!6667 = !DILocation(line: 6667, column: 3, scope: !6663)
!6668 = !DILocation(line: 6668, column: 9, scope: !6632)
!6669 = !DILocation(line: 6668, column: 14, scope: !6632)
!6670 = !DILocation(line: 6668, column: 3, scope: !6632)
!6671 = !DILocation(line: 6668, column: 7, scope: !6632)
!6672 = !DILocation(line: 6669, column: 2, scope: !6632)
!6673 = !DILocation(line: 6670, column: 1, scope: !6632)
!6674 = distinct !DISubprogram(name: "drxk_read_ucblocks", scope: !3, file: !3, line: 6672, type: !662, scopeLine: 6673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6675 = !DILocalVariable(name: "fe", arg: 1, scope: !6674, file: !3, line: 6672, type: !495)
!6676 = !DILocation(line: 6672, column: 52, scope: !6674)
!6677 = !DILocalVariable(name: "ucblocks", arg: 2, scope: !6674, file: !3, line: 6672, type: !664)
!6678 = !DILocation(line: 6672, column: 61, scope: !6674)
!6679 = !DILocalVariable(name: "state", scope: !6674, file: !3, line: 6674, type: !4562)
!6680 = !DILocation(line: 6674, column: 21, scope: !6674)
!6681 = !DILocation(line: 6674, column: 29, scope: !6674)
!6682 = !DILocation(line: 6674, column: 33, scope: !6674)
!6683 = !DILocalVariable(name: "err", scope: !6674, file: !3, line: 6675, type: !408)
!6684 = !DILocation(line: 6675, column: 6, scope: !6674)
!6685 = !DILocation(line: 6677, column: 2, scope: !6674)
!6686 = !DILocation(line: 6677, column: 2, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !3, line: 6677, column: 2)
!6688 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 6677, column: 2)
!6689 = !DILocation(line: 6677, column: 2, scope: !6688)
!6690 = !DILocation(line: 6679, column: 6, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 6679, column: 6)
!6692 = !DILocation(line: 6679, column: 13, scope: !6691)
!6693 = !DILocation(line: 6679, column: 26, scope: !6691)
!6694 = !DILocation(line: 6679, column: 6, scope: !6674)
!6695 = !DILocation(line: 6680, column: 3, scope: !6691)
!6696 = !DILocation(line: 6681, column: 6, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6674, file: !3, line: 6681, column: 6)
!6698 = !DILocation(line: 6681, column: 13, scope: !6697)
!6699 = !DILocation(line: 6681, column: 26, scope: !6697)
!6700 = !DILocation(line: 6681, column: 6, scope: !6674)
!6701 = !DILocation(line: 6682, column: 3, scope: !6697)
!6702 = !DILocation(line: 6684, column: 26, scope: !6674)
!6703 = !DILocation(line: 6684, column: 2, scope: !6674)
!6704 = !DILocation(line: 6685, column: 20, scope: !6674)
!6705 = !DILocation(line: 6685, column: 14, scope: !6674)
!6706 = !DILocation(line: 6685, column: 3, scope: !6674)
!6707 = !DILocation(line: 6685, column: 12, scope: !6674)
!6708 = !DILocation(line: 6686, column: 2, scope: !6674)
!6709 = !DILocation(line: 6687, column: 1, scope: !6674)
!6710 = distinct !DISubprogram(name: "drxk_gate_ctrl", scope: !3, file: !3, line: 6309, type: !719, scopeLine: 6310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6711 = !DILocalVariable(name: "fe", arg: 1, scope: !6710, file: !3, line: 6309, type: !495)
!6712 = !DILocation(line: 6309, column: 48, scope: !6710)
!6713 = !DILocalVariable(name: "enable", arg: 2, scope: !6710, file: !3, line: 6309, type: !405)
!6714 = !DILocation(line: 6309, column: 56, scope: !6710)
!6715 = !DILocalVariable(name: "state", scope: !6710, file: !3, line: 6311, type: !4562)
!6716 = !DILocation(line: 6311, column: 21, scope: !6710)
!6717 = !DILocation(line: 6311, column: 29, scope: !6710)
!6718 = !DILocation(line: 6311, column: 33, scope: !6710)
!6719 = !DILocation(line: 6313, column: 2, scope: !6710)
!6720 = !DILocation(line: 6313, column: 2, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 6313, column: 2)
!6722 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 6313, column: 2)
!6723 = !DILocation(line: 6313, column: 2, scope: !6722)
!6724 = !DILocation(line: 6315, column: 6, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 6315, column: 6)
!6726 = !DILocation(line: 6315, column: 13, scope: !6725)
!6727 = !DILocation(line: 6315, column: 26, scope: !6725)
!6728 = !DILocation(line: 6315, column: 6, scope: !6710)
!6729 = !DILocation(line: 6316, column: 3, scope: !6725)
!6730 = !DILocation(line: 6318, column: 28, scope: !6710)
!6731 = !DILocation(line: 6318, column: 35, scope: !6710)
!6732 = !DILocation(line: 6318, column: 9, scope: !6710)
!6733 = !DILocation(line: 6318, column: 2, scope: !6710)
!6734 = !DILocation(line: 6319, column: 1, scope: !6710)
!6735 = distinct !DISubprogram(name: "shut_down", scope: !3, file: !3, line: 1855, type: !5239, scopeLine: 1856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6736 = !DILocalVariable(name: "state", arg: 1, scope: !6735, file: !3, line: 1855, type: !4562)
!6737 = !DILocation(line: 1855, column: 41, scope: !6735)
!6738 = !DILocation(line: 1857, column: 2, scope: !6735)
!6739 = !DILocation(line: 1857, column: 2, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6741, file: !3, line: 1857, column: 2)
!6741 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 1857, column: 2)
!6742 = !DILocation(line: 1857, column: 2, scope: !6741)
!6743 = !DILocation(line: 1859, column: 14, scope: !6735)
!6744 = !DILocation(line: 1859, column: 2, scope: !6735)
!6745 = !DILocation(line: 1860, column: 2, scope: !6735)
!6746 = distinct !DISubprogram(name: "mpegts_stop", scope: !3, file: !3, line: 1395, type: !5239, scopeLine: 1396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6747 = !DILocalVariable(name: "state", arg: 1, scope: !6746, file: !3, line: 1395, type: !4562)
!6748 = !DILocation(line: 1395, column: 43, scope: !6746)
!6749 = !DILocalVariable(name: "status", scope: !6746, file: !3, line: 1397, type: !405)
!6750 = !DILocation(line: 1397, column: 6, scope: !6746)
!6751 = !DILocalVariable(name: "fec_oc_snc_mode", scope: !6746, file: !3, line: 1398, type: !408)
!6752 = !DILocation(line: 1398, column: 6, scope: !6746)
!6753 = !DILocalVariable(name: "fec_oc_ipr_mode", scope: !6746, file: !3, line: 1399, type: !408)
!6754 = !DILocation(line: 1399, column: 6, scope: !6746)
!6755 = !DILocation(line: 1401, column: 2, scope: !6746)
!6756 = !DILocation(line: 1401, column: 2, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 1401, column: 2)
!6758 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1401, column: 2)
!6759 = !DILocation(line: 1401, column: 2, scope: !6758)
!6760 = !DILocation(line: 1404, column: 18, scope: !6746)
!6761 = !DILocation(line: 1404, column: 11, scope: !6746)
!6762 = !DILocation(line: 1404, column: 9, scope: !6746)
!6763 = !DILocation(line: 1405, column: 6, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1405, column: 6)
!6765 = !DILocation(line: 1405, column: 13, scope: !6764)
!6766 = !DILocation(line: 1405, column: 6, scope: !6746)
!6767 = !DILocation(line: 1406, column: 3, scope: !6764)
!6768 = !DILocation(line: 1407, column: 18, scope: !6746)
!6769 = !DILocation(line: 1408, column: 19, scope: !6746)
!6770 = !DILocation(line: 1408, column: 46, scope: !6746)
!6771 = !DILocation(line: 1408, column: 11, scope: !6746)
!6772 = !DILocation(line: 1408, column: 9, scope: !6746)
!6773 = !DILocation(line: 1409, column: 6, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1409, column: 6)
!6775 = !DILocation(line: 1409, column: 13, scope: !6774)
!6776 = !DILocation(line: 1409, column: 6, scope: !6746)
!6777 = !DILocation(line: 1410, column: 3, scope: !6774)
!6778 = !DILocation(line: 1413, column: 18, scope: !6746)
!6779 = !DILocation(line: 1413, column: 11, scope: !6746)
!6780 = !DILocation(line: 1413, column: 9, scope: !6746)
!6781 = !DILocation(line: 1414, column: 6, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1414, column: 6)
!6783 = !DILocation(line: 1414, column: 13, scope: !6782)
!6784 = !DILocation(line: 1414, column: 6, scope: !6746)
!6785 = !DILocation(line: 1415, column: 3, scope: !6782)
!6786 = !DILocation(line: 1416, column: 18, scope: !6746)
!6787 = !DILocation(line: 1417, column: 19, scope: !6746)
!6788 = !DILocation(line: 1417, column: 46, scope: !6746)
!6789 = !DILocation(line: 1417, column: 11, scope: !6746)
!6790 = !DILocation(line: 1417, column: 9, scope: !6746)
!6791 = !DILocation(line: 1417, column: 2, scope: !6746)
!6792 = !DILabel(scope: !6746, name: "error", file: !3, line: 1419)
!6793 = !DILocation(line: 1419, column: 1, scope: !6746)
!6794 = !DILocation(line: 1420, column: 6, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1420, column: 6)
!6796 = !DILocation(line: 1420, column: 13, scope: !6795)
!6797 = !DILocation(line: 1420, column: 6, scope: !6746)
!6798 = !DILocation(line: 1421, column: 3, scope: !6795)
!6799 = !DILocation(line: 1423, column: 9, scope: !6746)
!6800 = !DILocation(line: 1423, column: 2, scope: !6746)
!6801 = distinct !DISubprogram(name: "read16", scope: !3, file: !3, line: 312, type: !6802, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6802 = !DISubroutineType(types: !6803)
!6803 = !{!405, !4562, !411, !669}
!6804 = !DILocalVariable(name: "state", arg: 1, scope: !6801, file: !3, line: 312, type: !4562)
!6805 = !DILocation(line: 312, column: 38, scope: !6801)
!6806 = !DILocalVariable(name: "reg", arg: 2, scope: !6801, file: !3, line: 312, type: !411)
!6807 = !DILocation(line: 312, column: 49, scope: !6801)
!6808 = !DILocalVariable(name: "data", arg: 3, scope: !6801, file: !3, line: 312, type: !669)
!6809 = !DILocation(line: 312, column: 59, scope: !6801)
!6810 = !DILocation(line: 314, column: 22, scope: !6801)
!6811 = !DILocation(line: 314, column: 29, scope: !6801)
!6812 = !DILocation(line: 314, column: 34, scope: !6801)
!6813 = !DILocation(line: 314, column: 9, scope: !6801)
!6814 = !DILocation(line: 314, column: 2, scope: !6801)
!6815 = distinct !DISubprogram(name: "write16", scope: !3, file: !3, line: 376, type: !6816, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6816 = !DISubroutineType(types: !6817)
!6817 = !{!405, !4562, !411, !408}
!6818 = !DILocalVariable(name: "state", arg: 1, scope: !6815, file: !3, line: 376, type: !4562)
!6819 = !DILocation(line: 376, column: 39, scope: !6815)
!6820 = !DILocalVariable(name: "reg", arg: 2, scope: !6815, file: !3, line: 376, type: !411)
!6821 = !DILocation(line: 376, column: 50, scope: !6815)
!6822 = !DILocalVariable(name: "data", arg: 3, scope: !6815, file: !3, line: 376, type: !408)
!6823 = !DILocation(line: 376, column: 59, scope: !6815)
!6824 = !DILocation(line: 378, column: 23, scope: !6815)
!6825 = !DILocation(line: 378, column: 30, scope: !6815)
!6826 = !DILocation(line: 378, column: 35, scope: !6815)
!6827 = !DILocation(line: 378, column: 9, scope: !6815)
!6828 = !DILocation(line: 378, column: 2, scope: !6815)
!6829 = distinct !DISubprogram(name: "read16_flags", scope: !3, file: !3, line: 283, type: !6830, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6830 = !DISubroutineType(types: !6831)
!6831 = !{!405, !4562, !411, !669, !455}
!6832 = !DILocalVariable(name: "state", arg: 1, scope: !6829, file: !3, line: 283, type: !4562)
!6833 = !DILocation(line: 283, column: 44, scope: !6829)
!6834 = !DILocalVariable(name: "reg", arg: 2, scope: !6829, file: !3, line: 283, type: !411)
!6835 = !DILocation(line: 283, column: 55, scope: !6829)
!6836 = !DILocalVariable(name: "data", arg: 3, scope: !6829, file: !3, line: 283, type: !669)
!6837 = !DILocation(line: 283, column: 65, scope: !6829)
!6838 = !DILocalVariable(name: "flags", arg: 4, scope: !6829, file: !3, line: 283, type: !455)
!6839 = !DILocation(line: 283, column: 74, scope: !6829)
!6840 = !DILocalVariable(name: "status", scope: !6829, file: !3, line: 285, type: !405)
!6841 = !DILocation(line: 285, column: 6, scope: !6829)
!6842 = !DILocalVariable(name: "adr", scope: !6829, file: !3, line: 286, type: !455)
!6843 = !DILocation(line: 286, column: 5, scope: !6829)
!6844 = !DILocation(line: 286, column: 11, scope: !6829)
!6845 = !DILocation(line: 286, column: 18, scope: !6829)
!6846 = !DILocalVariable(name: "mm1", scope: !6829, file: !3, line: 286, type: !6847)
!6847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 32, elements: !647)
!6848 = !DILocation(line: 286, column: 33, scope: !6829)
!6849 = !DILocalVariable(name: "mm2", scope: !6829, file: !3, line: 286, type: !6850)
!6850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 16, elements: !2053)
!6851 = !DILocation(line: 286, column: 41, scope: !6829)
!6852 = !DILocalVariable(name: "len", scope: !6829, file: !3, line: 286, type: !455)
!6853 = !DILocation(line: 286, column: 49, scope: !6829)
!6854 = !DILocation(line: 288, column: 6, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 288, column: 6)
!6856 = !DILocation(line: 288, column: 13, scope: !6855)
!6857 = !DILocation(line: 288, column: 6, scope: !6829)
!6858 = !DILocation(line: 289, column: 9, scope: !6855)
!6859 = !DILocation(line: 289, column: 3, scope: !6855)
!6860 = !DILocation(line: 291, column: 6, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 291, column: 6)
!6862 = !DILocation(line: 291, column: 35, scope: !6861)
!6863 = !DILocation(line: 291, column: 39, scope: !6861)
!6864 = !DILocation(line: 291, column: 45, scope: !6861)
!6865 = !DILocation(line: 291, column: 6, scope: !6829)
!6866 = !DILocation(line: 292, column: 15, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 291, column: 52)
!6868 = !DILocation(line: 292, column: 19, scope: !6867)
!6869 = !DILocation(line: 292, column: 25, scope: !6867)
!6870 = !DILocation(line: 292, column: 33, scope: !6867)
!6871 = !DILocation(line: 292, column: 12, scope: !6867)
!6872 = !DILocation(line: 292, column: 3, scope: !6867)
!6873 = !DILocation(line: 292, column: 10, scope: !6867)
!6874 = !DILocation(line: 293, column: 14, scope: !6867)
!6875 = !DILocation(line: 293, column: 18, scope: !6867)
!6876 = !DILocation(line: 293, column: 25, scope: !6867)
!6877 = !DILocation(line: 293, column: 12, scope: !6867)
!6878 = !DILocation(line: 293, column: 3, scope: !6867)
!6879 = !DILocation(line: 293, column: 10, scope: !6867)
!6880 = !DILocation(line: 294, column: 14, scope: !6867)
!6881 = !DILocation(line: 294, column: 18, scope: !6867)
!6882 = !DILocation(line: 294, column: 25, scope: !6867)
!6883 = !DILocation(line: 294, column: 35, scope: !6867)
!6884 = !DILocation(line: 294, column: 33, scope: !6867)
!6885 = !DILocation(line: 294, column: 12, scope: !6867)
!6886 = !DILocation(line: 294, column: 3, scope: !6867)
!6887 = !DILocation(line: 294, column: 10, scope: !6867)
!6888 = !DILocation(line: 295, column: 14, scope: !6867)
!6889 = !DILocation(line: 295, column: 18, scope: !6867)
!6890 = !DILocation(line: 295, column: 24, scope: !6867)
!6891 = !DILocation(line: 295, column: 12, scope: !6867)
!6892 = !DILocation(line: 295, column: 3, scope: !6867)
!6893 = !DILocation(line: 295, column: 10, scope: !6867)
!6894 = !DILocation(line: 296, column: 7, scope: !6867)
!6895 = !DILocation(line: 297, column: 2, scope: !6867)
!6896 = !DILocation(line: 298, column: 14, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 297, column: 9)
!6898 = !DILocation(line: 298, column: 18, scope: !6897)
!6899 = !DILocation(line: 298, column: 24, scope: !6897)
!6900 = !DILocation(line: 298, column: 12, scope: !6897)
!6901 = !DILocation(line: 298, column: 3, scope: !6897)
!6902 = !DILocation(line: 298, column: 10, scope: !6897)
!6903 = !DILocation(line: 299, column: 15, scope: !6897)
!6904 = !DILocation(line: 299, column: 19, scope: !6897)
!6905 = !DILocation(line: 299, column: 26, scope: !6897)
!6906 = !DILocation(line: 299, column: 38, scope: !6897)
!6907 = !DILocation(line: 299, column: 42, scope: !6897)
!6908 = !DILocation(line: 299, column: 49, scope: !6897)
!6909 = !DILocation(line: 299, column: 34, scope: !6897)
!6910 = !DILocation(line: 299, column: 12, scope: !6897)
!6911 = !DILocation(line: 299, column: 3, scope: !6897)
!6912 = !DILocation(line: 299, column: 10, scope: !6897)
!6913 = !DILocation(line: 300, column: 7, scope: !6897)
!6914 = !DILocation(line: 302, column: 2, scope: !6829)
!6915 = !DILocation(line: 302, column: 2, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !3, line: 302, column: 2)
!6917 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 302, column: 2)
!6918 = !DILocation(line: 302, column: 2, scope: !6917)
!6919 = !DILocation(line: 303, column: 20, scope: !6829)
!6920 = !DILocation(line: 303, column: 27, scope: !6829)
!6921 = !DILocation(line: 303, column: 32, scope: !6829)
!6922 = !DILocation(line: 303, column: 37, scope: !6829)
!6923 = !DILocation(line: 303, column: 42, scope: !6829)
!6924 = !DILocation(line: 303, column: 11, scope: !6829)
!6925 = !DILocation(line: 303, column: 9, scope: !6829)
!6926 = !DILocation(line: 304, column: 6, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 304, column: 6)
!6928 = !DILocation(line: 304, column: 13, scope: !6927)
!6929 = !DILocation(line: 304, column: 6, scope: !6829)
!6930 = !DILocation(line: 305, column: 10, scope: !6927)
!6931 = !DILocation(line: 305, column: 3, scope: !6927)
!6932 = !DILocation(line: 306, column: 6, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 306, column: 6)
!6934 = !DILocation(line: 306, column: 6, scope: !6829)
!6935 = !DILocation(line: 307, column: 11, scope: !6933)
!6936 = !DILocation(line: 307, column: 21, scope: !6933)
!6937 = !DILocation(line: 307, column: 28, scope: !6933)
!6938 = !DILocation(line: 307, column: 18, scope: !6933)
!6939 = !DILocation(line: 307, column: 4, scope: !6933)
!6940 = !DILocation(line: 307, column: 9, scope: !6933)
!6941 = !DILocation(line: 307, column: 3, scope: !6933)
!6942 = !DILocation(line: 309, column: 2, scope: !6829)
!6943 = !DILocation(line: 310, column: 1, scope: !6829)
!6944 = distinct !DISubprogram(name: "i2c_read", scope: !3, file: !3, line: 249, type: !6945, scopeLine: 251, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!6945 = !DISubroutineType(types: !6946)
!6946 = !{!405, !4562, !455, !778, !405, !778, !405}
!6947 = !DILocalVariable(name: "state", arg: 1, scope: !6944, file: !3, line: 249, type: !4562)
!6948 = !DILocation(line: 249, column: 40, scope: !6944)
!6949 = !DILocalVariable(name: "adr", arg: 2, scope: !6944, file: !3, line: 250, type: !455)
!6950 = !DILocation(line: 250, column: 10, scope: !6944)
!6951 = !DILocalVariable(name: "msg", arg: 3, scope: !6944, file: !3, line: 250, type: !778)
!6952 = !DILocation(line: 250, column: 19, scope: !6944)
!6953 = !DILocalVariable(name: "len", arg: 4, scope: !6944, file: !3, line: 250, type: !405)
!6954 = !DILocation(line: 250, column: 28, scope: !6944)
!6955 = !DILocalVariable(name: "answ", arg: 5, scope: !6944, file: !3, line: 250, type: !778)
!6956 = !DILocation(line: 250, column: 37, scope: !6944)
!6957 = !DILocalVariable(name: "alen", arg: 6, scope: !6944, file: !3, line: 250, type: !405)
!6958 = !DILocation(line: 250, column: 47, scope: !6944)
!6959 = !DILocalVariable(name: "status", scope: !6944, file: !3, line: 252, type: !405)
!6960 = !DILocation(line: 252, column: 6, scope: !6944)
!6961 = !DILocalVariable(name: "msgs", scope: !6944, file: !3, line: 253, type: !6962)
!6962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4416, size: 256, elements: !2053)
!6963 = !DILocation(line: 253, column: 17, scope: !6944)
!6964 = !DILocation(line: 253, column: 27, scope: !6944)
!6965 = !DILocation(line: 254, column: 3, scope: !6944)
!6966 = !DILocation(line: 254, column: 12, scope: !6944)
!6967 = !DILocation(line: 255, column: 28, scope: !6944)
!6968 = !DILocation(line: 255, column: 16, scope: !6944)
!6969 = !DILocation(line: 256, column: 3, scope: !6944)
!6970 = !DILocation(line: 256, column: 12, scope: !6944)
!6971 = !DILocation(line: 257, column: 24, scope: !6944)
!6972 = !DILocation(line: 257, column: 11, scope: !6944)
!6973 = !DILocation(line: 260, column: 29, scope: !6944)
!6974 = !DILocation(line: 260, column: 36, scope: !6944)
!6975 = !DILocation(line: 260, column: 11, scope: !6944)
!6976 = !DILocation(line: 260, column: 9, scope: !6944)
!6977 = !DILocation(line: 261, column: 6, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 261, column: 6)
!6979 = !DILocation(line: 261, column: 13, scope: !6978)
!6980 = !DILocation(line: 261, column: 6, scope: !6944)
!6981 = !DILocation(line: 262, column: 7, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 262, column: 7)
!6983 = distinct !DILexicalBlock(scope: !6978, file: !3, line: 261, column: 19)
!6984 = !DILocation(line: 262, column: 13, scope: !6982)
!6985 = !DILocation(line: 262, column: 7, scope: !6983)
!6986 = !DILocation(line: 263, column: 4, scope: !6982)
!6987 = !DILocation(line: 264, column: 7, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 264, column: 7)
!6989 = !DILocation(line: 264, column: 14, scope: !6988)
!6990 = !DILocation(line: 264, column: 7, scope: !6983)
!6991 = !DILocation(line: 265, column: 11, scope: !6988)
!6992 = !DILocation(line: 265, column: 4, scope: !6988)
!6993 = !DILocation(line: 267, column: 3, scope: !6983)
!6994 = !DILocation(line: 268, column: 10, scope: !6983)
!6995 = !DILocation(line: 268, column: 3, scope: !6983)
!6996 = !DILocation(line: 270, column: 6, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 270, column: 6)
!6998 = !DILocation(line: 270, column: 12, scope: !6997)
!6999 = !DILocation(line: 270, column: 6, scope: !6944)
!7000 = !DILocalVariable(name: "i", scope: !7001, file: !3, line: 271, type: !405)
!7001 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 270, column: 17)
!7002 = !DILocation(line: 271, column: 7, scope: !7001)
!7003 = !DILocation(line: 272, column: 3, scope: !7001)
!7004 = !DILocation(line: 272, column: 3, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 272, column: 3)
!7006 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 272, column: 3)
!7007 = !DILocation(line: 272, column: 3, scope: !7006)
!7008 = !DILocation(line: 273, column: 10, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 273, column: 3)
!7010 = !DILocation(line: 273, column: 8, scope: !7009)
!7011 = !DILocation(line: 273, column: 15, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 273, column: 3)
!7013 = !DILocation(line: 273, column: 19, scope: !7012)
!7014 = !DILocation(line: 273, column: 17, scope: !7012)
!7015 = !DILocation(line: 273, column: 3, scope: !7009)
!7016 = !DILocation(line: 274, column: 4, scope: !7012)
!7017 = !DILocation(line: 273, column: 25, scope: !7012)
!7018 = !DILocation(line: 273, column: 3, scope: !7012)
!7019 = distinct !{!7019, !7015, !7020}
!7020 = !DILocation(line: 274, column: 4, scope: !7009)
!7021 = !DILocation(line: 275, column: 3, scope: !7001)
!7022 = !DILocation(line: 276, column: 10, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 276, column: 3)
!7024 = !DILocation(line: 276, column: 8, scope: !7023)
!7025 = !DILocation(line: 276, column: 15, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 276, column: 3)
!7027 = !DILocation(line: 276, column: 19, scope: !7026)
!7028 = !DILocation(line: 276, column: 17, scope: !7026)
!7029 = !DILocation(line: 276, column: 3, scope: !7023)
!7030 = !DILocation(line: 277, column: 4, scope: !7026)
!7031 = !DILocation(line: 276, column: 26, scope: !7026)
!7032 = !DILocation(line: 276, column: 3, scope: !7026)
!7033 = distinct !{!7033, !7029, !7034}
!7034 = !DILocation(line: 277, column: 4, scope: !7023)
!7035 = !DILocation(line: 278, column: 3, scope: !7001)
!7036 = !DILocation(line: 279, column: 2, scope: !7001)
!7037 = !DILocation(line: 280, column: 2, scope: !6944)
!7038 = !DILocation(line: 281, column: 1, scope: !6944)
!7039 = distinct !DISubprogram(name: "drxk_i2c_transfer", scope: !3, file: !3, line: 208, type: !7040, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{!405, !4562, !4415, !7}
!7042 = !DILocalVariable(name: "state", arg: 1, scope: !7039, file: !3, line: 208, type: !4562)
!7043 = !DILocation(line: 208, column: 49, scope: !7039)
!7044 = !DILocalVariable(name: "msgs", arg: 2, scope: !7039, file: !3, line: 208, type: !4415)
!7045 = !DILocation(line: 208, column: 72, scope: !7039)
!7046 = !DILocalVariable(name: "len", arg: 3, scope: !7039, file: !3, line: 209, type: !7)
!7047 = !DILocation(line: 209, column: 18, scope: !7039)
!7048 = !DILocation(line: 211, column: 6, scope: !7049)
!7049 = distinct !DILexicalBlock(scope: !7039, file: !3, line: 211, column: 6)
!7050 = !DILocation(line: 211, column: 13, scope: !7049)
!7051 = !DILocation(line: 211, column: 6, scope: !7039)
!7052 = !DILocation(line: 212, column: 25, scope: !7049)
!7053 = !DILocation(line: 212, column: 32, scope: !7049)
!7054 = !DILocation(line: 212, column: 37, scope: !7049)
!7055 = !DILocation(line: 212, column: 43, scope: !7049)
!7056 = !DILocation(line: 212, column: 10, scope: !7049)
!7057 = !DILocation(line: 212, column: 3, scope: !7049)
!7058 = !DILocation(line: 214, column: 23, scope: !7049)
!7059 = !DILocation(line: 214, column: 30, scope: !7049)
!7060 = !DILocation(line: 214, column: 35, scope: !7049)
!7061 = !DILocation(line: 214, column: 41, scope: !7049)
!7062 = !DILocation(line: 214, column: 10, scope: !7049)
!7063 = !DILocation(line: 214, column: 3, scope: !7049)
!7064 = !DILocation(line: 215, column: 1, scope: !7039)
!7065 = distinct !DISubprogram(name: "write16_flags", scope: !3, file: !3, line: 352, type: !7066, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!7066 = !DISubroutineType(types: !7067)
!7067 = !{!405, !4562, !411, !408, !455}
!7068 = !DILocalVariable(name: "state", arg: 1, scope: !7065, file: !3, line: 352, type: !4562)
!7069 = !DILocation(line: 352, column: 45, scope: !7065)
!7070 = !DILocalVariable(name: "reg", arg: 2, scope: !7065, file: !3, line: 352, type: !411)
!7071 = !DILocation(line: 352, column: 56, scope: !7065)
!7072 = !DILocalVariable(name: "data", arg: 3, scope: !7065, file: !3, line: 352, type: !408)
!7073 = !DILocation(line: 352, column: 65, scope: !7065)
!7074 = !DILocalVariable(name: "flags", arg: 4, scope: !7065, file: !3, line: 352, type: !455)
!7075 = !DILocation(line: 352, column: 74, scope: !7065)
!7076 = !DILocalVariable(name: "adr", scope: !7065, file: !3, line: 354, type: !455)
!7077 = !DILocation(line: 354, column: 5, scope: !7065)
!7078 = !DILocation(line: 354, column: 11, scope: !7065)
!7079 = !DILocation(line: 354, column: 18, scope: !7065)
!7080 = !DILocalVariable(name: "mm", scope: !7065, file: !3, line: 354, type: !816)
!7081 = !DILocation(line: 354, column: 33, scope: !7065)
!7082 = !DILocalVariable(name: "len", scope: !7065, file: !3, line: 354, type: !455)
!7083 = !DILocation(line: 354, column: 40, scope: !7065)
!7084 = !DILocation(line: 356, column: 6, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 356, column: 6)
!7086 = !DILocation(line: 356, column: 13, scope: !7085)
!7087 = !DILocation(line: 356, column: 6, scope: !7065)
!7088 = !DILocation(line: 357, column: 9, scope: !7085)
!7089 = !DILocation(line: 357, column: 3, scope: !7085)
!7090 = !DILocation(line: 358, column: 6, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 358, column: 6)
!7092 = !DILocation(line: 358, column: 35, scope: !7091)
!7093 = !DILocation(line: 358, column: 39, scope: !7091)
!7094 = !DILocation(line: 358, column: 45, scope: !7091)
!7095 = !DILocation(line: 358, column: 6, scope: !7065)
!7096 = !DILocation(line: 359, column: 14, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 358, column: 52)
!7098 = !DILocation(line: 359, column: 18, scope: !7097)
!7099 = !DILocation(line: 359, column: 24, scope: !7097)
!7100 = !DILocation(line: 359, column: 32, scope: !7097)
!7101 = !DILocation(line: 359, column: 11, scope: !7097)
!7102 = !DILocation(line: 359, column: 3, scope: !7097)
!7103 = !DILocation(line: 359, column: 9, scope: !7097)
!7104 = !DILocation(line: 360, column: 13, scope: !7097)
!7105 = !DILocation(line: 360, column: 17, scope: !7097)
!7106 = !DILocation(line: 360, column: 24, scope: !7097)
!7107 = !DILocation(line: 360, column: 11, scope: !7097)
!7108 = !DILocation(line: 360, column: 3, scope: !7097)
!7109 = !DILocation(line: 360, column: 9, scope: !7097)
!7110 = !DILocation(line: 361, column: 13, scope: !7097)
!7111 = !DILocation(line: 361, column: 17, scope: !7097)
!7112 = !DILocation(line: 361, column: 24, scope: !7097)
!7113 = !DILocation(line: 361, column: 34, scope: !7097)
!7114 = !DILocation(line: 361, column: 32, scope: !7097)
!7115 = !DILocation(line: 361, column: 11, scope: !7097)
!7116 = !DILocation(line: 361, column: 3, scope: !7097)
!7117 = !DILocation(line: 361, column: 9, scope: !7097)
!7118 = !DILocation(line: 362, column: 13, scope: !7097)
!7119 = !DILocation(line: 362, column: 17, scope: !7097)
!7120 = !DILocation(line: 362, column: 23, scope: !7097)
!7121 = !DILocation(line: 362, column: 11, scope: !7097)
!7122 = !DILocation(line: 362, column: 3, scope: !7097)
!7123 = !DILocation(line: 362, column: 9, scope: !7097)
!7124 = !DILocation(line: 363, column: 7, scope: !7097)
!7125 = !DILocation(line: 364, column: 2, scope: !7097)
!7126 = !DILocation(line: 365, column: 13, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 364, column: 9)
!7128 = !DILocation(line: 365, column: 17, scope: !7127)
!7129 = !DILocation(line: 365, column: 23, scope: !7127)
!7130 = !DILocation(line: 365, column: 11, scope: !7127)
!7131 = !DILocation(line: 365, column: 3, scope: !7127)
!7132 = !DILocation(line: 365, column: 9, scope: !7127)
!7133 = !DILocation(line: 366, column: 14, scope: !7127)
!7134 = !DILocation(line: 366, column: 18, scope: !7127)
!7135 = !DILocation(line: 366, column: 25, scope: !7127)
!7136 = !DILocation(line: 366, column: 37, scope: !7127)
!7137 = !DILocation(line: 366, column: 41, scope: !7127)
!7138 = !DILocation(line: 366, column: 48, scope: !7127)
!7139 = !DILocation(line: 366, column: 33, scope: !7127)
!7140 = !DILocation(line: 366, column: 11, scope: !7127)
!7141 = !DILocation(line: 366, column: 3, scope: !7127)
!7142 = !DILocation(line: 366, column: 9, scope: !7127)
!7143 = !DILocation(line: 367, column: 7, scope: !7127)
!7144 = !DILocation(line: 369, column: 12, scope: !7065)
!7145 = !DILocation(line: 369, column: 17, scope: !7065)
!7146 = !DILocation(line: 369, column: 5, scope: !7065)
!7147 = !DILocation(line: 369, column: 2, scope: !7065)
!7148 = !DILocation(line: 369, column: 10, scope: !7065)
!7149 = !DILocation(line: 370, column: 17, scope: !7065)
!7150 = !DILocation(line: 370, column: 22, scope: !7065)
!7151 = !DILocation(line: 370, column: 28, scope: !7065)
!7152 = !DILocation(line: 370, column: 16, scope: !7065)
!7153 = !DILocation(line: 370, column: 5, scope: !7065)
!7154 = !DILocation(line: 370, column: 9, scope: !7065)
!7155 = !DILocation(line: 370, column: 2, scope: !7065)
!7156 = !DILocation(line: 370, column: 14, scope: !7065)
!7157 = !DILocation(line: 372, column: 2, scope: !7065)
!7158 = !DILocation(line: 372, column: 2, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 372, column: 2)
!7160 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 372, column: 2)
!7161 = !DILocation(line: 372, column: 2, scope: !7160)
!7162 = !DILocation(line: 373, column: 19, scope: !7065)
!7163 = !DILocation(line: 373, column: 26, scope: !7065)
!7164 = !DILocation(line: 373, column: 31, scope: !7065)
!7165 = !DILocation(line: 373, column: 35, scope: !7065)
!7166 = !DILocation(line: 373, column: 39, scope: !7065)
!7167 = !DILocation(line: 373, column: 9, scope: !7065)
!7168 = !DILocation(line: 373, column: 2, scope: !7065)
!7169 = distinct !DISubprogram(name: "i2c_write", scope: !3, file: !3, line: 226, type: !7170, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!7170 = !DISubroutineType(types: !7171)
!7171 = !{!405, !4562, !455, !778, !405}
!7172 = !DILocalVariable(name: "state", arg: 1, scope: !7169, file: !3, line: 226, type: !4562)
!7173 = !DILocation(line: 226, column: 41, scope: !7169)
!7174 = !DILocalVariable(name: "adr", arg: 2, scope: !7169, file: !3, line: 226, type: !455)
!7175 = !DILocation(line: 226, column: 51, scope: !7169)
!7176 = !DILocalVariable(name: "data", arg: 3, scope: !7169, file: !3, line: 226, type: !778)
!7177 = !DILocation(line: 226, column: 60, scope: !7169)
!7178 = !DILocalVariable(name: "len", arg: 4, scope: !7169, file: !3, line: 226, type: !405)
!7179 = !DILocation(line: 226, column: 70, scope: !7169)
!7180 = !DILocalVariable(name: "status", scope: !7169, file: !3, line: 228, type: !405)
!7181 = !DILocation(line: 228, column: 6, scope: !7169)
!7182 = !DILocalVariable(name: "msg", scope: !7169, file: !3, line: 229, type: !4416)
!7183 = !DILocation(line: 229, column: 17, scope: !7169)
!7184 = !DILocation(line: 229, column: 23, scope: !7169)
!7185 = !DILocation(line: 230, column: 14, scope: !7169)
!7186 = !DILocation(line: 230, column: 51, scope: !7169)
!7187 = !DILocation(line: 230, column: 38, scope: !7169)
!7188 = !DILocation(line: 232, column: 2, scope: !7169)
!7189 = !DILocation(line: 232, column: 2, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7191, file: !3, line: 232, column: 2)
!7191 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 232, column: 2)
!7192 = !DILocation(line: 232, column: 2, scope: !7191)
!7193 = !DILocation(line: 233, column: 6, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 233, column: 6)
!7195 = !DILocation(line: 233, column: 12, scope: !7194)
!7196 = !DILocation(line: 233, column: 6, scope: !7169)
!7197 = !DILocalVariable(name: "i", scope: !7198, file: !3, line: 234, type: !405)
!7198 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 233, column: 17)
!7199 = !DILocation(line: 234, column: 7, scope: !7198)
!7200 = !DILocation(line: 235, column: 10, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7198, file: !3, line: 235, column: 3)
!7202 = !DILocation(line: 235, column: 8, scope: !7201)
!7203 = !DILocation(line: 235, column: 15, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 235, column: 3)
!7205 = !DILocation(line: 235, column: 19, scope: !7204)
!7206 = !DILocation(line: 235, column: 17, scope: !7204)
!7207 = !DILocation(line: 235, column: 3, scope: !7201)
!7208 = !DILocation(line: 236, column: 4, scope: !7204)
!7209 = !DILocation(line: 235, column: 25, scope: !7204)
!7210 = !DILocation(line: 235, column: 3, scope: !7204)
!7211 = distinct !{!7211, !7207, !7212}
!7212 = !DILocation(line: 236, column: 4, scope: !7201)
!7213 = !DILocation(line: 237, column: 3, scope: !7198)
!7214 = !DILocation(line: 238, column: 2, scope: !7198)
!7215 = !DILocation(line: 239, column: 29, scope: !7169)
!7216 = !DILocation(line: 239, column: 11, scope: !7169)
!7217 = !DILocation(line: 239, column: 9, scope: !7169)
!7218 = !DILocation(line: 240, column: 6, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 240, column: 6)
!7220 = !DILocation(line: 240, column: 13, scope: !7219)
!7221 = !DILocation(line: 240, column: 18, scope: !7219)
!7222 = !DILocation(line: 240, column: 21, scope: !7219)
!7223 = !DILocation(line: 240, column: 28, scope: !7219)
!7224 = !DILocation(line: 240, column: 6, scope: !7169)
!7225 = !DILocation(line: 241, column: 10, scope: !7219)
!7226 = !DILocation(line: 241, column: 3, scope: !7219)
!7227 = !DILocation(line: 243, column: 6, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 243, column: 6)
!7229 = !DILocation(line: 243, column: 13, scope: !7228)
!7230 = !DILocation(line: 243, column: 6, scope: !7169)
!7231 = !DILocation(line: 244, column: 3, scope: !7228)
!7232 = !DILocation(line: 246, column: 9, scope: !7169)
!7233 = !DILocation(line: 246, column: 2, scope: !7169)
!7234 = distinct !DISubprogram(name: "setoperation_mode", scope: !3, file: !3, line: 1723, type: !7235, scopeLine: 1725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!7235 = !DISubroutineType(types: !7236)
!7236 = !{!405, !4562, !292}
!7237 = !DILocalVariable(name: "state", arg: 1, scope: !7234, file: !3, line: 1723, type: !4562)
!7238 = !DILocation(line: 1723, column: 49, scope: !7234)
!7239 = !DILocalVariable(name: "o_mode", arg: 2, scope: !7234, file: !3, line: 1724, type: !292)
!7240 = !DILocation(line: 1724, column: 28, scope: !7234)
!7241 = !DILocalVariable(name: "status", scope: !7234, file: !3, line: 1726, type: !405)
!7242 = !DILocation(line: 1726, column: 6, scope: !7234)
!7243 = !DILocation(line: 1728, column: 2, scope: !7234)
!7244 = !DILocation(line: 1728, column: 2, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7246, file: !3, line: 1728, column: 2)
!7246 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 1728, column: 2)
!7247 = !DILocation(line: 1728, column: 2, scope: !7246)
!7248 = !DILocation(line: 1736, column: 19, scope: !7234)
!7249 = !DILocation(line: 1736, column: 11, scope: !7234)
!7250 = !DILocation(line: 1736, column: 9, scope: !7234)
!7251 = !DILocation(line: 1738, column: 6, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 1738, column: 6)
!7253 = !DILocation(line: 1738, column: 13, scope: !7252)
!7254 = !DILocation(line: 1738, column: 6, scope: !7234)
!7255 = !DILocation(line: 1739, column: 3, scope: !7252)
!7256 = !DILocation(line: 1742, column: 6, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 1742, column: 6)
!7258 = !DILocation(line: 1742, column: 13, scope: !7257)
!7259 = !DILocation(line: 1742, column: 33, scope: !7257)
!7260 = !DILocation(line: 1742, column: 30, scope: !7257)
!7261 = !DILocation(line: 1742, column: 6, scope: !7234)
!7262 = !DILocation(line: 1743, column: 3, scope: !7257)
!7263 = !DILocation(line: 1745, column: 10, scope: !7234)
!7264 = !DILocation(line: 1745, column: 17, scope: !7234)
!7265 = !DILocation(line: 1745, column: 2, scope: !7234)
!7266 = !DILocation(line: 1748, column: 3, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 1745, column: 35)
!7268 = !DILocation(line: 1750, column: 24, scope: !7267)
!7269 = !DILocation(line: 1750, column: 12, scope: !7267)
!7270 = !DILocation(line: 1750, column: 10, scope: !7267)
!7271 = !DILocation(line: 1751, column: 7, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 1751, column: 7)
!7273 = !DILocation(line: 1751, column: 14, scope: !7272)
!7274 = !DILocation(line: 1751, column: 7, scope: !7267)
!7275 = !DILocation(line: 1752, column: 4, scope: !7272)
!7276 = !DILocation(line: 1753, column: 28, scope: !7267)
!7277 = !DILocation(line: 1753, column: 12, scope: !7267)
!7278 = !DILocation(line: 1753, column: 10, scope: !7267)
!7279 = !DILocation(line: 1754, column: 7, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 1754, column: 7)
!7281 = !DILocation(line: 1754, column: 14, scope: !7280)
!7282 = !DILocation(line: 1754, column: 7, scope: !7267)
!7283 = !DILocation(line: 1755, column: 4, scope: !7280)
!7284 = !DILocation(line: 1756, column: 3, scope: !7267)
!7285 = !DILocation(line: 1756, column: 10, scope: !7267)
!7286 = !DILocation(line: 1756, column: 27, scope: !7267)
!7287 = !DILocation(line: 1757, column: 3, scope: !7267)
!7288 = !DILocation(line: 1760, column: 24, scope: !7267)
!7289 = !DILocation(line: 1760, column: 12, scope: !7267)
!7290 = !DILocation(line: 1760, column: 10, scope: !7267)
!7291 = !DILocation(line: 1761, column: 7, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 1761, column: 7)
!7293 = !DILocation(line: 1761, column: 14, scope: !7292)
!7294 = !DILocation(line: 1761, column: 7, scope: !7267)
!7295 = !DILocation(line: 1762, column: 4, scope: !7292)
!7296 = !DILocation(line: 1763, column: 27, scope: !7267)
!7297 = !DILocation(line: 1763, column: 12, scope: !7267)
!7298 = !DILocation(line: 1763, column: 10, scope: !7267)
!7299 = !DILocation(line: 1764, column: 7, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7267, file: !3, line: 1764, column: 7)
!7301 = !DILocation(line: 1764, column: 14, scope: !7300)
!7302 = !DILocation(line: 1764, column: 7, scope: !7267)
!7303 = !DILocation(line: 1765, column: 4, scope: !7300)
!7304 = !DILocation(line: 1766, column: 3, scope: !7267)
!7305 = !DILocation(line: 1766, column: 10, scope: !7267)
!7306 = !DILocation(line: 1766, column: 27, scope: !7267)
!7307 = !DILocation(line: 1767, column: 3, scope: !7267)
!7308 = !DILocation(line: 1770, column: 10, scope: !7267)
!7309 = !DILocation(line: 1771, column: 3, scope: !7267)
!7310 = !DILocation(line: 1777, column: 10, scope: !7234)
!7311 = !DILocation(line: 1777, column: 2, scope: !7234)
!7312 = !DILocation(line: 1779, column: 3, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 1777, column: 18)
!7314 = !DILocation(line: 1779, column: 3, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 1779, column: 3)
!7316 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1779, column: 3)
!7317 = !DILocation(line: 1779, column: 3, scope: !7316)
!7318 = !DILocation(line: 1780, column: 29, scope: !7313)
!7319 = !DILocation(line: 1780, column: 3, scope: !7313)
!7320 = !DILocation(line: 1780, column: 10, scope: !7313)
!7321 = !DILocation(line: 1780, column: 27, scope: !7313)
!7322 = !DILocation(line: 1781, column: 30, scope: !7313)
!7323 = !DILocation(line: 1781, column: 37, scope: !7313)
!7324 = !DILocation(line: 1781, column: 12, scope: !7313)
!7325 = !DILocation(line: 1781, column: 10, scope: !7313)
!7326 = !DILocation(line: 1782, column: 7, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1782, column: 7)
!7328 = !DILocation(line: 1782, column: 14, scope: !7327)
!7329 = !DILocation(line: 1782, column: 7, scope: !7313)
!7330 = !DILocation(line: 1783, column: 4, scope: !7327)
!7331 = !DILocation(line: 1784, column: 3, scope: !7313)
!7332 = !DILocation(line: 1787, column: 3, scope: !7313)
!7333 = !DILocation(line: 1787, column: 3, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 1787, column: 3)
!7335 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1787, column: 3)
!7336 = !DILocation(line: 1787, column: 3, scope: !7335)
!7337 = !DILocation(line: 1789, column: 29, scope: !7313)
!7338 = !DILocation(line: 1789, column: 3, scope: !7313)
!7339 = !DILocation(line: 1789, column: 10, scope: !7313)
!7340 = !DILocation(line: 1789, column: 27, scope: !7313)
!7341 = !DILocation(line: 1790, column: 29, scope: !7313)
!7342 = !DILocation(line: 1790, column: 36, scope: !7313)
!7343 = !DILocation(line: 1790, column: 12, scope: !7313)
!7344 = !DILocation(line: 1790, column: 10, scope: !7313)
!7345 = !DILocation(line: 1791, column: 7, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 1791, column: 7)
!7347 = !DILocation(line: 1791, column: 14, scope: !7346)
!7348 = !DILocation(line: 1791, column: 7, scope: !7313)
!7349 = !DILocation(line: 1792, column: 4, scope: !7346)
!7350 = !DILocation(line: 1793, column: 3, scope: !7313)
!7351 = !DILocation(line: 1796, column: 10, scope: !7313)
!7352 = !DILocation(line: 1797, column: 2, scope: !7313)
!7353 = !DILabel(scope: !7234, name: "error", file: !3, line: 1798)
!7354 = !DILocation(line: 1798, column: 1, scope: !7234)
!7355 = !DILocation(line: 1799, column: 6, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7234, file: !3, line: 1799, column: 6)
!7357 = !DILocation(line: 1799, column: 13, scope: !7356)
!7358 = !DILocation(line: 1799, column: 6, scope: !7234)
!7359 = !DILocation(line: 1800, column: 3, scope: !7356)
!7360 = !DILocation(line: 1801, column: 9, scope: !7234)
!7361 = !DILocation(line: 1801, column: 2, scope: !7234)
!7362 = !DILocation(line: 1802, column: 1, scope: !7234)
!7363 = distinct !DISubprogram(name: "start", scope: !3, file: !3, line: 1804, type: !7364, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!7364 = !DISubroutineType(types: !7365)
!7365 = !{!405, !4562, !772, !772}
!7366 = !DILocalVariable(name: "state", arg: 1, scope: !7363, file: !3, line: 1804, type: !4562)
!7367 = !DILocation(line: 1804, column: 37, scope: !7363)
!7368 = !DILocalVariable(name: "offset_freq", arg: 2, scope: !7363, file: !3, line: 1804, type: !772)
!7369 = !DILocation(line: 1804, column: 48, scope: !7363)
!7370 = !DILocalVariable(name: "intermediate_frequency", arg: 3, scope: !7363, file: !3, line: 1805, type: !772)
!7371 = !DILocation(line: 1805, column: 8, scope: !7363)
!7372 = !DILocalVariable(name: "status", scope: !7363, file: !3, line: 1807, type: !405)
!7373 = !DILocation(line: 1807, column: 6, scope: !7363)
!7374 = !DILocalVariable(name: "i_freqk_hz", scope: !7363, file: !3, line: 1809, type: !408)
!7375 = !DILocation(line: 1809, column: 6, scope: !7363)
!7376 = !DILocalVariable(name: "offsetk_hz", scope: !7363, file: !3, line: 1810, type: !772)
!7377 = !DILocation(line: 1810, column: 6, scope: !7363)
!7378 = !DILocation(line: 1810, column: 19, scope: !7363)
!7379 = !DILocation(line: 1810, column: 31, scope: !7363)
!7380 = !DILocation(line: 1812, column: 2, scope: !7363)
!7381 = !DILocation(line: 1812, column: 2, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7383, file: !3, line: 1812, column: 2)
!7383 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 1812, column: 2)
!7384 = !DILocation(line: 1812, column: 2, scope: !7383)
!7385 = !DILocation(line: 1813, column: 6, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 1813, column: 6)
!7387 = !DILocation(line: 1813, column: 13, scope: !7386)
!7388 = !DILocation(line: 1813, column: 26, scope: !7386)
!7389 = !DILocation(line: 1813, column: 42, scope: !7386)
!7390 = !DILocation(line: 1814, column: 3, scope: !7386)
!7391 = !DILocation(line: 1814, column: 10, scope: !7386)
!7392 = !DILocation(line: 1814, column: 23, scope: !7386)
!7393 = !DILocation(line: 1813, column: 6, scope: !7363)
!7394 = !DILocation(line: 1815, column: 3, scope: !7386)
!7395 = !DILocation(line: 1817, column: 34, scope: !7363)
!7396 = !DILocation(line: 1817, column: 41, scope: !7363)
!7397 = !DILocation(line: 1817, column: 47, scope: !7363)
!7398 = !DILocation(line: 1817, column: 57, scope: !7363)
!7399 = !DILocation(line: 1817, column: 2, scope: !7363)
!7400 = !DILocation(line: 1817, column: 9, scope: !7363)
!7401 = !DILocation(line: 1817, column: 31, scope: !7363)
!7402 = !DILocation(line: 1819, column: 6, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 1819, column: 6)
!7404 = !DILocation(line: 1819, column: 29, scope: !7403)
!7405 = !DILocation(line: 1819, column: 6, scope: !7363)
!7406 = !DILocation(line: 1820, column: 35, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 1819, column: 34)
!7408 = !DILocation(line: 1820, column: 42, scope: !7407)
!7409 = !DILocation(line: 1820, column: 34, scope: !7407)
!7410 = !DILocation(line: 1820, column: 3, scope: !7407)
!7411 = !DILocation(line: 1820, column: 10, scope: !7407)
!7412 = !DILocation(line: 1820, column: 32, scope: !7407)
!7413 = !DILocation(line: 1821, column: 29, scope: !7407)
!7414 = !DILocation(line: 1821, column: 28, scope: !7407)
!7415 = !DILocation(line: 1821, column: 26, scope: !7407)
!7416 = !DILocation(line: 1822, column: 2, scope: !7407)
!7417 = !DILocation(line: 1824, column: 10, scope: !7363)
!7418 = !DILocation(line: 1824, column: 17, scope: !7363)
!7419 = !DILocation(line: 1824, column: 2, scope: !7363)
!7420 = !DILocation(line: 1827, column: 17, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 1824, column: 35)
!7422 = !DILocation(line: 1827, column: 40, scope: !7421)
!7423 = !DILocation(line: 1827, column: 16, scope: !7421)
!7424 = !DILocation(line: 1827, column: 14, scope: !7421)
!7425 = !DILocation(line: 1828, column: 20, scope: !7421)
!7426 = !DILocation(line: 1828, column: 27, scope: !7421)
!7427 = !DILocation(line: 1828, column: 39, scope: !7421)
!7428 = !DILocation(line: 1828, column: 12, scope: !7421)
!7429 = !DILocation(line: 1828, column: 10, scope: !7421)
!7430 = !DILocation(line: 1829, column: 7, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 1829, column: 7)
!7432 = !DILocation(line: 1829, column: 14, scope: !7431)
!7433 = !DILocation(line: 1829, column: 7, scope: !7421)
!7434 = !DILocation(line: 1830, column: 4, scope: !7431)
!7435 = !DILocation(line: 1831, column: 3, scope: !7421)
!7436 = !DILocation(line: 1831, column: 10, scope: !7421)
!7437 = !DILocation(line: 1831, column: 23, scope: !7421)
!7438 = !DILocation(line: 1832, column: 3, scope: !7421)
!7439 = !DILocation(line: 1834, column: 17, scope: !7421)
!7440 = !DILocation(line: 1834, column: 40, scope: !7421)
!7441 = !DILocation(line: 1834, column: 16, scope: !7421)
!7442 = !DILocation(line: 1834, column: 14, scope: !7421)
!7443 = !DILocation(line: 1835, column: 24, scope: !7421)
!7444 = !DILocation(line: 1835, column: 12, scope: !7421)
!7445 = !DILocation(line: 1835, column: 10, scope: !7421)
!7446 = !DILocation(line: 1836, column: 7, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 1836, column: 7)
!7448 = !DILocation(line: 1836, column: 14, scope: !7447)
!7449 = !DILocation(line: 1836, column: 7, scope: !7421)
!7450 = !DILocation(line: 1837, column: 4, scope: !7447)
!7451 = !DILocation(line: 1838, column: 21, scope: !7421)
!7452 = !DILocation(line: 1838, column: 28, scope: !7421)
!7453 = !DILocation(line: 1838, column: 40, scope: !7421)
!7454 = !DILocation(line: 1838, column: 12, scope: !7421)
!7455 = !DILocation(line: 1838, column: 10, scope: !7421)
!7456 = !DILocation(line: 1839, column: 7, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 1839, column: 7)
!7458 = !DILocation(line: 1839, column: 14, scope: !7457)
!7459 = !DILocation(line: 1839, column: 7, scope: !7421)
!7460 = !DILocation(line: 1840, column: 4, scope: !7457)
!7461 = !DILocation(line: 1841, column: 23, scope: !7421)
!7462 = !DILocation(line: 1841, column: 12, scope: !7421)
!7463 = !DILocation(line: 1841, column: 10, scope: !7421)
!7464 = !DILocation(line: 1842, column: 7, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 1842, column: 7)
!7466 = !DILocation(line: 1842, column: 14, scope: !7465)
!7467 = !DILocation(line: 1842, column: 7, scope: !7421)
!7468 = !DILocation(line: 1843, column: 4, scope: !7465)
!7469 = !DILocation(line: 1844, column: 3, scope: !7421)
!7470 = !DILocation(line: 1844, column: 10, scope: !7421)
!7471 = !DILocation(line: 1844, column: 23, scope: !7421)
!7472 = !DILocation(line: 1845, column: 3, scope: !7421)
!7473 = !DILocation(line: 1847, column: 3, scope: !7421)
!7474 = !DILocation(line: 1848, column: 2, scope: !7421)
!7475 = !DILabel(scope: !7363, name: "error", file: !3, line: 1849)
!7476 = !DILocation(line: 1849, column: 1, scope: !7363)
!7477 = !DILocation(line: 1850, column: 6, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 1850, column: 6)
!7479 = !DILocation(line: 1850, column: 13, scope: !7478)
!7480 = !DILocation(line: 1850, column: 6, scope: !7363)
!7481 = !DILocation(line: 1851, column: 3, scope: !7478)
!7482 = !DILocation(line: 1852, column: 9, scope: !7363)
!7483 = !DILocation(line: 1852, column: 2, scope: !7363)
!7484 = distinct !DISubprogram(name: "power_down_dvbt", scope: !3, file: !3, line: 1666, type: !7485, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!7485 = !DISubroutineType(types: !7486)
!7486 = !{!405, !4562, !406}
!7487 = !DILocalVariable(name: "state", arg: 1, scope: !7484, file: !3, line: 1666, type: !4562)
!7488 = !DILocation(line: 1666, column: 47, scope: !7484)
!7489 = !DILocalVariable(name: "set_power_mode", arg: 2, scope: !7484, file: !3, line: 1666, type: !406)
!7490 = !DILocation(line: 1666, column: 59, scope: !7484)
!7491 = !DILocalVariable(name: "power_mode", scope: !7484, file: !3, line: 1668, type: !338)
!7492 = !DILocation(line: 1668, column: 22, scope: !7484)
!7493 = !DILocalVariable(name: "cmd_result", scope: !7484, file: !3, line: 1669, type: !408)
!7494 = !DILocation(line: 1669, column: 6, scope: !7484)
!7495 = !DILocalVariable(name: "data", scope: !7484, file: !3, line: 1670, type: !408)
!7496 = !DILocation(line: 1670, column: 6, scope: !7484)
!7497 = !DILocalVariable(name: "status", scope: !7484, file: !3, line: 1671, type: !405)
!7498 = !DILocation(line: 1671, column: 6, scope: !7484)
!7499 = !DILocation(line: 1673, column: 2, scope: !7484)
!7500 = !DILocation(line: 1673, column: 2, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7502, file: !3, line: 1673, column: 2)
!7502 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 1673, column: 2)
!7503 = !DILocation(line: 1673, column: 2, scope: !7502)
!7504 = !DILocation(line: 1675, column: 18, scope: !7484)
!7505 = !DILocation(line: 1675, column: 11, scope: !7484)
!7506 = !DILocation(line: 1675, column: 9, scope: !7484)
!7507 = !DILocation(line: 1676, column: 6, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 1676, column: 6)
!7509 = !DILocation(line: 1676, column: 13, scope: !7508)
!7510 = !DILocation(line: 1676, column: 6, scope: !7484)
!7511 = !DILocation(line: 1677, column: 3, scope: !7508)
!7512 = !DILocation(line: 1678, column: 6, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 1678, column: 6)
!7514 = !DILocation(line: 1678, column: 11, scope: !7513)
!7515 = !DILocation(line: 1678, column: 6, scope: !7484)
!7516 = !DILocation(line: 1680, column: 24, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7513, file: !3, line: 1678, column: 36)
!7518 = !DILocation(line: 1680, column: 12, scope: !7517)
!7519 = !DILocation(line: 1680, column: 10, scope: !7517)
!7520 = !DILocation(line: 1684, column: 7, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 1684, column: 7)
!7522 = !DILocation(line: 1684, column: 14, scope: !7521)
!7523 = !DILocation(line: 1684, column: 7, scope: !7517)
!7524 = !DILocation(line: 1685, column: 4, scope: !7521)
!7525 = !DILocation(line: 1687, column: 24, scope: !7517)
!7526 = !DILocation(line: 1687, column: 12, scope: !7517)
!7527 = !DILocation(line: 1687, column: 10, scope: !7517)
!7528 = !DILocation(line: 1691, column: 7, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7517, file: !3, line: 1691, column: 7)
!7530 = !DILocation(line: 1691, column: 14, scope: !7529)
!7531 = !DILocation(line: 1691, column: 7, scope: !7517)
!7532 = !DILocation(line: 1692, column: 4, scope: !7529)
!7533 = !DILocation(line: 1693, column: 2, scope: !7517)
!7534 = !DILocation(line: 1696, column: 19, scope: !7484)
!7535 = !DILocation(line: 1696, column: 11, scope: !7484)
!7536 = !DILocation(line: 1696, column: 9, scope: !7484)
!7537 = !DILocation(line: 1697, column: 6, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 1697, column: 6)
!7539 = !DILocation(line: 1697, column: 13, scope: !7538)
!7540 = !DILocation(line: 1697, column: 6, scope: !7484)
!7541 = !DILocation(line: 1698, column: 3, scope: !7538)
!7542 = !DILocation(line: 1699, column: 19, scope: !7484)
!7543 = !DILocation(line: 1699, column: 11, scope: !7484)
!7544 = !DILocation(line: 1699, column: 9, scope: !7484)
!7545 = !DILocation(line: 1700, column: 6, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 1700, column: 6)
!7547 = !DILocation(line: 1700, column: 13, scope: !7546)
!7548 = !DILocation(line: 1700, column: 6, scope: !7484)
!7549 = !DILocation(line: 1701, column: 3, scope: !7546)
!7550 = !DILocation(line: 1702, column: 19, scope: !7484)
!7551 = !DILocation(line: 1702, column: 11, scope: !7484)
!7552 = !DILocation(line: 1702, column: 9, scope: !7484)
!7553 = !DILocation(line: 1703, column: 6, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 1703, column: 6)
!7555 = !DILocation(line: 1703, column: 13, scope: !7554)
!7556 = !DILocation(line: 1703, column: 6, scope: !7484)
!7557 = !DILocation(line: 1704, column: 3, scope: !7554)
!7558 = !DILocation(line: 1707, column: 22, scope: !7484)
!7559 = !DILocation(line: 1707, column: 11, scope: !7484)
!7560 = !DILocation(line: 1707, column: 9, scope: !7484)
!7561 = !DILocation(line: 1708, column: 6, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 1708, column: 6)
!7563 = !DILocation(line: 1708, column: 13, scope: !7562)
!7564 = !DILocation(line: 1708, column: 6, scope: !7484)
!7565 = !DILocation(line: 1709, column: 3, scope: !7562)
!7566 = !DILocation(line: 1712, column: 6, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 1712, column: 6)
!7568 = !DILocation(line: 1712, column: 6, scope: !7484)
!7569 = !DILocation(line: 1713, column: 28, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7567, file: !3, line: 1712, column: 22)
!7571 = !DILocation(line: 1713, column: 12, scope: !7570)
!7572 = !DILocation(line: 1713, column: 10, scope: !7570)
!7573 = !DILocation(line: 1714, column: 7, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 1714, column: 7)
!7575 = !DILocation(line: 1714, column: 14, scope: !7574)
!7576 = !DILocation(line: 1714, column: 7, scope: !7570)
!7577 = !DILocation(line: 1715, column: 4, scope: !7574)
!7578 = !DILocation(line: 1716, column: 2, scope: !7570)
!7579 = !DILabel(scope: !7484, name: "error", file: !3, line: 1717)
!7580 = !DILocation(line: 1717, column: 1, scope: !7484)
!7581 = !DILocation(line: 1718, column: 6, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 1718, column: 6)
!7583 = !DILocation(line: 1718, column: 13, scope: !7582)
!7584 = !DILocation(line: 1718, column: 6, scope: !7484)
!7585 = !DILocation(line: 1719, column: 3, scope: !7582)
!7586 = !DILocation(line: 1720, column: 9, scope: !7484)
!7587 = !DILocation(line: 1720, column: 2, scope: !7484)
!7588 = distinct !DISubprogram(name: "power_down_qam", scope: !3, file: !3, line: 4124, type: !5239, scopeLine: 4125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!7589 = !DILocalVariable(name: "state", arg: 1, scope: !7588, file: !3, line: 4124, type: !4562)
!7590 = !DILocation(line: 4124, column: 46, scope: !7588)
!7591 = !DILocalVariable(name: "data", scope: !7588, file: !3, line: 4126, type: !408)
!7592 = !DILocation(line: 4126, column: 6, scope: !7588)
!7593 = !DILocalVariable(name: "cmd_result", scope: !7588, file: !3, line: 4127, type: !408)
!7594 = !DILocation(line: 4127, column: 6, scope: !7588)
!7595 = !DILocalVariable(name: "status", scope: !7588, file: !3, line: 4128, type: !405)
!7596 = !DILocation(line: 4128, column: 6, scope: !7588)
!7597 = !DILocation(line: 4130, column: 2, scope: !7588)
!7598 = !DILocation(line: 4130, column: 2, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !3, line: 4130, column: 2)
!7600 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 4130, column: 2)
!7601 = !DILocation(line: 4130, column: 2, scope: !7600)
!7602 = !DILocation(line: 4131, column: 18, scope: !7588)
!7603 = !DILocation(line: 4131, column: 11, scope: !7588)
!7604 = !DILocation(line: 4131, column: 9, scope: !7588)
!7605 = !DILocation(line: 4132, column: 6, scope: !7606)
!7606 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 4132, column: 6)
!7607 = !DILocation(line: 4132, column: 13, scope: !7606)
!7608 = !DILocation(line: 4132, column: 6, scope: !7588)
!7609 = !DILocation(line: 4133, column: 3, scope: !7606)
!7610 = !DILocation(line: 4134, column: 6, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 4134, column: 6)
!7612 = !DILocation(line: 4134, column: 11, scope: !7611)
!7613 = !DILocation(line: 4134, column: 6, scope: !7588)
!7614 = !DILocation(line: 4140, column: 20, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 4134, column: 36)
!7616 = !DILocation(line: 4140, column: 12, scope: !7615)
!7617 = !DILocation(line: 4140, column: 10, scope: !7615)
!7618 = !DILocation(line: 4141, column: 7, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 4141, column: 7)
!7620 = !DILocation(line: 4141, column: 14, scope: !7619)
!7621 = !DILocation(line: 4141, column: 7, scope: !7615)
!7622 = !DILocation(line: 4142, column: 4, scope: !7619)
!7623 = !DILocation(line: 4143, column: 24, scope: !7615)
!7624 = !DILocation(line: 4143, column: 12, scope: !7615)
!7625 = !DILocation(line: 4143, column: 10, scope: !7615)
!7626 = !DILocation(line: 4146, column: 7, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 4146, column: 7)
!7628 = !DILocation(line: 4146, column: 14, scope: !7627)
!7629 = !DILocation(line: 4146, column: 7, scope: !7615)
!7630 = !DILocation(line: 4147, column: 4, scope: !7627)
!7631 = !DILocation(line: 4148, column: 2, scope: !7615)
!7632 = !DILocation(line: 4150, column: 22, scope: !7588)
!7633 = !DILocation(line: 4150, column: 11, scope: !7588)
!7634 = !DILocation(line: 4150, column: 9, scope: !7588)
!7635 = !DILocation(line: 4150, column: 2, scope: !7588)
!7636 = !DILabel(scope: !7588, name: "error", file: !3, line: 4152)
!7637 = !DILocation(line: 4152, column: 1, scope: !7588)
!7638 = !DILocation(line: 4153, column: 6, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 4153, column: 6)
!7640 = !DILocation(line: 4153, column: 13, scope: !7639)
!7641 = !DILocation(line: 4153, column: 6, scope: !7588)
!7642 = !DILocation(line: 4154, column: 3, scope: !7639)
!7643 = !DILocation(line: 4156, column: 9, scope: !7588)
!7644 = !DILocation(line: 4156, column: 2, scope: !7588)
!7645 = distinct !DISubprogram(name: "set_dvbt_standard", scope: !3, file: !3, line: 3471, type: !7235, scopeLine: 3473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!7646 = !DILocalVariable(name: "state", arg: 1, scope: !7645, file: !3, line: 3471, type: !4562)
!7647 = !DILocation(line: 3471, column: 49, scope: !7645)
!7648 = !DILocalVariable(name: "o_mode", arg: 2, scope: !7645, file: !3, line: 3472, type: !292)
!7649 = !DILocation(line: 3472, column: 27, scope: !7645)
!7650 = !DILocalVariable(name: "cmd_result", scope: !7645, file: !3, line: 3474, type: !408)
!7651 = !DILocation(line: 3474, column: 6, scope: !7645)
!7652 = !DILocalVariable(name: "data", scope: !7645, file: !3, line: 3475, type: !408)
!7653 = !DILocation(line: 3475, column: 6, scope: !7645)
!7654 = !DILocalVariable(name: "status", scope: !7645, file: !3, line: 3476, type: !405)
!7655 = !DILocation(line: 3476, column: 6, scope: !7645)
!7656 = !DILocation(line: 3478, column: 2, scope: !7645)
!7657 = !DILocation(line: 3478, column: 2, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7659, file: !3, line: 3478, column: 2)
!7659 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3478, column: 2)
!7660 = !DILocation(line: 3478, column: 2, scope: !7659)
!7661 = !DILocation(line: 3480, column: 16, scope: !7645)
!7662 = !DILocation(line: 3480, column: 2, scope: !7645)
!7663 = !DILocation(line: 3482, column: 25, scope: !7645)
!7664 = !DILocation(line: 3482, column: 2, scope: !7645)
!7665 = !DILocation(line: 3484, column: 23, scope: !7645)
!7666 = !DILocation(line: 3484, column: 11, scope: !7645)
!7667 = !DILocation(line: 3484, column: 9, scope: !7645)
!7668 = !DILocation(line: 3488, column: 6, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3488, column: 6)
!7670 = !DILocation(line: 3488, column: 13, scope: !7669)
!7671 = !DILocation(line: 3488, column: 6, scope: !7645)
!7672 = !DILocation(line: 3489, column: 3, scope: !7669)
!7673 = !DILocation(line: 3492, column: 23, scope: !7645)
!7674 = !DILocation(line: 3492, column: 11, scope: !7645)
!7675 = !DILocation(line: 3492, column: 9, scope: !7645)
!7676 = !DILocation(line: 3495, column: 6, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3495, column: 6)
!7678 = !DILocation(line: 3495, column: 13, scope: !7677)
!7679 = !DILocation(line: 3495, column: 6, scope: !7645)
!7680 = !DILocation(line: 3496, column: 3, scope: !7677)
!7681 = !DILocation(line: 3499, column: 19, scope: !7645)
!7682 = !DILocation(line: 3499, column: 11, scope: !7645)
!7683 = !DILocation(line: 3499, column: 9, scope: !7645)
!7684 = !DILocation(line: 3500, column: 6, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3500, column: 6)
!7686 = !DILocation(line: 3500, column: 13, scope: !7685)
!7687 = !DILocation(line: 3500, column: 6, scope: !7645)
!7688 = !DILocation(line: 3501, column: 3, scope: !7685)
!7689 = !DILocation(line: 3502, column: 19, scope: !7645)
!7690 = !DILocation(line: 3502, column: 11, scope: !7645)
!7691 = !DILocation(line: 3502, column: 9, scope: !7645)
!7692 = !DILocation(line: 3503, column: 6, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3503, column: 6)
!7694 = !DILocation(line: 3503, column: 13, scope: !7693)
!7695 = !DILocation(line: 3503, column: 6, scope: !7645)
!7696 = !DILocation(line: 3504, column: 3, scope: !7693)
!7697 = !DILocation(line: 3505, column: 19, scope: !7645)
!7698 = !DILocation(line: 3505, column: 11, scope: !7645)
!7699 = !DILocation(line: 3505, column: 9, scope: !7645)
!7700 = !DILocation(line: 3506, column: 6, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3506, column: 6)
!7702 = !DILocation(line: 3506, column: 13, scope: !7701)
!7703 = !DILocation(line: 3506, column: 6, scope: !7645)
!7704 = !DILocation(line: 3507, column: 3, scope: !7701)
!7705 = !DILocation(line: 3511, column: 19, scope: !7645)
!7706 = !DILocation(line: 3511, column: 11, scope: !7645)
!7707 = !DILocation(line: 3511, column: 9, scope: !7645)
!7708 = !DILocation(line: 3512, column: 6, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3512, column: 6)
!7710 = !DILocation(line: 3512, column: 13, scope: !7709)
!7711 = !DILocation(line: 3512, column: 6, scope: !7645)
!7712 = !DILocation(line: 3513, column: 3, scope: !7709)
!7713 = !DILocation(line: 3515, column: 19, scope: !7645)
!7714 = !DILocation(line: 3515, column: 11, scope: !7645)
!7715 = !DILocation(line: 3515, column: 9, scope: !7645)
!7716 = !DILocation(line: 3516, column: 6, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3516, column: 6)
!7718 = !DILocation(line: 3516, column: 13, scope: !7717)
!7719 = !DILocation(line: 3516, column: 6, scope: !7645)
!7720 = !DILocation(line: 3517, column: 3, scope: !7717)
!7721 = !DILocation(line: 3519, column: 19, scope: !7645)
!7722 = !DILocation(line: 3519, column: 11, scope: !7645)
!7723 = !DILocation(line: 3519, column: 9, scope: !7645)
!7724 = !DILocation(line: 3520, column: 6, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3520, column: 6)
!7726 = !DILocation(line: 3520, column: 13, scope: !7725)
!7727 = !DILocation(line: 3520, column: 6, scope: !7645)
!7728 = !DILocation(line: 3521, column: 3, scope: !7725)
!7729 = !DILocation(line: 3523, column: 19, scope: !7645)
!7730 = !DILocation(line: 3523, column: 11, scope: !7645)
!7731 = !DILocation(line: 3523, column: 9, scope: !7645)
!7732 = !DILocation(line: 3524, column: 6, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3524, column: 6)
!7734 = !DILocation(line: 3524, column: 13, scope: !7733)
!7735 = !DILocation(line: 3524, column: 6, scope: !7645)
!7736 = !DILocation(line: 3525, column: 3, scope: !7733)
!7737 = !DILocation(line: 3526, column: 22, scope: !7645)
!7738 = !DILocation(line: 3526, column: 11, scope: !7645)
!7739 = !DILocation(line: 3526, column: 9, scope: !7645)
!7740 = !DILocation(line: 3527, column: 6, scope: !7741)
!7741 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3527, column: 6)
!7742 = !DILocation(line: 3527, column: 13, scope: !7741)
!7743 = !DILocation(line: 3527, column: 6, scope: !7645)
!7744 = !DILocation(line: 3528, column: 3, scope: !7741)
!7745 = !DILocation(line: 3530, column: 19, scope: !7645)
!7746 = !DILocation(line: 3530, column: 11, scope: !7645)
!7747 = !DILocation(line: 3530, column: 9, scope: !7645)
!7748 = !DILocation(line: 3531, column: 6, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3531, column: 6)
!7750 = !DILocation(line: 3531, column: 13, scope: !7749)
!7751 = !DILocation(line: 3531, column: 6, scope: !7645)
!7752 = !DILocation(line: 3532, column: 3, scope: !7749)
!7753 = !DILocation(line: 3535, column: 19, scope: !7645)
!7754 = !DILocation(line: 3535, column: 11, scope: !7645)
!7755 = !DILocation(line: 3535, column: 9, scope: !7645)
!7756 = !DILocation(line: 3536, column: 6, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3536, column: 6)
!7758 = !DILocation(line: 3536, column: 13, scope: !7757)
!7759 = !DILocation(line: 3536, column: 6, scope: !7645)
!7760 = !DILocation(line: 3537, column: 3, scope: !7757)
!7761 = !DILocation(line: 3538, column: 19, scope: !7645)
!7762 = !DILocation(line: 3538, column: 11, scope: !7645)
!7763 = !DILocation(line: 3538, column: 9, scope: !7645)
!7764 = !DILocation(line: 3539, column: 6, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3539, column: 6)
!7766 = !DILocation(line: 3539, column: 13, scope: !7765)
!7767 = !DILocation(line: 3539, column: 6, scope: !7645)
!7768 = !DILocation(line: 3540, column: 3, scope: !7765)
!7769 = !DILocation(line: 3541, column: 19, scope: !7645)
!7770 = !DILocation(line: 3541, column: 11, scope: !7645)
!7771 = !DILocation(line: 3541, column: 9, scope: !7645)
!7772 = !DILocation(line: 3542, column: 6, scope: !7773)
!7773 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3542, column: 6)
!7774 = !DILocation(line: 3542, column: 13, scope: !7773)
!7775 = !DILocation(line: 3542, column: 6, scope: !7645)
!7776 = !DILocation(line: 3543, column: 3, scope: !7773)
!7777 = !DILocation(line: 3545, column: 19, scope: !7645)
!7778 = !DILocation(line: 3545, column: 11, scope: !7645)
!7779 = !DILocation(line: 3545, column: 9, scope: !7645)
!7780 = !DILocation(line: 3546, column: 6, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3546, column: 6)
!7782 = !DILocation(line: 3546, column: 13, scope: !7781)
!7783 = !DILocation(line: 3546, column: 6, scope: !7645)
!7784 = !DILocation(line: 3547, column: 3, scope: !7781)
!7785 = !DILocation(line: 3548, column: 19, scope: !7645)
!7786 = !DILocation(line: 3548, column: 11, scope: !7645)
!7787 = !DILocation(line: 3548, column: 9, scope: !7645)
!7788 = !DILocation(line: 3549, column: 6, scope: !7789)
!7789 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3549, column: 6)
!7790 = !DILocation(line: 3549, column: 13, scope: !7789)
!7791 = !DILocation(line: 3549, column: 6, scope: !7645)
!7792 = !DILocation(line: 3550, column: 3, scope: !7789)
!7793 = !DILocation(line: 3551, column: 19, scope: !7645)
!7794 = !DILocation(line: 3551, column: 11, scope: !7645)
!7795 = !DILocation(line: 3551, column: 9, scope: !7645)
!7796 = !DILocation(line: 3552, column: 6, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3552, column: 6)
!7798 = !DILocation(line: 3552, column: 13, scope: !7797)
!7799 = !DILocation(line: 3552, column: 6, scope: !7645)
!7800 = !DILocation(line: 3553, column: 3, scope: !7797)
!7801 = !DILocation(line: 3554, column: 19, scope: !7645)
!7802 = !DILocation(line: 3554, column: 11, scope: !7645)
!7803 = !DILocation(line: 3554, column: 9, scope: !7645)
!7804 = !DILocation(line: 3555, column: 6, scope: !7805)
!7805 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3555, column: 6)
!7806 = !DILocation(line: 3555, column: 13, scope: !7805)
!7807 = !DILocation(line: 3555, column: 6, scope: !7645)
!7808 = !DILocation(line: 3556, column: 3, scope: !7805)
!7809 = !DILocation(line: 3557, column: 19, scope: !7645)
!7810 = !DILocation(line: 3557, column: 11, scope: !7645)
!7811 = !DILocation(line: 3557, column: 9, scope: !7645)
!7812 = !DILocation(line: 3558, column: 6, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3558, column: 6)
!7814 = !DILocation(line: 3558, column: 13, scope: !7813)
!7815 = !DILocation(line: 3558, column: 6, scope: !7645)
!7816 = !DILocation(line: 3559, column: 3, scope: !7813)
!7817 = !DILocation(line: 3562, column: 19, scope: !7645)
!7818 = !DILocation(line: 3562, column: 11, scope: !7645)
!7819 = !DILocation(line: 3562, column: 9, scope: !7645)
!7820 = !DILocation(line: 3563, column: 6, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3563, column: 6)
!7822 = !DILocation(line: 3563, column: 13, scope: !7821)
!7823 = !DILocation(line: 3563, column: 6, scope: !7645)
!7824 = !DILocation(line: 3564, column: 3, scope: !7821)
!7825 = !DILocation(line: 3565, column: 19, scope: !7645)
!7826 = !DILocation(line: 3565, column: 11, scope: !7645)
!7827 = !DILocation(line: 3565, column: 9, scope: !7645)
!7828 = !DILocation(line: 3566, column: 6, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3566, column: 6)
!7830 = !DILocation(line: 3566, column: 13, scope: !7829)
!7831 = !DILocation(line: 3566, column: 6, scope: !7645)
!7832 = !DILocation(line: 3567, column: 3, scope: !7829)
!7833 = !DILocation(line: 3569, column: 24, scope: !7645)
!7834 = !DILocation(line: 3569, column: 11, scope: !7645)
!7835 = !DILocation(line: 3569, column: 9, scope: !7645)
!7836 = !DILocation(line: 3571, column: 6, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3571, column: 6)
!7838 = !DILocation(line: 3571, column: 13, scope: !7837)
!7839 = !DILocation(line: 3571, column: 6, scope: !7645)
!7840 = !DILocation(line: 3572, column: 3, scope: !7837)
!7841 = !DILocation(line: 3574, column: 19, scope: !7645)
!7842 = !DILocation(line: 3574, column: 11, scope: !7645)
!7843 = !DILocation(line: 3574, column: 9, scope: !7645)
!7844 = !DILocation(line: 3575, column: 6, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3575, column: 6)
!7846 = !DILocation(line: 3575, column: 13, scope: !7845)
!7847 = !DILocation(line: 3575, column: 6, scope: !7645)
!7848 = !DILocation(line: 3576, column: 3, scope: !7845)
!7849 = !DILocation(line: 3577, column: 19, scope: !7645)
!7850 = !DILocation(line: 3577, column: 11, scope: !7645)
!7851 = !DILocation(line: 3577, column: 9, scope: !7645)
!7852 = !DILocation(line: 3578, column: 6, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3578, column: 6)
!7854 = !DILocation(line: 3578, column: 13, scope: !7853)
!7855 = !DILocation(line: 3578, column: 6, scope: !7645)
!7856 = !DILocation(line: 3579, column: 3, scope: !7853)
!7857 = !DILocation(line: 3581, column: 19, scope: !7645)
!7858 = !DILocation(line: 3581, column: 11, scope: !7645)
!7859 = !DILocation(line: 3581, column: 9, scope: !7645)
!7860 = !DILocation(line: 3582, column: 6, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3582, column: 6)
!7862 = !DILocation(line: 3582, column: 13, scope: !7861)
!7863 = !DILocation(line: 3582, column: 6, scope: !7645)
!7864 = !DILocation(line: 3583, column: 3, scope: !7861)
!7865 = !DILocation(line: 3584, column: 19, scope: !7645)
!7866 = !DILocation(line: 3584, column: 11, scope: !7645)
!7867 = !DILocation(line: 3584, column: 9, scope: !7645)
!7868 = !DILocation(line: 3585, column: 6, scope: !7869)
!7869 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3585, column: 6)
!7870 = !DILocation(line: 3585, column: 13, scope: !7869)
!7871 = !DILocation(line: 3585, column: 6, scope: !7645)
!7872 = !DILocation(line: 3586, column: 3, scope: !7869)
!7873 = !DILocation(line: 3589, column: 31, scope: !7645)
!7874 = !DILocation(line: 3589, column: 11, scope: !7645)
!7875 = !DILocation(line: 3589, column: 9, scope: !7645)
!7876 = !DILocation(line: 3590, column: 6, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3590, column: 6)
!7878 = !DILocation(line: 3590, column: 13, scope: !7877)
!7879 = !DILocation(line: 3590, column: 6, scope: !7645)
!7880 = !DILocation(line: 3591, column: 3, scope: !7877)
!7881 = !DILocation(line: 3592, column: 23, scope: !7645)
!7882 = !DILocation(line: 3592, column: 31, scope: !7645)
!7883 = !DILocation(line: 3592, column: 38, scope: !7645)
!7884 = !DILocation(line: 3592, column: 11, scope: !7645)
!7885 = !DILocation(line: 3592, column: 9, scope: !7645)
!7886 = !DILocation(line: 3593, column: 6, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3593, column: 6)
!7888 = !DILocation(line: 3593, column: 13, scope: !7887)
!7889 = !DILocation(line: 3593, column: 6, scope: !7645)
!7890 = !DILocation(line: 3594, column: 3, scope: !7887)
!7891 = !DILocation(line: 3597, column: 19, scope: !7645)
!7892 = !DILocation(line: 3597, column: 11, scope: !7645)
!7893 = !DILocation(line: 3597, column: 9, scope: !7645)
!7894 = !DILocation(line: 3598, column: 6, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3598, column: 6)
!7896 = !DILocation(line: 3598, column: 13, scope: !7895)
!7897 = !DILocation(line: 3598, column: 6, scope: !7645)
!7898 = !DILocation(line: 3599, column: 3, scope: !7895)
!7899 = !DILocation(line: 3601, column: 22, scope: !7645)
!7900 = !DILocation(line: 3601, column: 30, scope: !7645)
!7901 = !DILocation(line: 3601, column: 37, scope: !7645)
!7902 = !DILocation(line: 3601, column: 11, scope: !7645)
!7903 = !DILocation(line: 3601, column: 9, scope: !7645)
!7904 = !DILocation(line: 3602, column: 6, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3602, column: 6)
!7906 = !DILocation(line: 3602, column: 13, scope: !7905)
!7907 = !DILocation(line: 3602, column: 6, scope: !7645)
!7908 = !DILocation(line: 3603, column: 3, scope: !7905)
!7909 = !DILocation(line: 3604, column: 22, scope: !7645)
!7910 = !DILocation(line: 3604, column: 30, scope: !7645)
!7911 = !DILocation(line: 3604, column: 37, scope: !7645)
!7912 = !DILocation(line: 3604, column: 11, scope: !7645)
!7913 = !DILocation(line: 3604, column: 9, scope: !7645)
!7914 = !DILocation(line: 3605, column: 6, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3605, column: 6)
!7916 = !DILocation(line: 3605, column: 13, scope: !7915)
!7917 = !DILocation(line: 3605, column: 6, scope: !7645)
!7918 = !DILocation(line: 3606, column: 3, scope: !7915)
!7919 = !DILocation(line: 3609, column: 18, scope: !7645)
!7920 = !DILocation(line: 3609, column: 11, scope: !7645)
!7921 = !DILocation(line: 3609, column: 9, scope: !7645)
!7922 = !DILocation(line: 3610, column: 6, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3610, column: 6)
!7924 = !DILocation(line: 3610, column: 13, scope: !7923)
!7925 = !DILocation(line: 3610, column: 6, scope: !7645)
!7926 = !DILocation(line: 3611, column: 3, scope: !7923)
!7927 = !DILocation(line: 3612, column: 7, scope: !7645)
!7928 = !DILocation(line: 3613, column: 19, scope: !7645)
!7929 = !DILocation(line: 3613, column: 52, scope: !7645)
!7930 = !DILocation(line: 3613, column: 11, scope: !7645)
!7931 = !DILocation(line: 3613, column: 9, scope: !7645)
!7932 = !DILocation(line: 3614, column: 6, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3614, column: 6)
!7934 = !DILocation(line: 3614, column: 13, scope: !7933)
!7935 = !DILocation(line: 3614, column: 6, scope: !7645)
!7936 = !DILocation(line: 3615, column: 3, scope: !7933)
!7937 = !DILocation(line: 3618, column: 19, scope: !7645)
!7938 = !DILocation(line: 3618, column: 11, scope: !7645)
!7939 = !DILocation(line: 3618, column: 9, scope: !7645)
!7940 = !DILocation(line: 3619, column: 6, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3619, column: 6)
!7942 = !DILocation(line: 3619, column: 13, scope: !7941)
!7943 = !DILocation(line: 3619, column: 6, scope: !7645)
!7944 = !DILocation(line: 3620, column: 3, scope: !7941)
!7945 = !DILocation(line: 3622, column: 7, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3622, column: 6)
!7947 = !DILocation(line: 3622, column: 14, scope: !7946)
!7948 = !DILocation(line: 3622, column: 6, scope: !7645)
!7949 = !DILocation(line: 3624, column: 20, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 3622, column: 34)
!7951 = !DILocation(line: 3625, column: 6, scope: !7950)
!7952 = !DILocation(line: 3625, column: 13, scope: !7950)
!7953 = !DILocation(line: 3625, column: 31, scope: !7950)
!7954 = !DILocation(line: 3624, column: 12, scope: !7950)
!7955 = !DILocation(line: 3624, column: 10, scope: !7950)
!7956 = !DILocation(line: 3626, column: 7, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 3626, column: 7)
!7958 = !DILocation(line: 3626, column: 14, scope: !7957)
!7959 = !DILocation(line: 3626, column: 7, scope: !7950)
!7960 = !DILocation(line: 3627, column: 4, scope: !7957)
!7961 = !DILocation(line: 3628, column: 2, scope: !7950)
!7962 = !DILocation(line: 3641, column: 19, scope: !7645)
!7963 = !DILocation(line: 3641, column: 11, scope: !7645)
!7964 = !DILocation(line: 3641, column: 9, scope: !7645)
!7965 = !DILocation(line: 3642, column: 6, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3642, column: 6)
!7967 = !DILocation(line: 3642, column: 13, scope: !7966)
!7968 = !DILocation(line: 3642, column: 6, scope: !7645)
!7969 = !DILocation(line: 3643, column: 3, scope: !7966)
!7970 = !DILocation(line: 3651, column: 19, scope: !7645)
!7971 = !DILocation(line: 3651, column: 11, scope: !7645)
!7972 = !DILocation(line: 3651, column: 9, scope: !7645)
!7973 = !DILocation(line: 3652, column: 6, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3652, column: 6)
!7975 = !DILocation(line: 3652, column: 13, scope: !7974)
!7976 = !DILocation(line: 3652, column: 6, scope: !7645)
!7977 = !DILocation(line: 3653, column: 3, scope: !7974)
!7978 = !DILocation(line: 3655, column: 19, scope: !7645)
!7979 = !DILocation(line: 3655, column: 11, scope: !7645)
!7980 = !DILocation(line: 3655, column: 9, scope: !7645)
!7981 = !DILocation(line: 3656, column: 6, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3656, column: 6)
!7983 = !DILocation(line: 3656, column: 13, scope: !7982)
!7984 = !DILocation(line: 3656, column: 6, scope: !7645)
!7985 = !DILocation(line: 3657, column: 3, scope: !7982)
!7986 = !DILocation(line: 3660, column: 28, scope: !7645)
!7987 = !DILocation(line: 3660, column: 11, scope: !7645)
!7988 = !DILocation(line: 3660, column: 9, scope: !7645)
!7989 = !DILocation(line: 3661, column: 6, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3661, column: 6)
!7991 = !DILocation(line: 3661, column: 13, scope: !7990)
!7992 = !DILocation(line: 3661, column: 6, scope: !7645)
!7993 = !DILocation(line: 3662, column: 3, scope: !7990)
!7994 = !DILocation(line: 3664, column: 33, scope: !7645)
!7995 = !DILocation(line: 3664, column: 11, scope: !7645)
!7996 = !DILocation(line: 3664, column: 9, scope: !7645)
!7997 = !DILocation(line: 3665, column: 6, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3665, column: 6)
!7999 = !DILocation(line: 3665, column: 13, scope: !7998)
!8000 = !DILocation(line: 3665, column: 6, scope: !7645)
!8001 = !DILocation(line: 3666, column: 3, scope: !7998)
!8002 = !DILocation(line: 3665, column: 15, scope: !7998)
!8003 = !DILabel(scope: !7645, name: "error", file: !3, line: 3668)
!8004 = !DILocation(line: 3668, column: 1, scope: !7645)
!8005 = !DILocation(line: 3669, column: 6, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7645, file: !3, line: 3669, column: 6)
!8007 = !DILocation(line: 3669, column: 13, scope: !8006)
!8008 = !DILocation(line: 3669, column: 6, scope: !7645)
!8009 = !DILocation(line: 3670, column: 3, scope: !8006)
!8010 = !DILocation(line: 3671, column: 9, scope: !7645)
!8011 = !DILocation(line: 3671, column: 2, scope: !7645)
!8012 = distinct !DISubprogram(name: "set_qam_standard", scope: !3, file: !3, line: 5682, type: !7235, scopeLine: 5684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!8013 = !DILocalVariable(name: "state", arg: 1, scope: !8012, file: !3, line: 5682, type: !4562)
!8014 = !DILocation(line: 5682, column: 48, scope: !8012)
!8015 = !DILocalVariable(name: "o_mode", arg: 2, scope: !8012, file: !3, line: 5683, type: !292)
!8016 = !DILocation(line: 5683, column: 26, scope: !8012)
!8017 = !DILocalVariable(name: "status", scope: !8012, file: !3, line: 5685, type: !405)
!8018 = !DILocation(line: 5685, column: 6, scope: !8012)
!8019 = !DILocation(line: 5692, column: 2, scope: !8012)
!8020 = !DILocation(line: 5692, column: 2, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8022, file: !3, line: 5692, column: 2)
!8022 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5692, column: 2)
!8023 = !DILocation(line: 5692, column: 2, scope: !8022)
!8024 = !DILocation(line: 5695, column: 24, scope: !8012)
!8025 = !DILocation(line: 5695, column: 2, scope: !8012)
!8026 = !DILocation(line: 5698, column: 24, scope: !8012)
!8027 = !DILocation(line: 5698, column: 11, scope: !8012)
!8028 = !DILocation(line: 5698, column: 9, scope: !8012)
!8029 = !DILocation(line: 5699, column: 6, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5699, column: 6)
!8031 = !DILocation(line: 5699, column: 13, scope: !8030)
!8032 = !DILocation(line: 5699, column: 6, scope: !8012)
!8033 = !DILocation(line: 5700, column: 3, scope: !8030)
!8034 = !DILocation(line: 5702, column: 25, scope: !8012)
!8035 = !DILocation(line: 5702, column: 11, scope: !8012)
!8036 = !DILocation(line: 5702, column: 9, scope: !8012)
!8037 = !DILocation(line: 5703, column: 6, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5703, column: 6)
!8039 = !DILocation(line: 5703, column: 13, scope: !8038)
!8040 = !DILocation(line: 5703, column: 6, scope: !8012)
!8041 = !DILocation(line: 5704, column: 3, scope: !8038)
!8042 = !DILocation(line: 5708, column: 19, scope: !8012)
!8043 = !DILocation(line: 5708, column: 11, scope: !8012)
!8044 = !DILocation(line: 5708, column: 9, scope: !8012)
!8045 = !DILocation(line: 5709, column: 6, scope: !8046)
!8046 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5709, column: 6)
!8047 = !DILocation(line: 5709, column: 13, scope: !8046)
!8048 = !DILocation(line: 5709, column: 6, scope: !8012)
!8049 = !DILocation(line: 5710, column: 3, scope: !8046)
!8050 = !DILocation(line: 5711, column: 19, scope: !8012)
!8051 = !DILocation(line: 5711, column: 11, scope: !8012)
!8052 = !DILocation(line: 5711, column: 9, scope: !8012)
!8053 = !DILocation(line: 5712, column: 6, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5712, column: 6)
!8055 = !DILocation(line: 5712, column: 13, scope: !8054)
!8056 = !DILocation(line: 5712, column: 6, scope: !8012)
!8057 = !DILocation(line: 5713, column: 3, scope: !8054)
!8058 = !DILocation(line: 5717, column: 10, scope: !8012)
!8059 = !DILocation(line: 5717, column: 2, scope: !8012)
!8060 = !DILocation(line: 5719, column: 25, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5717, column: 18)
!8062 = !DILocation(line: 5719, column: 12, scope: !8061)
!8063 = !DILocation(line: 5719, column: 10, scope: !8061)
!8064 = !DILocation(line: 5722, column: 3, scope: !8061)
!8065 = !DILocation(line: 5724, column: 26, scope: !8061)
!8066 = !DILocation(line: 5724, column: 12, scope: !8061)
!8067 = !DILocation(line: 5724, column: 10, scope: !8061)
!8068 = !DILocation(line: 5728, column: 7, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8061, file: !3, line: 5728, column: 7)
!8070 = !DILocation(line: 5728, column: 14, scope: !8069)
!8071 = !DILocation(line: 5728, column: 7, scope: !8061)
!8072 = !DILocation(line: 5729, column: 4, scope: !8069)
!8073 = !DILocation(line: 5730, column: 26, scope: !8061)
!8074 = !DILocation(line: 5730, column: 12, scope: !8061)
!8075 = !DILocation(line: 5730, column: 10, scope: !8061)
!8076 = !DILocation(line: 5735, column: 3, scope: !8061)
!8077 = !DILocation(line: 5737, column: 10, scope: !8061)
!8078 = !DILocation(line: 5738, column: 2, scope: !8061)
!8079 = !DILocation(line: 5739, column: 6, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5739, column: 6)
!8081 = !DILocation(line: 5739, column: 13, scope: !8080)
!8082 = !DILocation(line: 5739, column: 6, scope: !8012)
!8083 = !DILocation(line: 5740, column: 3, scope: !8080)
!8084 = !DILocation(line: 5742, column: 19, scope: !8012)
!8085 = !DILocation(line: 5742, column: 11, scope: !8012)
!8086 = !DILocation(line: 5742, column: 9, scope: !8012)
!8087 = !DILocation(line: 5743, column: 6, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5743, column: 6)
!8089 = !DILocation(line: 5743, column: 13, scope: !8088)
!8090 = !DILocation(line: 5743, column: 6, scope: !8012)
!8091 = !DILocation(line: 5744, column: 3, scope: !8088)
!8092 = !DILocation(line: 5745, column: 19, scope: !8012)
!8093 = !DILocation(line: 5745, column: 11, scope: !8012)
!8094 = !DILocation(line: 5745, column: 9, scope: !8012)
!8095 = !DILocation(line: 5746, column: 6, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5746, column: 6)
!8097 = !DILocation(line: 5746, column: 13, scope: !8096)
!8098 = !DILocation(line: 5746, column: 6, scope: !8012)
!8099 = !DILocation(line: 5747, column: 3, scope: !8096)
!8100 = !DILocation(line: 5748, column: 19, scope: !8012)
!8101 = !DILocation(line: 5748, column: 11, scope: !8012)
!8102 = !DILocation(line: 5748, column: 9, scope: !8012)
!8103 = !DILocation(line: 5750, column: 6, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5750, column: 6)
!8105 = !DILocation(line: 5750, column: 13, scope: !8104)
!8106 = !DILocation(line: 5750, column: 6, scope: !8012)
!8107 = !DILocation(line: 5751, column: 3, scope: !8104)
!8108 = !DILocation(line: 5753, column: 19, scope: !8012)
!8109 = !DILocation(line: 5753, column: 11, scope: !8012)
!8110 = !DILocation(line: 5753, column: 9, scope: !8012)
!8111 = !DILocation(line: 5754, column: 6, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5754, column: 6)
!8113 = !DILocation(line: 5754, column: 13, scope: !8112)
!8114 = !DILocation(line: 5754, column: 6, scope: !8012)
!8115 = !DILocation(line: 5755, column: 3, scope: !8112)
!8116 = !DILocation(line: 5756, column: 19, scope: !8012)
!8117 = !DILocation(line: 5756, column: 11, scope: !8012)
!8118 = !DILocation(line: 5756, column: 9, scope: !8012)
!8119 = !DILocation(line: 5757, column: 6, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5757, column: 6)
!8121 = !DILocation(line: 5757, column: 13, scope: !8120)
!8122 = !DILocation(line: 5757, column: 6, scope: !8012)
!8123 = !DILocation(line: 5758, column: 3, scope: !8120)
!8124 = !DILocation(line: 5759, column: 19, scope: !8012)
!8125 = !DILocation(line: 5759, column: 11, scope: !8012)
!8126 = !DILocation(line: 5759, column: 9, scope: !8012)
!8127 = !DILocation(line: 5760, column: 6, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5760, column: 6)
!8129 = !DILocation(line: 5760, column: 13, scope: !8128)
!8130 = !DILocation(line: 5760, column: 6, scope: !8012)
!8131 = !DILocation(line: 5761, column: 3, scope: !8128)
!8132 = !DILocation(line: 5762, column: 19, scope: !8012)
!8133 = !DILocation(line: 5762, column: 11, scope: !8012)
!8134 = !DILocation(line: 5762, column: 9, scope: !8012)
!8135 = !DILocation(line: 5763, column: 6, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5763, column: 6)
!8137 = !DILocation(line: 5763, column: 13, scope: !8136)
!8138 = !DILocation(line: 5763, column: 6, scope: !8012)
!8139 = !DILocation(line: 5764, column: 3, scope: !8136)
!8140 = !DILocation(line: 5765, column: 19, scope: !8012)
!8141 = !DILocation(line: 5765, column: 11, scope: !8012)
!8142 = !DILocation(line: 5765, column: 9, scope: !8012)
!8143 = !DILocation(line: 5766, column: 6, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5766, column: 6)
!8145 = !DILocation(line: 5766, column: 13, scope: !8144)
!8146 = !DILocation(line: 5766, column: 6, scope: !8012)
!8147 = !DILocation(line: 5767, column: 3, scope: !8144)
!8148 = !DILocation(line: 5769, column: 19, scope: !8012)
!8149 = !DILocation(line: 5769, column: 11, scope: !8012)
!8150 = !DILocation(line: 5769, column: 9, scope: !8012)
!8151 = !DILocation(line: 5770, column: 6, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5770, column: 6)
!8153 = !DILocation(line: 5770, column: 13, scope: !8152)
!8154 = !DILocation(line: 5770, column: 6, scope: !8012)
!8155 = !DILocation(line: 5771, column: 3, scope: !8152)
!8156 = !DILocation(line: 5772, column: 19, scope: !8012)
!8157 = !DILocation(line: 5772, column: 11, scope: !8012)
!8158 = !DILocation(line: 5772, column: 9, scope: !8012)
!8159 = !DILocation(line: 5773, column: 6, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5773, column: 6)
!8161 = !DILocation(line: 5773, column: 13, scope: !8160)
!8162 = !DILocation(line: 5773, column: 6, scope: !8012)
!8163 = !DILocation(line: 5774, column: 3, scope: !8160)
!8164 = !DILocation(line: 5775, column: 19, scope: !8012)
!8165 = !DILocation(line: 5775, column: 11, scope: !8012)
!8166 = !DILocation(line: 5775, column: 9, scope: !8012)
!8167 = !DILocation(line: 5776, column: 6, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5776, column: 6)
!8169 = !DILocation(line: 5776, column: 13, scope: !8168)
!8170 = !DILocation(line: 5776, column: 6, scope: !8012)
!8171 = !DILocation(line: 5777, column: 3, scope: !8168)
!8172 = !DILocation(line: 5778, column: 19, scope: !8012)
!8173 = !DILocation(line: 5778, column: 11, scope: !8012)
!8174 = !DILocation(line: 5778, column: 9, scope: !8012)
!8175 = !DILocation(line: 5779, column: 6, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5779, column: 6)
!8177 = !DILocation(line: 5779, column: 13, scope: !8176)
!8178 = !DILocation(line: 5779, column: 6, scope: !8012)
!8179 = !DILocation(line: 5780, column: 3, scope: !8176)
!8180 = !DILocation(line: 5783, column: 19, scope: !8012)
!8181 = !DILocation(line: 5783, column: 11, scope: !8012)
!8182 = !DILocation(line: 5783, column: 9, scope: !8012)
!8183 = !DILocation(line: 5784, column: 6, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5784, column: 6)
!8185 = !DILocation(line: 5784, column: 13, scope: !8184)
!8186 = !DILocation(line: 5784, column: 6, scope: !8012)
!8187 = !DILocation(line: 5785, column: 3, scope: !8184)
!8188 = !DILocation(line: 5786, column: 19, scope: !8012)
!8189 = !DILocation(line: 5786, column: 11, scope: !8012)
!8190 = !DILocation(line: 5786, column: 9, scope: !8012)
!8191 = !DILocation(line: 5787, column: 6, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5787, column: 6)
!8193 = !DILocation(line: 5787, column: 13, scope: !8192)
!8194 = !DILocation(line: 5787, column: 6, scope: !8012)
!8195 = !DILocation(line: 5788, column: 3, scope: !8192)
!8196 = !DILocation(line: 5789, column: 19, scope: !8012)
!8197 = !DILocation(line: 5789, column: 11, scope: !8012)
!8198 = !DILocation(line: 5789, column: 9, scope: !8012)
!8199 = !DILocation(line: 5790, column: 6, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5790, column: 6)
!8201 = !DILocation(line: 5790, column: 13, scope: !8200)
!8202 = !DILocation(line: 5790, column: 6, scope: !8012)
!8203 = !DILocation(line: 5791, column: 3, scope: !8200)
!8204 = !DILocation(line: 5792, column: 19, scope: !8012)
!8205 = !DILocation(line: 5792, column: 11, scope: !8012)
!8206 = !DILocation(line: 5792, column: 9, scope: !8012)
!8207 = !DILocation(line: 5793, column: 6, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5793, column: 6)
!8209 = !DILocation(line: 5793, column: 13, scope: !8208)
!8210 = !DILocation(line: 5793, column: 6, scope: !8012)
!8211 = !DILocation(line: 5794, column: 3, scope: !8208)
!8212 = !DILocation(line: 5795, column: 19, scope: !8012)
!8213 = !DILocation(line: 5795, column: 11, scope: !8012)
!8214 = !DILocation(line: 5795, column: 9, scope: !8012)
!8215 = !DILocation(line: 5796, column: 6, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5796, column: 6)
!8217 = !DILocation(line: 5796, column: 13, scope: !8216)
!8218 = !DILocation(line: 5796, column: 6, scope: !8012)
!8219 = !DILocation(line: 5797, column: 3, scope: !8216)
!8220 = !DILocation(line: 5798, column: 19, scope: !8012)
!8221 = !DILocation(line: 5798, column: 11, scope: !8012)
!8222 = !DILocation(line: 5798, column: 9, scope: !8012)
!8223 = !DILocation(line: 5799, column: 6, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5799, column: 6)
!8225 = !DILocation(line: 5799, column: 13, scope: !8224)
!8226 = !DILocation(line: 5799, column: 6, scope: !8012)
!8227 = !DILocation(line: 5800, column: 3, scope: !8224)
!8228 = !DILocation(line: 5801, column: 19, scope: !8012)
!8229 = !DILocation(line: 5801, column: 11, scope: !8012)
!8230 = !DILocation(line: 5801, column: 9, scope: !8012)
!8231 = !DILocation(line: 5802, column: 6, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5802, column: 6)
!8233 = !DILocation(line: 5802, column: 13, scope: !8232)
!8234 = !DILocation(line: 5802, column: 6, scope: !8012)
!8235 = !DILocation(line: 5803, column: 3, scope: !8232)
!8236 = !DILocation(line: 5806, column: 22, scope: !8012)
!8237 = !DILocation(line: 5806, column: 11, scope: !8012)
!8238 = !DILocation(line: 5806, column: 9, scope: !8012)
!8239 = !DILocation(line: 5807, column: 6, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5807, column: 6)
!8241 = !DILocation(line: 5807, column: 13, scope: !8240)
!8242 = !DILocation(line: 5807, column: 6, scope: !8012)
!8243 = !DILocation(line: 5808, column: 3, scope: !8240)
!8244 = !DILocation(line: 5809, column: 19, scope: !8012)
!8245 = !DILocation(line: 5809, column: 11, scope: !8012)
!8246 = !DILocation(line: 5809, column: 9, scope: !8012)
!8247 = !DILocation(line: 5810, column: 6, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5810, column: 6)
!8249 = !DILocation(line: 5810, column: 13, scope: !8248)
!8250 = !DILocation(line: 5810, column: 6, scope: !8012)
!8251 = !DILocation(line: 5811, column: 3, scope: !8248)
!8252 = !DILocation(line: 5814, column: 31, scope: !8012)
!8253 = !DILocation(line: 5814, column: 11, scope: !8012)
!8254 = !DILocation(line: 5814, column: 9, scope: !8012)
!8255 = !DILocation(line: 5815, column: 6, scope: !8256)
!8256 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5815, column: 6)
!8257 = !DILocation(line: 5815, column: 13, scope: !8256)
!8258 = !DILocation(line: 5815, column: 6, scope: !8012)
!8259 = !DILocation(line: 5816, column: 3, scope: !8256)
!8260 = !DILocation(line: 5819, column: 19, scope: !8012)
!8261 = !DILocation(line: 5819, column: 11, scope: !8012)
!8262 = !DILocation(line: 5819, column: 9, scope: !8012)
!8263 = !DILocation(line: 5820, column: 6, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5820, column: 6)
!8265 = !DILocation(line: 5820, column: 13, scope: !8264)
!8266 = !DILocation(line: 5820, column: 6, scope: !8012)
!8267 = !DILocation(line: 5821, column: 3, scope: !8264)
!8268 = !DILocation(line: 5824, column: 19, scope: !8012)
!8269 = !DILocation(line: 5824, column: 11, scope: !8012)
!8270 = !DILocation(line: 5824, column: 9, scope: !8012)
!8271 = !DILocation(line: 5825, column: 6, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5825, column: 6)
!8273 = !DILocation(line: 5825, column: 13, scope: !8272)
!8274 = !DILocation(line: 5825, column: 6, scope: !8012)
!8275 = !DILocation(line: 5826, column: 3, scope: !8272)
!8276 = !DILocation(line: 5831, column: 20, scope: !8012)
!8277 = !DILocation(line: 5831, column: 11, scope: !8012)
!8278 = !DILocation(line: 5831, column: 9, scope: !8012)
!8279 = !DILocation(line: 5832, column: 6, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5832, column: 6)
!8281 = !DILocation(line: 5832, column: 13, scope: !8280)
!8282 = !DILocation(line: 5832, column: 6, scope: !8012)
!8283 = !DILocation(line: 5833, column: 3, scope: !8280)
!8284 = !DILocation(line: 5834, column: 23, scope: !8012)
!8285 = !DILocation(line: 5834, column: 32, scope: !8012)
!8286 = !DILocation(line: 5834, column: 39, scope: !8012)
!8287 = !DILocation(line: 5834, column: 11, scope: !8012)
!8288 = !DILocation(line: 5834, column: 9, scope: !8012)
!8289 = !DILocation(line: 5835, column: 6, scope: !8290)
!8290 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5835, column: 6)
!8291 = !DILocation(line: 5835, column: 13, scope: !8290)
!8292 = !DILocation(line: 5835, column: 6, scope: !8012)
!8293 = !DILocation(line: 5836, column: 3, scope: !8290)
!8294 = !DILocation(line: 5839, column: 22, scope: !8012)
!8295 = !DILocation(line: 5839, column: 31, scope: !8012)
!8296 = !DILocation(line: 5839, column: 38, scope: !8012)
!8297 = !DILocation(line: 5839, column: 11, scope: !8012)
!8298 = !DILocation(line: 5839, column: 9, scope: !8012)
!8299 = !DILocation(line: 5840, column: 6, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5840, column: 6)
!8301 = !DILocation(line: 5840, column: 13, scope: !8300)
!8302 = !DILocation(line: 5840, column: 6, scope: !8012)
!8303 = !DILocation(line: 5841, column: 3, scope: !8300)
!8304 = !DILocation(line: 5842, column: 22, scope: !8012)
!8305 = !DILocation(line: 5842, column: 31, scope: !8012)
!8306 = !DILocation(line: 5842, column: 38, scope: !8012)
!8307 = !DILocation(line: 5842, column: 11, scope: !8012)
!8308 = !DILocation(line: 5842, column: 9, scope: !8012)
!8309 = !DILocation(line: 5843, column: 6, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5843, column: 6)
!8311 = !DILocation(line: 5843, column: 13, scope: !8310)
!8312 = !DILocation(line: 5843, column: 6, scope: !8012)
!8313 = !DILocation(line: 5844, column: 3, scope: !8310)
!8314 = !DILocation(line: 5847, column: 19, scope: !8012)
!8315 = !DILocation(line: 5847, column: 11, scope: !8012)
!8316 = !DILocation(line: 5847, column: 9, scope: !8012)
!8317 = !DILocation(line: 5847, column: 2, scope: !8012)
!8318 = !DILabel(scope: !8012, name: "error", file: !3, line: 5848)
!8319 = !DILocation(line: 5848, column: 1, scope: !8012)
!8320 = !DILocation(line: 5849, column: 6, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 5849, column: 6)
!8322 = !DILocation(line: 5849, column: 13, scope: !8321)
!8323 = !DILocation(line: 5849, column: 6, scope: !8012)
!8324 = !DILocation(line: 5850, column: 3, scope: !8321)
!8325 = !DILocation(line: 5851, column: 9, scope: !8012)
!8326 = !DILocation(line: 5851, column: 2, scope: !8012)
!8327 = distinct !DISubprogram(name: "scu_command", scope: !3, file: !3, line: 1426, type: !8328, scopeLine: 1429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!8328 = !DISubroutineType(types: !8329)
!8329 = !{!405, !4562, !408, !455, !669, !455, !669}
!8330 = !DILocalVariable(name: "m", arg: 1, scope: !8331, file: !8332, line: 363, type: !3249)
!8331 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !8332, file: !8332, line: 363, type: !8333, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!8332 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!8333 = !DISubroutineType(types: !8334)
!8334 = !{!716, !3249}
!8335 = !DILocation(line: 363, column: 74, scope: !8331, inlinedAt: !8336)
!8336 = distinct !DILocation(line: 1465, column: 18, scope: !8327)
!8337 = !DILocalVariable(name: "state", arg: 1, scope: !8327, file: !3, line: 1426, type: !4562)
!8338 = !DILocation(line: 1426, column: 43, scope: !8327)
!8339 = !DILocalVariable(name: "cmd", arg: 2, scope: !8327, file: !3, line: 1427, type: !408)
!8340 = !DILocation(line: 1427, column: 14, scope: !8327)
!8341 = !DILocalVariable(name: "parameter_len", arg: 3, scope: !8327, file: !3, line: 1427, type: !455)
!8342 = !DILocation(line: 1427, column: 22, scope: !8327)
!8343 = !DILocalVariable(name: "parameter", arg: 4, scope: !8327, file: !3, line: 1428, type: !669)
!8344 = !DILocation(line: 1428, column: 15, scope: !8327)
!8345 = !DILocalVariable(name: "result_len", arg: 5, scope: !8327, file: !3, line: 1428, type: !455)
!8346 = !DILocation(line: 1428, column: 29, scope: !8327)
!8347 = !DILocalVariable(name: "result", arg: 6, scope: !8327, file: !3, line: 1428, type: !669)
!8348 = !DILocation(line: 1428, column: 46, scope: !8327)
!8349 = !DILocalVariable(name: "cur_cmd", scope: !8327, file: !3, line: 1433, type: !408)
!8350 = !DILocation(line: 1433, column: 6, scope: !8327)
!8351 = !DILocalVariable(name: "status", scope: !8327, file: !3, line: 1434, type: !405)
!8352 = !DILocation(line: 1434, column: 6, scope: !8327)
!8353 = !DILocalVariable(name: "end", scope: !8327, file: !3, line: 1435, type: !716)
!8354 = !DILocation(line: 1435, column: 16, scope: !8327)
!8355 = !DILocalVariable(name: "buffer", scope: !8327, file: !3, line: 1436, type: !8356)
!8356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 272, elements: !4436)
!8357 = !DILocation(line: 1436, column: 5, scope: !8327)
!8358 = !DILocalVariable(name: "cnt", scope: !8327, file: !3, line: 1437, type: !405)
!8359 = !DILocation(line: 1437, column: 6, scope: !8327)
!8360 = !DILocalVariable(name: "ii", scope: !8327, file: !3, line: 1437, type: !405)
!8361 = !DILocation(line: 1437, column: 15, scope: !8327)
!8362 = !DILocalVariable(name: "p", scope: !8327, file: !3, line: 1438, type: !421)
!8363 = !DILocation(line: 1438, column: 14, scope: !8327)
!8364 = !DILocalVariable(name: "errname", scope: !8327, file: !3, line: 1439, type: !8365)
!8365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 240, elements: !4525)
!8366 = !DILocation(line: 1439, column: 7, scope: !8327)
!8367 = !DILocation(line: 1441, column: 2, scope: !8327)
!8368 = !DILocation(line: 1441, column: 2, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 1441, column: 2)
!8370 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 1441, column: 2)
!8371 = !DILocation(line: 1441, column: 2, scope: !8370)
!8372 = !DILocation(line: 1443, column: 7, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 1443, column: 6)
!8374 = !DILocation(line: 1443, column: 11, scope: !8373)
!8375 = !DILocation(line: 1443, column: 17, scope: !8373)
!8376 = !DILocation(line: 1443, column: 22, scope: !8373)
!8377 = !DILocation(line: 1443, column: 36, scope: !8373)
!8378 = !DILocation(line: 1443, column: 41, scope: !8373)
!8379 = !DILocation(line: 1443, column: 45, scope: !8373)
!8380 = !DILocation(line: 1443, column: 55, scope: !8373)
!8381 = !DILocation(line: 1443, column: 65, scope: !8373)
!8382 = !DILocation(line: 1444, column: 8, scope: !8373)
!8383 = !DILocation(line: 1444, column: 19, scope: !8373)
!8384 = !DILocation(line: 1444, column: 24, scope: !8373)
!8385 = !DILocation(line: 1444, column: 28, scope: !8373)
!8386 = !DILocation(line: 1444, column: 35, scope: !8373)
!8387 = !DILocation(line: 1443, column: 6, scope: !8327)
!8388 = !DILocation(line: 1445, column: 3, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 1444, column: 46)
!8390 = !DILocation(line: 1446, column: 10, scope: !8389)
!8391 = !DILocation(line: 1446, column: 3, scope: !8389)
!8392 = !DILocation(line: 1449, column: 14, scope: !8327)
!8393 = !DILocation(line: 1449, column: 21, scope: !8327)
!8394 = !DILocation(line: 1449, column: 2, scope: !8327)
!8395 = !DILocation(line: 1453, column: 6, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 1453, column: 6)
!8397 = !DILocation(line: 1453, column: 6, scope: !8327)
!8398 = !DILocation(line: 1454, column: 13, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8400, file: !3, line: 1454, column: 3)
!8400 = distinct !DILexicalBlock(scope: !8396, file: !3, line: 1453, column: 17)
!8401 = !DILocation(line: 1454, column: 27, scope: !8399)
!8402 = !DILocation(line: 1454, column: 11, scope: !8399)
!8403 = !DILocation(line: 1454, column: 8, scope: !8399)
!8404 = !DILocation(line: 1454, column: 32, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 1454, column: 3)
!8406 = !DILocation(line: 1454, column: 35, scope: !8405)
!8407 = !DILocation(line: 1454, column: 3, scope: !8399)
!8408 = !DILocation(line: 1455, column: 21, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8405, file: !3, line: 1454, column: 50)
!8410 = !DILocation(line: 1455, column: 31, scope: !8409)
!8411 = !DILocation(line: 1455, column: 35, scope: !8409)
!8412 = !DILocation(line: 1455, column: 20, scope: !8409)
!8413 = !DILocation(line: 1455, column: 14, scope: !8409)
!8414 = !DILocation(line: 1455, column: 4, scope: !8409)
!8415 = !DILocation(line: 1455, column: 18, scope: !8409)
!8416 = !DILocation(line: 1456, column: 22, scope: !8409)
!8417 = !DILocation(line: 1456, column: 32, scope: !8409)
!8418 = !DILocation(line: 1456, column: 36, scope: !8409)
!8419 = !DILocation(line: 1456, column: 42, scope: !8409)
!8420 = !DILocation(line: 1456, column: 20, scope: !8409)
!8421 = !DILocation(line: 1456, column: 14, scope: !8409)
!8422 = !DILocation(line: 1456, column: 4, scope: !8409)
!8423 = !DILocation(line: 1456, column: 18, scope: !8409)
!8424 = !DILocation(line: 1457, column: 3, scope: !8409)
!8425 = !DILocation(line: 1454, column: 44, scope: !8405)
!8426 = !DILocation(line: 1454, column: 3, scope: !8405)
!8427 = distinct !{!8427, !8407, !8428}
!8428 = !DILocation(line: 1457, column: 3, scope: !8399)
!8429 = !DILocation(line: 1458, column: 2, scope: !8400)
!8430 = !DILocation(line: 1459, column: 19, scope: !8327)
!8431 = !DILocation(line: 1459, column: 23, scope: !8327)
!8432 = !DILocation(line: 1459, column: 18, scope: !8327)
!8433 = !DILocation(line: 1459, column: 12, scope: !8327)
!8434 = !DILocation(line: 1459, column: 2, scope: !8327)
!8435 = !DILocation(line: 1459, column: 16, scope: !8327)
!8436 = !DILocation(line: 1460, column: 20, scope: !8327)
!8437 = !DILocation(line: 1460, column: 24, scope: !8327)
!8438 = !DILocation(line: 1460, column: 30, scope: !8327)
!8439 = !DILocation(line: 1460, column: 18, scope: !8327)
!8440 = !DILocation(line: 1460, column: 12, scope: !8327)
!8441 = !DILocation(line: 1460, column: 2, scope: !8327)
!8442 = !DILocation(line: 1460, column: 16, scope: !8327)
!8443 = !DILocation(line: 1462, column: 14, scope: !8327)
!8444 = !DILocation(line: 1463, column: 5, scope: !8327)
!8445 = !DILocation(line: 1463, column: 19, scope: !8327)
!8446 = !DILocation(line: 1462, column: 40, scope: !8327)
!8447 = !DILocation(line: 1463, column: 25, scope: !8327)
!8448 = !DILocation(line: 1463, column: 30, scope: !8327)
!8449 = !DILocation(line: 1462, column: 2, scope: !8327)
!8450 = !DILocation(line: 1465, column: 8, scope: !8327)
!8451 = !DILocation(line: 365, column: 27, scope: !8452, inlinedAt: !8336)
!8452 = distinct !DILexicalBlock(scope: !8331, file: !8332, line: 365, column: 6)
!8453 = !DILocation(line: 365, column: 6, scope: !8452, inlinedAt: !8336)
!8454 = !DILocation(line: 365, column: 6, scope: !8331, inlinedAt: !8336)
!8455 = !DILocation(line: 366, column: 12, scope: !8456, inlinedAt: !8336)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !8332, line: 366, column: 7)
!8457 = distinct !DILexicalBlock(scope: !8452, file: !8332, line: 365, column: 31)
!8458 = !DILocation(line: 366, column: 14, scope: !8456, inlinedAt: !8336)
!8459 = !DILocation(line: 366, column: 7, scope: !8457, inlinedAt: !8336)
!8460 = !DILocation(line: 367, column: 4, scope: !8456, inlinedAt: !8336)
!8461 = !DILocation(line: 368, column: 28, scope: !8457, inlinedAt: !8336)
!8462 = !DILocation(line: 368, column: 10, scope: !8457, inlinedAt: !8336)
!8463 = !DILocation(line: 368, column: 3, scope: !8457, inlinedAt: !8336)
!8464 = !DILocation(line: 370, column: 29, scope: !8465, inlinedAt: !8336)
!8465 = distinct !DILexicalBlock(scope: !8452, file: !8332, line: 369, column: 9)
!8466 = !DILocation(line: 370, column: 10, scope: !8465, inlinedAt: !8336)
!8467 = !DILocation(line: 370, column: 3, scope: !8465, inlinedAt: !8336)
!8468 = !DILocation(line: 372, column: 1, scope: !8331, inlinedAt: !8336)
!8469 = !DILocation(line: 1465, column: 16, scope: !8327)
!8470 = !DILocation(line: 1465, column: 6, scope: !8327)
!8471 = !DILocation(line: 1466, column: 2, scope: !8327)
!8472 = !DILocation(line: 1467, column: 3, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 1466, column: 5)
!8474 = !DILocation(line: 1468, column: 19, scope: !8473)
!8475 = !DILocation(line: 1468, column: 12, scope: !8473)
!8476 = !DILocation(line: 1468, column: 10, scope: !8473)
!8477 = !DILocation(line: 1469, column: 7, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 1469, column: 7)
!8479 = !DILocation(line: 1469, column: 14, scope: !8478)
!8480 = !DILocation(line: 1469, column: 7, scope: !8473)
!8481 = !DILocation(line: 1470, column: 4, scope: !8478)
!8482 = !DILocation(line: 1471, column: 2, scope: !8473)
!8483 = !DILocation(line: 1471, column: 13, scope: !8327)
!8484 = !DILocation(line: 1471, column: 21, scope: !8327)
!8485 = !DILocation(line: 1471, column: 39, scope: !8327)
!8486 = !DILocation(line: 1471, column: 43, scope: !8327)
!8487 = !DILocation(line: 0, scope: !8327)
!8488 = distinct !{!8488, !8471, !8489}
!8489 = !DILocation(line: 1471, column: 70, scope: !8327)
!8490 = !DILocation(line: 1472, column: 6, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 1472, column: 6)
!8492 = !DILocation(line: 1472, column: 14, scope: !8491)
!8493 = !DILocation(line: 1472, column: 6, scope: !8327)
!8494 = !DILocation(line: 1473, column: 3, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8491, file: !3, line: 1472, column: 32)
!8496 = !DILocation(line: 1474, column: 10, scope: !8495)
!8497 = !DILocation(line: 1475, column: 3, scope: !8495)
!8498 = !DILocation(line: 1478, column: 7, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 1478, column: 6)
!8500 = !DILocation(line: 1478, column: 18, scope: !8499)
!8501 = !DILocation(line: 1478, column: 23, scope: !8499)
!8502 = !DILocation(line: 1478, column: 27, scope: !8499)
!8503 = !DILocation(line: 1478, column: 34, scope: !8499)
!8504 = !DILocation(line: 1478, column: 6, scope: !8327)
!8505 = !DILocalVariable(name: "err", scope: !8506, file: !3, line: 1479, type: !400)
!8506 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 1478, column: 44)
!8507 = !DILocation(line: 1479, column: 7, scope: !8506)
!8508 = !DILocalVariable(name: "ii", scope: !8506, file: !3, line: 1480, type: !405)
!8509 = !DILocation(line: 1480, column: 7, scope: !8506)
!8510 = !DILocation(line: 1482, column: 13, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 1482, column: 3)
!8512 = !DILocation(line: 1482, column: 24, scope: !8511)
!8513 = !DILocation(line: 1482, column: 11, scope: !8511)
!8514 = !DILocation(line: 1482, column: 8, scope: !8511)
!8515 = !DILocation(line: 1482, column: 29, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8511, file: !3, line: 1482, column: 3)
!8517 = !DILocation(line: 1482, column: 32, scope: !8516)
!8518 = !DILocation(line: 1482, column: 3, scope: !8511)
!8519 = !DILocation(line: 1483, column: 20, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 1482, column: 47)
!8521 = !DILocation(line: 1483, column: 48, scope: !8520)
!8522 = !DILocation(line: 1483, column: 46, scope: !8520)
!8523 = !DILocation(line: 1484, column: 7, scope: !8520)
!8524 = !DILocation(line: 1484, column: 14, scope: !8520)
!8525 = !DILocation(line: 1483, column: 13, scope: !8520)
!8526 = !DILocation(line: 1483, column: 11, scope: !8520)
!8527 = !DILocation(line: 1485, column: 8, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 1485, column: 8)
!8529 = !DILocation(line: 1485, column: 15, scope: !8528)
!8530 = !DILocation(line: 1485, column: 8, scope: !8520)
!8531 = !DILocation(line: 1486, column: 5, scope: !8528)
!8532 = !DILocation(line: 1487, column: 3, scope: !8520)
!8533 = !DILocation(line: 1482, column: 41, scope: !8516)
!8534 = !DILocation(line: 1482, column: 3, scope: !8516)
!8535 = distinct !{!8535, !8518, !8536}
!8536 = !DILocation(line: 1487, column: 3, scope: !8511)
!8537 = !DILocation(line: 1490, column: 14, scope: !8506)
!8538 = !DILocation(line: 1490, column: 7, scope: !8506)
!8539 = !DILocation(line: 1491, column: 7, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 1491, column: 7)
!8541 = !DILocation(line: 1491, column: 11, scope: !8540)
!8542 = !DILocation(line: 1491, column: 7, scope: !8506)
!8543 = !DILocation(line: 1492, column: 4, scope: !8540)
!8544 = !DILocation(line: 1495, column: 11, scope: !8506)
!8545 = !DILocation(line: 1495, column: 3, scope: !8506)
!8546 = !DILocation(line: 1497, column: 6, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8506, file: !3, line: 1495, column: 16)
!8548 = !DILocation(line: 1498, column: 4, scope: !8547)
!8549 = !DILocation(line: 1500, column: 6, scope: !8547)
!8550 = !DILocation(line: 1501, column: 4, scope: !8547)
!8551 = !DILocation(line: 1503, column: 6, scope: !8547)
!8552 = !DILocation(line: 1504, column: 4, scope: !8547)
!8553 = !DILocation(line: 1506, column: 6, scope: !8547)
!8554 = !DILocation(line: 1507, column: 4, scope: !8547)
!8555 = !DILocation(line: 1509, column: 12, scope: !8547)
!8556 = !DILocation(line: 1509, column: 36, scope: !8547)
!8557 = !DILocation(line: 1509, column: 4, scope: !8547)
!8558 = !DILocation(line: 1510, column: 8, scope: !8547)
!8559 = !DILocation(line: 1510, column: 6, scope: !8547)
!8560 = !DILocation(line: 1511, column: 3, scope: !8547)
!8561 = !DILocation(line: 1512, column: 3, scope: !8506)
!8562 = !DILocation(line: 1513, column: 3, scope: !8506)
!8563 = !DILocation(line: 1514, column: 10, scope: !8506)
!8564 = !DILocation(line: 1515, column: 3, scope: !8506)
!8565 = !DILocation(line: 1478, column: 41, scope: !8499)
!8566 = !DILabel(scope: !8327, name: "error", file: !3, line: 1518)
!8567 = !DILocation(line: 1518, column: 1, scope: !8327)
!8568 = !DILocation(line: 1519, column: 6, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 1519, column: 6)
!8570 = !DILocation(line: 1519, column: 13, scope: !8569)
!8571 = !DILocation(line: 1519, column: 6, scope: !8327)
!8572 = !DILocation(line: 1520, column: 3, scope: !8569)
!8573 = !DILocation(line: 1519, column: 15, scope: !8569)
!8574 = !DILabel(scope: !8327, name: "error2", file: !3, line: 1521)
!8575 = !DILocation(line: 1521, column: 1, scope: !8327)
!8576 = !DILocation(line: 1522, column: 16, scope: !8327)
!8577 = !DILocation(line: 1522, column: 23, scope: !8327)
!8578 = !DILocation(line: 1522, column: 2, scope: !8327)
!8579 = !DILocation(line: 1523, column: 9, scope: !8327)
!8580 = !DILocation(line: 1523, column: 2, scope: !8327)
!8581 = !DILocation(line: 1524, column: 1, scope: !8327)
!8582 = distinct !DISubprogram(name: "set_iqm_af", scope: !3, file: !3, line: 1526, type: !7485, scopeLine: 1527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!8583 = !DILocalVariable(name: "state", arg: 1, scope: !8582, file: !3, line: 1526, type: !4562)
!8584 = !DILocation(line: 1526, column: 42, scope: !8582)
!8585 = !DILocalVariable(name: "active", arg: 2, scope: !8582, file: !3, line: 1526, type: !406)
!8586 = !DILocation(line: 1526, column: 54, scope: !8582)
!8587 = !DILocalVariable(name: "data", scope: !8582, file: !3, line: 1528, type: !408)
!8588 = !DILocation(line: 1528, column: 6, scope: !8582)
!8589 = !DILocalVariable(name: "status", scope: !8582, file: !3, line: 1529, type: !405)
!8590 = !DILocation(line: 1529, column: 6, scope: !8582)
!8591 = !DILocation(line: 1531, column: 2, scope: !8582)
!8592 = !DILocation(line: 1531, column: 2, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 1531, column: 2)
!8594 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1531, column: 2)
!8595 = !DILocation(line: 1531, column: 2, scope: !8594)
!8596 = !DILocation(line: 1534, column: 18, scope: !8582)
!8597 = !DILocation(line: 1534, column: 11, scope: !8582)
!8598 = !DILocation(line: 1534, column: 9, scope: !8582)
!8599 = !DILocation(line: 1535, column: 6, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1535, column: 6)
!8601 = !DILocation(line: 1535, column: 13, scope: !8600)
!8602 = !DILocation(line: 1535, column: 6, scope: !8582)
!8603 = !DILocation(line: 1536, column: 3, scope: !8600)
!8604 = !DILocation(line: 1538, column: 7, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1538, column: 6)
!8606 = !DILocation(line: 1538, column: 6, scope: !8582)
!8607 = !DILocation(line: 1539, column: 8, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 1538, column: 15)
!8609 = !DILocation(line: 1544, column: 2, scope: !8608)
!8610 = !DILocation(line: 1545, column: 8, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8605, file: !3, line: 1544, column: 9)
!8612 = !DILocation(line: 1552, column: 19, scope: !8582)
!8613 = !DILocation(line: 1552, column: 43, scope: !8582)
!8614 = !DILocation(line: 1552, column: 11, scope: !8582)
!8615 = !DILocation(line: 1552, column: 9, scope: !8582)
!8616 = !DILocation(line: 1552, column: 2, scope: !8582)
!8617 = !DILabel(scope: !8582, name: "error", file: !3, line: 1554)
!8618 = !DILocation(line: 1554, column: 1, scope: !8582)
!8619 = !DILocation(line: 1555, column: 6, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 1555, column: 6)
!8621 = !DILocation(line: 1555, column: 13, scope: !8620)
!8622 = !DILocation(line: 1555, column: 6, scope: !8582)
!8623 = !DILocation(line: 1556, column: 3, scope: !8620)
!8624 = !DILocation(line: 1557, column: 9, scope: !8582)
!8625 = !DILocation(line: 1557, column: 2, scope: !8582)
!8626 = distinct !DISubprogram(name: "ctrl_power_mode", scope: !3, file: !3, line: 1560, type: !8627, scopeLine: 1561, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!8627 = !DISubroutineType(types: !8628)
!8628 = !{!405, !4562, !8629}
!8629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!8630 = !DILocalVariable(name: "state", arg: 1, scope: !8626, file: !3, line: 1560, type: !4562)
!8631 = !DILocation(line: 1560, column: 47, scope: !8626)
!8632 = !DILocalVariable(name: "mode", arg: 2, scope: !8626, file: !3, line: 1560, type: !8629)
!8633 = !DILocation(line: 1560, column: 75, scope: !8626)
!8634 = !DILocalVariable(name: "status", scope: !8626, file: !3, line: 1562, type: !405)
!8635 = !DILocation(line: 1562, column: 6, scope: !8626)
!8636 = !DILocalVariable(name: "sio_cc_pwd_mode", scope: !8626, file: !3, line: 1563, type: !408)
!8637 = !DILocation(line: 1563, column: 6, scope: !8626)
!8638 = !DILocation(line: 1565, column: 2, scope: !8626)
!8639 = !DILocation(line: 1565, column: 2, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8641, file: !3, line: 1565, column: 2)
!8641 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1565, column: 2)
!8642 = !DILocation(line: 1565, column: 2, scope: !8641)
!8643 = !DILocation(line: 1568, column: 6, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1568, column: 6)
!8645 = !DILocation(line: 1568, column: 11, scope: !8644)
!8646 = !DILocation(line: 1568, column: 6, scope: !8626)
!8647 = !DILocation(line: 1569, column: 3, scope: !8644)
!8648 = !DILocation(line: 1571, column: 11, scope: !8626)
!8649 = !DILocation(line: 1571, column: 10, scope: !8626)
!8650 = !DILocation(line: 1571, column: 2, scope: !8626)
!8651 = !DILocation(line: 1573, column: 19, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1571, column: 17)
!8653 = !DILocation(line: 1574, column: 3, scope: !8652)
!8654 = !DILocation(line: 1576, column: 19, scope: !8652)
!8655 = !DILocation(line: 1577, column: 3, scope: !8652)
!8656 = !DILocation(line: 1579, column: 19, scope: !8652)
!8657 = !DILocation(line: 1580, column: 3, scope: !8652)
!8658 = !DILocation(line: 1582, column: 19, scope: !8652)
!8659 = !DILocation(line: 1583, column: 3, scope: !8652)
!8660 = !DILocation(line: 1585, column: 19, scope: !8652)
!8661 = !DILocation(line: 1586, column: 3, scope: !8652)
!8662 = !DILocation(line: 1589, column: 3, scope: !8652)
!8663 = !DILocation(line: 1593, column: 6, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1593, column: 6)
!8665 = !DILocation(line: 1593, column: 13, scope: !8664)
!8666 = !DILocation(line: 1593, column: 38, scope: !8664)
!8667 = !DILocation(line: 1593, column: 37, scope: !8664)
!8668 = !DILocation(line: 1593, column: 34, scope: !8664)
!8669 = !DILocation(line: 1593, column: 6, scope: !8626)
!8670 = !DILocation(line: 1594, column: 3, scope: !8664)
!8671 = !DILocation(line: 1597, column: 6, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1597, column: 6)
!8673 = !DILocation(line: 1597, column: 13, scope: !8672)
!8674 = !DILocation(line: 1597, column: 34, scope: !8672)
!8675 = !DILocation(line: 1597, column: 6, scope: !8626)
!8676 = !DILocation(line: 1598, column: 28, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8672, file: !3, line: 1597, column: 51)
!8678 = !DILocation(line: 1598, column: 12, scope: !8677)
!8679 = !DILocation(line: 1598, column: 10, scope: !8677)
!8680 = !DILocation(line: 1599, column: 7, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 1599, column: 7)
!8682 = !DILocation(line: 1599, column: 14, scope: !8681)
!8683 = !DILocation(line: 1599, column: 7, scope: !8677)
!8684 = !DILocation(line: 1600, column: 4, scope: !8681)
!8685 = !DILocation(line: 1601, column: 40, scope: !8677)
!8686 = !DILocation(line: 1601, column: 12, scope: !8677)
!8687 = !DILocation(line: 1601, column: 10, scope: !8677)
!8688 = !DILocation(line: 1602, column: 7, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 1602, column: 7)
!8690 = !DILocation(line: 1602, column: 14, scope: !8689)
!8691 = !DILocation(line: 1602, column: 7, scope: !8677)
!8692 = !DILocation(line: 1603, column: 4, scope: !8689)
!8693 = !DILocation(line: 1604, column: 2, scope: !8677)
!8694 = !DILocation(line: 1606, column: 7, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1606, column: 6)
!8696 = !DILocation(line: 1606, column: 6, scope: !8695)
!8697 = !DILocation(line: 1606, column: 12, scope: !8695)
!8698 = !DILocation(line: 1606, column: 6, scope: !8626)
!8699 = !DILocation(line: 1608, column: 2, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 1606, column: 29)
!8701 = !DILocation(line: 1618, column: 11, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 1608, column: 9)
!8703 = !DILocation(line: 1618, column: 18, scope: !8702)
!8704 = !DILocation(line: 1618, column: 3, scope: !8702)
!8705 = !DILocation(line: 1620, column: 25, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1618, column: 36)
!8707 = !DILocation(line: 1620, column: 13, scope: !8706)
!8708 = !DILocation(line: 1620, column: 11, scope: !8706)
!8709 = !DILocation(line: 1621, column: 8, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 1621, column: 8)
!8711 = !DILocation(line: 1621, column: 15, scope: !8710)
!8712 = !DILocation(line: 1621, column: 8, scope: !8706)
!8713 = !DILocation(line: 1622, column: 5, scope: !8710)
!8714 = !DILocation(line: 1623, column: 29, scope: !8706)
!8715 = !DILocation(line: 1623, column: 13, scope: !8706)
!8716 = !DILocation(line: 1623, column: 11, scope: !8706)
!8717 = !DILocation(line: 1624, column: 8, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 1624, column: 8)
!8719 = !DILocation(line: 1624, column: 15, scope: !8718)
!8720 = !DILocation(line: 1624, column: 8, scope: !8706)
!8721 = !DILocation(line: 1625, column: 5, scope: !8718)
!8722 = !DILocation(line: 1626, column: 4, scope: !8706)
!8723 = !DILocation(line: 1629, column: 25, scope: !8706)
!8724 = !DILocation(line: 1629, column: 13, scope: !8706)
!8725 = !DILocation(line: 1629, column: 11, scope: !8706)
!8726 = !DILocation(line: 1630, column: 8, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 1630, column: 8)
!8728 = !DILocation(line: 1630, column: 15, scope: !8727)
!8729 = !DILocation(line: 1630, column: 8, scope: !8706)
!8730 = !DILocation(line: 1631, column: 5, scope: !8727)
!8731 = !DILocation(line: 1632, column: 28, scope: !8706)
!8732 = !DILocation(line: 1632, column: 13, scope: !8706)
!8733 = !DILocation(line: 1632, column: 11, scope: !8706)
!8734 = !DILocation(line: 1633, column: 8, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 1633, column: 8)
!8736 = !DILocation(line: 1633, column: 15, scope: !8735)
!8737 = !DILocation(line: 1633, column: 8, scope: !8706)
!8738 = !DILocation(line: 1634, column: 5, scope: !8735)
!8739 = !DILocation(line: 1635, column: 4, scope: !8706)
!8740 = !DILocation(line: 1637, column: 4, scope: !8706)
!8741 = !DILocation(line: 1639, column: 40, scope: !8702)
!8742 = !DILocation(line: 1639, column: 12, scope: !8702)
!8743 = !DILocation(line: 1639, column: 10, scope: !8702)
!8744 = !DILocation(line: 1640, column: 7, scope: !8745)
!8745 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1640, column: 7)
!8746 = !DILocation(line: 1640, column: 14, scope: !8745)
!8747 = !DILocation(line: 1640, column: 7, scope: !8702)
!8748 = !DILocation(line: 1641, column: 4, scope: !8745)
!8749 = !DILocation(line: 1642, column: 20, scope: !8702)
!8750 = !DILocation(line: 1642, column: 47, scope: !8702)
!8751 = !DILocation(line: 1642, column: 12, scope: !8702)
!8752 = !DILocation(line: 1642, column: 10, scope: !8702)
!8753 = !DILocation(line: 1643, column: 7, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1643, column: 7)
!8755 = !DILocation(line: 1643, column: 14, scope: !8754)
!8756 = !DILocation(line: 1643, column: 7, scope: !8702)
!8757 = !DILocation(line: 1644, column: 4, scope: !8754)
!8758 = !DILocation(line: 1645, column: 20, scope: !8702)
!8759 = !DILocation(line: 1645, column: 12, scope: !8702)
!8760 = !DILocation(line: 1645, column: 10, scope: !8702)
!8761 = !DILocation(line: 1646, column: 7, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1646, column: 7)
!8763 = !DILocation(line: 1646, column: 14, scope: !8762)
!8764 = !DILocation(line: 1646, column: 7, scope: !8702)
!8765 = !DILocation(line: 1647, column: 4, scope: !8762)
!8766 = !DILocation(line: 1649, column: 8, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 1649, column: 7)
!8768 = !DILocation(line: 1649, column: 7, scope: !8767)
!8769 = !DILocation(line: 1649, column: 13, scope: !8767)
!8770 = !DILocation(line: 1649, column: 7, scope: !8702)
!8771 = !DILocation(line: 1650, column: 4, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8767, file: !3, line: 1649, column: 38)
!8773 = !DILocation(line: 1650, column: 11, scope: !8772)
!8774 = !DILocation(line: 1650, column: 25, scope: !8772)
!8775 = !DILocation(line: 1652, column: 28, scope: !8772)
!8776 = !DILocation(line: 1652, column: 13, scope: !8772)
!8777 = !DILocation(line: 1652, column: 11, scope: !8772)
!8778 = !DILocation(line: 1653, column: 8, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 1653, column: 8)
!8780 = !DILocation(line: 1653, column: 15, scope: !8779)
!8781 = !DILocation(line: 1653, column: 8, scope: !8772)
!8782 = !DILocation(line: 1654, column: 5, scope: !8779)
!8783 = !DILocation(line: 1655, column: 3, scope: !8772)
!8784 = !DILocation(line: 1657, column: 33, scope: !8626)
!8785 = !DILocation(line: 1657, column: 32, scope: !8626)
!8786 = !DILocation(line: 1657, column: 2, scope: !8626)
!8787 = !DILocation(line: 1657, column: 9, scope: !8626)
!8788 = !DILocation(line: 1657, column: 30, scope: !8626)
!8789 = !DILabel(scope: !8626, name: "error", file: !3, line: 1659)
!8790 = !DILocation(line: 1659, column: 1, scope: !8626)
!8791 = !DILocation(line: 1660, column: 6, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8626, file: !3, line: 1660, column: 6)
!8793 = !DILocation(line: 1660, column: 13, scope: !8792)
!8794 = !DILocation(line: 1660, column: 6, scope: !8626)
!8795 = !DILocation(line: 1661, column: 3, scope: !8792)
!8796 = !DILocation(line: 1663, column: 9, scope: !8626)
!8797 = !DILocation(line: 1663, column: 2, scope: !8626)
!8798 = !DILocation(line: 1664, column: 1, scope: !8626)
!8799 = distinct !DISubprogram(name: "write_block", scope: !3, file: !3, line: 412, type: !8800, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!8800 = !DISubroutineType(types: !8801)
!8801 = !{!405, !4562, !411, !8802, !549}
!8802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !405)
!8803 = !DILocalVariable(name: "state", arg: 1, scope: !8799, file: !3, line: 412, type: !4562)
!8804 = !DILocation(line: 412, column: 43, scope: !8799)
!8805 = !DILocalVariable(name: "address", arg: 2, scope: !8799, file: !3, line: 412, type: !411)
!8806 = !DILocation(line: 412, column: 54, scope: !8799)
!8807 = !DILocalVariable(name: "block_size", arg: 3, scope: !8799, file: !3, line: 413, type: !8802)
!8808 = !DILocation(line: 413, column: 19, scope: !8799)
!8809 = !DILocalVariable(name: "p_block", arg: 4, scope: !8799, file: !3, line: 413, type: !549)
!8810 = !DILocation(line: 413, column: 40, scope: !8799)
!8811 = !DILocalVariable(name: "status", scope: !8799, file: !3, line: 415, type: !405)
!8812 = !DILocation(line: 415, column: 6, scope: !8799)
!8813 = !DILocalVariable(name: "blk_size", scope: !8799, file: !3, line: 415, type: !405)
!8814 = !DILocation(line: 415, column: 18, scope: !8799)
!8815 = !DILocation(line: 415, column: 29, scope: !8799)
!8816 = !DILocalVariable(name: "flags", scope: !8799, file: !3, line: 416, type: !455)
!8817 = !DILocation(line: 416, column: 5, scope: !8799)
!8818 = !DILocation(line: 418, column: 6, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 418, column: 6)
!8820 = !DILocation(line: 418, column: 13, scope: !8819)
!8821 = !DILocation(line: 418, column: 6, scope: !8799)
!8822 = !DILocation(line: 419, column: 9, scope: !8819)
!8823 = !DILocation(line: 419, column: 3, scope: !8819)
!8824 = !DILocation(line: 421, column: 2, scope: !8799)
!8825 = !DILocation(line: 421, column: 9, scope: !8799)
!8826 = !DILocation(line: 421, column: 18, scope: !8799)
!8827 = !DILocalVariable(name: "chunk", scope: !8828, file: !3, line: 422, type: !405)
!8828 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 421, column: 23)
!8829 = !DILocation(line: 422, column: 7, scope: !8828)
!8830 = !DILocation(line: 422, column: 15, scope: !8828)
!8831 = !DILocation(line: 422, column: 26, scope: !8828)
!8832 = !DILocation(line: 422, column: 33, scope: !8828)
!8833 = !DILocation(line: 422, column: 24, scope: !8828)
!8834 = !DILocation(line: 423, column: 7, scope: !8828)
!8835 = !DILocation(line: 423, column: 14, scope: !8828)
!8836 = !DILocation(line: 423, column: 29, scope: !8828)
!8837 = !DILocalVariable(name: "adr_buf", scope: !8828, file: !3, line: 424, type: !778)
!8838 = !DILocation(line: 424, column: 7, scope: !8828)
!8839 = !DILocation(line: 424, column: 18, scope: !8828)
!8840 = !DILocation(line: 424, column: 25, scope: !8828)
!8841 = !DILocalVariable(name: "adr_length", scope: !8828, file: !3, line: 425, type: !411)
!8842 = !DILocation(line: 425, column: 7, scope: !8828)
!8843 = !DILocation(line: 427, column: 7, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 427, column: 7)
!8845 = !DILocation(line: 427, column: 40, scope: !8844)
!8846 = !DILocation(line: 427, column: 44, scope: !8844)
!8847 = !DILocation(line: 427, column: 50, scope: !8844)
!8848 = !DILocation(line: 427, column: 7, scope: !8828)
!8849 = !DILocation(line: 428, column: 20, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 427, column: 57)
!8851 = !DILocation(line: 428, column: 28, scope: !8850)
!8852 = !DILocation(line: 428, column: 34, scope: !8850)
!8853 = !DILocation(line: 428, column: 42, scope: !8850)
!8854 = !DILocation(line: 428, column: 17, scope: !8850)
!8855 = !DILocation(line: 428, column: 4, scope: !8850)
!8856 = !DILocation(line: 428, column: 15, scope: !8850)
!8857 = !DILocation(line: 429, column: 19, scope: !8850)
!8858 = !DILocation(line: 429, column: 27, scope: !8850)
!8859 = !DILocation(line: 429, column: 34, scope: !8850)
!8860 = !DILocation(line: 429, column: 17, scope: !8850)
!8861 = !DILocation(line: 429, column: 4, scope: !8850)
!8862 = !DILocation(line: 429, column: 15, scope: !8850)
!8863 = !DILocation(line: 430, column: 19, scope: !8850)
!8864 = !DILocation(line: 430, column: 27, scope: !8850)
!8865 = !DILocation(line: 430, column: 34, scope: !8850)
!8866 = !DILocation(line: 430, column: 17, scope: !8850)
!8867 = !DILocation(line: 430, column: 4, scope: !8850)
!8868 = !DILocation(line: 430, column: 15, scope: !8850)
!8869 = !DILocation(line: 431, column: 19, scope: !8850)
!8870 = !DILocation(line: 431, column: 27, scope: !8850)
!8871 = !DILocation(line: 431, column: 33, scope: !8850)
!8872 = !DILocation(line: 431, column: 17, scope: !8850)
!8873 = !DILocation(line: 431, column: 4, scope: !8850)
!8874 = !DILocation(line: 431, column: 15, scope: !8850)
!8875 = !DILocation(line: 432, column: 18, scope: !8850)
!8876 = !DILocation(line: 432, column: 4, scope: !8850)
!8877 = !DILocation(line: 432, column: 15, scope: !8850)
!8878 = !DILocation(line: 433, column: 15, scope: !8850)
!8879 = !DILocation(line: 434, column: 8, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 434, column: 8)
!8881 = !DILocation(line: 434, column: 17, scope: !8880)
!8882 = !DILocation(line: 434, column: 24, scope: !8880)
!8883 = !DILocation(line: 434, column: 14, scope: !8880)
!8884 = !DILocation(line: 434, column: 8, scope: !8850)
!8885 = !DILocation(line: 435, column: 11, scope: !8880)
!8886 = !DILocation(line: 435, column: 5, scope: !8880)
!8887 = !DILocation(line: 436, column: 3, scope: !8850)
!8888 = !DILocation(line: 437, column: 19, scope: !8889)
!8889 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 436, column: 10)
!8890 = !DILocation(line: 437, column: 27, scope: !8889)
!8891 = !DILocation(line: 437, column: 33, scope: !8889)
!8892 = !DILocation(line: 437, column: 17, scope: !8889)
!8893 = !DILocation(line: 437, column: 4, scope: !8889)
!8894 = !DILocation(line: 437, column: 15, scope: !8889)
!8895 = !DILocation(line: 438, column: 20, scope: !8889)
!8896 = !DILocation(line: 438, column: 28, scope: !8889)
!8897 = !DILocation(line: 438, column: 35, scope: !8889)
!8898 = !DILocation(line: 439, column: 12, scope: !8889)
!8899 = !DILocation(line: 439, column: 20, scope: !8889)
!8900 = !DILocation(line: 439, column: 27, scope: !8889)
!8901 = !DILocation(line: 438, column: 43, scope: !8889)
!8902 = !DILocation(line: 438, column: 17, scope: !8889)
!8903 = !DILocation(line: 438, column: 4, scope: !8889)
!8904 = !DILocation(line: 438, column: 15, scope: !8889)
!8905 = !DILocation(line: 440, column: 15, scope: !8889)
!8906 = !DILocation(line: 442, column: 11, scope: !8828)
!8907 = !DILocation(line: 442, column: 18, scope: !8828)
!8908 = !DILocation(line: 442, column: 24, scope: !8828)
!8909 = !DILocation(line: 442, column: 37, scope: !8828)
!8910 = !DILocation(line: 442, column: 46, scope: !8828)
!8911 = !DILocation(line: 442, column: 3, scope: !8828)
!8912 = !DILocation(line: 443, column: 3, scope: !8828)
!8913 = !DILocation(line: 443, column: 3, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8915, file: !3, line: 443, column: 3)
!8915 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 443, column: 3)
!8916 = !DILocation(line: 443, column: 3, scope: !8915)
!8917 = !DILocation(line: 444, column: 7, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 444, column: 7)
!8919 = !DILocation(line: 444, column: 13, scope: !8918)
!8920 = !DILocation(line: 444, column: 7, scope: !8828)
!8921 = !DILocalVariable(name: "i", scope: !8922, file: !3, line: 445, type: !405)
!8922 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 444, column: 18)
!8923 = !DILocation(line: 445, column: 8, scope: !8922)
!8924 = !DILocation(line: 446, column: 8, scope: !8925)
!8925 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 446, column: 8)
!8926 = !DILocation(line: 446, column: 8, scope: !8922)
!8927 = !DILocation(line: 447, column: 12, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8925, file: !3, line: 447, column: 5)
!8929 = !DILocation(line: 447, column: 10, scope: !8928)
!8930 = !DILocation(line: 447, column: 17, scope: !8931)
!8931 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 447, column: 5)
!8932 = !DILocation(line: 447, column: 21, scope: !8931)
!8933 = !DILocation(line: 447, column: 19, scope: !8931)
!8934 = !DILocation(line: 447, column: 5, scope: !8928)
!8935 = !DILocation(line: 448, column: 6, scope: !8931)
!8936 = !DILocation(line: 447, column: 29, scope: !8931)
!8937 = !DILocation(line: 447, column: 5, scope: !8931)
!8938 = distinct !{!8938, !8934, !8939}
!8939 = !DILocation(line: 448, column: 6, scope: !8928)
!8940 = !DILocation(line: 449, column: 4, scope: !8922)
!8941 = !DILocation(line: 450, column: 3, scope: !8922)
!8942 = !DILocation(line: 451, column: 22, scope: !8828)
!8943 = !DILocation(line: 451, column: 29, scope: !8828)
!8944 = !DILocation(line: 451, column: 36, scope: !8828)
!8945 = !DILocation(line: 452, column: 9, scope: !8828)
!8946 = !DILocation(line: 452, column: 16, scope: !8828)
!8947 = !DILocation(line: 452, column: 26, scope: !8828)
!8948 = !DILocation(line: 452, column: 34, scope: !8828)
!8949 = !DILocation(line: 452, column: 32, scope: !8828)
!8950 = !DILocation(line: 451, column: 12, scope: !8828)
!8951 = !DILocation(line: 451, column: 10, scope: !8828)
!8952 = !DILocation(line: 453, column: 7, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 453, column: 7)
!8954 = !DILocation(line: 453, column: 14, scope: !8953)
!8955 = !DILocation(line: 453, column: 7, scope: !8828)
!8956 = !DILocation(line: 454, column: 4, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8953, file: !3, line: 453, column: 19)
!8958 = !DILocation(line: 456, column: 4, scope: !8957)
!8959 = !DILocation(line: 458, column: 14, scope: !8828)
!8960 = !DILocation(line: 458, column: 11, scope: !8828)
!8961 = !DILocation(line: 459, column: 15, scope: !8828)
!8962 = !DILocation(line: 459, column: 21, scope: !8828)
!8963 = !DILocation(line: 459, column: 11, scope: !8828)
!8964 = !DILocation(line: 460, column: 15, scope: !8828)
!8965 = !DILocation(line: 460, column: 12, scope: !8828)
!8966 = distinct !{!8966, !8824, !8967}
!8967 = !DILocation(line: 461, column: 2, scope: !8799)
!8968 = !DILocation(line: 462, column: 9, scope: !8799)
!8969 = !DILocation(line: 462, column: 2, scope: !8799)
!8970 = distinct !DISubprogram(name: "print_hex_dump_debug", scope: !377, file: !377, line: 604, type: !8971, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!8971 = !DISubroutineType(types: !8972)
!8972 = !{null, !421, !405, !405, !405, !2611, !919, !406}
!8973 = !DILocalVariable(name: "prefix_str", arg: 1, scope: !8970, file: !377, line: 604, type: !421)
!8974 = !DILocation(line: 604, column: 53, scope: !8970)
!8975 = !DILocalVariable(name: "prefix_type", arg: 2, scope: !8970, file: !377, line: 604, type: !405)
!8976 = !DILocation(line: 604, column: 69, scope: !8970)
!8977 = !DILocalVariable(name: "rowsize", arg: 3, scope: !8970, file: !377, line: 605, type: !405)
!8978 = !DILocation(line: 605, column: 10, scope: !8970)
!8979 = !DILocalVariable(name: "groupsize", arg: 4, scope: !8970, file: !377, line: 605, type: !405)
!8980 = !DILocation(line: 605, column: 23, scope: !8970)
!8981 = !DILocalVariable(name: "buf", arg: 5, scope: !8970, file: !377, line: 606, type: !2611)
!8982 = !DILocation(line: 606, column: 18, scope: !8970)
!8983 = !DILocalVariable(name: "len", arg: 6, scope: !8970, file: !377, line: 606, type: !919)
!8984 = !DILocation(line: 606, column: 30, scope: !8970)
!8985 = !DILocalVariable(name: "ascii", arg: 7, scope: !8970, file: !377, line: 606, type: !406)
!8986 = !DILocation(line: 606, column: 40, scope: !8970)
!8987 = !DILocation(line: 608, column: 1, scope: !8970)
!8988 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !8332, file: !8332, line: 308, type: !8333, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!8989 = !DILocalVariable(name: "m", arg: 1, scope: !8988, file: !8332, line: 308, type: !3249)
!8990 = !DILocation(line: 308, column: 66, scope: !8988)
!8991 = !DILocation(line: 310, column: 10, scope: !8988)
!8992 = !DILocation(line: 310, column: 12, scope: !8988)
!8993 = !DILocation(line: 310, column: 34, scope: !8988)
!8994 = !DILocation(line: 310, column: 39, scope: !8988)
!8995 = !DILocation(line: 310, column: 2, scope: !8988)
!8996 = distinct !DISubprogram(name: "power_up_device", scope: !3, file: !3, line: 469, type: !5239, scopeLine: 470, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!8997 = !DILocalVariable(name: "state", arg: 1, scope: !8996, file: !3, line: 469, type: !4562)
!8998 = !DILocation(line: 469, column: 47, scope: !8996)
!8999 = !DILocalVariable(name: "status", scope: !8996, file: !3, line: 471, type: !405)
!9000 = !DILocation(line: 471, column: 6, scope: !8996)
!9001 = !DILocalVariable(name: "data", scope: !8996, file: !3, line: 472, type: !455)
!9002 = !DILocation(line: 472, column: 5, scope: !8996)
!9003 = !DILocalVariable(name: "retry_count", scope: !8996, file: !3, line: 473, type: !408)
!9004 = !DILocation(line: 473, column: 6, scope: !8996)
!9005 = !DILocation(line: 475, column: 2, scope: !8996)
!9006 = !DILocation(line: 475, column: 2, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !3, line: 475, column: 2)
!9008 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 475, column: 2)
!9009 = !DILocation(line: 475, column: 2, scope: !9008)
!9010 = !DILocation(line: 477, column: 21, scope: !8996)
!9011 = !DILocation(line: 477, column: 28, scope: !8996)
!9012 = !DILocation(line: 477, column: 35, scope: !8996)
!9013 = !DILocation(line: 477, column: 11, scope: !8996)
!9014 = !DILocation(line: 477, column: 9, scope: !8996)
!9015 = !DILocation(line: 478, column: 6, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 478, column: 6)
!9017 = !DILocation(line: 478, column: 13, scope: !9016)
!9018 = !DILocation(line: 478, column: 6, scope: !8996)
!9019 = !DILocation(line: 479, column: 3, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 478, column: 18)
!9021 = !DILocation(line: 480, column: 9, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9020, file: !3, line: 479, column: 6)
!9023 = !DILocation(line: 481, column: 23, scope: !9022)
!9024 = !DILocation(line: 481, column: 30, scope: !9022)
!9025 = !DILocation(line: 481, column: 37, scope: !9022)
!9026 = !DILocation(line: 481, column: 13, scope: !9022)
!9027 = !DILocation(line: 481, column: 11, scope: !9022)
!9028 = !DILocation(line: 483, column: 4, scope: !9022)
!9029 = !DILocation(line: 484, column: 15, scope: !9022)
!9030 = !DILocation(line: 485, column: 8, scope: !9031)
!9031 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 485, column: 8)
!9032 = !DILocation(line: 485, column: 15, scope: !9031)
!9033 = !DILocation(line: 485, column: 8, scope: !9022)
!9034 = !DILocation(line: 486, column: 5, scope: !9031)
!9035 = !DILocation(line: 487, column: 23, scope: !9022)
!9036 = !DILocation(line: 487, column: 30, scope: !9022)
!9037 = !DILocation(line: 487, column: 37, scope: !9022)
!9038 = !DILocation(line: 487, column: 13, scope: !9022)
!9039 = !DILocation(line: 487, column: 11, scope: !9022)
!9040 = !DILocation(line: 489, column: 3, scope: !9022)
!9041 = !DILocation(line: 489, column: 12, scope: !9020)
!9042 = !DILocation(line: 489, column: 19, scope: !9020)
!9043 = !DILocation(line: 489, column: 23, scope: !9020)
!9044 = !DILocation(line: 490, column: 6, scope: !9020)
!9045 = !DILocation(line: 490, column: 18, scope: !9020)
!9046 = !DILocation(line: 0, scope: !9020)
!9047 = distinct !{!9047, !9019, !9048}
!9048 = !DILocation(line: 490, column: 45, scope: !9020)
!9049 = !DILocation(line: 491, column: 7, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9020, file: !3, line: 491, column: 7)
!9051 = !DILocation(line: 491, column: 14, scope: !9050)
!9052 = !DILocation(line: 491, column: 18, scope: !9050)
!9053 = !DILocation(line: 491, column: 21, scope: !9050)
!9054 = !DILocation(line: 491, column: 33, scope: !9050)
!9055 = !DILocation(line: 491, column: 7, scope: !9020)
!9056 = !DILocation(line: 492, column: 4, scope: !9050)
!9057 = !DILocation(line: 493, column: 2, scope: !9020)
!9058 = !DILocation(line: 496, column: 19, scope: !8996)
!9059 = !DILocation(line: 496, column: 11, scope: !8996)
!9060 = !DILocation(line: 496, column: 9, scope: !8996)
!9061 = !DILocation(line: 497, column: 6, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 497, column: 6)
!9063 = !DILocation(line: 497, column: 13, scope: !9062)
!9064 = !DILocation(line: 497, column: 6, scope: !8996)
!9065 = !DILocation(line: 498, column: 3, scope: !9062)
!9066 = !DILocation(line: 499, column: 19, scope: !8996)
!9067 = !DILocation(line: 499, column: 11, scope: !8996)
!9068 = !DILocation(line: 499, column: 9, scope: !8996)
!9069 = !DILocation(line: 500, column: 6, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 500, column: 6)
!9071 = !DILocation(line: 500, column: 13, scope: !9070)
!9072 = !DILocation(line: 500, column: 6, scope: !8996)
!9073 = !DILocation(line: 501, column: 3, scope: !9070)
!9074 = !DILocation(line: 503, column: 19, scope: !8996)
!9075 = !DILocation(line: 503, column: 11, scope: !8996)
!9076 = !DILocation(line: 503, column: 9, scope: !8996)
!9077 = !DILocation(line: 504, column: 6, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 504, column: 6)
!9079 = !DILocation(line: 504, column: 13, scope: !9078)
!9080 = !DILocation(line: 504, column: 6, scope: !8996)
!9081 = !DILocation(line: 505, column: 3, scope: !9078)
!9082 = !DILocation(line: 507, column: 2, scope: !8996)
!9083 = !DILocation(line: 507, column: 9, scope: !8996)
!9084 = !DILocation(line: 507, column: 30, scope: !8996)
!9085 = !DILabel(scope: !8996, name: "error", file: !3, line: 509)
!9086 = !DILocation(line: 509, column: 1, scope: !8996)
!9087 = !DILocation(line: 510, column: 6, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !8996, file: !3, line: 510, column: 6)
!9089 = !DILocation(line: 510, column: 13, scope: !9088)
!9090 = !DILocation(line: 510, column: 6, scope: !8996)
!9091 = !DILocation(line: 511, column: 3, scope: !9088)
!9092 = !DILocation(line: 513, column: 9, scope: !8996)
!9093 = !DILocation(line: 513, column: 2, scope: !8996)
!9094 = distinct !DISubprogram(name: "dvbt_enable_ofdm_token_ring", scope: !3, file: !3, line: 1357, type: !7485, scopeLine: 1358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!9095 = !DILocation(line: 363, column: 74, scope: !8331, inlinedAt: !9096)
!9096 = distinct !DILocation(line: 1380, column: 18, scope: !9094)
!9097 = !DILocalVariable(name: "state", arg: 1, scope: !9094, file: !3, line: 1357, type: !4562)
!9098 = !DILocation(line: 1357, column: 59, scope: !9094)
!9099 = !DILocalVariable(name: "enable", arg: 2, scope: !9094, file: !3, line: 1357, type: !406)
!9100 = !DILocation(line: 1357, column: 71, scope: !9094)
!9101 = !DILocalVariable(name: "status", scope: !9094, file: !3, line: 1359, type: !405)
!9102 = !DILocation(line: 1359, column: 6, scope: !9094)
!9103 = !DILocalVariable(name: "data", scope: !9094, file: !3, line: 1360, type: !408)
!9104 = !DILocation(line: 1360, column: 6, scope: !9094)
!9105 = !DILocalVariable(name: "desired_ctrl", scope: !9094, file: !3, line: 1361, type: !408)
!9106 = !DILocation(line: 1361, column: 6, scope: !9094)
!9107 = !DILocalVariable(name: "desired_status", scope: !9094, file: !3, line: 1362, type: !408)
!9108 = !DILocation(line: 1362, column: 6, scope: !9094)
!9109 = !DILocalVariable(name: "end", scope: !9094, file: !3, line: 1363, type: !716)
!9110 = !DILocation(line: 1363, column: 16, scope: !9094)
!9111 = !DILocation(line: 1365, column: 2, scope: !9094)
!9112 = !DILocation(line: 1365, column: 2, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9114, file: !3, line: 1365, column: 2)
!9114 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 1365, column: 2)
!9115 = !DILocation(line: 1365, column: 2, scope: !9114)
!9116 = !DILocation(line: 1367, column: 7, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 1367, column: 6)
!9118 = !DILocation(line: 1367, column: 6, scope: !9094)
!9119 = !DILocation(line: 1368, column: 16, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 1367, column: 15)
!9121 = !DILocation(line: 1369, column: 18, scope: !9120)
!9122 = !DILocation(line: 1370, column: 2, scope: !9120)
!9123 = !DILocation(line: 1372, column: 18, scope: !9094)
!9124 = !DILocation(line: 1372, column: 11, scope: !9094)
!9125 = !DILocation(line: 1372, column: 9, scope: !9094)
!9126 = !DILocation(line: 1373, column: 6, scope: !9127)
!9127 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 1373, column: 6)
!9128 = !DILocation(line: 1373, column: 13, scope: !9127)
!9129 = !DILocation(line: 1373, column: 18, scope: !9127)
!9130 = !DILocation(line: 1373, column: 21, scope: !9127)
!9131 = !DILocation(line: 1373, column: 29, scope: !9127)
!9132 = !DILocation(line: 1373, column: 26, scope: !9127)
!9133 = !DILocation(line: 1373, column: 6, scope: !9094)
!9134 = !DILocation(line: 1375, column: 10, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9127, file: !3, line: 1373, column: 45)
!9136 = !DILocation(line: 1375, column: 3, scope: !9135)
!9137 = !DILocation(line: 1378, column: 19, scope: !9094)
!9138 = !DILocation(line: 1378, column: 59, scope: !9094)
!9139 = !DILocation(line: 1378, column: 11, scope: !9094)
!9140 = !DILocation(line: 1378, column: 9, scope: !9094)
!9141 = !DILocation(line: 1380, column: 8, scope: !9094)
!9142 = !DILocation(line: 365, column: 27, scope: !8452, inlinedAt: !9096)
!9143 = !DILocation(line: 365, column: 6, scope: !8452, inlinedAt: !9096)
!9144 = !DILocation(line: 365, column: 6, scope: !8331, inlinedAt: !9096)
!9145 = !DILocation(line: 366, column: 12, scope: !8456, inlinedAt: !9096)
!9146 = !DILocation(line: 366, column: 14, scope: !8456, inlinedAt: !9096)
!9147 = !DILocation(line: 366, column: 7, scope: !8457, inlinedAt: !9096)
!9148 = !DILocation(line: 367, column: 4, scope: !8456, inlinedAt: !9096)
!9149 = !DILocation(line: 368, column: 28, scope: !8457, inlinedAt: !9096)
!9150 = !DILocation(line: 368, column: 10, scope: !8457, inlinedAt: !9096)
!9151 = !DILocation(line: 368, column: 3, scope: !8457, inlinedAt: !9096)
!9152 = !DILocation(line: 370, column: 29, scope: !8465, inlinedAt: !9096)
!9153 = !DILocation(line: 370, column: 10, scope: !8465, inlinedAt: !9096)
!9154 = !DILocation(line: 370, column: 3, scope: !8465, inlinedAt: !9096)
!9155 = !DILocation(line: 372, column: 1, scope: !8331, inlinedAt: !9096)
!9156 = !DILocation(line: 1380, column: 16, scope: !9094)
!9157 = !DILocation(line: 1380, column: 6, scope: !9094)
!9158 = !DILocation(line: 1381, column: 2, scope: !9094)
!9159 = !DILocation(line: 1382, column: 19, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 1381, column: 5)
!9161 = !DILocation(line: 1382, column: 12, scope: !9160)
!9162 = !DILocation(line: 1382, column: 10, scope: !9160)
!9163 = !DILocation(line: 1383, column: 8, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9160, file: !3, line: 1383, column: 7)
!9165 = !DILocation(line: 1383, column: 15, scope: !9164)
!9166 = !DILocation(line: 1383, column: 20, scope: !9164)
!9167 = !DILocation(line: 1383, column: 23, scope: !9164)
!9168 = !DILocation(line: 1383, column: 31, scope: !9164)
!9169 = !DILocation(line: 1383, column: 28, scope: !9164)
!9170 = !DILocation(line: 1384, column: 7, scope: !9164)
!9171 = !DILocation(line: 1384, column: 10, scope: !9164)
!9172 = !DILocation(line: 1383, column: 7, scope: !9160)
!9173 = !DILocation(line: 1385, column: 4, scope: !9164)
!9174 = !DILocation(line: 1386, column: 3, scope: !9160)
!9175 = !DILocation(line: 1387, column: 2, scope: !9160)
!9176 = distinct !{!9176, !9158, !9177}
!9177 = !DILocation(line: 1387, column: 12, scope: !9094)
!9178 = !DILocation(line: 1388, column: 6, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 1388, column: 6)
!9180 = !DILocation(line: 1388, column: 14, scope: !9179)
!9181 = !DILocation(line: 1388, column: 11, scope: !9179)
!9182 = !DILocation(line: 1388, column: 6, scope: !9094)
!9183 = !DILocation(line: 1389, column: 3, scope: !9184)
!9184 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 1388, column: 30)
!9185 = !DILocation(line: 1390, column: 3, scope: !9184)
!9186 = !DILocation(line: 1392, column: 9, scope: !9094)
!9187 = !DILocation(line: 1392, column: 2, scope: !9094)
!9188 = !DILocation(line: 1393, column: 1, scope: !9094)
!9189 = distinct !DISubprogram(name: "hi_cfg_command", scope: !3, file: !3, line: 1026, type: !5239, scopeLine: 1027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!9190 = !DILocalVariable(name: "state", arg: 1, scope: !9189, file: !3, line: 1026, type: !4562)
!9191 = !DILocation(line: 1026, column: 46, scope: !9189)
!9192 = !DILocalVariable(name: "status", scope: !9189, file: !3, line: 1028, type: !405)
!9193 = !DILocation(line: 1028, column: 6, scope: !9189)
!9194 = !DILocation(line: 1030, column: 2, scope: !9189)
!9195 = !DILocation(line: 1030, column: 2, scope: !9196)
!9196 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 1030, column: 2)
!9197 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1030, column: 2)
!9198 = !DILocation(line: 1030, column: 2, scope: !9197)
!9199 = !DILocation(line: 1032, column: 14, scope: !9189)
!9200 = !DILocation(line: 1032, column: 21, scope: !9189)
!9201 = !DILocation(line: 1032, column: 2, scope: !9189)
!9202 = !DILocation(line: 1034, column: 19, scope: !9189)
!9203 = !DILocation(line: 1035, column: 5, scope: !9189)
!9204 = !DILocation(line: 1035, column: 12, scope: !9189)
!9205 = !DILocation(line: 1034, column: 11, scope: !9189)
!9206 = !DILocation(line: 1034, column: 9, scope: !9189)
!9207 = !DILocation(line: 1036, column: 6, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1036, column: 6)
!9209 = !DILocation(line: 1036, column: 13, scope: !9208)
!9210 = !DILocation(line: 1036, column: 6, scope: !9189)
!9211 = !DILocation(line: 1037, column: 3, scope: !9208)
!9212 = !DILocation(line: 1038, column: 19, scope: !9189)
!9213 = !DILocation(line: 1039, column: 5, scope: !9189)
!9214 = !DILocation(line: 1039, column: 12, scope: !9189)
!9215 = !DILocation(line: 1038, column: 11, scope: !9189)
!9216 = !DILocation(line: 1038, column: 9, scope: !9189)
!9217 = !DILocation(line: 1040, column: 6, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1040, column: 6)
!9219 = !DILocation(line: 1040, column: 13, scope: !9218)
!9220 = !DILocation(line: 1040, column: 6, scope: !9189)
!9221 = !DILocation(line: 1041, column: 3, scope: !9218)
!9222 = !DILocation(line: 1042, column: 19, scope: !9189)
!9223 = !DILocation(line: 1043, column: 5, scope: !9189)
!9224 = !DILocation(line: 1043, column: 12, scope: !9189)
!9225 = !DILocation(line: 1042, column: 11, scope: !9189)
!9226 = !DILocation(line: 1042, column: 9, scope: !9189)
!9227 = !DILocation(line: 1044, column: 6, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1044, column: 6)
!9229 = !DILocation(line: 1044, column: 13, scope: !9228)
!9230 = !DILocation(line: 1044, column: 6, scope: !9189)
!9231 = !DILocation(line: 1045, column: 3, scope: !9228)
!9232 = !DILocation(line: 1046, column: 19, scope: !9189)
!9233 = !DILocation(line: 1047, column: 5, scope: !9189)
!9234 = !DILocation(line: 1047, column: 12, scope: !9189)
!9235 = !DILocation(line: 1046, column: 11, scope: !9189)
!9236 = !DILocation(line: 1046, column: 9, scope: !9189)
!9237 = !DILocation(line: 1048, column: 6, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1048, column: 6)
!9239 = !DILocation(line: 1048, column: 13, scope: !9238)
!9240 = !DILocation(line: 1048, column: 6, scope: !9189)
!9241 = !DILocation(line: 1049, column: 3, scope: !9238)
!9242 = !DILocation(line: 1050, column: 19, scope: !9189)
!9243 = !DILocation(line: 1051, column: 5, scope: !9189)
!9244 = !DILocation(line: 1051, column: 12, scope: !9189)
!9245 = !DILocation(line: 1050, column: 11, scope: !9189)
!9246 = !DILocation(line: 1050, column: 9, scope: !9189)
!9247 = !DILocation(line: 1052, column: 6, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1052, column: 6)
!9249 = !DILocation(line: 1052, column: 13, scope: !9248)
!9250 = !DILocation(line: 1052, column: 6, scope: !9189)
!9251 = !DILocation(line: 1053, column: 3, scope: !9248)
!9252 = !DILocation(line: 1054, column: 19, scope: !9189)
!9253 = !DILocation(line: 1054, column: 11, scope: !9189)
!9254 = !DILocation(line: 1054, column: 9, scope: !9189)
!9255 = !DILocation(line: 1056, column: 6, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1056, column: 6)
!9257 = !DILocation(line: 1056, column: 13, scope: !9256)
!9258 = !DILocation(line: 1056, column: 6, scope: !9189)
!9259 = !DILocation(line: 1057, column: 3, scope: !9256)
!9260 = !DILocation(line: 1058, column: 22, scope: !9189)
!9261 = !DILocation(line: 1058, column: 11, scope: !9189)
!9262 = !DILocation(line: 1058, column: 9, scope: !9189)
!9263 = !DILocation(line: 1059, column: 6, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1059, column: 6)
!9265 = !DILocation(line: 1059, column: 13, scope: !9264)
!9266 = !DILocation(line: 1059, column: 6, scope: !9189)
!9267 = !DILocation(line: 1060, column: 3, scope: !9264)
!9268 = !DILocation(line: 1062, column: 2, scope: !9189)
!9269 = !DILocation(line: 1062, column: 9, scope: !9189)
!9270 = !DILocation(line: 1062, column: 23, scope: !9189)
!9271 = !DILabel(scope: !9189, name: "error", file: !3, line: 1063)
!9272 = !DILocation(line: 1063, column: 1, scope: !9189)
!9273 = !DILocation(line: 1064, column: 16, scope: !9189)
!9274 = !DILocation(line: 1064, column: 23, scope: !9189)
!9275 = !DILocation(line: 1064, column: 2, scope: !9189)
!9276 = !DILocation(line: 1065, column: 6, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 1065, column: 6)
!9278 = !DILocation(line: 1065, column: 13, scope: !9277)
!9279 = !DILocation(line: 1065, column: 6, scope: !9189)
!9280 = !DILocation(line: 1066, column: 3, scope: !9277)
!9281 = !DILocation(line: 1067, column: 9, scope: !9189)
!9282 = !DILocation(line: 1067, column: 2, scope: !9189)
!9283 = distinct !DISubprogram(name: "i2c_read1", scope: !3, file: !3, line: 217, type: !9284, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!9284 = !DISubroutineType(types: !9285)
!9285 = !{!405, !4562, !455, !778}
!9286 = !DILocalVariable(name: "state", arg: 1, scope: !9283, file: !3, line: 217, type: !4562)
!9287 = !DILocation(line: 217, column: 41, scope: !9283)
!9288 = !DILocalVariable(name: "adr", arg: 2, scope: !9283, file: !3, line: 217, type: !455)
!9289 = !DILocation(line: 217, column: 51, scope: !9283)
!9290 = !DILocalVariable(name: "val", arg: 3, scope: !9283, file: !3, line: 217, type: !778)
!9291 = !DILocation(line: 217, column: 60, scope: !9283)
!9292 = !DILocalVariable(name: "msgs", scope: !9283, file: !3, line: 219, type: !9293)
!9293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4416, size: 128, elements: !1853)
!9294 = !DILocation(line: 219, column: 17, scope: !9283)
!9295 = !DILocation(line: 219, column: 27, scope: !9283)
!9296 = !DILocation(line: 219, column: 29, scope: !9283)
!9297 = !DILocation(line: 219, column: 38, scope: !9283)
!9298 = !DILocation(line: 220, column: 16, scope: !9283)
!9299 = !DILocation(line: 223, column: 27, scope: !9283)
!9300 = !DILocation(line: 223, column: 34, scope: !9283)
!9301 = !DILocation(line: 223, column: 9, scope: !9283)
!9302 = !DILocation(line: 223, column: 2, scope: !9283)
!9303 = distinct !DISubprogram(name: "hi_command", scope: !3, file: !3, line: 985, type: !9304, scopeLine: 986, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!9304 = !DISubroutineType(types: !9305)
!9305 = !{!405, !4562, !408, !669}
!9306 = !DILocalVariable(name: "state", arg: 1, scope: !9303, file: !3, line: 985, type: !4562)
!9307 = !DILocation(line: 985, column: 42, scope: !9303)
!9308 = !DILocalVariable(name: "cmd", arg: 2, scope: !9303, file: !3, line: 985, type: !408)
!9309 = !DILocation(line: 985, column: 53, scope: !9303)
!9310 = !DILocalVariable(name: "p_result", arg: 3, scope: !9303, file: !3, line: 985, type: !669)
!9311 = !DILocation(line: 985, column: 63, scope: !9303)
!9312 = !DILocalVariable(name: "status", scope: !9303, file: !3, line: 987, type: !405)
!9313 = !DILocation(line: 987, column: 6, scope: !9303)
!9314 = !DILocalVariable(name: "powerdown_cmd", scope: !9303, file: !3, line: 988, type: !406)
!9315 = !DILocation(line: 988, column: 7, scope: !9303)
!9316 = !DILocation(line: 990, column: 2, scope: !9303)
!9317 = !DILocation(line: 990, column: 2, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9319, file: !3, line: 990, column: 2)
!9319 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 990, column: 2)
!9320 = !DILocation(line: 990, column: 2, scope: !9319)
!9321 = !DILocation(line: 993, column: 19, scope: !9303)
!9322 = !DILocation(line: 993, column: 48, scope: !9303)
!9323 = !DILocation(line: 993, column: 11, scope: !9303)
!9324 = !DILocation(line: 993, column: 9, scope: !9303)
!9325 = !DILocation(line: 994, column: 6, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 994, column: 6)
!9327 = !DILocation(line: 994, column: 13, scope: !9326)
!9328 = !DILocation(line: 994, column: 6, scope: !9303)
!9329 = !DILocation(line: 995, column: 3, scope: !9326)
!9330 = !DILocation(line: 996, column: 6, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 996, column: 6)
!9332 = !DILocation(line: 996, column: 10, scope: !9331)
!9333 = !DILocation(line: 996, column: 6, scope: !9303)
!9334 = !DILocation(line: 997, column: 3, scope: !9331)
!9335 = !DILocation(line: 1000, column: 15, scope: !9303)
!9336 = !DILocation(line: 1000, column: 19, scope: !9303)
!9337 = !DILocation(line: 1000, column: 48, scope: !9303)
!9338 = !DILocation(line: 1001, column: 9, scope: !9303)
!9339 = !DILocation(line: 1001, column: 16, scope: !9303)
!9340 = !DILocation(line: 1001, column: 8, scope: !9303)
!9341 = !DILocation(line: 1001, column: 31, scope: !9303)
!9342 = !DILocation(line: 1002, column: 42, scope: !9303)
!9343 = !DILocation(line: 0, scope: !9303)
!9344 = !DILocation(line: 999, column: 16, scope: !9303)
!9345 = !DILocation(line: 1004, column: 7, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 1004, column: 6)
!9347 = !DILocation(line: 1004, column: 6, scope: !9303)
!9348 = !DILocalVariable(name: "retry_count", scope: !9349, file: !3, line: 1006, type: !411)
!9349 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 1004, column: 22)
!9350 = !DILocation(line: 1006, column: 7, scope: !9349)
!9351 = !DILocalVariable(name: "wait_cmd", scope: !9349, file: !3, line: 1007, type: !408)
!9352 = !DILocation(line: 1007, column: 7, scope: !9349)
!9353 = !DILocation(line: 1009, column: 3, scope: !9349)
!9354 = !DILocation(line: 1010, column: 4, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 1009, column: 6)
!9356 = !DILocation(line: 1011, column: 16, scope: !9355)
!9357 = !DILocation(line: 1012, column: 20, scope: !9355)
!9358 = !DILocation(line: 1012, column: 13, scope: !9355)
!9359 = !DILocation(line: 1012, column: 11, scope: !9355)
!9360 = !DILocation(line: 1014, column: 3, scope: !9355)
!9361 = !DILocation(line: 1014, column: 13, scope: !9349)
!9362 = !DILocation(line: 1014, column: 20, scope: !9349)
!9363 = !DILocation(line: 1014, column: 24, scope: !9349)
!9364 = !DILocation(line: 1014, column: 27, scope: !9349)
!9365 = !DILocation(line: 1014, column: 37, scope: !9349)
!9366 = !DILocation(line: 1014, column: 41, scope: !9349)
!9367 = !DILocation(line: 1014, column: 53, scope: !9349)
!9368 = !DILocation(line: 0, scope: !9349)
!9369 = distinct !{!9369, !9353, !9370}
!9370 = !DILocation(line: 1014, column: 72, scope: !9349)
!9371 = !DILocation(line: 1015, column: 7, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9349, file: !3, line: 1015, column: 7)
!9373 = !DILocation(line: 1015, column: 14, scope: !9372)
!9374 = !DILocation(line: 1015, column: 7, scope: !9349)
!9375 = !DILocation(line: 1016, column: 4, scope: !9372)
!9376 = !DILocation(line: 1017, column: 19, scope: !9349)
!9377 = !DILocation(line: 1017, column: 48, scope: !9349)
!9378 = !DILocation(line: 1017, column: 12, scope: !9349)
!9379 = !DILocation(line: 1017, column: 10, scope: !9349)
!9380 = !DILocation(line: 1018, column: 2, scope: !9349)
!9381 = !DILabel(scope: !9303, name: "error", file: !3, line: 1019)
!9382 = !DILocation(line: 1019, column: 1, scope: !9303)
!9383 = !DILocation(line: 1020, column: 6, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9303, file: !3, line: 1020, column: 6)
!9385 = !DILocation(line: 1020, column: 13, scope: !9384)
!9386 = !DILocation(line: 1020, column: 6, scope: !9303)
!9387 = !DILocation(line: 1021, column: 3, scope: !9384)
!9388 = !DILocation(line: 1023, column: 9, scope: !9303)
!9389 = !DILocation(line: 1023, column: 2, scope: !9303)
!9390 = distinct !DISubprogram(name: "power_up_dvbt", scope: !3, file: !3, line: 3316, type: !5239, scopeLine: 3317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!9391 = !DILocalVariable(name: "state", arg: 1, scope: !9390, file: !3, line: 3316, type: !4562)
!9392 = !DILocation(line: 3316, column: 45, scope: !9390)
!9393 = !DILocalVariable(name: "power_mode", scope: !9390, file: !3, line: 3318, type: !338)
!9394 = !DILocation(line: 3318, column: 22, scope: !9390)
!9395 = !DILocalVariable(name: "status", scope: !9390, file: !3, line: 3319, type: !405)
!9396 = !DILocation(line: 3319, column: 6, scope: !9390)
!9397 = !DILocation(line: 3321, column: 2, scope: !9390)
!9398 = !DILocation(line: 3321, column: 2, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 3321, column: 2)
!9400 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 3321, column: 2)
!9401 = !DILocation(line: 3321, column: 2, scope: !9400)
!9402 = !DILocation(line: 3322, column: 27, scope: !9390)
!9403 = !DILocation(line: 3322, column: 11, scope: !9390)
!9404 = !DILocation(line: 3322, column: 9, scope: !9390)
!9405 = !DILocation(line: 3323, column: 6, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 3323, column: 6)
!9407 = !DILocation(line: 3323, column: 13, scope: !9406)
!9408 = !DILocation(line: 3323, column: 6, scope: !9390)
!9409 = !DILocation(line: 3324, column: 3, scope: !9406)
!9410 = !DILocation(line: 3325, column: 9, scope: !9390)
!9411 = !DILocation(line: 3325, column: 2, scope: !9390)
!9412 = distinct !DISubprogram(name: "switch_antenna_to_dvbt", scope: !3, file: !3, line: 5966, type: !5239, scopeLine: 5967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!9413 = !DILocalVariable(name: "state", arg: 1, scope: !9412, file: !3, line: 5966, type: !4562)
!9414 = !DILocation(line: 5966, column: 54, scope: !9412)
!9415 = !DILocalVariable(name: "status", scope: !9412, file: !3, line: 5968, type: !405)
!9416 = !DILocation(line: 5968, column: 6, scope: !9412)
!9417 = !DILocalVariable(name: "gpio_state", scope: !9412, file: !3, line: 5969, type: !406)
!9418 = !DILocation(line: 5969, column: 7, scope: !9412)
!9419 = !DILocation(line: 5971, column: 2, scope: !9412)
!9420 = !DILocation(line: 5971, column: 2, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 5971, column: 2)
!9422 = distinct !DILexicalBlock(scope: !9412, file: !3, line: 5971, column: 2)
!9423 = !DILocation(line: 5971, column: 2, scope: !9422)
!9424 = !DILocation(line: 5973, column: 7, scope: !9425)
!9425 = distinct !DILexicalBlock(scope: !9412, file: !3, line: 5973, column: 6)
!9426 = !DILocation(line: 5973, column: 14, scope: !9425)
!9427 = !DILocation(line: 5973, column: 6, scope: !9412)
!9428 = !DILocation(line: 5974, column: 3, scope: !9425)
!9429 = !DILocation(line: 5976, column: 15, scope: !9412)
!9430 = !DILocation(line: 5976, column: 22, scope: !9412)
!9431 = !DILocation(line: 5976, column: 31, scope: !9412)
!9432 = !DILocation(line: 5976, column: 38, scope: !9412)
!9433 = !DILocation(line: 5976, column: 29, scope: !9412)
!9434 = !DILocation(line: 5976, column: 13, scope: !9412)
!9435 = !DILocation(line: 5978, column: 8, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9412, file: !3, line: 5978, column: 6)
!9437 = !DILocation(line: 5978, column: 15, scope: !9436)
!9438 = !DILocation(line: 5978, column: 30, scope: !9436)
!9439 = !DILocation(line: 5978, column: 28, scope: !9436)
!9440 = !DILocation(line: 5978, column: 6, scope: !9412)
!9441 = !DILocation(line: 5980, column: 7, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9443, file: !3, line: 5980, column: 7)
!9443 = distinct !DILexicalBlock(scope: !9436, file: !3, line: 5978, column: 43)
!9444 = !DILocation(line: 5980, column: 14, scope: !9442)
!9445 = !DILocation(line: 5980, column: 7, scope: !9443)
!9446 = !DILocation(line: 5981, column: 21, scope: !9442)
!9447 = !DILocation(line: 5981, column: 28, scope: !9442)
!9448 = !DILocation(line: 5981, column: 4, scope: !9442)
!9449 = !DILocation(line: 5981, column: 11, scope: !9442)
!9450 = !DILocation(line: 5981, column: 18, scope: !9442)
!9451 = !DILocation(line: 5983, column: 22, scope: !9442)
!9452 = !DILocation(line: 5983, column: 29, scope: !9442)
!9453 = !DILocation(line: 5983, column: 21, scope: !9442)
!9454 = !DILocation(line: 5983, column: 4, scope: !9442)
!9455 = !DILocation(line: 5983, column: 11, scope: !9442)
!9456 = !DILocation(line: 5983, column: 18, scope: !9442)
!9457 = !DILocation(line: 5984, column: 23, scope: !9443)
!9458 = !DILocation(line: 5984, column: 12, scope: !9443)
!9459 = !DILocation(line: 5984, column: 10, scope: !9443)
!9460 = !DILocation(line: 5985, column: 2, scope: !9443)
!9461 = !DILocation(line: 5986, column: 6, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9412, file: !3, line: 5986, column: 6)
!9463 = !DILocation(line: 5986, column: 13, scope: !9462)
!9464 = !DILocation(line: 5986, column: 6, scope: !9412)
!9465 = !DILocation(line: 5987, column: 3, scope: !9462)
!9466 = !DILocation(line: 5988, column: 9, scope: !9412)
!9467 = !DILocation(line: 5988, column: 2, scope: !9412)
!9468 = !DILocation(line: 5989, column: 1, scope: !9412)
!9469 = distinct !DISubprogram(name: "bl_chain_cmd", scope: !3, file: !3, line: 1248, type: !9470, scopeLine: 1250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!9470 = !DISubroutineType(types: !9471)
!9471 = !{!405, !4562, !408, !408, !411}
!9472 = !DILocation(line: 363, column: 74, scope: !8331, inlinedAt: !9473)
!9473 = distinct !DILocation(line: 1270, column: 18, scope: !9469)
!9474 = !DILocalVariable(name: "state", arg: 1, scope: !9469, file: !3, line: 1248, type: !4562)
!9475 = !DILocation(line: 1248, column: 44, scope: !9469)
!9476 = !DILocalVariable(name: "rom_offset", arg: 2, scope: !9469, file: !3, line: 1249, type: !408)
!9477 = !DILocation(line: 1249, column: 13, scope: !9469)
!9478 = !DILocalVariable(name: "nr_of_elements", arg: 3, scope: !9469, file: !3, line: 1249, type: !408)
!9479 = !DILocation(line: 1249, column: 29, scope: !9469)
!9480 = !DILocalVariable(name: "time_out", arg: 4, scope: !9469, file: !3, line: 1249, type: !411)
!9481 = !DILocation(line: 1249, column: 49, scope: !9469)
!9482 = !DILocalVariable(name: "bl_status", scope: !9469, file: !3, line: 1251, type: !408)
!9483 = !DILocation(line: 1251, column: 6, scope: !9469)
!9484 = !DILocalVariable(name: "status", scope: !9469, file: !3, line: 1252, type: !405)
!9485 = !DILocation(line: 1252, column: 6, scope: !9469)
!9486 = !DILocalVariable(name: "end", scope: !9469, file: !3, line: 1253, type: !716)
!9487 = !DILocation(line: 1253, column: 16, scope: !9469)
!9488 = !DILocation(line: 1255, column: 2, scope: !9469)
!9489 = !DILocation(line: 1255, column: 2, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9491, file: !3, line: 1255, column: 2)
!9491 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1255, column: 2)
!9492 = !DILocation(line: 1255, column: 2, scope: !9491)
!9493 = !DILocation(line: 1256, column: 14, scope: !9469)
!9494 = !DILocation(line: 1256, column: 21, scope: !9469)
!9495 = !DILocation(line: 1256, column: 2, scope: !9469)
!9496 = !DILocation(line: 1257, column: 19, scope: !9469)
!9497 = !DILocation(line: 1257, column: 11, scope: !9469)
!9498 = !DILocation(line: 1257, column: 9, scope: !9469)
!9499 = !DILocation(line: 1258, column: 6, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1258, column: 6)
!9501 = !DILocation(line: 1258, column: 13, scope: !9500)
!9502 = !DILocation(line: 1258, column: 6, scope: !9469)
!9503 = !DILocation(line: 1259, column: 3, scope: !9500)
!9504 = !DILocation(line: 1260, column: 19, scope: !9469)
!9505 = !DILocation(line: 1260, column: 48, scope: !9469)
!9506 = !DILocation(line: 1260, column: 11, scope: !9469)
!9507 = !DILocation(line: 1260, column: 9, scope: !9469)
!9508 = !DILocation(line: 1261, column: 6, scope: !9509)
!9509 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1261, column: 6)
!9510 = !DILocation(line: 1261, column: 13, scope: !9509)
!9511 = !DILocation(line: 1261, column: 6, scope: !9469)
!9512 = !DILocation(line: 1262, column: 3, scope: !9509)
!9513 = !DILocation(line: 1263, column: 19, scope: !9469)
!9514 = !DILocation(line: 1263, column: 47, scope: !9469)
!9515 = !DILocation(line: 1263, column: 11, scope: !9469)
!9516 = !DILocation(line: 1263, column: 9, scope: !9469)
!9517 = !DILocation(line: 1264, column: 6, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1264, column: 6)
!9519 = !DILocation(line: 1264, column: 13, scope: !9518)
!9520 = !DILocation(line: 1264, column: 6, scope: !9469)
!9521 = !DILocation(line: 1265, column: 3, scope: !9518)
!9522 = !DILocation(line: 1266, column: 19, scope: !9469)
!9523 = !DILocation(line: 1266, column: 11, scope: !9469)
!9524 = !DILocation(line: 1266, column: 9, scope: !9469)
!9525 = !DILocation(line: 1267, column: 6, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1267, column: 6)
!9527 = !DILocation(line: 1267, column: 13, scope: !9526)
!9528 = !DILocation(line: 1267, column: 6, scope: !9469)
!9529 = !DILocation(line: 1268, column: 3, scope: !9526)
!9530 = !DILocation(line: 1270, column: 8, scope: !9469)
!9531 = !DILocation(line: 1270, column: 35, scope: !9469)
!9532 = !DILocation(line: 365, column: 27, scope: !8452, inlinedAt: !9473)
!9533 = !DILocation(line: 365, column: 6, scope: !8452, inlinedAt: !9473)
!9534 = !DILocation(line: 365, column: 6, scope: !8331, inlinedAt: !9473)
!9535 = !DILocation(line: 366, column: 12, scope: !8456, inlinedAt: !9473)
!9536 = !DILocation(line: 366, column: 14, scope: !8456, inlinedAt: !9473)
!9537 = !DILocation(line: 366, column: 7, scope: !8457, inlinedAt: !9473)
!9538 = !DILocation(line: 367, column: 4, scope: !8456, inlinedAt: !9473)
!9539 = !DILocation(line: 368, column: 28, scope: !8457, inlinedAt: !9473)
!9540 = !DILocation(line: 368, column: 10, scope: !8457, inlinedAt: !9473)
!9541 = !DILocation(line: 368, column: 3, scope: !8457, inlinedAt: !9473)
!9542 = !DILocation(line: 370, column: 29, scope: !8465, inlinedAt: !9473)
!9543 = !DILocation(line: 370, column: 10, scope: !8465, inlinedAt: !9473)
!9544 = !DILocation(line: 370, column: 3, scope: !8465, inlinedAt: !9473)
!9545 = !DILocation(line: 372, column: 1, scope: !8331, inlinedAt: !9473)
!9546 = !DILocation(line: 1270, column: 16, scope: !9469)
!9547 = !DILocation(line: 1270, column: 6, scope: !9469)
!9548 = !DILocation(line: 1271, column: 2, scope: !9469)
!9549 = !DILocation(line: 1272, column: 3, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1271, column: 5)
!9551 = !DILocation(line: 1273, column: 19, scope: !9550)
!9552 = !DILocation(line: 1273, column: 12, scope: !9550)
!9553 = !DILocation(line: 1273, column: 10, scope: !9550)
!9554 = !DILocation(line: 1274, column: 7, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 1274, column: 7)
!9556 = !DILocation(line: 1274, column: 14, scope: !9555)
!9557 = !DILocation(line: 1274, column: 7, scope: !9550)
!9558 = !DILocation(line: 1275, column: 4, scope: !9555)
!9559 = !DILocation(line: 1276, column: 2, scope: !9550)
!9560 = !DILocation(line: 1276, column: 12, scope: !9469)
!9561 = !DILocation(line: 1276, column: 22, scope: !9469)
!9562 = !DILocation(line: 1276, column: 30, scope: !9469)
!9563 = !DILocation(line: 1277, column: 6, scope: !9469)
!9564 = !DILocation(line: 0, scope: !9469)
!9565 = distinct !{!9565, !9548, !9566}
!9566 = !DILocation(line: 1277, column: 34, scope: !9469)
!9567 = !DILocation(line: 1279, column: 6, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1279, column: 6)
!9569 = !DILocation(line: 1279, column: 16, scope: !9568)
!9570 = !DILocation(line: 1279, column: 6, scope: !9469)
!9571 = !DILocation(line: 1280, column: 3, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 1279, column: 24)
!9573 = !DILocation(line: 1281, column: 10, scope: !9572)
!9574 = !DILocation(line: 1282, column: 3, scope: !9572)
!9575 = !DILocation(line: 1279, column: 19, scope: !9568)
!9576 = !DILabel(scope: !9469, name: "error", file: !3, line: 1284)
!9577 = !DILocation(line: 1284, column: 1, scope: !9469)
!9578 = !DILocation(line: 1285, column: 6, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 1285, column: 6)
!9580 = !DILocation(line: 1285, column: 13, scope: !9579)
!9581 = !DILocation(line: 1285, column: 6, scope: !9469)
!9582 = !DILocation(line: 1286, column: 3, scope: !9579)
!9583 = !DILocation(line: 1285, column: 15, scope: !9579)
!9584 = !DILabel(scope: !9469, name: "error2", file: !3, line: 1287)
!9585 = !DILocation(line: 1287, column: 1, scope: !9469)
!9586 = !DILocation(line: 1288, column: 16, scope: !9469)
!9587 = !DILocation(line: 1288, column: 23, scope: !9469)
!9588 = !DILocation(line: 1288, column: 2, scope: !9469)
!9589 = !DILocation(line: 1289, column: 9, scope: !9469)
!9590 = !DILocation(line: 1289, column: 2, scope: !9469)
!9591 = distinct !DISubprogram(name: "adc_synchronization", scope: !3, file: !3, line: 2876, type: !5239, scopeLine: 2877, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!9592 = !DILocalVariable(name: "state", arg: 1, scope: !9591, file: !3, line: 2876, type: !4562)
!9593 = !DILocation(line: 2876, column: 51, scope: !9591)
!9594 = !DILocalVariable(name: "count", scope: !9591, file: !3, line: 2878, type: !408)
!9595 = !DILocation(line: 2878, column: 6, scope: !9591)
!9596 = !DILocalVariable(name: "status", scope: !9591, file: !3, line: 2879, type: !405)
!9597 = !DILocation(line: 2879, column: 6, scope: !9591)
!9598 = !DILocation(line: 2881, column: 2, scope: !9591)
!9599 = !DILocation(line: 2881, column: 2, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9601, file: !3, line: 2881, column: 2)
!9601 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 2881, column: 2)
!9602 = !DILocation(line: 2881, column: 2, scope: !9601)
!9603 = !DILocation(line: 2883, column: 32, scope: !9591)
!9604 = !DILocation(line: 2883, column: 11, scope: !9591)
!9605 = !DILocation(line: 2883, column: 9, scope: !9591)
!9606 = !DILocation(line: 2884, column: 6, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 2884, column: 6)
!9608 = !DILocation(line: 2884, column: 13, scope: !9607)
!9609 = !DILocation(line: 2884, column: 6, scope: !9591)
!9610 = !DILocation(line: 2885, column: 3, scope: !9607)
!9611 = !DILocation(line: 2887, column: 6, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 2887, column: 6)
!9613 = !DILocation(line: 2887, column: 12, scope: !9612)
!9614 = !DILocation(line: 2887, column: 6, scope: !9591)
!9615 = !DILocalVariable(name: "clk_neg", scope: !9616, file: !3, line: 2889, type: !408)
!9616 = distinct !DILexicalBlock(scope: !9612, file: !3, line: 2887, column: 18)
!9617 = !DILocation(line: 2889, column: 7, scope: !9616)
!9618 = !DILocation(line: 2891, column: 19, scope: !9616)
!9619 = !DILocation(line: 2891, column: 12, scope: !9616)
!9620 = !DILocation(line: 2891, column: 10, scope: !9616)
!9621 = !DILocation(line: 2892, column: 7, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 2892, column: 7)
!9623 = !DILocation(line: 2892, column: 14, scope: !9622)
!9624 = !DILocation(line: 2892, column: 7, scope: !9616)
!9625 = !DILocation(line: 2893, column: 4, scope: !9622)
!9626 = !DILocation(line: 2894, column: 8, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 2894, column: 7)
!9628 = !DILocation(line: 2894, column: 16, scope: !9627)
!9629 = !DILocation(line: 2894, column: 47, scope: !9627)
!9630 = !DILocation(line: 2894, column: 7, scope: !9616)
!9631 = !DILocation(line: 2896, column: 12, scope: !9632)
!9632 = distinct !DILexicalBlock(scope: !9627, file: !3, line: 2895, column: 47)
!9633 = !DILocation(line: 2897, column: 12, scope: !9632)
!9634 = !DILocation(line: 2899, column: 3, scope: !9632)
!9635 = !DILocation(line: 2900, column: 12, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9627, file: !3, line: 2899, column: 10)
!9637 = !DILocation(line: 2901, column: 12, scope: !9636)
!9638 = !DILocation(line: 2904, column: 20, scope: !9616)
!9639 = !DILocation(line: 2904, column: 45, scope: !9616)
!9640 = !DILocation(line: 2904, column: 12, scope: !9616)
!9641 = !DILocation(line: 2904, column: 10, scope: !9616)
!9642 = !DILocation(line: 2905, column: 7, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 2905, column: 7)
!9644 = !DILocation(line: 2905, column: 14, scope: !9643)
!9645 = !DILocation(line: 2905, column: 7, scope: !9616)
!9646 = !DILocation(line: 2906, column: 4, scope: !9643)
!9647 = !DILocation(line: 2907, column: 33, scope: !9616)
!9648 = !DILocation(line: 2907, column: 12, scope: !9616)
!9649 = !DILocation(line: 2907, column: 10, scope: !9616)
!9650 = !DILocation(line: 2908, column: 7, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 2908, column: 7)
!9652 = !DILocation(line: 2908, column: 14, scope: !9651)
!9653 = !DILocation(line: 2908, column: 7, scope: !9616)
!9654 = !DILocation(line: 2909, column: 4, scope: !9651)
!9655 = !DILocation(line: 2910, column: 2, scope: !9616)
!9656 = !DILocation(line: 2912, column: 6, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 2912, column: 6)
!9658 = !DILocation(line: 2912, column: 12, scope: !9657)
!9659 = !DILocation(line: 2912, column: 6, scope: !9591)
!9660 = !DILocation(line: 2913, column: 10, scope: !9657)
!9661 = !DILocation(line: 2913, column: 3, scope: !9657)
!9662 = !DILocation(line: 2912, column: 14, scope: !9657)
!9663 = !DILabel(scope: !9591, name: "error", file: !3, line: 2914)
!9664 = !DILocation(line: 2914, column: 1, scope: !9591)
!9665 = !DILocation(line: 2915, column: 6, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 2915, column: 6)
!9667 = !DILocation(line: 2915, column: 13, scope: !9666)
!9668 = !DILocation(line: 2915, column: 6, scope: !9591)
!9669 = !DILocation(line: 2916, column: 3, scope: !9666)
!9670 = !DILocation(line: 2917, column: 9, scope: !9591)
!9671 = !DILocation(line: 2917, column: 2, scope: !9591)
!9672 = distinct !DISubprogram(name: "set_pre_saw", scope: !3, file: !3, line: 2769, type: !9673, scopeLine: 2771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!9673 = !DISubroutineType(types: !9674)
!9674 = !{!405, !4562, !9675}
!9675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 64)
!9676 = !DILocalVariable(name: "state", arg: 1, scope: !9672, file: !3, line: 2769, type: !4562)
!9677 = !DILocation(line: 2769, column: 43, scope: !9672)
!9678 = !DILocalVariable(name: "p_pre_saw_cfg", arg: 2, scope: !9672, file: !3, line: 2770, type: !9675)
!9679 = !DILocation(line: 2770, column: 30, scope: !9672)
!9680 = !DILocalVariable(name: "status", scope: !9672, file: !3, line: 2772, type: !405)
!9681 = !DILocation(line: 2772, column: 6, scope: !9672)
!9682 = !DILocation(line: 2774, column: 2, scope: !9672)
!9683 = !DILocation(line: 2774, column: 2, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 2774, column: 2)
!9685 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 2774, column: 2)
!9686 = !DILocation(line: 2774, column: 2, scope: !9685)
!9687 = !DILocation(line: 2776, column: 7, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 2776, column: 6)
!9689 = !DILocation(line: 2776, column: 21, scope: !9688)
!9690 = !DILocation(line: 2777, column: 6, scope: !9688)
!9691 = !DILocation(line: 2777, column: 10, scope: !9688)
!9692 = !DILocation(line: 2777, column: 25, scope: !9688)
!9693 = !DILocation(line: 2777, column: 35, scope: !9688)
!9694 = !DILocation(line: 2776, column: 6, scope: !9672)
!9695 = !DILocation(line: 2778, column: 3, scope: !9688)
!9696 = !DILocation(line: 2780, column: 19, scope: !9672)
!9697 = !DILocation(line: 2780, column: 43, scope: !9672)
!9698 = !DILocation(line: 2780, column: 58, scope: !9672)
!9699 = !DILocation(line: 2780, column: 11, scope: !9672)
!9700 = !DILocation(line: 2780, column: 9, scope: !9672)
!9701 = !DILocation(line: 2780, column: 2, scope: !9672)
!9702 = !DILabel(scope: !9672, name: "error", file: !3, line: 2781)
!9703 = !DILocation(line: 2781, column: 1, scope: !9672)
!9704 = !DILocation(line: 2782, column: 6, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 2782, column: 6)
!9706 = !DILocation(line: 2782, column: 13, scope: !9705)
!9707 = !DILocation(line: 2782, column: 6, scope: !9672)
!9708 = !DILocation(line: 2783, column: 3, scope: !9705)
!9709 = !DILocation(line: 2784, column: 9, scope: !9672)
!9710 = !DILocation(line: 2784, column: 2, scope: !9672)
!9711 = distinct !DISubprogram(name: "set_agc_rf", scope: !3, file: !3, line: 2135, type: !9712, scopeLine: 2137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!9712 = !DISubroutineType(types: !9713)
!9713 = !{!405, !4562, !9714, !406}
!9714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4598, size: 64)
!9715 = !DILocalVariable(name: "state", arg: 1, scope: !9711, file: !3, line: 2135, type: !4562)
!9716 = !DILocation(line: 2135, column: 42, scope: !9711)
!9717 = !DILocalVariable(name: "p_agc_cfg", arg: 2, scope: !9711, file: !3, line: 2136, type: !9714)
!9718 = !DILocation(line: 2136, column: 25, scope: !9711)
!9719 = !DILocalVariable(name: "is_dtv", arg: 3, scope: !9711, file: !3, line: 2136, type: !406)
!9720 = !DILocation(line: 2136, column: 41, scope: !9711)
!9721 = !DILocalVariable(name: "status", scope: !9711, file: !3, line: 2138, type: !405)
!9722 = !DILocation(line: 2138, column: 6, scope: !9711)
!9723 = !DILocalVariable(name: "data", scope: !9711, file: !3, line: 2139, type: !408)
!9724 = !DILocation(line: 2139, column: 6, scope: !9711)
!9725 = !DILocalVariable(name: "p_if_agc_settings", scope: !9711, file: !3, line: 2140, type: !9714)
!9726 = !DILocation(line: 2140, column: 20, scope: !9711)
!9727 = !DILocation(line: 2142, column: 2, scope: !9711)
!9728 = !DILocation(line: 2142, column: 2, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9730, file: !3, line: 2142, column: 2)
!9730 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 2142, column: 2)
!9731 = !DILocation(line: 2142, column: 2, scope: !9730)
!9732 = !DILocation(line: 2144, column: 6, scope: !9733)
!9733 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 2144, column: 6)
!9734 = !DILocation(line: 2144, column: 16, scope: !9733)
!9735 = !DILocation(line: 2144, column: 6, scope: !9711)
!9736 = !DILocation(line: 2145, column: 3, scope: !9733)
!9737 = !DILocation(line: 2147, column: 10, scope: !9711)
!9738 = !DILocation(line: 2147, column: 21, scope: !9711)
!9739 = !DILocation(line: 2147, column: 2, scope: !9711)
!9740 = !DILocation(line: 2150, column: 19, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 2147, column: 32)
!9742 = !DILocation(line: 2150, column: 12, scope: !9741)
!9743 = !DILocation(line: 2150, column: 10, scope: !9741)
!9744 = !DILocation(line: 2151, column: 7, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2151, column: 7)
!9746 = !DILocation(line: 2151, column: 14, scope: !9745)
!9747 = !DILocation(line: 2151, column: 7, scope: !9741)
!9748 = !DILocation(line: 2152, column: 4, scope: !9745)
!9749 = !DILocation(line: 2153, column: 8, scope: !9741)
!9750 = !DILocation(line: 2154, column: 20, scope: !9741)
!9751 = !DILocation(line: 2154, column: 44, scope: !9741)
!9752 = !DILocation(line: 2154, column: 12, scope: !9741)
!9753 = !DILocation(line: 2154, column: 10, scope: !9741)
!9754 = !DILocation(line: 2155, column: 7, scope: !9755)
!9755 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2155, column: 7)
!9756 = !DILocation(line: 2155, column: 14, scope: !9755)
!9757 = !DILocation(line: 2155, column: 7, scope: !9741)
!9758 = !DILocation(line: 2156, column: 4, scope: !9755)
!9759 = !DILocation(line: 2157, column: 19, scope: !9741)
!9760 = !DILocation(line: 2157, column: 12, scope: !9741)
!9761 = !DILocation(line: 2157, column: 10, scope: !9741)
!9762 = !DILocation(line: 2158, column: 7, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2158, column: 7)
!9764 = !DILocation(line: 2158, column: 14, scope: !9763)
!9765 = !DILocation(line: 2158, column: 7, scope: !9741)
!9766 = !DILocation(line: 2159, column: 4, scope: !9763)
!9767 = !DILocation(line: 2162, column: 8, scope: !9741)
!9768 = !DILocation(line: 2165, column: 7, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2165, column: 7)
!9770 = !DILocation(line: 2165, column: 14, scope: !9769)
!9771 = !DILocation(line: 2165, column: 7, scope: !9741)
!9772 = !DILocation(line: 2166, column: 9, scope: !9769)
!9773 = !DILocation(line: 2166, column: 4, scope: !9769)
!9774 = !DILocation(line: 2168, column: 9, scope: !9769)
!9775 = !DILocation(line: 2169, column: 20, scope: !9741)
!9776 = !DILocation(line: 2169, column: 50, scope: !9741)
!9777 = !DILocation(line: 2169, column: 12, scope: !9741)
!9778 = !DILocation(line: 2169, column: 10, scope: !9741)
!9779 = !DILocation(line: 2170, column: 7, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2170, column: 7)
!9781 = !DILocation(line: 2170, column: 14, scope: !9780)
!9782 = !DILocation(line: 2170, column: 7, scope: !9741)
!9783 = !DILocation(line: 2171, column: 4, scope: !9780)
!9784 = !DILocation(line: 2174, column: 19, scope: !9741)
!9785 = !DILocation(line: 2174, column: 12, scope: !9741)
!9786 = !DILocation(line: 2174, column: 10, scope: !9741)
!9787 = !DILocation(line: 2175, column: 7, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2175, column: 7)
!9789 = !DILocation(line: 2175, column: 14, scope: !9788)
!9790 = !DILocation(line: 2175, column: 7, scope: !9741)
!9791 = !DILocation(line: 2176, column: 4, scope: !9788)
!9792 = !DILocation(line: 2178, column: 8, scope: !9741)
!9793 = !DILocation(line: 2179, column: 14, scope: !9741)
!9794 = !DILocation(line: 2179, column: 25, scope: !9741)
!9795 = !DILocation(line: 2179, column: 31, scope: !9741)
!9796 = !DILocation(line: 2179, column: 12, scope: !9741)
!9797 = !DILocation(line: 2181, column: 5, scope: !9741)
!9798 = !DILocation(line: 2179, column: 8, scope: !9741)
!9799 = !DILocation(line: 2183, column: 20, scope: !9741)
!9800 = !DILocation(line: 2183, column: 50, scope: !9741)
!9801 = !DILocation(line: 2183, column: 12, scope: !9741)
!9802 = !DILocation(line: 2183, column: 10, scope: !9741)
!9803 = !DILocation(line: 2184, column: 7, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2184, column: 7)
!9805 = !DILocation(line: 2184, column: 14, scope: !9804)
!9806 = !DILocation(line: 2184, column: 7, scope: !9741)
!9807 = !DILocation(line: 2185, column: 4, scope: !9804)
!9808 = !DILocation(line: 2187, column: 15, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2187, column: 7)
!9810 = !DILocation(line: 2187, column: 7, scope: !9809)
!9811 = !DILocation(line: 2187, column: 7, scope: !9741)
!9812 = !DILocation(line: 2188, column: 25, scope: !9809)
!9813 = !DILocation(line: 2188, column: 32, scope: !9809)
!9814 = !DILocation(line: 2188, column: 22, scope: !9809)
!9815 = !DILocation(line: 2188, column: 4, scope: !9809)
!9816 = !DILocation(line: 2189, column: 19, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9809, file: !3, line: 2189, column: 12)
!9818 = !DILocation(line: 2189, column: 12, scope: !9817)
!9819 = !DILocation(line: 2189, column: 12, scope: !9809)
!9820 = !DILocation(line: 2190, column: 25, scope: !9817)
!9821 = !DILocation(line: 2190, column: 32, scope: !9817)
!9822 = !DILocation(line: 2190, column: 22, scope: !9817)
!9823 = !DILocation(line: 2190, column: 4, scope: !9817)
!9824 = !DILocation(line: 2192, column: 25, scope: !9817)
!9825 = !DILocation(line: 2192, column: 32, scope: !9817)
!9826 = !DILocation(line: 2192, column: 22, scope: !9817)
!9827 = !DILocation(line: 2193, column: 7, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2193, column: 7)
!9829 = !DILocation(line: 2193, column: 25, scope: !9828)
!9830 = !DILocation(line: 2193, column: 7, scope: !9741)
!9831 = !DILocation(line: 2194, column: 11, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9828, file: !3, line: 2193, column: 34)
!9833 = !DILocation(line: 2195, column: 4, scope: !9832)
!9834 = !DILocation(line: 2199, column: 7, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2199, column: 7)
!9836 = !DILocation(line: 2199, column: 26, scope: !9835)
!9837 = !DILocation(line: 2199, column: 36, scope: !9835)
!9838 = !DILocation(line: 2199, column: 7, scope: !9741)
!9839 = !DILocation(line: 2200, column: 21, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9835, file: !3, line: 2199, column: 59)
!9841 = !DILocation(line: 2202, column: 7, scope: !9840)
!9842 = !DILocation(line: 2202, column: 18, scope: !9840)
!9843 = !DILocation(line: 2200, column: 13, scope: !9840)
!9844 = !DILocation(line: 2200, column: 11, scope: !9840)
!9845 = !DILocation(line: 2203, column: 8, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 2203, column: 8)
!9847 = !DILocation(line: 2203, column: 15, scope: !9846)
!9848 = !DILocation(line: 2203, column: 8, scope: !9840)
!9849 = !DILocation(line: 2204, column: 5, scope: !9846)
!9850 = !DILocation(line: 2205, column: 3, scope: !9840)
!9851 = !DILocation(line: 2208, column: 20, scope: !9741)
!9852 = !DILocation(line: 2209, column: 6, scope: !9741)
!9853 = !DILocation(line: 2209, column: 17, scope: !9741)
!9854 = !DILocation(line: 2208, column: 12, scope: !9741)
!9855 = !DILocation(line: 2208, column: 10, scope: !9741)
!9856 = !DILocation(line: 2210, column: 7, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2210, column: 7)
!9858 = !DILocation(line: 2210, column: 14, scope: !9857)
!9859 = !DILocation(line: 2210, column: 7, scope: !9741)
!9860 = !DILocation(line: 2211, column: 4, scope: !9857)
!9861 = !DILocation(line: 2214, column: 20, scope: !9741)
!9862 = !DILocation(line: 2215, column: 6, scope: !9741)
!9863 = !DILocation(line: 2215, column: 17, scope: !9741)
!9864 = !DILocation(line: 2214, column: 12, scope: !9741)
!9865 = !DILocation(line: 2214, column: 10, scope: !9741)
!9866 = !DILocation(line: 2216, column: 7, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2216, column: 7)
!9868 = !DILocation(line: 2216, column: 14, scope: !9867)
!9869 = !DILocation(line: 2216, column: 7, scope: !9741)
!9870 = !DILocation(line: 2217, column: 4, scope: !9867)
!9871 = !DILocation(line: 2219, column: 3, scope: !9741)
!9872 = !DILocation(line: 2223, column: 19, scope: !9741)
!9873 = !DILocation(line: 2223, column: 12, scope: !9741)
!9874 = !DILocation(line: 2223, column: 10, scope: !9741)
!9875 = !DILocation(line: 2224, column: 7, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2224, column: 7)
!9877 = !DILocation(line: 2224, column: 14, scope: !9876)
!9878 = !DILocation(line: 2224, column: 7, scope: !9741)
!9879 = !DILocation(line: 2225, column: 4, scope: !9876)
!9880 = !DILocation(line: 2226, column: 8, scope: !9741)
!9881 = !DILocation(line: 2227, column: 20, scope: !9741)
!9882 = !DILocation(line: 2227, column: 44, scope: !9741)
!9883 = !DILocation(line: 2227, column: 12, scope: !9741)
!9884 = !DILocation(line: 2227, column: 10, scope: !9741)
!9885 = !DILocation(line: 2228, column: 7, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2228, column: 7)
!9887 = !DILocation(line: 2228, column: 14, scope: !9886)
!9888 = !DILocation(line: 2228, column: 7, scope: !9741)
!9889 = !DILocation(line: 2229, column: 4, scope: !9886)
!9890 = !DILocation(line: 2232, column: 19, scope: !9741)
!9891 = !DILocation(line: 2232, column: 12, scope: !9741)
!9892 = !DILocation(line: 2232, column: 10, scope: !9741)
!9893 = !DILocation(line: 2233, column: 7, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2233, column: 7)
!9895 = !DILocation(line: 2233, column: 14, scope: !9894)
!9896 = !DILocation(line: 2233, column: 7, scope: !9741)
!9897 = !DILocation(line: 2234, column: 4, scope: !9894)
!9898 = !DILocation(line: 2235, column: 8, scope: !9741)
!9899 = !DILocation(line: 2236, column: 7, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2236, column: 7)
!9901 = !DILocation(line: 2236, column: 14, scope: !9900)
!9902 = !DILocation(line: 2236, column: 7, scope: !9741)
!9903 = !DILocation(line: 2237, column: 9, scope: !9900)
!9904 = !DILocation(line: 2237, column: 4, scope: !9900)
!9905 = !DILocation(line: 2239, column: 9, scope: !9900)
!9906 = !DILocation(line: 2240, column: 20, scope: !9741)
!9907 = !DILocation(line: 2240, column: 50, scope: !9741)
!9908 = !DILocation(line: 2240, column: 12, scope: !9741)
!9909 = !DILocation(line: 2240, column: 10, scope: !9741)
!9910 = !DILocation(line: 2241, column: 7, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2241, column: 7)
!9912 = !DILocation(line: 2241, column: 14, scope: !9911)
!9913 = !DILocation(line: 2241, column: 7, scope: !9741)
!9914 = !DILocation(line: 2242, column: 4, scope: !9911)
!9915 = !DILocation(line: 2245, column: 20, scope: !9741)
!9916 = !DILocation(line: 2245, column: 12, scope: !9741)
!9917 = !DILocation(line: 2245, column: 10, scope: !9741)
!9918 = !DILocation(line: 2246, column: 7, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2246, column: 7)
!9920 = !DILocation(line: 2246, column: 14, scope: !9919)
!9921 = !DILocation(line: 2246, column: 7, scope: !9741)
!9922 = !DILocation(line: 2247, column: 4, scope: !9919)
!9923 = !DILocation(line: 2250, column: 20, scope: !9741)
!9924 = !DILocation(line: 2251, column: 6, scope: !9741)
!9925 = !DILocation(line: 2251, column: 17, scope: !9741)
!9926 = !DILocation(line: 2250, column: 12, scope: !9741)
!9927 = !DILocation(line: 2250, column: 10, scope: !9741)
!9928 = !DILocation(line: 2252, column: 7, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2252, column: 7)
!9930 = !DILocation(line: 2252, column: 14, scope: !9929)
!9931 = !DILocation(line: 2252, column: 7, scope: !9741)
!9932 = !DILocation(line: 2253, column: 4, scope: !9929)
!9933 = !DILocation(line: 2254, column: 3, scope: !9741)
!9934 = !DILocation(line: 2258, column: 19, scope: !9741)
!9935 = !DILocation(line: 2258, column: 12, scope: !9741)
!9936 = !DILocation(line: 2258, column: 10, scope: !9741)
!9937 = !DILocation(line: 2259, column: 7, scope: !9938)
!9938 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2259, column: 7)
!9939 = !DILocation(line: 2259, column: 14, scope: !9938)
!9940 = !DILocation(line: 2259, column: 7, scope: !9741)
!9941 = !DILocation(line: 2260, column: 4, scope: !9938)
!9942 = !DILocation(line: 2261, column: 8, scope: !9741)
!9943 = !DILocation(line: 2262, column: 20, scope: !9741)
!9944 = !DILocation(line: 2262, column: 44, scope: !9741)
!9945 = !DILocation(line: 2262, column: 12, scope: !9741)
!9946 = !DILocation(line: 2262, column: 10, scope: !9741)
!9947 = !DILocation(line: 2263, column: 7, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2263, column: 7)
!9949 = !DILocation(line: 2263, column: 14, scope: !9948)
!9950 = !DILocation(line: 2263, column: 7, scope: !9741)
!9951 = !DILocation(line: 2264, column: 4, scope: !9948)
!9952 = !DILocation(line: 2267, column: 19, scope: !9741)
!9953 = !DILocation(line: 2267, column: 12, scope: !9741)
!9954 = !DILocation(line: 2267, column: 10, scope: !9741)
!9955 = !DILocation(line: 2268, column: 7, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2268, column: 7)
!9957 = !DILocation(line: 2268, column: 14, scope: !9956)
!9958 = !DILocation(line: 2268, column: 7, scope: !9741)
!9959 = !DILocation(line: 2269, column: 4, scope: !9956)
!9960 = !DILocation(line: 2270, column: 8, scope: !9741)
!9961 = !DILocation(line: 2271, column: 20, scope: !9741)
!9962 = !DILocation(line: 2271, column: 50, scope: !9741)
!9963 = !DILocation(line: 2271, column: 12, scope: !9741)
!9964 = !DILocation(line: 2271, column: 10, scope: !9741)
!9965 = !DILocation(line: 2272, column: 7, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 2272, column: 7)
!9967 = !DILocation(line: 2272, column: 14, scope: !9966)
!9968 = !DILocation(line: 2272, column: 7, scope: !9741)
!9969 = !DILocation(line: 2273, column: 4, scope: !9966)
!9970 = !DILocation(line: 2274, column: 3, scope: !9741)
!9971 = !DILocation(line: 2277, column: 10, scope: !9741)
!9972 = !DILocation(line: 2279, column: 2, scope: !9741)
!9973 = !DILabel(scope: !9711, name: "error", file: !3, line: 2280)
!9974 = !DILocation(line: 2280, column: 1, scope: !9711)
!9975 = !DILocation(line: 2281, column: 6, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 2281, column: 6)
!9977 = !DILocation(line: 2281, column: 13, scope: !9976)
!9978 = !DILocation(line: 2281, column: 6, scope: !9711)
!9979 = !DILocation(line: 2282, column: 3, scope: !9976)
!9980 = !DILocation(line: 2283, column: 9, scope: !9711)
!9981 = !DILocation(line: 2283, column: 2, scope: !9711)
!9982 = distinct !DISubprogram(name: "set_agc_if", scope: !3, file: !3, line: 2288, type: !9712, scopeLine: 2290, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!9983 = !DILocalVariable(name: "state", arg: 1, scope: !9982, file: !3, line: 2288, type: !4562)
!9984 = !DILocation(line: 2288, column: 42, scope: !9982)
!9985 = !DILocalVariable(name: "p_agc_cfg", arg: 2, scope: !9982, file: !3, line: 2289, type: !9714)
!9986 = !DILocation(line: 2289, column: 25, scope: !9982)
!9987 = !DILocalVariable(name: "is_dtv", arg: 3, scope: !9982, file: !3, line: 2289, type: !406)
!9988 = !DILocation(line: 2289, column: 41, scope: !9982)
!9989 = !DILocalVariable(name: "data", scope: !9982, file: !3, line: 2291, type: !408)
!9990 = !DILocation(line: 2291, column: 6, scope: !9982)
!9991 = !DILocalVariable(name: "status", scope: !9982, file: !3, line: 2292, type: !405)
!9992 = !DILocation(line: 2292, column: 6, scope: !9982)
!9993 = !DILocalVariable(name: "p_rf_agc_settings", scope: !9982, file: !3, line: 2293, type: !9714)
!9994 = !DILocation(line: 2293, column: 20, scope: !9982)
!9995 = !DILocation(line: 2295, column: 2, scope: !9982)
!9996 = !DILocation(line: 2295, column: 2, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 2295, column: 2)
!9998 = distinct !DILexicalBlock(scope: !9982, file: !3, line: 2295, column: 2)
!9999 = !DILocation(line: 2295, column: 2, scope: !9998)
!10000 = !DILocation(line: 2297, column: 10, scope: !9982)
!10001 = !DILocation(line: 2297, column: 21, scope: !9982)
!10002 = !DILocation(line: 2297, column: 2, scope: !9982)
!10003 = !DILocation(line: 2301, column: 19, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9982, file: !3, line: 2297, column: 32)
!10005 = !DILocation(line: 2301, column: 12, scope: !10004)
!10006 = !DILocation(line: 2301, column: 10, scope: !10004)
!10007 = !DILocation(line: 2302, column: 7, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2302, column: 7)
!10009 = !DILocation(line: 2302, column: 14, scope: !10008)
!10010 = !DILocation(line: 2302, column: 7, scope: !10004)
!10011 = !DILocation(line: 2303, column: 4, scope: !10008)
!10012 = !DILocation(line: 2304, column: 8, scope: !10004)
!10013 = !DILocation(line: 2305, column: 20, scope: !10004)
!10014 = !DILocation(line: 2305, column: 44, scope: !10004)
!10015 = !DILocation(line: 2305, column: 12, scope: !10004)
!10016 = !DILocation(line: 2305, column: 10, scope: !10004)
!10017 = !DILocation(line: 2306, column: 7, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2306, column: 7)
!10019 = !DILocation(line: 2306, column: 14, scope: !10018)
!10020 = !DILocation(line: 2306, column: 7, scope: !10004)
!10021 = !DILocation(line: 2307, column: 4, scope: !10018)
!10022 = !DILocation(line: 2309, column: 19, scope: !10004)
!10023 = !DILocation(line: 2309, column: 12, scope: !10004)
!10024 = !DILocation(line: 2309, column: 10, scope: !10004)
!10025 = !DILocation(line: 2310, column: 7, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2310, column: 7)
!10027 = !DILocation(line: 2310, column: 14, scope: !10026)
!10028 = !DILocation(line: 2310, column: 7, scope: !10004)
!10029 = !DILocation(line: 2311, column: 4, scope: !10026)
!10030 = !DILocation(line: 2314, column: 8, scope: !10004)
!10031 = !DILocation(line: 2317, column: 7, scope: !10032)
!10032 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2317, column: 7)
!10033 = !DILocation(line: 2317, column: 14, scope: !10032)
!10034 = !DILocation(line: 2317, column: 7, scope: !10004)
!10035 = !DILocation(line: 2318, column: 9, scope: !10032)
!10036 = !DILocation(line: 2318, column: 4, scope: !10032)
!10037 = !DILocation(line: 2320, column: 9, scope: !10032)
!10038 = !DILocation(line: 2321, column: 20, scope: !10004)
!10039 = !DILocation(line: 2321, column: 50, scope: !10004)
!10040 = !DILocation(line: 2321, column: 12, scope: !10004)
!10041 = !DILocation(line: 2321, column: 10, scope: !10004)
!10042 = !DILocation(line: 2322, column: 7, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2322, column: 7)
!10044 = !DILocation(line: 2322, column: 14, scope: !10043)
!10045 = !DILocation(line: 2322, column: 7, scope: !10004)
!10046 = !DILocation(line: 2323, column: 4, scope: !10043)
!10047 = !DILocation(line: 2326, column: 19, scope: !10004)
!10048 = !DILocation(line: 2326, column: 12, scope: !10004)
!10049 = !DILocation(line: 2326, column: 10, scope: !10004)
!10050 = !DILocation(line: 2327, column: 7, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2327, column: 7)
!10052 = !DILocation(line: 2327, column: 14, scope: !10051)
!10053 = !DILocation(line: 2327, column: 7, scope: !10004)
!10054 = !DILocation(line: 2328, column: 4, scope: !10051)
!10055 = !DILocation(line: 2329, column: 8, scope: !10004)
!10056 = !DILocation(line: 2330, column: 14, scope: !10004)
!10057 = !DILocation(line: 2330, column: 25, scope: !10004)
!10058 = !DILocation(line: 2330, column: 31, scope: !10004)
!10059 = !DILocation(line: 2330, column: 12, scope: !10004)
!10060 = !DILocation(line: 2332, column: 5, scope: !10004)
!10061 = !DILocation(line: 2330, column: 8, scope: !10004)
!10062 = !DILocation(line: 2334, column: 20, scope: !10004)
!10063 = !DILocation(line: 2334, column: 50, scope: !10004)
!10064 = !DILocation(line: 2334, column: 12, scope: !10004)
!10065 = !DILocation(line: 2334, column: 10, scope: !10004)
!10066 = !DILocation(line: 2335, column: 7, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2335, column: 7)
!10068 = !DILocation(line: 2335, column: 14, scope: !10067)
!10069 = !DILocation(line: 2335, column: 7, scope: !10004)
!10070 = !DILocation(line: 2336, column: 4, scope: !10067)
!10071 = !DILocation(line: 2338, column: 14, scope: !10072)
!10072 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2338, column: 7)
!10073 = !DILocation(line: 2338, column: 7, scope: !10072)
!10074 = !DILocation(line: 2338, column: 7, scope: !10004)
!10075 = !DILocation(line: 2339, column: 25, scope: !10072)
!10076 = !DILocation(line: 2339, column: 32, scope: !10072)
!10077 = !DILocation(line: 2339, column: 22, scope: !10072)
!10078 = !DILocation(line: 2339, column: 4, scope: !10072)
!10079 = !DILocation(line: 2341, column: 25, scope: !10072)
!10080 = !DILocation(line: 2341, column: 32, scope: !10072)
!10081 = !DILocation(line: 2341, column: 22, scope: !10072)
!10082 = !DILocation(line: 2342, column: 7, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2342, column: 7)
!10084 = !DILocation(line: 2342, column: 25, scope: !10083)
!10085 = !DILocation(line: 2342, column: 7, scope: !10004)
!10086 = !DILocation(line: 2343, column: 4, scope: !10083)
!10087 = !DILocation(line: 2345, column: 20, scope: !10004)
!10088 = !DILocation(line: 2346, column: 6, scope: !10004)
!10089 = !DILocation(line: 2346, column: 25, scope: !10004)
!10090 = !DILocation(line: 2345, column: 12, scope: !10004)
!10091 = !DILocation(line: 2345, column: 10, scope: !10004)
!10092 = !DILocation(line: 2347, column: 7, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2347, column: 7)
!10094 = !DILocation(line: 2347, column: 14, scope: !10093)
!10095 = !DILocation(line: 2347, column: 7, scope: !10004)
!10096 = !DILocation(line: 2348, column: 4, scope: !10093)
!10097 = !DILocation(line: 2349, column: 3, scope: !10004)
!10098 = !DILocation(line: 2354, column: 19, scope: !10004)
!10099 = !DILocation(line: 2354, column: 12, scope: !10004)
!10100 = !DILocation(line: 2354, column: 10, scope: !10004)
!10101 = !DILocation(line: 2355, column: 7, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2355, column: 7)
!10103 = !DILocation(line: 2355, column: 14, scope: !10102)
!10104 = !DILocation(line: 2355, column: 7, scope: !10004)
!10105 = !DILocation(line: 2356, column: 4, scope: !10102)
!10106 = !DILocation(line: 2357, column: 8, scope: !10004)
!10107 = !DILocation(line: 2358, column: 20, scope: !10004)
!10108 = !DILocation(line: 2358, column: 44, scope: !10004)
!10109 = !DILocation(line: 2358, column: 12, scope: !10004)
!10110 = !DILocation(line: 2358, column: 10, scope: !10004)
!10111 = !DILocation(line: 2359, column: 7, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2359, column: 7)
!10113 = !DILocation(line: 2359, column: 14, scope: !10112)
!10114 = !DILocation(line: 2359, column: 7, scope: !10004)
!10115 = !DILocation(line: 2360, column: 4, scope: !10112)
!10116 = !DILocation(line: 2362, column: 19, scope: !10004)
!10117 = !DILocation(line: 2362, column: 12, scope: !10004)
!10118 = !DILocation(line: 2362, column: 10, scope: !10004)
!10119 = !DILocation(line: 2363, column: 7, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2363, column: 7)
!10121 = !DILocation(line: 2363, column: 14, scope: !10120)
!10122 = !DILocation(line: 2363, column: 7, scope: !10004)
!10123 = !DILocation(line: 2364, column: 4, scope: !10120)
!10124 = !DILocation(line: 2367, column: 8, scope: !10004)
!10125 = !DILocation(line: 2370, column: 7, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2370, column: 7)
!10127 = !DILocation(line: 2370, column: 14, scope: !10126)
!10128 = !DILocation(line: 2370, column: 7, scope: !10004)
!10129 = !DILocation(line: 2371, column: 9, scope: !10126)
!10130 = !DILocation(line: 2371, column: 4, scope: !10126)
!10131 = !DILocation(line: 2373, column: 9, scope: !10126)
!10132 = !DILocation(line: 2374, column: 20, scope: !10004)
!10133 = !DILocation(line: 2374, column: 50, scope: !10004)
!10134 = !DILocation(line: 2374, column: 12, scope: !10004)
!10135 = !DILocation(line: 2374, column: 10, scope: !10004)
!10136 = !DILocation(line: 2375, column: 7, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2375, column: 7)
!10138 = !DILocation(line: 2375, column: 14, scope: !10137)
!10139 = !DILocation(line: 2375, column: 7, scope: !10004)
!10140 = !DILocation(line: 2376, column: 4, scope: !10137)
!10141 = !DILocation(line: 2379, column: 20, scope: !10004)
!10142 = !DILocation(line: 2380, column: 6, scope: !10004)
!10143 = !DILocation(line: 2380, column: 17, scope: !10004)
!10144 = !DILocation(line: 2379, column: 12, scope: !10004)
!10145 = !DILocation(line: 2379, column: 10, scope: !10004)
!10146 = !DILocation(line: 2381, column: 7, scope: !10147)
!10147 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2381, column: 7)
!10148 = !DILocation(line: 2381, column: 14, scope: !10147)
!10149 = !DILocation(line: 2381, column: 7, scope: !10004)
!10150 = !DILocation(line: 2382, column: 4, scope: !10147)
!10151 = !DILocation(line: 2383, column: 3, scope: !10004)
!10152 = !DILocation(line: 2388, column: 19, scope: !10004)
!10153 = !DILocation(line: 2388, column: 12, scope: !10004)
!10154 = !DILocation(line: 2388, column: 10, scope: !10004)
!10155 = !DILocation(line: 2389, column: 7, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2389, column: 7)
!10157 = !DILocation(line: 2389, column: 14, scope: !10156)
!10158 = !DILocation(line: 2389, column: 7, scope: !10004)
!10159 = !DILocation(line: 2390, column: 4, scope: !10156)
!10160 = !DILocation(line: 2391, column: 8, scope: !10004)
!10161 = !DILocation(line: 2392, column: 20, scope: !10004)
!10162 = !DILocation(line: 2392, column: 44, scope: !10004)
!10163 = !DILocation(line: 2392, column: 12, scope: !10004)
!10164 = !DILocation(line: 2392, column: 10, scope: !10004)
!10165 = !DILocation(line: 2393, column: 7, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2393, column: 7)
!10167 = !DILocation(line: 2393, column: 14, scope: !10166)
!10168 = !DILocation(line: 2393, column: 7, scope: !10004)
!10169 = !DILocation(line: 2394, column: 4, scope: !10166)
!10170 = !DILocation(line: 2397, column: 19, scope: !10004)
!10171 = !DILocation(line: 2397, column: 12, scope: !10004)
!10172 = !DILocation(line: 2397, column: 10, scope: !10004)
!10173 = !DILocation(line: 2398, column: 7, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2398, column: 7)
!10175 = !DILocation(line: 2398, column: 14, scope: !10174)
!10176 = !DILocation(line: 2398, column: 7, scope: !10004)
!10177 = !DILocation(line: 2399, column: 4, scope: !10174)
!10178 = !DILocation(line: 2400, column: 8, scope: !10004)
!10179 = !DILocation(line: 2401, column: 20, scope: !10004)
!10180 = !DILocation(line: 2401, column: 50, scope: !10004)
!10181 = !DILocation(line: 2401, column: 12, scope: !10004)
!10182 = !DILocation(line: 2401, column: 10, scope: !10004)
!10183 = !DILocation(line: 2402, column: 7, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 2402, column: 7)
!10185 = !DILocation(line: 2402, column: 14, scope: !10184)
!10186 = !DILocation(line: 2402, column: 7, scope: !10004)
!10187 = !DILocation(line: 2403, column: 4, scope: !10184)
!10188 = !DILocation(line: 2404, column: 3, scope: !10004)
!10189 = !DILocation(line: 2409, column: 19, scope: !9982)
!10190 = !DILocation(line: 2409, column: 57, scope: !9982)
!10191 = !DILocation(line: 2409, column: 68, scope: !9982)
!10192 = !DILocation(line: 2409, column: 11, scope: !9982)
!10193 = !DILocation(line: 2409, column: 9, scope: !9982)
!10194 = !DILocation(line: 2409, column: 2, scope: !9982)
!10195 = !DILabel(scope: !9982, name: "error", file: !3, line: 2410)
!10196 = !DILocation(line: 2410, column: 1, scope: !9982)
!10197 = !DILocation(line: 2411, column: 6, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !9982, file: !3, line: 2411, column: 6)
!10199 = !DILocation(line: 2411, column: 13, scope: !10198)
!10200 = !DILocation(line: 2411, column: 6, scope: !9982)
!10201 = !DILocation(line: 2412, column: 3, scope: !10198)
!10202 = !DILocation(line: 2413, column: 9, scope: !9982)
!10203 = !DILocation(line: 2413, column: 2, scope: !9982)
!10204 = !DILocation(line: 2414, column: 1, scope: !9982)
!10205 = distinct !DISubprogram(name: "mpegts_dto_setup", scope: !3, file: !3, line: 1963, type: !7235, scopeLine: 1965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!10206 = !DILocalVariable(name: "state", arg: 1, scope: !10205, file: !3, line: 1963, type: !4562)
!10207 = !DILocation(line: 1963, column: 48, scope: !10205)
!10208 = !DILocalVariable(name: "o_mode", arg: 2, scope: !10205, file: !3, line: 1964, type: !292)
!10209 = !DILocation(line: 1964, column: 26, scope: !10205)
!10210 = !DILocalVariable(name: "status", scope: !10205, file: !3, line: 1966, type: !405)
!10211 = !DILocation(line: 1966, column: 6, scope: !10205)
!10212 = !DILocalVariable(name: "fec_oc_reg_mode", scope: !10205, file: !3, line: 1968, type: !408)
!10213 = !DILocation(line: 1968, column: 6, scope: !10205)
!10214 = !DILocalVariable(name: "fec_oc_reg_ipr_mode", scope: !10205, file: !3, line: 1969, type: !408)
!10215 = !DILocation(line: 1969, column: 6, scope: !10205)
!10216 = !DILocalVariable(name: "fec_oc_dto_mode", scope: !10205, file: !3, line: 1970, type: !408)
!10217 = !DILocation(line: 1970, column: 6, scope: !10205)
!10218 = !DILocalVariable(name: "fec_oc_fct_mode", scope: !10205, file: !3, line: 1971, type: !408)
!10219 = !DILocation(line: 1971, column: 6, scope: !10205)
!10220 = !DILocalVariable(name: "fec_oc_dto_period", scope: !10205, file: !3, line: 1972, type: !408)
!10221 = !DILocation(line: 1972, column: 6, scope: !10205)
!10222 = !DILocalVariable(name: "fec_oc_dto_burst_len", scope: !10205, file: !3, line: 1973, type: !408)
!10223 = !DILocation(line: 1973, column: 6, scope: !10205)
!10224 = !DILocalVariable(name: "fec_oc_rcn_ctl_rate", scope: !10205, file: !3, line: 1974, type: !411)
!10225 = !DILocation(line: 1974, column: 6, scope: !10205)
!10226 = !DILocalVariable(name: "fec_oc_tmd_mode", scope: !10205, file: !3, line: 1975, type: !408)
!10227 = !DILocation(line: 1975, column: 6, scope: !10205)
!10228 = !DILocalVariable(name: "fec_oc_tmd_int_upd_rate", scope: !10205, file: !3, line: 1976, type: !408)
!10229 = !DILocation(line: 1976, column: 6, scope: !10205)
!10230 = !DILocalVariable(name: "max_bit_rate", scope: !10205, file: !3, line: 1977, type: !411)
!10231 = !DILocation(line: 1977, column: 6, scope: !10205)
!10232 = !DILocalVariable(name: "static_clk", scope: !10205, file: !3, line: 1978, type: !406)
!10233 = !DILocation(line: 1978, column: 7, scope: !10205)
!10234 = !DILocation(line: 1980, column: 2, scope: !10205)
!10235 = !DILocation(line: 1980, column: 2, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10237, file: !3, line: 1980, column: 2)
!10237 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 1980, column: 2)
!10238 = !DILocation(line: 1980, column: 2, scope: !10237)
!10239 = !DILocation(line: 1983, column: 18, scope: !10205)
!10240 = !DILocation(line: 1983, column: 11, scope: !10205)
!10241 = !DILocation(line: 1983, column: 9, scope: !10205)
!10242 = !DILocation(line: 1984, column: 6, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 1984, column: 6)
!10244 = !DILocation(line: 1984, column: 13, scope: !10243)
!10245 = !DILocation(line: 1984, column: 6, scope: !10205)
!10246 = !DILocation(line: 1985, column: 3, scope: !10243)
!10247 = !DILocation(line: 1986, column: 18, scope: !10205)
!10248 = !DILocation(line: 1986, column: 11, scope: !10205)
!10249 = !DILocation(line: 1986, column: 9, scope: !10205)
!10250 = !DILocation(line: 1987, column: 6, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 1987, column: 6)
!10252 = !DILocation(line: 1987, column: 13, scope: !10251)
!10253 = !DILocation(line: 1987, column: 6, scope: !10205)
!10254 = !DILocation(line: 1988, column: 3, scope: !10251)
!10255 = !DILocation(line: 1989, column: 18, scope: !10205)
!10256 = !DILocation(line: 1990, column: 22, scope: !10205)
!10257 = !DILocation(line: 1991, column: 6, scope: !10258)
!10258 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 1991, column: 6)
!10259 = !DILocation(line: 1991, column: 13, scope: !10258)
!10260 = !DILocation(line: 1991, column: 6, scope: !10205)
!10261 = !DILocation(line: 1993, column: 19, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10258, file: !3, line: 1991, column: 31)
!10263 = !DILocation(line: 1995, column: 23, scope: !10262)
!10264 = !DILocation(line: 1997, column: 24, scope: !10262)
!10265 = !DILocation(line: 1998, column: 2, scope: !10262)
!10266 = !DILocation(line: 2001, column: 22, scope: !10205)
!10267 = !DILocation(line: 2002, column: 7, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2002, column: 6)
!10269 = !DILocation(line: 2002, column: 14, scope: !10268)
!10270 = !DILocation(line: 2002, column: 6, scope: !10205)
!10271 = !DILocation(line: 2004, column: 23, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 2002, column: 33)
!10273 = !DILocation(line: 2005, column: 2, scope: !10272)
!10274 = !DILocation(line: 2007, column: 10, scope: !10205)
!10275 = !DILocation(line: 2007, column: 2, scope: !10205)
!10276 = !DILocation(line: 2009, column: 18, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2007, column: 18)
!10278 = !DILocation(line: 2009, column: 25, scope: !10277)
!10279 = !DILocation(line: 2009, column: 16, scope: !10277)
!10280 = !DILocation(line: 2010, column: 19, scope: !10277)
!10281 = !DILocation(line: 2011, column: 23, scope: !10277)
!10282 = !DILocation(line: 2012, column: 16, scope: !10277)
!10283 = !DILocation(line: 2012, column: 23, scope: !10277)
!10284 = !DILocation(line: 2012, column: 14, scope: !10277)
!10285 = !DILocation(line: 2013, column: 3, scope: !10277)
!10286 = !DILocation(line: 2016, column: 19, scope: !10277)
!10287 = !DILocation(line: 2017, column: 23, scope: !10277)
!10288 = !DILocation(line: 2018, column: 18, scope: !10277)
!10289 = !DILocation(line: 2018, column: 25, scope: !10277)
!10290 = !DILocation(line: 2018, column: 16, scope: !10277)
!10291 = !DILocation(line: 2019, column: 16, scope: !10277)
!10292 = !DILocation(line: 2019, column: 23, scope: !10277)
!10293 = !DILocation(line: 2019, column: 14, scope: !10277)
!10294 = !DILocation(line: 2020, column: 3, scope: !10277)
!10295 = !DILocation(line: 2022, column: 10, scope: !10277)
!10296 = !DILocation(line: 2023, column: 2, scope: !10277)
!10297 = !DILocation(line: 2024, column: 6, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2024, column: 6)
!10299 = !DILocation(line: 2024, column: 13, scope: !10298)
!10300 = !DILocation(line: 2024, column: 6, scope: !10205)
!10301 = !DILocation(line: 2025, column: 3, scope: !10298)
!10302 = !DILocation(line: 2028, column: 6, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2028, column: 6)
!10304 = !DILocation(line: 2028, column: 6, scope: !10205)
!10305 = !DILocalVariable(name: "bit_rate", scope: !10306, file: !3, line: 2029, type: !411)
!10306 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 2028, column: 18)
!10307 = !DILocation(line: 2029, column: 7, scope: !10306)
!10308 = !DILocation(line: 2035, column: 19, scope: !10306)
!10309 = !DILocation(line: 2037, column: 19, scope: !10306)
!10310 = !DILocation(line: 2041, column: 14, scope: !10306)
!10311 = !DILocation(line: 2041, column: 12, scope: !10306)
!10312 = !DILocation(line: 2042, column: 7, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 2042, column: 7)
!10314 = !DILocation(line: 2042, column: 16, scope: !10313)
!10315 = !DILocation(line: 2042, column: 7, scope: !10306)
!10316 = !DILocation(line: 2043, column: 13, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 2042, column: 30)
!10318 = !DILocation(line: 2044, column: 3, scope: !10317)
!10319 = !DILocation(line: 2051, column: 32, scope: !10306)
!10320 = !DILocation(line: 2051, column: 39, scope: !10306)
!10321 = !DILocation(line: 2052, column: 7, scope: !10306)
!10322 = !DILocation(line: 2052, column: 17, scope: !10306)
!10323 = !DILocation(line: 2052, column: 15, scope: !10306)
!10324 = !DILocation(line: 2051, column: 23, scope: !10306)
!10325 = !DILocation(line: 2051, column: 21, scope: !10306)
!10326 = !DILocation(line: 2053, column: 7, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 2053, column: 7)
!10328 = !DILocation(line: 2053, column: 25, scope: !10327)
!10329 = !DILocation(line: 2053, column: 7, scope: !10306)
!10330 = !DILocation(line: 2054, column: 22, scope: !10327)
!10331 = !DILocation(line: 2054, column: 4, scope: !10327)
!10332 = !DILocation(line: 2056, column: 22, scope: !10327)
!10333 = !DILocation(line: 2057, column: 27, scope: !10306)
!10334 = !DILocation(line: 2058, column: 2, scope: !10306)
!10335 = !DILocation(line: 2060, column: 19, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10303, file: !3, line: 2058, column: 9)
!10337 = !DILocation(line: 2061, column: 19, scope: !10336)
!10338 = !DILocation(line: 2062, column: 27, scope: !10336)
!10339 = !DILocation(line: 2066, column: 19, scope: !10205)
!10340 = !DILocation(line: 2066, column: 51, scope: !10205)
!10341 = !DILocation(line: 2066, column: 11, scope: !10205)
!10342 = !DILocation(line: 2066, column: 9, scope: !10205)
!10343 = !DILocation(line: 2067, column: 6, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2067, column: 6)
!10345 = !DILocation(line: 2067, column: 13, scope: !10344)
!10346 = !DILocation(line: 2067, column: 6, scope: !10205)
!10347 = !DILocation(line: 2068, column: 3, scope: !10344)
!10348 = !DILocation(line: 2069, column: 19, scope: !10205)
!10349 = !DILocation(line: 2069, column: 48, scope: !10205)
!10350 = !DILocation(line: 2069, column: 11, scope: !10205)
!10351 = !DILocation(line: 2069, column: 9, scope: !10205)
!10352 = !DILocation(line: 2070, column: 6, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2070, column: 6)
!10354 = !DILocation(line: 2070, column: 13, scope: !10353)
!10355 = !DILocation(line: 2070, column: 6, scope: !10205)
!10356 = !DILocation(line: 2071, column: 3, scope: !10353)
!10357 = !DILocation(line: 2072, column: 19, scope: !10205)
!10358 = !DILocation(line: 2072, column: 46, scope: !10205)
!10359 = !DILocation(line: 2072, column: 11, scope: !10205)
!10360 = !DILocation(line: 2072, column: 9, scope: !10205)
!10361 = !DILocation(line: 2073, column: 6, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2073, column: 6)
!10363 = !DILocation(line: 2073, column: 13, scope: !10362)
!10364 = !DILocation(line: 2073, column: 6, scope: !10205)
!10365 = !DILocation(line: 2074, column: 3, scope: !10362)
!10366 = !DILocation(line: 2075, column: 19, scope: !10205)
!10367 = !DILocation(line: 2075, column: 46, scope: !10205)
!10368 = !DILocation(line: 2075, column: 11, scope: !10205)
!10369 = !DILocation(line: 2075, column: 9, scope: !10205)
!10370 = !DILocation(line: 2076, column: 6, scope: !10371)
!10371 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2076, column: 6)
!10372 = !DILocation(line: 2076, column: 13, scope: !10371)
!10373 = !DILocation(line: 2076, column: 6, scope: !10205)
!10374 = !DILocation(line: 2077, column: 3, scope: !10371)
!10375 = !DILocation(line: 2078, column: 19, scope: !10205)
!10376 = !DILocation(line: 2078, column: 42, scope: !10205)
!10377 = !DILocation(line: 2078, column: 11, scope: !10205)
!10378 = !DILocation(line: 2078, column: 9, scope: !10205)
!10379 = !DILocation(line: 2079, column: 6, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2079, column: 6)
!10381 = !DILocation(line: 2079, column: 13, scope: !10380)
!10382 = !DILocation(line: 2079, column: 6, scope: !10205)
!10383 = !DILocation(line: 2080, column: 3, scope: !10380)
!10384 = !DILocation(line: 2081, column: 19, scope: !10205)
!10385 = !DILocation(line: 2081, column: 46, scope: !10205)
!10386 = !DILocation(line: 2081, column: 11, scope: !10205)
!10387 = !DILocation(line: 2081, column: 9, scope: !10205)
!10388 = !DILocation(line: 2082, column: 6, scope: !10389)
!10389 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2082, column: 6)
!10390 = !DILocation(line: 2082, column: 13, scope: !10389)
!10391 = !DILocation(line: 2082, column: 6, scope: !10205)
!10392 = !DILocation(line: 2083, column: 3, scope: !10389)
!10393 = !DILocation(line: 2086, column: 19, scope: !10205)
!10394 = !DILocation(line: 2086, column: 53, scope: !10205)
!10395 = !DILocation(line: 2086, column: 11, scope: !10205)
!10396 = !DILocation(line: 2086, column: 9, scope: !10205)
!10397 = !DILocation(line: 2087, column: 6, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2087, column: 6)
!10399 = !DILocation(line: 2087, column: 13, scope: !10398)
!10400 = !DILocation(line: 2087, column: 6, scope: !10205)
!10401 = !DILocation(line: 2088, column: 3, scope: !10398)
!10402 = !DILocation(line: 2089, column: 19, scope: !10205)
!10403 = !DILocation(line: 2090, column: 5, scope: !10205)
!10404 = !DILocation(line: 2089, column: 11, scope: !10205)
!10405 = !DILocation(line: 2089, column: 9, scope: !10205)
!10406 = !DILocation(line: 2091, column: 6, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2091, column: 6)
!10408 = !DILocation(line: 2091, column: 13, scope: !10407)
!10409 = !DILocation(line: 2091, column: 6, scope: !10205)
!10410 = !DILocation(line: 2092, column: 3, scope: !10407)
!10411 = !DILocation(line: 2093, column: 19, scope: !10205)
!10412 = !DILocation(line: 2093, column: 46, scope: !10205)
!10413 = !DILocation(line: 2093, column: 11, scope: !10205)
!10414 = !DILocation(line: 2093, column: 9, scope: !10205)
!10415 = !DILocation(line: 2093, column: 2, scope: !10205)
!10416 = !DILabel(scope: !10205, name: "error", file: !3, line: 2094)
!10417 = !DILocation(line: 2094, column: 1, scope: !10205)
!10418 = !DILocation(line: 2095, column: 6, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 2095, column: 6)
!10420 = !DILocation(line: 2095, column: 13, scope: !10419)
!10421 = !DILocation(line: 2095, column: 6, scope: !10205)
!10422 = !DILocation(line: 2096, column: 3, scope: !10419)
!10423 = !DILocation(line: 2097, column: 9, scope: !10205)
!10424 = !DILocation(line: 2097, column: 2, scope: !10205)
!10425 = distinct !DISubprogram(name: "dvbt_activate_presets", scope: !3, file: !3, line: 3431, type: !5239, scopeLine: 3432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!10426 = !DILocalVariable(name: "state", arg: 1, scope: !10425, file: !3, line: 3431, type: !4562)
!10427 = !DILocation(line: 3431, column: 53, scope: !10425)
!10428 = !DILocalVariable(name: "status", scope: !10425, file: !3, line: 3433, type: !405)
!10429 = !DILocation(line: 3433, column: 6, scope: !10425)
!10430 = !DILocalVariable(name: "setincenable", scope: !10425, file: !3, line: 3434, type: !406)
!10431 = !DILocation(line: 3434, column: 7, scope: !10425)
!10432 = !DILocalVariable(name: "setfrenable", scope: !10425, file: !3, line: 3435, type: !406)
!10433 = !DILocation(line: 3435, column: 7, scope: !10425)
!10434 = !DILocalVariable(name: "echo_thres2k", scope: !10425, file: !3, line: 3437, type: !10435)
!10435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drxk_cfg_dvbt_echo_thres_t", file: !284, line: 178, size: 64, elements: !10436)
!10436 = !{!10437, !10438}
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "threshold", scope: !10435, file: !284, line: 179, baseType: !408, size: 16)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "fft_mode", scope: !10435, file: !284, line: 180, baseType: !382, size: 32, offset: 32)
!10439 = !DILocation(line: 3437, column: 36, scope: !10425)
!10440 = !DILocalVariable(name: "echo_thres8k", scope: !10425, file: !3, line: 3438, type: !10435)
!10441 = !DILocation(line: 3438, column: 36, scope: !10425)
!10442 = !DILocation(line: 3440, column: 2, scope: !10425)
!10443 = !DILocation(line: 3440, column: 2, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 3440, column: 2)
!10445 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 3440, column: 2)
!10446 = !DILocation(line: 3440, column: 2, scope: !10445)
!10447 = !DILocation(line: 3441, column: 36, scope: !10425)
!10448 = !DILocation(line: 3441, column: 11, scope: !10425)
!10449 = !DILocation(line: 3441, column: 9, scope: !10425)
!10450 = !DILocation(line: 3442, column: 6, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 3442, column: 6)
!10452 = !DILocation(line: 3442, column: 13, scope: !10451)
!10453 = !DILocation(line: 3442, column: 6, scope: !10425)
!10454 = !DILocation(line: 3443, column: 3, scope: !10451)
!10455 = !DILocation(line: 3444, column: 35, scope: !10425)
!10456 = !DILocation(line: 3444, column: 11, scope: !10425)
!10457 = !DILocation(line: 3444, column: 9, scope: !10425)
!10458 = !DILocation(line: 3445, column: 6, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 3445, column: 6)
!10460 = !DILocation(line: 3445, column: 13, scope: !10459)
!10461 = !DILocation(line: 3445, column: 6, scope: !10425)
!10462 = !DILocation(line: 3446, column: 3, scope: !10459)
!10463 = !DILocation(line: 3447, column: 40, scope: !10425)
!10464 = !DILocation(line: 3447, column: 11, scope: !10425)
!10465 = !DILocation(line: 3447, column: 9, scope: !10425)
!10466 = !DILocation(line: 3448, column: 6, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 3448, column: 6)
!10468 = !DILocation(line: 3448, column: 13, scope: !10467)
!10469 = !DILocation(line: 3448, column: 6, scope: !10425)
!10470 = !DILocation(line: 3449, column: 3, scope: !10467)
!10471 = !DILocation(line: 3450, column: 40, scope: !10425)
!10472 = !DILocation(line: 3450, column: 11, scope: !10425)
!10473 = !DILocation(line: 3450, column: 9, scope: !10425)
!10474 = !DILocation(line: 3451, column: 6, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 3451, column: 6)
!10476 = !DILocation(line: 3451, column: 13, scope: !10475)
!10477 = !DILocation(line: 3451, column: 6, scope: !10425)
!10478 = !DILocation(line: 3452, column: 3, scope: !10475)
!10479 = !DILocation(line: 3453, column: 19, scope: !10425)
!10480 = !DILocation(line: 3454, column: 5, scope: !10425)
!10481 = !DILocation(line: 3454, column: 12, scope: !10425)
!10482 = !DILocation(line: 3454, column: 30, scope: !10425)
!10483 = !DILocation(line: 3453, column: 11, scope: !10425)
!10484 = !DILocation(line: 3453, column: 9, scope: !10425)
!10485 = !DILocation(line: 3453, column: 2, scope: !10425)
!10486 = !DILabel(scope: !10425, name: "error", file: !3, line: 3455)
!10487 = !DILocation(line: 3455, column: 1, scope: !10425)
!10488 = !DILocation(line: 3456, column: 6, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 3456, column: 6)
!10490 = !DILocation(line: 3456, column: 13, scope: !10489)
!10491 = !DILocation(line: 3456, column: 6, scope: !10425)
!10492 = !DILocation(line: 3457, column: 3, scope: !10489)
!10493 = !DILocation(line: 3458, column: 9, scope: !10425)
!10494 = !DILocation(line: 3458, column: 2, scope: !10425)
!10495 = distinct !DISubprogram(name: "write_gpio", scope: !3, file: !3, line: 5854, type: !5239, scopeLine: 5855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!10496 = !DILocalVariable(name: "state", arg: 1, scope: !10495, file: !3, line: 5854, type: !4562)
!10497 = !DILocation(line: 5854, column: 42, scope: !10495)
!10498 = !DILocalVariable(name: "status", scope: !10495, file: !3, line: 5856, type: !405)
!10499 = !DILocation(line: 5856, column: 6, scope: !10495)
!10500 = !DILocalVariable(name: "value", scope: !10495, file: !3, line: 5857, type: !408)
!10501 = !DILocation(line: 5857, column: 6, scope: !10495)
!10502 = !DILocation(line: 5859, column: 2, scope: !10495)
!10503 = !DILocation(line: 5859, column: 2, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10505, file: !3, line: 5859, column: 2)
!10505 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 5859, column: 2)
!10506 = !DILocation(line: 5859, column: 2, scope: !10505)
!10507 = !DILocation(line: 5861, column: 19, scope: !10495)
!10508 = !DILocation(line: 5861, column: 11, scope: !10495)
!10509 = !DILocation(line: 5861, column: 9, scope: !10495)
!10510 = !DILocation(line: 5863, column: 6, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 5863, column: 6)
!10512 = !DILocation(line: 5863, column: 13, scope: !10511)
!10513 = !DILocation(line: 5863, column: 6, scope: !10495)
!10514 = !DILocation(line: 5864, column: 3, scope: !10511)
!10515 = !DILocation(line: 5867, column: 19, scope: !10495)
!10516 = !DILocation(line: 5867, column: 11, scope: !10495)
!10517 = !DILocation(line: 5867, column: 9, scope: !10495)
!10518 = !DILocation(line: 5868, column: 6, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 5868, column: 6)
!10520 = !DILocation(line: 5868, column: 13, scope: !10519)
!10521 = !DILocation(line: 5868, column: 6, scope: !10495)
!10522 = !DILocation(line: 5869, column: 3, scope: !10519)
!10523 = !DILocation(line: 5871, column: 6, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 5871, column: 6)
!10525 = !DILocation(line: 5871, column: 13, scope: !10524)
!10526 = !DILocation(line: 5871, column: 6, scope: !10495)
!10527 = !DILocation(line: 5872, column: 7, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10529, file: !3, line: 5872, column: 7)
!10529 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 5871, column: 26)
!10530 = !DILocation(line: 5872, column: 14, scope: !10528)
!10531 = !DILocation(line: 5872, column: 23, scope: !10528)
!10532 = !DILocation(line: 5872, column: 7, scope: !10529)
!10533 = !DILocation(line: 5874, column: 21, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10528, file: !3, line: 5872, column: 33)
!10535 = !DILocation(line: 5875, column: 7, scope: !10534)
!10536 = !DILocation(line: 5875, column: 14, scope: !10534)
!10537 = !DILocation(line: 5874, column: 13, scope: !10534)
!10538 = !DILocation(line: 5874, column: 11, scope: !10534)
!10539 = !DILocation(line: 5876, column: 8, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 5876, column: 8)
!10541 = !DILocation(line: 5876, column: 15, scope: !10540)
!10542 = !DILocation(line: 5876, column: 8, scope: !10534)
!10543 = !DILocation(line: 5877, column: 5, scope: !10540)
!10544 = !DILocation(line: 5880, column: 20, scope: !10534)
!10545 = !DILocation(line: 5880, column: 13, scope: !10534)
!10546 = !DILocation(line: 5880, column: 11, scope: !10534)
!10547 = !DILocation(line: 5881, column: 8, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 5881, column: 8)
!10549 = !DILocation(line: 5881, column: 15, scope: !10548)
!10550 = !DILocation(line: 5881, column: 8, scope: !10534)
!10551 = !DILocation(line: 5882, column: 5, scope: !10548)
!10552 = !DILocation(line: 5883, column: 9, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 5883, column: 8)
!10554 = !DILocation(line: 5883, column: 16, scope: !10553)
!10555 = !DILocation(line: 5883, column: 23, scope: !10553)
!10556 = !DILocation(line: 5883, column: 33, scope: !10553)
!10557 = !DILocation(line: 5883, column: 8, scope: !10534)
!10558 = !DILocation(line: 5884, column: 11, scope: !10553)
!10559 = !DILocation(line: 5884, column: 5, scope: !10553)
!10560 = !DILocation(line: 5886, column: 11, scope: !10553)
!10561 = !DILocation(line: 5888, column: 21, scope: !10534)
!10562 = !DILocation(line: 5888, column: 51, scope: !10534)
!10563 = !DILocation(line: 5888, column: 13, scope: !10534)
!10564 = !DILocation(line: 5888, column: 11, scope: !10534)
!10565 = !DILocation(line: 5889, column: 8, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 5889, column: 8)
!10567 = !DILocation(line: 5889, column: 15, scope: !10566)
!10568 = !DILocation(line: 5889, column: 8, scope: !10534)
!10569 = !DILocation(line: 5890, column: 5, scope: !10566)
!10570 = !DILocation(line: 5891, column: 3, scope: !10534)
!10571 = !DILocation(line: 5892, column: 7, scope: !10572)
!10572 = distinct !DILexicalBlock(scope: !10529, file: !3, line: 5892, column: 7)
!10573 = !DILocation(line: 5892, column: 14, scope: !10572)
!10574 = !DILocation(line: 5892, column: 23, scope: !10572)
!10575 = !DILocation(line: 5892, column: 7, scope: !10529)
!10576 = !DILocation(line: 5894, column: 21, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 5892, column: 33)
!10578 = !DILocation(line: 5895, column: 7, scope: !10577)
!10579 = !DILocation(line: 5895, column: 14, scope: !10577)
!10580 = !DILocation(line: 5894, column: 13, scope: !10577)
!10581 = !DILocation(line: 5894, column: 11, scope: !10577)
!10582 = !DILocation(line: 5896, column: 8, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 5896, column: 8)
!10584 = !DILocation(line: 5896, column: 15, scope: !10583)
!10585 = !DILocation(line: 5896, column: 8, scope: !10577)
!10586 = !DILocation(line: 5897, column: 5, scope: !10583)
!10587 = !DILocation(line: 5900, column: 20, scope: !10577)
!10588 = !DILocation(line: 5900, column: 13, scope: !10577)
!10589 = !DILocation(line: 5900, column: 11, scope: !10577)
!10590 = !DILocation(line: 5901, column: 8, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 5901, column: 8)
!10592 = !DILocation(line: 5901, column: 15, scope: !10591)
!10593 = !DILocation(line: 5901, column: 8, scope: !10577)
!10594 = !DILocation(line: 5902, column: 5, scope: !10591)
!10595 = !DILocation(line: 5903, column: 9, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 5903, column: 8)
!10597 = !DILocation(line: 5903, column: 16, scope: !10596)
!10598 = !DILocation(line: 5903, column: 23, scope: !10596)
!10599 = !DILocation(line: 5903, column: 33, scope: !10596)
!10600 = !DILocation(line: 5903, column: 8, scope: !10577)
!10601 = !DILocation(line: 5904, column: 11, scope: !10596)
!10602 = !DILocation(line: 5904, column: 5, scope: !10596)
!10603 = !DILocation(line: 5906, column: 11, scope: !10596)
!10604 = !DILocation(line: 5908, column: 21, scope: !10577)
!10605 = !DILocation(line: 5908, column: 51, scope: !10577)
!10606 = !DILocation(line: 5908, column: 13, scope: !10577)
!10607 = !DILocation(line: 5908, column: 11, scope: !10577)
!10608 = !DILocation(line: 5909, column: 8, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 5909, column: 8)
!10610 = !DILocation(line: 5909, column: 15, scope: !10609)
!10611 = !DILocation(line: 5909, column: 8, scope: !10577)
!10612 = !DILocation(line: 5910, column: 5, scope: !10609)
!10613 = !DILocation(line: 5911, column: 3, scope: !10577)
!10614 = !DILocation(line: 5912, column: 7, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10529, file: !3, line: 5912, column: 7)
!10616 = !DILocation(line: 5912, column: 14, scope: !10615)
!10617 = !DILocation(line: 5912, column: 23, scope: !10615)
!10618 = !DILocation(line: 5912, column: 7, scope: !10529)
!10619 = !DILocation(line: 5914, column: 21, scope: !10620)
!10620 = distinct !DILexicalBlock(scope: !10615, file: !3, line: 5912, column: 33)
!10621 = !DILocation(line: 5915, column: 7, scope: !10620)
!10622 = !DILocation(line: 5915, column: 14, scope: !10620)
!10623 = !DILocation(line: 5914, column: 13, scope: !10620)
!10624 = !DILocation(line: 5914, column: 11, scope: !10620)
!10625 = !DILocation(line: 5916, column: 8, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 5916, column: 8)
!10627 = !DILocation(line: 5916, column: 15, scope: !10626)
!10628 = !DILocation(line: 5916, column: 8, scope: !10620)
!10629 = !DILocation(line: 5917, column: 5, scope: !10626)
!10630 = !DILocation(line: 5920, column: 20, scope: !10620)
!10631 = !DILocation(line: 5920, column: 13, scope: !10620)
!10632 = !DILocation(line: 5920, column: 11, scope: !10620)
!10633 = !DILocation(line: 5921, column: 8, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 5921, column: 8)
!10635 = !DILocation(line: 5921, column: 15, scope: !10634)
!10636 = !DILocation(line: 5921, column: 8, scope: !10620)
!10637 = !DILocation(line: 5922, column: 5, scope: !10634)
!10638 = !DILocation(line: 5923, column: 9, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 5923, column: 8)
!10640 = !DILocation(line: 5923, column: 16, scope: !10639)
!10641 = !DILocation(line: 5923, column: 23, scope: !10639)
!10642 = !DILocation(line: 5923, column: 33, scope: !10639)
!10643 = !DILocation(line: 5923, column: 8, scope: !10620)
!10644 = !DILocation(line: 5924, column: 11, scope: !10639)
!10645 = !DILocation(line: 5924, column: 5, scope: !10639)
!10646 = !DILocation(line: 5926, column: 11, scope: !10639)
!10647 = !DILocation(line: 5928, column: 21, scope: !10620)
!10648 = !DILocation(line: 5928, column: 51, scope: !10620)
!10649 = !DILocation(line: 5928, column: 13, scope: !10620)
!10650 = !DILocation(line: 5928, column: 11, scope: !10620)
!10651 = !DILocation(line: 5929, column: 8, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10620, file: !3, line: 5929, column: 8)
!10653 = !DILocation(line: 5929, column: 15, scope: !10652)
!10654 = !DILocation(line: 5929, column: 8, scope: !10620)
!10655 = !DILocation(line: 5930, column: 5, scope: !10652)
!10656 = !DILocation(line: 5931, column: 3, scope: !10620)
!10657 = !DILocation(line: 5932, column: 2, scope: !10529)
!10658 = !DILocation(line: 5934, column: 19, scope: !10495)
!10659 = !DILocation(line: 5934, column: 11, scope: !10495)
!10660 = !DILocation(line: 5934, column: 9, scope: !10495)
!10661 = !DILocation(line: 5934, column: 2, scope: !10495)
!10662 = !DILabel(scope: !10495, name: "error", file: !3, line: 5935)
!10663 = !DILocation(line: 5935, column: 1, scope: !10495)
!10664 = !DILocation(line: 5936, column: 6, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 5936, column: 6)
!10666 = !DILocation(line: 5936, column: 13, scope: !10665)
!10667 = !DILocation(line: 5936, column: 6, scope: !10495)
!10668 = !DILocation(line: 5937, column: 3, scope: !10665)
!10669 = !DILocation(line: 5938, column: 9, scope: !10495)
!10670 = !DILocation(line: 5938, column: 2, scope: !10495)
!10671 = distinct !DISubprogram(name: "adc_sync_measurement", scope: !3, file: !3, line: 2838, type: !10672, scopeLine: 2839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!10672 = !DISubroutineType(types: !10673)
!10673 = !{!405, !4562, !669}
!10674 = !DILocalVariable(name: "state", arg: 1, scope: !10671, file: !3, line: 2838, type: !4562)
!10675 = !DILocation(line: 2838, column: 52, scope: !10671)
!10676 = !DILocalVariable(name: "count", arg: 2, scope: !10671, file: !3, line: 2838, type: !669)
!10677 = !DILocation(line: 2838, column: 64, scope: !10671)
!10678 = !DILocalVariable(name: "data", scope: !10671, file: !3, line: 2840, type: !408)
!10679 = !DILocation(line: 2840, column: 6, scope: !10671)
!10680 = !DILocalVariable(name: "status", scope: !10671, file: !3, line: 2841, type: !405)
!10681 = !DILocation(line: 2841, column: 6, scope: !10671)
!10682 = !DILocation(line: 2843, column: 2, scope: !10671)
!10683 = !DILocation(line: 2843, column: 2, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 2843, column: 2)
!10685 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2843, column: 2)
!10686 = !DILocation(line: 2843, column: 2, scope: !10685)
!10687 = !DILocation(line: 2846, column: 19, scope: !10671)
!10688 = !DILocation(line: 2846, column: 11, scope: !10671)
!10689 = !DILocation(line: 2846, column: 9, scope: !10671)
!10690 = !DILocation(line: 2847, column: 6, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2847, column: 6)
!10692 = !DILocation(line: 2847, column: 13, scope: !10691)
!10693 = !DILocation(line: 2847, column: 6, scope: !10671)
!10694 = !DILocation(line: 2848, column: 3, scope: !10691)
!10695 = !DILocation(line: 2849, column: 19, scope: !10671)
!10696 = !DILocation(line: 2849, column: 11, scope: !10671)
!10697 = !DILocation(line: 2849, column: 9, scope: !10671)
!10698 = !DILocation(line: 2850, column: 6, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2850, column: 6)
!10700 = !DILocation(line: 2850, column: 13, scope: !10699)
!10701 = !DILocation(line: 2850, column: 6, scope: !10671)
!10702 = !DILocation(line: 2851, column: 3, scope: !10699)
!10703 = !DILocation(line: 2853, column: 3, scope: !10671)
!10704 = !DILocation(line: 2853, column: 9, scope: !10671)
!10705 = !DILocation(line: 2854, column: 18, scope: !10671)
!10706 = !DILocation(line: 2854, column: 11, scope: !10671)
!10707 = !DILocation(line: 2854, column: 9, scope: !10671)
!10708 = !DILocation(line: 2855, column: 6, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2855, column: 6)
!10710 = !DILocation(line: 2855, column: 13, scope: !10709)
!10711 = !DILocation(line: 2855, column: 6, scope: !10671)
!10712 = !DILocation(line: 2856, column: 3, scope: !10709)
!10713 = !DILocation(line: 2857, column: 6, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2857, column: 6)
!10715 = !DILocation(line: 2857, column: 11, scope: !10714)
!10716 = !DILocation(line: 2857, column: 6, scope: !10671)
!10717 = !DILocation(line: 2858, column: 13, scope: !10714)
!10718 = !DILocation(line: 2858, column: 12, scope: !10714)
!10719 = !DILocation(line: 2858, column: 19, scope: !10714)
!10720 = !DILocation(line: 2858, column: 4, scope: !10714)
!10721 = !DILocation(line: 2858, column: 10, scope: !10714)
!10722 = !DILocation(line: 2858, column: 3, scope: !10714)
!10723 = !DILocation(line: 2859, column: 18, scope: !10671)
!10724 = !DILocation(line: 2859, column: 11, scope: !10671)
!10725 = !DILocation(line: 2859, column: 9, scope: !10671)
!10726 = !DILocation(line: 2860, column: 6, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2860, column: 6)
!10728 = !DILocation(line: 2860, column: 13, scope: !10727)
!10729 = !DILocation(line: 2860, column: 6, scope: !10671)
!10730 = !DILocation(line: 2861, column: 3, scope: !10727)
!10731 = !DILocation(line: 2862, column: 6, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2862, column: 6)
!10733 = !DILocation(line: 2862, column: 11, scope: !10732)
!10734 = !DILocation(line: 2862, column: 6, scope: !10671)
!10735 = !DILocation(line: 2863, column: 13, scope: !10732)
!10736 = !DILocation(line: 2863, column: 12, scope: !10732)
!10737 = !DILocation(line: 2863, column: 19, scope: !10732)
!10738 = !DILocation(line: 2863, column: 4, scope: !10732)
!10739 = !DILocation(line: 2863, column: 10, scope: !10732)
!10740 = !DILocation(line: 2863, column: 3, scope: !10732)
!10741 = !DILocation(line: 2864, column: 18, scope: !10671)
!10742 = !DILocation(line: 2864, column: 11, scope: !10671)
!10743 = !DILocation(line: 2864, column: 9, scope: !10671)
!10744 = !DILocation(line: 2865, column: 6, scope: !10745)
!10745 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2865, column: 6)
!10746 = !DILocation(line: 2865, column: 13, scope: !10745)
!10747 = !DILocation(line: 2865, column: 6, scope: !10671)
!10748 = !DILocation(line: 2866, column: 3, scope: !10745)
!10749 = !DILocation(line: 2867, column: 6, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2867, column: 6)
!10751 = !DILocation(line: 2867, column: 11, scope: !10750)
!10752 = !DILocation(line: 2867, column: 6, scope: !10671)
!10753 = !DILocation(line: 2868, column: 13, scope: !10750)
!10754 = !DILocation(line: 2868, column: 12, scope: !10750)
!10755 = !DILocation(line: 2868, column: 19, scope: !10750)
!10756 = !DILocation(line: 2868, column: 4, scope: !10750)
!10757 = !DILocation(line: 2868, column: 10, scope: !10750)
!10758 = !DILocation(line: 2868, column: 3, scope: !10750)
!10759 = !DILocation(line: 2867, column: 14, scope: !10750)
!10760 = !DILabel(scope: !10671, name: "error", file: !3, line: 2870)
!10761 = !DILocation(line: 2870, column: 1, scope: !10671)
!10762 = !DILocation(line: 2871, column: 6, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2871, column: 6)
!10764 = !DILocation(line: 2871, column: 13, scope: !10763)
!10765 = !DILocation(line: 2871, column: 6, scope: !10671)
!10766 = !DILocation(line: 2872, column: 3, scope: !10763)
!10767 = !DILocation(line: 2873, column: 9, scope: !10671)
!10768 = !DILocation(line: 2873, column: 2, scope: !10671)
!10769 = distinct !DISubprogram(name: "is_dvbt", scope: !3, file: !3, line: 43, type: !10770, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!10770 = !DISubroutineType(types: !10771)
!10771 = !{!406, !4562}
!10772 = !DILocalVariable(name: "state", arg: 1, scope: !10769, file: !3, line: 43, type: !4562)
!10773 = !DILocation(line: 43, column: 40, scope: !10769)
!10774 = !DILocation(line: 45, column: 9, scope: !10769)
!10775 = !DILocation(line: 45, column: 16, scope: !10769)
!10776 = !DILocation(line: 45, column: 33, scope: !10769)
!10777 = !DILocation(line: 45, column: 2, scope: !10769)
!10778 = distinct !DISubprogram(name: "is_qam", scope: !3, file: !3, line: 48, type: !10770, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!10779 = !DILocalVariable(name: "state", arg: 1, scope: !10778, file: !3, line: 48, type: !4562)
!10780 = !DILocation(line: 48, column: 39, scope: !10778)
!10781 = !DILocation(line: 50, column: 9, scope: !10778)
!10782 = !DILocation(line: 50, column: 16, scope: !10778)
!10783 = !DILocation(line: 50, column: 33, scope: !10778)
!10784 = !DILocation(line: 50, column: 49, scope: !10778)
!10785 = !DILocation(line: 51, column: 6, scope: !10778)
!10786 = !DILocation(line: 51, column: 13, scope: !10778)
!10787 = !DILocation(line: 51, column: 30, scope: !10778)
!10788 = !DILocation(line: 51, column: 46, scope: !10778)
!10789 = !DILocation(line: 52, column: 6, scope: !10778)
!10790 = !DILocation(line: 52, column: 13, scope: !10778)
!10791 = !DILocation(line: 52, column: 30, scope: !10778)
!10792 = !DILocation(line: 50, column: 2, scope: !10778)
!10793 = distinct !DISubprogram(name: "write32", scope: !3, file: !3, line: 407, type: !10794, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!10794 = !DISubroutineType(types: !10795)
!10795 = !{!405, !4562, !411, !411}
!10796 = !DILocalVariable(name: "state", arg: 1, scope: !10793, file: !3, line: 407, type: !4562)
!10797 = !DILocation(line: 407, column: 39, scope: !10793)
!10798 = !DILocalVariable(name: "reg", arg: 2, scope: !10793, file: !3, line: 407, type: !411)
!10799 = !DILocation(line: 407, column: 50, scope: !10793)
!10800 = !DILocalVariable(name: "data", arg: 3, scope: !10793, file: !3, line: 407, type: !411)
!10801 = !DILocation(line: 407, column: 59, scope: !10793)
!10802 = !DILocation(line: 409, column: 23, scope: !10793)
!10803 = !DILocation(line: 409, column: 30, scope: !10793)
!10804 = !DILocation(line: 409, column: 35, scope: !10793)
!10805 = !DILocation(line: 409, column: 9, scope: !10793)
!10806 = !DILocation(line: 409, column: 2, scope: !10793)
!10807 = distinct !DISubprogram(name: "write32_flags", scope: !3, file: !3, line: 381, type: !10808, scopeLine: 382, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!10808 = !DISubroutineType(types: !10809)
!10809 = !{!405, !4562, !411, !411, !455}
!10810 = !DILocalVariable(name: "state", arg: 1, scope: !10807, file: !3, line: 381, type: !4562)
!10811 = !DILocation(line: 381, column: 45, scope: !10807)
!10812 = !DILocalVariable(name: "reg", arg: 2, scope: !10807, file: !3, line: 381, type: !411)
!10813 = !DILocation(line: 381, column: 56, scope: !10807)
!10814 = !DILocalVariable(name: "data", arg: 3, scope: !10807, file: !3, line: 381, type: !411)
!10815 = !DILocation(line: 381, column: 65, scope: !10807)
!10816 = !DILocalVariable(name: "flags", arg: 4, scope: !10807, file: !3, line: 381, type: !455)
!10817 = !DILocation(line: 381, column: 74, scope: !10807)
!10818 = !DILocalVariable(name: "adr", scope: !10807, file: !3, line: 383, type: !455)
!10819 = !DILocation(line: 383, column: 5, scope: !10807)
!10820 = !DILocation(line: 383, column: 11, scope: !10807)
!10821 = !DILocation(line: 383, column: 18, scope: !10807)
!10822 = !DILocalVariable(name: "mm", scope: !10807, file: !3, line: 383, type: !531)
!10823 = !DILocation(line: 383, column: 33, scope: !10807)
!10824 = !DILocalVariable(name: "len", scope: !10807, file: !3, line: 383, type: !455)
!10825 = !DILocation(line: 383, column: 40, scope: !10807)
!10826 = !DILocation(line: 385, column: 6, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 385, column: 6)
!10828 = !DILocation(line: 385, column: 13, scope: !10827)
!10829 = !DILocation(line: 385, column: 6, scope: !10807)
!10830 = !DILocation(line: 386, column: 9, scope: !10827)
!10831 = !DILocation(line: 386, column: 3, scope: !10827)
!10832 = !DILocation(line: 387, column: 6, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 387, column: 6)
!10834 = !DILocation(line: 387, column: 35, scope: !10833)
!10835 = !DILocation(line: 387, column: 39, scope: !10833)
!10836 = !DILocation(line: 387, column: 45, scope: !10833)
!10837 = !DILocation(line: 387, column: 6, scope: !10807)
!10838 = !DILocation(line: 388, column: 14, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 387, column: 52)
!10840 = !DILocation(line: 388, column: 18, scope: !10839)
!10841 = !DILocation(line: 388, column: 24, scope: !10839)
!10842 = !DILocation(line: 388, column: 32, scope: !10839)
!10843 = !DILocation(line: 388, column: 11, scope: !10839)
!10844 = !DILocation(line: 388, column: 3, scope: !10839)
!10845 = !DILocation(line: 388, column: 9, scope: !10839)
!10846 = !DILocation(line: 389, column: 13, scope: !10839)
!10847 = !DILocation(line: 389, column: 17, scope: !10839)
!10848 = !DILocation(line: 389, column: 24, scope: !10839)
!10849 = !DILocation(line: 389, column: 11, scope: !10839)
!10850 = !DILocation(line: 389, column: 3, scope: !10839)
!10851 = !DILocation(line: 389, column: 9, scope: !10839)
!10852 = !DILocation(line: 390, column: 13, scope: !10839)
!10853 = !DILocation(line: 390, column: 17, scope: !10839)
!10854 = !DILocation(line: 390, column: 24, scope: !10839)
!10855 = !DILocation(line: 390, column: 34, scope: !10839)
!10856 = !DILocation(line: 390, column: 32, scope: !10839)
!10857 = !DILocation(line: 390, column: 11, scope: !10839)
!10858 = !DILocation(line: 390, column: 3, scope: !10839)
!10859 = !DILocation(line: 390, column: 9, scope: !10839)
!10860 = !DILocation(line: 391, column: 13, scope: !10839)
!10861 = !DILocation(line: 391, column: 17, scope: !10839)
!10862 = !DILocation(line: 391, column: 23, scope: !10839)
!10863 = !DILocation(line: 391, column: 11, scope: !10839)
!10864 = !DILocation(line: 391, column: 3, scope: !10839)
!10865 = !DILocation(line: 391, column: 9, scope: !10839)
!10866 = !DILocation(line: 392, column: 7, scope: !10839)
!10867 = !DILocation(line: 393, column: 2, scope: !10839)
!10868 = !DILocation(line: 394, column: 13, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10833, file: !3, line: 393, column: 9)
!10870 = !DILocation(line: 394, column: 17, scope: !10869)
!10871 = !DILocation(line: 394, column: 23, scope: !10869)
!10872 = !DILocation(line: 394, column: 11, scope: !10869)
!10873 = !DILocation(line: 394, column: 3, scope: !10869)
!10874 = !DILocation(line: 394, column: 9, scope: !10869)
!10875 = !DILocation(line: 395, column: 14, scope: !10869)
!10876 = !DILocation(line: 395, column: 18, scope: !10869)
!10877 = !DILocation(line: 395, column: 25, scope: !10869)
!10878 = !DILocation(line: 395, column: 37, scope: !10869)
!10879 = !DILocation(line: 395, column: 41, scope: !10869)
!10880 = !DILocation(line: 395, column: 48, scope: !10869)
!10881 = !DILocation(line: 395, column: 33, scope: !10869)
!10882 = !DILocation(line: 395, column: 11, scope: !10869)
!10883 = !DILocation(line: 395, column: 3, scope: !10869)
!10884 = !DILocation(line: 395, column: 9, scope: !10869)
!10885 = !DILocation(line: 396, column: 7, scope: !10869)
!10886 = !DILocation(line: 398, column: 12, scope: !10807)
!10887 = !DILocation(line: 398, column: 17, scope: !10807)
!10888 = !DILocation(line: 398, column: 5, scope: !10807)
!10889 = !DILocation(line: 398, column: 2, scope: !10807)
!10890 = !DILocation(line: 398, column: 10, scope: !10807)
!10891 = !DILocation(line: 399, column: 17, scope: !10807)
!10892 = !DILocation(line: 399, column: 22, scope: !10807)
!10893 = !DILocation(line: 399, column: 28, scope: !10807)
!10894 = !DILocation(line: 399, column: 16, scope: !10807)
!10895 = !DILocation(line: 399, column: 5, scope: !10807)
!10896 = !DILocation(line: 399, column: 9, scope: !10807)
!10897 = !DILocation(line: 399, column: 2, scope: !10807)
!10898 = !DILocation(line: 399, column: 14, scope: !10807)
!10899 = !DILocation(line: 400, column: 17, scope: !10807)
!10900 = !DILocation(line: 400, column: 22, scope: !10807)
!10901 = !DILocation(line: 400, column: 29, scope: !10807)
!10902 = !DILocation(line: 400, column: 16, scope: !10807)
!10903 = !DILocation(line: 400, column: 5, scope: !10807)
!10904 = !DILocation(line: 400, column: 9, scope: !10807)
!10905 = !DILocation(line: 400, column: 2, scope: !10807)
!10906 = !DILocation(line: 400, column: 14, scope: !10807)
!10907 = !DILocation(line: 401, column: 17, scope: !10807)
!10908 = !DILocation(line: 401, column: 22, scope: !10807)
!10909 = !DILocation(line: 401, column: 29, scope: !10807)
!10910 = !DILocation(line: 401, column: 16, scope: !10807)
!10911 = !DILocation(line: 401, column: 5, scope: !10807)
!10912 = !DILocation(line: 401, column: 9, scope: !10807)
!10913 = !DILocation(line: 401, column: 2, scope: !10807)
!10914 = !DILocation(line: 401, column: 14, scope: !10807)
!10915 = !DILocation(line: 402, column: 2, scope: !10807)
!10916 = !DILocation(line: 402, column: 2, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10918, file: !3, line: 402, column: 2)
!10918 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 402, column: 2)
!10919 = !DILocation(line: 402, column: 2, scope: !10918)
!10920 = !DILocation(line: 404, column: 19, scope: !10807)
!10921 = !DILocation(line: 404, column: 26, scope: !10807)
!10922 = !DILocation(line: 404, column: 31, scope: !10807)
!10923 = !DILocation(line: 404, column: 35, scope: !10807)
!10924 = !DILocation(line: 404, column: 39, scope: !10807)
!10925 = !DILocation(line: 404, column: 9, scope: !10807)
!10926 = !DILocation(line: 404, column: 2, scope: !10807)
!10927 = distinct !DISubprogram(name: "dvbt_ctrl_set_inc_enable", scope: !3, file: !3, line: 3328, type: !10928, scopeLine: 3329, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!10928 = !DISubroutineType(types: !10929)
!10929 = !{!405, !4562, !1467}
!10930 = !DILocalVariable(name: "state", arg: 1, scope: !10927, file: !3, line: 3328, type: !4562)
!10931 = !DILocation(line: 3328, column: 56, scope: !10927)
!10932 = !DILocalVariable(name: "enabled", arg: 2, scope: !10927, file: !3, line: 3328, type: !1467)
!10933 = !DILocation(line: 3328, column: 69, scope: !10927)
!10934 = !DILocalVariable(name: "status", scope: !10927, file: !3, line: 3330, type: !405)
!10935 = !DILocation(line: 3330, column: 6, scope: !10927)
!10936 = !DILocation(line: 3332, column: 2, scope: !10927)
!10937 = !DILocation(line: 3332, column: 2, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 3332, column: 2)
!10939 = distinct !DILexicalBlock(scope: !10927, file: !3, line: 3332, column: 2)
!10940 = !DILocation(line: 3332, column: 2, scope: !10939)
!10941 = !DILocation(line: 3333, column: 7, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10927, file: !3, line: 3333, column: 6)
!10943 = !DILocation(line: 3333, column: 6, scope: !10942)
!10944 = !DILocation(line: 3333, column: 6, scope: !10927)
!10945 = !DILocation(line: 3334, column: 20, scope: !10942)
!10946 = !DILocation(line: 3334, column: 12, scope: !10942)
!10947 = !DILocation(line: 3334, column: 10, scope: !10942)
!10948 = !DILocation(line: 3334, column: 3, scope: !10942)
!10949 = !DILocation(line: 3336, column: 20, scope: !10942)
!10950 = !DILocation(line: 3336, column: 12, scope: !10942)
!10951 = !DILocation(line: 3336, column: 10, scope: !10942)
!10952 = !DILocation(line: 3337, column: 6, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10927, file: !3, line: 3337, column: 6)
!10954 = !DILocation(line: 3337, column: 13, scope: !10953)
!10955 = !DILocation(line: 3337, column: 6, scope: !10927)
!10956 = !DILocation(line: 3338, column: 3, scope: !10953)
!10957 = !DILocation(line: 3339, column: 9, scope: !10927)
!10958 = !DILocation(line: 3339, column: 2, scope: !10927)
!10959 = distinct !DISubprogram(name: "dvbt_ctrl_set_fr_enable", scope: !3, file: !3, line: 3343, type: !10928, scopeLine: 3344, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!10960 = !DILocalVariable(name: "state", arg: 1, scope: !10959, file: !3, line: 3343, type: !4562)
!10961 = !DILocation(line: 3343, column: 55, scope: !10959)
!10962 = !DILocalVariable(name: "enabled", arg: 2, scope: !10959, file: !3, line: 3343, type: !1467)
!10963 = !DILocation(line: 3343, column: 68, scope: !10959)
!10964 = !DILocalVariable(name: "status", scope: !10959, file: !3, line: 3346, type: !405)
!10965 = !DILocation(line: 3346, column: 6, scope: !10959)
!10966 = !DILocation(line: 3348, column: 2, scope: !10959)
!10967 = !DILocation(line: 3348, column: 2, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 3348, column: 2)
!10969 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 3348, column: 2)
!10970 = !DILocation(line: 3348, column: 2, scope: !10969)
!10971 = !DILocation(line: 3349, column: 7, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 3349, column: 6)
!10973 = !DILocation(line: 3349, column: 6, scope: !10972)
!10974 = !DILocation(line: 3349, column: 6, scope: !10959)
!10975 = !DILocation(line: 3351, column: 20, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 3349, column: 16)
!10977 = !DILocation(line: 3351, column: 12, scope: !10976)
!10978 = !DILocation(line: 3351, column: 10, scope: !10976)
!10979 = !DILocation(line: 3353, column: 2, scope: !10976)
!10980 = !DILocation(line: 3355, column: 20, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10972, file: !3, line: 3353, column: 9)
!10982 = !DILocation(line: 3355, column: 12, scope: !10981)
!10983 = !DILocation(line: 3355, column: 10, scope: !10981)
!10984 = !DILocation(line: 3357, column: 6, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 3357, column: 6)
!10986 = !DILocation(line: 3357, column: 13, scope: !10985)
!10987 = !DILocation(line: 3357, column: 6, scope: !10959)
!10988 = !DILocation(line: 3358, column: 3, scope: !10985)
!10989 = !DILocation(line: 3360, column: 9, scope: !10959)
!10990 = !DILocation(line: 3360, column: 2, scope: !10959)
!10991 = distinct !DISubprogram(name: "dvbt_ctrl_set_echo_threshold", scope: !3, file: !3, line: 3363, type: !10992, scopeLine: 3365, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!10992 = !DISubroutineType(types: !10993)
!10993 = !{!405, !4562, !10994}
!10994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10435, size: 64)
!10995 = !DILocalVariable(name: "state", arg: 1, scope: !10991, file: !3, line: 3363, type: !4562)
!10996 = !DILocation(line: 3363, column: 60, scope: !10991)
!10997 = !DILocalVariable(name: "echo_thres", arg: 2, scope: !10991, file: !3, line: 3364, type: !10994)
!10998 = !DILocation(line: 3364, column: 40, scope: !10991)
!10999 = !DILocalVariable(name: "data", scope: !10991, file: !3, line: 3366, type: !408)
!11000 = !DILocation(line: 3366, column: 6, scope: !10991)
!11001 = !DILocalVariable(name: "status", scope: !10991, file: !3, line: 3367, type: !405)
!11002 = !DILocation(line: 3367, column: 6, scope: !10991)
!11003 = !DILocation(line: 3369, column: 2, scope: !10991)
!11004 = !DILocation(line: 3369, column: 2, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 3369, column: 2)
!11006 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3369, column: 2)
!11007 = !DILocation(line: 3369, column: 2, scope: !11006)
!11008 = !DILocation(line: 3370, column: 18, scope: !10991)
!11009 = !DILocation(line: 3370, column: 11, scope: !10991)
!11010 = !DILocation(line: 3370, column: 9, scope: !10991)
!11011 = !DILocation(line: 3371, column: 6, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3371, column: 6)
!11013 = !DILocation(line: 3371, column: 13, scope: !11012)
!11014 = !DILocation(line: 3371, column: 6, scope: !10991)
!11015 = !DILocation(line: 3372, column: 3, scope: !11012)
!11016 = !DILocation(line: 3374, column: 10, scope: !10991)
!11017 = !DILocation(line: 3374, column: 22, scope: !10991)
!11018 = !DILocation(line: 3374, column: 2, scope: !10991)
!11019 = !DILocation(line: 3376, column: 8, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3374, column: 32)
!11021 = !DILocation(line: 3377, column: 13, scope: !11020)
!11022 = !DILocation(line: 3377, column: 25, scope: !11020)
!11023 = !DILocation(line: 3377, column: 35, scope: !11020)
!11024 = !DILocation(line: 3379, column: 4, scope: !11020)
!11025 = !DILocation(line: 3377, column: 8, scope: !11020)
!11026 = !DILocation(line: 3380, column: 3, scope: !11020)
!11027 = !DILocation(line: 3382, column: 8, scope: !11020)
!11028 = !DILocation(line: 3383, column: 13, scope: !11020)
!11029 = !DILocation(line: 3383, column: 25, scope: !11020)
!11030 = !DILocation(line: 3383, column: 35, scope: !11020)
!11031 = !DILocation(line: 3385, column: 4, scope: !11020)
!11032 = !DILocation(line: 3383, column: 8, scope: !11020)
!11033 = !DILocation(line: 3386, column: 3, scope: !11020)
!11034 = !DILocation(line: 3388, column: 3, scope: !11020)
!11035 = !DILocation(line: 3391, column: 19, scope: !10991)
!11036 = !DILocation(line: 3391, column: 56, scope: !10991)
!11037 = !DILocation(line: 3391, column: 11, scope: !10991)
!11038 = !DILocation(line: 3391, column: 9, scope: !10991)
!11039 = !DILocation(line: 3391, column: 2, scope: !10991)
!11040 = !DILabel(scope: !10991, name: "error", file: !3, line: 3392)
!11041 = !DILocation(line: 3392, column: 1, scope: !10991)
!11042 = !DILocation(line: 3393, column: 6, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !10991, file: !3, line: 3393, column: 6)
!11044 = !DILocation(line: 3393, column: 13, scope: !11043)
!11045 = !DILocation(line: 3393, column: 6, scope: !10991)
!11046 = !DILocation(line: 3394, column: 3, scope: !11043)
!11047 = !DILocation(line: 3395, column: 9, scope: !10991)
!11048 = !DILocation(line: 3395, column: 2, scope: !10991)
!11049 = !DILocation(line: 3396, column: 1, scope: !10991)
!11050 = distinct !DISubprogram(name: "switch_antenna_to_qam", scope: !3, file: !3, line: 5941, type: !5239, scopeLine: 5942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!11051 = !DILocalVariable(name: "state", arg: 1, scope: !11050, file: !3, line: 5941, type: !4562)
!11052 = !DILocation(line: 5941, column: 53, scope: !11050)
!11053 = !DILocalVariable(name: "status", scope: !11050, file: !3, line: 5943, type: !405)
!11054 = !DILocation(line: 5943, column: 6, scope: !11050)
!11055 = !DILocalVariable(name: "gpio_state", scope: !11050, file: !3, line: 5944, type: !406)
!11056 = !DILocation(line: 5944, column: 7, scope: !11050)
!11057 = !DILocation(line: 5946, column: 2, scope: !11050)
!11058 = !DILocation(line: 5946, column: 2, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 5946, column: 2)
!11060 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 5946, column: 2)
!11061 = !DILocation(line: 5946, column: 2, scope: !11060)
!11062 = !DILocation(line: 5948, column: 7, scope: !11063)
!11063 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 5948, column: 6)
!11064 = !DILocation(line: 5948, column: 14, scope: !11063)
!11065 = !DILocation(line: 5948, column: 6, scope: !11050)
!11066 = !DILocation(line: 5949, column: 3, scope: !11063)
!11067 = !DILocation(line: 5951, column: 15, scope: !11050)
!11068 = !DILocation(line: 5951, column: 22, scope: !11050)
!11069 = !DILocation(line: 5951, column: 31, scope: !11050)
!11070 = !DILocation(line: 5951, column: 38, scope: !11050)
!11071 = !DILocation(line: 5951, column: 29, scope: !11050)
!11072 = !DILocation(line: 5951, column: 13, scope: !11050)
!11073 = !DILocation(line: 5953, column: 6, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 5953, column: 6)
!11075 = !DILocation(line: 5953, column: 13, scope: !11074)
!11076 = !DILocation(line: 5953, column: 28, scope: !11074)
!11077 = !DILocation(line: 5953, column: 26, scope: !11074)
!11078 = !DILocation(line: 5953, column: 6, scope: !11050)
!11079 = !DILocation(line: 5955, column: 7, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !3, line: 5955, column: 7)
!11081 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 5953, column: 40)
!11082 = !DILocation(line: 5955, column: 14, scope: !11080)
!11083 = !DILocation(line: 5955, column: 7, scope: !11081)
!11084 = !DILocation(line: 5956, column: 22, scope: !11080)
!11085 = !DILocation(line: 5956, column: 29, scope: !11080)
!11086 = !DILocation(line: 5956, column: 21, scope: !11080)
!11087 = !DILocation(line: 5956, column: 4, scope: !11080)
!11088 = !DILocation(line: 5956, column: 11, scope: !11080)
!11089 = !DILocation(line: 5956, column: 18, scope: !11080)
!11090 = !DILocation(line: 5958, column: 21, scope: !11080)
!11091 = !DILocation(line: 5958, column: 28, scope: !11080)
!11092 = !DILocation(line: 5958, column: 4, scope: !11080)
!11093 = !DILocation(line: 5958, column: 11, scope: !11080)
!11094 = !DILocation(line: 5958, column: 18, scope: !11080)
!11095 = !DILocation(line: 5959, column: 23, scope: !11081)
!11096 = !DILocation(line: 5959, column: 12, scope: !11081)
!11097 = !DILocation(line: 5959, column: 10, scope: !11081)
!11098 = !DILocation(line: 5960, column: 2, scope: !11081)
!11099 = !DILocation(line: 5961, column: 6, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11050, file: !3, line: 5961, column: 6)
!11101 = !DILocation(line: 5961, column: 13, scope: !11100)
!11102 = !DILocation(line: 5961, column: 6, scope: !11050)
!11103 = !DILocation(line: 5962, column: 3, scope: !11100)
!11104 = !DILocation(line: 5963, column: 9, scope: !11050)
!11105 = !DILocation(line: 5963, column: 2, scope: !11050)
!11106 = !DILocation(line: 5964, column: 1, scope: !11050)
!11107 = distinct !DISubprogram(name: "power_up_qam", scope: !3, file: !3, line: 4109, type: !5239, scopeLine: 4110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!11108 = !DILocalVariable(name: "state", arg: 1, scope: !11107, file: !3, line: 4109, type: !4562)
!11109 = !DILocation(line: 4109, column: 44, scope: !11107)
!11110 = !DILocalVariable(name: "power_mode", scope: !11107, file: !3, line: 4111, type: !338)
!11111 = !DILocation(line: 4111, column: 22, scope: !11107)
!11112 = !DILocalVariable(name: "status", scope: !11107, file: !3, line: 4112, type: !405)
!11113 = !DILocation(line: 4112, column: 6, scope: !11107)
!11114 = !DILocation(line: 4114, column: 2, scope: !11107)
!11115 = !DILocation(line: 4114, column: 2, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11117, file: !3, line: 4114, column: 2)
!11117 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 4114, column: 2)
!11118 = !DILocation(line: 4114, column: 2, scope: !11117)
!11119 = !DILocation(line: 4115, column: 27, scope: !11107)
!11120 = !DILocation(line: 4115, column: 11, scope: !11107)
!11121 = !DILocation(line: 4115, column: 9, scope: !11107)
!11122 = !DILocation(line: 4116, column: 6, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 4116, column: 6)
!11124 = !DILocation(line: 4116, column: 13, scope: !11123)
!11125 = !DILocation(line: 4116, column: 6, scope: !11107)
!11126 = !DILocation(line: 4117, column: 3, scope: !11123)
!11127 = !DILocation(line: 4119, column: 9, scope: !11107)
!11128 = !DILocation(line: 4119, column: 2, scope: !11107)
!11129 = distinct !DISubprogram(name: "qam_reset_qam", scope: !3, file: !3, line: 5225, type: !5239, scopeLine: 5226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!11130 = !DILocalVariable(name: "state", arg: 1, scope: !11129, file: !3, line: 5225, type: !4562)
!11131 = !DILocation(line: 5225, column: 45, scope: !11129)
!11132 = !DILocalVariable(name: "status", scope: !11129, file: !3, line: 5227, type: !405)
!11133 = !DILocation(line: 5227, column: 6, scope: !11129)
!11134 = !DILocalVariable(name: "cmd_result", scope: !11129, file: !3, line: 5228, type: !408)
!11135 = !DILocation(line: 5228, column: 6, scope: !11129)
!11136 = !DILocation(line: 5230, column: 2, scope: !11129)
!11137 = !DILocation(line: 5230, column: 2, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11139, file: !3, line: 5230, column: 2)
!11139 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 5230, column: 2)
!11140 = !DILocation(line: 5230, column: 2, scope: !11139)
!11141 = !DILocation(line: 5232, column: 19, scope: !11129)
!11142 = !DILocation(line: 5232, column: 11, scope: !11129)
!11143 = !DILocation(line: 5232, column: 9, scope: !11129)
!11144 = !DILocation(line: 5233, column: 6, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 5233, column: 6)
!11146 = !DILocation(line: 5233, column: 13, scope: !11145)
!11147 = !DILocation(line: 5233, column: 6, scope: !11129)
!11148 = !DILocation(line: 5234, column: 3, scope: !11145)
!11149 = !DILocation(line: 5236, column: 23, scope: !11129)
!11150 = !DILocation(line: 5236, column: 11, scope: !11129)
!11151 = !DILocation(line: 5236, column: 9, scope: !11129)
!11152 = !DILocation(line: 5236, column: 2, scope: !11129)
!11153 = !DILabel(scope: !11129, name: "error", file: !3, line: 5239)
!11154 = !DILocation(line: 5239, column: 1, scope: !11129)
!11155 = !DILocation(line: 5240, column: 6, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11129, file: !3, line: 5240, column: 6)
!11157 = !DILocation(line: 5240, column: 13, scope: !11156)
!11158 = !DILocation(line: 5240, column: 6, scope: !11129)
!11159 = !DILocation(line: 5241, column: 3, scope: !11156)
!11160 = !DILocation(line: 5242, column: 9, scope: !11129)
!11161 = !DILocation(line: 5242, column: 2, scope: !11129)
!11162 = distinct !DISubprogram(name: "bl_direct_cmd", scope: !3, file: !3, line: 2787, type: !11163, scopeLine: 2789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!11163 = !DISubroutineType(types: !11164)
!11164 = !{!405, !4562, !411, !408, !408, !411}
!11165 = !DILocation(line: 363, column: 74, scope: !8331, inlinedAt: !11166)
!11166 = distinct !DILocation(line: 2818, column: 18, scope: !11162)
!11167 = !DILocalVariable(name: "state", arg: 1, scope: !11162, file: !3, line: 2787, type: !4562)
!11168 = !DILocation(line: 2787, column: 45, scope: !11162)
!11169 = !DILocalVariable(name: "target_addr", arg: 2, scope: !11162, file: !3, line: 2787, type: !411)
!11170 = !DILocation(line: 2787, column: 56, scope: !11162)
!11171 = !DILocalVariable(name: "rom_offset", arg: 3, scope: !11162, file: !3, line: 2788, type: !408)
!11172 = !DILocation(line: 2788, column: 14, scope: !11162)
!11173 = !DILocalVariable(name: "nr_of_elements", arg: 4, scope: !11162, file: !3, line: 2788, type: !408)
!11174 = !DILocation(line: 2788, column: 30, scope: !11162)
!11175 = !DILocalVariable(name: "time_out", arg: 5, scope: !11162, file: !3, line: 2788, type: !411)
!11176 = !DILocation(line: 2788, column: 50, scope: !11162)
!11177 = !DILocalVariable(name: "bl_status", scope: !11162, file: !3, line: 2790, type: !408)
!11178 = !DILocation(line: 2790, column: 6, scope: !11162)
!11179 = !DILocalVariable(name: "offset", scope: !11162, file: !3, line: 2791, type: !408)
!11180 = !DILocation(line: 2791, column: 6, scope: !11162)
!11181 = !DILocation(line: 2791, column: 23, scope: !11162)
!11182 = !DILocation(line: 2791, column: 35, scope: !11162)
!11183 = !DILocation(line: 2791, column: 41, scope: !11162)
!11184 = !DILocation(line: 2791, column: 15, scope: !11162)
!11185 = !DILocalVariable(name: "blockbank", scope: !11162, file: !3, line: 2792, type: !408)
!11186 = !DILocation(line: 2792, column: 6, scope: !11162)
!11187 = !DILocation(line: 2792, column: 26, scope: !11162)
!11188 = !DILocation(line: 2792, column: 38, scope: !11162)
!11189 = !DILocation(line: 2792, column: 45, scope: !11162)
!11190 = !DILocation(line: 2792, column: 18, scope: !11162)
!11191 = !DILocalVariable(name: "status", scope: !11162, file: !3, line: 2793, type: !405)
!11192 = !DILocation(line: 2793, column: 6, scope: !11162)
!11193 = !DILocalVariable(name: "end", scope: !11162, file: !3, line: 2794, type: !716)
!11194 = !DILocation(line: 2794, column: 16, scope: !11162)
!11195 = !DILocation(line: 2796, column: 2, scope: !11162)
!11196 = !DILocation(line: 2796, column: 2, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11198, file: !3, line: 2796, column: 2)
!11198 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2796, column: 2)
!11199 = !DILocation(line: 2796, column: 2, scope: !11198)
!11200 = !DILocation(line: 2798, column: 14, scope: !11162)
!11201 = !DILocation(line: 2798, column: 21, scope: !11162)
!11202 = !DILocation(line: 2798, column: 2, scope: !11162)
!11203 = !DILocation(line: 2799, column: 19, scope: !11162)
!11204 = !DILocation(line: 2799, column: 11, scope: !11162)
!11205 = !DILocation(line: 2799, column: 9, scope: !11162)
!11206 = !DILocation(line: 2800, column: 6, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2800, column: 6)
!11208 = !DILocation(line: 2800, column: 13, scope: !11207)
!11209 = !DILocation(line: 2800, column: 6, scope: !11162)
!11210 = !DILocation(line: 2801, column: 3, scope: !11207)
!11211 = !DILocation(line: 2802, column: 19, scope: !11162)
!11212 = !DILocation(line: 2802, column: 45, scope: !11162)
!11213 = !DILocation(line: 2802, column: 11, scope: !11162)
!11214 = !DILocation(line: 2802, column: 9, scope: !11162)
!11215 = !DILocation(line: 2803, column: 6, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2803, column: 6)
!11217 = !DILocation(line: 2803, column: 13, scope: !11216)
!11218 = !DILocation(line: 2803, column: 6, scope: !11162)
!11219 = !DILocation(line: 2804, column: 3, scope: !11216)
!11220 = !DILocation(line: 2805, column: 19, scope: !11162)
!11221 = !DILocation(line: 2805, column: 46, scope: !11162)
!11222 = !DILocation(line: 2805, column: 11, scope: !11162)
!11223 = !DILocation(line: 2805, column: 9, scope: !11162)
!11224 = !DILocation(line: 2806, column: 6, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2806, column: 6)
!11226 = !DILocation(line: 2806, column: 13, scope: !11225)
!11227 = !DILocation(line: 2806, column: 6, scope: !11162)
!11228 = !DILocation(line: 2807, column: 3, scope: !11225)
!11229 = !DILocation(line: 2808, column: 19, scope: !11162)
!11230 = !DILocation(line: 2808, column: 46, scope: !11162)
!11231 = !DILocation(line: 2808, column: 11, scope: !11162)
!11232 = !DILocation(line: 2808, column: 9, scope: !11162)
!11233 = !DILocation(line: 2809, column: 6, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2809, column: 6)
!11235 = !DILocation(line: 2809, column: 13, scope: !11234)
!11236 = !DILocation(line: 2809, column: 6, scope: !11162)
!11237 = !DILocation(line: 2810, column: 3, scope: !11234)
!11238 = !DILocation(line: 2811, column: 19, scope: !11162)
!11239 = !DILocation(line: 2811, column: 45, scope: !11162)
!11240 = !DILocation(line: 2811, column: 11, scope: !11162)
!11241 = !DILocation(line: 2811, column: 9, scope: !11162)
!11242 = !DILocation(line: 2812, column: 6, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2812, column: 6)
!11244 = !DILocation(line: 2812, column: 13, scope: !11243)
!11245 = !DILocation(line: 2812, column: 6, scope: !11162)
!11246 = !DILocation(line: 2813, column: 3, scope: !11243)
!11247 = !DILocation(line: 2814, column: 19, scope: !11162)
!11248 = !DILocation(line: 2814, column: 11, scope: !11162)
!11249 = !DILocation(line: 2814, column: 9, scope: !11162)
!11250 = !DILocation(line: 2815, column: 6, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2815, column: 6)
!11252 = !DILocation(line: 2815, column: 13, scope: !11251)
!11253 = !DILocation(line: 2815, column: 6, scope: !11162)
!11254 = !DILocation(line: 2816, column: 3, scope: !11251)
!11255 = !DILocation(line: 2818, column: 8, scope: !11162)
!11256 = !DILocation(line: 2818, column: 35, scope: !11162)
!11257 = !DILocation(line: 365, column: 27, scope: !8452, inlinedAt: !11166)
!11258 = !DILocation(line: 365, column: 6, scope: !8452, inlinedAt: !11166)
!11259 = !DILocation(line: 365, column: 6, scope: !8331, inlinedAt: !11166)
!11260 = !DILocation(line: 366, column: 12, scope: !8456, inlinedAt: !11166)
!11261 = !DILocation(line: 366, column: 14, scope: !8456, inlinedAt: !11166)
!11262 = !DILocation(line: 366, column: 7, scope: !8457, inlinedAt: !11166)
!11263 = !DILocation(line: 367, column: 4, scope: !8456, inlinedAt: !11166)
!11264 = !DILocation(line: 368, column: 28, scope: !8457, inlinedAt: !11166)
!11265 = !DILocation(line: 368, column: 10, scope: !8457, inlinedAt: !11166)
!11266 = !DILocation(line: 368, column: 3, scope: !8457, inlinedAt: !11166)
!11267 = !DILocation(line: 370, column: 29, scope: !8465, inlinedAt: !11166)
!11268 = !DILocation(line: 370, column: 10, scope: !8465, inlinedAt: !11166)
!11269 = !DILocation(line: 370, column: 3, scope: !8465, inlinedAt: !11166)
!11270 = !DILocation(line: 372, column: 1, scope: !8331, inlinedAt: !11166)
!11271 = !DILocation(line: 2818, column: 16, scope: !11162)
!11272 = !DILocation(line: 2818, column: 6, scope: !11162)
!11273 = !DILocation(line: 2819, column: 2, scope: !11162)
!11274 = !DILocation(line: 2820, column: 19, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2819, column: 5)
!11276 = !DILocation(line: 2820, column: 12, scope: !11275)
!11277 = !DILocation(line: 2820, column: 10, scope: !11275)
!11278 = !DILocation(line: 2821, column: 7, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11275, file: !3, line: 2821, column: 7)
!11280 = !DILocation(line: 2821, column: 14, scope: !11279)
!11281 = !DILocation(line: 2821, column: 7, scope: !11275)
!11282 = !DILocation(line: 2822, column: 4, scope: !11279)
!11283 = !DILocation(line: 2823, column: 2, scope: !11275)
!11284 = !DILocation(line: 2823, column: 12, scope: !11162)
!11285 = !DILocation(line: 2823, column: 22, scope: !11162)
!11286 = !DILocation(line: 2823, column: 30, scope: !11162)
!11287 = !DILocation(line: 2823, column: 33, scope: !11162)
!11288 = !DILocation(line: 0, scope: !11162)
!11289 = distinct !{!11289, !11273, !11290}
!11290 = !DILocation(line: 2823, column: 59, scope: !11162)
!11291 = !DILocation(line: 2824, column: 6, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2824, column: 6)
!11293 = !DILocation(line: 2824, column: 16, scope: !11292)
!11294 = !DILocation(line: 2824, column: 6, scope: !11162)
!11295 = !DILocation(line: 2825, column: 3, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 2824, column: 24)
!11297 = !DILocation(line: 2826, column: 10, scope: !11296)
!11298 = !DILocation(line: 2827, column: 3, scope: !11296)
!11299 = !DILocation(line: 2824, column: 19, scope: !11292)
!11300 = !DILabel(scope: !11162, name: "error", file: !3, line: 2829)
!11301 = !DILocation(line: 2829, column: 1, scope: !11162)
!11302 = !DILocation(line: 2830, column: 6, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2830, column: 6)
!11304 = !DILocation(line: 2830, column: 13, scope: !11303)
!11305 = !DILocation(line: 2830, column: 6, scope: !11162)
!11306 = !DILocation(line: 2831, column: 3, scope: !11303)
!11307 = !DILocation(line: 2830, column: 15, scope: !11303)
!11308 = !DILabel(scope: !11162, name: "error2", file: !3, line: 2832)
!11309 = !DILocation(line: 2832, column: 1, scope: !11162)
!11310 = !DILocation(line: 2833, column: 16, scope: !11162)
!11311 = !DILocation(line: 2833, column: 23, scope: !11162)
!11312 = !DILocation(line: 2833, column: 2, scope: !11162)
!11313 = !DILocation(line: 2834, column: 9, scope: !11162)
!11314 = !DILocation(line: 2834, column: 2, scope: !11162)
!11315 = distinct !DISubprogram(name: "init_agc", scope: !3, file: !3, line: 2986, type: !7485, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!11316 = !DILocalVariable(name: "state", arg: 1, scope: !11315, file: !3, line: 2986, type: !4562)
!11317 = !DILocation(line: 2986, column: 40, scope: !11315)
!11318 = !DILocalVariable(name: "is_dtv", arg: 2, scope: !11315, file: !3, line: 2986, type: !406)
!11319 = !DILocation(line: 2986, column: 52, scope: !11315)
!11320 = !DILocalVariable(name: "ingain_tgt", scope: !11315, file: !3, line: 2988, type: !408)
!11321 = !DILocation(line: 2988, column: 6, scope: !11315)
!11322 = !DILocalVariable(name: "ingain_tgt_min", scope: !11315, file: !3, line: 2989, type: !408)
!11323 = !DILocation(line: 2989, column: 6, scope: !11315)
!11324 = !DILocalVariable(name: "ingain_tgt_max", scope: !11315, file: !3, line: 2990, type: !408)
!11325 = !DILocation(line: 2990, column: 6, scope: !11315)
!11326 = !DILocalVariable(name: "clp_cyclen", scope: !11315, file: !3, line: 2991, type: !408)
!11327 = !DILocation(line: 2991, column: 6, scope: !11315)
!11328 = !DILocalVariable(name: "clp_sum_min", scope: !11315, file: !3, line: 2992, type: !408)
!11329 = !DILocation(line: 2992, column: 6, scope: !11315)
!11330 = !DILocalVariable(name: "clp_dir_to", scope: !11315, file: !3, line: 2993, type: !408)
!11331 = !DILocation(line: 2993, column: 6, scope: !11315)
!11332 = !DILocalVariable(name: "sns_sum_min", scope: !11315, file: !3, line: 2994, type: !408)
!11333 = !DILocation(line: 2994, column: 6, scope: !11315)
!11334 = !DILocalVariable(name: "sns_sum_max", scope: !11315, file: !3, line: 2995, type: !408)
!11335 = !DILocation(line: 2995, column: 6, scope: !11315)
!11336 = !DILocalVariable(name: "clp_sum_max", scope: !11315, file: !3, line: 2996, type: !408)
!11337 = !DILocation(line: 2996, column: 6, scope: !11315)
!11338 = !DILocalVariable(name: "sns_dir_to", scope: !11315, file: !3, line: 2997, type: !408)
!11339 = !DILocation(line: 2997, column: 6, scope: !11315)
!11340 = !DILocalVariable(name: "ki_innergain_min", scope: !11315, file: !3, line: 2998, type: !408)
!11341 = !DILocation(line: 2998, column: 6, scope: !11315)
!11342 = !DILocalVariable(name: "if_iaccu_hi_tgt", scope: !11315, file: !3, line: 2999, type: !408)
!11343 = !DILocation(line: 2999, column: 6, scope: !11315)
!11344 = !DILocalVariable(name: "if_iaccu_hi_tgt_min", scope: !11315, file: !3, line: 3000, type: !408)
!11345 = !DILocation(line: 3000, column: 6, scope: !11315)
!11346 = !DILocalVariable(name: "if_iaccu_hi_tgt_max", scope: !11315, file: !3, line: 3001, type: !408)
!11347 = !DILocation(line: 3001, column: 6, scope: !11315)
!11348 = !DILocalVariable(name: "data", scope: !11315, file: !3, line: 3002, type: !408)
!11349 = !DILocation(line: 3002, column: 6, scope: !11315)
!11350 = !DILocalVariable(name: "fast_clp_ctrl_delay", scope: !11315, file: !3, line: 3003, type: !408)
!11351 = !DILocation(line: 3003, column: 6, scope: !11315)
!11352 = !DILocalVariable(name: "clp_ctrl_mode", scope: !11315, file: !3, line: 3004, type: !408)
!11353 = !DILocation(line: 3004, column: 6, scope: !11315)
!11354 = !DILocalVariable(name: "status", scope: !11315, file: !3, line: 3005, type: !405)
!11355 = !DILocation(line: 3005, column: 6, scope: !11315)
!11356 = !DILocation(line: 3007, column: 2, scope: !11315)
!11357 = !DILocation(line: 3007, column: 2, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11359, file: !3, line: 3007, column: 2)
!11359 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3007, column: 2)
!11360 = !DILocation(line: 3007, column: 2, scope: !11359)
!11361 = !DILocation(line: 3010, column: 14, scope: !11315)
!11362 = !DILocation(line: 3011, column: 22, scope: !11315)
!11363 = !DILocation(line: 3012, column: 13, scope: !11315)
!11364 = !DILocation(line: 3013, column: 14, scope: !11315)
!11365 = !DILocation(line: 3016, column: 14, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3016, column: 6)
!11367 = !DILocation(line: 3016, column: 7, scope: !11366)
!11368 = !DILocation(line: 3016, column: 6, scope: !11315)
!11369 = !DILocation(line: 3017, column: 3, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11366, file: !3, line: 3016, column: 22)
!11371 = !DILocation(line: 3019, column: 3, scope: !11370)
!11372 = !DILocation(line: 3025, column: 14, scope: !11315)
!11373 = !DILocation(line: 3026, column: 13, scope: !11315)
!11374 = !DILocation(line: 3027, column: 16, scope: !11315)
!11375 = !DILocation(line: 3028, column: 14, scope: !11315)
!11376 = !DILocation(line: 3029, column: 13, scope: !11315)
!11377 = !DILocation(line: 3030, column: 19, scope: !11315)
!11378 = !DILocation(line: 3031, column: 22, scope: !11315)
!11379 = !DILocation(line: 3032, column: 18, scope: !11315)
!11380 = !DILocation(line: 3033, column: 17, scope: !11315)
!11381 = !DILocation(line: 3034, column: 13, scope: !11315)
!11382 = !DILocation(line: 3035, column: 17, scope: !11315)
!11383 = !DILocation(line: 3036, column: 24, scope: !11315)
!11384 = !DILocation(line: 3036, column: 31, scope: !11315)
!11385 = !DILocation(line: 3036, column: 48, scope: !11315)
!11386 = !DILocation(line: 3036, column: 22, scope: !11315)
!11387 = !DILocation(line: 3038, column: 19, scope: !11315)
!11388 = !DILocation(line: 3039, column: 5, scope: !11315)
!11389 = !DILocation(line: 3038, column: 11, scope: !11315)
!11390 = !DILocation(line: 3038, column: 9, scope: !11315)
!11391 = !DILocation(line: 3040, column: 6, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3040, column: 6)
!11393 = !DILocation(line: 3040, column: 13, scope: !11392)
!11394 = !DILocation(line: 3040, column: 6, scope: !11315)
!11395 = !DILocation(line: 3041, column: 3, scope: !11392)
!11396 = !DILocation(line: 3043, column: 19, scope: !11315)
!11397 = !DILocation(line: 3043, column: 56, scope: !11315)
!11398 = !DILocation(line: 3043, column: 11, scope: !11315)
!11399 = !DILocation(line: 3043, column: 9, scope: !11315)
!11400 = !DILocation(line: 3044, column: 6, scope: !11401)
!11401 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3044, column: 6)
!11402 = !DILocation(line: 3044, column: 13, scope: !11401)
!11403 = !DILocation(line: 3044, column: 6, scope: !11315)
!11404 = !DILocation(line: 3045, column: 3, scope: !11401)
!11405 = !DILocation(line: 3046, column: 19, scope: !11315)
!11406 = !DILocation(line: 3046, column: 53, scope: !11315)
!11407 = !DILocation(line: 3046, column: 11, scope: !11315)
!11408 = !DILocation(line: 3046, column: 9, scope: !11315)
!11409 = !DILocation(line: 3047, column: 6, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3047, column: 6)
!11411 = !DILocation(line: 3047, column: 13, scope: !11410)
!11412 = !DILocation(line: 3047, column: 6, scope: !11315)
!11413 = !DILocation(line: 3048, column: 3, scope: !11410)
!11414 = !DILocation(line: 3049, column: 19, scope: !11315)
!11415 = !DILocation(line: 3049, column: 57, scope: !11315)
!11416 = !DILocation(line: 3049, column: 11, scope: !11315)
!11417 = !DILocation(line: 3049, column: 9, scope: !11315)
!11418 = !DILocation(line: 3050, column: 6, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3050, column: 6)
!11420 = !DILocation(line: 3050, column: 13, scope: !11419)
!11421 = !DILocation(line: 3050, column: 6, scope: !11315)
!11422 = !DILocation(line: 3051, column: 3, scope: !11419)
!11423 = !DILocation(line: 3052, column: 19, scope: !11315)
!11424 = !DILocation(line: 3052, column: 57, scope: !11315)
!11425 = !DILocation(line: 3052, column: 11, scope: !11315)
!11426 = !DILocation(line: 3052, column: 9, scope: !11315)
!11427 = !DILocation(line: 3053, column: 6, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3053, column: 6)
!11429 = !DILocation(line: 3053, column: 13, scope: !11428)
!11430 = !DILocation(line: 3053, column: 6, scope: !11315)
!11431 = !DILocation(line: 3054, column: 3, scope: !11428)
!11432 = !DILocation(line: 3055, column: 19, scope: !11315)
!11433 = !DILocation(line: 3056, column: 5, scope: !11315)
!11434 = !DILocation(line: 3055, column: 11, scope: !11315)
!11435 = !DILocation(line: 3055, column: 9, scope: !11315)
!11436 = !DILocation(line: 3057, column: 6, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3057, column: 6)
!11438 = !DILocation(line: 3057, column: 13, scope: !11437)
!11439 = !DILocation(line: 3057, column: 6, scope: !11315)
!11440 = !DILocation(line: 3058, column: 3, scope: !11437)
!11441 = !DILocation(line: 3059, column: 19, scope: !11315)
!11442 = !DILocation(line: 3060, column: 5, scope: !11315)
!11443 = !DILocation(line: 3059, column: 11, scope: !11315)
!11444 = !DILocation(line: 3059, column: 9, scope: !11315)
!11445 = !DILocation(line: 3061, column: 6, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3061, column: 6)
!11447 = !DILocation(line: 3061, column: 13, scope: !11446)
!11448 = !DILocation(line: 3061, column: 6, scope: !11315)
!11449 = !DILocation(line: 3062, column: 3, scope: !11446)
!11450 = !DILocation(line: 3063, column: 19, scope: !11315)
!11451 = !DILocation(line: 3063, column: 11, scope: !11315)
!11452 = !DILocation(line: 3063, column: 9, scope: !11315)
!11453 = !DILocation(line: 3064, column: 6, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3064, column: 6)
!11455 = !DILocation(line: 3064, column: 13, scope: !11454)
!11456 = !DILocation(line: 3064, column: 6, scope: !11315)
!11457 = !DILocation(line: 3065, column: 3, scope: !11454)
!11458 = !DILocation(line: 3066, column: 19, scope: !11315)
!11459 = !DILocation(line: 3066, column: 11, scope: !11315)
!11460 = !DILocation(line: 3066, column: 9, scope: !11315)
!11461 = !DILocation(line: 3067, column: 6, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3067, column: 6)
!11463 = !DILocation(line: 3067, column: 13, scope: !11462)
!11464 = !DILocation(line: 3067, column: 6, scope: !11315)
!11465 = !DILocation(line: 3068, column: 3, scope: !11462)
!11466 = !DILocation(line: 3069, column: 19, scope: !11315)
!11467 = !DILocation(line: 3069, column: 11, scope: !11315)
!11468 = !DILocation(line: 3069, column: 9, scope: !11315)
!11469 = !DILocation(line: 3070, column: 6, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3070, column: 6)
!11471 = !DILocation(line: 3070, column: 13, scope: !11470)
!11472 = !DILocation(line: 3070, column: 6, scope: !11315)
!11473 = !DILocation(line: 3071, column: 3, scope: !11470)
!11474 = !DILocation(line: 3072, column: 19, scope: !11315)
!11475 = !DILocation(line: 3072, column: 11, scope: !11315)
!11476 = !DILocation(line: 3072, column: 9, scope: !11315)
!11477 = !DILocation(line: 3073, column: 6, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3073, column: 6)
!11479 = !DILocation(line: 3073, column: 13, scope: !11478)
!11480 = !DILocation(line: 3073, column: 6, scope: !11315)
!11481 = !DILocation(line: 3074, column: 3, scope: !11478)
!11482 = !DILocation(line: 3075, column: 19, scope: !11315)
!11483 = !DILocation(line: 3075, column: 54, scope: !11315)
!11484 = !DILocation(line: 3075, column: 11, scope: !11315)
!11485 = !DILocation(line: 3075, column: 9, scope: !11315)
!11486 = !DILocation(line: 3076, column: 6, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3076, column: 6)
!11488 = !DILocation(line: 3076, column: 13, scope: !11487)
!11489 = !DILocation(line: 3076, column: 6, scope: !11315)
!11490 = !DILocation(line: 3077, column: 3, scope: !11487)
!11491 = !DILocation(line: 3078, column: 19, scope: !11315)
!11492 = !DILocation(line: 3078, column: 54, scope: !11315)
!11493 = !DILocation(line: 3078, column: 11, scope: !11315)
!11494 = !DILocation(line: 3078, column: 9, scope: !11315)
!11495 = !DILocation(line: 3079, column: 6, scope: !11496)
!11496 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3079, column: 6)
!11497 = !DILocation(line: 3079, column: 13, scope: !11496)
!11498 = !DILocation(line: 3079, column: 6, scope: !11315)
!11499 = !DILocation(line: 3080, column: 3, scope: !11496)
!11500 = !DILocation(line: 3082, column: 19, scope: !11315)
!11501 = !DILocation(line: 3083, column: 5, scope: !11315)
!11502 = !DILocation(line: 3082, column: 11, scope: !11315)
!11503 = !DILocation(line: 3082, column: 9, scope: !11315)
!11504 = !DILocation(line: 3084, column: 6, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3084, column: 6)
!11506 = !DILocation(line: 3084, column: 13, scope: !11505)
!11507 = !DILocation(line: 3084, column: 6, scope: !11315)
!11508 = !DILocation(line: 3085, column: 3, scope: !11505)
!11509 = !DILocation(line: 3086, column: 19, scope: !11315)
!11510 = !DILocation(line: 3087, column: 5, scope: !11315)
!11511 = !DILocation(line: 3086, column: 11, scope: !11315)
!11512 = !DILocation(line: 3086, column: 9, scope: !11315)
!11513 = !DILocation(line: 3088, column: 6, scope: !11514)
!11514 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3088, column: 6)
!11515 = !DILocation(line: 3088, column: 13, scope: !11514)
!11516 = !DILocation(line: 3088, column: 6, scope: !11315)
!11517 = !DILocation(line: 3089, column: 3, scope: !11514)
!11518 = !DILocation(line: 3090, column: 19, scope: !11315)
!11519 = !DILocation(line: 3090, column: 53, scope: !11315)
!11520 = !DILocation(line: 3090, column: 11, scope: !11315)
!11521 = !DILocation(line: 3090, column: 9, scope: !11315)
!11522 = !DILocation(line: 3091, column: 6, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3091, column: 6)
!11524 = !DILocation(line: 3091, column: 13, scope: !11523)
!11525 = !DILocation(line: 3091, column: 6, scope: !11315)
!11526 = !DILocation(line: 3092, column: 3, scope: !11523)
!11527 = !DILocation(line: 3094, column: 19, scope: !11315)
!11528 = !DILocation(line: 3094, column: 11, scope: !11315)
!11529 = !DILocation(line: 3094, column: 9, scope: !11315)
!11530 = !DILocation(line: 3095, column: 6, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3095, column: 6)
!11532 = !DILocation(line: 3095, column: 13, scope: !11531)
!11533 = !DILocation(line: 3095, column: 6, scope: !11315)
!11534 = !DILocation(line: 3096, column: 3, scope: !11531)
!11535 = !DILocation(line: 3097, column: 19, scope: !11315)
!11536 = !DILocation(line: 3097, column: 11, scope: !11315)
!11537 = !DILocation(line: 3097, column: 9, scope: !11315)
!11538 = !DILocation(line: 3098, column: 6, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3098, column: 6)
!11540 = !DILocation(line: 3098, column: 13, scope: !11539)
!11541 = !DILocation(line: 3098, column: 6, scope: !11315)
!11542 = !DILocation(line: 3099, column: 3, scope: !11539)
!11543 = !DILocation(line: 3100, column: 19, scope: !11315)
!11544 = !DILocation(line: 3100, column: 11, scope: !11315)
!11545 = !DILocation(line: 3100, column: 9, scope: !11315)
!11546 = !DILocation(line: 3101, column: 6, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3101, column: 6)
!11548 = !DILocation(line: 3101, column: 13, scope: !11547)
!11549 = !DILocation(line: 3101, column: 6, scope: !11315)
!11550 = !DILocation(line: 3102, column: 3, scope: !11547)
!11551 = !DILocation(line: 3104, column: 19, scope: !11315)
!11552 = !DILocation(line: 3104, column: 11, scope: !11315)
!11553 = !DILocation(line: 3104, column: 9, scope: !11315)
!11554 = !DILocation(line: 3105, column: 6, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3105, column: 6)
!11556 = !DILocation(line: 3105, column: 13, scope: !11555)
!11557 = !DILocation(line: 3105, column: 6, scope: !11315)
!11558 = !DILocation(line: 3106, column: 3, scope: !11555)
!11559 = !DILocation(line: 3107, column: 19, scope: !11315)
!11560 = !DILocation(line: 3107, column: 54, scope: !11315)
!11561 = !DILocation(line: 3107, column: 11, scope: !11315)
!11562 = !DILocation(line: 3107, column: 9, scope: !11315)
!11563 = !DILocation(line: 3108, column: 6, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3108, column: 6)
!11565 = !DILocation(line: 3108, column: 13, scope: !11564)
!11566 = !DILocation(line: 3108, column: 6, scope: !11315)
!11567 = !DILocation(line: 3109, column: 3, scope: !11564)
!11568 = !DILocation(line: 3110, column: 19, scope: !11315)
!11569 = !DILocation(line: 3110, column: 54, scope: !11315)
!11570 = !DILocation(line: 3110, column: 11, scope: !11315)
!11571 = !DILocation(line: 3110, column: 9, scope: !11315)
!11572 = !DILocation(line: 3111, column: 6, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3111, column: 6)
!11574 = !DILocation(line: 3111, column: 13, scope: !11573)
!11575 = !DILocation(line: 3111, column: 6, scope: !11315)
!11576 = !DILocation(line: 3112, column: 3, scope: !11573)
!11577 = !DILocation(line: 3113, column: 19, scope: !11315)
!11578 = !DILocation(line: 3113, column: 53, scope: !11315)
!11579 = !DILocation(line: 3113, column: 11, scope: !11315)
!11580 = !DILocation(line: 3113, column: 9, scope: !11315)
!11581 = !DILocation(line: 3114, column: 6, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3114, column: 6)
!11583 = !DILocation(line: 3114, column: 13, scope: !11582)
!11584 = !DILocation(line: 3114, column: 6, scope: !11315)
!11585 = !DILocation(line: 3115, column: 3, scope: !11582)
!11586 = !DILocation(line: 3116, column: 19, scope: !11315)
!11587 = !DILocation(line: 3116, column: 53, scope: !11315)
!11588 = !DILocation(line: 3116, column: 11, scope: !11315)
!11589 = !DILocation(line: 3116, column: 9, scope: !11315)
!11590 = !DILocation(line: 3117, column: 6, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3117, column: 6)
!11592 = !DILocation(line: 3117, column: 13, scope: !11591)
!11593 = !DILocation(line: 3117, column: 6, scope: !11315)
!11594 = !DILocation(line: 3118, column: 3, scope: !11591)
!11595 = !DILocation(line: 3119, column: 19, scope: !11315)
!11596 = !DILocation(line: 3119, column: 11, scope: !11315)
!11597 = !DILocation(line: 3119, column: 9, scope: !11315)
!11598 = !DILocation(line: 3120, column: 6, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3120, column: 6)
!11600 = !DILocation(line: 3120, column: 13, scope: !11599)
!11601 = !DILocation(line: 3120, column: 6, scope: !11315)
!11602 = !DILocation(line: 3121, column: 3, scope: !11599)
!11603 = !DILocation(line: 3122, column: 19, scope: !11315)
!11604 = !DILocation(line: 3122, column: 11, scope: !11315)
!11605 = !DILocation(line: 3122, column: 9, scope: !11315)
!11606 = !DILocation(line: 3123, column: 6, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3123, column: 6)
!11608 = !DILocation(line: 3123, column: 13, scope: !11607)
!11609 = !DILocation(line: 3123, column: 6, scope: !11315)
!11610 = !DILocation(line: 3124, column: 3, scope: !11607)
!11611 = !DILocation(line: 3125, column: 19, scope: !11315)
!11612 = !DILocation(line: 3125, column: 11, scope: !11315)
!11613 = !DILocation(line: 3125, column: 9, scope: !11315)
!11614 = !DILocation(line: 3126, column: 6, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3126, column: 6)
!11616 = !DILocation(line: 3126, column: 13, scope: !11615)
!11617 = !DILocation(line: 3126, column: 6, scope: !11315)
!11618 = !DILocation(line: 3127, column: 3, scope: !11615)
!11619 = !DILocation(line: 3128, column: 19, scope: !11315)
!11620 = !DILocation(line: 3128, column: 11, scope: !11315)
!11621 = !DILocation(line: 3128, column: 9, scope: !11315)
!11622 = !DILocation(line: 3129, column: 6, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3129, column: 6)
!11624 = !DILocation(line: 3129, column: 13, scope: !11623)
!11625 = !DILocation(line: 3129, column: 6, scope: !11315)
!11626 = !DILocation(line: 3130, column: 3, scope: !11623)
!11627 = !DILocation(line: 3131, column: 19, scope: !11315)
!11628 = !DILocation(line: 3131, column: 11, scope: !11315)
!11629 = !DILocation(line: 3131, column: 9, scope: !11315)
!11630 = !DILocation(line: 3132, column: 6, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3132, column: 6)
!11632 = !DILocation(line: 3132, column: 13, scope: !11631)
!11633 = !DILocation(line: 3132, column: 6, scope: !11315)
!11634 = !DILocation(line: 3133, column: 3, scope: !11631)
!11635 = !DILocation(line: 3134, column: 19, scope: !11315)
!11636 = !DILocation(line: 3134, column: 11, scope: !11315)
!11637 = !DILocation(line: 3134, column: 9, scope: !11315)
!11638 = !DILocation(line: 3135, column: 6, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3135, column: 6)
!11640 = !DILocation(line: 3135, column: 13, scope: !11639)
!11641 = !DILocation(line: 3135, column: 6, scope: !11315)
!11642 = !DILocation(line: 3136, column: 3, scope: !11639)
!11643 = !DILocation(line: 3137, column: 19, scope: !11315)
!11644 = !DILocation(line: 3137, column: 11, scope: !11315)
!11645 = !DILocation(line: 3137, column: 9, scope: !11315)
!11646 = !DILocation(line: 3138, column: 6, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3138, column: 6)
!11648 = !DILocation(line: 3138, column: 13, scope: !11647)
!11649 = !DILocation(line: 3138, column: 6, scope: !11315)
!11650 = !DILocation(line: 3139, column: 3, scope: !11647)
!11651 = !DILocation(line: 3140, column: 19, scope: !11315)
!11652 = !DILocation(line: 3140, column: 11, scope: !11315)
!11653 = !DILocation(line: 3140, column: 9, scope: !11315)
!11654 = !DILocation(line: 3141, column: 6, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3141, column: 6)
!11656 = !DILocation(line: 3141, column: 13, scope: !11655)
!11657 = !DILocation(line: 3141, column: 6, scope: !11315)
!11658 = !DILocation(line: 3142, column: 3, scope: !11655)
!11659 = !DILocation(line: 3143, column: 19, scope: !11315)
!11660 = !DILocation(line: 3143, column: 11, scope: !11315)
!11661 = !DILocation(line: 3143, column: 9, scope: !11315)
!11662 = !DILocation(line: 3144, column: 6, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3144, column: 6)
!11664 = !DILocation(line: 3144, column: 13, scope: !11663)
!11665 = !DILocation(line: 3144, column: 6, scope: !11315)
!11666 = !DILocation(line: 3145, column: 3, scope: !11663)
!11667 = !DILocation(line: 3146, column: 19, scope: !11315)
!11668 = !DILocation(line: 3146, column: 11, scope: !11315)
!11669 = !DILocation(line: 3146, column: 9, scope: !11315)
!11670 = !DILocation(line: 3147, column: 6, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3147, column: 6)
!11672 = !DILocation(line: 3147, column: 13, scope: !11671)
!11673 = !DILocation(line: 3147, column: 6, scope: !11315)
!11674 = !DILocation(line: 3148, column: 3, scope: !11671)
!11675 = !DILocation(line: 3149, column: 19, scope: !11315)
!11676 = !DILocation(line: 3149, column: 11, scope: !11315)
!11677 = !DILocation(line: 3149, column: 9, scope: !11315)
!11678 = !DILocation(line: 3150, column: 6, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3150, column: 6)
!11680 = !DILocation(line: 3150, column: 13, scope: !11679)
!11681 = !DILocation(line: 3150, column: 6, scope: !11315)
!11682 = !DILocation(line: 3151, column: 3, scope: !11679)
!11683 = !DILocation(line: 3152, column: 19, scope: !11315)
!11684 = !DILocation(line: 3152, column: 11, scope: !11315)
!11685 = !DILocation(line: 3152, column: 9, scope: !11315)
!11686 = !DILocation(line: 3153, column: 6, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3153, column: 6)
!11688 = !DILocation(line: 3153, column: 13, scope: !11687)
!11689 = !DILocation(line: 3153, column: 6, scope: !11315)
!11690 = !DILocation(line: 3154, column: 3, scope: !11687)
!11691 = !DILocation(line: 3155, column: 19, scope: !11315)
!11692 = !DILocation(line: 3155, column: 11, scope: !11315)
!11693 = !DILocation(line: 3155, column: 9, scope: !11315)
!11694 = !DILocation(line: 3156, column: 6, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3156, column: 6)
!11696 = !DILocation(line: 3156, column: 13, scope: !11695)
!11697 = !DILocation(line: 3156, column: 6, scope: !11315)
!11698 = !DILocation(line: 3157, column: 3, scope: !11695)
!11699 = !DILocation(line: 3158, column: 19, scope: !11315)
!11700 = !DILocation(line: 3158, column: 11, scope: !11315)
!11701 = !DILocation(line: 3158, column: 9, scope: !11315)
!11702 = !DILocation(line: 3159, column: 6, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3159, column: 6)
!11704 = !DILocation(line: 3159, column: 13, scope: !11703)
!11705 = !DILocation(line: 3159, column: 6, scope: !11315)
!11706 = !DILocation(line: 3160, column: 3, scope: !11703)
!11707 = !DILocation(line: 3163, column: 18, scope: !11315)
!11708 = !DILocation(line: 3163, column: 11, scope: !11315)
!11709 = !DILocation(line: 3163, column: 9, scope: !11315)
!11710 = !DILocation(line: 3164, column: 6, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3164, column: 6)
!11712 = !DILocation(line: 3164, column: 13, scope: !11711)
!11713 = !DILocation(line: 3164, column: 6, scope: !11315)
!11714 = !DILocation(line: 3165, column: 3, scope: !11711)
!11715 = !DILocation(line: 3167, column: 7, scope: !11315)
!11716 = !DILocation(line: 3168, column: 7, scope: !11315)
!11717 = !DILocation(line: 3169, column: 7, scope: !11315)
!11718 = !DILocation(line: 3170, column: 7, scope: !11315)
!11719 = !DILocation(line: 3171, column: 7, scope: !11315)
!11720 = !DILocation(line: 3173, column: 19, scope: !11315)
!11721 = !DILocation(line: 3173, column: 45, scope: !11315)
!11722 = !DILocation(line: 3173, column: 11, scope: !11315)
!11723 = !DILocation(line: 3173, column: 9, scope: !11315)
!11724 = !DILocation(line: 3173, column: 2, scope: !11315)
!11725 = !DILabel(scope: !11315, name: "error", file: !3, line: 3174)
!11726 = !DILocation(line: 3174, column: 1, scope: !11315)
!11727 = !DILocation(line: 3175, column: 6, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 3175, column: 6)
!11729 = !DILocation(line: 3175, column: 13, scope: !11728)
!11730 = !DILocation(line: 3175, column: 6, scope: !11315)
!11731 = !DILocation(line: 3176, column: 3, scope: !11728)
!11732 = !DILocation(line: 3177, column: 9, scope: !11315)
!11733 = !DILocation(line: 3177, column: 2, scope: !11315)
!11734 = !DILocation(line: 3178, column: 1, scope: !11315)
!11735 = distinct !DISubprogram(name: "set_qam", scope: !3, file: !3, line: 5422, type: !11736, scopeLine: 5424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!11736 = !DISubroutineType(types: !11737)
!11737 = !{!405, !4562, !408, !772}
!11738 = !DILocalVariable(name: "state", arg: 1, scope: !11735, file: !3, line: 5422, type: !4562)
!11739 = !DILocation(line: 5422, column: 39, scope: !11735)
!11740 = !DILocalVariable(name: "intermediate_freqk_hz", arg: 2, scope: !11735, file: !3, line: 5422, type: !408)
!11741 = !DILocation(line: 5422, column: 50, scope: !11735)
!11742 = !DILocalVariable(name: "tuner_freq_offset", arg: 3, scope: !11735, file: !3, line: 5423, type: !772)
!11743 = !DILocation(line: 5423, column: 9, scope: !11735)
!11744 = !DILocalVariable(name: "status", scope: !11735, file: !3, line: 5425, type: !405)
!11745 = !DILocation(line: 5425, column: 6, scope: !11735)
!11746 = !DILocalVariable(name: "cmd_result", scope: !11735, file: !3, line: 5426, type: !408)
!11747 = !DILocation(line: 5426, column: 6, scope: !11735)
!11748 = !DILocalVariable(name: "qam_demod_param_count", scope: !11735, file: !3, line: 5427, type: !405)
!11749 = !DILocation(line: 5427, column: 6, scope: !11735)
!11750 = !DILocation(line: 5427, column: 30, scope: !11735)
!11751 = !DILocation(line: 5427, column: 37, scope: !11735)
!11752 = !DILocation(line: 5429, column: 2, scope: !11735)
!11753 = !DILocation(line: 5429, column: 2, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11755, file: !3, line: 5429, column: 2)
!11755 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5429, column: 2)
!11756 = !DILocation(line: 5429, column: 2, scope: !11755)
!11757 = !DILocation(line: 5436, column: 19, scope: !11735)
!11758 = !DILocation(line: 5436, column: 11, scope: !11735)
!11759 = !DILocation(line: 5436, column: 9, scope: !11735)
!11760 = !DILocation(line: 5437, column: 6, scope: !11761)
!11761 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5437, column: 6)
!11762 = !DILocation(line: 5437, column: 13, scope: !11761)
!11763 = !DILocation(line: 5437, column: 6, scope: !11735)
!11764 = !DILocation(line: 5438, column: 3, scope: !11761)
!11765 = !DILocation(line: 5439, column: 19, scope: !11735)
!11766 = !DILocation(line: 5439, column: 11, scope: !11735)
!11767 = !DILocation(line: 5439, column: 9, scope: !11735)
!11768 = !DILocation(line: 5440, column: 6, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5440, column: 6)
!11770 = !DILocation(line: 5440, column: 13, scope: !11769)
!11771 = !DILocation(line: 5440, column: 6, scope: !11735)
!11772 = !DILocation(line: 5441, column: 3, scope: !11769)
!11773 = !DILocation(line: 5442, column: 25, scope: !11735)
!11774 = !DILocation(line: 5442, column: 11, scope: !11735)
!11775 = !DILocation(line: 5442, column: 9, scope: !11735)
!11776 = !DILocation(line: 5443, column: 6, scope: !11777)
!11777 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5443, column: 6)
!11778 = !DILocation(line: 5443, column: 13, scope: !11777)
!11779 = !DILocation(line: 5443, column: 6, scope: !11735)
!11780 = !DILocation(line: 5444, column: 3, scope: !11777)
!11781 = !DILocation(line: 5451, column: 30, scope: !11735)
!11782 = !DILocation(line: 5451, column: 11, scope: !11735)
!11783 = !DILocation(line: 5451, column: 9, scope: !11735)
!11784 = !DILocation(line: 5452, column: 6, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5452, column: 6)
!11786 = !DILocation(line: 5452, column: 13, scope: !11785)
!11787 = !DILocation(line: 5452, column: 6, scope: !11735)
!11788 = !DILocation(line: 5453, column: 3, scope: !11785)
!11789 = !DILocation(line: 5456, column: 10, scope: !11735)
!11790 = !DILocation(line: 5456, column: 17, scope: !11735)
!11791 = !DILocation(line: 5456, column: 23, scope: !11735)
!11792 = !DILocation(line: 5456, column: 2, scope: !11735)
!11793 = !DILocation(line: 5458, column: 3, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5456, column: 35)
!11795 = !DILocation(line: 5458, column: 10, scope: !11794)
!11796 = !DILocation(line: 5458, column: 26, scope: !11794)
!11797 = !DILocation(line: 5459, column: 3, scope: !11794)
!11798 = !DILocation(line: 5462, column: 3, scope: !11794)
!11799 = !DILocation(line: 5462, column: 10, scope: !11794)
!11800 = !DILocation(line: 5462, column: 26, scope: !11794)
!11801 = !DILocation(line: 5463, column: 3, scope: !11794)
!11802 = !DILocation(line: 5465, column: 3, scope: !11794)
!11803 = !DILocation(line: 5465, column: 10, scope: !11794)
!11804 = !DILocation(line: 5465, column: 26, scope: !11794)
!11805 = !DILocation(line: 5466, column: 3, scope: !11794)
!11806 = !DILocation(line: 5468, column: 3, scope: !11794)
!11807 = !DILocation(line: 5468, column: 10, scope: !11794)
!11808 = !DILocation(line: 5468, column: 26, scope: !11794)
!11809 = !DILocation(line: 5469, column: 3, scope: !11794)
!11810 = !DILocation(line: 5471, column: 3, scope: !11794)
!11811 = !DILocation(line: 5471, column: 10, scope: !11794)
!11812 = !DILocation(line: 5471, column: 26, scope: !11794)
!11813 = !DILocation(line: 5472, column: 3, scope: !11794)
!11814 = !DILocation(line: 5474, column: 10, scope: !11794)
!11815 = !DILocation(line: 5475, column: 3, scope: !11794)
!11816 = !DILocation(line: 5477, column: 6, scope: !11817)
!11817 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5477, column: 6)
!11818 = !DILocation(line: 5477, column: 13, scope: !11817)
!11819 = !DILocation(line: 5477, column: 6, scope: !11735)
!11820 = !DILocation(line: 5478, column: 3, scope: !11817)
!11821 = !DILocation(line: 5482, column: 6, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5482, column: 6)
!11823 = !DILocation(line: 5482, column: 13, scope: !11822)
!11824 = !DILocation(line: 5482, column: 39, scope: !11822)
!11825 = !DILocation(line: 5483, column: 3, scope: !11822)
!11826 = !DILocation(line: 5483, column: 7, scope: !11822)
!11827 = !DILocation(line: 5483, column: 14, scope: !11822)
!11828 = !DILocation(line: 5482, column: 6, scope: !11735)
!11829 = !DILocation(line: 5484, column: 25, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11822, file: !3, line: 5483, column: 41)
!11831 = !DILocation(line: 5485, column: 36, scope: !11830)
!11832 = !DILocation(line: 5485, column: 43, scope: !11830)
!11833 = !DILocation(line: 5485, column: 12, scope: !11830)
!11834 = !DILocation(line: 5485, column: 10, scope: !11830)
!11835 = !DILocation(line: 5486, column: 2, scope: !11830)
!11836 = !DILocation(line: 5491, column: 6, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5491, column: 6)
!11838 = !DILocation(line: 5491, column: 13, scope: !11837)
!11839 = !DILocation(line: 5491, column: 39, scope: !11837)
!11840 = !DILocation(line: 5492, column: 3, scope: !11837)
!11841 = !DILocation(line: 5492, column: 8, scope: !11837)
!11842 = !DILocation(line: 5492, column: 15, scope: !11837)
!11843 = !DILocation(line: 5492, column: 41, scope: !11837)
!11844 = !DILocation(line: 5492, column: 44, scope: !11837)
!11845 = !DILocation(line: 5492, column: 51, scope: !11837)
!11846 = !DILocation(line: 5491, column: 6, scope: !11735)
!11847 = !DILocation(line: 5493, column: 25, scope: !11848)
!11848 = distinct !DILexicalBlock(scope: !11837, file: !3, line: 5492, column: 57)
!11849 = !DILocation(line: 5494, column: 36, scope: !11848)
!11850 = !DILocation(line: 5494, column: 43, scope: !11848)
!11851 = !DILocation(line: 5494, column: 12, scope: !11848)
!11852 = !DILocation(line: 5494, column: 10, scope: !11848)
!11853 = !DILocation(line: 5495, column: 2, scope: !11848)
!11854 = !DILocation(line: 5497, column: 6, scope: !11855)
!11855 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5497, column: 6)
!11856 = !DILocation(line: 5497, column: 13, scope: !11855)
!11857 = !DILocation(line: 5497, column: 6, scope: !11735)
!11858 = !DILocation(line: 5498, column: 3, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 5497, column: 18)
!11860 = !DILocation(line: 5498, column: 3, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 5498, column: 3)
!11862 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 5498, column: 3)
!11863 = !DILocation(line: 5498, column: 3, scope: !11862)
!11864 = !DILocation(line: 5499, column: 3, scope: !11859)
!11865 = !DILocation(line: 5499, column: 3, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11867, file: !3, line: 5499, column: 3)
!11867 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 5499, column: 3)
!11868 = !DILocation(line: 5499, column: 3, scope: !11867)
!11869 = !DILocation(line: 5503, column: 3, scope: !11859)
!11870 = !DILocation(line: 5504, column: 14, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 5504, column: 13)
!11872 = !DILocation(line: 5504, column: 21, scope: !11871)
!11873 = !DILocation(line: 5504, column: 13, scope: !11855)
!11874 = !DILocation(line: 5505, column: 3, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 5504, column: 48)
!11876 = !DILocation(line: 5505, column: 3, scope: !11877)
!11877 = distinct !DILexicalBlock(scope: !11878, file: !3, line: 5505, column: 3)
!11878 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 5505, column: 3)
!11879 = !DILocation(line: 5505, column: 3, scope: !11878)
!11880 = !DILocation(line: 5513, column: 38, scope: !11875)
!11881 = !DILocation(line: 5513, column: 3, scope: !11875)
!11882 = !DILocation(line: 5513, column: 10, scope: !11875)
!11883 = !DILocation(line: 5513, column: 36, scope: !11875)
!11884 = !DILocation(line: 5514, column: 2, scope: !11875)
!11885 = !DILocation(line: 5525, column: 33, scope: !11735)
!11886 = !DILocation(line: 5525, column: 40, scope: !11735)
!11887 = !DILocation(line: 5526, column: 12, scope: !11735)
!11888 = !DILocation(line: 5525, column: 11, scope: !11735)
!11889 = !DILocation(line: 5525, column: 9, scope: !11735)
!11890 = !DILocation(line: 5527, column: 6, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5527, column: 6)
!11892 = !DILocation(line: 5527, column: 13, scope: !11891)
!11893 = !DILocation(line: 5527, column: 6, scope: !11735)
!11894 = !DILocation(line: 5528, column: 3, scope: !11891)
!11895 = !DILocation(line: 5531, column: 31, scope: !11735)
!11896 = !DILocation(line: 5531, column: 38, scope: !11735)
!11897 = !DILocation(line: 5531, column: 45, scope: !11735)
!11898 = !DILocation(line: 5532, column: 10, scope: !11735)
!11899 = !DILocation(line: 5532, column: 17, scope: !11735)
!11900 = !DILocation(line: 5532, column: 23, scope: !11735)
!11901 = !DILocation(line: 5531, column: 11, scope: !11735)
!11902 = !DILocation(line: 5531, column: 9, scope: !11735)
!11903 = !DILocation(line: 5533, column: 6, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5533, column: 6)
!11905 = !DILocation(line: 5533, column: 13, scope: !11904)
!11906 = !DILocation(line: 5533, column: 6, scope: !11735)
!11907 = !DILocation(line: 5534, column: 3, scope: !11904)
!11908 = !DILocation(line: 5537, column: 19, scope: !11735)
!11909 = !DILocation(line: 5537, column: 11, scope: !11735)
!11910 = !DILocation(line: 5537, column: 9, scope: !11735)
!11911 = !DILocation(line: 5538, column: 6, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5538, column: 6)
!11913 = !DILocation(line: 5538, column: 13, scope: !11912)
!11914 = !DILocation(line: 5538, column: 6, scope: !11735)
!11915 = !DILocation(line: 5539, column: 3, scope: !11912)
!11916 = !DILocation(line: 5540, column: 19, scope: !11735)
!11917 = !DILocation(line: 5540, column: 11, scope: !11735)
!11918 = !DILocation(line: 5540, column: 9, scope: !11735)
!11919 = !DILocation(line: 5541, column: 6, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5541, column: 6)
!11921 = !DILocation(line: 5541, column: 13, scope: !11920)
!11922 = !DILocation(line: 5541, column: 6, scope: !11735)
!11923 = !DILocation(line: 5542, column: 3, scope: !11920)
!11924 = !DILocation(line: 5545, column: 19, scope: !11735)
!11925 = !DILocation(line: 5545, column: 11, scope: !11735)
!11926 = !DILocation(line: 5545, column: 9, scope: !11735)
!11927 = !DILocation(line: 5546, column: 6, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5546, column: 6)
!11929 = !DILocation(line: 5546, column: 13, scope: !11928)
!11930 = !DILocation(line: 5546, column: 6, scope: !11735)
!11931 = !DILocation(line: 5547, column: 3, scope: !11928)
!11932 = !DILocation(line: 5548, column: 19, scope: !11735)
!11933 = !DILocation(line: 5548, column: 11, scope: !11735)
!11934 = !DILocation(line: 5548, column: 9, scope: !11735)
!11935 = !DILocation(line: 5549, column: 6, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5549, column: 6)
!11937 = !DILocation(line: 5549, column: 13, scope: !11936)
!11938 = !DILocation(line: 5549, column: 6, scope: !11735)
!11939 = !DILocation(line: 5550, column: 3, scope: !11936)
!11940 = !DILocation(line: 5551, column: 19, scope: !11735)
!11941 = !DILocation(line: 5551, column: 11, scope: !11735)
!11942 = !DILocation(line: 5551, column: 9, scope: !11735)
!11943 = !DILocation(line: 5552, column: 6, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5552, column: 6)
!11945 = !DILocation(line: 5552, column: 13, scope: !11944)
!11946 = !DILocation(line: 5552, column: 6, scope: !11735)
!11947 = !DILocation(line: 5553, column: 3, scope: !11944)
!11948 = !DILocation(line: 5554, column: 19, scope: !11735)
!11949 = !DILocation(line: 5554, column: 11, scope: !11735)
!11950 = !DILocation(line: 5554, column: 9, scope: !11735)
!11951 = !DILocation(line: 5555, column: 6, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5555, column: 6)
!11953 = !DILocation(line: 5555, column: 13, scope: !11952)
!11954 = !DILocation(line: 5555, column: 6, scope: !11735)
!11955 = !DILocation(line: 5556, column: 3, scope: !11952)
!11956 = !DILocation(line: 5558, column: 19, scope: !11735)
!11957 = !DILocation(line: 5558, column: 11, scope: !11735)
!11958 = !DILocation(line: 5558, column: 9, scope: !11735)
!11959 = !DILocation(line: 5559, column: 6, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5559, column: 6)
!11961 = !DILocation(line: 5559, column: 13, scope: !11960)
!11962 = !DILocation(line: 5559, column: 6, scope: !11735)
!11963 = !DILocation(line: 5560, column: 3, scope: !11960)
!11964 = !DILocation(line: 5561, column: 19, scope: !11735)
!11965 = !DILocation(line: 5561, column: 11, scope: !11735)
!11966 = !DILocation(line: 5561, column: 9, scope: !11735)
!11967 = !DILocation(line: 5562, column: 6, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5562, column: 6)
!11969 = !DILocation(line: 5562, column: 13, scope: !11968)
!11970 = !DILocation(line: 5562, column: 6, scope: !11735)
!11971 = !DILocation(line: 5563, column: 3, scope: !11968)
!11972 = !DILocation(line: 5564, column: 19, scope: !11735)
!11973 = !DILocation(line: 5564, column: 11, scope: !11735)
!11974 = !DILocation(line: 5564, column: 9, scope: !11735)
!11975 = !DILocation(line: 5565, column: 6, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5565, column: 6)
!11977 = !DILocation(line: 5565, column: 13, scope: !11976)
!11978 = !DILocation(line: 5565, column: 6, scope: !11735)
!11979 = !DILocation(line: 5566, column: 3, scope: !11976)
!11980 = !DILocation(line: 5567, column: 19, scope: !11735)
!11981 = !DILocation(line: 5567, column: 11, scope: !11735)
!11982 = !DILocation(line: 5567, column: 9, scope: !11735)
!11983 = !DILocation(line: 5568, column: 6, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5568, column: 6)
!11985 = !DILocation(line: 5568, column: 13, scope: !11984)
!11986 = !DILocation(line: 5568, column: 6, scope: !11735)
!11987 = !DILocation(line: 5569, column: 3, scope: !11984)
!11988 = !DILocation(line: 5570, column: 19, scope: !11735)
!11989 = !DILocation(line: 5570, column: 11, scope: !11735)
!11990 = !DILocation(line: 5570, column: 9, scope: !11735)
!11991 = !DILocation(line: 5571, column: 6, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5571, column: 6)
!11993 = !DILocation(line: 5571, column: 13, scope: !11992)
!11994 = !DILocation(line: 5571, column: 6, scope: !11735)
!11995 = !DILocation(line: 5572, column: 3, scope: !11992)
!11996 = !DILocation(line: 5573, column: 19, scope: !11735)
!11997 = !DILocation(line: 5573, column: 11, scope: !11735)
!11998 = !DILocation(line: 5573, column: 9, scope: !11735)
!11999 = !DILocation(line: 5574, column: 6, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5574, column: 6)
!12001 = !DILocation(line: 5574, column: 13, scope: !12000)
!12002 = !DILocation(line: 5574, column: 6, scope: !11735)
!12003 = !DILocation(line: 5575, column: 3, scope: !12000)
!12004 = !DILocation(line: 5576, column: 19, scope: !11735)
!12005 = !DILocation(line: 5576, column: 11, scope: !11735)
!12006 = !DILocation(line: 5576, column: 9, scope: !11735)
!12007 = !DILocation(line: 5577, column: 6, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5577, column: 6)
!12009 = !DILocation(line: 5577, column: 13, scope: !12008)
!12010 = !DILocation(line: 5577, column: 6, scope: !11735)
!12011 = !DILocation(line: 5578, column: 3, scope: !12008)
!12012 = !DILocation(line: 5579, column: 19, scope: !11735)
!12013 = !DILocation(line: 5579, column: 11, scope: !11735)
!12014 = !DILocation(line: 5579, column: 9, scope: !11735)
!12015 = !DILocation(line: 5580, column: 6, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5580, column: 6)
!12017 = !DILocation(line: 5580, column: 13, scope: !12016)
!12018 = !DILocation(line: 5580, column: 6, scope: !11735)
!12019 = !DILocation(line: 5581, column: 3, scope: !12016)
!12020 = !DILocation(line: 5582, column: 19, scope: !11735)
!12021 = !DILocation(line: 5582, column: 11, scope: !11735)
!12022 = !DILocation(line: 5582, column: 9, scope: !11735)
!12023 = !DILocation(line: 5583, column: 6, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5583, column: 6)
!12025 = !DILocation(line: 5583, column: 13, scope: !12024)
!12026 = !DILocation(line: 5583, column: 6, scope: !11735)
!12027 = !DILocation(line: 5584, column: 3, scope: !12024)
!12028 = !DILocation(line: 5585, column: 19, scope: !11735)
!12029 = !DILocation(line: 5585, column: 11, scope: !11735)
!12030 = !DILocation(line: 5585, column: 9, scope: !11735)
!12031 = !DILocation(line: 5586, column: 6, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5586, column: 6)
!12033 = !DILocation(line: 5586, column: 13, scope: !12032)
!12034 = !DILocation(line: 5586, column: 6, scope: !11735)
!12035 = !DILocation(line: 5587, column: 3, scope: !12032)
!12036 = !DILocation(line: 5588, column: 19, scope: !11735)
!12037 = !DILocation(line: 5588, column: 11, scope: !11735)
!12038 = !DILocation(line: 5588, column: 9, scope: !11735)
!12039 = !DILocation(line: 5589, column: 6, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5589, column: 6)
!12041 = !DILocation(line: 5589, column: 13, scope: !12040)
!12042 = !DILocation(line: 5589, column: 6, scope: !11735)
!12043 = !DILocation(line: 5590, column: 3, scope: !12040)
!12044 = !DILocation(line: 5591, column: 19, scope: !11735)
!12045 = !DILocation(line: 5591, column: 11, scope: !11735)
!12046 = !DILocation(line: 5591, column: 9, scope: !11735)
!12047 = !DILocation(line: 5592, column: 6, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5592, column: 6)
!12049 = !DILocation(line: 5592, column: 13, scope: !12048)
!12050 = !DILocation(line: 5592, column: 6, scope: !11735)
!12051 = !DILocation(line: 5593, column: 3, scope: !12048)
!12052 = !DILocation(line: 5594, column: 19, scope: !11735)
!12053 = !DILocation(line: 5594, column: 11, scope: !11735)
!12054 = !DILocation(line: 5594, column: 9, scope: !11735)
!12055 = !DILocation(line: 5595, column: 6, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5595, column: 6)
!12057 = !DILocation(line: 5595, column: 13, scope: !12056)
!12058 = !DILocation(line: 5595, column: 6, scope: !11735)
!12059 = !DILocation(line: 5596, column: 3, scope: !12056)
!12060 = !DILocation(line: 5597, column: 19, scope: !11735)
!12061 = !DILocation(line: 5597, column: 11, scope: !11735)
!12062 = !DILocation(line: 5597, column: 9, scope: !11735)
!12063 = !DILocation(line: 5598, column: 6, scope: !12064)
!12064 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5598, column: 6)
!12065 = !DILocation(line: 5598, column: 13, scope: !12064)
!12066 = !DILocation(line: 5598, column: 6, scope: !11735)
!12067 = !DILocation(line: 5599, column: 3, scope: !12064)
!12068 = !DILocation(line: 5600, column: 19, scope: !11735)
!12069 = !DILocation(line: 5600, column: 11, scope: !11735)
!12070 = !DILocation(line: 5600, column: 9, scope: !11735)
!12071 = !DILocation(line: 5601, column: 6, scope: !12072)
!12072 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5601, column: 6)
!12073 = !DILocation(line: 5601, column: 13, scope: !12072)
!12074 = !DILocation(line: 5601, column: 6, scope: !11735)
!12075 = !DILocation(line: 5602, column: 3, scope: !12072)
!12076 = !DILocation(line: 5605, column: 19, scope: !11735)
!12077 = !DILocation(line: 5605, column: 11, scope: !11735)
!12078 = !DILocation(line: 5605, column: 9, scope: !11735)
!12079 = !DILocation(line: 5607, column: 6, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5607, column: 6)
!12081 = !DILocation(line: 5607, column: 13, scope: !12080)
!12082 = !DILocation(line: 5607, column: 6, scope: !11735)
!12083 = !DILocation(line: 5608, column: 3, scope: !12080)
!12084 = !DILocation(line: 5611, column: 19, scope: !11735)
!12085 = !DILocation(line: 5611, column: 11, scope: !11735)
!12086 = !DILocation(line: 5611, column: 9, scope: !11735)
!12087 = !DILocation(line: 5612, column: 6, scope: !12088)
!12088 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5612, column: 6)
!12089 = !DILocation(line: 5612, column: 13, scope: !12088)
!12090 = !DILocation(line: 5612, column: 6, scope: !11735)
!12091 = !DILocation(line: 5613, column: 3, scope: !12088)
!12092 = !DILocation(line: 5616, column: 10, scope: !11735)
!12093 = !DILocation(line: 5616, column: 17, scope: !11735)
!12094 = !DILocation(line: 5616, column: 23, scope: !11735)
!12095 = !DILocation(line: 5616, column: 2, scope: !11735)
!12096 = !DILocation(line: 5618, column: 22, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5616, column: 35)
!12098 = !DILocation(line: 5618, column: 12, scope: !12097)
!12099 = !DILocation(line: 5618, column: 10, scope: !12097)
!12100 = !DILocation(line: 5619, column: 3, scope: !12097)
!12101 = !DILocation(line: 5621, column: 22, scope: !12097)
!12102 = !DILocation(line: 5621, column: 12, scope: !12097)
!12103 = !DILocation(line: 5621, column: 10, scope: !12097)
!12104 = !DILocation(line: 5622, column: 3, scope: !12097)
!12105 = !DILocation(line: 5625, column: 22, scope: !12097)
!12106 = !DILocation(line: 5625, column: 12, scope: !12097)
!12107 = !DILocation(line: 5625, column: 10, scope: !12097)
!12108 = !DILocation(line: 5626, column: 3, scope: !12097)
!12109 = !DILocation(line: 5628, column: 23, scope: !12097)
!12110 = !DILocation(line: 5628, column: 12, scope: !12097)
!12111 = !DILocation(line: 5628, column: 10, scope: !12097)
!12112 = !DILocation(line: 5629, column: 3, scope: !12097)
!12113 = !DILocation(line: 5631, column: 23, scope: !12097)
!12114 = !DILocation(line: 5631, column: 12, scope: !12097)
!12115 = !DILocation(line: 5631, column: 10, scope: !12097)
!12116 = !DILocation(line: 5632, column: 3, scope: !12097)
!12117 = !DILocation(line: 5634, column: 10, scope: !12097)
!12118 = !DILocation(line: 5635, column: 3, scope: !12097)
!12119 = !DILocation(line: 5637, column: 6, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5637, column: 6)
!12121 = !DILocation(line: 5637, column: 13, scope: !12120)
!12122 = !DILocation(line: 5637, column: 6, scope: !11735)
!12123 = !DILocation(line: 5638, column: 3, scope: !12120)
!12124 = !DILocation(line: 5641, column: 19, scope: !11735)
!12125 = !DILocation(line: 5641, column: 11, scope: !11735)
!12126 = !DILocation(line: 5641, column: 9, scope: !11735)
!12127 = !DILocation(line: 5642, column: 6, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5642, column: 6)
!12129 = !DILocation(line: 5642, column: 13, scope: !12128)
!12130 = !DILocation(line: 5642, column: 6, scope: !11735)
!12131 = !DILocation(line: 5643, column: 3, scope: !12128)
!12132 = !DILocation(line: 5648, column: 28, scope: !11735)
!12133 = !DILocation(line: 5648, column: 35, scope: !11735)
!12134 = !DILocation(line: 5648, column: 42, scope: !11735)
!12135 = !DILocation(line: 5648, column: 11, scope: !11735)
!12136 = !DILocation(line: 5648, column: 9, scope: !11735)
!12137 = !DILocation(line: 5649, column: 6, scope: !12138)
!12138 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5649, column: 6)
!12139 = !DILocation(line: 5649, column: 13, scope: !12138)
!12140 = !DILocation(line: 5649, column: 6, scope: !11735)
!12141 = !DILocation(line: 5650, column: 3, scope: !12138)
!12142 = !DILocation(line: 5653, column: 24, scope: !11735)
!12143 = !DILocation(line: 5653, column: 11, scope: !11735)
!12144 = !DILocation(line: 5653, column: 9, scope: !11735)
!12145 = !DILocation(line: 5654, column: 6, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5654, column: 6)
!12147 = !DILocation(line: 5654, column: 13, scope: !12146)
!12148 = !DILocation(line: 5654, column: 6, scope: !11735)
!12149 = !DILocation(line: 5655, column: 3, scope: !12146)
!12150 = !DILocation(line: 5656, column: 19, scope: !11735)
!12151 = !DILocation(line: 5656, column: 11, scope: !11735)
!12152 = !DILocation(line: 5656, column: 9, scope: !11735)
!12153 = !DILocation(line: 5657, column: 6, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5657, column: 6)
!12155 = !DILocation(line: 5657, column: 13, scope: !12154)
!12156 = !DILocation(line: 5657, column: 6, scope: !11735)
!12157 = !DILocation(line: 5658, column: 3, scope: !12154)
!12158 = !DILocation(line: 5659, column: 19, scope: !11735)
!12159 = !DILocation(line: 5659, column: 11, scope: !11735)
!12160 = !DILocation(line: 5659, column: 9, scope: !11735)
!12161 = !DILocation(line: 5660, column: 6, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5660, column: 6)
!12163 = !DILocation(line: 5660, column: 13, scope: !12162)
!12164 = !DILocation(line: 5660, column: 6, scope: !11735)
!12165 = !DILocation(line: 5661, column: 3, scope: !12162)
!12166 = !DILocation(line: 5662, column: 19, scope: !11735)
!12167 = !DILocation(line: 5662, column: 11, scope: !11735)
!12168 = !DILocation(line: 5662, column: 9, scope: !11735)
!12169 = !DILocation(line: 5663, column: 6, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5663, column: 6)
!12171 = !DILocation(line: 5663, column: 13, scope: !12170)
!12172 = !DILocation(line: 5663, column: 6, scope: !11735)
!12173 = !DILocation(line: 5664, column: 3, scope: !12170)
!12174 = !DILocation(line: 5667, column: 23, scope: !11735)
!12175 = !DILocation(line: 5667, column: 11, scope: !11735)
!12176 = !DILocation(line: 5667, column: 9, scope: !11735)
!12177 = !DILocation(line: 5670, column: 6, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5670, column: 6)
!12179 = !DILocation(line: 5670, column: 13, scope: !12178)
!12180 = !DILocation(line: 5670, column: 6, scope: !11735)
!12181 = !DILocation(line: 5671, column: 3, scope: !12178)
!12182 = !DILocation(line: 5670, column: 15, scope: !12178)
!12183 = !DILabel(scope: !11735, name: "error", file: !3, line: 5676)
!12184 = !DILocation(line: 5676, column: 1, scope: !11735)
!12185 = !DILocation(line: 5677, column: 6, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !11735, file: !3, line: 5677, column: 6)
!12187 = !DILocation(line: 5677, column: 13, scope: !12186)
!12188 = !DILocation(line: 5677, column: 6, scope: !11735)
!12189 = !DILocation(line: 5678, column: 3, scope: !12186)
!12190 = !DILocation(line: 5679, column: 9, scope: !11735)
!12191 = !DILocation(line: 5679, column: 2, scope: !11735)
!12192 = distinct !DISubprogram(name: "set_dvbt", scope: !3, file: !3, line: 3717, type: !11736, scopeLine: 3719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!12193 = !DILocalVariable(name: "state", arg: 1, scope: !12192, file: !3, line: 3717, type: !4562)
!12194 = !DILocation(line: 3717, column: 40, scope: !12192)
!12195 = !DILocalVariable(name: "intermediate_freqk_hz", arg: 2, scope: !12192, file: !3, line: 3717, type: !408)
!12196 = !DILocation(line: 3717, column: 51, scope: !12192)
!12197 = !DILocalVariable(name: "tuner_freq_offset", arg: 3, scope: !12192, file: !3, line: 3718, type: !772)
!12198 = !DILocation(line: 3718, column: 10, scope: !12192)
!12199 = !DILocalVariable(name: "cmd_result", scope: !12192, file: !3, line: 3720, type: !408)
!12200 = !DILocation(line: 3720, column: 6, scope: !12192)
!12201 = !DILocalVariable(name: "transmission_params", scope: !12192, file: !3, line: 3721, type: !408)
!12202 = !DILocation(line: 3721, column: 6, scope: !12192)
!12203 = !DILocalVariable(name: "operation_mode", scope: !12192, file: !3, line: 3722, type: !408)
!12204 = !DILocation(line: 3722, column: 6, scope: !12192)
!12205 = !DILocalVariable(name: "iqm_rc_rate_ofs", scope: !12192, file: !3, line: 3723, type: !411)
!12206 = !DILocation(line: 3723, column: 6, scope: !12192)
!12207 = !DILocalVariable(name: "bandwidth", scope: !12192, file: !3, line: 3724, type: !411)
!12208 = !DILocation(line: 3724, column: 6, scope: !12192)
!12209 = !DILocalVariable(name: "param1", scope: !12192, file: !3, line: 3725, type: !408)
!12210 = !DILocation(line: 3725, column: 6, scope: !12192)
!12211 = !DILocalVariable(name: "status", scope: !12192, file: !3, line: 3726, type: !405)
!12212 = !DILocation(line: 3726, column: 6, scope: !12192)
!12213 = !DILocation(line: 3728, column: 2, scope: !12192)
!12214 = !DILocation(line: 3728, column: 2, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12216, file: !3, line: 3728, column: 2)
!12216 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3728, column: 2)
!12217 = !DILocation(line: 3728, column: 2, scope: !12216)
!12218 = !DILocation(line: 3731, column: 23, scope: !12192)
!12219 = !DILocation(line: 3731, column: 11, scope: !12192)
!12220 = !DILocation(line: 3731, column: 9, scope: !12192)
!12221 = !DILocation(line: 3734, column: 6, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3734, column: 6)
!12223 = !DILocation(line: 3734, column: 13, scope: !12222)
!12224 = !DILocation(line: 3734, column: 6, scope: !12192)
!12225 = !DILocation(line: 3735, column: 3, scope: !12222)
!12226 = !DILocation(line: 3738, column: 19, scope: !12192)
!12227 = !DILocation(line: 3738, column: 11, scope: !12192)
!12228 = !DILocation(line: 3738, column: 9, scope: !12192)
!12229 = !DILocation(line: 3739, column: 6, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3739, column: 6)
!12231 = !DILocation(line: 3739, column: 13, scope: !12230)
!12232 = !DILocation(line: 3739, column: 6, scope: !12192)
!12233 = !DILocation(line: 3740, column: 3, scope: !12230)
!12234 = !DILocation(line: 3743, column: 19, scope: !12192)
!12235 = !DILocation(line: 3743, column: 11, scope: !12192)
!12236 = !DILocation(line: 3743, column: 9, scope: !12192)
!12237 = !DILocation(line: 3744, column: 6, scope: !12238)
!12238 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3744, column: 6)
!12239 = !DILocation(line: 3744, column: 13, scope: !12238)
!12240 = !DILocation(line: 3744, column: 6, scope: !12192)
!12241 = !DILocation(line: 3745, column: 3, scope: !12238)
!12242 = !DILocation(line: 3746, column: 19, scope: !12192)
!12243 = !DILocation(line: 3746, column: 11, scope: !12192)
!12244 = !DILocation(line: 3746, column: 9, scope: !12192)
!12245 = !DILocation(line: 3747, column: 6, scope: !12246)
!12246 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3747, column: 6)
!12247 = !DILocation(line: 3747, column: 13, scope: !12246)
!12248 = !DILocation(line: 3747, column: 6, scope: !12192)
!12249 = !DILocation(line: 3748, column: 3, scope: !12246)
!12250 = !DILocation(line: 3752, column: 19, scope: !12192)
!12251 = !DILocation(line: 3752, column: 11, scope: !12192)
!12252 = !DILocation(line: 3752, column: 9, scope: !12192)
!12253 = !DILocation(line: 3753, column: 6, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3753, column: 6)
!12255 = !DILocation(line: 3753, column: 13, scope: !12254)
!12256 = !DILocation(line: 3753, column: 6, scope: !12192)
!12257 = !DILocation(line: 3754, column: 3, scope: !12254)
!12258 = !DILocation(line: 3759, column: 10, scope: !12192)
!12259 = !DILocation(line: 3759, column: 17, scope: !12192)
!12260 = !DILocation(line: 3759, column: 23, scope: !12192)
!12261 = !DILocation(line: 3759, column: 2, scope: !12192)
!12262 = !DILocation(line: 3759, column: 42, scope: !12192)
!12263 = !DILocation(line: 3762, column: 18, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3759, column: 42)
!12265 = !DILocation(line: 3762, column: 3, scope: !12264)
!12266 = !DILocation(line: 3765, column: 23, scope: !12264)
!12267 = !DILocation(line: 3766, column: 3, scope: !12264)
!12268 = !DILocation(line: 3768, column: 23, scope: !12264)
!12269 = !DILocation(line: 3769, column: 3, scope: !12264)
!12270 = !DILocation(line: 3773, column: 10, scope: !12192)
!12271 = !DILocation(line: 3773, column: 17, scope: !12192)
!12272 = !DILocation(line: 3773, column: 23, scope: !12192)
!12273 = !DILocation(line: 3773, column: 2, scope: !12192)
!12274 = !DILocation(line: 3773, column: 39, scope: !12192)
!12275 = !DILocation(line: 3776, column: 18, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3773, column: 39)
!12277 = !DILocation(line: 3776, column: 3, scope: !12276)
!12278 = !DILocation(line: 3779, column: 23, scope: !12276)
!12279 = !DILocation(line: 3780, column: 3, scope: !12276)
!12280 = !DILocation(line: 3782, column: 23, scope: !12276)
!12281 = !DILocation(line: 3783, column: 3, scope: !12276)
!12282 = !DILocation(line: 3785, column: 23, scope: !12276)
!12283 = !DILocation(line: 3786, column: 3, scope: !12276)
!12284 = !DILocation(line: 3788, column: 23, scope: !12276)
!12285 = !DILocation(line: 3789, column: 3, scope: !12276)
!12286 = !DILocation(line: 3793, column: 10, scope: !12192)
!12287 = !DILocation(line: 3793, column: 17, scope: !12192)
!12288 = !DILocation(line: 3793, column: 23, scope: !12192)
!12289 = !DILocation(line: 3793, column: 2, scope: !12192)
!12290 = !DILocation(line: 3793, column: 34, scope: !12192)
!12291 = !DILocation(line: 3797, column: 18, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3793, column: 34)
!12293 = !DILocation(line: 3797, column: 3, scope: !12292)
!12294 = !DILocation(line: 3802, column: 23, scope: !12292)
!12295 = !DILocation(line: 3803, column: 3, scope: !12292)
!12296 = !DILocation(line: 3805, column: 23, scope: !12292)
!12297 = !DILocation(line: 3806, column: 3, scope: !12292)
!12298 = !DILocation(line: 3808, column: 23, scope: !12292)
!12299 = !DILocation(line: 3809, column: 3, scope: !12292)
!12300 = !DILocation(line: 3814, column: 10, scope: !12192)
!12301 = !DILocation(line: 3814, column: 17, scope: !12192)
!12302 = !DILocation(line: 3814, column: 23, scope: !12192)
!12303 = !DILocation(line: 3814, column: 2, scope: !12192)
!12304 = !DILocation(line: 3814, column: 35, scope: !12192)
!12305 = !DILocation(line: 3817, column: 18, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3814, column: 35)
!12307 = !DILocation(line: 3817, column: 3, scope: !12306)
!12308 = !DILocation(line: 3820, column: 23, scope: !12306)
!12309 = !DILocation(line: 3821, column: 3, scope: !12306)
!12310 = !DILocation(line: 3823, column: 23, scope: !12306)
!12311 = !DILocation(line: 3824, column: 3, scope: !12306)
!12312 = !DILocation(line: 3826, column: 23, scope: !12306)
!12313 = !DILocation(line: 3827, column: 3, scope: !12306)
!12314 = !DILocation(line: 3850, column: 22, scope: !12192)
!12315 = !DILocation(line: 3851, column: 19, scope: !12192)
!12316 = !DILocation(line: 3851, column: 11, scope: !12192)
!12317 = !DILocation(line: 3851, column: 9, scope: !12192)
!12318 = !DILocation(line: 3852, column: 6, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3852, column: 6)
!12320 = !DILocation(line: 3852, column: 13, scope: !12319)
!12321 = !DILocation(line: 3852, column: 6, scope: !12192)
!12322 = !DILocation(line: 3853, column: 3, scope: !12319)
!12323 = !DILocation(line: 3857, column: 10, scope: !12192)
!12324 = !DILocation(line: 3857, column: 17, scope: !12192)
!12325 = !DILocation(line: 3857, column: 23, scope: !12192)
!12326 = !DILocation(line: 3857, column: 2, scope: !12192)
!12327 = !DILocation(line: 3857, column: 37, scope: !12192)
!12328 = !DILocation(line: 3860, column: 18, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3857, column: 37)
!12330 = !DILocation(line: 3860, column: 3, scope: !12329)
!12331 = !DILocation(line: 3863, column: 23, scope: !12329)
!12332 = !DILocation(line: 3864, column: 3, scope: !12329)
!12333 = !DILocation(line: 3866, column: 23, scope: !12329)
!12334 = !DILocation(line: 3867, column: 3, scope: !12329)
!12335 = !DILocation(line: 3869, column: 23, scope: !12329)
!12336 = !DILocation(line: 3870, column: 3, scope: !12329)
!12337 = !DILocation(line: 3872, column: 23, scope: !12329)
!12338 = !DILocation(line: 3873, column: 3, scope: !12329)
!12339 = !DILocation(line: 3875, column: 23, scope: !12329)
!12340 = !DILocation(line: 3876, column: 3, scope: !12329)
!12341 = !DILocation(line: 3892, column: 10, scope: !12192)
!12342 = !DILocation(line: 3892, column: 17, scope: !12192)
!12343 = !DILocation(line: 3892, column: 23, scope: !12192)
!12344 = !DILocation(line: 3892, column: 2, scope: !12192)
!12345 = !DILocation(line: 3894, column: 3, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3892, column: 37)
!12347 = !DILocation(line: 3894, column: 10, scope: !12346)
!12348 = !DILocation(line: 3894, column: 16, scope: !12346)
!12349 = !DILocation(line: 3894, column: 29, scope: !12346)
!12350 = !DILocation(line: 3897, column: 13, scope: !12346)
!12351 = !DILocation(line: 3898, column: 20, scope: !12346)
!12352 = !DILocation(line: 3898, column: 12, scope: !12346)
!12353 = !DILocation(line: 3898, column: 10, scope: !12346)
!12354 = !DILocation(line: 3900, column: 7, scope: !12355)
!12355 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3900, column: 7)
!12356 = !DILocation(line: 3900, column: 14, scope: !12355)
!12357 = !DILocation(line: 3900, column: 7, scope: !12346)
!12358 = !DILocation(line: 3901, column: 4, scope: !12355)
!12359 = !DILocation(line: 3903, column: 20, scope: !12346)
!12360 = !DILocation(line: 3903, column: 12, scope: !12346)
!12361 = !DILocation(line: 3903, column: 10, scope: !12346)
!12362 = !DILocation(line: 3905, column: 7, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3905, column: 7)
!12364 = !DILocation(line: 3905, column: 14, scope: !12363)
!12365 = !DILocation(line: 3905, column: 7, scope: !12346)
!12366 = !DILocation(line: 3906, column: 4, scope: !12363)
!12367 = !DILocation(line: 3907, column: 20, scope: !12346)
!12368 = !DILocation(line: 3907, column: 12, scope: !12346)
!12369 = !DILocation(line: 3907, column: 10, scope: !12346)
!12370 = !DILocation(line: 3909, column: 7, scope: !12371)
!12371 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3909, column: 7)
!12372 = !DILocation(line: 3909, column: 14, scope: !12371)
!12373 = !DILocation(line: 3909, column: 7, scope: !12346)
!12374 = !DILocation(line: 3910, column: 4, scope: !12371)
!12375 = !DILocation(line: 3911, column: 20, scope: !12346)
!12376 = !DILocation(line: 3911, column: 12, scope: !12346)
!12377 = !DILocation(line: 3911, column: 10, scope: !12346)
!12378 = !DILocation(line: 3913, column: 7, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3913, column: 7)
!12380 = !DILocation(line: 3913, column: 14, scope: !12379)
!12381 = !DILocation(line: 3913, column: 7, scope: !12346)
!12382 = !DILocation(line: 3914, column: 4, scope: !12379)
!12383 = !DILocation(line: 3915, column: 20, scope: !12346)
!12384 = !DILocation(line: 3915, column: 12, scope: !12346)
!12385 = !DILocation(line: 3915, column: 10, scope: !12346)
!12386 = !DILocation(line: 3917, column: 7, scope: !12387)
!12387 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3917, column: 7)
!12388 = !DILocation(line: 3917, column: 14, scope: !12387)
!12389 = !DILocation(line: 3917, column: 7, scope: !12346)
!12390 = !DILocation(line: 3918, column: 4, scope: !12387)
!12391 = !DILocation(line: 3919, column: 3, scope: !12346)
!12392 = !DILocation(line: 3921, column: 13, scope: !12346)
!12393 = !DILocation(line: 3922, column: 20, scope: !12346)
!12394 = !DILocation(line: 3922, column: 12, scope: !12346)
!12395 = !DILocation(line: 3922, column: 10, scope: !12346)
!12396 = !DILocation(line: 3924, column: 7, scope: !12397)
!12397 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3924, column: 7)
!12398 = !DILocation(line: 3924, column: 14, scope: !12397)
!12399 = !DILocation(line: 3924, column: 7, scope: !12346)
!12400 = !DILocation(line: 3925, column: 4, scope: !12397)
!12401 = !DILocation(line: 3927, column: 20, scope: !12346)
!12402 = !DILocation(line: 3927, column: 12, scope: !12346)
!12403 = !DILocation(line: 3927, column: 10, scope: !12346)
!12404 = !DILocation(line: 3929, column: 7, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3929, column: 7)
!12406 = !DILocation(line: 3929, column: 14, scope: !12405)
!12407 = !DILocation(line: 3929, column: 7, scope: !12346)
!12408 = !DILocation(line: 3930, column: 4, scope: !12405)
!12409 = !DILocation(line: 3931, column: 20, scope: !12346)
!12410 = !DILocation(line: 3931, column: 12, scope: !12346)
!12411 = !DILocation(line: 3931, column: 10, scope: !12346)
!12412 = !DILocation(line: 3933, column: 7, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3933, column: 7)
!12414 = !DILocation(line: 3933, column: 14, scope: !12413)
!12415 = !DILocation(line: 3933, column: 7, scope: !12346)
!12416 = !DILocation(line: 3934, column: 4, scope: !12413)
!12417 = !DILocation(line: 3935, column: 20, scope: !12346)
!12418 = !DILocation(line: 3935, column: 12, scope: !12346)
!12419 = !DILocation(line: 3935, column: 10, scope: !12346)
!12420 = !DILocation(line: 3937, column: 7, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3937, column: 7)
!12422 = !DILocation(line: 3937, column: 14, scope: !12421)
!12423 = !DILocation(line: 3937, column: 7, scope: !12346)
!12424 = !DILocation(line: 3938, column: 4, scope: !12421)
!12425 = !DILocation(line: 3939, column: 20, scope: !12346)
!12426 = !DILocation(line: 3939, column: 12, scope: !12346)
!12427 = !DILocation(line: 3939, column: 10, scope: !12346)
!12428 = !DILocation(line: 3941, column: 7, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3941, column: 7)
!12430 = !DILocation(line: 3941, column: 14, scope: !12429)
!12431 = !DILocation(line: 3941, column: 7, scope: !12346)
!12432 = !DILocation(line: 3942, column: 4, scope: !12429)
!12433 = !DILocation(line: 3943, column: 3, scope: !12346)
!12434 = !DILocation(line: 3945, column: 13, scope: !12346)
!12435 = !DILocation(line: 3946, column: 20, scope: !12346)
!12436 = !DILocation(line: 3946, column: 12, scope: !12346)
!12437 = !DILocation(line: 3946, column: 10, scope: !12346)
!12438 = !DILocation(line: 3948, column: 7, scope: !12439)
!12439 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3948, column: 7)
!12440 = !DILocation(line: 3948, column: 14, scope: !12439)
!12441 = !DILocation(line: 3948, column: 7, scope: !12346)
!12442 = !DILocation(line: 3949, column: 4, scope: !12439)
!12443 = !DILocation(line: 3951, column: 20, scope: !12346)
!12444 = !DILocation(line: 3951, column: 12, scope: !12346)
!12445 = !DILocation(line: 3951, column: 10, scope: !12346)
!12446 = !DILocation(line: 3953, column: 7, scope: !12447)
!12447 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3953, column: 7)
!12448 = !DILocation(line: 3953, column: 14, scope: !12447)
!12449 = !DILocation(line: 3953, column: 7, scope: !12346)
!12450 = !DILocation(line: 3954, column: 4, scope: !12447)
!12451 = !DILocation(line: 3955, column: 20, scope: !12346)
!12452 = !DILocation(line: 3955, column: 12, scope: !12346)
!12453 = !DILocation(line: 3955, column: 10, scope: !12346)
!12454 = !DILocation(line: 3957, column: 7, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3957, column: 7)
!12456 = !DILocation(line: 3957, column: 14, scope: !12455)
!12457 = !DILocation(line: 3957, column: 7, scope: !12346)
!12458 = !DILocation(line: 3958, column: 4, scope: !12455)
!12459 = !DILocation(line: 3959, column: 20, scope: !12346)
!12460 = !DILocation(line: 3959, column: 12, scope: !12346)
!12461 = !DILocation(line: 3959, column: 10, scope: !12346)
!12462 = !DILocation(line: 3961, column: 7, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3961, column: 7)
!12464 = !DILocation(line: 3961, column: 14, scope: !12463)
!12465 = !DILocation(line: 3961, column: 7, scope: !12346)
!12466 = !DILocation(line: 3962, column: 4, scope: !12463)
!12467 = !DILocation(line: 3963, column: 20, scope: !12346)
!12468 = !DILocation(line: 3963, column: 12, scope: !12346)
!12469 = !DILocation(line: 3963, column: 10, scope: !12346)
!12470 = !DILocation(line: 3965, column: 7, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 3965, column: 7)
!12472 = !DILocation(line: 3965, column: 14, scope: !12471)
!12473 = !DILocation(line: 3965, column: 7, scope: !12346)
!12474 = !DILocation(line: 3966, column: 4, scope: !12471)
!12475 = !DILocation(line: 3967, column: 3, scope: !12346)
!12476 = !DILocation(line: 3969, column: 10, scope: !12346)
!12477 = !DILocation(line: 3970, column: 3, scope: !12346)
!12478 = !DILocation(line: 3973, column: 6, scope: !12479)
!12479 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 3973, column: 6)
!12480 = !DILocation(line: 3973, column: 22, scope: !12479)
!12481 = !DILocation(line: 3973, column: 6, scope: !12192)
!12482 = !DILocation(line: 3987, column: 8, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 3973, column: 28)
!12484 = !DILocation(line: 3987, column: 15, scope: !12483)
!12485 = !DILocation(line: 3987, column: 32, scope: !12483)
!12486 = !DILocation(line: 3988, column: 13, scope: !12483)
!12487 = !DILocation(line: 3988, column: 19, scope: !12483)
!12488 = !DILocation(line: 3986, column: 21, scope: !12483)
!12489 = !DILocation(line: 3986, column: 19, scope: !12483)
!12490 = !DILocation(line: 3990, column: 8, scope: !12491)
!12491 = distinct !DILexicalBlock(scope: !12483, file: !3, line: 3990, column: 7)
!12492 = !DILocation(line: 3990, column: 24, scope: !12491)
!12493 = !DILocation(line: 3990, column: 33, scope: !12491)
!12494 = !DILocation(line: 3990, column: 7, scope: !12483)
!12495 = !DILocation(line: 3991, column: 20, scope: !12491)
!12496 = !DILocation(line: 3991, column: 4, scope: !12491)
!12497 = !DILocation(line: 3992, column: 21, scope: !12483)
!12498 = !DILocation(line: 3992, column: 37, scope: !12483)
!12499 = !DILocation(line: 3992, column: 19, scope: !12483)
!12500 = !DILocation(line: 3994, column: 21, scope: !12483)
!12501 = !DILocation(line: 3994, column: 37, scope: !12483)
!12502 = !DILocation(line: 3994, column: 19, scope: !12483)
!12503 = !DILocation(line: 3995, column: 2, scope: !12483)
!12504 = !DILocation(line: 3997, column: 18, scope: !12192)
!12505 = !DILocation(line: 4000, column: 19, scope: !12192)
!12506 = !DILocation(line: 4000, column: 49, scope: !12192)
!12507 = !DILocation(line: 4000, column: 11, scope: !12192)
!12508 = !DILocation(line: 4000, column: 9, scope: !12192)
!12509 = !DILocation(line: 4001, column: 6, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 4001, column: 6)
!12511 = !DILocation(line: 4001, column: 13, scope: !12510)
!12512 = !DILocation(line: 4001, column: 6, scope: !12192)
!12513 = !DILocation(line: 4002, column: 3, scope: !12510)
!12514 = !DILocation(line: 4011, column: 33, scope: !12192)
!12515 = !DILocation(line: 4011, column: 40, scope: !12192)
!12516 = !DILocation(line: 4012, column: 12, scope: !12192)
!12517 = !DILocation(line: 4011, column: 11, scope: !12192)
!12518 = !DILocation(line: 4011, column: 9, scope: !12192)
!12519 = !DILocation(line: 4013, column: 6, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 4013, column: 6)
!12521 = !DILocation(line: 4013, column: 13, scope: !12520)
!12522 = !DILocation(line: 4013, column: 6, scope: !12192)
!12523 = !DILocation(line: 4014, column: 3, scope: !12520)
!12524 = !DILocation(line: 4019, column: 19, scope: !12192)
!12525 = !DILocation(line: 4019, column: 11, scope: !12192)
!12526 = !DILocation(line: 4019, column: 9, scope: !12192)
!12527 = !DILocation(line: 4020, column: 6, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 4020, column: 6)
!12529 = !DILocation(line: 4020, column: 13, scope: !12528)
!12530 = !DILocation(line: 4020, column: 6, scope: !12192)
!12531 = !DILocation(line: 4021, column: 3, scope: !12528)
!12532 = !DILocation(line: 4024, column: 19, scope: !12192)
!12533 = !DILocation(line: 4024, column: 11, scope: !12192)
!12534 = !DILocation(line: 4024, column: 9, scope: !12192)
!12535 = !DILocation(line: 4025, column: 6, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 4025, column: 6)
!12537 = !DILocation(line: 4025, column: 13, scope: !12536)
!12538 = !DILocation(line: 4025, column: 6, scope: !12192)
!12539 = !DILocation(line: 4026, column: 3, scope: !12536)
!12540 = !DILocation(line: 4027, column: 19, scope: !12192)
!12541 = !DILocation(line: 4027, column: 11, scope: !12192)
!12542 = !DILocation(line: 4027, column: 9, scope: !12192)
!12543 = !DILocation(line: 4028, column: 6, scope: !12544)
!12544 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 4028, column: 6)
!12545 = !DILocation(line: 4028, column: 13, scope: !12544)
!12546 = !DILocation(line: 4028, column: 6, scope: !12192)
!12547 = !DILocation(line: 4029, column: 3, scope: !12544)
!12548 = !DILocation(line: 4032, column: 23, scope: !12192)
!12549 = !DILocation(line: 4032, column: 11, scope: !12192)
!12550 = !DILocation(line: 4032, column: 9, scope: !12192)
!12551 = !DILocation(line: 4035, column: 6, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 4035, column: 6)
!12553 = !DILocation(line: 4035, column: 13, scope: !12552)
!12554 = !DILocation(line: 4035, column: 6, scope: !12192)
!12555 = !DILocation(line: 4036, column: 3, scope: !12552)
!12556 = !DILocation(line: 4039, column: 9, scope: !12192)
!12557 = !DILocation(line: 4044, column: 27, scope: !12192)
!12558 = !DILocation(line: 4045, column: 8, scope: !12192)
!12559 = !DILocation(line: 4045, column: 29, scope: !12192)
!12560 = !DILocation(line: 4044, column: 11, scope: !12192)
!12561 = !DILocation(line: 4044, column: 9, scope: !12192)
!12562 = !DILocation(line: 4046, column: 6, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 4046, column: 6)
!12564 = !DILocation(line: 4046, column: 13, scope: !12563)
!12565 = !DILocation(line: 4046, column: 6, scope: !12192)
!12566 = !DILocation(line: 4047, column: 3, scope: !12563)
!12567 = !DILocation(line: 4049, column: 7, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 4049, column: 6)
!12569 = !DILocation(line: 4049, column: 14, scope: !12568)
!12570 = !DILocation(line: 4049, column: 6, scope: !12192)
!12571 = !DILocation(line: 4050, column: 36, scope: !12568)
!12572 = !DILocation(line: 4050, column: 44, scope: !12568)
!12573 = !DILocation(line: 4050, column: 51, scope: !12568)
!12574 = !DILocation(line: 4050, column: 12, scope: !12568)
!12575 = !DILocation(line: 4050, column: 10, scope: !12568)
!12576 = !DILocation(line: 4050, column: 3, scope: !12568)
!12577 = !DILabel(scope: !12192, name: "error", file: !3, line: 4051)
!12578 = !DILocation(line: 4051, column: 1, scope: !12192)
!12579 = !DILocation(line: 4052, column: 6, scope: !12580)
!12580 = distinct !DILexicalBlock(scope: !12192, file: !3, line: 4052, column: 6)
!12581 = !DILocation(line: 4052, column: 13, scope: !12580)
!12582 = !DILocation(line: 4052, column: 6, scope: !12192)
!12583 = !DILocation(line: 4053, column: 3, scope: !12580)
!12584 = !DILocation(line: 4055, column: 9, scope: !12192)
!12585 = !DILocation(line: 4055, column: 2, scope: !12192)
!12586 = distinct !DISubprogram(name: "dvbt_start", scope: !3, file: !3, line: 3680, type: !5239, scopeLine: 3681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!12587 = !DILocalVariable(name: "state", arg: 1, scope: !12586, file: !3, line: 3680, type: !4562)
!12588 = !DILocation(line: 3680, column: 42, scope: !12586)
!12589 = !DILocalVariable(name: "param1", scope: !12586, file: !3, line: 3682, type: !408)
!12590 = !DILocation(line: 3682, column: 6, scope: !12586)
!12591 = !DILocalVariable(name: "status", scope: !12586, file: !3, line: 3683, type: !405)
!12592 = !DILocation(line: 3683, column: 6, scope: !12586)
!12593 = !DILocation(line: 3686, column: 2, scope: !12586)
!12594 = !DILocation(line: 3686, column: 2, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12596, file: !3, line: 3686, column: 2)
!12596 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 3686, column: 2)
!12597 = !DILocation(line: 3686, column: 2, scope: !12596)
!12598 = !DILocation(line: 3689, column: 9, scope: !12586)
!12599 = !DILocation(line: 3690, column: 27, scope: !12586)
!12600 = !DILocation(line: 3691, column: 44, scope: !12586)
!12601 = !DILocation(line: 3690, column: 11, scope: !12586)
!12602 = !DILocation(line: 3690, column: 9, scope: !12586)
!12603 = !DILocation(line: 3693, column: 6, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 3693, column: 6)
!12605 = !DILocation(line: 3693, column: 13, scope: !12604)
!12606 = !DILocation(line: 3693, column: 6, scope: !12586)
!12607 = !DILocation(line: 3694, column: 3, scope: !12604)
!12608 = !DILocation(line: 3696, column: 24, scope: !12586)
!12609 = !DILocation(line: 3696, column: 11, scope: !12586)
!12610 = !DILocation(line: 3696, column: 9, scope: !12586)
!12611 = !DILocation(line: 3697, column: 6, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 3697, column: 6)
!12613 = !DILocation(line: 3697, column: 13, scope: !12612)
!12614 = !DILocation(line: 3697, column: 6, scope: !12586)
!12615 = !DILocation(line: 3698, column: 3, scope: !12612)
!12616 = !DILocation(line: 3699, column: 19, scope: !12586)
!12617 = !DILocation(line: 3699, column: 11, scope: !12586)
!12618 = !DILocation(line: 3699, column: 9, scope: !12586)
!12619 = !DILocation(line: 3700, column: 6, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 3700, column: 6)
!12621 = !DILocation(line: 3700, column: 13, scope: !12620)
!12622 = !DILocation(line: 3700, column: 6, scope: !12586)
!12623 = !DILocation(line: 3701, column: 3, scope: !12620)
!12624 = !DILocation(line: 3700, column: 15, scope: !12620)
!12625 = !DILabel(scope: !12586, name: "error", file: !3, line: 3702)
!12626 = !DILocation(line: 3702, column: 1, scope: !12586)
!12627 = !DILocation(line: 3703, column: 6, scope: !12628)
!12628 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 3703, column: 6)
!12629 = !DILocation(line: 3703, column: 13, scope: !12628)
!12630 = !DILocation(line: 3703, column: 6, scope: !12586)
!12631 = !DILocation(line: 3704, column: 3, scope: !12628)
!12632 = !DILocation(line: 3705, column: 9, scope: !12586)
!12633 = !DILocation(line: 3705, column: 2, scope: !12586)
!12634 = distinct !DISubprogram(name: "qam_set_symbolrate", scope: !3, file: !3, line: 5253, type: !5239, scopeLine: 5254, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!12635 = !DILocalVariable(name: "state", arg: 1, scope: !12634, file: !3, line: 5253, type: !4562)
!12636 = !DILocation(line: 5253, column: 50, scope: !12634)
!12637 = !DILocalVariable(name: "adc_frequency", scope: !12634, file: !3, line: 5255, type: !411)
!12638 = !DILocation(line: 5255, column: 6, scope: !12634)
!12639 = !DILocalVariable(name: "symb_freq", scope: !12634, file: !3, line: 5256, type: !411)
!12640 = !DILocation(line: 5256, column: 6, scope: !12634)
!12641 = !DILocalVariable(name: "iqm_rc_rate", scope: !12634, file: !3, line: 5257, type: !411)
!12642 = !DILocation(line: 5257, column: 6, scope: !12634)
!12643 = !DILocalVariable(name: "ratesel", scope: !12634, file: !3, line: 5258, type: !408)
!12644 = !DILocation(line: 5258, column: 6, scope: !12634)
!12645 = !DILocalVariable(name: "lc_symb_rate", scope: !12634, file: !3, line: 5259, type: !411)
!12646 = !DILocation(line: 5259, column: 6, scope: !12634)
!12647 = !DILocalVariable(name: "status", scope: !12634, file: !3, line: 5260, type: !405)
!12648 = !DILocation(line: 5260, column: 6, scope: !12634)
!12649 = !DILocation(line: 5262, column: 2, scope: !12634)
!12650 = !DILocation(line: 5262, column: 2, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12652, file: !3, line: 5262, column: 2)
!12652 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 5262, column: 2)
!12653 = !DILocation(line: 5262, column: 2, scope: !12652)
!12654 = !DILocation(line: 5264, column: 19, scope: !12634)
!12655 = !DILocation(line: 5264, column: 26, scope: !12634)
!12656 = !DILocation(line: 5264, column: 43, scope: !12634)
!12657 = !DILocation(line: 5264, column: 51, scope: !12634)
!12658 = !DILocation(line: 5264, column: 16, scope: !12634)
!12659 = !DILocation(line: 5265, column: 10, scope: !12634)
!12660 = !DILocation(line: 5266, column: 6, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 5266, column: 6)
!12662 = !DILocation(line: 5266, column: 13, scope: !12661)
!12663 = !DILocation(line: 5266, column: 19, scope: !12661)
!12664 = !DILocation(line: 5266, column: 31, scope: !12661)
!12665 = !DILocation(line: 5266, column: 6, scope: !12634)
!12666 = !DILocation(line: 5267, column: 11, scope: !12661)
!12667 = !DILocation(line: 5267, column: 3, scope: !12661)
!12668 = !DILocation(line: 5268, column: 11, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 5268, column: 11)
!12670 = !DILocation(line: 5268, column: 18, scope: !12669)
!12671 = !DILocation(line: 5268, column: 24, scope: !12669)
!12672 = !DILocation(line: 5268, column: 36, scope: !12669)
!12673 = !DILocation(line: 5268, column: 11, scope: !12661)
!12674 = !DILocation(line: 5269, column: 11, scope: !12669)
!12675 = !DILocation(line: 5269, column: 3, scope: !12669)
!12676 = !DILocation(line: 5270, column: 11, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 5270, column: 11)
!12678 = !DILocation(line: 5270, column: 18, scope: !12677)
!12679 = !DILocation(line: 5270, column: 24, scope: !12677)
!12680 = !DILocation(line: 5270, column: 36, scope: !12677)
!12681 = !DILocation(line: 5270, column: 11, scope: !12669)
!12682 = !DILocation(line: 5271, column: 11, scope: !12677)
!12683 = !DILocation(line: 5271, column: 3, scope: !12677)
!12684 = !DILocation(line: 5272, column: 19, scope: !12634)
!12685 = !DILocation(line: 5272, column: 45, scope: !12634)
!12686 = !DILocation(line: 5272, column: 11, scope: !12634)
!12687 = !DILocation(line: 5272, column: 9, scope: !12634)
!12688 = !DILocation(line: 5273, column: 6, scope: !12689)
!12689 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 5273, column: 6)
!12690 = !DILocation(line: 5273, column: 13, scope: !12689)
!12691 = !DILocation(line: 5273, column: 6, scope: !12634)
!12692 = !DILocation(line: 5274, column: 3, scope: !12689)
!12693 = !DILocation(line: 5279, column: 14, scope: !12634)
!12694 = !DILocation(line: 5279, column: 21, scope: !12634)
!12695 = !DILocation(line: 5279, column: 27, scope: !12634)
!12696 = !DILocation(line: 5279, column: 47, scope: !12634)
!12697 = !DILocation(line: 5279, column: 44, scope: !12634)
!12698 = !DILocation(line: 5279, column: 39, scope: !12634)
!12699 = !DILocation(line: 5279, column: 12, scope: !12634)
!12700 = !DILocation(line: 5280, column: 6, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 5280, column: 6)
!12702 = !DILocation(line: 5280, column: 16, scope: !12701)
!12703 = !DILocation(line: 5280, column: 6, scope: !12634)
!12704 = !DILocation(line: 5282, column: 10, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12701, file: !3, line: 5280, column: 22)
!12706 = !DILocation(line: 5283, column: 3, scope: !12705)
!12707 = !DILocation(line: 5285, column: 17, scope: !12634)
!12708 = !DILocation(line: 5285, column: 33, scope: !12634)
!12709 = !DILocation(line: 5285, column: 31, scope: !12634)
!12710 = !DILocation(line: 5285, column: 44, scope: !12634)
!12711 = !DILocation(line: 5286, column: 13, scope: !12634)
!12712 = !DILocation(line: 5286, column: 29, scope: !12634)
!12713 = !DILocation(line: 5286, column: 27, scope: !12634)
!12714 = !DILocation(line: 5286, column: 41, scope: !12634)
!12715 = !DILocation(line: 5286, column: 4, scope: !12634)
!12716 = !DILocation(line: 5286, column: 52, scope: !12634)
!12717 = !DILocation(line: 5285, column: 56, scope: !12634)
!12718 = !DILocation(line: 5286, column: 58, scope: !12634)
!12719 = !DILocation(line: 5285, column: 14, scope: !12634)
!12720 = !DILocation(line: 5288, column: 19, scope: !12634)
!12721 = !DILocation(line: 5288, column: 49, scope: !12634)
!12722 = !DILocation(line: 5288, column: 11, scope: !12634)
!12723 = !DILocation(line: 5288, column: 9, scope: !12634)
!12724 = !DILocation(line: 5289, column: 6, scope: !12725)
!12725 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 5289, column: 6)
!12726 = !DILocation(line: 5289, column: 13, scope: !12725)
!12727 = !DILocation(line: 5289, column: 6, scope: !12634)
!12728 = !DILocation(line: 5290, column: 3, scope: !12725)
!12729 = !DILocation(line: 5291, column: 25, scope: !12634)
!12730 = !DILocation(line: 5291, column: 2, scope: !12634)
!12731 = !DILocation(line: 5291, column: 9, scope: !12634)
!12732 = !DILocation(line: 5291, column: 23, scope: !12634)
!12733 = !DILocation(line: 5295, column: 14, scope: !12634)
!12734 = !DILocation(line: 5295, column: 21, scope: !12634)
!12735 = !DILocation(line: 5295, column: 27, scope: !12634)
!12736 = !DILocation(line: 5295, column: 12, scope: !12634)
!12737 = !DILocation(line: 5296, column: 6, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 5296, column: 6)
!12739 = !DILocation(line: 5296, column: 20, scope: !12738)
!12740 = !DILocation(line: 5296, column: 6, scope: !12634)
!12741 = !DILocation(line: 5298, column: 10, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12738, file: !3, line: 5296, column: 26)
!12743 = !DILocation(line: 5299, column: 3, scope: !12742)
!12744 = !DILocation(line: 5301, column: 18, scope: !12634)
!12745 = !DILocation(line: 5301, column: 30, scope: !12634)
!12746 = !DILocation(line: 5301, column: 28, scope: !12634)
!12747 = !DILocation(line: 5301, column: 45, scope: !12634)
!12748 = !DILocation(line: 5302, column: 13, scope: !12634)
!12749 = !DILocation(line: 5302, column: 25, scope: !12634)
!12750 = !DILocation(line: 5302, column: 23, scope: !12634)
!12751 = !DILocation(line: 5302, column: 41, scope: !12634)
!12752 = !DILocation(line: 5302, column: 4, scope: !12634)
!12753 = !DILocation(line: 5302, column: 56, scope: !12634)
!12754 = !DILocation(line: 5301, column: 57, scope: !12634)
!12755 = !DILocation(line: 5301, column: 15, scope: !12634)
!12756 = !DILocation(line: 5304, column: 6, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 5304, column: 6)
!12758 = !DILocation(line: 5304, column: 19, scope: !12757)
!12759 = !DILocation(line: 5304, column: 6, scope: !12634)
!12760 = !DILocation(line: 5305, column: 16, scope: !12757)
!12761 = !DILocation(line: 5305, column: 3, scope: !12757)
!12762 = !DILocation(line: 5306, column: 19, scope: !12634)
!12763 = !DILocation(line: 5306, column: 55, scope: !12634)
!12764 = !DILocation(line: 5306, column: 49, scope: !12634)
!12765 = !DILocation(line: 5306, column: 11, scope: !12634)
!12766 = !DILocation(line: 5306, column: 9, scope: !12634)
!12767 = !DILocation(line: 5306, column: 2, scope: !12634)
!12768 = !DILabel(scope: !12634, name: "error", file: !3, line: 5308)
!12769 = !DILocation(line: 5308, column: 1, scope: !12634)
!12770 = !DILocation(line: 5309, column: 6, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 5309, column: 6)
!12772 = !DILocation(line: 5309, column: 13, scope: !12771)
!12773 = !DILocation(line: 5309, column: 6, scope: !12634)
!12774 = !DILocation(line: 5310, column: 3, scope: !12771)
!12775 = !DILocation(line: 5311, column: 9, scope: !12634)
!12776 = !DILocation(line: 5311, column: 2, scope: !12634)
!12777 = distinct !DISubprogram(name: "qam_demodulator_command", scope: !3, file: !3, line: 5364, type: !12778, scopeLine: 5366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!12778 = !DISubroutineType(types: !12779)
!12779 = !{!405, !4562, !405}
!12780 = !DILocalVariable(name: "state", arg: 1, scope: !12777, file: !3, line: 5364, type: !4562)
!12781 = !DILocation(line: 5364, column: 55, scope: !12777)
!12782 = !DILocalVariable(name: "number_of_parameters", arg: 2, scope: !12777, file: !3, line: 5365, type: !405)
!12783 = !DILocation(line: 5365, column: 10, scope: !12777)
!12784 = !DILocalVariable(name: "status", scope: !12777, file: !3, line: 5367, type: !405)
!12785 = !DILocation(line: 5367, column: 6, scope: !12777)
!12786 = !DILocalVariable(name: "cmd_result", scope: !12777, file: !3, line: 5368, type: !408)
!12787 = !DILocation(line: 5368, column: 6, scope: !12777)
!12788 = !DILocalVariable(name: "set_param_parameters", scope: !12777, file: !3, line: 5369, type: !12789)
!12789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 64, elements: !647)
!12790 = !DILocation(line: 5369, column: 6, scope: !12777)
!12791 = !DILocation(line: 5371, column: 28, scope: !12777)
!12792 = !DILocation(line: 5371, column: 35, scope: !12777)
!12793 = !DILocation(line: 5371, column: 2, scope: !12777)
!12794 = !DILocation(line: 5371, column: 26, scope: !12777)
!12795 = !DILocation(line: 5372, column: 2, scope: !12777)
!12796 = !DILocation(line: 5372, column: 26, scope: !12777)
!12797 = !DILocation(line: 5374, column: 6, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 5374, column: 6)
!12799 = !DILocation(line: 5374, column: 27, scope: !12798)
!12800 = !DILocation(line: 5374, column: 6, scope: !12777)
!12801 = !DILocalVariable(name: "set_env_parameters", scope: !12802, file: !3, line: 5375, type: !12803)
!12802 = distinct !DILexicalBlock(scope: !12798, file: !3, line: 5374, column: 33)
!12803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 16, elements: !1853)
!12804 = !DILocation(line: 5375, column: 7, scope: !12802)
!12805 = !DILocation(line: 5377, column: 7, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12802, file: !3, line: 5377, column: 7)
!12807 = !DILocation(line: 5377, column: 14, scope: !12806)
!12808 = !DILocation(line: 5377, column: 31, scope: !12806)
!12809 = !DILocation(line: 5377, column: 7, scope: !12802)
!12810 = !DILocation(line: 5378, column: 4, scope: !12806)
!12811 = !DILocation(line: 5378, column: 26, scope: !12806)
!12812 = !DILocation(line: 5380, column: 4, scope: !12806)
!12813 = !DILocation(line: 5380, column: 26, scope: !12806)
!12814 = !DILocation(line: 5382, column: 24, scope: !12802)
!12815 = !DILocation(line: 5385, column: 13, scope: !12802)
!12816 = !DILocation(line: 5382, column: 12, scope: !12802)
!12817 = !DILocation(line: 5382, column: 10, scope: !12802)
!12818 = !DILocation(line: 5386, column: 7, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12802, file: !3, line: 5386, column: 7)
!12820 = !DILocation(line: 5386, column: 14, scope: !12819)
!12821 = !DILocation(line: 5386, column: 7, scope: !12802)
!12822 = !DILocation(line: 5387, column: 4, scope: !12819)
!12823 = !DILocation(line: 5389, column: 24, scope: !12802)
!12824 = !DILocation(line: 5392, column: 10, scope: !12802)
!12825 = !DILocation(line: 5392, column: 32, scope: !12802)
!12826 = !DILocation(line: 5389, column: 12, scope: !12802)
!12827 = !DILocation(line: 5389, column: 10, scope: !12802)
!12828 = !DILocation(line: 5394, column: 2, scope: !12802)
!12829 = !DILocation(line: 5394, column: 13, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12798, file: !3, line: 5394, column: 13)
!12831 = !DILocation(line: 5394, column: 34, scope: !12830)
!12832 = !DILocation(line: 5394, column: 13, scope: !12798)
!12833 = !DILocation(line: 5395, column: 7, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12835, file: !3, line: 5395, column: 7)
!12835 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 5394, column: 40)
!12836 = !DILocation(line: 5395, column: 14, scope: !12834)
!12837 = !DILocation(line: 5395, column: 31, scope: !12834)
!12838 = !DILocation(line: 5395, column: 7, scope: !12835)
!12839 = !DILocation(line: 5396, column: 4, scope: !12834)
!12840 = !DILocation(line: 5396, column: 28, scope: !12834)
!12841 = !DILocation(line: 5398, column: 4, scope: !12834)
!12842 = !DILocation(line: 5398, column: 28, scope: !12834)
!12843 = !DILocation(line: 5400, column: 3, scope: !12835)
!12844 = !DILocation(line: 5400, column: 27, scope: !12835)
!12845 = !DILocation(line: 5405, column: 24, scope: !12835)
!12846 = !DILocation(line: 5408, column: 10, scope: !12835)
!12847 = !DILocation(line: 5408, column: 32, scope: !12835)
!12848 = !DILocation(line: 5405, column: 12, scope: !12835)
!12849 = !DILocation(line: 5405, column: 10, scope: !12835)
!12850 = !DILocation(line: 5410, column: 2, scope: !12835)
!12851 = !DILocation(line: 5411, column: 3, scope: !12852)
!12852 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 5410, column: 9)
!12853 = !DILocation(line: 5413, column: 10, scope: !12852)
!12854 = !DILocation(line: 5374, column: 30, scope: !12798)
!12855 = !DILabel(scope: !12777, name: "error", file: !3, line: 5416)
!12856 = !DILocation(line: 5416, column: 1, scope: !12777)
!12857 = !DILocation(line: 5417, column: 6, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 5417, column: 6)
!12859 = !DILocation(line: 5417, column: 13, scope: !12858)
!12860 = !DILocation(line: 5417, column: 6, scope: !12777)
!12861 = !DILocation(line: 5418, column: 3, scope: !12858)
!12862 = !DILocation(line: 5419, column: 9, scope: !12777)
!12863 = !DILocation(line: 5419, column: 2, scope: !12777)
!12864 = distinct !DISubprogram(name: "set_frequency_shifter", scope: !3, file: !3, line: 2920, type: !12865, scopeLine: 2923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!12865 = !DISubroutineType(types: !12866)
!12866 = !{!405, !4562, !408, !772, !406}
!12867 = !DILocalVariable(name: "state", arg: 1, scope: !12864, file: !3, line: 2920, type: !4562)
!12868 = !DILocation(line: 2920, column: 53, scope: !12864)
!12869 = !DILocalVariable(name: "intermediate_freqk_hz", arg: 2, scope: !12864, file: !3, line: 2921, type: !408)
!12870 = !DILocation(line: 2921, column: 15, scope: !12864)
!12871 = !DILocalVariable(name: "tuner_freq_offset", arg: 3, scope: !12864, file: !3, line: 2922, type: !772)
!12872 = !DILocation(line: 2922, column: 15, scope: !12864)
!12873 = !DILocalVariable(name: "is_dtv", arg: 4, scope: !12864, file: !3, line: 2922, type: !406)
!12874 = !DILocation(line: 2922, column: 39, scope: !12864)
!12875 = !DILocalVariable(name: "select_pos_image", scope: !12864, file: !3, line: 2924, type: !406)
!12876 = !DILocation(line: 2924, column: 7, scope: !12864)
!12877 = !DILocalVariable(name: "rf_freq_residual", scope: !12864, file: !3, line: 2925, type: !411)
!12878 = !DILocation(line: 2925, column: 6, scope: !12864)
!12879 = !DILocation(line: 2925, column: 25, scope: !12864)
!12880 = !DILocalVariable(name: "fm_frequency_shift", scope: !12864, file: !3, line: 2926, type: !411)
!12881 = !DILocation(line: 2926, column: 6, scope: !12864)
!12882 = !DILocalVariable(name: "tuner_mirror", scope: !12864, file: !3, line: 2927, type: !406)
!12883 = !DILocation(line: 2927, column: 7, scope: !12864)
!12884 = !DILocation(line: 2927, column: 23, scope: !12864)
!12885 = !DILocation(line: 2927, column: 30, scope: !12864)
!12886 = !DILocation(line: 2927, column: 22, scope: !12864)
!12887 = !DILocalVariable(name: "adc_freq", scope: !12864, file: !3, line: 2928, type: !411)
!12888 = !DILocation(line: 2928, column: 6, scope: !12864)
!12889 = !DILocalVariable(name: "adc_flip", scope: !12864, file: !3, line: 2929, type: !406)
!12890 = !DILocation(line: 2929, column: 7, scope: !12864)
!12891 = !DILocalVariable(name: "status", scope: !12864, file: !3, line: 2930, type: !405)
!12892 = !DILocation(line: 2930, column: 6, scope: !12864)
!12893 = !DILocalVariable(name: "if_freq_actual", scope: !12864, file: !3, line: 2931, type: !411)
!12894 = !DILocation(line: 2931, column: 6, scope: !12864)
!12895 = !DILocalVariable(name: "sampling_frequency", scope: !12864, file: !3, line: 2932, type: !411)
!12896 = !DILocation(line: 2932, column: 6, scope: !12864)
!12897 = !DILocation(line: 2932, column: 34, scope: !12864)
!12898 = !DILocation(line: 2932, column: 41, scope: !12864)
!12899 = !DILocation(line: 2932, column: 58, scope: !12864)
!12900 = !DILocalVariable(name: "frequency_shift", scope: !12864, file: !3, line: 2933, type: !411)
!12901 = !DILocation(line: 2933, column: 6, scope: !12864)
!12902 = !DILocalVariable(name: "image_to_select", scope: !12864, file: !3, line: 2934, type: !406)
!12903 = !DILocation(line: 2934, column: 7, scope: !12864)
!12904 = !DILocation(line: 2936, column: 2, scope: !12864)
!12905 = !DILocation(line: 2936, column: 2, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12907, file: !3, line: 2936, column: 2)
!12907 = distinct !DILexicalBlock(scope: !12864, file: !3, line: 2936, column: 2)
!12908 = !DILocation(line: 2936, column: 2, scope: !12907)
!12909 = !DILocation(line: 2942, column: 6, scope: !12910)
!12910 = distinct !DILexicalBlock(scope: !12864, file: !3, line: 2942, column: 6)
!12911 = !DILocation(line: 2942, column: 6, scope: !12864)
!12912 = !DILocation(line: 2943, column: 8, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12914, file: !3, line: 2943, column: 7)
!12914 = distinct !DILexicalBlock(scope: !12910, file: !3, line: 2942, column: 14)
!12915 = !DILocation(line: 2943, column: 15, scope: !12913)
!12916 = !DILocation(line: 2943, column: 32, scope: !12913)
!12917 = !DILocation(line: 2943, column: 49, scope: !12913)
!12918 = !DILocation(line: 2944, column: 8, scope: !12913)
!12919 = !DILocation(line: 2944, column: 15, scope: !12913)
!12920 = !DILocation(line: 2944, column: 32, scope: !12913)
!12921 = !DILocation(line: 2944, column: 49, scope: !12913)
!12922 = !DILocation(line: 2945, column: 8, scope: !12913)
!12923 = !DILocation(line: 2945, column: 15, scope: !12913)
!12924 = !DILocation(line: 2945, column: 32, scope: !12913)
!12925 = !DILocation(line: 2943, column: 7, scope: !12914)
!12926 = !DILocation(line: 2946, column: 21, scope: !12913)
!12927 = !DILocation(line: 2946, column: 4, scope: !12913)
!12928 = !DILocation(line: 2948, column: 21, scope: !12913)
!12929 = !DILocation(line: 2949, column: 2, scope: !12914)
!12930 = !DILocation(line: 2950, column: 6, scope: !12931)
!12931 = distinct !DILexicalBlock(scope: !12864, file: !3, line: 2950, column: 6)
!12932 = !DILocation(line: 2950, column: 6, scope: !12864)
!12933 = !DILocation(line: 2952, column: 20, scope: !12931)
!12934 = !DILocation(line: 2953, column: 7, scope: !12931)
!12935 = !DILocation(line: 2952, column: 42, scope: !12931)
!12936 = !DILocation(line: 2953, column: 26, scope: !12931)
!12937 = !DILocation(line: 2953, column: 24, scope: !12931)
!12938 = !DILocation(line: 2952, column: 18, scope: !12931)
!12939 = !DILocation(line: 2952, column: 3, scope: !12931)
!12940 = !DILocation(line: 2956, column: 20, scope: !12931)
!12941 = !DILocation(line: 2957, column: 7, scope: !12931)
!12942 = !DILocation(line: 2956, column: 42, scope: !12931)
!12943 = !DILocation(line: 2957, column: 26, scope: !12931)
!12944 = !DILocation(line: 2957, column: 24, scope: !12931)
!12945 = !DILocation(line: 2956, column: 18, scope: !12931)
!12946 = !DILocation(line: 2958, column: 6, scope: !12947)
!12947 = distinct !DILexicalBlock(scope: !12864, file: !3, line: 2958, column: 6)
!12948 = !DILocation(line: 2958, column: 23, scope: !12947)
!12949 = !DILocation(line: 2958, column: 42, scope: !12947)
!12950 = !DILocation(line: 2958, column: 21, scope: !12947)
!12951 = !DILocation(line: 2958, column: 6, scope: !12864)
!12952 = !DILocation(line: 2960, column: 14, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12947, file: !3, line: 2958, column: 47)
!12954 = !DILocation(line: 2960, column: 35, scope: !12953)
!12955 = !DILocation(line: 2960, column: 33, scope: !12953)
!12956 = !DILocation(line: 2960, column: 12, scope: !12953)
!12957 = !DILocation(line: 2961, column: 12, scope: !12953)
!12958 = !DILocation(line: 2962, column: 2, scope: !12953)
!12959 = !DILocation(line: 2964, column: 14, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12947, file: !3, line: 2962, column: 9)
!12961 = !DILocation(line: 2964, column: 12, scope: !12960)
!12962 = !DILocation(line: 2965, column: 12, scope: !12960)
!12963 = !DILocation(line: 2968, column: 20, scope: !12864)
!12964 = !DILocation(line: 2968, column: 18, scope: !12864)
!12965 = !DILocation(line: 2969, column: 20, scope: !12864)
!12966 = !DILocation(line: 2969, column: 27, scope: !12864)
!12967 = !DILocation(line: 2969, column: 40, scope: !12864)
!12968 = !DILocation(line: 2969, column: 38, scope: !12864)
!12969 = !DILocation(line: 2970, column: 6, scope: !12864)
!12970 = !DILocation(line: 2969, column: 53, scope: !12864)
!12971 = !DILocation(line: 2970, column: 17, scope: !12864)
!12972 = !DILocation(line: 2970, column: 15, scope: !12864)
!12973 = !DILocation(line: 2969, column: 18, scope: !12864)
!12974 = !DILocation(line: 2972, column: 15, scope: !12864)
!12975 = !DILocation(line: 2972, column: 33, scope: !12864)
!12976 = !DILocation(line: 2972, column: 6, scope: !12864)
!12977 = !DILocation(line: 2971, column: 2, scope: !12864)
!12978 = !DILocation(line: 2971, column: 9, scope: !12864)
!12979 = !DILocation(line: 2971, column: 27, scope: !12864)
!12980 = !DILocation(line: 2974, column: 6, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12864, file: !3, line: 2974, column: 6)
!12982 = !DILocation(line: 2974, column: 6, scope: !12864)
!12983 = !DILocation(line: 2975, column: 31, scope: !12981)
!12984 = !DILocation(line: 2975, column: 38, scope: !12981)
!12985 = !DILocation(line: 2975, column: 30, scope: !12981)
!12986 = !DILocation(line: 2975, column: 56, scope: !12981)
!12987 = !DILocation(line: 2975, column: 3, scope: !12981)
!12988 = !DILocation(line: 2975, column: 10, scope: !12981)
!12989 = !DILocation(line: 2975, column: 28, scope: !12981)
!12990 = !DILocation(line: 2979, column: 19, scope: !12864)
!12991 = !DILocation(line: 2980, column: 5, scope: !12864)
!12992 = !DILocation(line: 2980, column: 12, scope: !12864)
!12993 = !DILocation(line: 2979, column: 11, scope: !12864)
!12994 = !DILocation(line: 2979, column: 9, scope: !12864)
!12995 = !DILocation(line: 2981, column: 6, scope: !12996)
!12996 = distinct !DILexicalBlock(scope: !12864, file: !3, line: 2981, column: 6)
!12997 = !DILocation(line: 2981, column: 13, scope: !12996)
!12998 = !DILocation(line: 2981, column: 6, scope: !12864)
!12999 = !DILocation(line: 2982, column: 3, scope: !12996)
!13000 = !DILocation(line: 2983, column: 9, scope: !12864)
!13001 = !DILocation(line: 2983, column: 2, scope: !12864)
!13002 = distinct !DISubprogram(name: "set_qam_measurement", scope: !3, file: !3, line: 4172, type: !13003, scopeLine: 4175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!13003 = !DISubroutineType(types: !13004)
!13004 = !{!405, !4562, !314, !411}
!13005 = !DILocalVariable(name: "state", arg: 1, scope: !13002, file: !3, line: 4172, type: !4562)
!13006 = !DILocation(line: 4172, column: 51, scope: !13002)
!13007 = !DILocalVariable(name: "modulation", arg: 2, scope: !13002, file: !3, line: 4173, type: !314)
!13008 = !DILocation(line: 4173, column: 35, scope: !13002)
!13009 = !DILocalVariable(name: "symbol_rate", arg: 3, scope: !13002, file: !3, line: 4174, type: !411)
!13010 = !DILocation(line: 4174, column: 13, scope: !13002)
!13011 = !DILocalVariable(name: "fec_bits_desired", scope: !13002, file: !3, line: 4176, type: !411)
!13012 = !DILocation(line: 4176, column: 6, scope: !13002)
!13013 = !DILocalVariable(name: "fec_rs_period_total", scope: !13002, file: !3, line: 4177, type: !411)
!13014 = !DILocation(line: 4177, column: 6, scope: !13002)
!13015 = !DILocalVariable(name: "fec_rs_prescale", scope: !13002, file: !3, line: 4178, type: !408)
!13016 = !DILocation(line: 4178, column: 6, scope: !13002)
!13017 = !DILocalVariable(name: "fec_rs_period", scope: !13002, file: !3, line: 4179, type: !408)
!13018 = !DILocation(line: 4179, column: 6, scope: !13002)
!13019 = !DILocalVariable(name: "status", scope: !13002, file: !3, line: 4180, type: !405)
!13020 = !DILocation(line: 4180, column: 6, scope: !13002)
!13021 = !DILocation(line: 4182, column: 2, scope: !13002)
!13022 = !DILocation(line: 4182, column: 2, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13024, file: !3, line: 4182, column: 2)
!13024 = distinct !DILexicalBlock(scope: !13002, file: !3, line: 4182, column: 2)
!13025 = !DILocation(line: 4182, column: 2, scope: !13024)
!13026 = !DILocation(line: 4184, column: 18, scope: !13002)
!13027 = !DILocation(line: 4191, column: 10, scope: !13002)
!13028 = !DILocation(line: 4191, column: 2, scope: !13002)
!13029 = !DILocation(line: 4193, column: 26, scope: !13030)
!13030 = distinct !DILexicalBlock(scope: !13002, file: !3, line: 4191, column: 22)
!13031 = !DILocation(line: 4193, column: 24, scope: !13030)
!13032 = !DILocation(line: 4193, column: 20, scope: !13030)
!13033 = !DILocation(line: 4194, column: 3, scope: !13030)
!13034 = !DILocation(line: 4196, column: 26, scope: !13030)
!13035 = !DILocation(line: 4196, column: 24, scope: !13030)
!13036 = !DILocation(line: 4196, column: 20, scope: !13030)
!13037 = !DILocation(line: 4197, column: 3, scope: !13030)
!13038 = !DILocation(line: 4199, column: 26, scope: !13030)
!13039 = !DILocation(line: 4199, column: 24, scope: !13030)
!13040 = !DILocation(line: 4199, column: 20, scope: !13030)
!13041 = !DILocation(line: 4200, column: 3, scope: !13030)
!13042 = !DILocation(line: 4202, column: 26, scope: !13030)
!13043 = !DILocation(line: 4202, column: 24, scope: !13030)
!13044 = !DILocation(line: 4202, column: 20, scope: !13030)
!13045 = !DILocation(line: 4203, column: 3, scope: !13030)
!13046 = !DILocation(line: 4205, column: 26, scope: !13030)
!13047 = !DILocation(line: 4205, column: 24, scope: !13030)
!13048 = !DILocation(line: 4205, column: 20, scope: !13030)
!13049 = !DILocation(line: 4206, column: 3, scope: !13030)
!13050 = !DILocation(line: 4208, column: 10, scope: !13030)
!13051 = !DILocation(line: 4209, column: 2, scope: !13030)
!13052 = !DILocation(line: 4210, column: 6, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13002, file: !3, line: 4210, column: 6)
!13054 = !DILocation(line: 4210, column: 13, scope: !13053)
!13055 = !DILocation(line: 4210, column: 6, scope: !13002)
!13056 = !DILocation(line: 4211, column: 3, scope: !13053)
!13057 = !DILocation(line: 4213, column: 19, scope: !13002)
!13058 = !DILocation(line: 4214, column: 19, scope: !13002)
!13059 = !DILocation(line: 4218, column: 25, scope: !13002)
!13060 = !DILocation(line: 4218, column: 42, scope: !13002)
!13061 = !DILocation(line: 4218, column: 52, scope: !13002)
!13062 = !DILocation(line: 4218, column: 24, scope: !13002)
!13063 = !DILocation(line: 4218, column: 22, scope: !13002)
!13064 = !DILocation(line: 4221, column: 31, scope: !13002)
!13065 = !DILocation(line: 4221, column: 51, scope: !13002)
!13066 = !DILocation(line: 4221, column: 24, scope: !13002)
!13067 = !DILocation(line: 4221, column: 22, scope: !13002)
!13068 = !DILocation(line: 4221, column: 20, scope: !13002)
!13069 = !DILocation(line: 4221, column: 18, scope: !13002)
!13070 = !DILocation(line: 4222, column: 6, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13002, file: !3, line: 4222, column: 6)
!13072 = !DILocation(line: 4222, column: 22, scope: !13071)
!13073 = !DILocation(line: 4222, column: 6, scope: !13002)
!13074 = !DILocation(line: 4224, column: 10, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13071, file: !3, line: 4222, column: 28)
!13076 = !DILocation(line: 4225, column: 7, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13075, file: !3, line: 4225, column: 7)
!13078 = !DILocation(line: 4225, column: 14, scope: !13077)
!13079 = !DILocation(line: 4225, column: 7, scope: !13075)
!13080 = !DILocation(line: 4226, column: 4, scope: !13077)
!13081 = !DILocation(line: 4227, column: 2, scope: !13075)
!13082 = !DILocation(line: 4229, column: 10, scope: !13002)
!13083 = !DILocation(line: 4229, column: 4, scope: !13002)
!13084 = !DILocation(line: 4230, column: 4, scope: !13002)
!13085 = !DILocation(line: 4230, column: 20, scope: !13002)
!13086 = !DILocation(line: 4229, column: 30, scope: !13002)
!13087 = !DILocation(line: 4230, column: 29, scope: !13002)
!13088 = !DILocation(line: 4230, column: 27, scope: !13002)
!13089 = !DILocation(line: 4229, column: 3, scope: !13002)
!13090 = !DILocation(line: 4228, column: 16, scope: !13002)
!13091 = !DILocation(line: 4233, column: 19, scope: !13002)
!13092 = !DILocation(line: 4233, column: 56, scope: !13002)
!13093 = !DILocation(line: 4233, column: 11, scope: !13002)
!13094 = !DILocation(line: 4233, column: 9, scope: !13002)
!13095 = !DILocation(line: 4234, column: 6, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13002, file: !3, line: 4234, column: 6)
!13097 = !DILocation(line: 4234, column: 13, scope: !13096)
!13098 = !DILocation(line: 4234, column: 6, scope: !13002)
!13099 = !DILocation(line: 4235, column: 3, scope: !13096)
!13100 = !DILocation(line: 4236, column: 19, scope: !13002)
!13101 = !DILocation(line: 4237, column: 5, scope: !13002)
!13102 = !DILocation(line: 4236, column: 11, scope: !13002)
!13103 = !DILocation(line: 4236, column: 9, scope: !13002)
!13104 = !DILocation(line: 4238, column: 6, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13002, file: !3, line: 4238, column: 6)
!13106 = !DILocation(line: 4238, column: 13, scope: !13105)
!13107 = !DILocation(line: 4238, column: 6, scope: !13002)
!13108 = !DILocation(line: 4239, column: 3, scope: !13105)
!13109 = !DILocation(line: 4240, column: 19, scope: !13002)
!13110 = !DILocation(line: 4240, column: 53, scope: !13002)
!13111 = !DILocation(line: 4240, column: 11, scope: !13002)
!13112 = !DILocation(line: 4240, column: 9, scope: !13002)
!13113 = !DILocation(line: 4240, column: 2, scope: !13002)
!13114 = !DILabel(scope: !13002, name: "error", file: !3, line: 4241)
!13115 = !DILocation(line: 4241, column: 1, scope: !13002)
!13116 = !DILocation(line: 4242, column: 6, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13002, file: !3, line: 4242, column: 6)
!13118 = !DILocation(line: 4242, column: 13, scope: !13117)
!13119 = !DILocation(line: 4242, column: 6, scope: !13002)
!13120 = !DILocation(line: 4243, column: 3, scope: !13117)
!13121 = !DILocation(line: 4244, column: 9, scope: !13002)
!13122 = !DILocation(line: 4244, column: 2, scope: !13002)
!13123 = distinct !DISubprogram(name: "set_qam16", scope: !3, file: !3, line: 4247, type: !5239, scopeLine: 4248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!13124 = !DILocalVariable(name: "state", arg: 1, scope: !13123, file: !3, line: 4247, type: !4562)
!13125 = !DILocation(line: 4247, column: 41, scope: !13123)
!13126 = !DILocalVariable(name: "status", scope: !13123, file: !3, line: 4249, type: !405)
!13127 = !DILocation(line: 4249, column: 6, scope: !13123)
!13128 = !DILocation(line: 4251, column: 2, scope: !13123)
!13129 = !DILocation(line: 4251, column: 2, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13131, file: !3, line: 4251, column: 2)
!13131 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4251, column: 2)
!13132 = !DILocation(line: 4251, column: 2, scope: !13131)
!13133 = !DILocation(line: 4254, column: 19, scope: !13123)
!13134 = !DILocation(line: 4254, column: 11, scope: !13123)
!13135 = !DILocation(line: 4254, column: 9, scope: !13123)
!13136 = !DILocation(line: 4255, column: 6, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4255, column: 6)
!13138 = !DILocation(line: 4255, column: 13, scope: !13137)
!13139 = !DILocation(line: 4255, column: 6, scope: !13123)
!13140 = !DILocation(line: 4256, column: 3, scope: !13137)
!13141 = !DILocation(line: 4257, column: 19, scope: !13123)
!13142 = !DILocation(line: 4257, column: 11, scope: !13123)
!13143 = !DILocation(line: 4257, column: 9, scope: !13123)
!13144 = !DILocation(line: 4258, column: 6, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4258, column: 6)
!13146 = !DILocation(line: 4258, column: 13, scope: !13145)
!13147 = !DILocation(line: 4258, column: 6, scope: !13123)
!13148 = !DILocation(line: 4259, column: 3, scope: !13145)
!13149 = !DILocation(line: 4260, column: 19, scope: !13123)
!13150 = !DILocation(line: 4260, column: 11, scope: !13123)
!13151 = !DILocation(line: 4260, column: 9, scope: !13123)
!13152 = !DILocation(line: 4261, column: 6, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4261, column: 6)
!13154 = !DILocation(line: 4261, column: 13, scope: !13153)
!13155 = !DILocation(line: 4261, column: 6, scope: !13123)
!13156 = !DILocation(line: 4262, column: 3, scope: !13153)
!13157 = !DILocation(line: 4263, column: 19, scope: !13123)
!13158 = !DILocation(line: 4263, column: 11, scope: !13123)
!13159 = !DILocation(line: 4263, column: 9, scope: !13123)
!13160 = !DILocation(line: 4264, column: 6, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4264, column: 6)
!13162 = !DILocation(line: 4264, column: 13, scope: !13161)
!13163 = !DILocation(line: 4264, column: 6, scope: !13123)
!13164 = !DILocation(line: 4265, column: 3, scope: !13161)
!13165 = !DILocation(line: 4266, column: 19, scope: !13123)
!13166 = !DILocation(line: 4266, column: 11, scope: !13123)
!13167 = !DILocation(line: 4266, column: 9, scope: !13123)
!13168 = !DILocation(line: 4267, column: 6, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4267, column: 6)
!13170 = !DILocation(line: 4267, column: 13, scope: !13169)
!13171 = !DILocation(line: 4267, column: 6, scope: !13123)
!13172 = !DILocation(line: 4268, column: 3, scope: !13169)
!13173 = !DILocation(line: 4269, column: 19, scope: !13123)
!13174 = !DILocation(line: 4269, column: 11, scope: !13123)
!13175 = !DILocation(line: 4269, column: 9, scope: !13123)
!13176 = !DILocation(line: 4270, column: 6, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4270, column: 6)
!13178 = !DILocation(line: 4270, column: 13, scope: !13177)
!13179 = !DILocation(line: 4270, column: 6, scope: !13123)
!13180 = !DILocation(line: 4271, column: 3, scope: !13177)
!13181 = !DILocation(line: 4273, column: 19, scope: !13123)
!13182 = !DILocation(line: 4273, column: 11, scope: !13123)
!13183 = !DILocation(line: 4273, column: 9, scope: !13123)
!13184 = !DILocation(line: 4274, column: 6, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4274, column: 6)
!13186 = !DILocation(line: 4274, column: 13, scope: !13185)
!13187 = !DILocation(line: 4274, column: 6, scope: !13123)
!13188 = !DILocation(line: 4275, column: 3, scope: !13185)
!13189 = !DILocation(line: 4276, column: 19, scope: !13123)
!13190 = !DILocation(line: 4276, column: 11, scope: !13123)
!13191 = !DILocation(line: 4276, column: 9, scope: !13123)
!13192 = !DILocation(line: 4277, column: 6, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4277, column: 6)
!13194 = !DILocation(line: 4277, column: 13, scope: !13193)
!13195 = !DILocation(line: 4277, column: 6, scope: !13123)
!13196 = !DILocation(line: 4278, column: 3, scope: !13193)
!13197 = !DILocation(line: 4279, column: 19, scope: !13123)
!13198 = !DILocation(line: 4279, column: 11, scope: !13123)
!13199 = !DILocation(line: 4279, column: 9, scope: !13123)
!13200 = !DILocation(line: 4280, column: 6, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4280, column: 6)
!13202 = !DILocation(line: 4280, column: 13, scope: !13201)
!13203 = !DILocation(line: 4280, column: 6, scope: !13123)
!13204 = !DILocation(line: 4281, column: 3, scope: !13201)
!13205 = !DILocation(line: 4282, column: 19, scope: !13123)
!13206 = !DILocation(line: 4282, column: 11, scope: !13123)
!13207 = !DILocation(line: 4282, column: 9, scope: !13123)
!13208 = !DILocation(line: 4283, column: 6, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4283, column: 6)
!13210 = !DILocation(line: 4283, column: 13, scope: !13209)
!13211 = !DILocation(line: 4283, column: 6, scope: !13123)
!13212 = !DILocation(line: 4284, column: 3, scope: !13209)
!13213 = !DILocation(line: 4285, column: 19, scope: !13123)
!13214 = !DILocation(line: 4285, column: 11, scope: !13123)
!13215 = !DILocation(line: 4285, column: 9, scope: !13123)
!13216 = !DILocation(line: 4286, column: 6, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4286, column: 6)
!13218 = !DILocation(line: 4286, column: 13, scope: !13217)
!13219 = !DILocation(line: 4286, column: 6, scope: !13123)
!13220 = !DILocation(line: 4287, column: 3, scope: !13217)
!13221 = !DILocation(line: 4288, column: 19, scope: !13123)
!13222 = !DILocation(line: 4288, column: 11, scope: !13123)
!13223 = !DILocation(line: 4288, column: 9, scope: !13123)
!13224 = !DILocation(line: 4289, column: 6, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4289, column: 6)
!13226 = !DILocation(line: 4289, column: 13, scope: !13225)
!13227 = !DILocation(line: 4289, column: 6, scope: !13123)
!13228 = !DILocation(line: 4290, column: 3, scope: !13225)
!13229 = !DILocation(line: 4292, column: 19, scope: !13123)
!13230 = !DILocation(line: 4292, column: 11, scope: !13123)
!13231 = !DILocation(line: 4292, column: 9, scope: !13123)
!13232 = !DILocation(line: 4293, column: 6, scope: !13233)
!13233 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4293, column: 6)
!13234 = !DILocation(line: 4293, column: 13, scope: !13233)
!13235 = !DILocation(line: 4293, column: 6, scope: !13123)
!13236 = !DILocation(line: 4294, column: 3, scope: !13233)
!13237 = !DILocation(line: 4295, column: 19, scope: !13123)
!13238 = !DILocation(line: 4295, column: 11, scope: !13123)
!13239 = !DILocation(line: 4295, column: 9, scope: !13123)
!13240 = !DILocation(line: 4296, column: 6, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4296, column: 6)
!13242 = !DILocation(line: 4296, column: 13, scope: !13241)
!13243 = !DILocation(line: 4296, column: 6, scope: !13123)
!13244 = !DILocation(line: 4297, column: 3, scope: !13241)
!13245 = !DILocation(line: 4298, column: 19, scope: !13123)
!13246 = !DILocation(line: 4298, column: 11, scope: !13123)
!13247 = !DILocation(line: 4298, column: 9, scope: !13123)
!13248 = !DILocation(line: 4299, column: 6, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4299, column: 6)
!13250 = !DILocation(line: 4299, column: 13, scope: !13249)
!13251 = !DILocation(line: 4299, column: 6, scope: !13123)
!13252 = !DILocation(line: 4300, column: 3, scope: !13249)
!13253 = !DILocation(line: 4303, column: 19, scope: !13123)
!13254 = !DILocation(line: 4303, column: 11, scope: !13123)
!13255 = !DILocation(line: 4303, column: 9, scope: !13123)
!13256 = !DILocation(line: 4305, column: 6, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4305, column: 6)
!13258 = !DILocation(line: 4305, column: 13, scope: !13257)
!13259 = !DILocation(line: 4305, column: 6, scope: !13123)
!13260 = !DILocation(line: 4306, column: 3, scope: !13257)
!13261 = !DILocation(line: 4309, column: 19, scope: !13123)
!13262 = !DILocation(line: 4309, column: 11, scope: !13123)
!13263 = !DILocation(line: 4309, column: 9, scope: !13123)
!13264 = !DILocation(line: 4310, column: 6, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4310, column: 6)
!13266 = !DILocation(line: 4310, column: 13, scope: !13265)
!13267 = !DILocation(line: 4310, column: 6, scope: !13123)
!13268 = !DILocation(line: 4311, column: 3, scope: !13265)
!13269 = !DILocation(line: 4312, column: 19, scope: !13123)
!13270 = !DILocation(line: 4312, column: 11, scope: !13123)
!13271 = !DILocation(line: 4312, column: 9, scope: !13123)
!13272 = !DILocation(line: 4313, column: 6, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4313, column: 6)
!13274 = !DILocation(line: 4313, column: 13, scope: !13273)
!13275 = !DILocation(line: 4313, column: 6, scope: !13123)
!13276 = !DILocation(line: 4314, column: 3, scope: !13273)
!13277 = !DILocation(line: 4315, column: 19, scope: !13123)
!13278 = !DILocation(line: 4315, column: 11, scope: !13123)
!13279 = !DILocation(line: 4315, column: 9, scope: !13123)
!13280 = !DILocation(line: 4316, column: 6, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4316, column: 6)
!13282 = !DILocation(line: 4316, column: 13, scope: !13281)
!13283 = !DILocation(line: 4316, column: 6, scope: !13123)
!13284 = !DILocation(line: 4317, column: 3, scope: !13281)
!13285 = !DILocation(line: 4318, column: 19, scope: !13123)
!13286 = !DILocation(line: 4318, column: 11, scope: !13123)
!13287 = !DILocation(line: 4318, column: 9, scope: !13123)
!13288 = !DILocation(line: 4319, column: 6, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4319, column: 6)
!13290 = !DILocation(line: 4319, column: 13, scope: !13289)
!13291 = !DILocation(line: 4319, column: 6, scope: !13123)
!13292 = !DILocation(line: 4320, column: 3, scope: !13289)
!13293 = !DILocation(line: 4321, column: 19, scope: !13123)
!13294 = !DILocation(line: 4321, column: 11, scope: !13123)
!13295 = !DILocation(line: 4321, column: 9, scope: !13123)
!13296 = !DILocation(line: 4322, column: 6, scope: !13297)
!13297 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4322, column: 6)
!13298 = !DILocation(line: 4322, column: 13, scope: !13297)
!13299 = !DILocation(line: 4322, column: 6, scope: !13123)
!13300 = !DILocation(line: 4323, column: 3, scope: !13297)
!13301 = !DILocation(line: 4324, column: 19, scope: !13123)
!13302 = !DILocation(line: 4324, column: 11, scope: !13123)
!13303 = !DILocation(line: 4324, column: 9, scope: !13123)
!13304 = !DILocation(line: 4325, column: 6, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4325, column: 6)
!13306 = !DILocation(line: 4325, column: 13, scope: !13305)
!13307 = !DILocation(line: 4325, column: 6, scope: !13123)
!13308 = !DILocation(line: 4326, column: 3, scope: !13305)
!13309 = !DILocation(line: 4327, column: 19, scope: !13123)
!13310 = !DILocation(line: 4327, column: 11, scope: !13123)
!13311 = !DILocation(line: 4327, column: 9, scope: !13123)
!13312 = !DILocation(line: 4328, column: 6, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4328, column: 6)
!13314 = !DILocation(line: 4328, column: 13, scope: !13313)
!13315 = !DILocation(line: 4328, column: 6, scope: !13123)
!13316 = !DILocation(line: 4329, column: 3, scope: !13313)
!13317 = !DILocation(line: 4330, column: 19, scope: !13123)
!13318 = !DILocation(line: 4330, column: 11, scope: !13123)
!13319 = !DILocation(line: 4330, column: 9, scope: !13123)
!13320 = !DILocation(line: 4331, column: 6, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4331, column: 6)
!13322 = !DILocation(line: 4331, column: 13, scope: !13321)
!13323 = !DILocation(line: 4331, column: 6, scope: !13123)
!13324 = !DILocation(line: 4332, column: 3, scope: !13321)
!13325 = !DILocation(line: 4334, column: 19, scope: !13123)
!13326 = !DILocation(line: 4334, column: 11, scope: !13123)
!13327 = !DILocation(line: 4334, column: 9, scope: !13123)
!13328 = !DILocation(line: 4335, column: 6, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4335, column: 6)
!13330 = !DILocation(line: 4335, column: 13, scope: !13329)
!13331 = !DILocation(line: 4335, column: 6, scope: !13123)
!13332 = !DILocation(line: 4336, column: 3, scope: !13329)
!13333 = !DILocation(line: 4337, column: 19, scope: !13123)
!13334 = !DILocation(line: 4337, column: 11, scope: !13123)
!13335 = !DILocation(line: 4337, column: 9, scope: !13123)
!13336 = !DILocation(line: 4338, column: 6, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4338, column: 6)
!13338 = !DILocation(line: 4338, column: 13, scope: !13337)
!13339 = !DILocation(line: 4338, column: 6, scope: !13123)
!13340 = !DILocation(line: 4339, column: 3, scope: !13337)
!13341 = !DILocation(line: 4340, column: 19, scope: !13123)
!13342 = !DILocation(line: 4340, column: 11, scope: !13123)
!13343 = !DILocation(line: 4340, column: 9, scope: !13123)
!13344 = !DILocation(line: 4341, column: 6, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4341, column: 6)
!13346 = !DILocation(line: 4341, column: 13, scope: !13345)
!13347 = !DILocation(line: 4341, column: 6, scope: !13123)
!13348 = !DILocation(line: 4342, column: 3, scope: !13345)
!13349 = !DILocation(line: 4343, column: 19, scope: !13123)
!13350 = !DILocation(line: 4343, column: 11, scope: !13123)
!13351 = !DILocation(line: 4343, column: 9, scope: !13123)
!13352 = !DILocation(line: 4344, column: 6, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4344, column: 6)
!13354 = !DILocation(line: 4344, column: 13, scope: !13353)
!13355 = !DILocation(line: 4344, column: 6, scope: !13123)
!13356 = !DILocation(line: 4345, column: 3, scope: !13353)
!13357 = !DILocation(line: 4346, column: 19, scope: !13123)
!13358 = !DILocation(line: 4346, column: 11, scope: !13123)
!13359 = !DILocation(line: 4346, column: 9, scope: !13123)
!13360 = !DILocation(line: 4347, column: 6, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4347, column: 6)
!13362 = !DILocation(line: 4347, column: 13, scope: !13361)
!13363 = !DILocation(line: 4347, column: 6, scope: !13123)
!13364 = !DILocation(line: 4348, column: 3, scope: !13361)
!13365 = !DILocation(line: 4349, column: 19, scope: !13123)
!13366 = !DILocation(line: 4349, column: 11, scope: !13123)
!13367 = !DILocation(line: 4349, column: 9, scope: !13123)
!13368 = !DILocation(line: 4350, column: 6, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4350, column: 6)
!13370 = !DILocation(line: 4350, column: 13, scope: !13369)
!13371 = !DILocation(line: 4350, column: 6, scope: !13123)
!13372 = !DILocation(line: 4351, column: 3, scope: !13369)
!13373 = !DILocation(line: 4352, column: 19, scope: !13123)
!13374 = !DILocation(line: 4352, column: 11, scope: !13123)
!13375 = !DILocation(line: 4352, column: 9, scope: !13123)
!13376 = !DILocation(line: 4353, column: 6, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4353, column: 6)
!13378 = !DILocation(line: 4353, column: 13, scope: !13377)
!13379 = !DILocation(line: 4353, column: 6, scope: !13123)
!13380 = !DILocation(line: 4354, column: 3, scope: !13377)
!13381 = !DILocation(line: 4355, column: 19, scope: !13123)
!13382 = !DILocation(line: 4355, column: 11, scope: !13123)
!13383 = !DILocation(line: 4355, column: 9, scope: !13123)
!13384 = !DILocation(line: 4356, column: 6, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4356, column: 6)
!13386 = !DILocation(line: 4356, column: 13, scope: !13385)
!13387 = !DILocation(line: 4356, column: 6, scope: !13123)
!13388 = !DILocation(line: 4357, column: 3, scope: !13385)
!13389 = !DILocation(line: 4358, column: 19, scope: !13123)
!13390 = !DILocation(line: 4358, column: 11, scope: !13123)
!13391 = !DILocation(line: 4358, column: 9, scope: !13123)
!13392 = !DILocation(line: 4359, column: 6, scope: !13393)
!13393 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4359, column: 6)
!13394 = !DILocation(line: 4359, column: 13, scope: !13393)
!13395 = !DILocation(line: 4359, column: 6, scope: !13123)
!13396 = !DILocation(line: 4360, column: 3, scope: !13393)
!13397 = !DILocation(line: 4361, column: 19, scope: !13123)
!13398 = !DILocation(line: 4361, column: 11, scope: !13123)
!13399 = !DILocation(line: 4361, column: 9, scope: !13123)
!13400 = !DILocation(line: 4362, column: 6, scope: !13401)
!13401 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4362, column: 6)
!13402 = !DILocation(line: 4362, column: 13, scope: !13401)
!13403 = !DILocation(line: 4362, column: 6, scope: !13123)
!13404 = !DILocation(line: 4363, column: 3, scope: !13401)
!13405 = !DILocation(line: 4364, column: 19, scope: !13123)
!13406 = !DILocation(line: 4364, column: 11, scope: !13123)
!13407 = !DILocation(line: 4364, column: 9, scope: !13123)
!13408 = !DILocation(line: 4365, column: 6, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4365, column: 6)
!13410 = !DILocation(line: 4365, column: 13, scope: !13409)
!13411 = !DILocation(line: 4365, column: 6, scope: !13123)
!13412 = !DILocation(line: 4366, column: 3, scope: !13409)
!13413 = !DILocation(line: 4367, column: 19, scope: !13123)
!13414 = !DILocation(line: 4367, column: 11, scope: !13123)
!13415 = !DILocation(line: 4367, column: 9, scope: !13123)
!13416 = !DILocation(line: 4368, column: 6, scope: !13417)
!13417 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4368, column: 6)
!13418 = !DILocation(line: 4368, column: 13, scope: !13417)
!13419 = !DILocation(line: 4368, column: 6, scope: !13123)
!13420 = !DILocation(line: 4369, column: 3, scope: !13417)
!13421 = !DILocation(line: 4374, column: 19, scope: !13123)
!13422 = !DILocation(line: 4374, column: 11, scope: !13123)
!13423 = !DILocation(line: 4374, column: 9, scope: !13123)
!13424 = !DILocation(line: 4375, column: 6, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4375, column: 6)
!13426 = !DILocation(line: 4375, column: 13, scope: !13425)
!13427 = !DILocation(line: 4375, column: 6, scope: !13123)
!13428 = !DILocation(line: 4376, column: 3, scope: !13425)
!13429 = !DILocation(line: 4377, column: 19, scope: !13123)
!13430 = !DILocation(line: 4377, column: 11, scope: !13123)
!13431 = !DILocation(line: 4377, column: 9, scope: !13123)
!13432 = !DILocation(line: 4378, column: 6, scope: !13433)
!13433 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4378, column: 6)
!13434 = !DILocation(line: 4378, column: 13, scope: !13433)
!13435 = !DILocation(line: 4378, column: 6, scope: !13123)
!13436 = !DILocation(line: 4379, column: 3, scope: !13433)
!13437 = !DILocation(line: 4380, column: 19, scope: !13123)
!13438 = !DILocation(line: 4380, column: 11, scope: !13123)
!13439 = !DILocation(line: 4380, column: 9, scope: !13123)
!13440 = !DILocation(line: 4381, column: 6, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4381, column: 6)
!13442 = !DILocation(line: 4381, column: 13, scope: !13441)
!13443 = !DILocation(line: 4381, column: 6, scope: !13123)
!13444 = !DILocation(line: 4382, column: 3, scope: !13441)
!13445 = !DILocation(line: 4383, column: 19, scope: !13123)
!13446 = !DILocation(line: 4383, column: 11, scope: !13123)
!13447 = !DILocation(line: 4383, column: 9, scope: !13123)
!13448 = !DILocation(line: 4384, column: 6, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4384, column: 6)
!13450 = !DILocation(line: 4384, column: 13, scope: !13449)
!13451 = !DILocation(line: 4384, column: 6, scope: !13123)
!13452 = !DILocation(line: 4385, column: 3, scope: !13449)
!13453 = !DILocation(line: 4386, column: 19, scope: !13123)
!13454 = !DILocation(line: 4386, column: 11, scope: !13123)
!13455 = !DILocation(line: 4386, column: 9, scope: !13123)
!13456 = !DILocation(line: 4387, column: 6, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4387, column: 6)
!13458 = !DILocation(line: 4387, column: 13, scope: !13457)
!13459 = !DILocation(line: 4387, column: 6, scope: !13123)
!13460 = !DILocation(line: 4388, column: 3, scope: !13457)
!13461 = !DILocation(line: 4389, column: 19, scope: !13123)
!13462 = !DILocation(line: 4389, column: 11, scope: !13123)
!13463 = !DILocation(line: 4389, column: 9, scope: !13123)
!13464 = !DILocation(line: 4390, column: 6, scope: !13465)
!13465 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4390, column: 6)
!13466 = !DILocation(line: 4390, column: 13, scope: !13465)
!13467 = !DILocation(line: 4390, column: 6, scope: !13123)
!13468 = !DILocation(line: 4391, column: 3, scope: !13465)
!13469 = !DILocation(line: 4393, column: 19, scope: !13123)
!13470 = !DILocation(line: 4393, column: 11, scope: !13123)
!13471 = !DILocation(line: 4393, column: 9, scope: !13123)
!13472 = !DILocation(line: 4394, column: 6, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4394, column: 6)
!13474 = !DILocation(line: 4394, column: 13, scope: !13473)
!13475 = !DILocation(line: 4394, column: 6, scope: !13123)
!13476 = !DILocation(line: 4395, column: 3, scope: !13473)
!13477 = !DILocation(line: 4396, column: 19, scope: !13123)
!13478 = !DILocation(line: 4396, column: 11, scope: !13123)
!13479 = !DILocation(line: 4396, column: 9, scope: !13123)
!13480 = !DILocation(line: 4397, column: 6, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4397, column: 6)
!13482 = !DILocation(line: 4397, column: 13, scope: !13481)
!13483 = !DILocation(line: 4397, column: 6, scope: !13123)
!13484 = !DILocation(line: 4398, column: 3, scope: !13481)
!13485 = !DILocation(line: 4399, column: 19, scope: !13123)
!13486 = !DILocation(line: 4399, column: 11, scope: !13123)
!13487 = !DILocation(line: 4399, column: 9, scope: !13123)
!13488 = !DILocation(line: 4400, column: 6, scope: !13489)
!13489 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4400, column: 6)
!13490 = !DILocation(line: 4400, column: 13, scope: !13489)
!13491 = !DILocation(line: 4400, column: 6, scope: !13123)
!13492 = !DILocation(line: 4401, column: 3, scope: !13489)
!13493 = !DILocation(line: 4406, column: 19, scope: !13123)
!13494 = !DILocation(line: 4406, column: 11, scope: !13123)
!13495 = !DILocation(line: 4406, column: 9, scope: !13123)
!13496 = !DILocation(line: 4407, column: 6, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4407, column: 6)
!13498 = !DILocation(line: 4407, column: 13, scope: !13497)
!13499 = !DILocation(line: 4407, column: 6, scope: !13123)
!13500 = !DILocation(line: 4408, column: 3, scope: !13497)
!13501 = !DILocation(line: 4409, column: 19, scope: !13123)
!13502 = !DILocation(line: 4409, column: 11, scope: !13123)
!13503 = !DILocation(line: 4409, column: 9, scope: !13123)
!13504 = !DILocation(line: 4410, column: 6, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4410, column: 6)
!13506 = !DILocation(line: 4410, column: 13, scope: !13505)
!13507 = !DILocation(line: 4410, column: 6, scope: !13123)
!13508 = !DILocation(line: 4411, column: 3, scope: !13505)
!13509 = !DILocation(line: 4412, column: 19, scope: !13123)
!13510 = !DILocation(line: 4412, column: 11, scope: !13123)
!13511 = !DILocation(line: 4412, column: 9, scope: !13123)
!13512 = !DILocation(line: 4413, column: 6, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4413, column: 6)
!13514 = !DILocation(line: 4413, column: 13, scope: !13513)
!13515 = !DILocation(line: 4413, column: 6, scope: !13123)
!13516 = !DILocation(line: 4414, column: 3, scope: !13513)
!13517 = !DILocation(line: 4415, column: 19, scope: !13123)
!13518 = !DILocation(line: 4415, column: 11, scope: !13123)
!13519 = !DILocation(line: 4415, column: 9, scope: !13123)
!13520 = !DILocation(line: 4416, column: 6, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4416, column: 6)
!13522 = !DILocation(line: 4416, column: 13, scope: !13521)
!13523 = !DILocation(line: 4416, column: 6, scope: !13123)
!13524 = !DILocation(line: 4417, column: 3, scope: !13521)
!13525 = !DILocation(line: 4418, column: 19, scope: !13123)
!13526 = !DILocation(line: 4418, column: 11, scope: !13123)
!13527 = !DILocation(line: 4418, column: 9, scope: !13123)
!13528 = !DILocation(line: 4419, column: 6, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4419, column: 6)
!13530 = !DILocation(line: 4419, column: 13, scope: !13529)
!13531 = !DILocation(line: 4419, column: 6, scope: !13123)
!13532 = !DILocation(line: 4420, column: 3, scope: !13529)
!13533 = !DILocation(line: 4421, column: 19, scope: !13123)
!13534 = !DILocation(line: 4421, column: 11, scope: !13123)
!13535 = !DILocation(line: 4421, column: 9, scope: !13123)
!13536 = !DILocation(line: 4422, column: 6, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4422, column: 6)
!13538 = !DILocation(line: 4422, column: 13, scope: !13537)
!13539 = !DILocation(line: 4422, column: 6, scope: !13123)
!13540 = !DILocation(line: 4423, column: 3, scope: !13537)
!13541 = !DILocation(line: 4424, column: 19, scope: !13123)
!13542 = !DILocation(line: 4424, column: 11, scope: !13123)
!13543 = !DILocation(line: 4424, column: 9, scope: !13123)
!13544 = !DILocation(line: 4425, column: 6, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4425, column: 6)
!13546 = !DILocation(line: 4425, column: 13, scope: !13545)
!13547 = !DILocation(line: 4425, column: 6, scope: !13123)
!13548 = !DILocation(line: 4426, column: 3, scope: !13545)
!13549 = !DILocation(line: 4425, column: 15, scope: !13545)
!13550 = !DILabel(scope: !13123, name: "error", file: !3, line: 4428)
!13551 = !DILocation(line: 4428, column: 1, scope: !13123)
!13552 = !DILocation(line: 4429, column: 6, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 4429, column: 6)
!13554 = !DILocation(line: 4429, column: 13, scope: !13553)
!13555 = !DILocation(line: 4429, column: 6, scope: !13123)
!13556 = !DILocation(line: 4430, column: 3, scope: !13553)
!13557 = !DILocation(line: 4431, column: 9, scope: !13123)
!13558 = !DILocation(line: 4431, column: 2, scope: !13123)
!13559 = distinct !DISubprogram(name: "set_qam32", scope: !3, file: !3, line: 4441, type: !5239, scopeLine: 4442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!13560 = !DILocalVariable(name: "state", arg: 1, scope: !13559, file: !3, line: 4441, type: !4562)
!13561 = !DILocation(line: 4441, column: 41, scope: !13559)
!13562 = !DILocalVariable(name: "status", scope: !13559, file: !3, line: 4443, type: !405)
!13563 = !DILocation(line: 4443, column: 6, scope: !13559)
!13564 = !DILocation(line: 4445, column: 2, scope: !13559)
!13565 = !DILocation(line: 4445, column: 2, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13567, file: !3, line: 4445, column: 2)
!13567 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4445, column: 2)
!13568 = !DILocation(line: 4445, column: 2, scope: !13567)
!13569 = !DILocation(line: 4449, column: 19, scope: !13559)
!13570 = !DILocation(line: 4449, column: 11, scope: !13559)
!13571 = !DILocation(line: 4449, column: 9, scope: !13559)
!13572 = !DILocation(line: 4450, column: 6, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4450, column: 6)
!13574 = !DILocation(line: 4450, column: 13, scope: !13573)
!13575 = !DILocation(line: 4450, column: 6, scope: !13559)
!13576 = !DILocation(line: 4451, column: 3, scope: !13573)
!13577 = !DILocation(line: 4452, column: 19, scope: !13559)
!13578 = !DILocation(line: 4452, column: 11, scope: !13559)
!13579 = !DILocation(line: 4452, column: 9, scope: !13559)
!13580 = !DILocation(line: 4453, column: 6, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4453, column: 6)
!13582 = !DILocation(line: 4453, column: 13, scope: !13581)
!13583 = !DILocation(line: 4453, column: 6, scope: !13559)
!13584 = !DILocation(line: 4454, column: 3, scope: !13581)
!13585 = !DILocation(line: 4455, column: 19, scope: !13559)
!13586 = !DILocation(line: 4455, column: 11, scope: !13559)
!13587 = !DILocation(line: 4455, column: 9, scope: !13559)
!13588 = !DILocation(line: 4456, column: 6, scope: !13589)
!13589 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4456, column: 6)
!13590 = !DILocation(line: 4456, column: 13, scope: !13589)
!13591 = !DILocation(line: 4456, column: 6, scope: !13559)
!13592 = !DILocation(line: 4457, column: 3, scope: !13589)
!13593 = !DILocation(line: 4458, column: 19, scope: !13559)
!13594 = !DILocation(line: 4458, column: 11, scope: !13559)
!13595 = !DILocation(line: 4458, column: 9, scope: !13559)
!13596 = !DILocation(line: 4459, column: 6, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4459, column: 6)
!13598 = !DILocation(line: 4459, column: 13, scope: !13597)
!13599 = !DILocation(line: 4459, column: 6, scope: !13559)
!13600 = !DILocation(line: 4460, column: 3, scope: !13597)
!13601 = !DILocation(line: 4461, column: 19, scope: !13559)
!13602 = !DILocation(line: 4461, column: 11, scope: !13559)
!13603 = !DILocation(line: 4461, column: 9, scope: !13559)
!13604 = !DILocation(line: 4462, column: 6, scope: !13605)
!13605 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4462, column: 6)
!13606 = !DILocation(line: 4462, column: 13, scope: !13605)
!13607 = !DILocation(line: 4462, column: 6, scope: !13559)
!13608 = !DILocation(line: 4463, column: 3, scope: !13605)
!13609 = !DILocation(line: 4464, column: 19, scope: !13559)
!13610 = !DILocation(line: 4464, column: 11, scope: !13559)
!13611 = !DILocation(line: 4464, column: 9, scope: !13559)
!13612 = !DILocation(line: 4465, column: 6, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4465, column: 6)
!13614 = !DILocation(line: 4465, column: 13, scope: !13613)
!13615 = !DILocation(line: 4465, column: 6, scope: !13559)
!13616 = !DILocation(line: 4466, column: 3, scope: !13613)
!13617 = !DILocation(line: 4469, column: 19, scope: !13559)
!13618 = !DILocation(line: 4469, column: 11, scope: !13559)
!13619 = !DILocation(line: 4469, column: 9, scope: !13559)
!13620 = !DILocation(line: 4470, column: 6, scope: !13621)
!13621 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4470, column: 6)
!13622 = !DILocation(line: 4470, column: 13, scope: !13621)
!13623 = !DILocation(line: 4470, column: 6, scope: !13559)
!13624 = !DILocation(line: 4471, column: 3, scope: !13621)
!13625 = !DILocation(line: 4472, column: 19, scope: !13559)
!13626 = !DILocation(line: 4472, column: 11, scope: !13559)
!13627 = !DILocation(line: 4472, column: 9, scope: !13559)
!13628 = !DILocation(line: 4473, column: 6, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4473, column: 6)
!13630 = !DILocation(line: 4473, column: 13, scope: !13629)
!13631 = !DILocation(line: 4473, column: 6, scope: !13559)
!13632 = !DILocation(line: 4474, column: 3, scope: !13629)
!13633 = !DILocation(line: 4475, column: 19, scope: !13559)
!13634 = !DILocation(line: 4475, column: 11, scope: !13559)
!13635 = !DILocation(line: 4475, column: 9, scope: !13559)
!13636 = !DILocation(line: 4476, column: 6, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4476, column: 6)
!13638 = !DILocation(line: 4476, column: 13, scope: !13637)
!13639 = !DILocation(line: 4476, column: 6, scope: !13559)
!13640 = !DILocation(line: 4477, column: 3, scope: !13637)
!13641 = !DILocation(line: 4478, column: 19, scope: !13559)
!13642 = !DILocation(line: 4478, column: 11, scope: !13559)
!13643 = !DILocation(line: 4478, column: 9, scope: !13559)
!13644 = !DILocation(line: 4479, column: 6, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4479, column: 6)
!13646 = !DILocation(line: 4479, column: 13, scope: !13645)
!13647 = !DILocation(line: 4479, column: 6, scope: !13559)
!13648 = !DILocation(line: 4480, column: 3, scope: !13645)
!13649 = !DILocation(line: 4481, column: 19, scope: !13559)
!13650 = !DILocation(line: 4481, column: 11, scope: !13559)
!13651 = !DILocation(line: 4481, column: 9, scope: !13559)
!13652 = !DILocation(line: 4482, column: 6, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4482, column: 6)
!13654 = !DILocation(line: 4482, column: 13, scope: !13653)
!13655 = !DILocation(line: 4482, column: 6, scope: !13559)
!13656 = !DILocation(line: 4483, column: 3, scope: !13653)
!13657 = !DILocation(line: 4484, column: 19, scope: !13559)
!13658 = !DILocation(line: 4484, column: 11, scope: !13559)
!13659 = !DILocation(line: 4484, column: 9, scope: !13559)
!13660 = !DILocation(line: 4485, column: 6, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4485, column: 6)
!13662 = !DILocation(line: 4485, column: 13, scope: !13661)
!13663 = !DILocation(line: 4485, column: 6, scope: !13559)
!13664 = !DILocation(line: 4486, column: 3, scope: !13661)
!13665 = !DILocation(line: 4488, column: 19, scope: !13559)
!13666 = !DILocation(line: 4488, column: 11, scope: !13559)
!13667 = !DILocation(line: 4488, column: 9, scope: !13559)
!13668 = !DILocation(line: 4489, column: 6, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4489, column: 6)
!13670 = !DILocation(line: 4489, column: 13, scope: !13669)
!13671 = !DILocation(line: 4489, column: 6, scope: !13559)
!13672 = !DILocation(line: 4490, column: 3, scope: !13669)
!13673 = !DILocation(line: 4491, column: 19, scope: !13559)
!13674 = !DILocation(line: 4491, column: 11, scope: !13559)
!13675 = !DILocation(line: 4491, column: 9, scope: !13559)
!13676 = !DILocation(line: 4492, column: 6, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4492, column: 6)
!13678 = !DILocation(line: 4492, column: 13, scope: !13677)
!13679 = !DILocation(line: 4492, column: 6, scope: !13559)
!13680 = !DILocation(line: 4493, column: 3, scope: !13677)
!13681 = !DILocation(line: 4494, column: 19, scope: !13559)
!13682 = !DILocation(line: 4494, column: 11, scope: !13559)
!13683 = !DILocation(line: 4494, column: 9, scope: !13559)
!13684 = !DILocation(line: 4495, column: 6, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4495, column: 6)
!13686 = !DILocation(line: 4495, column: 13, scope: !13685)
!13687 = !DILocation(line: 4495, column: 6, scope: !13559)
!13688 = !DILocation(line: 4496, column: 3, scope: !13685)
!13689 = !DILocation(line: 4500, column: 19, scope: !13559)
!13690 = !DILocation(line: 4500, column: 11, scope: !13559)
!13691 = !DILocation(line: 4500, column: 9, scope: !13559)
!13692 = !DILocation(line: 4502, column: 6, scope: !13693)
!13693 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4502, column: 6)
!13694 = !DILocation(line: 4502, column: 13, scope: !13693)
!13695 = !DILocation(line: 4502, column: 6, scope: !13559)
!13696 = !DILocation(line: 4503, column: 3, scope: !13693)
!13697 = !DILocation(line: 4508, column: 19, scope: !13559)
!13698 = !DILocation(line: 4508, column: 11, scope: !13559)
!13699 = !DILocation(line: 4508, column: 9, scope: !13559)
!13700 = !DILocation(line: 4509, column: 6, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4509, column: 6)
!13702 = !DILocation(line: 4509, column: 13, scope: !13701)
!13703 = !DILocation(line: 4509, column: 6, scope: !13559)
!13704 = !DILocation(line: 4510, column: 3, scope: !13701)
!13705 = !DILocation(line: 4511, column: 19, scope: !13559)
!13706 = !DILocation(line: 4511, column: 11, scope: !13559)
!13707 = !DILocation(line: 4511, column: 9, scope: !13559)
!13708 = !DILocation(line: 4512, column: 6, scope: !13709)
!13709 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4512, column: 6)
!13710 = !DILocation(line: 4512, column: 13, scope: !13709)
!13711 = !DILocation(line: 4512, column: 6, scope: !13559)
!13712 = !DILocation(line: 4513, column: 3, scope: !13709)
!13713 = !DILocation(line: 4514, column: 19, scope: !13559)
!13714 = !DILocation(line: 4514, column: 11, scope: !13559)
!13715 = !DILocation(line: 4514, column: 9, scope: !13559)
!13716 = !DILocation(line: 4515, column: 6, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4515, column: 6)
!13718 = !DILocation(line: 4515, column: 13, scope: !13717)
!13719 = !DILocation(line: 4515, column: 6, scope: !13559)
!13720 = !DILocation(line: 4516, column: 3, scope: !13717)
!13721 = !DILocation(line: 4517, column: 19, scope: !13559)
!13722 = !DILocation(line: 4517, column: 11, scope: !13559)
!13723 = !DILocation(line: 4517, column: 9, scope: !13559)
!13724 = !DILocation(line: 4518, column: 6, scope: !13725)
!13725 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4518, column: 6)
!13726 = !DILocation(line: 4518, column: 13, scope: !13725)
!13727 = !DILocation(line: 4518, column: 6, scope: !13559)
!13728 = !DILocation(line: 4519, column: 3, scope: !13725)
!13729 = !DILocation(line: 4520, column: 19, scope: !13559)
!13730 = !DILocation(line: 4520, column: 11, scope: !13559)
!13731 = !DILocation(line: 4520, column: 9, scope: !13559)
!13732 = !DILocation(line: 4521, column: 6, scope: !13733)
!13733 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4521, column: 6)
!13734 = !DILocation(line: 4521, column: 13, scope: !13733)
!13735 = !DILocation(line: 4521, column: 6, scope: !13559)
!13736 = !DILocation(line: 4522, column: 3, scope: !13733)
!13737 = !DILocation(line: 4523, column: 19, scope: !13559)
!13738 = !DILocation(line: 4523, column: 11, scope: !13559)
!13739 = !DILocation(line: 4523, column: 9, scope: !13559)
!13740 = !DILocation(line: 4524, column: 6, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4524, column: 6)
!13742 = !DILocation(line: 4524, column: 13, scope: !13741)
!13743 = !DILocation(line: 4524, column: 6, scope: !13559)
!13744 = !DILocation(line: 4525, column: 3, scope: !13741)
!13745 = !DILocation(line: 4526, column: 19, scope: !13559)
!13746 = !DILocation(line: 4526, column: 11, scope: !13559)
!13747 = !DILocation(line: 4526, column: 9, scope: !13559)
!13748 = !DILocation(line: 4527, column: 6, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4527, column: 6)
!13750 = !DILocation(line: 4527, column: 13, scope: !13749)
!13751 = !DILocation(line: 4527, column: 6, scope: !13559)
!13752 = !DILocation(line: 4528, column: 3, scope: !13749)
!13753 = !DILocation(line: 4529, column: 19, scope: !13559)
!13754 = !DILocation(line: 4529, column: 11, scope: !13559)
!13755 = !DILocation(line: 4529, column: 9, scope: !13559)
!13756 = !DILocation(line: 4530, column: 6, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4530, column: 6)
!13758 = !DILocation(line: 4530, column: 13, scope: !13757)
!13759 = !DILocation(line: 4530, column: 6, scope: !13559)
!13760 = !DILocation(line: 4531, column: 3, scope: !13757)
!13761 = !DILocation(line: 4533, column: 19, scope: !13559)
!13762 = !DILocation(line: 4533, column: 11, scope: !13559)
!13763 = !DILocation(line: 4533, column: 9, scope: !13559)
!13764 = !DILocation(line: 4534, column: 6, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4534, column: 6)
!13766 = !DILocation(line: 4534, column: 13, scope: !13765)
!13767 = !DILocation(line: 4534, column: 6, scope: !13559)
!13768 = !DILocation(line: 4535, column: 3, scope: !13765)
!13769 = !DILocation(line: 4536, column: 19, scope: !13559)
!13770 = !DILocation(line: 4536, column: 11, scope: !13559)
!13771 = !DILocation(line: 4536, column: 9, scope: !13559)
!13772 = !DILocation(line: 4537, column: 6, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4537, column: 6)
!13774 = !DILocation(line: 4537, column: 13, scope: !13773)
!13775 = !DILocation(line: 4537, column: 6, scope: !13559)
!13776 = !DILocation(line: 4538, column: 3, scope: !13773)
!13777 = !DILocation(line: 4539, column: 19, scope: !13559)
!13778 = !DILocation(line: 4539, column: 11, scope: !13559)
!13779 = !DILocation(line: 4539, column: 9, scope: !13559)
!13780 = !DILocation(line: 4540, column: 6, scope: !13781)
!13781 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4540, column: 6)
!13782 = !DILocation(line: 4540, column: 13, scope: !13781)
!13783 = !DILocation(line: 4540, column: 6, scope: !13559)
!13784 = !DILocation(line: 4541, column: 3, scope: !13781)
!13785 = !DILocation(line: 4542, column: 19, scope: !13559)
!13786 = !DILocation(line: 4542, column: 11, scope: !13559)
!13787 = !DILocation(line: 4542, column: 9, scope: !13559)
!13788 = !DILocation(line: 4543, column: 6, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4543, column: 6)
!13790 = !DILocation(line: 4543, column: 13, scope: !13789)
!13791 = !DILocation(line: 4543, column: 6, scope: !13559)
!13792 = !DILocation(line: 4544, column: 3, scope: !13789)
!13793 = !DILocation(line: 4545, column: 19, scope: !13559)
!13794 = !DILocation(line: 4545, column: 11, scope: !13559)
!13795 = !DILocation(line: 4545, column: 9, scope: !13559)
!13796 = !DILocation(line: 4546, column: 6, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4546, column: 6)
!13798 = !DILocation(line: 4546, column: 13, scope: !13797)
!13799 = !DILocation(line: 4546, column: 6, scope: !13559)
!13800 = !DILocation(line: 4547, column: 3, scope: !13797)
!13801 = !DILocation(line: 4548, column: 19, scope: !13559)
!13802 = !DILocation(line: 4548, column: 11, scope: !13559)
!13803 = !DILocation(line: 4548, column: 9, scope: !13559)
!13804 = !DILocation(line: 4549, column: 6, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4549, column: 6)
!13806 = !DILocation(line: 4549, column: 13, scope: !13805)
!13807 = !DILocation(line: 4549, column: 6, scope: !13559)
!13808 = !DILocation(line: 4550, column: 3, scope: !13805)
!13809 = !DILocation(line: 4551, column: 19, scope: !13559)
!13810 = !DILocation(line: 4551, column: 11, scope: !13559)
!13811 = !DILocation(line: 4551, column: 9, scope: !13559)
!13812 = !DILocation(line: 4552, column: 6, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4552, column: 6)
!13814 = !DILocation(line: 4552, column: 13, scope: !13813)
!13815 = !DILocation(line: 4552, column: 6, scope: !13559)
!13816 = !DILocation(line: 4553, column: 3, scope: !13813)
!13817 = !DILocation(line: 4554, column: 19, scope: !13559)
!13818 = !DILocation(line: 4554, column: 11, scope: !13559)
!13819 = !DILocation(line: 4554, column: 9, scope: !13559)
!13820 = !DILocation(line: 4555, column: 6, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4555, column: 6)
!13822 = !DILocation(line: 4555, column: 13, scope: !13821)
!13823 = !DILocation(line: 4555, column: 6, scope: !13559)
!13824 = !DILocation(line: 4556, column: 3, scope: !13821)
!13825 = !DILocation(line: 4557, column: 19, scope: !13559)
!13826 = !DILocation(line: 4557, column: 11, scope: !13559)
!13827 = !DILocation(line: 4557, column: 9, scope: !13559)
!13828 = !DILocation(line: 4558, column: 6, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4558, column: 6)
!13830 = !DILocation(line: 4558, column: 13, scope: !13829)
!13831 = !DILocation(line: 4558, column: 6, scope: !13559)
!13832 = !DILocation(line: 4559, column: 3, scope: !13829)
!13833 = !DILocation(line: 4560, column: 19, scope: !13559)
!13834 = !DILocation(line: 4560, column: 11, scope: !13559)
!13835 = !DILocation(line: 4560, column: 9, scope: !13559)
!13836 = !DILocation(line: 4561, column: 6, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4561, column: 6)
!13838 = !DILocation(line: 4561, column: 13, scope: !13837)
!13839 = !DILocation(line: 4561, column: 6, scope: !13559)
!13840 = !DILocation(line: 4562, column: 3, scope: !13837)
!13841 = !DILocation(line: 4563, column: 19, scope: !13559)
!13842 = !DILocation(line: 4563, column: 11, scope: !13559)
!13843 = !DILocation(line: 4563, column: 9, scope: !13559)
!13844 = !DILocation(line: 4564, column: 6, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4564, column: 6)
!13846 = !DILocation(line: 4564, column: 13, scope: !13845)
!13847 = !DILocation(line: 4564, column: 6, scope: !13559)
!13848 = !DILocation(line: 4565, column: 3, scope: !13845)
!13849 = !DILocation(line: 4566, column: 19, scope: !13559)
!13850 = !DILocation(line: 4566, column: 11, scope: !13559)
!13851 = !DILocation(line: 4566, column: 9, scope: !13559)
!13852 = !DILocation(line: 4567, column: 6, scope: !13853)
!13853 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4567, column: 6)
!13854 = !DILocation(line: 4567, column: 13, scope: !13853)
!13855 = !DILocation(line: 4567, column: 6, scope: !13559)
!13856 = !DILocation(line: 4568, column: 3, scope: !13853)
!13857 = !DILocation(line: 4573, column: 19, scope: !13559)
!13858 = !DILocation(line: 4573, column: 11, scope: !13559)
!13859 = !DILocation(line: 4573, column: 9, scope: !13559)
!13860 = !DILocation(line: 4574, column: 6, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4574, column: 6)
!13862 = !DILocation(line: 4574, column: 13, scope: !13861)
!13863 = !DILocation(line: 4574, column: 6, scope: !13559)
!13864 = !DILocation(line: 4575, column: 3, scope: !13861)
!13865 = !DILocation(line: 4576, column: 19, scope: !13559)
!13866 = !DILocation(line: 4576, column: 11, scope: !13559)
!13867 = !DILocation(line: 4576, column: 9, scope: !13559)
!13868 = !DILocation(line: 4577, column: 6, scope: !13869)
!13869 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4577, column: 6)
!13870 = !DILocation(line: 4577, column: 13, scope: !13869)
!13871 = !DILocation(line: 4577, column: 6, scope: !13559)
!13872 = !DILocation(line: 4578, column: 3, scope: !13869)
!13873 = !DILocation(line: 4579, column: 19, scope: !13559)
!13874 = !DILocation(line: 4579, column: 11, scope: !13559)
!13875 = !DILocation(line: 4579, column: 9, scope: !13559)
!13876 = !DILocation(line: 4580, column: 6, scope: !13877)
!13877 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4580, column: 6)
!13878 = !DILocation(line: 4580, column: 13, scope: !13877)
!13879 = !DILocation(line: 4580, column: 6, scope: !13559)
!13880 = !DILocation(line: 4581, column: 3, scope: !13877)
!13881 = !DILocation(line: 4582, column: 19, scope: !13559)
!13882 = !DILocation(line: 4582, column: 11, scope: !13559)
!13883 = !DILocation(line: 4582, column: 9, scope: !13559)
!13884 = !DILocation(line: 4583, column: 6, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4583, column: 6)
!13886 = !DILocation(line: 4583, column: 13, scope: !13885)
!13887 = !DILocation(line: 4583, column: 6, scope: !13559)
!13888 = !DILocation(line: 4584, column: 3, scope: !13885)
!13889 = !DILocation(line: 4585, column: 19, scope: !13559)
!13890 = !DILocation(line: 4585, column: 11, scope: !13559)
!13891 = !DILocation(line: 4585, column: 9, scope: !13559)
!13892 = !DILocation(line: 4586, column: 6, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4586, column: 6)
!13894 = !DILocation(line: 4586, column: 13, scope: !13893)
!13895 = !DILocation(line: 4586, column: 6, scope: !13559)
!13896 = !DILocation(line: 4587, column: 3, scope: !13893)
!13897 = !DILocation(line: 4588, column: 19, scope: !13559)
!13898 = !DILocation(line: 4588, column: 11, scope: !13559)
!13899 = !DILocation(line: 4588, column: 9, scope: !13559)
!13900 = !DILocation(line: 4589, column: 6, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4589, column: 6)
!13902 = !DILocation(line: 4589, column: 13, scope: !13901)
!13903 = !DILocation(line: 4589, column: 6, scope: !13559)
!13904 = !DILocation(line: 4590, column: 3, scope: !13901)
!13905 = !DILocation(line: 4592, column: 19, scope: !13559)
!13906 = !DILocation(line: 4592, column: 11, scope: !13559)
!13907 = !DILocation(line: 4592, column: 9, scope: !13559)
!13908 = !DILocation(line: 4593, column: 6, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4593, column: 6)
!13910 = !DILocation(line: 4593, column: 13, scope: !13909)
!13911 = !DILocation(line: 4593, column: 6, scope: !13559)
!13912 = !DILocation(line: 4594, column: 3, scope: !13909)
!13913 = !DILocation(line: 4595, column: 19, scope: !13559)
!13914 = !DILocation(line: 4595, column: 11, scope: !13559)
!13915 = !DILocation(line: 4595, column: 9, scope: !13559)
!13916 = !DILocation(line: 4596, column: 6, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4596, column: 6)
!13918 = !DILocation(line: 4596, column: 13, scope: !13917)
!13919 = !DILocation(line: 4596, column: 6, scope: !13559)
!13920 = !DILocation(line: 4597, column: 3, scope: !13917)
!13921 = !DILocation(line: 4598, column: 19, scope: !13559)
!13922 = !DILocation(line: 4598, column: 11, scope: !13559)
!13923 = !DILocation(line: 4598, column: 9, scope: !13559)
!13924 = !DILocation(line: 4599, column: 6, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4599, column: 6)
!13926 = !DILocation(line: 4599, column: 13, scope: !13925)
!13927 = !DILocation(line: 4599, column: 6, scope: !13559)
!13928 = !DILocation(line: 4600, column: 3, scope: !13925)
!13929 = !DILocation(line: 4605, column: 19, scope: !13559)
!13930 = !DILocation(line: 4605, column: 11, scope: !13559)
!13931 = !DILocation(line: 4605, column: 9, scope: !13559)
!13932 = !DILocation(line: 4606, column: 6, scope: !13933)
!13933 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4606, column: 6)
!13934 = !DILocation(line: 4606, column: 13, scope: !13933)
!13935 = !DILocation(line: 4606, column: 6, scope: !13559)
!13936 = !DILocation(line: 4607, column: 3, scope: !13933)
!13937 = !DILocation(line: 4608, column: 19, scope: !13559)
!13938 = !DILocation(line: 4608, column: 11, scope: !13559)
!13939 = !DILocation(line: 4608, column: 9, scope: !13559)
!13940 = !DILocation(line: 4609, column: 6, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4609, column: 6)
!13942 = !DILocation(line: 4609, column: 13, scope: !13941)
!13943 = !DILocation(line: 4609, column: 6, scope: !13559)
!13944 = !DILocation(line: 4610, column: 3, scope: !13941)
!13945 = !DILocation(line: 4611, column: 19, scope: !13559)
!13946 = !DILocation(line: 4611, column: 11, scope: !13559)
!13947 = !DILocation(line: 4611, column: 9, scope: !13559)
!13948 = !DILocation(line: 4612, column: 6, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4612, column: 6)
!13950 = !DILocation(line: 4612, column: 13, scope: !13949)
!13951 = !DILocation(line: 4612, column: 6, scope: !13559)
!13952 = !DILocation(line: 4613, column: 3, scope: !13949)
!13953 = !DILocation(line: 4614, column: 19, scope: !13559)
!13954 = !DILocation(line: 4614, column: 11, scope: !13559)
!13955 = !DILocation(line: 4614, column: 9, scope: !13559)
!13956 = !DILocation(line: 4615, column: 6, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4615, column: 6)
!13958 = !DILocation(line: 4615, column: 13, scope: !13957)
!13959 = !DILocation(line: 4615, column: 6, scope: !13559)
!13960 = !DILocation(line: 4616, column: 3, scope: !13957)
!13961 = !DILocation(line: 4617, column: 19, scope: !13559)
!13962 = !DILocation(line: 4617, column: 11, scope: !13559)
!13963 = !DILocation(line: 4617, column: 9, scope: !13559)
!13964 = !DILocation(line: 4618, column: 6, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4618, column: 6)
!13966 = !DILocation(line: 4618, column: 13, scope: !13965)
!13967 = !DILocation(line: 4618, column: 6, scope: !13559)
!13968 = !DILocation(line: 4619, column: 3, scope: !13965)
!13969 = !DILocation(line: 4620, column: 19, scope: !13559)
!13970 = !DILocation(line: 4620, column: 11, scope: !13559)
!13971 = !DILocation(line: 4620, column: 9, scope: !13559)
!13972 = !DILocation(line: 4621, column: 6, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4621, column: 6)
!13974 = !DILocation(line: 4621, column: 13, scope: !13973)
!13975 = !DILocation(line: 4621, column: 6, scope: !13559)
!13976 = !DILocation(line: 4622, column: 3, scope: !13973)
!13977 = !DILocation(line: 4623, column: 19, scope: !13559)
!13978 = !DILocation(line: 4623, column: 11, scope: !13559)
!13979 = !DILocation(line: 4623, column: 9, scope: !13559)
!13980 = !DILocation(line: 4623, column: 2, scope: !13559)
!13981 = !DILabel(scope: !13559, name: "error", file: !3, line: 4624)
!13982 = !DILocation(line: 4624, column: 1, scope: !13559)
!13983 = !DILocation(line: 4625, column: 6, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 4625, column: 6)
!13985 = !DILocation(line: 4625, column: 13, scope: !13984)
!13986 = !DILocation(line: 4625, column: 6, scope: !13559)
!13987 = !DILocation(line: 4626, column: 3, scope: !13984)
!13988 = !DILocation(line: 4627, column: 9, scope: !13559)
!13989 = !DILocation(line: 4627, column: 2, scope: !13559)
!13990 = distinct !DISubprogram(name: "set_qam64", scope: !3, file: !3, line: 4637, type: !5239, scopeLine: 4638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!13991 = !DILocalVariable(name: "state", arg: 1, scope: !13990, file: !3, line: 4637, type: !4562)
!13992 = !DILocation(line: 4637, column: 41, scope: !13990)
!13993 = !DILocalVariable(name: "status", scope: !13990, file: !3, line: 4639, type: !405)
!13994 = !DILocation(line: 4639, column: 6, scope: !13990)
!13995 = !DILocation(line: 4641, column: 2, scope: !13990)
!13996 = !DILocation(line: 4641, column: 2, scope: !13997)
!13997 = distinct !DILexicalBlock(scope: !13998, file: !3, line: 4641, column: 2)
!13998 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4641, column: 2)
!13999 = !DILocation(line: 4641, column: 2, scope: !13998)
!14000 = !DILocation(line: 4644, column: 19, scope: !13990)
!14001 = !DILocation(line: 4644, column: 11, scope: !13990)
!14002 = !DILocation(line: 4644, column: 9, scope: !13990)
!14003 = !DILocation(line: 4645, column: 6, scope: !14004)
!14004 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4645, column: 6)
!14005 = !DILocation(line: 4645, column: 13, scope: !14004)
!14006 = !DILocation(line: 4645, column: 6, scope: !13990)
!14007 = !DILocation(line: 4646, column: 3, scope: !14004)
!14008 = !DILocation(line: 4647, column: 19, scope: !13990)
!14009 = !DILocation(line: 4647, column: 11, scope: !13990)
!14010 = !DILocation(line: 4647, column: 9, scope: !13990)
!14011 = !DILocation(line: 4648, column: 6, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4648, column: 6)
!14013 = !DILocation(line: 4648, column: 13, scope: !14012)
!14014 = !DILocation(line: 4648, column: 6, scope: !13990)
!14015 = !DILocation(line: 4649, column: 3, scope: !14012)
!14016 = !DILocation(line: 4650, column: 19, scope: !13990)
!14017 = !DILocation(line: 4650, column: 11, scope: !13990)
!14018 = !DILocation(line: 4650, column: 9, scope: !13990)
!14019 = !DILocation(line: 4651, column: 6, scope: !14020)
!14020 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4651, column: 6)
!14021 = !DILocation(line: 4651, column: 13, scope: !14020)
!14022 = !DILocation(line: 4651, column: 6, scope: !13990)
!14023 = !DILocation(line: 4652, column: 3, scope: !14020)
!14024 = !DILocation(line: 4653, column: 19, scope: !13990)
!14025 = !DILocation(line: 4653, column: 11, scope: !13990)
!14026 = !DILocation(line: 4653, column: 9, scope: !13990)
!14027 = !DILocation(line: 4654, column: 6, scope: !14028)
!14028 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4654, column: 6)
!14029 = !DILocation(line: 4654, column: 13, scope: !14028)
!14030 = !DILocation(line: 4654, column: 6, scope: !13990)
!14031 = !DILocation(line: 4655, column: 3, scope: !14028)
!14032 = !DILocation(line: 4656, column: 19, scope: !13990)
!14033 = !DILocation(line: 4656, column: 11, scope: !13990)
!14034 = !DILocation(line: 4656, column: 9, scope: !13990)
!14035 = !DILocation(line: 4657, column: 6, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4657, column: 6)
!14037 = !DILocation(line: 4657, column: 13, scope: !14036)
!14038 = !DILocation(line: 4657, column: 6, scope: !13990)
!14039 = !DILocation(line: 4658, column: 3, scope: !14036)
!14040 = !DILocation(line: 4659, column: 19, scope: !13990)
!14041 = !DILocation(line: 4659, column: 11, scope: !13990)
!14042 = !DILocation(line: 4659, column: 9, scope: !13990)
!14043 = !DILocation(line: 4660, column: 6, scope: !14044)
!14044 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4660, column: 6)
!14045 = !DILocation(line: 4660, column: 13, scope: !14044)
!14046 = !DILocation(line: 4660, column: 6, scope: !13990)
!14047 = !DILocation(line: 4661, column: 3, scope: !14044)
!14048 = !DILocation(line: 4664, column: 19, scope: !13990)
!14049 = !DILocation(line: 4664, column: 11, scope: !13990)
!14050 = !DILocation(line: 4664, column: 9, scope: !13990)
!14051 = !DILocation(line: 4665, column: 6, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4665, column: 6)
!14053 = !DILocation(line: 4665, column: 13, scope: !14052)
!14054 = !DILocation(line: 4665, column: 6, scope: !13990)
!14055 = !DILocation(line: 4666, column: 3, scope: !14052)
!14056 = !DILocation(line: 4667, column: 19, scope: !13990)
!14057 = !DILocation(line: 4667, column: 11, scope: !13990)
!14058 = !DILocation(line: 4667, column: 9, scope: !13990)
!14059 = !DILocation(line: 4668, column: 6, scope: !14060)
!14060 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4668, column: 6)
!14061 = !DILocation(line: 4668, column: 13, scope: !14060)
!14062 = !DILocation(line: 4668, column: 6, scope: !13990)
!14063 = !DILocation(line: 4669, column: 3, scope: !14060)
!14064 = !DILocation(line: 4670, column: 19, scope: !13990)
!14065 = !DILocation(line: 4670, column: 11, scope: !13990)
!14066 = !DILocation(line: 4670, column: 9, scope: !13990)
!14067 = !DILocation(line: 4671, column: 6, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4671, column: 6)
!14069 = !DILocation(line: 4671, column: 13, scope: !14068)
!14070 = !DILocation(line: 4671, column: 6, scope: !13990)
!14071 = !DILocation(line: 4672, column: 3, scope: !14068)
!14072 = !DILocation(line: 4673, column: 19, scope: !13990)
!14073 = !DILocation(line: 4673, column: 11, scope: !13990)
!14074 = !DILocation(line: 4673, column: 9, scope: !13990)
!14075 = !DILocation(line: 4674, column: 6, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4674, column: 6)
!14077 = !DILocation(line: 4674, column: 13, scope: !14076)
!14078 = !DILocation(line: 4674, column: 6, scope: !13990)
!14079 = !DILocation(line: 4675, column: 3, scope: !14076)
!14080 = !DILocation(line: 4676, column: 19, scope: !13990)
!14081 = !DILocation(line: 4676, column: 11, scope: !13990)
!14082 = !DILocation(line: 4676, column: 9, scope: !13990)
!14083 = !DILocation(line: 4677, column: 6, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4677, column: 6)
!14085 = !DILocation(line: 4677, column: 13, scope: !14084)
!14086 = !DILocation(line: 4677, column: 6, scope: !13990)
!14087 = !DILocation(line: 4678, column: 3, scope: !14084)
!14088 = !DILocation(line: 4679, column: 19, scope: !13990)
!14089 = !DILocation(line: 4679, column: 11, scope: !13990)
!14090 = !DILocation(line: 4679, column: 9, scope: !13990)
!14091 = !DILocation(line: 4680, column: 6, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4680, column: 6)
!14093 = !DILocation(line: 4680, column: 13, scope: !14092)
!14094 = !DILocation(line: 4680, column: 6, scope: !13990)
!14095 = !DILocation(line: 4681, column: 3, scope: !14092)
!14096 = !DILocation(line: 4683, column: 19, scope: !13990)
!14097 = !DILocation(line: 4683, column: 11, scope: !13990)
!14098 = !DILocation(line: 4683, column: 9, scope: !13990)
!14099 = !DILocation(line: 4684, column: 6, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4684, column: 6)
!14101 = !DILocation(line: 4684, column: 13, scope: !14100)
!14102 = !DILocation(line: 4684, column: 6, scope: !13990)
!14103 = !DILocation(line: 4685, column: 3, scope: !14100)
!14104 = !DILocation(line: 4686, column: 19, scope: !13990)
!14105 = !DILocation(line: 4686, column: 11, scope: !13990)
!14106 = !DILocation(line: 4686, column: 9, scope: !13990)
!14107 = !DILocation(line: 4687, column: 6, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4687, column: 6)
!14109 = !DILocation(line: 4687, column: 13, scope: !14108)
!14110 = !DILocation(line: 4687, column: 6, scope: !13990)
!14111 = !DILocation(line: 4688, column: 3, scope: !14108)
!14112 = !DILocation(line: 4689, column: 19, scope: !13990)
!14113 = !DILocation(line: 4689, column: 11, scope: !13990)
!14114 = !DILocation(line: 4689, column: 9, scope: !13990)
!14115 = !DILocation(line: 4690, column: 6, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4690, column: 6)
!14117 = !DILocation(line: 4690, column: 13, scope: !14116)
!14118 = !DILocation(line: 4690, column: 6, scope: !13990)
!14119 = !DILocation(line: 4691, column: 3, scope: !14116)
!14120 = !DILocation(line: 4694, column: 19, scope: !13990)
!14121 = !DILocation(line: 4694, column: 11, scope: !13990)
!14122 = !DILocation(line: 4694, column: 9, scope: !13990)
!14123 = !DILocation(line: 4696, column: 6, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4696, column: 6)
!14125 = !DILocation(line: 4696, column: 13, scope: !14124)
!14126 = !DILocation(line: 4696, column: 6, scope: !13990)
!14127 = !DILocation(line: 4697, column: 3, scope: !14124)
!14128 = !DILocation(line: 4702, column: 19, scope: !13990)
!14129 = !DILocation(line: 4702, column: 11, scope: !13990)
!14130 = !DILocation(line: 4702, column: 9, scope: !13990)
!14131 = !DILocation(line: 4703, column: 6, scope: !14132)
!14132 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4703, column: 6)
!14133 = !DILocation(line: 4703, column: 13, scope: !14132)
!14134 = !DILocation(line: 4703, column: 6, scope: !13990)
!14135 = !DILocation(line: 4704, column: 3, scope: !14132)
!14136 = !DILocation(line: 4705, column: 19, scope: !13990)
!14137 = !DILocation(line: 4705, column: 11, scope: !13990)
!14138 = !DILocation(line: 4705, column: 9, scope: !13990)
!14139 = !DILocation(line: 4706, column: 6, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4706, column: 6)
!14141 = !DILocation(line: 4706, column: 13, scope: !14140)
!14142 = !DILocation(line: 4706, column: 6, scope: !13990)
!14143 = !DILocation(line: 4707, column: 3, scope: !14140)
!14144 = !DILocation(line: 4708, column: 19, scope: !13990)
!14145 = !DILocation(line: 4708, column: 11, scope: !13990)
!14146 = !DILocation(line: 4708, column: 9, scope: !13990)
!14147 = !DILocation(line: 4709, column: 6, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4709, column: 6)
!14149 = !DILocation(line: 4709, column: 13, scope: !14148)
!14150 = !DILocation(line: 4709, column: 6, scope: !13990)
!14151 = !DILocation(line: 4710, column: 3, scope: !14148)
!14152 = !DILocation(line: 4711, column: 19, scope: !13990)
!14153 = !DILocation(line: 4711, column: 11, scope: !13990)
!14154 = !DILocation(line: 4711, column: 9, scope: !13990)
!14155 = !DILocation(line: 4712, column: 6, scope: !14156)
!14156 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4712, column: 6)
!14157 = !DILocation(line: 4712, column: 13, scope: !14156)
!14158 = !DILocation(line: 4712, column: 6, scope: !13990)
!14159 = !DILocation(line: 4713, column: 3, scope: !14156)
!14160 = !DILocation(line: 4714, column: 19, scope: !13990)
!14161 = !DILocation(line: 4714, column: 11, scope: !13990)
!14162 = !DILocation(line: 4714, column: 9, scope: !13990)
!14163 = !DILocation(line: 4715, column: 6, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4715, column: 6)
!14165 = !DILocation(line: 4715, column: 13, scope: !14164)
!14166 = !DILocation(line: 4715, column: 6, scope: !13990)
!14167 = !DILocation(line: 4716, column: 3, scope: !14164)
!14168 = !DILocation(line: 4717, column: 19, scope: !13990)
!14169 = !DILocation(line: 4717, column: 11, scope: !13990)
!14170 = !DILocation(line: 4717, column: 9, scope: !13990)
!14171 = !DILocation(line: 4718, column: 6, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4718, column: 6)
!14173 = !DILocation(line: 4718, column: 13, scope: !14172)
!14174 = !DILocation(line: 4718, column: 6, scope: !13990)
!14175 = !DILocation(line: 4719, column: 3, scope: !14172)
!14176 = !DILocation(line: 4720, column: 19, scope: !13990)
!14177 = !DILocation(line: 4720, column: 11, scope: !13990)
!14178 = !DILocation(line: 4720, column: 9, scope: !13990)
!14179 = !DILocation(line: 4721, column: 6, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4721, column: 6)
!14181 = !DILocation(line: 4721, column: 13, scope: !14180)
!14182 = !DILocation(line: 4721, column: 6, scope: !13990)
!14183 = !DILocation(line: 4722, column: 3, scope: !14180)
!14184 = !DILocation(line: 4723, column: 19, scope: !13990)
!14185 = !DILocation(line: 4723, column: 11, scope: !13990)
!14186 = !DILocation(line: 4723, column: 9, scope: !13990)
!14187 = !DILocation(line: 4724, column: 6, scope: !14188)
!14188 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4724, column: 6)
!14189 = !DILocation(line: 4724, column: 13, scope: !14188)
!14190 = !DILocation(line: 4724, column: 6, scope: !13990)
!14191 = !DILocation(line: 4725, column: 3, scope: !14188)
!14192 = !DILocation(line: 4727, column: 19, scope: !13990)
!14193 = !DILocation(line: 4727, column: 11, scope: !13990)
!14194 = !DILocation(line: 4727, column: 9, scope: !13990)
!14195 = !DILocation(line: 4728, column: 6, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4728, column: 6)
!14197 = !DILocation(line: 4728, column: 13, scope: !14196)
!14198 = !DILocation(line: 4728, column: 6, scope: !13990)
!14199 = !DILocation(line: 4729, column: 3, scope: !14196)
!14200 = !DILocation(line: 4730, column: 19, scope: !13990)
!14201 = !DILocation(line: 4730, column: 11, scope: !13990)
!14202 = !DILocation(line: 4730, column: 9, scope: !13990)
!14203 = !DILocation(line: 4731, column: 6, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4731, column: 6)
!14205 = !DILocation(line: 4731, column: 13, scope: !14204)
!14206 = !DILocation(line: 4731, column: 6, scope: !13990)
!14207 = !DILocation(line: 4732, column: 3, scope: !14204)
!14208 = !DILocation(line: 4733, column: 19, scope: !13990)
!14209 = !DILocation(line: 4733, column: 11, scope: !13990)
!14210 = !DILocation(line: 4733, column: 9, scope: !13990)
!14211 = !DILocation(line: 4734, column: 6, scope: !14212)
!14212 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4734, column: 6)
!14213 = !DILocation(line: 4734, column: 13, scope: !14212)
!14214 = !DILocation(line: 4734, column: 6, scope: !13990)
!14215 = !DILocation(line: 4735, column: 3, scope: !14212)
!14216 = !DILocation(line: 4736, column: 19, scope: !13990)
!14217 = !DILocation(line: 4736, column: 11, scope: !13990)
!14218 = !DILocation(line: 4736, column: 9, scope: !13990)
!14219 = !DILocation(line: 4737, column: 6, scope: !14220)
!14220 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4737, column: 6)
!14221 = !DILocation(line: 4737, column: 13, scope: !14220)
!14222 = !DILocation(line: 4737, column: 6, scope: !13990)
!14223 = !DILocation(line: 4738, column: 3, scope: !14220)
!14224 = !DILocation(line: 4739, column: 19, scope: !13990)
!14225 = !DILocation(line: 4739, column: 11, scope: !13990)
!14226 = !DILocation(line: 4739, column: 9, scope: !13990)
!14227 = !DILocation(line: 4740, column: 6, scope: !14228)
!14228 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4740, column: 6)
!14229 = !DILocation(line: 4740, column: 13, scope: !14228)
!14230 = !DILocation(line: 4740, column: 6, scope: !13990)
!14231 = !DILocation(line: 4741, column: 3, scope: !14228)
!14232 = !DILocation(line: 4742, column: 19, scope: !13990)
!14233 = !DILocation(line: 4742, column: 11, scope: !13990)
!14234 = !DILocation(line: 4742, column: 9, scope: !13990)
!14235 = !DILocation(line: 4743, column: 6, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4743, column: 6)
!14237 = !DILocation(line: 4743, column: 13, scope: !14236)
!14238 = !DILocation(line: 4743, column: 6, scope: !13990)
!14239 = !DILocation(line: 4744, column: 3, scope: !14236)
!14240 = !DILocation(line: 4745, column: 19, scope: !13990)
!14241 = !DILocation(line: 4745, column: 11, scope: !13990)
!14242 = !DILocation(line: 4745, column: 9, scope: !13990)
!14243 = !DILocation(line: 4746, column: 6, scope: !14244)
!14244 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4746, column: 6)
!14245 = !DILocation(line: 4746, column: 13, scope: !14244)
!14246 = !DILocation(line: 4746, column: 6, scope: !13990)
!14247 = !DILocation(line: 4747, column: 3, scope: !14244)
!14248 = !DILocation(line: 4748, column: 19, scope: !13990)
!14249 = !DILocation(line: 4748, column: 11, scope: !13990)
!14250 = !DILocation(line: 4748, column: 9, scope: !13990)
!14251 = !DILocation(line: 4749, column: 6, scope: !14252)
!14252 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4749, column: 6)
!14253 = !DILocation(line: 4749, column: 13, scope: !14252)
!14254 = !DILocation(line: 4749, column: 6, scope: !13990)
!14255 = !DILocation(line: 4750, column: 3, scope: !14252)
!14256 = !DILocation(line: 4751, column: 19, scope: !13990)
!14257 = !DILocation(line: 4751, column: 11, scope: !13990)
!14258 = !DILocation(line: 4751, column: 9, scope: !13990)
!14259 = !DILocation(line: 4752, column: 6, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4752, column: 6)
!14261 = !DILocation(line: 4752, column: 13, scope: !14260)
!14262 = !DILocation(line: 4752, column: 6, scope: !13990)
!14263 = !DILocation(line: 4753, column: 3, scope: !14260)
!14264 = !DILocation(line: 4754, column: 19, scope: !13990)
!14265 = !DILocation(line: 4754, column: 11, scope: !13990)
!14266 = !DILocation(line: 4754, column: 9, scope: !13990)
!14267 = !DILocation(line: 4755, column: 6, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4755, column: 6)
!14269 = !DILocation(line: 4755, column: 13, scope: !14268)
!14270 = !DILocation(line: 4755, column: 6, scope: !13990)
!14271 = !DILocation(line: 4756, column: 3, scope: !14268)
!14272 = !DILocation(line: 4757, column: 19, scope: !13990)
!14273 = !DILocation(line: 4757, column: 11, scope: !13990)
!14274 = !DILocation(line: 4757, column: 9, scope: !13990)
!14275 = !DILocation(line: 4758, column: 6, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4758, column: 6)
!14277 = !DILocation(line: 4758, column: 13, scope: !14276)
!14278 = !DILocation(line: 4758, column: 6, scope: !13990)
!14279 = !DILocation(line: 4759, column: 3, scope: !14276)
!14280 = !DILocation(line: 4760, column: 19, scope: !13990)
!14281 = !DILocation(line: 4760, column: 11, scope: !13990)
!14282 = !DILocation(line: 4760, column: 9, scope: !13990)
!14283 = !DILocation(line: 4761, column: 6, scope: !14284)
!14284 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4761, column: 6)
!14285 = !DILocation(line: 4761, column: 13, scope: !14284)
!14286 = !DILocation(line: 4761, column: 6, scope: !13990)
!14287 = !DILocation(line: 4762, column: 3, scope: !14284)
!14288 = !DILocation(line: 4767, column: 19, scope: !13990)
!14289 = !DILocation(line: 4767, column: 11, scope: !13990)
!14290 = !DILocation(line: 4767, column: 9, scope: !13990)
!14291 = !DILocation(line: 4768, column: 6, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4768, column: 6)
!14293 = !DILocation(line: 4768, column: 13, scope: !14292)
!14294 = !DILocation(line: 4768, column: 6, scope: !13990)
!14295 = !DILocation(line: 4769, column: 3, scope: !14292)
!14296 = !DILocation(line: 4770, column: 19, scope: !13990)
!14297 = !DILocation(line: 4770, column: 11, scope: !13990)
!14298 = !DILocation(line: 4770, column: 9, scope: !13990)
!14299 = !DILocation(line: 4771, column: 6, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4771, column: 6)
!14301 = !DILocation(line: 4771, column: 13, scope: !14300)
!14302 = !DILocation(line: 4771, column: 6, scope: !13990)
!14303 = !DILocation(line: 4772, column: 3, scope: !14300)
!14304 = !DILocation(line: 4773, column: 19, scope: !13990)
!14305 = !DILocation(line: 4773, column: 11, scope: !13990)
!14306 = !DILocation(line: 4773, column: 9, scope: !13990)
!14307 = !DILocation(line: 4774, column: 6, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4774, column: 6)
!14309 = !DILocation(line: 4774, column: 13, scope: !14308)
!14310 = !DILocation(line: 4774, column: 6, scope: !13990)
!14311 = !DILocation(line: 4775, column: 3, scope: !14308)
!14312 = !DILocation(line: 4776, column: 19, scope: !13990)
!14313 = !DILocation(line: 4776, column: 11, scope: !13990)
!14314 = !DILocation(line: 4776, column: 9, scope: !13990)
!14315 = !DILocation(line: 4777, column: 6, scope: !14316)
!14316 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4777, column: 6)
!14317 = !DILocation(line: 4777, column: 13, scope: !14316)
!14318 = !DILocation(line: 4777, column: 6, scope: !13990)
!14319 = !DILocation(line: 4778, column: 3, scope: !14316)
!14320 = !DILocation(line: 4779, column: 19, scope: !13990)
!14321 = !DILocation(line: 4779, column: 11, scope: !13990)
!14322 = !DILocation(line: 4779, column: 9, scope: !13990)
!14323 = !DILocation(line: 4780, column: 6, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4780, column: 6)
!14325 = !DILocation(line: 4780, column: 13, scope: !14324)
!14326 = !DILocation(line: 4780, column: 6, scope: !13990)
!14327 = !DILocation(line: 4781, column: 3, scope: !14324)
!14328 = !DILocation(line: 4782, column: 19, scope: !13990)
!14329 = !DILocation(line: 4782, column: 11, scope: !13990)
!14330 = !DILocation(line: 4782, column: 9, scope: !13990)
!14331 = !DILocation(line: 4783, column: 6, scope: !14332)
!14332 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4783, column: 6)
!14333 = !DILocation(line: 4783, column: 13, scope: !14332)
!14334 = !DILocation(line: 4783, column: 6, scope: !13990)
!14335 = !DILocation(line: 4784, column: 3, scope: !14332)
!14336 = !DILocation(line: 4786, column: 19, scope: !13990)
!14337 = !DILocation(line: 4786, column: 11, scope: !13990)
!14338 = !DILocation(line: 4786, column: 9, scope: !13990)
!14339 = !DILocation(line: 4787, column: 6, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4787, column: 6)
!14341 = !DILocation(line: 4787, column: 13, scope: !14340)
!14342 = !DILocation(line: 4787, column: 6, scope: !13990)
!14343 = !DILocation(line: 4788, column: 3, scope: !14340)
!14344 = !DILocation(line: 4789, column: 19, scope: !13990)
!14345 = !DILocation(line: 4789, column: 11, scope: !13990)
!14346 = !DILocation(line: 4789, column: 9, scope: !13990)
!14347 = !DILocation(line: 4790, column: 6, scope: !14348)
!14348 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4790, column: 6)
!14349 = !DILocation(line: 4790, column: 13, scope: !14348)
!14350 = !DILocation(line: 4790, column: 6, scope: !13990)
!14351 = !DILocation(line: 4791, column: 3, scope: !14348)
!14352 = !DILocation(line: 4792, column: 19, scope: !13990)
!14353 = !DILocation(line: 4792, column: 11, scope: !13990)
!14354 = !DILocation(line: 4792, column: 9, scope: !13990)
!14355 = !DILocation(line: 4793, column: 6, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4793, column: 6)
!14357 = !DILocation(line: 4793, column: 13, scope: !14356)
!14358 = !DILocation(line: 4793, column: 6, scope: !13990)
!14359 = !DILocation(line: 4794, column: 3, scope: !14356)
!14360 = !DILocation(line: 4799, column: 19, scope: !13990)
!14361 = !DILocation(line: 4799, column: 11, scope: !13990)
!14362 = !DILocation(line: 4799, column: 9, scope: !13990)
!14363 = !DILocation(line: 4800, column: 6, scope: !14364)
!14364 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4800, column: 6)
!14365 = !DILocation(line: 4800, column: 13, scope: !14364)
!14366 = !DILocation(line: 4800, column: 6, scope: !13990)
!14367 = !DILocation(line: 4801, column: 3, scope: !14364)
!14368 = !DILocation(line: 4802, column: 19, scope: !13990)
!14369 = !DILocation(line: 4802, column: 11, scope: !13990)
!14370 = !DILocation(line: 4802, column: 9, scope: !13990)
!14371 = !DILocation(line: 4803, column: 6, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4803, column: 6)
!14373 = !DILocation(line: 4803, column: 13, scope: !14372)
!14374 = !DILocation(line: 4803, column: 6, scope: !13990)
!14375 = !DILocation(line: 4804, column: 3, scope: !14372)
!14376 = !DILocation(line: 4805, column: 19, scope: !13990)
!14377 = !DILocation(line: 4805, column: 11, scope: !13990)
!14378 = !DILocation(line: 4805, column: 9, scope: !13990)
!14379 = !DILocation(line: 4806, column: 6, scope: !14380)
!14380 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4806, column: 6)
!14381 = !DILocation(line: 4806, column: 13, scope: !14380)
!14382 = !DILocation(line: 4806, column: 6, scope: !13990)
!14383 = !DILocation(line: 4807, column: 3, scope: !14380)
!14384 = !DILocation(line: 4808, column: 19, scope: !13990)
!14385 = !DILocation(line: 4808, column: 11, scope: !13990)
!14386 = !DILocation(line: 4808, column: 9, scope: !13990)
!14387 = !DILocation(line: 4809, column: 6, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4809, column: 6)
!14389 = !DILocation(line: 4809, column: 13, scope: !14388)
!14390 = !DILocation(line: 4809, column: 6, scope: !13990)
!14391 = !DILocation(line: 4810, column: 3, scope: !14388)
!14392 = !DILocation(line: 4811, column: 19, scope: !13990)
!14393 = !DILocation(line: 4811, column: 11, scope: !13990)
!14394 = !DILocation(line: 4811, column: 9, scope: !13990)
!14395 = !DILocation(line: 4812, column: 6, scope: !14396)
!14396 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4812, column: 6)
!14397 = !DILocation(line: 4812, column: 13, scope: !14396)
!14398 = !DILocation(line: 4812, column: 6, scope: !13990)
!14399 = !DILocation(line: 4813, column: 3, scope: !14396)
!14400 = !DILocation(line: 4814, column: 19, scope: !13990)
!14401 = !DILocation(line: 4814, column: 11, scope: !13990)
!14402 = !DILocation(line: 4814, column: 9, scope: !13990)
!14403 = !DILocation(line: 4815, column: 6, scope: !14404)
!14404 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4815, column: 6)
!14405 = !DILocation(line: 4815, column: 13, scope: !14404)
!14406 = !DILocation(line: 4815, column: 6, scope: !13990)
!14407 = !DILocation(line: 4816, column: 3, scope: !14404)
!14408 = !DILocation(line: 4817, column: 19, scope: !13990)
!14409 = !DILocation(line: 4817, column: 11, scope: !13990)
!14410 = !DILocation(line: 4817, column: 9, scope: !13990)
!14411 = !DILocation(line: 4817, column: 2, scope: !13990)
!14412 = !DILabel(scope: !13990, name: "error", file: !3, line: 4818)
!14413 = !DILocation(line: 4818, column: 1, scope: !13990)
!14414 = !DILocation(line: 4819, column: 6, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 4819, column: 6)
!14416 = !DILocation(line: 4819, column: 13, scope: !14415)
!14417 = !DILocation(line: 4819, column: 6, scope: !13990)
!14418 = !DILocation(line: 4820, column: 3, scope: !14415)
!14419 = !DILocation(line: 4822, column: 9, scope: !13990)
!14420 = !DILocation(line: 4822, column: 2, scope: !13990)
!14421 = distinct !DISubprogram(name: "set_qam128", scope: !3, file: !3, line: 4832, type: !5239, scopeLine: 4833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!14422 = !DILocalVariable(name: "state", arg: 1, scope: !14421, file: !3, line: 4832, type: !4562)
!14423 = !DILocation(line: 4832, column: 42, scope: !14421)
!14424 = !DILocalVariable(name: "status", scope: !14421, file: !3, line: 4834, type: !405)
!14425 = !DILocation(line: 4834, column: 6, scope: !14421)
!14426 = !DILocation(line: 4836, column: 2, scope: !14421)
!14427 = !DILocation(line: 4836, column: 2, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14429, file: !3, line: 4836, column: 2)
!14429 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4836, column: 2)
!14430 = !DILocation(line: 4836, column: 2, scope: !14429)
!14431 = !DILocation(line: 4839, column: 19, scope: !14421)
!14432 = !DILocation(line: 4839, column: 11, scope: !14421)
!14433 = !DILocation(line: 4839, column: 9, scope: !14421)
!14434 = !DILocation(line: 4840, column: 6, scope: !14435)
!14435 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4840, column: 6)
!14436 = !DILocation(line: 4840, column: 13, scope: !14435)
!14437 = !DILocation(line: 4840, column: 6, scope: !14421)
!14438 = !DILocation(line: 4841, column: 3, scope: !14435)
!14439 = !DILocation(line: 4842, column: 19, scope: !14421)
!14440 = !DILocation(line: 4842, column: 11, scope: !14421)
!14441 = !DILocation(line: 4842, column: 9, scope: !14421)
!14442 = !DILocation(line: 4843, column: 6, scope: !14443)
!14443 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4843, column: 6)
!14444 = !DILocation(line: 4843, column: 13, scope: !14443)
!14445 = !DILocation(line: 4843, column: 6, scope: !14421)
!14446 = !DILocation(line: 4844, column: 3, scope: !14443)
!14447 = !DILocation(line: 4845, column: 19, scope: !14421)
!14448 = !DILocation(line: 4845, column: 11, scope: !14421)
!14449 = !DILocation(line: 4845, column: 9, scope: !14421)
!14450 = !DILocation(line: 4846, column: 6, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4846, column: 6)
!14452 = !DILocation(line: 4846, column: 13, scope: !14451)
!14453 = !DILocation(line: 4846, column: 6, scope: !14421)
!14454 = !DILocation(line: 4847, column: 3, scope: !14451)
!14455 = !DILocation(line: 4848, column: 19, scope: !14421)
!14456 = !DILocation(line: 4848, column: 11, scope: !14421)
!14457 = !DILocation(line: 4848, column: 9, scope: !14421)
!14458 = !DILocation(line: 4849, column: 6, scope: !14459)
!14459 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4849, column: 6)
!14460 = !DILocation(line: 4849, column: 13, scope: !14459)
!14461 = !DILocation(line: 4849, column: 6, scope: !14421)
!14462 = !DILocation(line: 4850, column: 3, scope: !14459)
!14463 = !DILocation(line: 4851, column: 19, scope: !14421)
!14464 = !DILocation(line: 4851, column: 11, scope: !14421)
!14465 = !DILocation(line: 4851, column: 9, scope: !14421)
!14466 = !DILocation(line: 4852, column: 6, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4852, column: 6)
!14468 = !DILocation(line: 4852, column: 13, scope: !14467)
!14469 = !DILocation(line: 4852, column: 6, scope: !14421)
!14470 = !DILocation(line: 4853, column: 3, scope: !14467)
!14471 = !DILocation(line: 4854, column: 19, scope: !14421)
!14472 = !DILocation(line: 4854, column: 11, scope: !14421)
!14473 = !DILocation(line: 4854, column: 9, scope: !14421)
!14474 = !DILocation(line: 4855, column: 6, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4855, column: 6)
!14476 = !DILocation(line: 4855, column: 13, scope: !14475)
!14477 = !DILocation(line: 4855, column: 6, scope: !14421)
!14478 = !DILocation(line: 4856, column: 3, scope: !14475)
!14479 = !DILocation(line: 4859, column: 19, scope: !14421)
!14480 = !DILocation(line: 4859, column: 11, scope: !14421)
!14481 = !DILocation(line: 4859, column: 9, scope: !14421)
!14482 = !DILocation(line: 4860, column: 6, scope: !14483)
!14483 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4860, column: 6)
!14484 = !DILocation(line: 4860, column: 13, scope: !14483)
!14485 = !DILocation(line: 4860, column: 6, scope: !14421)
!14486 = !DILocation(line: 4861, column: 3, scope: !14483)
!14487 = !DILocation(line: 4862, column: 19, scope: !14421)
!14488 = !DILocation(line: 4862, column: 11, scope: !14421)
!14489 = !DILocation(line: 4862, column: 9, scope: !14421)
!14490 = !DILocation(line: 4863, column: 6, scope: !14491)
!14491 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4863, column: 6)
!14492 = !DILocation(line: 4863, column: 13, scope: !14491)
!14493 = !DILocation(line: 4863, column: 6, scope: !14421)
!14494 = !DILocation(line: 4864, column: 3, scope: !14491)
!14495 = !DILocation(line: 4865, column: 19, scope: !14421)
!14496 = !DILocation(line: 4865, column: 11, scope: !14421)
!14497 = !DILocation(line: 4865, column: 9, scope: !14421)
!14498 = !DILocation(line: 4866, column: 6, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4866, column: 6)
!14500 = !DILocation(line: 4866, column: 13, scope: !14499)
!14501 = !DILocation(line: 4866, column: 6, scope: !14421)
!14502 = !DILocation(line: 4867, column: 3, scope: !14499)
!14503 = !DILocation(line: 4868, column: 19, scope: !14421)
!14504 = !DILocation(line: 4868, column: 11, scope: !14421)
!14505 = !DILocation(line: 4868, column: 9, scope: !14421)
!14506 = !DILocation(line: 4869, column: 6, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4869, column: 6)
!14508 = !DILocation(line: 4869, column: 13, scope: !14507)
!14509 = !DILocation(line: 4869, column: 6, scope: !14421)
!14510 = !DILocation(line: 4870, column: 3, scope: !14507)
!14511 = !DILocation(line: 4871, column: 19, scope: !14421)
!14512 = !DILocation(line: 4871, column: 11, scope: !14421)
!14513 = !DILocation(line: 4871, column: 9, scope: !14421)
!14514 = !DILocation(line: 4872, column: 6, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4872, column: 6)
!14516 = !DILocation(line: 4872, column: 13, scope: !14515)
!14517 = !DILocation(line: 4872, column: 6, scope: !14421)
!14518 = !DILocation(line: 4873, column: 3, scope: !14515)
!14519 = !DILocation(line: 4874, column: 19, scope: !14421)
!14520 = !DILocation(line: 4874, column: 11, scope: !14421)
!14521 = !DILocation(line: 4874, column: 9, scope: !14421)
!14522 = !DILocation(line: 4875, column: 6, scope: !14523)
!14523 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4875, column: 6)
!14524 = !DILocation(line: 4875, column: 13, scope: !14523)
!14525 = !DILocation(line: 4875, column: 6, scope: !14421)
!14526 = !DILocation(line: 4876, column: 3, scope: !14523)
!14527 = !DILocation(line: 4878, column: 19, scope: !14421)
!14528 = !DILocation(line: 4878, column: 11, scope: !14421)
!14529 = !DILocation(line: 4878, column: 9, scope: !14421)
!14530 = !DILocation(line: 4879, column: 6, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4879, column: 6)
!14532 = !DILocation(line: 4879, column: 13, scope: !14531)
!14533 = !DILocation(line: 4879, column: 6, scope: !14421)
!14534 = !DILocation(line: 4880, column: 3, scope: !14531)
!14535 = !DILocation(line: 4881, column: 19, scope: !14421)
!14536 = !DILocation(line: 4881, column: 11, scope: !14421)
!14537 = !DILocation(line: 4881, column: 9, scope: !14421)
!14538 = !DILocation(line: 4882, column: 6, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4882, column: 6)
!14540 = !DILocation(line: 4882, column: 13, scope: !14539)
!14541 = !DILocation(line: 4882, column: 6, scope: !14421)
!14542 = !DILocation(line: 4883, column: 3, scope: !14539)
!14543 = !DILocation(line: 4884, column: 19, scope: !14421)
!14544 = !DILocation(line: 4884, column: 11, scope: !14421)
!14545 = !DILocation(line: 4884, column: 9, scope: !14421)
!14546 = !DILocation(line: 4885, column: 6, scope: !14547)
!14547 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4885, column: 6)
!14548 = !DILocation(line: 4885, column: 13, scope: !14547)
!14549 = !DILocation(line: 4885, column: 6, scope: !14421)
!14550 = !DILocation(line: 4886, column: 3, scope: !14547)
!14551 = !DILocation(line: 4891, column: 19, scope: !14421)
!14552 = !DILocation(line: 4891, column: 11, scope: !14421)
!14553 = !DILocation(line: 4891, column: 9, scope: !14421)
!14554 = !DILocation(line: 4893, column: 6, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4893, column: 6)
!14556 = !DILocation(line: 4893, column: 13, scope: !14555)
!14557 = !DILocation(line: 4893, column: 6, scope: !14421)
!14558 = !DILocation(line: 4894, column: 3, scope: !14555)
!14559 = !DILocation(line: 4899, column: 19, scope: !14421)
!14560 = !DILocation(line: 4899, column: 11, scope: !14421)
!14561 = !DILocation(line: 4899, column: 9, scope: !14421)
!14562 = !DILocation(line: 4900, column: 6, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4900, column: 6)
!14564 = !DILocation(line: 4900, column: 13, scope: !14563)
!14565 = !DILocation(line: 4900, column: 6, scope: !14421)
!14566 = !DILocation(line: 4901, column: 3, scope: !14563)
!14567 = !DILocation(line: 4902, column: 19, scope: !14421)
!14568 = !DILocation(line: 4902, column: 11, scope: !14421)
!14569 = !DILocation(line: 4902, column: 9, scope: !14421)
!14570 = !DILocation(line: 4903, column: 6, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4903, column: 6)
!14572 = !DILocation(line: 4903, column: 13, scope: !14571)
!14573 = !DILocation(line: 4903, column: 6, scope: !14421)
!14574 = !DILocation(line: 4904, column: 3, scope: !14571)
!14575 = !DILocation(line: 4905, column: 19, scope: !14421)
!14576 = !DILocation(line: 4905, column: 11, scope: !14421)
!14577 = !DILocation(line: 4905, column: 9, scope: !14421)
!14578 = !DILocation(line: 4906, column: 6, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4906, column: 6)
!14580 = !DILocation(line: 4906, column: 13, scope: !14579)
!14581 = !DILocation(line: 4906, column: 6, scope: !14421)
!14582 = !DILocation(line: 4907, column: 3, scope: !14579)
!14583 = !DILocation(line: 4908, column: 19, scope: !14421)
!14584 = !DILocation(line: 4908, column: 11, scope: !14421)
!14585 = !DILocation(line: 4908, column: 9, scope: !14421)
!14586 = !DILocation(line: 4909, column: 6, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4909, column: 6)
!14588 = !DILocation(line: 4909, column: 13, scope: !14587)
!14589 = !DILocation(line: 4909, column: 6, scope: !14421)
!14590 = !DILocation(line: 4910, column: 3, scope: !14587)
!14591 = !DILocation(line: 4911, column: 19, scope: !14421)
!14592 = !DILocation(line: 4911, column: 11, scope: !14421)
!14593 = !DILocation(line: 4911, column: 9, scope: !14421)
!14594 = !DILocation(line: 4912, column: 6, scope: !14595)
!14595 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4912, column: 6)
!14596 = !DILocation(line: 4912, column: 13, scope: !14595)
!14597 = !DILocation(line: 4912, column: 6, scope: !14421)
!14598 = !DILocation(line: 4913, column: 3, scope: !14595)
!14599 = !DILocation(line: 4914, column: 19, scope: !14421)
!14600 = !DILocation(line: 4914, column: 11, scope: !14421)
!14601 = !DILocation(line: 4914, column: 9, scope: !14421)
!14602 = !DILocation(line: 4915, column: 6, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4915, column: 6)
!14604 = !DILocation(line: 4915, column: 13, scope: !14603)
!14605 = !DILocation(line: 4915, column: 6, scope: !14421)
!14606 = !DILocation(line: 4916, column: 3, scope: !14603)
!14607 = !DILocation(line: 4917, column: 19, scope: !14421)
!14608 = !DILocation(line: 4917, column: 11, scope: !14421)
!14609 = !DILocation(line: 4917, column: 9, scope: !14421)
!14610 = !DILocation(line: 4918, column: 6, scope: !14611)
!14611 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4918, column: 6)
!14612 = !DILocation(line: 4918, column: 13, scope: !14611)
!14613 = !DILocation(line: 4918, column: 6, scope: !14421)
!14614 = !DILocation(line: 4919, column: 3, scope: !14611)
!14615 = !DILocation(line: 4920, column: 19, scope: !14421)
!14616 = !DILocation(line: 4920, column: 11, scope: !14421)
!14617 = !DILocation(line: 4920, column: 9, scope: !14421)
!14618 = !DILocation(line: 4921, column: 6, scope: !14619)
!14619 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4921, column: 6)
!14620 = !DILocation(line: 4921, column: 13, scope: !14619)
!14621 = !DILocation(line: 4921, column: 6, scope: !14421)
!14622 = !DILocation(line: 4922, column: 3, scope: !14619)
!14623 = !DILocation(line: 4924, column: 19, scope: !14421)
!14624 = !DILocation(line: 4924, column: 11, scope: !14421)
!14625 = !DILocation(line: 4924, column: 9, scope: !14421)
!14626 = !DILocation(line: 4925, column: 6, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4925, column: 6)
!14628 = !DILocation(line: 4925, column: 13, scope: !14627)
!14629 = !DILocation(line: 4925, column: 6, scope: !14421)
!14630 = !DILocation(line: 4926, column: 3, scope: !14627)
!14631 = !DILocation(line: 4927, column: 19, scope: !14421)
!14632 = !DILocation(line: 4927, column: 11, scope: !14421)
!14633 = !DILocation(line: 4927, column: 9, scope: !14421)
!14634 = !DILocation(line: 4928, column: 6, scope: !14635)
!14635 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4928, column: 6)
!14636 = !DILocation(line: 4928, column: 13, scope: !14635)
!14637 = !DILocation(line: 4928, column: 6, scope: !14421)
!14638 = !DILocation(line: 4929, column: 3, scope: !14635)
!14639 = !DILocation(line: 4930, column: 19, scope: !14421)
!14640 = !DILocation(line: 4930, column: 11, scope: !14421)
!14641 = !DILocation(line: 4930, column: 9, scope: !14421)
!14642 = !DILocation(line: 4931, column: 6, scope: !14643)
!14643 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4931, column: 6)
!14644 = !DILocation(line: 4931, column: 13, scope: !14643)
!14645 = !DILocation(line: 4931, column: 6, scope: !14421)
!14646 = !DILocation(line: 4932, column: 3, scope: !14643)
!14647 = !DILocation(line: 4933, column: 19, scope: !14421)
!14648 = !DILocation(line: 4933, column: 11, scope: !14421)
!14649 = !DILocation(line: 4933, column: 9, scope: !14421)
!14650 = !DILocation(line: 4934, column: 6, scope: !14651)
!14651 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4934, column: 6)
!14652 = !DILocation(line: 4934, column: 13, scope: !14651)
!14653 = !DILocation(line: 4934, column: 6, scope: !14421)
!14654 = !DILocation(line: 4935, column: 3, scope: !14651)
!14655 = !DILocation(line: 4936, column: 19, scope: !14421)
!14656 = !DILocation(line: 4936, column: 11, scope: !14421)
!14657 = !DILocation(line: 4936, column: 9, scope: !14421)
!14658 = !DILocation(line: 4937, column: 6, scope: !14659)
!14659 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4937, column: 6)
!14660 = !DILocation(line: 4937, column: 13, scope: !14659)
!14661 = !DILocation(line: 4937, column: 6, scope: !14421)
!14662 = !DILocation(line: 4938, column: 3, scope: !14659)
!14663 = !DILocation(line: 4939, column: 19, scope: !14421)
!14664 = !DILocation(line: 4939, column: 11, scope: !14421)
!14665 = !DILocation(line: 4939, column: 9, scope: !14421)
!14666 = !DILocation(line: 4940, column: 6, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4940, column: 6)
!14668 = !DILocation(line: 4940, column: 13, scope: !14667)
!14669 = !DILocation(line: 4940, column: 6, scope: !14421)
!14670 = !DILocation(line: 4941, column: 3, scope: !14667)
!14671 = !DILocation(line: 4942, column: 19, scope: !14421)
!14672 = !DILocation(line: 4942, column: 11, scope: !14421)
!14673 = !DILocation(line: 4942, column: 9, scope: !14421)
!14674 = !DILocation(line: 4943, column: 6, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4943, column: 6)
!14676 = !DILocation(line: 4943, column: 13, scope: !14675)
!14677 = !DILocation(line: 4943, column: 6, scope: !14421)
!14678 = !DILocation(line: 4944, column: 3, scope: !14675)
!14679 = !DILocation(line: 4945, column: 19, scope: !14421)
!14680 = !DILocation(line: 4945, column: 11, scope: !14421)
!14681 = !DILocation(line: 4945, column: 9, scope: !14421)
!14682 = !DILocation(line: 4946, column: 6, scope: !14683)
!14683 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4946, column: 6)
!14684 = !DILocation(line: 4946, column: 13, scope: !14683)
!14685 = !DILocation(line: 4946, column: 6, scope: !14421)
!14686 = !DILocation(line: 4947, column: 3, scope: !14683)
!14687 = !DILocation(line: 4948, column: 19, scope: !14421)
!14688 = !DILocation(line: 4948, column: 11, scope: !14421)
!14689 = !DILocation(line: 4948, column: 9, scope: !14421)
!14690 = !DILocation(line: 4949, column: 6, scope: !14691)
!14691 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4949, column: 6)
!14692 = !DILocation(line: 4949, column: 13, scope: !14691)
!14693 = !DILocation(line: 4949, column: 6, scope: !14421)
!14694 = !DILocation(line: 4950, column: 3, scope: !14691)
!14695 = !DILocation(line: 4951, column: 19, scope: !14421)
!14696 = !DILocation(line: 4951, column: 11, scope: !14421)
!14697 = !DILocation(line: 4951, column: 9, scope: !14421)
!14698 = !DILocation(line: 4952, column: 6, scope: !14699)
!14699 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4952, column: 6)
!14700 = !DILocation(line: 4952, column: 13, scope: !14699)
!14701 = !DILocation(line: 4952, column: 6, scope: !14421)
!14702 = !DILocation(line: 4953, column: 3, scope: !14699)
!14703 = !DILocation(line: 4954, column: 19, scope: !14421)
!14704 = !DILocation(line: 4954, column: 11, scope: !14421)
!14705 = !DILocation(line: 4954, column: 9, scope: !14421)
!14706 = !DILocation(line: 4955, column: 6, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4955, column: 6)
!14708 = !DILocation(line: 4955, column: 13, scope: !14707)
!14709 = !DILocation(line: 4955, column: 6, scope: !14421)
!14710 = !DILocation(line: 4956, column: 3, scope: !14707)
!14711 = !DILocation(line: 4957, column: 19, scope: !14421)
!14712 = !DILocation(line: 4957, column: 11, scope: !14421)
!14713 = !DILocation(line: 4957, column: 9, scope: !14421)
!14714 = !DILocation(line: 4958, column: 6, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4958, column: 6)
!14716 = !DILocation(line: 4958, column: 13, scope: !14715)
!14717 = !DILocation(line: 4958, column: 6, scope: !14421)
!14718 = !DILocation(line: 4959, column: 3, scope: !14715)
!14719 = !DILocation(line: 4964, column: 19, scope: !14421)
!14720 = !DILocation(line: 4964, column: 11, scope: !14421)
!14721 = !DILocation(line: 4964, column: 9, scope: !14421)
!14722 = !DILocation(line: 4965, column: 6, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4965, column: 6)
!14724 = !DILocation(line: 4965, column: 13, scope: !14723)
!14725 = !DILocation(line: 4965, column: 6, scope: !14421)
!14726 = !DILocation(line: 4966, column: 3, scope: !14723)
!14727 = !DILocation(line: 4967, column: 19, scope: !14421)
!14728 = !DILocation(line: 4967, column: 11, scope: !14421)
!14729 = !DILocation(line: 4967, column: 9, scope: !14421)
!14730 = !DILocation(line: 4968, column: 6, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4968, column: 6)
!14732 = !DILocation(line: 4968, column: 13, scope: !14731)
!14733 = !DILocation(line: 4968, column: 6, scope: !14421)
!14734 = !DILocation(line: 4969, column: 3, scope: !14731)
!14735 = !DILocation(line: 4970, column: 19, scope: !14421)
!14736 = !DILocation(line: 4970, column: 11, scope: !14421)
!14737 = !DILocation(line: 4970, column: 9, scope: !14421)
!14738 = !DILocation(line: 4971, column: 6, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4971, column: 6)
!14740 = !DILocation(line: 4971, column: 13, scope: !14739)
!14741 = !DILocation(line: 4971, column: 6, scope: !14421)
!14742 = !DILocation(line: 4972, column: 3, scope: !14739)
!14743 = !DILocation(line: 4973, column: 19, scope: !14421)
!14744 = !DILocation(line: 4973, column: 11, scope: !14421)
!14745 = !DILocation(line: 4973, column: 9, scope: !14421)
!14746 = !DILocation(line: 4974, column: 6, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4974, column: 6)
!14748 = !DILocation(line: 4974, column: 13, scope: !14747)
!14749 = !DILocation(line: 4974, column: 6, scope: !14421)
!14750 = !DILocation(line: 4975, column: 3, scope: !14747)
!14751 = !DILocation(line: 4976, column: 19, scope: !14421)
!14752 = !DILocation(line: 4976, column: 11, scope: !14421)
!14753 = !DILocation(line: 4976, column: 9, scope: !14421)
!14754 = !DILocation(line: 4977, column: 6, scope: !14755)
!14755 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4977, column: 6)
!14756 = !DILocation(line: 4977, column: 13, scope: !14755)
!14757 = !DILocation(line: 4977, column: 6, scope: !14421)
!14758 = !DILocation(line: 4978, column: 3, scope: !14755)
!14759 = !DILocation(line: 4979, column: 19, scope: !14421)
!14760 = !DILocation(line: 4979, column: 11, scope: !14421)
!14761 = !DILocation(line: 4979, column: 9, scope: !14421)
!14762 = !DILocation(line: 4980, column: 6, scope: !14763)
!14763 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4980, column: 6)
!14764 = !DILocation(line: 4980, column: 13, scope: !14763)
!14765 = !DILocation(line: 4980, column: 6, scope: !14421)
!14766 = !DILocation(line: 4981, column: 3, scope: !14763)
!14767 = !DILocation(line: 4983, column: 19, scope: !14421)
!14768 = !DILocation(line: 4983, column: 11, scope: !14421)
!14769 = !DILocation(line: 4983, column: 9, scope: !14421)
!14770 = !DILocation(line: 4984, column: 6, scope: !14771)
!14771 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4984, column: 6)
!14772 = !DILocation(line: 4984, column: 13, scope: !14771)
!14773 = !DILocation(line: 4984, column: 6, scope: !14421)
!14774 = !DILocation(line: 4985, column: 3, scope: !14771)
!14775 = !DILocation(line: 4986, column: 19, scope: !14421)
!14776 = !DILocation(line: 4986, column: 11, scope: !14421)
!14777 = !DILocation(line: 4986, column: 9, scope: !14421)
!14778 = !DILocation(line: 4987, column: 6, scope: !14779)
!14779 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4987, column: 6)
!14780 = !DILocation(line: 4987, column: 13, scope: !14779)
!14781 = !DILocation(line: 4987, column: 6, scope: !14421)
!14782 = !DILocation(line: 4988, column: 3, scope: !14779)
!14783 = !DILocation(line: 4990, column: 19, scope: !14421)
!14784 = !DILocation(line: 4990, column: 11, scope: !14421)
!14785 = !DILocation(line: 4990, column: 9, scope: !14421)
!14786 = !DILocation(line: 4991, column: 6, scope: !14787)
!14787 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4991, column: 6)
!14788 = !DILocation(line: 4991, column: 13, scope: !14787)
!14789 = !DILocation(line: 4991, column: 6, scope: !14421)
!14790 = !DILocation(line: 4992, column: 3, scope: !14787)
!14791 = !DILocation(line: 4996, column: 19, scope: !14421)
!14792 = !DILocation(line: 4996, column: 11, scope: !14421)
!14793 = !DILocation(line: 4996, column: 9, scope: !14421)
!14794 = !DILocation(line: 4997, column: 6, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 4997, column: 6)
!14796 = !DILocation(line: 4997, column: 13, scope: !14795)
!14797 = !DILocation(line: 4997, column: 6, scope: !14421)
!14798 = !DILocation(line: 4998, column: 3, scope: !14795)
!14799 = !DILocation(line: 4999, column: 19, scope: !14421)
!14800 = !DILocation(line: 4999, column: 11, scope: !14421)
!14801 = !DILocation(line: 4999, column: 9, scope: !14421)
!14802 = !DILocation(line: 5000, column: 6, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 5000, column: 6)
!14804 = !DILocation(line: 5000, column: 13, scope: !14803)
!14805 = !DILocation(line: 5000, column: 6, scope: !14421)
!14806 = !DILocation(line: 5001, column: 3, scope: !14803)
!14807 = !DILocation(line: 5002, column: 19, scope: !14421)
!14808 = !DILocation(line: 5002, column: 11, scope: !14421)
!14809 = !DILocation(line: 5002, column: 9, scope: !14421)
!14810 = !DILocation(line: 5003, column: 6, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 5003, column: 6)
!14812 = !DILocation(line: 5003, column: 13, scope: !14811)
!14813 = !DILocation(line: 5003, column: 6, scope: !14421)
!14814 = !DILocation(line: 5004, column: 3, scope: !14811)
!14815 = !DILocation(line: 5005, column: 19, scope: !14421)
!14816 = !DILocation(line: 5005, column: 11, scope: !14421)
!14817 = !DILocation(line: 5005, column: 9, scope: !14421)
!14818 = !DILocation(line: 5006, column: 6, scope: !14819)
!14819 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 5006, column: 6)
!14820 = !DILocation(line: 5006, column: 13, scope: !14819)
!14821 = !DILocation(line: 5006, column: 6, scope: !14421)
!14822 = !DILocation(line: 5007, column: 3, scope: !14819)
!14823 = !DILocation(line: 5008, column: 19, scope: !14421)
!14824 = !DILocation(line: 5008, column: 11, scope: !14421)
!14825 = !DILocation(line: 5008, column: 9, scope: !14421)
!14826 = !DILocation(line: 5009, column: 6, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 5009, column: 6)
!14828 = !DILocation(line: 5009, column: 13, scope: !14827)
!14829 = !DILocation(line: 5009, column: 6, scope: !14421)
!14830 = !DILocation(line: 5010, column: 3, scope: !14827)
!14831 = !DILocation(line: 5011, column: 19, scope: !14421)
!14832 = !DILocation(line: 5011, column: 11, scope: !14421)
!14833 = !DILocation(line: 5011, column: 9, scope: !14421)
!14834 = !DILocation(line: 5012, column: 6, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 5012, column: 6)
!14836 = !DILocation(line: 5012, column: 13, scope: !14835)
!14837 = !DILocation(line: 5012, column: 6, scope: !14421)
!14838 = !DILocation(line: 5013, column: 3, scope: !14835)
!14839 = !DILocation(line: 5014, column: 19, scope: !14421)
!14840 = !DILocation(line: 5014, column: 11, scope: !14421)
!14841 = !DILocation(line: 5014, column: 9, scope: !14421)
!14842 = !DILocation(line: 5014, column: 2, scope: !14421)
!14843 = !DILabel(scope: !14421, name: "error", file: !3, line: 5015)
!14844 = !DILocation(line: 5015, column: 1, scope: !14421)
!14845 = !DILocation(line: 5016, column: 6, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 5016, column: 6)
!14847 = !DILocation(line: 5016, column: 13, scope: !14846)
!14848 = !DILocation(line: 5016, column: 6, scope: !14421)
!14849 = !DILocation(line: 5017, column: 3, scope: !14846)
!14850 = !DILocation(line: 5019, column: 9, scope: !14421)
!14851 = !DILocation(line: 5019, column: 2, scope: !14421)
!14852 = distinct !DISubprogram(name: "set_qam256", scope: !3, file: !3, line: 5029, type: !5239, scopeLine: 5030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!14853 = !DILocalVariable(name: "state", arg: 1, scope: !14852, file: !3, line: 5029, type: !4562)
!14854 = !DILocation(line: 5029, column: 42, scope: !14852)
!14855 = !DILocalVariable(name: "status", scope: !14852, file: !3, line: 5031, type: !405)
!14856 = !DILocation(line: 5031, column: 6, scope: !14852)
!14857 = !DILocation(line: 5033, column: 2, scope: !14852)
!14858 = !DILocation(line: 5033, column: 2, scope: !14859)
!14859 = distinct !DILexicalBlock(scope: !14860, file: !3, line: 5033, column: 2)
!14860 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5033, column: 2)
!14861 = !DILocation(line: 5033, column: 2, scope: !14860)
!14862 = !DILocation(line: 5036, column: 19, scope: !14852)
!14863 = !DILocation(line: 5036, column: 11, scope: !14852)
!14864 = !DILocation(line: 5036, column: 9, scope: !14852)
!14865 = !DILocation(line: 5037, column: 6, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5037, column: 6)
!14867 = !DILocation(line: 5037, column: 13, scope: !14866)
!14868 = !DILocation(line: 5037, column: 6, scope: !14852)
!14869 = !DILocation(line: 5038, column: 3, scope: !14866)
!14870 = !DILocation(line: 5039, column: 19, scope: !14852)
!14871 = !DILocation(line: 5039, column: 11, scope: !14852)
!14872 = !DILocation(line: 5039, column: 9, scope: !14852)
!14873 = !DILocation(line: 5040, column: 6, scope: !14874)
!14874 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5040, column: 6)
!14875 = !DILocation(line: 5040, column: 13, scope: !14874)
!14876 = !DILocation(line: 5040, column: 6, scope: !14852)
!14877 = !DILocation(line: 5041, column: 3, scope: !14874)
!14878 = !DILocation(line: 5042, column: 19, scope: !14852)
!14879 = !DILocation(line: 5042, column: 11, scope: !14852)
!14880 = !DILocation(line: 5042, column: 9, scope: !14852)
!14881 = !DILocation(line: 5043, column: 6, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5043, column: 6)
!14883 = !DILocation(line: 5043, column: 13, scope: !14882)
!14884 = !DILocation(line: 5043, column: 6, scope: !14852)
!14885 = !DILocation(line: 5044, column: 3, scope: !14882)
!14886 = !DILocation(line: 5045, column: 19, scope: !14852)
!14887 = !DILocation(line: 5045, column: 11, scope: !14852)
!14888 = !DILocation(line: 5045, column: 9, scope: !14852)
!14889 = !DILocation(line: 5046, column: 6, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5046, column: 6)
!14891 = !DILocation(line: 5046, column: 13, scope: !14890)
!14892 = !DILocation(line: 5046, column: 6, scope: !14852)
!14893 = !DILocation(line: 5047, column: 3, scope: !14890)
!14894 = !DILocation(line: 5048, column: 19, scope: !14852)
!14895 = !DILocation(line: 5048, column: 11, scope: !14852)
!14896 = !DILocation(line: 5048, column: 9, scope: !14852)
!14897 = !DILocation(line: 5049, column: 6, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5049, column: 6)
!14899 = !DILocation(line: 5049, column: 13, scope: !14898)
!14900 = !DILocation(line: 5049, column: 6, scope: !14852)
!14901 = !DILocation(line: 5050, column: 3, scope: !14898)
!14902 = !DILocation(line: 5051, column: 19, scope: !14852)
!14903 = !DILocation(line: 5051, column: 11, scope: !14852)
!14904 = !DILocation(line: 5051, column: 9, scope: !14852)
!14905 = !DILocation(line: 5052, column: 6, scope: !14906)
!14906 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5052, column: 6)
!14907 = !DILocation(line: 5052, column: 13, scope: !14906)
!14908 = !DILocation(line: 5052, column: 6, scope: !14852)
!14909 = !DILocation(line: 5053, column: 3, scope: !14906)
!14910 = !DILocation(line: 5056, column: 19, scope: !14852)
!14911 = !DILocation(line: 5056, column: 11, scope: !14852)
!14912 = !DILocation(line: 5056, column: 9, scope: !14852)
!14913 = !DILocation(line: 5057, column: 6, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5057, column: 6)
!14915 = !DILocation(line: 5057, column: 13, scope: !14914)
!14916 = !DILocation(line: 5057, column: 6, scope: !14852)
!14917 = !DILocation(line: 5058, column: 3, scope: !14914)
!14918 = !DILocation(line: 5059, column: 19, scope: !14852)
!14919 = !DILocation(line: 5059, column: 11, scope: !14852)
!14920 = !DILocation(line: 5059, column: 9, scope: !14852)
!14921 = !DILocation(line: 5060, column: 6, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5060, column: 6)
!14923 = !DILocation(line: 5060, column: 13, scope: !14922)
!14924 = !DILocation(line: 5060, column: 6, scope: !14852)
!14925 = !DILocation(line: 5061, column: 3, scope: !14922)
!14926 = !DILocation(line: 5062, column: 19, scope: !14852)
!14927 = !DILocation(line: 5062, column: 11, scope: !14852)
!14928 = !DILocation(line: 5062, column: 9, scope: !14852)
!14929 = !DILocation(line: 5063, column: 6, scope: !14930)
!14930 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5063, column: 6)
!14931 = !DILocation(line: 5063, column: 13, scope: !14930)
!14932 = !DILocation(line: 5063, column: 6, scope: !14852)
!14933 = !DILocation(line: 5064, column: 3, scope: !14930)
!14934 = !DILocation(line: 5065, column: 19, scope: !14852)
!14935 = !DILocation(line: 5065, column: 11, scope: !14852)
!14936 = !DILocation(line: 5065, column: 9, scope: !14852)
!14937 = !DILocation(line: 5066, column: 6, scope: !14938)
!14938 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5066, column: 6)
!14939 = !DILocation(line: 5066, column: 13, scope: !14938)
!14940 = !DILocation(line: 5066, column: 6, scope: !14852)
!14941 = !DILocation(line: 5067, column: 3, scope: !14938)
!14942 = !DILocation(line: 5068, column: 19, scope: !14852)
!14943 = !DILocation(line: 5068, column: 11, scope: !14852)
!14944 = !DILocation(line: 5068, column: 9, scope: !14852)
!14945 = !DILocation(line: 5069, column: 6, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5069, column: 6)
!14947 = !DILocation(line: 5069, column: 13, scope: !14946)
!14948 = !DILocation(line: 5069, column: 6, scope: !14852)
!14949 = !DILocation(line: 5070, column: 3, scope: !14946)
!14950 = !DILocation(line: 5071, column: 19, scope: !14852)
!14951 = !DILocation(line: 5071, column: 11, scope: !14852)
!14952 = !DILocation(line: 5071, column: 9, scope: !14852)
!14953 = !DILocation(line: 5072, column: 6, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5072, column: 6)
!14955 = !DILocation(line: 5072, column: 13, scope: !14954)
!14956 = !DILocation(line: 5072, column: 6, scope: !14852)
!14957 = !DILocation(line: 5073, column: 3, scope: !14954)
!14958 = !DILocation(line: 5075, column: 19, scope: !14852)
!14959 = !DILocation(line: 5075, column: 11, scope: !14852)
!14960 = !DILocation(line: 5075, column: 9, scope: !14852)
!14961 = !DILocation(line: 5076, column: 6, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5076, column: 6)
!14963 = !DILocation(line: 5076, column: 13, scope: !14962)
!14964 = !DILocation(line: 5076, column: 6, scope: !14852)
!14965 = !DILocation(line: 5077, column: 3, scope: !14962)
!14966 = !DILocation(line: 5078, column: 19, scope: !14852)
!14967 = !DILocation(line: 5078, column: 11, scope: !14852)
!14968 = !DILocation(line: 5078, column: 9, scope: !14852)
!14969 = !DILocation(line: 5079, column: 6, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5079, column: 6)
!14971 = !DILocation(line: 5079, column: 13, scope: !14970)
!14972 = !DILocation(line: 5079, column: 6, scope: !14852)
!14973 = !DILocation(line: 5080, column: 3, scope: !14970)
!14974 = !DILocation(line: 5081, column: 19, scope: !14852)
!14975 = !DILocation(line: 5081, column: 11, scope: !14852)
!14976 = !DILocation(line: 5081, column: 9, scope: !14852)
!14977 = !DILocation(line: 5082, column: 6, scope: !14978)
!14978 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5082, column: 6)
!14979 = !DILocation(line: 5082, column: 13, scope: !14978)
!14980 = !DILocation(line: 5082, column: 6, scope: !14852)
!14981 = !DILocation(line: 5083, column: 3, scope: !14978)
!14982 = !DILocation(line: 5087, column: 19, scope: !14852)
!14983 = !DILocation(line: 5087, column: 11, scope: !14852)
!14984 = !DILocation(line: 5087, column: 9, scope: !14852)
!14985 = !DILocation(line: 5089, column: 6, scope: !14986)
!14986 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5089, column: 6)
!14987 = !DILocation(line: 5089, column: 13, scope: !14986)
!14988 = !DILocation(line: 5089, column: 6, scope: !14852)
!14989 = !DILocation(line: 5090, column: 3, scope: !14986)
!14990 = !DILocation(line: 5095, column: 19, scope: !14852)
!14991 = !DILocation(line: 5095, column: 11, scope: !14852)
!14992 = !DILocation(line: 5095, column: 9, scope: !14852)
!14993 = !DILocation(line: 5096, column: 6, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5096, column: 6)
!14995 = !DILocation(line: 5096, column: 13, scope: !14994)
!14996 = !DILocation(line: 5096, column: 6, scope: !14852)
!14997 = !DILocation(line: 5097, column: 3, scope: !14994)
!14998 = !DILocation(line: 5098, column: 19, scope: !14852)
!14999 = !DILocation(line: 5098, column: 11, scope: !14852)
!15000 = !DILocation(line: 5098, column: 9, scope: !14852)
!15001 = !DILocation(line: 5099, column: 6, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5099, column: 6)
!15003 = !DILocation(line: 5099, column: 13, scope: !15002)
!15004 = !DILocation(line: 5099, column: 6, scope: !14852)
!15005 = !DILocation(line: 5100, column: 3, scope: !15002)
!15006 = !DILocation(line: 5101, column: 19, scope: !14852)
!15007 = !DILocation(line: 5101, column: 11, scope: !14852)
!15008 = !DILocation(line: 5101, column: 9, scope: !14852)
!15009 = !DILocation(line: 5102, column: 6, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5102, column: 6)
!15011 = !DILocation(line: 5102, column: 13, scope: !15010)
!15012 = !DILocation(line: 5102, column: 6, scope: !14852)
!15013 = !DILocation(line: 5103, column: 3, scope: !15010)
!15014 = !DILocation(line: 5104, column: 19, scope: !14852)
!15015 = !DILocation(line: 5104, column: 11, scope: !14852)
!15016 = !DILocation(line: 5104, column: 9, scope: !14852)
!15017 = !DILocation(line: 5105, column: 6, scope: !15018)
!15018 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5105, column: 6)
!15019 = !DILocation(line: 5105, column: 13, scope: !15018)
!15020 = !DILocation(line: 5105, column: 6, scope: !14852)
!15021 = !DILocation(line: 5106, column: 3, scope: !15018)
!15022 = !DILocation(line: 5107, column: 19, scope: !14852)
!15023 = !DILocation(line: 5107, column: 11, scope: !14852)
!15024 = !DILocation(line: 5107, column: 9, scope: !14852)
!15025 = !DILocation(line: 5108, column: 6, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5108, column: 6)
!15027 = !DILocation(line: 5108, column: 13, scope: !15026)
!15028 = !DILocation(line: 5108, column: 6, scope: !14852)
!15029 = !DILocation(line: 5109, column: 3, scope: !15026)
!15030 = !DILocation(line: 5110, column: 19, scope: !14852)
!15031 = !DILocation(line: 5110, column: 11, scope: !14852)
!15032 = !DILocation(line: 5110, column: 9, scope: !14852)
!15033 = !DILocation(line: 5111, column: 6, scope: !15034)
!15034 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5111, column: 6)
!15035 = !DILocation(line: 5111, column: 13, scope: !15034)
!15036 = !DILocation(line: 5111, column: 6, scope: !14852)
!15037 = !DILocation(line: 5112, column: 3, scope: !15034)
!15038 = !DILocation(line: 5113, column: 19, scope: !14852)
!15039 = !DILocation(line: 5113, column: 11, scope: !14852)
!15040 = !DILocation(line: 5113, column: 9, scope: !14852)
!15041 = !DILocation(line: 5114, column: 6, scope: !15042)
!15042 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5114, column: 6)
!15043 = !DILocation(line: 5114, column: 13, scope: !15042)
!15044 = !DILocation(line: 5114, column: 6, scope: !14852)
!15045 = !DILocation(line: 5115, column: 3, scope: !15042)
!15046 = !DILocation(line: 5116, column: 19, scope: !14852)
!15047 = !DILocation(line: 5116, column: 11, scope: !14852)
!15048 = !DILocation(line: 5116, column: 9, scope: !14852)
!15049 = !DILocation(line: 5117, column: 6, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5117, column: 6)
!15051 = !DILocation(line: 5117, column: 13, scope: !15050)
!15052 = !DILocation(line: 5117, column: 6, scope: !14852)
!15053 = !DILocation(line: 5118, column: 3, scope: !15050)
!15054 = !DILocation(line: 5120, column: 19, scope: !14852)
!15055 = !DILocation(line: 5120, column: 11, scope: !14852)
!15056 = !DILocation(line: 5120, column: 9, scope: !14852)
!15057 = !DILocation(line: 5121, column: 6, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5121, column: 6)
!15059 = !DILocation(line: 5121, column: 13, scope: !15058)
!15060 = !DILocation(line: 5121, column: 6, scope: !14852)
!15061 = !DILocation(line: 5122, column: 3, scope: !15058)
!15062 = !DILocation(line: 5123, column: 19, scope: !14852)
!15063 = !DILocation(line: 5123, column: 11, scope: !14852)
!15064 = !DILocation(line: 5123, column: 9, scope: !14852)
!15065 = !DILocation(line: 5124, column: 6, scope: !15066)
!15066 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5124, column: 6)
!15067 = !DILocation(line: 5124, column: 13, scope: !15066)
!15068 = !DILocation(line: 5124, column: 6, scope: !14852)
!15069 = !DILocation(line: 5125, column: 3, scope: !15066)
!15070 = !DILocation(line: 5126, column: 19, scope: !14852)
!15071 = !DILocation(line: 5126, column: 11, scope: !14852)
!15072 = !DILocation(line: 5126, column: 9, scope: !14852)
!15073 = !DILocation(line: 5127, column: 6, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5127, column: 6)
!15075 = !DILocation(line: 5127, column: 13, scope: !15074)
!15076 = !DILocation(line: 5127, column: 6, scope: !14852)
!15077 = !DILocation(line: 5128, column: 3, scope: !15074)
!15078 = !DILocation(line: 5129, column: 19, scope: !14852)
!15079 = !DILocation(line: 5129, column: 11, scope: !14852)
!15080 = !DILocation(line: 5129, column: 9, scope: !14852)
!15081 = !DILocation(line: 5130, column: 6, scope: !15082)
!15082 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5130, column: 6)
!15083 = !DILocation(line: 5130, column: 13, scope: !15082)
!15084 = !DILocation(line: 5130, column: 6, scope: !14852)
!15085 = !DILocation(line: 5131, column: 3, scope: !15082)
!15086 = !DILocation(line: 5132, column: 19, scope: !14852)
!15087 = !DILocation(line: 5132, column: 11, scope: !14852)
!15088 = !DILocation(line: 5132, column: 9, scope: !14852)
!15089 = !DILocation(line: 5133, column: 6, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5133, column: 6)
!15091 = !DILocation(line: 5133, column: 13, scope: !15090)
!15092 = !DILocation(line: 5133, column: 6, scope: !14852)
!15093 = !DILocation(line: 5134, column: 3, scope: !15090)
!15094 = !DILocation(line: 5135, column: 19, scope: !14852)
!15095 = !DILocation(line: 5135, column: 11, scope: !14852)
!15096 = !DILocation(line: 5135, column: 9, scope: !14852)
!15097 = !DILocation(line: 5136, column: 6, scope: !15098)
!15098 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5136, column: 6)
!15099 = !DILocation(line: 5136, column: 13, scope: !15098)
!15100 = !DILocation(line: 5136, column: 6, scope: !14852)
!15101 = !DILocation(line: 5137, column: 3, scope: !15098)
!15102 = !DILocation(line: 5138, column: 19, scope: !14852)
!15103 = !DILocation(line: 5138, column: 11, scope: !14852)
!15104 = !DILocation(line: 5138, column: 9, scope: !14852)
!15105 = !DILocation(line: 5139, column: 6, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5139, column: 6)
!15107 = !DILocation(line: 5139, column: 13, scope: !15106)
!15108 = !DILocation(line: 5139, column: 6, scope: !14852)
!15109 = !DILocation(line: 5140, column: 3, scope: !15106)
!15110 = !DILocation(line: 5141, column: 19, scope: !14852)
!15111 = !DILocation(line: 5141, column: 11, scope: !14852)
!15112 = !DILocation(line: 5141, column: 9, scope: !14852)
!15113 = !DILocation(line: 5142, column: 6, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5142, column: 6)
!15115 = !DILocation(line: 5142, column: 13, scope: !15114)
!15116 = !DILocation(line: 5142, column: 6, scope: !14852)
!15117 = !DILocation(line: 5143, column: 3, scope: !15114)
!15118 = !DILocation(line: 5144, column: 19, scope: !14852)
!15119 = !DILocation(line: 5144, column: 11, scope: !14852)
!15120 = !DILocation(line: 5144, column: 9, scope: !14852)
!15121 = !DILocation(line: 5145, column: 6, scope: !15122)
!15122 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5145, column: 6)
!15123 = !DILocation(line: 5145, column: 13, scope: !15122)
!15124 = !DILocation(line: 5145, column: 6, scope: !14852)
!15125 = !DILocation(line: 5146, column: 3, scope: !15122)
!15126 = !DILocation(line: 5147, column: 19, scope: !14852)
!15127 = !DILocation(line: 5147, column: 11, scope: !14852)
!15128 = !DILocation(line: 5147, column: 9, scope: !14852)
!15129 = !DILocation(line: 5148, column: 6, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5148, column: 6)
!15131 = !DILocation(line: 5148, column: 13, scope: !15130)
!15132 = !DILocation(line: 5148, column: 6, scope: !14852)
!15133 = !DILocation(line: 5149, column: 3, scope: !15130)
!15134 = !DILocation(line: 5150, column: 19, scope: !14852)
!15135 = !DILocation(line: 5150, column: 11, scope: !14852)
!15136 = !DILocation(line: 5150, column: 9, scope: !14852)
!15137 = !DILocation(line: 5151, column: 6, scope: !15138)
!15138 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5151, column: 6)
!15139 = !DILocation(line: 5151, column: 13, scope: !15138)
!15140 = !DILocation(line: 5151, column: 6, scope: !14852)
!15141 = !DILocation(line: 5152, column: 3, scope: !15138)
!15142 = !DILocation(line: 5153, column: 19, scope: !14852)
!15143 = !DILocation(line: 5153, column: 11, scope: !14852)
!15144 = !DILocation(line: 5153, column: 9, scope: !14852)
!15145 = !DILocation(line: 5154, column: 6, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5154, column: 6)
!15147 = !DILocation(line: 5154, column: 13, scope: !15146)
!15148 = !DILocation(line: 5154, column: 6, scope: !14852)
!15149 = !DILocation(line: 5155, column: 3, scope: !15146)
!15150 = !DILocation(line: 5160, column: 19, scope: !14852)
!15151 = !DILocation(line: 5160, column: 11, scope: !14852)
!15152 = !DILocation(line: 5160, column: 9, scope: !14852)
!15153 = !DILocation(line: 5161, column: 6, scope: !15154)
!15154 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5161, column: 6)
!15155 = !DILocation(line: 5161, column: 13, scope: !15154)
!15156 = !DILocation(line: 5161, column: 6, scope: !14852)
!15157 = !DILocation(line: 5162, column: 3, scope: !15154)
!15158 = !DILocation(line: 5163, column: 19, scope: !14852)
!15159 = !DILocation(line: 5163, column: 11, scope: !14852)
!15160 = !DILocation(line: 5163, column: 9, scope: !14852)
!15161 = !DILocation(line: 5164, column: 6, scope: !15162)
!15162 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5164, column: 6)
!15163 = !DILocation(line: 5164, column: 13, scope: !15162)
!15164 = !DILocation(line: 5164, column: 6, scope: !14852)
!15165 = !DILocation(line: 5165, column: 3, scope: !15162)
!15166 = !DILocation(line: 5166, column: 19, scope: !14852)
!15167 = !DILocation(line: 5166, column: 11, scope: !14852)
!15168 = !DILocation(line: 5166, column: 9, scope: !14852)
!15169 = !DILocation(line: 5167, column: 6, scope: !15170)
!15170 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5167, column: 6)
!15171 = !DILocation(line: 5167, column: 13, scope: !15170)
!15172 = !DILocation(line: 5167, column: 6, scope: !14852)
!15173 = !DILocation(line: 5168, column: 3, scope: !15170)
!15174 = !DILocation(line: 5169, column: 19, scope: !14852)
!15175 = !DILocation(line: 5169, column: 11, scope: !14852)
!15176 = !DILocation(line: 5169, column: 9, scope: !14852)
!15177 = !DILocation(line: 5170, column: 6, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5170, column: 6)
!15179 = !DILocation(line: 5170, column: 13, scope: !15178)
!15180 = !DILocation(line: 5170, column: 6, scope: !14852)
!15181 = !DILocation(line: 5171, column: 3, scope: !15178)
!15182 = !DILocation(line: 5172, column: 19, scope: !14852)
!15183 = !DILocation(line: 5172, column: 11, scope: !14852)
!15184 = !DILocation(line: 5172, column: 9, scope: !14852)
!15185 = !DILocation(line: 5173, column: 6, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5173, column: 6)
!15187 = !DILocation(line: 5173, column: 13, scope: !15186)
!15188 = !DILocation(line: 5173, column: 6, scope: !14852)
!15189 = !DILocation(line: 5174, column: 3, scope: !15186)
!15190 = !DILocation(line: 5175, column: 19, scope: !14852)
!15191 = !DILocation(line: 5175, column: 11, scope: !14852)
!15192 = !DILocation(line: 5175, column: 9, scope: !14852)
!15193 = !DILocation(line: 5176, column: 6, scope: !15194)
!15194 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5176, column: 6)
!15195 = !DILocation(line: 5176, column: 13, scope: !15194)
!15196 = !DILocation(line: 5176, column: 6, scope: !14852)
!15197 = !DILocation(line: 5177, column: 3, scope: !15194)
!15198 = !DILocation(line: 5179, column: 19, scope: !14852)
!15199 = !DILocation(line: 5179, column: 11, scope: !14852)
!15200 = !DILocation(line: 5179, column: 9, scope: !14852)
!15201 = !DILocation(line: 5180, column: 6, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5180, column: 6)
!15203 = !DILocation(line: 5180, column: 13, scope: !15202)
!15204 = !DILocation(line: 5180, column: 6, scope: !14852)
!15205 = !DILocation(line: 5181, column: 3, scope: !15202)
!15206 = !DILocation(line: 5182, column: 19, scope: !14852)
!15207 = !DILocation(line: 5182, column: 11, scope: !14852)
!15208 = !DILocation(line: 5182, column: 9, scope: !14852)
!15209 = !DILocation(line: 5183, column: 6, scope: !15210)
!15210 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5183, column: 6)
!15211 = !DILocation(line: 5183, column: 13, scope: !15210)
!15212 = !DILocation(line: 5183, column: 6, scope: !14852)
!15213 = !DILocation(line: 5184, column: 3, scope: !15210)
!15214 = !DILocation(line: 5185, column: 19, scope: !14852)
!15215 = !DILocation(line: 5185, column: 11, scope: !14852)
!15216 = !DILocation(line: 5185, column: 9, scope: !14852)
!15217 = !DILocation(line: 5186, column: 6, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5186, column: 6)
!15219 = !DILocation(line: 5186, column: 13, scope: !15218)
!15220 = !DILocation(line: 5186, column: 6, scope: !14852)
!15221 = !DILocation(line: 5187, column: 3, scope: !15218)
!15222 = !DILocation(line: 5192, column: 19, scope: !14852)
!15223 = !DILocation(line: 5192, column: 11, scope: !14852)
!15224 = !DILocation(line: 5192, column: 9, scope: !14852)
!15225 = !DILocation(line: 5193, column: 6, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5193, column: 6)
!15227 = !DILocation(line: 5193, column: 13, scope: !15226)
!15228 = !DILocation(line: 5193, column: 6, scope: !14852)
!15229 = !DILocation(line: 5194, column: 3, scope: !15226)
!15230 = !DILocation(line: 5195, column: 19, scope: !14852)
!15231 = !DILocation(line: 5195, column: 11, scope: !14852)
!15232 = !DILocation(line: 5195, column: 9, scope: !14852)
!15233 = !DILocation(line: 5196, column: 6, scope: !15234)
!15234 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5196, column: 6)
!15235 = !DILocation(line: 5196, column: 13, scope: !15234)
!15236 = !DILocation(line: 5196, column: 6, scope: !14852)
!15237 = !DILocation(line: 5197, column: 3, scope: !15234)
!15238 = !DILocation(line: 5198, column: 19, scope: !14852)
!15239 = !DILocation(line: 5198, column: 11, scope: !14852)
!15240 = !DILocation(line: 5198, column: 9, scope: !14852)
!15241 = !DILocation(line: 5199, column: 6, scope: !15242)
!15242 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5199, column: 6)
!15243 = !DILocation(line: 5199, column: 13, scope: !15242)
!15244 = !DILocation(line: 5199, column: 6, scope: !14852)
!15245 = !DILocation(line: 5200, column: 3, scope: !15242)
!15246 = !DILocation(line: 5201, column: 19, scope: !14852)
!15247 = !DILocation(line: 5201, column: 11, scope: !14852)
!15248 = !DILocation(line: 5201, column: 9, scope: !14852)
!15249 = !DILocation(line: 5202, column: 6, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5202, column: 6)
!15251 = !DILocation(line: 5202, column: 13, scope: !15250)
!15252 = !DILocation(line: 5202, column: 6, scope: !14852)
!15253 = !DILocation(line: 5203, column: 3, scope: !15250)
!15254 = !DILocation(line: 5204, column: 19, scope: !14852)
!15255 = !DILocation(line: 5204, column: 11, scope: !14852)
!15256 = !DILocation(line: 5204, column: 9, scope: !14852)
!15257 = !DILocation(line: 5205, column: 6, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5205, column: 6)
!15259 = !DILocation(line: 5205, column: 13, scope: !15258)
!15260 = !DILocation(line: 5205, column: 6, scope: !14852)
!15261 = !DILocation(line: 5206, column: 3, scope: !15258)
!15262 = !DILocation(line: 5207, column: 19, scope: !14852)
!15263 = !DILocation(line: 5207, column: 11, scope: !14852)
!15264 = !DILocation(line: 5207, column: 9, scope: !14852)
!15265 = !DILocation(line: 5208, column: 6, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5208, column: 6)
!15267 = !DILocation(line: 5208, column: 13, scope: !15266)
!15268 = !DILocation(line: 5208, column: 6, scope: !14852)
!15269 = !DILocation(line: 5209, column: 3, scope: !15266)
!15270 = !DILocation(line: 5210, column: 19, scope: !14852)
!15271 = !DILocation(line: 5210, column: 11, scope: !14852)
!15272 = !DILocation(line: 5210, column: 9, scope: !14852)
!15273 = !DILocation(line: 5210, column: 2, scope: !14852)
!15274 = !DILabel(scope: !14852, name: "error", file: !3, line: 5211)
!15275 = !DILocation(line: 5211, column: 1, scope: !14852)
!15276 = !DILocation(line: 5212, column: 6, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !14852, file: !3, line: 5212, column: 6)
!15278 = !DILocation(line: 5212, column: 13, scope: !15277)
!15279 = !DILocation(line: 5212, column: 6, scope: !14852)
!15280 = !DILocation(line: 5213, column: 3, scope: !15277)
!15281 = !DILocation(line: 5214, column: 9, scope: !14852)
!15282 = !DILocation(line: 5214, column: 2, scope: !14852)
!15283 = distinct !DISubprogram(name: "mpegts_start", scope: !3, file: !3, line: 1895, type: !5239, scopeLine: 1896, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!15284 = !DILocalVariable(name: "state", arg: 1, scope: !15283, file: !3, line: 1895, type: !4562)
!15285 = !DILocation(line: 1895, column: 44, scope: !15283)
!15286 = !DILocalVariable(name: "status", scope: !15283, file: !3, line: 1897, type: !405)
!15287 = !DILocation(line: 1897, column: 6, scope: !15283)
!15288 = !DILocalVariable(name: "fec_oc_snc_mode", scope: !15283, file: !3, line: 1899, type: !408)
!15289 = !DILocation(line: 1899, column: 6, scope: !15283)
!15290 = !DILocation(line: 1902, column: 18, scope: !15283)
!15291 = !DILocation(line: 1902, column: 11, scope: !15283)
!15292 = !DILocation(line: 1902, column: 9, scope: !15283)
!15293 = !DILocation(line: 1903, column: 6, scope: !15294)
!15294 = distinct !DILexicalBlock(scope: !15283, file: !3, line: 1903, column: 6)
!15295 = !DILocation(line: 1903, column: 13, scope: !15294)
!15296 = !DILocation(line: 1903, column: 6, scope: !15283)
!15297 = !DILocation(line: 1904, column: 3, scope: !15294)
!15298 = !DILocation(line: 1905, column: 18, scope: !15283)
!15299 = !DILocation(line: 1906, column: 19, scope: !15283)
!15300 = !DILocation(line: 1906, column: 46, scope: !15283)
!15301 = !DILocation(line: 1906, column: 11, scope: !15283)
!15302 = !DILocation(line: 1906, column: 9, scope: !15283)
!15303 = !DILocation(line: 1907, column: 6, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15283, file: !3, line: 1907, column: 6)
!15305 = !DILocation(line: 1907, column: 13, scope: !15304)
!15306 = !DILocation(line: 1907, column: 6, scope: !15283)
!15307 = !DILocation(line: 1908, column: 3, scope: !15304)
!15308 = !DILocation(line: 1909, column: 19, scope: !15283)
!15309 = !DILocation(line: 1909, column: 11, scope: !15283)
!15310 = !DILocation(line: 1909, column: 9, scope: !15283)
!15311 = !DILocation(line: 1909, column: 2, scope: !15283)
!15312 = !DILabel(scope: !15283, name: "error", file: !3, line: 1910)
!15313 = !DILocation(line: 1910, column: 1, scope: !15283)
!15314 = !DILocation(line: 1911, column: 6, scope: !15315)
!15315 = distinct !DILexicalBlock(scope: !15283, file: !3, line: 1911, column: 6)
!15316 = !DILocation(line: 1911, column: 13, scope: !15315)
!15317 = !DILocation(line: 1911, column: 6, scope: !15283)
!15318 = !DILocation(line: 1912, column: 3, scope: !15315)
!15319 = !DILocation(line: 1913, column: 9, scope: !15283)
!15320 = !DILocation(line: 1913, column: 2, scope: !15283)
!15321 = distinct !DISubprogram(name: "Frac28a", scope: !3, file: !3, line: 158, type: !15322, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!15322 = !DISubroutineType(types: !15323)
!15323 = !{!411, !411, !411}
!15324 = !DILocalVariable(name: "a", arg: 1, scope: !15321, file: !3, line: 158, type: !411)
!15325 = !DILocation(line: 158, column: 31, scope: !15321)
!15326 = !DILocalVariable(name: "c", arg: 2, scope: !15321, file: !3, line: 158, type: !411)
!15327 = !DILocation(line: 158, column: 38, scope: !15321)
!15328 = !DILocalVariable(name: "i", scope: !15321, file: !3, line: 160, type: !405)
!15329 = !DILocation(line: 160, column: 6, scope: !15321)
!15330 = !DILocalVariable(name: "Q1", scope: !15321, file: !3, line: 161, type: !411)
!15331 = !DILocation(line: 161, column: 6, scope: !15321)
!15332 = !DILocalVariable(name: "R0", scope: !15321, file: !3, line: 162, type: !411)
!15333 = !DILocation(line: 162, column: 6, scope: !15321)
!15334 = !DILocation(line: 164, column: 8, scope: !15321)
!15335 = !DILocation(line: 164, column: 12, scope: !15321)
!15336 = !DILocation(line: 164, column: 10, scope: !15321)
!15337 = !DILocation(line: 164, column: 15, scope: !15321)
!15338 = !DILocation(line: 164, column: 5, scope: !15321)
!15339 = !DILocation(line: 165, column: 7, scope: !15321)
!15340 = !DILocation(line: 165, column: 11, scope: !15321)
!15341 = !DILocation(line: 165, column: 9, scope: !15321)
!15342 = !DILocation(line: 165, column: 5, scope: !15321)
!15343 = !DILocation(line: 171, column: 9, scope: !15344)
!15344 = distinct !DILexicalBlock(scope: !15321, file: !3, line: 171, column: 2)
!15345 = !DILocation(line: 171, column: 7, scope: !15344)
!15346 = !DILocation(line: 171, column: 14, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15344, file: !3, line: 171, column: 2)
!15348 = !DILocation(line: 171, column: 16, scope: !15347)
!15349 = !DILocation(line: 171, column: 2, scope: !15344)
!15350 = !DILocation(line: 172, column: 9, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15347, file: !3, line: 171, column: 26)
!15352 = !DILocation(line: 172, column: 12, scope: !15351)
!15353 = !DILocation(line: 172, column: 21, scope: !15351)
!15354 = !DILocation(line: 172, column: 26, scope: !15351)
!15355 = !DILocation(line: 172, column: 24, scope: !15351)
!15356 = !DILocation(line: 172, column: 18, scope: !15351)
!15357 = !DILocation(line: 172, column: 6, scope: !15351)
!15358 = !DILocation(line: 173, column: 9, scope: !15351)
!15359 = !DILocation(line: 173, column: 14, scope: !15351)
!15360 = !DILocation(line: 173, column: 12, scope: !15351)
!15361 = !DILocation(line: 173, column: 17, scope: !15351)
!15362 = !DILocation(line: 173, column: 6, scope: !15351)
!15363 = !DILocation(line: 174, column: 2, scope: !15351)
!15364 = !DILocation(line: 171, column: 22, scope: !15347)
!15365 = !DILocation(line: 171, column: 2, scope: !15347)
!15366 = distinct !{!15366, !15349, !15367}
!15367 = !DILocation(line: 174, column: 2, scope: !15344)
!15368 = !DILocation(line: 176, column: 7, scope: !15369)
!15369 = distinct !DILexicalBlock(scope: !15321, file: !3, line: 176, column: 6)
!15370 = !DILocation(line: 176, column: 10, scope: !15369)
!15371 = !DILocation(line: 176, column: 19, scope: !15369)
!15372 = !DILocation(line: 176, column: 16, scope: !15369)
!15373 = !DILocation(line: 176, column: 6, scope: !15321)
!15374 = !DILocation(line: 177, column: 5, scope: !15369)
!15375 = !DILocation(line: 177, column: 3, scope: !15369)
!15376 = !DILocation(line: 179, column: 9, scope: !15321)
!15377 = !DILocation(line: 179, column: 2, scope: !15321)
!15378 = distinct !DISubprogram(name: "dvbt_sc_command", scope: !3, file: !3, line: 3195, type: !15379, scopeLine: 3199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!15379 = !DISubroutineType(types: !15380)
!15380 = !{!405, !4562, !408, !408, !408, !408, !408, !408, !408}
!15381 = !DILocalVariable(name: "state", arg: 1, scope: !15378, file: !3, line: 3195, type: !4562)
!15382 = !DILocation(line: 3195, column: 47, scope: !15378)
!15383 = !DILocalVariable(name: "cmd", arg: 2, scope: !15378, file: !3, line: 3196, type: !408)
!15384 = !DILocation(line: 3196, column: 9, scope: !15378)
!15385 = !DILocalVariable(name: "subcmd", arg: 3, scope: !15378, file: !3, line: 3196, type: !408)
!15386 = !DILocation(line: 3196, column: 18, scope: !15378)
!15387 = !DILocalVariable(name: "param0", arg: 4, scope: !15378, file: !3, line: 3197, type: !408)
!15388 = !DILocation(line: 3197, column: 9, scope: !15378)
!15389 = !DILocalVariable(name: "param1", arg: 5, scope: !15378, file: !3, line: 3197, type: !408)
!15390 = !DILocation(line: 3197, column: 21, scope: !15378)
!15391 = !DILocalVariable(name: "param2", arg: 6, scope: !15378, file: !3, line: 3197, type: !408)
!15392 = !DILocation(line: 3197, column: 33, scope: !15378)
!15393 = !DILocalVariable(name: "param3", arg: 7, scope: !15378, file: !3, line: 3198, type: !408)
!15394 = !DILocation(line: 3198, column: 9, scope: !15378)
!15395 = !DILocalVariable(name: "param4", arg: 8, scope: !15378, file: !3, line: 3198, type: !408)
!15396 = !DILocation(line: 3198, column: 21, scope: !15378)
!15397 = !DILocalVariable(name: "cur_cmd", scope: !15378, file: !3, line: 3200, type: !408)
!15398 = !DILocation(line: 3200, column: 6, scope: !15378)
!15399 = !DILocalVariable(name: "err_code", scope: !15378, file: !3, line: 3201, type: !408)
!15400 = !DILocation(line: 3201, column: 6, scope: !15378)
!15401 = !DILocalVariable(name: "retry_cnt", scope: !15378, file: !3, line: 3202, type: !408)
!15402 = !DILocation(line: 3202, column: 6, scope: !15378)
!15403 = !DILocalVariable(name: "sc_exec", scope: !15378, file: !3, line: 3203, type: !408)
!15404 = !DILocation(line: 3203, column: 6, scope: !15378)
!15405 = !DILocalVariable(name: "status", scope: !15378, file: !3, line: 3204, type: !405)
!15406 = !DILocation(line: 3204, column: 6, scope: !15378)
!15407 = !DILocation(line: 3206, column: 2, scope: !15378)
!15408 = !DILocation(line: 3206, column: 2, scope: !15409)
!15409 = distinct !DILexicalBlock(scope: !15410, file: !3, line: 3206, column: 2)
!15410 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3206, column: 2)
!15411 = !DILocation(line: 3206, column: 2, scope: !15410)
!15412 = !DILocation(line: 3207, column: 18, scope: !15378)
!15413 = !DILocation(line: 3207, column: 11, scope: !15378)
!15414 = !DILocation(line: 3207, column: 9, scope: !15378)
!15415 = !DILocation(line: 3208, column: 6, scope: !15416)
!15416 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3208, column: 6)
!15417 = !DILocation(line: 3208, column: 14, scope: !15416)
!15418 = !DILocation(line: 3208, column: 6, scope: !15378)
!15419 = !DILocation(line: 3210, column: 10, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15416, file: !3, line: 3208, column: 20)
!15421 = !DILocation(line: 3211, column: 2, scope: !15420)
!15422 = !DILocation(line: 3212, column: 6, scope: !15423)
!15423 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3212, column: 6)
!15424 = !DILocation(line: 3212, column: 13, scope: !15423)
!15425 = !DILocation(line: 3212, column: 6, scope: !15378)
!15426 = !DILocation(line: 3213, column: 3, scope: !15423)
!15427 = !DILocation(line: 3216, column: 12, scope: !15378)
!15428 = !DILocation(line: 3217, column: 2, scope: !15378)
!15429 = !DILocation(line: 3218, column: 3, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3217, column: 5)
!15431 = !DILocation(line: 3219, column: 19, scope: !15430)
!15432 = !DILocation(line: 3219, column: 12, scope: !15430)
!15433 = !DILocation(line: 3219, column: 10, scope: !15430)
!15434 = !DILocation(line: 3220, column: 12, scope: !15430)
!15435 = !DILocation(line: 3221, column: 2, scope: !15430)
!15436 = !DILocation(line: 3221, column: 12, scope: !15378)
!15437 = !DILocation(line: 3221, column: 20, scope: !15378)
!15438 = !DILocation(line: 3221, column: 26, scope: !15378)
!15439 = !DILocation(line: 3221, column: 30, scope: !15378)
!15440 = !DILocation(line: 3221, column: 40, scope: !15378)
!15441 = !DILocation(line: 0, scope: !15378)
!15442 = distinct !{!15442, !15428, !15443}
!15443 = !DILocation(line: 3221, column: 59, scope: !15378)
!15444 = !DILocation(line: 3222, column: 6, scope: !15445)
!15445 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3222, column: 6)
!15446 = !DILocation(line: 3222, column: 16, scope: !15445)
!15447 = !DILocation(line: 3222, column: 36, scope: !15445)
!15448 = !DILocation(line: 3222, column: 40, scope: !15445)
!15449 = !DILocation(line: 3222, column: 47, scope: !15445)
!15450 = !DILocation(line: 3222, column: 6, scope: !15378)
!15451 = !DILocation(line: 3223, column: 3, scope: !15445)
!15452 = !DILocation(line: 3226, column: 10, scope: !15378)
!15453 = !DILocation(line: 3226, column: 2, scope: !15378)
!15454 = !DILocation(line: 3231, column: 20, scope: !15455)
!15455 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3226, column: 15)
!15456 = !DILocation(line: 3231, column: 55, scope: !15455)
!15457 = !DILocation(line: 3231, column: 12, scope: !15455)
!15458 = !DILocation(line: 3231, column: 10, scope: !15455)
!15459 = !DILocation(line: 3232, column: 7, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15455, file: !3, line: 3232, column: 7)
!15461 = !DILocation(line: 3232, column: 14, scope: !15460)
!15462 = !DILocation(line: 3232, column: 7, scope: !15455)
!15463 = !DILocation(line: 3233, column: 4, scope: !15460)
!15464 = !DILocation(line: 3234, column: 3, scope: !15455)
!15465 = !DILocation(line: 3237, column: 3, scope: !15455)
!15466 = !DILocation(line: 3241, column: 9, scope: !15378)
!15467 = !DILocation(line: 3242, column: 10, scope: !15378)
!15468 = !DILocation(line: 3242, column: 2, scope: !15378)
!15469 = !DILocation(line: 3250, column: 21, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3242, column: 15)
!15471 = !DILocation(line: 3250, column: 54, scope: !15470)
!15472 = !DILocation(line: 3250, column: 13, scope: !15470)
!15473 = !DILocation(line: 3250, column: 10, scope: !15470)
!15474 = !DILocation(line: 3250, column: 3, scope: !15470)
!15475 = !DILocation(line: 3254, column: 21, scope: !15470)
!15476 = !DILocation(line: 3254, column: 54, scope: !15470)
!15477 = !DILocation(line: 3254, column: 13, scope: !15470)
!15478 = !DILocation(line: 3254, column: 10, scope: !15470)
!15479 = !DILocation(line: 3254, column: 3, scope: !15470)
!15480 = !DILocation(line: 3259, column: 21, scope: !15470)
!15481 = !DILocation(line: 3259, column: 51, scope: !15470)
!15482 = !DILocation(line: 3259, column: 13, scope: !15470)
!15483 = !DILocation(line: 3259, column: 10, scope: !15470)
!15484 = !DILocation(line: 3260, column: 3, scope: !15470)
!15485 = !DILocation(line: 3263, column: 10, scope: !15470)
!15486 = !DILocation(line: 3264, column: 2, scope: !15470)
!15487 = !DILocation(line: 3265, column: 6, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3265, column: 6)
!15489 = !DILocation(line: 3265, column: 13, scope: !15488)
!15490 = !DILocation(line: 3265, column: 6, scope: !15378)
!15491 = !DILocation(line: 3266, column: 3, scope: !15488)
!15492 = !DILocation(line: 3269, column: 12, scope: !15378)
!15493 = !DILocation(line: 3270, column: 2, scope: !15378)
!15494 = !DILocation(line: 3271, column: 3, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3270, column: 5)
!15496 = !DILocation(line: 3272, column: 19, scope: !15495)
!15497 = !DILocation(line: 3272, column: 12, scope: !15495)
!15498 = !DILocation(line: 3272, column: 10, scope: !15495)
!15499 = !DILocation(line: 3273, column: 12, scope: !15495)
!15500 = !DILocation(line: 3274, column: 2, scope: !15495)
!15501 = !DILocation(line: 3274, column: 12, scope: !15378)
!15502 = !DILocation(line: 3274, column: 20, scope: !15378)
!15503 = !DILocation(line: 3274, column: 26, scope: !15378)
!15504 = !DILocation(line: 3274, column: 30, scope: !15378)
!15505 = !DILocation(line: 3274, column: 40, scope: !15378)
!15506 = distinct !{!15506, !15493, !15507}
!15507 = !DILocation(line: 3274, column: 59, scope: !15378)
!15508 = !DILocation(line: 3275, column: 6, scope: !15509)
!15509 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3275, column: 6)
!15510 = !DILocation(line: 3275, column: 16, scope: !15509)
!15511 = !DILocation(line: 3275, column: 36, scope: !15509)
!15512 = !DILocation(line: 3275, column: 40, scope: !15509)
!15513 = !DILocation(line: 3275, column: 47, scope: !15509)
!15514 = !DILocation(line: 3275, column: 6, scope: !15378)
!15515 = !DILocation(line: 3276, column: 3, scope: !15509)
!15516 = !DILocation(line: 3279, column: 18, scope: !15378)
!15517 = !DILocation(line: 3279, column: 11, scope: !15378)
!15518 = !DILocation(line: 3279, column: 9, scope: !15378)
!15519 = !DILocation(line: 3280, column: 6, scope: !15520)
!15520 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3280, column: 6)
!15521 = !DILocation(line: 3280, column: 15, scope: !15520)
!15522 = !DILocation(line: 3280, column: 6, scope: !15378)
!15523 = !DILocation(line: 3282, column: 10, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15520, file: !3, line: 3280, column: 26)
!15525 = !DILocation(line: 3283, column: 2, scope: !15524)
!15526 = !DILocation(line: 3284, column: 6, scope: !15527)
!15527 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3284, column: 6)
!15528 = !DILocation(line: 3284, column: 13, scope: !15527)
!15529 = !DILocation(line: 3284, column: 6, scope: !15378)
!15530 = !DILocation(line: 3285, column: 3, scope: !15527)
!15531 = !DILocation(line: 3288, column: 10, scope: !15378)
!15532 = !DILocation(line: 3288, column: 2, scope: !15378)
!15533 = !DILocation(line: 3296, column: 19, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3288, column: 15)
!15535 = !DILocation(line: 3296, column: 12, scope: !15534)
!15536 = !DILocation(line: 3296, column: 10, scope: !15534)
!15537 = !DILocation(line: 3296, column: 3, scope: !15534)
!15538 = !DILocation(line: 3304, column: 3, scope: !15534)
!15539 = !DILocation(line: 3307, column: 10, scope: !15534)
!15540 = !DILocation(line: 3308, column: 3, scope: !15534)
!15541 = !DILocation(line: 3309, column: 2, scope: !15534)
!15542 = !DILabel(scope: !15378, name: "error", file: !3, line: 3310)
!15543 = !DILocation(line: 3310, column: 1, scope: !15378)
!15544 = !DILocation(line: 3311, column: 6, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 3311, column: 6)
!15546 = !DILocation(line: 3311, column: 13, scope: !15545)
!15547 = !DILocation(line: 3311, column: 6, scope: !15378)
!15548 = !DILocation(line: 3312, column: 3, scope: !15545)
!15549 = !DILocation(line: 3313, column: 9, scope: !15378)
!15550 = !DILocation(line: 3313, column: 2, scope: !15378)
!15551 = distinct !DISubprogram(name: "dvbt_ctrl_set_sqi_speed", scope: !3, file: !3, line: 3398, type: !15552, scopeLine: 3400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!15552 = !DISubroutineType(types: !15553)
!15553 = !{!405, !4562, !15554}
!15554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!15555 = !DILocalVariable(name: "state", arg: 1, scope: !15551, file: !3, line: 3398, type: !4562)
!15556 = !DILocation(line: 3398, column: 55, scope: !15551)
!15557 = !DILocalVariable(name: "speed", arg: 2, scope: !15551, file: !3, line: 3399, type: !15554)
!15558 = !DILocation(line: 3399, column: 41, scope: !15551)
!15559 = !DILocalVariable(name: "status", scope: !15551, file: !3, line: 3401, type: !405)
!15560 = !DILocation(line: 3401, column: 6, scope: !15551)
!15561 = !DILocation(line: 3403, column: 2, scope: !15551)
!15562 = !DILocation(line: 3403, column: 2, scope: !15563)
!15563 = distinct !DILexicalBlock(scope: !15564, file: !3, line: 3403, column: 2)
!15564 = distinct !DILexicalBlock(scope: !15551, file: !3, line: 3403, column: 2)
!15565 = !DILocation(line: 3403, column: 2, scope: !15564)
!15566 = !DILocation(line: 3405, column: 11, scope: !15551)
!15567 = !DILocation(line: 3405, column: 10, scope: !15551)
!15568 = !DILocation(line: 3405, column: 2, scope: !15551)
!15569 = !DILocation(line: 3409, column: 3, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15551, file: !3, line: 3405, column: 18)
!15571 = !DILocation(line: 3411, column: 3, scope: !15570)
!15572 = !DILocation(line: 3413, column: 19, scope: !15551)
!15573 = !DILocation(line: 3414, column: 14, scope: !15551)
!15574 = !DILocation(line: 3414, column: 13, scope: !15551)
!15575 = !DILocation(line: 3414, column: 7, scope: !15551)
!15576 = !DILocation(line: 3413, column: 11, scope: !15551)
!15577 = !DILocation(line: 3413, column: 9, scope: !15551)
!15578 = !DILocation(line: 3413, column: 2, scope: !15551)
!15579 = !DILabel(scope: !15551, name: "error", file: !3, line: 3415)
!15580 = !DILocation(line: 3415, column: 1, scope: !15551)
!15581 = !DILocation(line: 3416, column: 6, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15551, file: !3, line: 3416, column: 6)
!15583 = !DILocation(line: 3416, column: 13, scope: !15582)
!15584 = !DILocation(line: 3416, column: 6, scope: !15551)
!15585 = !DILocation(line: 3417, column: 3, scope: !15582)
!15586 = !DILocation(line: 3418, column: 9, scope: !15551)
!15587 = !DILocation(line: 3418, column: 2, scope: !15551)
!15588 = distinct !DISubprogram(name: "drxk_get_stats", scope: !3, file: !3, line: 6494, type: !542, scopeLine: 6495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!15589 = !DILocalVariable(name: "fe", arg: 1, scope: !15588, file: !3, line: 6494, type: !495)
!15590 = !DILocation(line: 6494, column: 48, scope: !15588)
!15591 = !DILocalVariable(name: "c", scope: !15588, file: !3, line: 6496, type: !575)
!15592 = !DILocation(line: 6496, column: 34, scope: !15588)
!15593 = !DILocation(line: 6496, column: 39, scope: !15588)
!15594 = !DILocation(line: 6496, column: 43, scope: !15588)
!15595 = !DILocalVariable(name: "state", scope: !15588, file: !3, line: 6497, type: !4562)
!15596 = !DILocation(line: 6497, column: 21, scope: !15588)
!15597 = !DILocation(line: 6497, column: 29, scope: !15588)
!15598 = !DILocation(line: 6497, column: 33, scope: !15588)
!15599 = !DILocalVariable(name: "status", scope: !15588, file: !3, line: 6498, type: !405)
!15600 = !DILocation(line: 6498, column: 6, scope: !15588)
!15601 = !DILocalVariable(name: "stat", scope: !15588, file: !3, line: 6499, type: !411)
!15602 = !DILocation(line: 6499, column: 6, scope: !15588)
!15603 = !DILocalVariable(name: "reg16", scope: !15588, file: !3, line: 6500, type: !408)
!15604 = !DILocation(line: 6500, column: 6, scope: !15588)
!15605 = !DILocalVariable(name: "post_bit_count", scope: !15588, file: !3, line: 6501, type: !411)
!15606 = !DILocation(line: 6501, column: 6, scope: !15588)
!15607 = !DILocalVariable(name: "post_bit_err_count", scope: !15588, file: !3, line: 6502, type: !411)
!15608 = !DILocation(line: 6502, column: 6, scope: !15588)
!15609 = !DILocalVariable(name: "post_bit_error_scale", scope: !15588, file: !3, line: 6503, type: !411)
!15610 = !DILocation(line: 6503, column: 6, scope: !15588)
!15611 = !DILocalVariable(name: "pre_bit_err_count", scope: !15588, file: !3, line: 6504, type: !411)
!15612 = !DILocation(line: 6504, column: 6, scope: !15588)
!15613 = !DILocalVariable(name: "pre_bit_count", scope: !15588, file: !3, line: 6505, type: !411)
!15614 = !DILocation(line: 6505, column: 6, scope: !15588)
!15615 = !DILocalVariable(name: "pkt_count", scope: !15588, file: !3, line: 6506, type: !411)
!15616 = !DILocation(line: 6506, column: 6, scope: !15588)
!15617 = !DILocalVariable(name: "pkt_error_count", scope: !15588, file: !3, line: 6507, type: !411)
!15618 = !DILocation(line: 6507, column: 6, scope: !15588)
!15619 = !DILocalVariable(name: "cnr", scope: !15588, file: !3, line: 6508, type: !772)
!15620 = !DILocation(line: 6508, column: 6, scope: !15588)
!15621 = !DILocation(line: 6510, column: 6, scope: !15622)
!15622 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6510, column: 6)
!15623 = !DILocation(line: 6510, column: 13, scope: !15622)
!15624 = !DILocation(line: 6510, column: 26, scope: !15622)
!15625 = !DILocation(line: 6510, column: 6, scope: !15588)
!15626 = !DILocation(line: 6511, column: 3, scope: !15622)
!15627 = !DILocation(line: 6512, column: 6, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6512, column: 6)
!15629 = !DILocation(line: 6512, column: 13, scope: !15628)
!15630 = !DILocation(line: 6512, column: 26, scope: !15628)
!15631 = !DILocation(line: 6512, column: 6, scope: !15588)
!15632 = !DILocation(line: 6513, column: 3, scope: !15628)
!15633 = !DILocation(line: 6516, column: 2, scope: !15588)
!15634 = !DILocation(line: 6516, column: 9, scope: !15588)
!15635 = !DILocation(line: 6516, column: 19, scope: !15588)
!15636 = !DILocation(line: 6517, column: 18, scope: !15588)
!15637 = !DILocation(line: 6517, column: 2, scope: !15588)
!15638 = !DILocation(line: 6518, column: 6, scope: !15639)
!15639 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6518, column: 6)
!15640 = !DILocation(line: 6518, column: 11, scope: !15639)
!15641 = !DILocation(line: 6518, column: 6, scope: !15588)
!15642 = !DILocation(line: 6519, column: 3, scope: !15639)
!15643 = !DILocation(line: 6519, column: 10, scope: !15639)
!15644 = !DILocation(line: 6519, column: 20, scope: !15639)
!15645 = !DILocation(line: 6520, column: 6, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6520, column: 6)
!15647 = !DILocation(line: 6520, column: 11, scope: !15646)
!15648 = !DILocation(line: 6520, column: 6, scope: !15588)
!15649 = !DILocation(line: 6521, column: 3, scope: !15646)
!15650 = !DILocation(line: 6521, column: 10, scope: !15646)
!15651 = !DILocation(line: 6521, column: 20, scope: !15646)
!15652 = !DILocation(line: 6522, column: 6, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6522, column: 6)
!15654 = !DILocation(line: 6522, column: 11, scope: !15653)
!15655 = !DILocation(line: 6522, column: 6, scope: !15588)
!15656 = !DILocation(line: 6523, column: 3, scope: !15653)
!15657 = !DILocation(line: 6523, column: 10, scope: !15653)
!15658 = !DILocation(line: 6523, column: 20, scope: !15653)
!15659 = !DILocation(line: 6528, column: 15, scope: !15588)
!15660 = !DILocation(line: 6528, column: 23, scope: !15588)
!15661 = !DILocation(line: 6528, column: 26, scope: !15588)
!15662 = !DILocation(line: 6528, column: 35, scope: !15588)
!15663 = !DILocation(line: 6528, column: 43, scope: !15588)
!15664 = !DILocation(line: 6528, column: 2, scope: !15588)
!15665 = !DILocation(line: 6529, column: 2, scope: !15588)
!15666 = !DILocation(line: 6529, column: 5, scope: !15588)
!15667 = !DILocation(line: 6529, column: 14, scope: !15588)
!15668 = !DILocation(line: 6529, column: 22, scope: !15588)
!15669 = !DILocation(line: 6529, column: 28, scope: !15588)
!15670 = !DILocation(line: 6532, column: 6, scope: !15671)
!15671 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6532, column: 6)
!15672 = !DILocation(line: 6532, column: 11, scope: !15671)
!15673 = !DILocation(line: 6532, column: 6, scope: !15588)
!15674 = !DILocation(line: 6533, column: 23, scope: !15675)
!15675 = distinct !DILexicalBlock(scope: !15671, file: !3, line: 6532, column: 26)
!15676 = !DILocation(line: 6533, column: 3, scope: !15675)
!15677 = !DILocation(line: 6534, column: 27, scope: !15675)
!15678 = !DILocation(line: 6534, column: 31, scope: !15675)
!15679 = !DILocation(line: 6534, column: 3, scope: !15675)
!15680 = !DILocation(line: 6534, column: 6, scope: !15675)
!15681 = !DILocation(line: 6534, column: 10, scope: !15675)
!15682 = !DILocation(line: 6534, column: 18, scope: !15675)
!15683 = !DILocation(line: 6534, column: 25, scope: !15675)
!15684 = !DILocation(line: 6535, column: 3, scope: !15675)
!15685 = !DILocation(line: 6535, column: 6, scope: !15675)
!15686 = !DILocation(line: 6535, column: 10, scope: !15675)
!15687 = !DILocation(line: 6535, column: 18, scope: !15675)
!15688 = !DILocation(line: 6535, column: 24, scope: !15675)
!15689 = !DILocation(line: 6536, column: 2, scope: !15675)
!15690 = !DILocation(line: 6537, column: 3, scope: !15691)
!15691 = distinct !DILexicalBlock(scope: !15671, file: !3, line: 6536, column: 9)
!15692 = !DILocation(line: 6537, column: 6, scope: !15691)
!15693 = !DILocation(line: 6537, column: 10, scope: !15691)
!15694 = !DILocation(line: 6537, column: 18, scope: !15691)
!15695 = !DILocation(line: 6537, column: 24, scope: !15691)
!15696 = !DILocation(line: 6540, column: 6, scope: !15697)
!15697 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6540, column: 6)
!15698 = !DILocation(line: 6540, column: 11, scope: !15697)
!15699 = !DILocation(line: 6540, column: 6, scope: !15588)
!15700 = !DILocation(line: 6541, column: 3, scope: !15701)
!15701 = distinct !DILexicalBlock(scope: !15697, file: !3, line: 6540, column: 23)
!15702 = !DILocation(line: 6541, column: 6, scope: !15701)
!15703 = !DILocation(line: 6541, column: 18, scope: !15701)
!15704 = !DILocation(line: 6541, column: 26, scope: !15701)
!15705 = !DILocation(line: 6541, column: 32, scope: !15701)
!15706 = !DILocation(line: 6542, column: 3, scope: !15701)
!15707 = !DILocation(line: 6542, column: 6, scope: !15701)
!15708 = !DILocation(line: 6542, column: 18, scope: !15701)
!15709 = !DILocation(line: 6542, column: 26, scope: !15701)
!15710 = !DILocation(line: 6542, column: 32, scope: !15701)
!15711 = !DILocation(line: 6543, column: 3, scope: !15701)
!15712 = !DILocation(line: 6543, column: 6, scope: !15701)
!15713 = !DILocation(line: 6543, column: 20, scope: !15701)
!15714 = !DILocation(line: 6543, column: 28, scope: !15701)
!15715 = !DILocation(line: 6543, column: 34, scope: !15701)
!15716 = !DILocation(line: 6544, column: 3, scope: !15701)
!15717 = !DILocation(line: 6544, column: 6, scope: !15701)
!15718 = !DILocation(line: 6544, column: 20, scope: !15701)
!15719 = !DILocation(line: 6544, column: 28, scope: !15701)
!15720 = !DILocation(line: 6544, column: 34, scope: !15701)
!15721 = !DILocation(line: 6545, column: 3, scope: !15701)
!15722 = !DILocation(line: 6545, column: 6, scope: !15701)
!15723 = !DILocation(line: 6545, column: 21, scope: !15701)
!15724 = !DILocation(line: 6545, column: 29, scope: !15701)
!15725 = !DILocation(line: 6545, column: 35, scope: !15701)
!15726 = !DILocation(line: 6546, column: 3, scope: !15701)
!15727 = !DILocation(line: 6546, column: 6, scope: !15701)
!15728 = !DILocation(line: 6546, column: 21, scope: !15701)
!15729 = !DILocation(line: 6546, column: 29, scope: !15701)
!15730 = !DILocation(line: 6546, column: 35, scope: !15701)
!15731 = !DILocation(line: 6547, column: 3, scope: !15701)
!15732 = !DILocation(line: 6561, column: 18, scope: !15588)
!15733 = !DILocation(line: 6561, column: 11, scope: !15588)
!15734 = !DILocation(line: 6561, column: 9, scope: !15588)
!15735 = !DILocation(line: 6562, column: 6, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6562, column: 6)
!15737 = !DILocation(line: 6562, column: 13, scope: !15736)
!15738 = !DILocation(line: 6562, column: 6, scope: !15588)
!15739 = !DILocation(line: 6563, column: 3, scope: !15736)
!15740 = !DILocation(line: 6564, column: 22, scope: !15588)
!15741 = !DILocation(line: 6564, column: 20, scope: !15588)
!15742 = !DILocation(line: 6566, column: 18, scope: !15588)
!15743 = !DILocation(line: 6566, column: 11, scope: !15588)
!15744 = !DILocation(line: 6566, column: 9, scope: !15588)
!15745 = !DILocation(line: 6567, column: 6, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6567, column: 6)
!15747 = !DILocation(line: 6567, column: 13, scope: !15746)
!15748 = !DILocation(line: 6567, column: 6, scope: !15588)
!15749 = !DILocation(line: 6568, column: 3, scope: !15746)
!15750 = !DILocation(line: 6569, column: 18, scope: !15588)
!15751 = !DILocation(line: 6569, column: 16, scope: !15588)
!15752 = !DILocation(line: 6572, column: 18, scope: !15588)
!15753 = !DILocation(line: 6572, column: 11, scope: !15588)
!15754 = !DILocation(line: 6572, column: 9, scope: !15588)
!15755 = !DILocation(line: 6573, column: 6, scope: !15756)
!15756 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6573, column: 6)
!15757 = !DILocation(line: 6573, column: 13, scope: !15756)
!15758 = !DILocation(line: 6573, column: 6, scope: !15588)
!15759 = !DILocation(line: 6574, column: 3, scope: !15756)
!15760 = !DILocation(line: 6575, column: 23, scope: !15588)
!15761 = !DILocation(line: 6575, column: 21, scope: !15588)
!15762 = !DILocation(line: 6577, column: 18, scope: !15588)
!15763 = !DILocation(line: 6577, column: 11, scope: !15588)
!15764 = !DILocation(line: 6577, column: 9, scope: !15588)
!15765 = !DILocation(line: 6578, column: 6, scope: !15766)
!15766 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6578, column: 6)
!15767 = !DILocation(line: 6578, column: 13, scope: !15766)
!15768 = !DILocation(line: 6578, column: 6, scope: !15588)
!15769 = !DILocation(line: 6579, column: 3, scope: !15766)
!15770 = !DILocation(line: 6580, column: 25, scope: !15588)
!15771 = !DILocation(line: 6580, column: 23, scope: !15588)
!15772 = !DILocation(line: 6582, column: 18, scope: !15588)
!15773 = !DILocation(line: 6582, column: 11, scope: !15588)
!15774 = !DILocation(line: 6582, column: 9, scope: !15588)
!15775 = !DILocation(line: 6583, column: 6, scope: !15776)
!15776 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6583, column: 6)
!15777 = !DILocation(line: 6583, column: 13, scope: !15776)
!15778 = !DILocation(line: 6583, column: 6, scope: !15588)
!15779 = !DILocation(line: 6584, column: 3, scope: !15776)
!15780 = !DILocation(line: 6585, column: 14, scope: !15588)
!15781 = !DILocation(line: 6585, column: 12, scope: !15588)
!15782 = !DILocation(line: 6587, column: 18, scope: !15588)
!15783 = !DILocation(line: 6587, column: 11, scope: !15588)
!15784 = !DILocation(line: 6587, column: 9, scope: !15588)
!15785 = !DILocation(line: 6588, column: 6, scope: !15786)
!15786 = distinct !DILexicalBlock(scope: !15588, file: !3, line: 6588, column: 6)
!15787 = !DILocation(line: 6588, column: 13, scope: !15786)
!15788 = !DILocation(line: 6588, column: 6, scope: !15588)
!15789 = !DILocation(line: 6589, column: 3, scope: !15786)
!15790 = !DILocation(line: 6590, column: 20, scope: !15588)
!15791 = !DILocation(line: 6590, column: 18, scope: !15588)
!15792 = !DILocation(line: 6591, column: 10, scope: !15588)
!15793 = !DILocation(line: 6591, column: 2, scope: !15588)
!15794 = !DILocation(line: 6593, column: 24, scope: !15588)
!15795 = !DILocation(line: 6593, column: 21, scope: !15588)
!15796 = !DILocation(line: 6595, column: 19, scope: !15588)
!15797 = !DILocation(line: 6595, column: 29, scope: !15588)
!15798 = !DILocation(line: 6595, column: 35, scope: !15588)
!15799 = !DILocation(line: 6595, column: 17, scope: !15588)
!15800 = !DILocation(line: 6598, column: 2, scope: !15588)
!15801 = !DILocation(line: 6598, column: 5, scope: !15588)
!15802 = !DILocation(line: 6598, column: 17, scope: !15588)
!15803 = !DILocation(line: 6598, column: 25, scope: !15588)
!15804 = !DILocation(line: 6598, column: 31, scope: !15588)
!15805 = !DILocation(line: 6599, column: 35, scope: !15588)
!15806 = !DILocation(line: 6599, column: 2, scope: !15588)
!15807 = !DILocation(line: 6599, column: 5, scope: !15588)
!15808 = !DILocation(line: 6599, column: 17, scope: !15588)
!15809 = !DILocation(line: 6599, column: 25, scope: !15588)
!15810 = !DILocation(line: 6599, column: 32, scope: !15588)
!15811 = !DILocation(line: 6600, column: 2, scope: !15588)
!15812 = !DILocation(line: 6600, column: 5, scope: !15588)
!15813 = !DILocation(line: 6600, column: 17, scope: !15588)
!15814 = !DILocation(line: 6600, column: 25, scope: !15588)
!15815 = !DILocation(line: 6600, column: 31, scope: !15588)
!15816 = !DILocation(line: 6601, column: 35, scope: !15588)
!15817 = !DILocation(line: 6601, column: 2, scope: !15588)
!15818 = !DILocation(line: 6601, column: 5, scope: !15588)
!15819 = !DILocation(line: 6601, column: 17, scope: !15588)
!15820 = !DILocation(line: 6601, column: 25, scope: !15588)
!15821 = !DILocation(line: 6601, column: 32, scope: !15588)
!15822 = !DILocation(line: 6603, column: 2, scope: !15588)
!15823 = !DILocation(line: 6603, column: 5, scope: !15588)
!15824 = !DILocation(line: 6603, column: 19, scope: !15588)
!15825 = !DILocation(line: 6603, column: 27, scope: !15588)
!15826 = !DILocation(line: 6603, column: 33, scope: !15588)
!15827 = !DILocation(line: 6604, column: 37, scope: !15588)
!15828 = !DILocation(line: 6604, column: 2, scope: !15588)
!15829 = !DILocation(line: 6604, column: 5, scope: !15588)
!15830 = !DILocation(line: 6604, column: 19, scope: !15588)
!15831 = !DILocation(line: 6604, column: 27, scope: !15588)
!15832 = !DILocation(line: 6604, column: 34, scope: !15588)
!15833 = !DILocation(line: 6605, column: 2, scope: !15588)
!15834 = !DILocation(line: 6605, column: 5, scope: !15588)
!15835 = !DILocation(line: 6605, column: 19, scope: !15588)
!15836 = !DILocation(line: 6605, column: 27, scope: !15588)
!15837 = !DILocation(line: 6605, column: 33, scope: !15588)
!15838 = !DILocation(line: 6606, column: 37, scope: !15588)
!15839 = !DILocation(line: 6606, column: 2, scope: !15588)
!15840 = !DILocation(line: 6606, column: 5, scope: !15588)
!15841 = !DILocation(line: 6606, column: 19, scope: !15588)
!15842 = !DILocation(line: 6606, column: 27, scope: !15588)
!15843 = !DILocation(line: 6606, column: 34, scope: !15588)
!15844 = !DILocation(line: 6608, column: 2, scope: !15588)
!15845 = !DILocation(line: 6608, column: 5, scope: !15588)
!15846 = !DILocation(line: 6608, column: 20, scope: !15588)
!15847 = !DILocation(line: 6608, column: 28, scope: !15588)
!15848 = !DILocation(line: 6608, column: 34, scope: !15588)
!15849 = !DILocation(line: 6609, column: 38, scope: !15588)
!15850 = !DILocation(line: 6609, column: 2, scope: !15588)
!15851 = !DILocation(line: 6609, column: 5, scope: !15588)
!15852 = !DILocation(line: 6609, column: 20, scope: !15588)
!15853 = !DILocation(line: 6609, column: 28, scope: !15588)
!15854 = !DILocation(line: 6609, column: 35, scope: !15588)
!15855 = !DILocation(line: 6610, column: 2, scope: !15588)
!15856 = !DILocation(line: 6610, column: 5, scope: !15588)
!15857 = !DILocation(line: 6610, column: 20, scope: !15588)
!15858 = !DILocation(line: 6610, column: 28, scope: !15588)
!15859 = !DILocation(line: 6610, column: 34, scope: !15588)
!15860 = !DILocation(line: 6611, column: 38, scope: !15588)
!15861 = !DILocation(line: 6611, column: 2, scope: !15588)
!15862 = !DILocation(line: 6611, column: 5, scope: !15588)
!15863 = !DILocation(line: 6611, column: 20, scope: !15588)
!15864 = !DILocation(line: 6611, column: 28, scope: !15588)
!15865 = !DILocation(line: 6611, column: 35, scope: !15588)
!15866 = !DILabel(scope: !15588, name: "error", file: !3, line: 6613)
!15867 = !DILocation(line: 6613, column: 1, scope: !15588)
!15868 = !DILocation(line: 6614, column: 9, scope: !15588)
!15869 = !DILocation(line: 6614, column: 2, scope: !15588)
!15870 = !DILocation(line: 6615, column: 1, scope: !15588)
!15871 = distinct !DISubprogram(name: "get_lock_status", scope: !3, file: !3, line: 1863, type: !15872, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!15872 = !DISubroutineType(types: !15873)
!15873 = !{!405, !4562, !664}
!15874 = !DILocalVariable(name: "state", arg: 1, scope: !15871, file: !3, line: 1863, type: !4562)
!15875 = !DILocation(line: 1863, column: 47, scope: !15871)
!15876 = !DILocalVariable(name: "p_lock_status", arg: 2, scope: !15871, file: !3, line: 1863, type: !664)
!15877 = !DILocation(line: 1863, column: 59, scope: !15871)
!15878 = !DILocalVariable(name: "status", scope: !15871, file: !3, line: 1865, type: !405)
!15879 = !DILocation(line: 1865, column: 6, scope: !15871)
!15880 = !DILocation(line: 1867, column: 2, scope: !15871)
!15881 = !DILocation(line: 1867, column: 2, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15883, file: !3, line: 1867, column: 2)
!15883 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1867, column: 2)
!15884 = !DILocation(line: 1867, column: 2, scope: !15883)
!15885 = !DILocation(line: 1869, column: 6, scope: !15886)
!15886 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1869, column: 6)
!15887 = !DILocation(line: 1869, column: 20, scope: !15886)
!15888 = !DILocation(line: 1869, column: 6, scope: !15871)
!15889 = !DILocation(line: 1870, column: 3, scope: !15886)
!15890 = !DILocation(line: 1872, column: 3, scope: !15871)
!15891 = !DILocation(line: 1872, column: 17, scope: !15871)
!15892 = !DILocation(line: 1875, column: 10, scope: !15871)
!15893 = !DILocation(line: 1875, column: 17, scope: !15871)
!15894 = !DILocation(line: 1875, column: 2, scope: !15871)
!15895 = !DILocation(line: 1879, column: 32, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1875, column: 35)
!15897 = !DILocation(line: 1879, column: 39, scope: !15896)
!15898 = !DILocation(line: 1879, column: 12, scope: !15896)
!15899 = !DILocation(line: 1879, column: 10, scope: !15896)
!15900 = !DILocation(line: 1880, column: 3, scope: !15896)
!15901 = !DILocation(line: 1882, column: 33, scope: !15896)
!15902 = !DILocation(line: 1882, column: 40, scope: !15896)
!15903 = !DILocation(line: 1882, column: 12, scope: !15896)
!15904 = !DILocation(line: 1882, column: 10, scope: !15896)
!15905 = !DILocation(line: 1883, column: 3, scope: !15896)
!15906 = !DILocation(line: 1885, column: 3, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15908, file: !3, line: 1885, column: 3)
!15908 = distinct !DILexicalBlock(scope: !15896, file: !3, line: 1885, column: 3)
!15909 = !DILocation(line: 1885, column: 3, scope: !15908)
!15910 = !DILocation(line: 1887, column: 3, scope: !15896)
!15911 = !DILocation(line: 1888, column: 2, scope: !15896)
!15912 = !DILabel(scope: !15871, name: "error", file: !3, line: 1889)
!15913 = !DILocation(line: 1889, column: 1, scope: !15871)
!15914 = !DILocation(line: 1890, column: 6, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 1890, column: 6)
!15916 = !DILocation(line: 1890, column: 13, scope: !15915)
!15917 = !DILocation(line: 1890, column: 6, scope: !15871)
!15918 = !DILocation(line: 1891, column: 3, scope: !15915)
!15919 = !DILocation(line: 1892, column: 9, scope: !15871)
!15920 = !DILocation(line: 1892, column: 2, scope: !15871)
!15921 = !DILocation(line: 1893, column: 1, scope: !15871)
!15922 = distinct !DISubprogram(name: "get_strength", scope: !3, file: !3, line: 6393, type: !15923, scopeLine: 6394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!15923 = !DISubroutineType(types: !15924)
!15924 = !{!405, !4562, !4282}
!15925 = !DILocalVariable(name: "state", arg: 1, scope: !15922, file: !3, line: 6393, type: !4562)
!15926 = !DILocation(line: 6393, column: 44, scope: !15922)
!15927 = !DILocalVariable(name: "strength", arg: 2, scope: !15922, file: !3, line: 6393, type: !4282)
!15928 = !DILocation(line: 6393, column: 56, scope: !15922)
!15929 = !DILocalVariable(name: "status", scope: !15922, file: !3, line: 6395, type: !405)
!15930 = !DILocation(line: 6395, column: 6, scope: !15922)
!15931 = !DILocalVariable(name: "rf_agc", scope: !15922, file: !3, line: 6396, type: !4598)
!15932 = !DILocation(line: 6396, column: 21, scope: !15922)
!15933 = !DILocalVariable(name: "if_agc", scope: !15922, file: !3, line: 6396, type: !4598)
!15934 = !DILocation(line: 6396, column: 29, scope: !15922)
!15935 = !DILocalVariable(name: "total_gain", scope: !15922, file: !3, line: 6397, type: !411)
!15936 = !DILocation(line: 6397, column: 15, scope: !15922)
!15937 = !DILocalVariable(name: "atten", scope: !15922, file: !3, line: 6398, type: !411)
!15938 = !DILocation(line: 6398, column: 15, scope: !15922)
!15939 = !DILocalVariable(name: "agc_range", scope: !15922, file: !3, line: 6399, type: !411)
!15940 = !DILocation(line: 6399, column: 15, scope: !15922)
!15941 = !DILocalVariable(name: "scu_lvl", scope: !15922, file: !3, line: 6400, type: !408)
!15942 = !DILocation(line: 6400, column: 17, scope: !15922)
!15943 = !DILocalVariable(name: "scu_coc", scope: !15922, file: !3, line: 6401, type: !408)
!15944 = !DILocation(line: 6401, column: 17, scope: !15922)
!15945 = !DILocalVariable(name: "tuner_rf_gain", scope: !15922, file: !3, line: 6403, type: !408)
!15946 = !DILocation(line: 6403, column: 6, scope: !15922)
!15947 = !DILocalVariable(name: "tuner_if_gain", scope: !15922, file: !3, line: 6404, type: !408)
!15948 = !DILocation(line: 6404, column: 6, scope: !15922)
!15949 = !DILocation(line: 6406, column: 3, scope: !15922)
!15950 = !DILocation(line: 6406, column: 12, scope: !15922)
!15951 = !DILocation(line: 6408, column: 14, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 6408, column: 6)
!15953 = !DILocation(line: 6408, column: 6, scope: !15952)
!15954 = !DILocation(line: 6408, column: 6, scope: !15922)
!15955 = !DILocation(line: 6409, column: 12, scope: !15956)
!15956 = distinct !DILexicalBlock(scope: !15952, file: !3, line: 6408, column: 22)
!15957 = !DILocation(line: 6409, column: 19, scope: !15956)
!15958 = !DILocation(line: 6410, column: 12, scope: !15956)
!15959 = !DILocation(line: 6410, column: 19, scope: !15956)
!15960 = !DILocation(line: 6411, column: 2, scope: !15956)
!15961 = !DILocation(line: 6411, column: 20, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15952, file: !3, line: 6411, column: 13)
!15963 = !DILocation(line: 6411, column: 13, scope: !15962)
!15964 = !DILocation(line: 6411, column: 13, scope: !15952)
!15965 = !DILocation(line: 6412, column: 12, scope: !15966)
!15966 = distinct !DILexicalBlock(scope: !15962, file: !3, line: 6411, column: 28)
!15967 = !DILocation(line: 6412, column: 19, scope: !15966)
!15968 = !DILocation(line: 6413, column: 12, scope: !15966)
!15969 = !DILocation(line: 6413, column: 19, scope: !15966)
!15970 = !DILocation(line: 6414, column: 2, scope: !15966)
!15971 = !DILocation(line: 6415, column: 12, scope: !15972)
!15972 = distinct !DILexicalBlock(scope: !15962, file: !3, line: 6414, column: 9)
!15973 = !DILocation(line: 6415, column: 19, scope: !15972)
!15974 = !DILocation(line: 6416, column: 12, scope: !15972)
!15975 = !DILocation(line: 6416, column: 19, scope: !15972)
!15976 = !DILocation(line: 6419, column: 13, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 6419, column: 6)
!15978 = !DILocation(line: 6419, column: 23, scope: !15977)
!15979 = !DILocation(line: 6419, column: 6, scope: !15922)
!15980 = !DILocation(line: 6421, column: 19, scope: !15981)
!15981 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 6419, column: 46)
!15982 = !DILocation(line: 6421, column: 12, scope: !15981)
!15983 = !DILocation(line: 6421, column: 10, scope: !15981)
!15984 = !DILocation(line: 6422, column: 7, scope: !15985)
!15985 = distinct !DILexicalBlock(scope: !15981, file: !3, line: 6422, column: 7)
!15986 = !DILocation(line: 6422, column: 14, scope: !15985)
!15987 = !DILocation(line: 6422, column: 7, scope: !15981)
!15988 = !DILocation(line: 6423, column: 11, scope: !15985)
!15989 = !DILocation(line: 6423, column: 4, scope: !15985)
!15990 = !DILocation(line: 6426, column: 19, scope: !15981)
!15991 = !DILocation(line: 6426, column: 12, scope: !15981)
!15992 = !DILocation(line: 6426, column: 10, scope: !15981)
!15993 = !DILocation(line: 6427, column: 7, scope: !15994)
!15994 = distinct !DILexicalBlock(scope: !15981, file: !3, line: 6427, column: 7)
!15995 = !DILocation(line: 6427, column: 14, scope: !15994)
!15996 = !DILocation(line: 6427, column: 7, scope: !15981)
!15997 = !DILocation(line: 6428, column: 11, scope: !15994)
!15998 = !DILocation(line: 6428, column: 4, scope: !15994)
!15999 = !DILocation(line: 6430, column: 14, scope: !16000)
!16000 = distinct !DILexicalBlock(scope: !15981, file: !3, line: 6430, column: 7)
!16001 = !DILocation(line: 6430, column: 8, scope: !16000)
!16002 = !DILocation(line: 6430, column: 30, scope: !16000)
!16003 = !DILocation(line: 6430, column: 24, scope: !16000)
!16004 = !DILocation(line: 6430, column: 22, scope: !16000)
!16005 = !DILocation(line: 6430, column: 39, scope: !16000)
!16006 = !DILocation(line: 6430, column: 7, scope: !15981)
!16007 = !DILocation(line: 6431, column: 26, scope: !16000)
!16008 = !DILocation(line: 6431, column: 36, scope: !16000)
!16009 = !DILocation(line: 6431, column: 34, scope: !16000)
!16010 = !DILocation(line: 6431, column: 11, scope: !16000)
!16011 = !DILocation(line: 6431, column: 24, scope: !16000)
!16012 = !DILocation(line: 6431, column: 4, scope: !16000)
!16013 = !DILocation(line: 6433, column: 11, scope: !16000)
!16014 = !DILocation(line: 6433, column: 24, scope: !16000)
!16015 = !DILocation(line: 6436, column: 17, scope: !15981)
!16016 = !DILocation(line: 6436, column: 14, scope: !15981)
!16017 = !DILocation(line: 6439, column: 14, scope: !16018)
!16018 = distinct !DILexicalBlock(scope: !15981, file: !3, line: 6439, column: 7)
!16019 = !DILocation(line: 6439, column: 7, scope: !16018)
!16020 = !DILocation(line: 6439, column: 36, scope: !16018)
!16021 = !DILocation(line: 6439, column: 29, scope: !16018)
!16022 = !DILocation(line: 6439, column: 27, scope: !16018)
!16023 = !DILocation(line: 6439, column: 7, scope: !15981)
!16024 = !DILocation(line: 6440, column: 33, scope: !16018)
!16025 = !DILocation(line: 6440, column: 11, scope: !16018)
!16026 = !DILocation(line: 6440, column: 24, scope: !16018)
!16027 = !DILocation(line: 6440, column: 4, scope: !16018)
!16028 = !DILocation(line: 6441, column: 14, scope: !16029)
!16029 = distinct !DILexicalBlock(scope: !15981, file: !3, line: 6441, column: 7)
!16030 = !DILocation(line: 6441, column: 7, scope: !16029)
!16031 = !DILocation(line: 6441, column: 36, scope: !16029)
!16032 = !DILocation(line: 6441, column: 29, scope: !16029)
!16033 = !DILocation(line: 6441, column: 27, scope: !16029)
!16034 = !DILocation(line: 6441, column: 7, scope: !15981)
!16035 = !DILocation(line: 6442, column: 33, scope: !16029)
!16036 = !DILocation(line: 6442, column: 11, scope: !16029)
!16037 = !DILocation(line: 6442, column: 24, scope: !16029)
!16038 = !DILocation(line: 6442, column: 4, scope: !16029)
!16039 = !DILocation(line: 6444, column: 29, scope: !15981)
!16040 = !DILocation(line: 6444, column: 22, scope: !15981)
!16041 = !DILocation(line: 6444, column: 55, scope: !15981)
!16042 = !DILocation(line: 6444, column: 48, scope: !15981)
!16043 = !DILocation(line: 6444, column: 46, scope: !15981)
!16044 = !DILocation(line: 6444, column: 13, scope: !15981)
!16045 = !DILocation(line: 6445, column: 7, scope: !16046)
!16046 = distinct !DILexicalBlock(scope: !15981, file: !3, line: 6445, column: 7)
!16047 = !DILocation(line: 6445, column: 17, scope: !16046)
!16048 = !DILocation(line: 6445, column: 7, scope: !15981)
!16049 = !DILocation(line: 6447, column: 12, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16046, file: !3, line: 6445, column: 22)
!16051 = !DILocation(line: 6447, column: 6, scope: !16050)
!16052 = !DILocation(line: 6447, column: 5, scope: !16050)
!16053 = !DILocation(line: 6446, column: 19, scope: !16050)
!16054 = !DILocation(line: 6448, column: 19, scope: !16050)
!16055 = !DILocation(line: 6448, column: 12, scope: !16050)
!16056 = !DILocation(line: 6448, column: 41, scope: !16050)
!16057 = !DILocation(line: 6448, column: 34, scope: !16050)
!16058 = !DILocation(line: 6448, column: 32, scope: !16050)
!16059 = !DILocation(line: 6448, column: 5, scope: !16050)
!16060 = !DILocation(line: 6447, column: 28, scope: !16050)
!16061 = !DILocation(line: 6449, column: 7, scope: !16050)
!16062 = !DILocation(line: 6449, column: 5, scope: !16050)
!16063 = !DILocation(line: 6446, column: 10, scope: !16050)
!16064 = !DILocation(line: 6450, column: 3, scope: !16050)
!16065 = !DILocation(line: 6451, column: 2, scope: !15981)
!16066 = !DILocation(line: 6453, column: 13, scope: !16067)
!16067 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 6453, column: 6)
!16068 = !DILocation(line: 6453, column: 23, scope: !16067)
!16069 = !DILocation(line: 6453, column: 6, scope: !15922)
!16070 = !DILocation(line: 6454, column: 19, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16067, file: !3, line: 6453, column: 46)
!16072 = !DILocation(line: 6455, column: 13, scope: !16071)
!16073 = !DILocation(line: 6454, column: 12, scope: !16071)
!16074 = !DILocation(line: 6454, column: 10, scope: !16071)
!16075 = !DILocation(line: 6456, column: 7, scope: !16076)
!16076 = distinct !DILexicalBlock(scope: !16071, file: !3, line: 6456, column: 7)
!16077 = !DILocation(line: 6456, column: 14, scope: !16076)
!16078 = !DILocation(line: 6456, column: 7, scope: !16071)
!16079 = !DILocation(line: 6457, column: 11, scope: !16076)
!16080 = !DILocation(line: 6457, column: 4, scope: !16076)
!16081 = !DILocation(line: 6459, column: 19, scope: !16071)
!16082 = !DILocation(line: 6460, column: 13, scope: !16071)
!16083 = !DILocation(line: 6459, column: 12, scope: !16071)
!16084 = !DILocation(line: 6459, column: 10, scope: !16071)
!16085 = !DILocation(line: 6461, column: 7, scope: !16086)
!16086 = distinct !DILexicalBlock(scope: !16071, file: !3, line: 6461, column: 7)
!16087 = !DILocation(line: 6461, column: 14, scope: !16086)
!16088 = !DILocation(line: 6461, column: 7, scope: !16071)
!16089 = !DILocation(line: 6462, column: 11, scope: !16086)
!16090 = !DILocation(line: 6462, column: 4, scope: !16086)
!16091 = !DILocation(line: 6465, column: 23, scope: !16071)
!16092 = !DILocation(line: 6465, column: 17, scope: !16071)
!16093 = !DILocation(line: 6465, column: 14, scope: !16071)
!16094 = !DILocation(line: 6468, column: 14, scope: !16095)
!16095 = distinct !DILexicalBlock(scope: !16071, file: !3, line: 6468, column: 7)
!16096 = !DILocation(line: 6468, column: 7, scope: !16095)
!16097 = !DILocation(line: 6468, column: 36, scope: !16095)
!16098 = !DILocation(line: 6468, column: 29, scope: !16095)
!16099 = !DILocation(line: 6468, column: 27, scope: !16095)
!16100 = !DILocation(line: 6468, column: 7, scope: !16071)
!16101 = !DILocation(line: 6469, column: 33, scope: !16095)
!16102 = !DILocation(line: 6469, column: 11, scope: !16095)
!16103 = !DILocation(line: 6469, column: 24, scope: !16095)
!16104 = !DILocation(line: 6469, column: 4, scope: !16095)
!16105 = !DILocation(line: 6470, column: 14, scope: !16106)
!16106 = distinct !DILexicalBlock(scope: !16071, file: !3, line: 6470, column: 7)
!16107 = !DILocation(line: 6470, column: 7, scope: !16106)
!16108 = !DILocation(line: 6470, column: 36, scope: !16106)
!16109 = !DILocation(line: 6470, column: 29, scope: !16106)
!16110 = !DILocation(line: 6470, column: 27, scope: !16106)
!16111 = !DILocation(line: 6470, column: 7, scope: !16071)
!16112 = !DILocation(line: 6471, column: 33, scope: !16106)
!16113 = !DILocation(line: 6471, column: 11, scope: !16106)
!16114 = !DILocation(line: 6471, column: 24, scope: !16106)
!16115 = !DILocation(line: 6471, column: 4, scope: !16106)
!16116 = !DILocation(line: 6473, column: 29, scope: !16071)
!16117 = !DILocation(line: 6473, column: 22, scope: !16071)
!16118 = !DILocation(line: 6473, column: 55, scope: !16071)
!16119 = !DILocation(line: 6473, column: 48, scope: !16071)
!16120 = !DILocation(line: 6473, column: 46, scope: !16071)
!16121 = !DILocation(line: 6473, column: 14, scope: !16071)
!16122 = !DILocation(line: 6474, column: 7, scope: !16123)
!16123 = distinct !DILexicalBlock(scope: !16071, file: !3, line: 6474, column: 7)
!16124 = !DILocation(line: 6474, column: 17, scope: !16123)
!16125 = !DILocation(line: 6474, column: 7, scope: !16071)
!16126 = !DILocation(line: 6476, column: 12, scope: !16127)
!16127 = distinct !DILexicalBlock(scope: !16123, file: !3, line: 6474, column: 22)
!16128 = !DILocation(line: 6476, column: 6, scope: !16127)
!16129 = !DILocation(line: 6476, column: 5, scope: !16127)
!16130 = !DILocation(line: 6475, column: 19, scope: !16127)
!16131 = !DILocation(line: 6477, column: 19, scope: !16127)
!16132 = !DILocation(line: 6477, column: 12, scope: !16127)
!16133 = !DILocation(line: 6477, column: 41, scope: !16127)
!16134 = !DILocation(line: 6477, column: 34, scope: !16127)
!16135 = !DILocation(line: 6477, column: 32, scope: !16127)
!16136 = !DILocation(line: 6477, column: 5, scope: !16127)
!16137 = !DILocation(line: 6476, column: 28, scope: !16127)
!16138 = !DILocation(line: 6478, column: 7, scope: !16127)
!16139 = !DILocation(line: 6478, column: 5, scope: !16127)
!16140 = !DILocation(line: 6475, column: 10, scope: !16127)
!16141 = !DILocation(line: 6479, column: 3, scope: !16127)
!16142 = !DILocation(line: 6480, column: 2, scope: !16071)
!16143 = !DILocation(line: 6486, column: 6, scope: !16144)
!16144 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 6486, column: 6)
!16145 = !DILocation(line: 6486, column: 17, scope: !16144)
!16146 = !DILocation(line: 6486, column: 6, scope: !15922)
!16147 = !DILocation(line: 6487, column: 26, scope: !16144)
!16148 = !DILocation(line: 6487, column: 24, scope: !16144)
!16149 = !DILocation(line: 6487, column: 34, scope: !16144)
!16150 = !DILocation(line: 6487, column: 32, scope: !16144)
!16151 = !DILocation(line: 6487, column: 45, scope: !16144)
!16152 = !DILocation(line: 6487, column: 4, scope: !16144)
!16153 = !DILocation(line: 6487, column: 13, scope: !16144)
!16154 = !DILocation(line: 6487, column: 3, scope: !16144)
!16155 = !DILocation(line: 6489, column: 4, scope: !16144)
!16156 = !DILocation(line: 6489, column: 13, scope: !16144)
!16157 = !DILocation(line: 6491, column: 2, scope: !15922)
!16158 = !DILocation(line: 6492, column: 1, scope: !15922)
!16159 = distinct !DISubprogram(name: "get_signal_to_noise", scope: !3, file: !3, line: 2569, type: !16160, scopeLine: 2570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!16160 = !DISubroutineType(types: !16161)
!16161 = !{!405, !4562, !771}
!16162 = !DILocalVariable(name: "state", arg: 1, scope: !16159, file: !3, line: 2569, type: !4562)
!16163 = !DILocation(line: 2569, column: 51, scope: !16159)
!16164 = !DILocalVariable(name: "p_signal_to_noise", arg: 2, scope: !16159, file: !3, line: 2569, type: !771)
!16165 = !DILocation(line: 2569, column: 63, scope: !16159)
!16166 = !DILocation(line: 2571, column: 2, scope: !16159)
!16167 = !DILocation(line: 2571, column: 2, scope: !16168)
!16168 = distinct !DILexicalBlock(scope: !16169, file: !3, line: 2571, column: 2)
!16169 = distinct !DILexicalBlock(scope: !16159, file: !3, line: 2571, column: 2)
!16170 = !DILocation(line: 2571, column: 2, scope: !16169)
!16171 = !DILocation(line: 2573, column: 3, scope: !16159)
!16172 = !DILocation(line: 2573, column: 21, scope: !16159)
!16173 = !DILocation(line: 2574, column: 10, scope: !16159)
!16174 = !DILocation(line: 2574, column: 17, scope: !16159)
!16175 = !DILocation(line: 2574, column: 2, scope: !16159)
!16176 = !DILocation(line: 2576, column: 35, scope: !16177)
!16177 = distinct !DILexicalBlock(scope: !16159, file: !3, line: 2574, column: 35)
!16178 = !DILocation(line: 2576, column: 42, scope: !16177)
!16179 = !DILocation(line: 2576, column: 10, scope: !16177)
!16180 = !DILocation(line: 2576, column: 3, scope: !16177)
!16181 = !DILocation(line: 2579, column: 34, scope: !16177)
!16182 = !DILocation(line: 2579, column: 41, scope: !16177)
!16183 = !DILocation(line: 2579, column: 10, scope: !16177)
!16184 = !DILocation(line: 2579, column: 3, scope: !16177)
!16185 = !DILocation(line: 2581, column: 3, scope: !16177)
!16186 = !DILocation(line: 2583, column: 2, scope: !16159)
!16187 = !DILocation(line: 2584, column: 1, scope: !16159)
!16188 = distinct !DISubprogram(name: "get_qam_lock_status", scope: !3, file: !3, line: 5323, type: !15872, scopeLine: 5324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!16189 = !DILocalVariable(name: "state", arg: 1, scope: !16188, file: !3, line: 5323, type: !4562)
!16190 = !DILocation(line: 5323, column: 51, scope: !16188)
!16191 = !DILocalVariable(name: "p_lock_status", arg: 2, scope: !16188, file: !3, line: 5323, type: !664)
!16192 = !DILocation(line: 5323, column: 63, scope: !16188)
!16193 = !DILocalVariable(name: "status", scope: !16188, file: !3, line: 5325, type: !405)
!16194 = !DILocation(line: 5325, column: 6, scope: !16188)
!16195 = !DILocalVariable(name: "result", scope: !16188, file: !3, line: 5326, type: !16196)
!16196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !408, size: 32, elements: !2053)
!16197 = !DILocation(line: 5326, column: 6, scope: !16188)
!16198 = !DILocation(line: 5328, column: 2, scope: !16188)
!16199 = !DILocation(line: 5328, column: 2, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16201, file: !3, line: 5328, column: 2)
!16201 = distinct !DILexicalBlock(scope: !16188, file: !3, line: 5328, column: 2)
!16202 = !DILocation(line: 5328, column: 2, scope: !16201)
!16203 = !DILocation(line: 5329, column: 3, scope: !16188)
!16204 = !DILocation(line: 5329, column: 17, scope: !16188)
!16205 = !DILocation(line: 5330, column: 23, scope: !16188)
!16206 = !DILocation(line: 5333, column: 4, scope: !16188)
!16207 = !DILocation(line: 5330, column: 11, scope: !16188)
!16208 = !DILocation(line: 5330, column: 9, scope: !16188)
!16209 = !DILocation(line: 5334, column: 6, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16188, file: !3, line: 5334, column: 6)
!16211 = !DILocation(line: 5334, column: 13, scope: !16210)
!16212 = !DILocation(line: 5334, column: 6, scope: !16188)
!16213 = !DILocation(line: 5335, column: 3, scope: !16210)
!16214 = !DILocation(line: 5337, column: 6, scope: !16215)
!16215 = distinct !DILexicalBlock(scope: !16188, file: !3, line: 5337, column: 6)
!16216 = !DILocation(line: 5337, column: 16, scope: !16215)
!16217 = !DILocation(line: 5337, column: 6, scope: !16188)
!16218 = !DILocation(line: 5339, column: 2, scope: !16219)
!16219 = distinct !DILexicalBlock(scope: !16215, file: !3, line: 5337, column: 58)
!16220 = !DILocation(line: 5339, column: 13, scope: !16221)
!16221 = distinct !DILexicalBlock(scope: !16215, file: !3, line: 5339, column: 13)
!16222 = !DILocation(line: 5339, column: 23, scope: !16221)
!16223 = !DILocation(line: 5339, column: 13, scope: !16215)
!16224 = !DILocation(line: 5341, column: 4, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !16221, file: !3, line: 5339, column: 59)
!16226 = !DILocation(line: 5341, column: 18, scope: !16225)
!16227 = !DILocation(line: 5342, column: 2, scope: !16225)
!16228 = !DILocation(line: 5342, column: 13, scope: !16229)
!16229 = distinct !DILexicalBlock(scope: !16221, file: !3, line: 5342, column: 13)
!16230 = !DILocation(line: 5342, column: 23, scope: !16229)
!16231 = !DILocation(line: 5342, column: 13, scope: !16221)
!16232 = !DILocation(line: 5344, column: 4, scope: !16233)
!16233 = distinct !DILexicalBlock(scope: !16229, file: !3, line: 5342, column: 63)
!16234 = !DILocation(line: 5344, column: 18, scope: !16233)
!16235 = !DILocation(line: 5345, column: 2, scope: !16233)
!16236 = !DILocation(line: 5352, column: 4, scope: !16237)
!16237 = distinct !DILexicalBlock(scope: !16229, file: !3, line: 5345, column: 9)
!16238 = !DILocation(line: 5352, column: 18, scope: !16237)
!16239 = !DILocation(line: 5354, column: 9, scope: !16188)
!16240 = !DILocation(line: 5354, column: 2, scope: !16188)
!16241 = distinct !DISubprogram(name: "get_dvbt_lock_status", scope: !3, file: !3, line: 4068, type: !15872, scopeLine: 4069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!16242 = !DILocalVariable(name: "state", arg: 1, scope: !16241, file: !3, line: 4068, type: !4562)
!16243 = !DILocation(line: 4068, column: 52, scope: !16241)
!16244 = !DILocalVariable(name: "p_lock_status", arg: 2, scope: !16241, file: !3, line: 4068, type: !664)
!16245 = !DILocation(line: 4068, column: 64, scope: !16241)
!16246 = !DILocalVariable(name: "status", scope: !16241, file: !3, line: 4070, type: !405)
!16247 = !DILocation(line: 4070, column: 6, scope: !16241)
!16248 = !DILocalVariable(name: "mpeg_lock_mask", scope: !16241, file: !3, line: 4071, type: !449)
!16249 = !DILocation(line: 4071, column: 12, scope: !16241)
!16250 = !DILocalVariable(name: "fec_lock_mask", scope: !16241, file: !3, line: 4073, type: !449)
!16251 = !DILocation(line: 4073, column: 12, scope: !16241)
!16252 = !DILocalVariable(name: "demod_lock_mask", scope: !16241, file: !3, line: 4074, type: !449)
!16253 = !DILocation(line: 4074, column: 12, scope: !16241)
!16254 = !DILocalVariable(name: "sc_ra_ram_lock", scope: !16241, file: !3, line: 4076, type: !408)
!16255 = !DILocation(line: 4076, column: 6, scope: !16241)
!16256 = !DILocalVariable(name: "sc_comm_exec", scope: !16241, file: !3, line: 4077, type: !408)
!16257 = !DILocation(line: 4077, column: 6, scope: !16241)
!16258 = !DILocation(line: 4079, column: 2, scope: !16241)
!16259 = !DILocation(line: 4079, column: 2, scope: !16260)
!16260 = distinct !DILexicalBlock(scope: !16261, file: !3, line: 4079, column: 2)
!16261 = distinct !DILexicalBlock(scope: !16241, file: !3, line: 4079, column: 2)
!16262 = !DILocation(line: 4079, column: 2, scope: !16261)
!16263 = !DILocation(line: 4081, column: 3, scope: !16241)
!16264 = !DILocation(line: 4081, column: 17, scope: !16241)
!16265 = !DILocation(line: 4084, column: 18, scope: !16241)
!16266 = !DILocation(line: 4084, column: 11, scope: !16241)
!16267 = !DILocation(line: 4084, column: 9, scope: !16241)
!16268 = !DILocation(line: 4085, column: 6, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16241, file: !3, line: 4085, column: 6)
!16270 = !DILocation(line: 4085, column: 13, scope: !16269)
!16271 = !DILocation(line: 4085, column: 6, scope: !16241)
!16272 = !DILocation(line: 4086, column: 3, scope: !16269)
!16273 = !DILocation(line: 4087, column: 6, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16241, file: !3, line: 4087, column: 6)
!16275 = !DILocation(line: 4087, column: 19, scope: !16274)
!16276 = !DILocation(line: 4087, column: 6, scope: !16241)
!16277 = !DILocation(line: 4088, column: 3, scope: !16274)
!16278 = !DILocation(line: 4090, column: 18, scope: !16241)
!16279 = !DILocation(line: 4090, column: 11, scope: !16241)
!16280 = !DILocation(line: 4090, column: 9, scope: !16241)
!16281 = !DILocation(line: 4091, column: 6, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16241, file: !3, line: 4091, column: 6)
!16283 = !DILocation(line: 4091, column: 13, scope: !16282)
!16284 = !DILocation(line: 4091, column: 6, scope: !16241)
!16285 = !DILocation(line: 4092, column: 3, scope: !16282)
!16286 = !DILocation(line: 4094, column: 7, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16241, file: !3, line: 4094, column: 6)
!16288 = !DILocation(line: 4094, column: 22, scope: !16287)
!16289 = !DILocation(line: 4094, column: 40, scope: !16287)
!16290 = !DILocation(line: 4094, column: 6, scope: !16241)
!16291 = !DILocation(line: 4095, column: 4, scope: !16287)
!16292 = !DILocation(line: 4095, column: 18, scope: !16287)
!16293 = !DILocation(line: 4095, column: 3, scope: !16287)
!16294 = !DILocation(line: 4096, column: 12, scope: !16295)
!16295 = distinct !DILexicalBlock(scope: !16287, file: !3, line: 4096, column: 11)
!16296 = !DILocation(line: 4096, column: 27, scope: !16295)
!16297 = !DILocation(line: 4096, column: 44, scope: !16295)
!16298 = !DILocation(line: 4096, column: 11, scope: !16287)
!16299 = !DILocation(line: 4097, column: 4, scope: !16295)
!16300 = !DILocation(line: 4097, column: 18, scope: !16295)
!16301 = !DILocation(line: 4097, column: 3, scope: !16295)
!16302 = !DILocation(line: 4098, column: 12, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16295, file: !3, line: 4098, column: 11)
!16304 = !DILocation(line: 4098, column: 27, scope: !16303)
!16305 = !DILocation(line: 4098, column: 46, scope: !16303)
!16306 = !DILocation(line: 4098, column: 11, scope: !16295)
!16307 = !DILocation(line: 4099, column: 4, scope: !16303)
!16308 = !DILocation(line: 4099, column: 18, scope: !16303)
!16309 = !DILocation(line: 4099, column: 3, scope: !16303)
!16310 = !DILocation(line: 4100, column: 11, scope: !16311)
!16311 = distinct !DILexicalBlock(scope: !16303, file: !3, line: 4100, column: 11)
!16312 = !DILocation(line: 4100, column: 26, scope: !16311)
!16313 = !DILocation(line: 4100, column: 11, scope: !16303)
!16314 = !DILocation(line: 4101, column: 4, scope: !16311)
!16315 = !DILocation(line: 4101, column: 18, scope: !16311)
!16316 = !DILocation(line: 4101, column: 3, scope: !16311)
!16317 = !DILocation(line: 4094, column: 43, scope: !16287)
!16318 = !DILabel(scope: !16241, name: "end", file: !3, line: 4102)
!16319 = !DILocation(line: 4102, column: 1, scope: !16241)
!16320 = !DILocation(line: 4103, column: 6, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16241, file: !3, line: 4103, column: 6)
!16322 = !DILocation(line: 4103, column: 13, scope: !16321)
!16323 = !DILocation(line: 4103, column: 6, scope: !16241)
!16324 = !DILocation(line: 4104, column: 3, scope: !16321)
!16325 = !DILocation(line: 4106, column: 9, scope: !16241)
!16326 = !DILocation(line: 4106, column: 2, scope: !16241)
!16327 = distinct !DISubprogram(name: "get_dvbt_signal_to_noise", scope: !3, file: !3, line: 2465, type: !16160, scopeLine: 2467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!16328 = !DILocalVariable(name: "state", arg: 1, scope: !16327, file: !3, line: 2465, type: !4562)
!16329 = !DILocation(line: 2465, column: 56, scope: !16327)
!16330 = !DILocalVariable(name: "p_signal_to_noise", arg: 2, scope: !16327, file: !3, line: 2466, type: !771)
!16331 = !DILocation(line: 2466, column: 10, scope: !16327)
!16332 = !DILocalVariable(name: "status", scope: !16327, file: !3, line: 2468, type: !405)
!16333 = !DILocation(line: 2468, column: 6, scope: !16327)
!16334 = !DILocalVariable(name: "reg_data", scope: !16327, file: !3, line: 2469, type: !408)
!16335 = !DILocation(line: 2469, column: 6, scope: !16327)
!16336 = !DILocalVariable(name: "eq_reg_td_sqr_err_i", scope: !16327, file: !3, line: 2470, type: !411)
!16337 = !DILocation(line: 2470, column: 6, scope: !16327)
!16338 = !DILocalVariable(name: "eq_reg_td_sqr_err_q", scope: !16327, file: !3, line: 2471, type: !411)
!16339 = !DILocation(line: 2471, column: 6, scope: !16327)
!16340 = !DILocalVariable(name: "eq_reg_td_sqr_err_exp", scope: !16327, file: !3, line: 2472, type: !408)
!16341 = !DILocation(line: 2472, column: 6, scope: !16327)
!16342 = !DILocalVariable(name: "eq_reg_td_tps_pwr_ofs", scope: !16327, file: !3, line: 2473, type: !408)
!16343 = !DILocation(line: 2473, column: 6, scope: !16327)
!16344 = !DILocalVariable(name: "eq_reg_td_req_smb_cnt", scope: !16327, file: !3, line: 2474, type: !408)
!16345 = !DILocation(line: 2474, column: 6, scope: !16327)
!16346 = !DILocalVariable(name: "tps_cnt", scope: !16327, file: !3, line: 2475, type: !411)
!16347 = !DILocation(line: 2475, column: 6, scope: !16327)
!16348 = !DILocalVariable(name: "sqr_err_iq", scope: !16327, file: !3, line: 2476, type: !411)
!16349 = !DILocation(line: 2476, column: 6, scope: !16327)
!16350 = !DILocalVariable(name: "a", scope: !16327, file: !3, line: 2477, type: !411)
!16351 = !DILocation(line: 2477, column: 6, scope: !16327)
!16352 = !DILocalVariable(name: "b", scope: !16327, file: !3, line: 2478, type: !411)
!16353 = !DILocation(line: 2478, column: 6, scope: !16327)
!16354 = !DILocalVariable(name: "c", scope: !16327, file: !3, line: 2479, type: !411)
!16355 = !DILocation(line: 2479, column: 6, scope: !16327)
!16356 = !DILocalVariable(name: "i_mer", scope: !16327, file: !3, line: 2480, type: !411)
!16357 = !DILocation(line: 2480, column: 6, scope: !16327)
!16358 = !DILocalVariable(name: "transmission_params", scope: !16327, file: !3, line: 2481, type: !408)
!16359 = !DILocation(line: 2481, column: 6, scope: !16327)
!16360 = !DILocation(line: 2483, column: 2, scope: !16327)
!16361 = !DILocation(line: 2483, column: 2, scope: !16362)
!16362 = distinct !DILexicalBlock(scope: !16363, file: !3, line: 2483, column: 2)
!16363 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2483, column: 2)
!16364 = !DILocation(line: 2483, column: 2, scope: !16363)
!16365 = !DILocation(line: 2485, column: 18, scope: !16327)
!16366 = !DILocation(line: 2485, column: 11, scope: !16327)
!16367 = !DILocation(line: 2485, column: 9, scope: !16327)
!16368 = !DILocation(line: 2487, column: 6, scope: !16369)
!16369 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2487, column: 6)
!16370 = !DILocation(line: 2487, column: 13, scope: !16369)
!16371 = !DILocation(line: 2487, column: 6, scope: !16327)
!16372 = !DILocation(line: 2488, column: 3, scope: !16369)
!16373 = !DILocation(line: 2489, column: 18, scope: !16327)
!16374 = !DILocation(line: 2489, column: 11, scope: !16327)
!16375 = !DILocation(line: 2489, column: 9, scope: !16327)
!16376 = !DILocation(line: 2491, column: 6, scope: !16377)
!16377 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2491, column: 6)
!16378 = !DILocation(line: 2491, column: 13, scope: !16377)
!16379 = !DILocation(line: 2491, column: 6, scope: !16327)
!16380 = !DILocation(line: 2492, column: 3, scope: !16377)
!16381 = !DILocation(line: 2493, column: 18, scope: !16327)
!16382 = !DILocation(line: 2493, column: 11, scope: !16327)
!16383 = !DILocation(line: 2493, column: 9, scope: !16327)
!16384 = !DILocation(line: 2495, column: 6, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2495, column: 6)
!16386 = !DILocation(line: 2495, column: 13, scope: !16385)
!16387 = !DILocation(line: 2495, column: 6, scope: !16327)
!16388 = !DILocation(line: 2496, column: 3, scope: !16385)
!16389 = !DILocation(line: 2497, column: 18, scope: !16327)
!16390 = !DILocation(line: 2497, column: 11, scope: !16327)
!16391 = !DILocation(line: 2497, column: 9, scope: !16327)
!16392 = !DILocation(line: 2499, column: 6, scope: !16393)
!16393 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2499, column: 6)
!16394 = !DILocation(line: 2499, column: 13, scope: !16393)
!16395 = !DILocation(line: 2499, column: 6, scope: !16327)
!16396 = !DILocation(line: 2500, column: 3, scope: !16393)
!16397 = !DILocation(line: 2502, column: 30, scope: !16327)
!16398 = !DILocation(line: 2502, column: 24, scope: !16327)
!16399 = !DILocation(line: 2502, column: 22, scope: !16327)
!16400 = !DILocation(line: 2503, column: 7, scope: !16401)
!16401 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2503, column: 6)
!16402 = !DILocation(line: 2503, column: 29, scope: !16401)
!16403 = !DILocation(line: 2503, column: 35, scope: !16401)
!16404 = !DILocation(line: 2504, column: 4, scope: !16401)
!16405 = !DILocation(line: 2504, column: 24, scope: !16401)
!16406 = !DILocation(line: 2503, column: 6, scope: !16327)
!16407 = !DILocation(line: 2505, column: 23, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !16401, file: !3, line: 2504, column: 41)
!16409 = !DILocation(line: 2506, column: 2, scope: !16408)
!16410 = !DILocation(line: 2507, column: 18, scope: !16327)
!16411 = !DILocation(line: 2507, column: 11, scope: !16327)
!16412 = !DILocation(line: 2507, column: 9, scope: !16327)
!16413 = !DILocation(line: 2508, column: 6, scope: !16414)
!16414 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2508, column: 6)
!16415 = !DILocation(line: 2508, column: 13, scope: !16414)
!16416 = !DILocation(line: 2508, column: 6, scope: !16327)
!16417 = !DILocation(line: 2509, column: 3, scope: !16414)
!16418 = !DILocation(line: 2511, column: 30, scope: !16327)
!16419 = !DILocation(line: 2511, column: 24, scope: !16327)
!16420 = !DILocation(line: 2511, column: 22, scope: !16327)
!16421 = !DILocation(line: 2512, column: 7, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2512, column: 6)
!16423 = !DILocation(line: 2512, column: 29, scope: !16422)
!16424 = !DILocation(line: 2512, column: 35, scope: !16422)
!16425 = !DILocation(line: 2513, column: 4, scope: !16422)
!16426 = !DILocation(line: 2513, column: 24, scope: !16422)
!16427 = !DILocation(line: 2512, column: 6, scope: !16327)
!16428 = !DILocation(line: 2514, column: 23, scope: !16422)
!16429 = !DILocation(line: 2514, column: 3, scope: !16422)
!16430 = !DILocation(line: 2516, column: 18, scope: !16327)
!16431 = !DILocation(line: 2516, column: 11, scope: !16327)
!16432 = !DILocation(line: 2516, column: 9, scope: !16327)
!16433 = !DILocation(line: 2518, column: 6, scope: !16434)
!16434 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2518, column: 6)
!16435 = !DILocation(line: 2518, column: 13, scope: !16434)
!16436 = !DILocation(line: 2518, column: 6, scope: !16327)
!16437 = !DILocation(line: 2519, column: 3, scope: !16434)
!16438 = !DILocation(line: 2524, column: 7, scope: !16439)
!16439 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2524, column: 6)
!16440 = !DILocation(line: 2524, column: 29, scope: !16439)
!16441 = !DILocation(line: 2524, column: 35, scope: !16439)
!16442 = !DILocation(line: 2524, column: 39, scope: !16439)
!16443 = !DILocation(line: 2524, column: 61, scope: !16439)
!16444 = !DILocation(line: 2524, column: 6, scope: !16327)
!16445 = !DILocation(line: 2525, column: 9, scope: !16439)
!16446 = !DILocation(line: 2525, column: 3, scope: !16439)
!16447 = !DILocation(line: 2526, column: 12, scope: !16448)
!16448 = distinct !DILexicalBlock(scope: !16439, file: !3, line: 2526, column: 11)
!16449 = !DILocation(line: 2526, column: 34, scope: !16448)
!16450 = !DILocation(line: 2526, column: 32, scope: !16448)
!16451 = !DILocation(line: 2526, column: 55, scope: !16448)
!16452 = !DILocation(line: 2526, column: 11, scope: !16439)
!16453 = !DILocation(line: 2530, column: 9, scope: !16454)
!16454 = distinct !DILexicalBlock(scope: !16448, file: !3, line: 2526, column: 61)
!16455 = !DILocation(line: 2531, column: 2, scope: !16454)
!16456 = !DILocation(line: 2532, column: 17, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16448, file: !3, line: 2531, column: 9)
!16458 = !DILocation(line: 2532, column: 39, scope: !16457)
!16459 = !DILocation(line: 2532, column: 37, scope: !16457)
!16460 = !DILocation(line: 2533, column: 4, scope: !16457)
!16461 = !DILocation(line: 2532, column: 60, scope: !16457)
!16462 = !DILocation(line: 2532, column: 14, scope: !16457)
!16463 = !DILocation(line: 2534, column: 8, scope: !16464)
!16464 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 2534, column: 7)
!16465 = !DILocation(line: 2534, column: 28, scope: !16464)
!16466 = !DILocation(line: 2536, column: 4, scope: !16464)
!16467 = !DILocation(line: 2534, column: 7, scope: !16457)
!16468 = !DILocation(line: 2537, column: 12, scope: !16464)
!16469 = !DILocation(line: 2537, column: 4, scope: !16464)
!16470 = !DILocation(line: 2539, column: 12, scope: !16464)
!16471 = !DILocation(line: 2552, column: 21, scope: !16457)
!16472 = !DILocation(line: 2553, column: 6, scope: !16457)
!16473 = !DILocation(line: 2552, column: 43, scope: !16457)
!16474 = !DILocation(line: 2552, column: 7, scope: !16457)
!16475 = !DILocation(line: 2552, column: 5, scope: !16457)
!16476 = !DILocation(line: 2555, column: 21, scope: !16457)
!16477 = !DILocation(line: 2555, column: 45, scope: !16457)
!16478 = !DILocation(line: 2555, column: 43, scope: !16457)
!16479 = !DILocation(line: 2555, column: 7, scope: !16457)
!16480 = !DILocation(line: 2555, column: 5, scope: !16457)
!16481 = !DILocation(line: 2557, column: 21, scope: !16457)
!16482 = !DILocation(line: 2557, column: 7, scope: !16457)
!16483 = !DILocation(line: 2557, column: 5, scope: !16457)
!16484 = !DILocation(line: 2559, column: 11, scope: !16457)
!16485 = !DILocation(line: 2559, column: 15, scope: !16457)
!16486 = !DILocation(line: 2559, column: 13, scope: !16457)
!16487 = !DILocation(line: 2559, column: 19, scope: !16457)
!16488 = !DILocation(line: 2559, column: 17, scope: !16457)
!16489 = !DILocation(line: 2559, column: 9, scope: !16457)
!16490 = !DILocation(line: 2561, column: 23, scope: !16327)
!16491 = !DILocation(line: 2561, column: 3, scope: !16327)
!16492 = !DILocation(line: 2561, column: 21, scope: !16327)
!16493 = !DILocation(line: 2561, column: 2, scope: !16327)
!16494 = !DILabel(scope: !16327, name: "error", file: !3, line: 2563)
!16495 = !DILocation(line: 2563, column: 1, scope: !16327)
!16496 = !DILocation(line: 2564, column: 6, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16327, file: !3, line: 2564, column: 6)
!16498 = !DILocation(line: 2564, column: 13, scope: !16497)
!16499 = !DILocation(line: 2564, column: 6, scope: !16327)
!16500 = !DILocation(line: 2565, column: 3, scope: !16497)
!16501 = !DILocation(line: 2566, column: 9, scope: !16327)
!16502 = !DILocation(line: 2566, column: 2, scope: !16327)
!16503 = distinct !DISubprogram(name: "get_qam_signal_to_noise", scope: !3, file: !3, line: 2416, type: !16160, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!16504 = !DILocalVariable(name: "state", arg: 1, scope: !16503, file: !3, line: 2416, type: !4562)
!16505 = !DILocation(line: 2416, column: 55, scope: !16503)
!16506 = !DILocalVariable(name: "p_signal_to_noise", arg: 2, scope: !16503, file: !3, line: 2417, type: !771)
!16507 = !DILocation(line: 2417, column: 16, scope: !16503)
!16508 = !DILocalVariable(name: "status", scope: !16503, file: !3, line: 2419, type: !405)
!16509 = !DILocation(line: 2419, column: 6, scope: !16503)
!16510 = !DILocalVariable(name: "qam_sl_err_power", scope: !16503, file: !3, line: 2420, type: !408)
!16511 = !DILocation(line: 2420, column: 6, scope: !16503)
!16512 = !DILocalVariable(name: "qam_sl_sig_power", scope: !16503, file: !3, line: 2422, type: !411)
!16513 = !DILocation(line: 2422, column: 6, scope: !16503)
!16514 = !DILocalVariable(name: "qam_sl_mer", scope: !16503, file: !3, line: 2424, type: !411)
!16515 = !DILocation(line: 2424, column: 6, scope: !16503)
!16516 = !DILocation(line: 2426, column: 2, scope: !16503)
!16517 = !DILocation(line: 2426, column: 2, scope: !16518)
!16518 = distinct !DILexicalBlock(scope: !16519, file: !3, line: 2426, column: 2)
!16519 = distinct !DILexicalBlock(scope: !16503, file: !3, line: 2426, column: 2)
!16520 = !DILocation(line: 2426, column: 2, scope: !16519)
!16521 = !DILocation(line: 2431, column: 18, scope: !16503)
!16522 = !DILocation(line: 2431, column: 11, scope: !16503)
!16523 = !DILocation(line: 2431, column: 9, scope: !16503)
!16524 = !DILocation(line: 2432, column: 6, scope: !16525)
!16525 = distinct !DILexicalBlock(scope: !16503, file: !3, line: 2432, column: 6)
!16526 = !DILocation(line: 2432, column: 13, scope: !16525)
!16527 = !DILocation(line: 2432, column: 6, scope: !16503)
!16528 = !DILocation(line: 2433, column: 3, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16525, file: !3, line: 2432, column: 18)
!16530 = !DILocation(line: 2434, column: 3, scope: !16529)
!16531 = !DILocation(line: 2437, column: 10, scope: !16503)
!16532 = !DILocation(line: 2437, column: 17, scope: !16503)
!16533 = !DILocation(line: 2437, column: 23, scope: !16503)
!16534 = !DILocation(line: 2437, column: 2, scope: !16503)
!16535 = !DILocation(line: 2439, column: 20, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16503, file: !3, line: 2437, column: 35)
!16537 = !DILocation(line: 2440, column: 3, scope: !16536)
!16538 = !DILocation(line: 2442, column: 20, scope: !16536)
!16539 = !DILocation(line: 2443, column: 3, scope: !16536)
!16540 = !DILocation(line: 2445, column: 20, scope: !16536)
!16541 = !DILocation(line: 2446, column: 3, scope: !16536)
!16542 = !DILocation(line: 2448, column: 20, scope: !16536)
!16543 = !DILocation(line: 2449, column: 3, scope: !16536)
!16544 = !DILocation(line: 2452, column: 20, scope: !16536)
!16545 = !DILocation(line: 2453, column: 3, scope: !16536)
!16546 = !DILocation(line: 2456, column: 6, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16503, file: !3, line: 2456, column: 6)
!16548 = !DILocation(line: 2456, column: 23, scope: !16547)
!16549 = !DILocation(line: 2456, column: 6, scope: !16503)
!16550 = !DILocation(line: 2457, column: 30, scope: !16551)
!16551 = distinct !DILexicalBlock(scope: !16547, file: !3, line: 2456, column: 28)
!16552 = !DILocation(line: 2457, column: 16, scope: !16551)
!16553 = !DILocation(line: 2458, column: 24, scope: !16551)
!16554 = !DILocation(line: 2458, column: 18, scope: !16551)
!16555 = !DILocation(line: 2458, column: 4, scope: !16551)
!16556 = !DILocation(line: 2457, column: 48, scope: !16551)
!16557 = !DILocation(line: 2457, column: 14, scope: !16551)
!16558 = !DILocation(line: 2459, column: 2, scope: !16551)
!16559 = !DILocation(line: 2460, column: 23, scope: !16503)
!16560 = !DILocation(line: 2460, column: 3, scope: !16503)
!16561 = !DILocation(line: 2460, column: 21, scope: !16503)
!16562 = !DILocation(line: 2462, column: 9, scope: !16503)
!16563 = !DILocation(line: 2462, column: 2, scope: !16503)
!16564 = !DILocation(line: 2463, column: 1, scope: !16503)
!16565 = distinct !DISubprogram(name: "log10times100", scope: !3, file: !3, line: 182, type: !16566, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!16566 = !DISubroutineType(types: !16567)
!16567 = !{!411, !411}
!16568 = !DILocalVariable(name: "value", arg: 1, scope: !16565, file: !3, line: 182, type: !411)
!16569 = !DILocation(line: 182, column: 37, scope: !16565)
!16570 = !DILocation(line: 184, column: 26, scope: !16565)
!16571 = !DILocation(line: 184, column: 17, scope: !16565)
!16572 = !DILocation(line: 184, column: 15, scope: !16565)
!16573 = !DILocation(line: 184, column: 34, scope: !16565)
!16574 = !DILocation(line: 184, column: 9, scope: !16565)
!16575 = !DILocation(line: 184, column: 2, scope: !16565)
!16576 = distinct !DISubprogram(name: "dvbtqam_get_acc_pkt_err", scope: !3, file: !3, line: 3180, type: !10672, scopeLine: 3181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!16577 = !DILocalVariable(name: "state", arg: 1, scope: !16576, file: !3, line: 3180, type: !4562)
!16578 = !DILocation(line: 3180, column: 55, scope: !16576)
!16579 = !DILocalVariable(name: "packet_err", arg: 2, scope: !16576, file: !3, line: 3180, type: !669)
!16580 = !DILocation(line: 3180, column: 67, scope: !16576)
!16581 = !DILocalVariable(name: "status", scope: !16576, file: !3, line: 3182, type: !405)
!16582 = !DILocation(line: 3182, column: 6, scope: !16576)
!16583 = !DILocation(line: 3184, column: 2, scope: !16576)
!16584 = !DILocation(line: 3184, column: 2, scope: !16585)
!16585 = distinct !DILexicalBlock(scope: !16586, file: !3, line: 3184, column: 2)
!16586 = distinct !DILexicalBlock(scope: !16576, file: !3, line: 3184, column: 2)
!16587 = !DILocation(line: 3184, column: 2, scope: !16586)
!16588 = !DILocation(line: 3185, column: 6, scope: !16589)
!16589 = distinct !DILexicalBlock(scope: !16576, file: !3, line: 3185, column: 6)
!16590 = !DILocation(line: 3185, column: 17, scope: !16589)
!16591 = !DILocation(line: 3185, column: 6, scope: !16576)
!16592 = !DILocation(line: 3186, column: 20, scope: !16589)
!16593 = !DILocation(line: 3186, column: 12, scope: !16589)
!16594 = !DILocation(line: 3186, column: 10, scope: !16589)
!16595 = !DILocation(line: 3186, column: 3, scope: !16589)
!16596 = !DILocation(line: 3188, column: 19, scope: !16589)
!16597 = !DILocation(line: 3189, column: 5, scope: !16589)
!16598 = !DILocation(line: 3188, column: 12, scope: !16589)
!16599 = !DILocation(line: 3188, column: 10, scope: !16589)
!16600 = !DILocation(line: 3190, column: 6, scope: !16601)
!16601 = distinct !DILexicalBlock(scope: !16576, file: !3, line: 3190, column: 6)
!16602 = !DILocation(line: 3190, column: 13, scope: !16601)
!16603 = !DILocation(line: 3190, column: 6, scope: !16576)
!16604 = !DILocation(line: 3191, column: 3, scope: !16601)
!16605 = !DILocation(line: 3192, column: 9, scope: !16576)
!16606 = !DILocation(line: 3192, column: 2, scope: !16576)
!16607 = distinct !DISubprogram(name: "ConfigureI2CBridge", scope: !3, file: !3, line: 2731, type: !7485, scopeLine: 2732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!16608 = !DILocalVariable(name: "state", arg: 1, scope: !16607, file: !3, line: 2731, type: !4562)
!16609 = !DILocation(line: 2731, column: 50, scope: !16607)
!16610 = !DILocalVariable(name: "b_enable_bridge", arg: 2, scope: !16607, file: !3, line: 2731, type: !406)
!16611 = !DILocation(line: 2731, column: 62, scope: !16607)
!16612 = !DILocalVariable(name: "status", scope: !16607, file: !3, line: 2733, type: !405)
!16613 = !DILocation(line: 2733, column: 6, scope: !16607)
!16614 = !DILocation(line: 2735, column: 2, scope: !16607)
!16615 = !DILocation(line: 2735, column: 2, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16617, file: !3, line: 2735, column: 2)
!16617 = distinct !DILexicalBlock(scope: !16607, file: !3, line: 2735, column: 2)
!16618 = !DILocation(line: 2735, column: 2, scope: !16617)
!16619 = !DILocation(line: 2737, column: 6, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16607, file: !3, line: 2737, column: 6)
!16621 = !DILocation(line: 2737, column: 13, scope: !16620)
!16622 = !DILocation(line: 2737, column: 26, scope: !16620)
!16623 = !DILocation(line: 2737, column: 6, scope: !16607)
!16624 = !DILocation(line: 2738, column: 3, scope: !16620)
!16625 = !DILocation(line: 2739, column: 6, scope: !16626)
!16626 = distinct !DILexicalBlock(scope: !16607, file: !3, line: 2739, column: 6)
!16627 = !DILocation(line: 2739, column: 13, scope: !16626)
!16628 = !DILocation(line: 2739, column: 26, scope: !16626)
!16629 = !DILocation(line: 2739, column: 6, scope: !16607)
!16630 = !DILocation(line: 2740, column: 3, scope: !16626)
!16631 = !DILocation(line: 2742, column: 6, scope: !16632)
!16632 = distinct !DILexicalBlock(scope: !16607, file: !3, line: 2742, column: 6)
!16633 = !DILocation(line: 2742, column: 13, scope: !16632)
!16634 = !DILocation(line: 2742, column: 6, scope: !16607)
!16635 = !DILocation(line: 2743, column: 3, scope: !16632)
!16636 = !DILocation(line: 2745, column: 19, scope: !16607)
!16637 = !DILocation(line: 2745, column: 11, scope: !16607)
!16638 = !DILocation(line: 2745, column: 9, scope: !16607)
!16639 = !DILocation(line: 2747, column: 6, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16607, file: !3, line: 2747, column: 6)
!16641 = !DILocation(line: 2747, column: 13, scope: !16640)
!16642 = !DILocation(line: 2747, column: 6, scope: !16607)
!16643 = !DILocation(line: 2748, column: 3, scope: !16640)
!16644 = !DILocation(line: 2749, column: 6, scope: !16645)
!16645 = distinct !DILexicalBlock(scope: !16607, file: !3, line: 2749, column: 6)
!16646 = !DILocation(line: 2749, column: 6, scope: !16607)
!16647 = !DILocation(line: 2750, column: 20, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16645, file: !3, line: 2749, column: 23)
!16649 = !DILocation(line: 2750, column: 12, scope: !16648)
!16650 = !DILocation(line: 2750, column: 10, scope: !16648)
!16651 = !DILocation(line: 2752, column: 7, scope: !16652)
!16652 = distinct !DILexicalBlock(scope: !16648, file: !3, line: 2752, column: 7)
!16653 = !DILocation(line: 2752, column: 14, scope: !16652)
!16654 = !DILocation(line: 2752, column: 7, scope: !16648)
!16655 = !DILocation(line: 2753, column: 4, scope: !16652)
!16656 = !DILocation(line: 2754, column: 2, scope: !16648)
!16657 = !DILocation(line: 2755, column: 20, scope: !16658)
!16658 = distinct !DILexicalBlock(scope: !16645, file: !3, line: 2754, column: 9)
!16659 = !DILocation(line: 2755, column: 12, scope: !16658)
!16660 = !DILocation(line: 2755, column: 10, scope: !16658)
!16661 = !DILocation(line: 2757, column: 7, scope: !16662)
!16662 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 2757, column: 7)
!16663 = !DILocation(line: 2757, column: 14, scope: !16662)
!16664 = !DILocation(line: 2757, column: 7, scope: !16658)
!16665 = !DILocation(line: 2758, column: 4, scope: !16662)
!16666 = !DILocation(line: 2761, column: 22, scope: !16607)
!16667 = !DILocation(line: 2761, column: 11, scope: !16607)
!16668 = !DILocation(line: 2761, column: 9, scope: !16607)
!16669 = !DILocation(line: 2761, column: 2, scope: !16607)
!16670 = !DILabel(scope: !16607, name: "error", file: !3, line: 2763)
!16671 = !DILocation(line: 2763, column: 1, scope: !16607)
!16672 = !DILocation(line: 2764, column: 6, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16607, file: !3, line: 2764, column: 6)
!16674 = !DILocation(line: 2764, column: 13, scope: !16673)
!16675 = !DILocation(line: 2764, column: 6, scope: !16607)
!16676 = !DILocation(line: 2765, column: 3, scope: !16673)
!16677 = !DILocation(line: 2766, column: 9, scope: !16607)
!16678 = !DILocation(line: 2766, column: 2, scope: !16607)
!16679 = !DILocation(line: 2767, column: 1, scope: !16607)
!16680 = distinct !DISubprogram(name: "drxk_i2c_lock", scope: !3, file: !3, line: 191, type: !5239, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!16681 = !DILocalVariable(name: "state", arg: 1, scope: !16680, file: !3, line: 191, type: !4562)
!16682 = !DILocation(line: 191, column: 45, scope: !16680)
!16683 = !DILocation(line: 193, column: 15, scope: !16680)
!16684 = !DILocation(line: 193, column: 22, scope: !16680)
!16685 = !DILocation(line: 193, column: 2, scope: !16680)
!16686 = !DILocation(line: 194, column: 2, scope: !16680)
!16687 = !DILocation(line: 194, column: 9, scope: !16680)
!16688 = !DILocation(line: 194, column: 33, scope: !16680)
!16689 = !DILocation(line: 196, column: 2, scope: !16680)
!16690 = distinct !DISubprogram(name: "drxx_open", scope: !3, file: !3, line: 752, type: !5239, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!16691 = !DILocalVariable(name: "state", arg: 1, scope: !16690, file: !3, line: 752, type: !4562)
!16692 = !DILocation(line: 752, column: 41, scope: !16690)
!16693 = !DILocalVariable(name: "status", scope: !16690, file: !3, line: 754, type: !405)
!16694 = !DILocation(line: 754, column: 6, scope: !16690)
!16695 = !DILocalVariable(name: "jtag", scope: !16690, file: !3, line: 755, type: !411)
!16696 = !DILocation(line: 755, column: 6, scope: !16690)
!16697 = !DILocalVariable(name: "bid", scope: !16690, file: !3, line: 756, type: !408)
!16698 = !DILocation(line: 756, column: 6, scope: !16690)
!16699 = !DILocalVariable(name: "key", scope: !16690, file: !3, line: 757, type: !408)
!16700 = !DILocation(line: 757, column: 6, scope: !16690)
!16701 = !DILocation(line: 759, column: 2, scope: !16690)
!16702 = !DILocation(line: 759, column: 2, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16704, file: !3, line: 759, column: 2)
!16704 = distinct !DILexicalBlock(scope: !16690, file: !3, line: 759, column: 2)
!16705 = !DILocation(line: 759, column: 2, scope: !16704)
!16706 = !DILocation(line: 761, column: 19, scope: !16690)
!16707 = !DILocation(line: 761, column: 11, scope: !16690)
!16708 = !DILocation(line: 761, column: 9, scope: !16690)
!16709 = !DILocation(line: 763, column: 6, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16690, file: !3, line: 763, column: 6)
!16711 = !DILocation(line: 763, column: 13, scope: !16710)
!16712 = !DILocation(line: 763, column: 6, scope: !16690)
!16713 = !DILocation(line: 764, column: 3, scope: !16710)
!16714 = !DILocation(line: 766, column: 18, scope: !16690)
!16715 = !DILocation(line: 766, column: 11, scope: !16690)
!16716 = !DILocation(line: 766, column: 9, scope: !16690)
!16717 = !DILocation(line: 767, column: 6, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !16690, file: !3, line: 767, column: 6)
!16719 = !DILocation(line: 767, column: 13, scope: !16718)
!16720 = !DILocation(line: 767, column: 6, scope: !16690)
!16721 = !DILocation(line: 768, column: 3, scope: !16718)
!16722 = !DILocation(line: 769, column: 19, scope: !16690)
!16723 = !DILocation(line: 769, column: 11, scope: !16690)
!16724 = !DILocation(line: 769, column: 9, scope: !16690)
!16725 = !DILocation(line: 770, column: 6, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16690, file: !3, line: 770, column: 6)
!16727 = !DILocation(line: 770, column: 13, scope: !16726)
!16728 = !DILocation(line: 770, column: 6, scope: !16690)
!16729 = !DILocation(line: 771, column: 3, scope: !16726)
!16730 = !DILocation(line: 772, column: 18, scope: !16690)
!16731 = !DILocation(line: 772, column: 11, scope: !16690)
!16732 = !DILocation(line: 772, column: 9, scope: !16690)
!16733 = !DILocation(line: 773, column: 6, scope: !16734)
!16734 = distinct !DILexicalBlock(scope: !16690, file: !3, line: 773, column: 6)
!16735 = !DILocation(line: 773, column: 13, scope: !16734)
!16736 = !DILocation(line: 773, column: 6, scope: !16690)
!16737 = !DILocation(line: 774, column: 3, scope: !16734)
!16738 = !DILocation(line: 775, column: 18, scope: !16690)
!16739 = !DILocation(line: 775, column: 11, scope: !16690)
!16740 = !DILocation(line: 775, column: 9, scope: !16690)
!16741 = !DILocation(line: 776, column: 6, scope: !16742)
!16742 = distinct !DILexicalBlock(scope: !16690, file: !3, line: 776, column: 6)
!16743 = !DILocation(line: 776, column: 13, scope: !16742)
!16744 = !DILocation(line: 776, column: 6, scope: !16690)
!16745 = !DILocation(line: 777, column: 3, scope: !16742)
!16746 = !DILocation(line: 778, column: 19, scope: !16690)
!16747 = !DILocation(line: 778, column: 47, scope: !16690)
!16748 = !DILocation(line: 778, column: 11, scope: !16690)
!16749 = !DILocation(line: 778, column: 9, scope: !16690)
!16750 = !DILocation(line: 778, column: 2, scope: !16690)
!16751 = !DILabel(scope: !16690, name: "error", file: !3, line: 779)
!16752 = !DILocation(line: 779, column: 1, scope: !16690)
!16753 = !DILocation(line: 780, column: 6, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !16690, file: !3, line: 780, column: 6)
!16755 = !DILocation(line: 780, column: 13, scope: !16754)
!16756 = !DILocation(line: 780, column: 6, scope: !16690)
!16757 = !DILocation(line: 781, column: 3, scope: !16754)
!16758 = !DILocation(line: 782, column: 9, scope: !16690)
!16759 = !DILocation(line: 782, column: 2, scope: !16690)
!16760 = distinct !DISubprogram(name: "get_device_capabilities", scope: !3, file: !3, line: 785, type: !5239, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!16761 = !DILocalVariable(name: "state", arg: 1, scope: !16760, file: !3, line: 785, type: !4562)
!16762 = !DILocation(line: 785, column: 55, scope: !16760)
!16763 = !DILocalVariable(name: "sio_pdr_ohw_cfg", scope: !16760, file: !3, line: 787, type: !408)
!16764 = !DILocation(line: 787, column: 6, scope: !16760)
!16765 = !DILocalVariable(name: "sio_top_jtagid_lo", scope: !16760, file: !3, line: 788, type: !411)
!16766 = !DILocation(line: 788, column: 6, scope: !16760)
!16767 = !DILocalVariable(name: "status", scope: !16760, file: !3, line: 789, type: !405)
!16768 = !DILocation(line: 789, column: 6, scope: !16760)
!16769 = !DILocalVariable(name: "spin", scope: !16760, file: !3, line: 790, type: !421)
!16770 = !DILocation(line: 790, column: 14, scope: !16760)
!16771 = !DILocation(line: 792, column: 2, scope: !16760)
!16772 = !DILocation(line: 792, column: 2, scope: !16773)
!16773 = distinct !DILexicalBlock(scope: !16774, file: !3, line: 792, column: 2)
!16774 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 792, column: 2)
!16775 = !DILocation(line: 792, column: 2, scope: !16774)
!16776 = !DILocation(line: 796, column: 19, scope: !16760)
!16777 = !DILocation(line: 796, column: 11, scope: !16760)
!16778 = !DILocation(line: 796, column: 9, scope: !16760)
!16779 = !DILocation(line: 798, column: 6, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 798, column: 6)
!16781 = !DILocation(line: 798, column: 13, scope: !16780)
!16782 = !DILocation(line: 798, column: 6, scope: !16760)
!16783 = !DILocation(line: 799, column: 3, scope: !16780)
!16784 = !DILocation(line: 800, column: 19, scope: !16760)
!16785 = !DILocation(line: 800, column: 11, scope: !16760)
!16786 = !DILocation(line: 800, column: 9, scope: !16760)
!16787 = !DILocation(line: 801, column: 6, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 801, column: 6)
!16789 = !DILocation(line: 801, column: 13, scope: !16788)
!16790 = !DILocation(line: 801, column: 6, scope: !16760)
!16791 = !DILocation(line: 802, column: 3, scope: !16788)
!16792 = !DILocation(line: 803, column: 18, scope: !16760)
!16793 = !DILocation(line: 803, column: 11, scope: !16760)
!16794 = !DILocation(line: 803, column: 9, scope: !16760)
!16795 = !DILocation(line: 804, column: 6, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 804, column: 6)
!16797 = !DILocation(line: 804, column: 13, scope: !16796)
!16798 = !DILocation(line: 804, column: 6, scope: !16760)
!16799 = !DILocation(line: 805, column: 3, scope: !16796)
!16800 = !DILocation(line: 806, column: 19, scope: !16760)
!16801 = !DILocation(line: 806, column: 11, scope: !16760)
!16802 = !DILocation(line: 806, column: 9, scope: !16760)
!16803 = !DILocation(line: 807, column: 6, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 807, column: 6)
!16805 = !DILocation(line: 807, column: 13, scope: !16804)
!16806 = !DILocation(line: 807, column: 6, scope: !16760)
!16807 = !DILocation(line: 808, column: 3, scope: !16804)
!16808 = !DILocation(line: 810, column: 11, scope: !16760)
!16809 = !DILocation(line: 810, column: 27, scope: !16760)
!16810 = !DILocation(line: 810, column: 2, scope: !16760)
!16811 = !DILocation(line: 813, column: 3, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 810, column: 59)
!16813 = !DILocation(line: 816, column: 3, scope: !16812)
!16814 = !DILocation(line: 816, column: 10, scope: !16812)
!16815 = !DILocation(line: 816, column: 27, scope: !16812)
!16816 = !DILocation(line: 817, column: 3, scope: !16812)
!16817 = !DILocation(line: 820, column: 3, scope: !16812)
!16818 = !DILocation(line: 820, column: 10, scope: !16812)
!16819 = !DILocation(line: 820, column: 27, scope: !16812)
!16820 = !DILocation(line: 821, column: 3, scope: !16812)
!16821 = !DILocation(line: 824, column: 3, scope: !16812)
!16822 = !DILocation(line: 824, column: 10, scope: !16812)
!16823 = !DILocation(line: 824, column: 27, scope: !16812)
!16824 = !DILocation(line: 825, column: 3, scope: !16812)
!16825 = !DILocation(line: 827, column: 3, scope: !16812)
!16826 = !DILocation(line: 828, column: 3, scope: !16812)
!16827 = !DILocation(line: 834, column: 18, scope: !16760)
!16828 = !DILocation(line: 834, column: 11, scope: !16760)
!16829 = !DILocation(line: 834, column: 9, scope: !16760)
!16830 = !DILocation(line: 835, column: 6, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 835, column: 6)
!16832 = !DILocation(line: 835, column: 13, scope: !16831)
!16833 = !DILocation(line: 835, column: 6, scope: !16760)
!16834 = !DILocation(line: 836, column: 3, scope: !16831)
!16835 = !DILocation(line: 838, column: 2, scope: !16760)
!16836 = !DILocation(line: 841, column: 11, scope: !16760)
!16837 = !DILocation(line: 841, column: 29, scope: !16760)
!16838 = !DILocation(line: 841, column: 36, scope: !16760)
!16839 = !DILocation(line: 841, column: 2, scope: !16760)
!16840 = !DILocation(line: 843, column: 3, scope: !16841)
!16841 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 841, column: 43)
!16842 = !DILocation(line: 843, column: 10, scope: !16841)
!16843 = !DILocation(line: 843, column: 24, scope: !16841)
!16844 = !DILocation(line: 844, column: 8, scope: !16841)
!16845 = !DILocation(line: 845, column: 3, scope: !16841)
!16846 = !DILocation(line: 847, column: 3, scope: !16841)
!16847 = !DILocation(line: 847, column: 10, scope: !16841)
!16848 = !DILocation(line: 847, column: 24, scope: !16841)
!16849 = !DILocation(line: 848, column: 8, scope: !16841)
!16850 = !DILocation(line: 849, column: 3, scope: !16841)
!16851 = !DILocation(line: 851, column: 3, scope: !16841)
!16852 = !DILocation(line: 851, column: 10, scope: !16841)
!16853 = !DILocation(line: 851, column: 24, scope: !16841)
!16854 = !DILocation(line: 852, column: 8, scope: !16841)
!16855 = !DILocation(line: 853, column: 3, scope: !16841)
!16856 = !DILocation(line: 855, column: 3, scope: !16841)
!16857 = !DILocation(line: 855, column: 10, scope: !16841)
!16858 = !DILocation(line: 855, column: 24, scope: !16841)
!16859 = !DILocation(line: 856, column: 10, scope: !16841)
!16860 = !DILocation(line: 857, column: 3, scope: !16841)
!16861 = !DILocation(line: 858, column: 3, scope: !16841)
!16862 = !DILocation(line: 860, column: 11, scope: !16760)
!16863 = !DILocation(line: 860, column: 29, scope: !16760)
!16864 = !DILocation(line: 860, column: 36, scope: !16760)
!16865 = !DILocation(line: 860, column: 2, scope: !16760)
!16866 = !DILocation(line: 863, column: 3, scope: !16867)
!16867 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 860, column: 44)
!16868 = !DILocation(line: 863, column: 10, scope: !16867)
!16869 = !DILocation(line: 863, column: 20, scope: !16867)
!16870 = !DILocation(line: 864, column: 3, scope: !16867)
!16871 = !DILocation(line: 864, column: 10, scope: !16867)
!16872 = !DILocation(line: 864, column: 20, scope: !16867)
!16873 = !DILocation(line: 865, column: 3, scope: !16867)
!16874 = !DILocation(line: 865, column: 10, scope: !16867)
!16875 = !DILocation(line: 865, column: 20, scope: !16867)
!16876 = !DILocation(line: 866, column: 3, scope: !16867)
!16877 = !DILocation(line: 866, column: 10, scope: !16867)
!16878 = !DILocation(line: 866, column: 22, scope: !16867)
!16879 = !DILocation(line: 867, column: 3, scope: !16867)
!16880 = !DILocation(line: 867, column: 10, scope: !16867)
!16881 = !DILocation(line: 867, column: 21, scope: !16867)
!16882 = !DILocation(line: 868, column: 3, scope: !16867)
!16883 = !DILocation(line: 868, column: 10, scope: !16867)
!16884 = !DILocation(line: 868, column: 21, scope: !16867)
!16885 = !DILocation(line: 869, column: 3, scope: !16867)
!16886 = !DILocation(line: 869, column: 10, scope: !16867)
!16887 = !DILocation(line: 869, column: 22, scope: !16867)
!16888 = !DILocation(line: 870, column: 3, scope: !16867)
!16889 = !DILocation(line: 870, column: 10, scope: !16867)
!16890 = !DILocation(line: 870, column: 22, scope: !16867)
!16891 = !DILocation(line: 871, column: 3, scope: !16867)
!16892 = !DILocation(line: 871, column: 10, scope: !16867)
!16893 = !DILocation(line: 871, column: 22, scope: !16867)
!16894 = !DILocation(line: 872, column: 3, scope: !16867)
!16895 = !DILocation(line: 872, column: 10, scope: !16867)
!16896 = !DILocation(line: 872, column: 21, scope: !16867)
!16897 = !DILocation(line: 873, column: 3, scope: !16867)
!16898 = !DILocation(line: 876, column: 3, scope: !16867)
!16899 = !DILocation(line: 876, column: 10, scope: !16867)
!16900 = !DILocation(line: 876, column: 20, scope: !16867)
!16901 = !DILocation(line: 877, column: 3, scope: !16867)
!16902 = !DILocation(line: 877, column: 10, scope: !16867)
!16903 = !DILocation(line: 877, column: 20, scope: !16867)
!16904 = !DILocation(line: 878, column: 3, scope: !16867)
!16905 = !DILocation(line: 878, column: 10, scope: !16867)
!16906 = !DILocation(line: 878, column: 20, scope: !16867)
!16907 = !DILocation(line: 879, column: 3, scope: !16867)
!16908 = !DILocation(line: 879, column: 10, scope: !16867)
!16909 = !DILocation(line: 879, column: 22, scope: !16867)
!16910 = !DILocation(line: 880, column: 3, scope: !16867)
!16911 = !DILocation(line: 880, column: 10, scope: !16867)
!16912 = !DILocation(line: 880, column: 21, scope: !16867)
!16913 = !DILocation(line: 881, column: 3, scope: !16867)
!16914 = !DILocation(line: 881, column: 10, scope: !16867)
!16915 = !DILocation(line: 881, column: 21, scope: !16867)
!16916 = !DILocation(line: 882, column: 3, scope: !16867)
!16917 = !DILocation(line: 882, column: 10, scope: !16867)
!16918 = !DILocation(line: 882, column: 22, scope: !16867)
!16919 = !DILocation(line: 883, column: 3, scope: !16867)
!16920 = !DILocation(line: 883, column: 10, scope: !16867)
!16921 = !DILocation(line: 883, column: 22, scope: !16867)
!16922 = !DILocation(line: 884, column: 3, scope: !16867)
!16923 = !DILocation(line: 884, column: 10, scope: !16867)
!16924 = !DILocation(line: 884, column: 22, scope: !16867)
!16925 = !DILocation(line: 885, column: 3, scope: !16867)
!16926 = !DILocation(line: 885, column: 10, scope: !16867)
!16927 = !DILocation(line: 885, column: 21, scope: !16867)
!16928 = !DILocation(line: 886, column: 3, scope: !16867)
!16929 = !DILocation(line: 889, column: 3, scope: !16867)
!16930 = !DILocation(line: 889, column: 10, scope: !16867)
!16931 = !DILocation(line: 889, column: 20, scope: !16867)
!16932 = !DILocation(line: 890, column: 3, scope: !16867)
!16933 = !DILocation(line: 890, column: 10, scope: !16867)
!16934 = !DILocation(line: 890, column: 20, scope: !16867)
!16935 = !DILocation(line: 891, column: 3, scope: !16867)
!16936 = !DILocation(line: 891, column: 10, scope: !16867)
!16937 = !DILocation(line: 891, column: 20, scope: !16867)
!16938 = !DILocation(line: 892, column: 3, scope: !16867)
!16939 = !DILocation(line: 892, column: 10, scope: !16867)
!16940 = !DILocation(line: 892, column: 22, scope: !16867)
!16941 = !DILocation(line: 893, column: 3, scope: !16867)
!16942 = !DILocation(line: 893, column: 10, scope: !16867)
!16943 = !DILocation(line: 893, column: 21, scope: !16867)
!16944 = !DILocation(line: 894, column: 3, scope: !16867)
!16945 = !DILocation(line: 894, column: 10, scope: !16867)
!16946 = !DILocation(line: 894, column: 21, scope: !16867)
!16947 = !DILocation(line: 895, column: 3, scope: !16867)
!16948 = !DILocation(line: 895, column: 10, scope: !16867)
!16949 = !DILocation(line: 895, column: 22, scope: !16867)
!16950 = !DILocation(line: 896, column: 3, scope: !16867)
!16951 = !DILocation(line: 896, column: 10, scope: !16867)
!16952 = !DILocation(line: 896, column: 22, scope: !16867)
!16953 = !DILocation(line: 897, column: 3, scope: !16867)
!16954 = !DILocation(line: 897, column: 10, scope: !16867)
!16955 = !DILocation(line: 897, column: 22, scope: !16867)
!16956 = !DILocation(line: 898, column: 3, scope: !16867)
!16957 = !DILocation(line: 898, column: 10, scope: !16867)
!16958 = !DILocation(line: 898, column: 21, scope: !16867)
!16959 = !DILocation(line: 899, column: 3, scope: !16867)
!16960 = !DILocation(line: 902, column: 3, scope: !16867)
!16961 = !DILocation(line: 902, column: 10, scope: !16867)
!16962 = !DILocation(line: 902, column: 20, scope: !16867)
!16963 = !DILocation(line: 903, column: 3, scope: !16867)
!16964 = !DILocation(line: 903, column: 10, scope: !16867)
!16965 = !DILocation(line: 903, column: 20, scope: !16867)
!16966 = !DILocation(line: 904, column: 3, scope: !16867)
!16967 = !DILocation(line: 904, column: 10, scope: !16867)
!16968 = !DILocation(line: 904, column: 20, scope: !16867)
!16969 = !DILocation(line: 905, column: 3, scope: !16867)
!16970 = !DILocation(line: 905, column: 10, scope: !16867)
!16971 = !DILocation(line: 905, column: 22, scope: !16867)
!16972 = !DILocation(line: 906, column: 3, scope: !16867)
!16973 = !DILocation(line: 906, column: 10, scope: !16867)
!16974 = !DILocation(line: 906, column: 21, scope: !16867)
!16975 = !DILocation(line: 907, column: 3, scope: !16867)
!16976 = !DILocation(line: 907, column: 10, scope: !16867)
!16977 = !DILocation(line: 907, column: 21, scope: !16867)
!16978 = !DILocation(line: 908, column: 3, scope: !16867)
!16979 = !DILocation(line: 908, column: 10, scope: !16867)
!16980 = !DILocation(line: 908, column: 22, scope: !16867)
!16981 = !DILocation(line: 909, column: 3, scope: !16867)
!16982 = !DILocation(line: 909, column: 10, scope: !16867)
!16983 = !DILocation(line: 909, column: 22, scope: !16867)
!16984 = !DILocation(line: 910, column: 3, scope: !16867)
!16985 = !DILocation(line: 910, column: 10, scope: !16867)
!16986 = !DILocation(line: 910, column: 22, scope: !16867)
!16987 = !DILocation(line: 911, column: 3, scope: !16867)
!16988 = !DILocation(line: 911, column: 10, scope: !16867)
!16989 = !DILocation(line: 911, column: 21, scope: !16867)
!16990 = !DILocation(line: 912, column: 3, scope: !16867)
!16991 = !DILocation(line: 915, column: 3, scope: !16867)
!16992 = !DILocation(line: 915, column: 10, scope: !16867)
!16993 = !DILocation(line: 915, column: 20, scope: !16867)
!16994 = !DILocation(line: 916, column: 3, scope: !16867)
!16995 = !DILocation(line: 916, column: 10, scope: !16867)
!16996 = !DILocation(line: 916, column: 20, scope: !16867)
!16997 = !DILocation(line: 917, column: 3, scope: !16867)
!16998 = !DILocation(line: 917, column: 10, scope: !16867)
!16999 = !DILocation(line: 917, column: 20, scope: !16867)
!17000 = !DILocation(line: 918, column: 3, scope: !16867)
!17001 = !DILocation(line: 918, column: 10, scope: !16867)
!17002 = !DILocation(line: 918, column: 22, scope: !16867)
!17003 = !DILocation(line: 919, column: 3, scope: !16867)
!17004 = !DILocation(line: 919, column: 10, scope: !16867)
!17005 = !DILocation(line: 919, column: 21, scope: !16867)
!17006 = !DILocation(line: 920, column: 3, scope: !16867)
!17007 = !DILocation(line: 920, column: 10, scope: !16867)
!17008 = !DILocation(line: 920, column: 21, scope: !16867)
!17009 = !DILocation(line: 921, column: 3, scope: !16867)
!17010 = !DILocation(line: 921, column: 10, scope: !16867)
!17011 = !DILocation(line: 921, column: 22, scope: !16867)
!17012 = !DILocation(line: 922, column: 3, scope: !16867)
!17013 = !DILocation(line: 922, column: 10, scope: !16867)
!17014 = !DILocation(line: 922, column: 22, scope: !16867)
!17015 = !DILocation(line: 923, column: 3, scope: !16867)
!17016 = !DILocation(line: 923, column: 10, scope: !16867)
!17017 = !DILocation(line: 923, column: 22, scope: !16867)
!17018 = !DILocation(line: 924, column: 3, scope: !16867)
!17019 = !DILocation(line: 924, column: 10, scope: !16867)
!17020 = !DILocation(line: 924, column: 21, scope: !16867)
!17021 = !DILocation(line: 925, column: 3, scope: !16867)
!17022 = !DILocation(line: 928, column: 3, scope: !16867)
!17023 = !DILocation(line: 928, column: 10, scope: !16867)
!17024 = !DILocation(line: 928, column: 20, scope: !16867)
!17025 = !DILocation(line: 929, column: 3, scope: !16867)
!17026 = !DILocation(line: 929, column: 10, scope: !16867)
!17027 = !DILocation(line: 929, column: 20, scope: !16867)
!17028 = !DILocation(line: 930, column: 3, scope: !16867)
!17029 = !DILocation(line: 930, column: 10, scope: !16867)
!17030 = !DILocation(line: 930, column: 20, scope: !16867)
!17031 = !DILocation(line: 931, column: 3, scope: !16867)
!17032 = !DILocation(line: 931, column: 10, scope: !16867)
!17033 = !DILocation(line: 931, column: 22, scope: !16867)
!17034 = !DILocation(line: 932, column: 3, scope: !16867)
!17035 = !DILocation(line: 932, column: 10, scope: !16867)
!17036 = !DILocation(line: 932, column: 21, scope: !16867)
!17037 = !DILocation(line: 933, column: 3, scope: !16867)
!17038 = !DILocation(line: 933, column: 10, scope: !16867)
!17039 = !DILocation(line: 933, column: 21, scope: !16867)
!17040 = !DILocation(line: 934, column: 3, scope: !16867)
!17041 = !DILocation(line: 934, column: 10, scope: !16867)
!17042 = !DILocation(line: 934, column: 22, scope: !16867)
!17043 = !DILocation(line: 935, column: 3, scope: !16867)
!17044 = !DILocation(line: 935, column: 10, scope: !16867)
!17045 = !DILocation(line: 935, column: 22, scope: !16867)
!17046 = !DILocation(line: 936, column: 3, scope: !16867)
!17047 = !DILocation(line: 936, column: 10, scope: !16867)
!17048 = !DILocation(line: 936, column: 22, scope: !16867)
!17049 = !DILocation(line: 937, column: 3, scope: !16867)
!17050 = !DILocation(line: 937, column: 10, scope: !16867)
!17051 = !DILocation(line: 937, column: 21, scope: !16867)
!17052 = !DILocation(line: 938, column: 3, scope: !16867)
!17053 = !DILocation(line: 941, column: 3, scope: !16867)
!17054 = !DILocation(line: 941, column: 10, scope: !16867)
!17055 = !DILocation(line: 941, column: 20, scope: !16867)
!17056 = !DILocation(line: 942, column: 3, scope: !16867)
!17057 = !DILocation(line: 942, column: 10, scope: !16867)
!17058 = !DILocation(line: 942, column: 20, scope: !16867)
!17059 = !DILocation(line: 943, column: 3, scope: !16867)
!17060 = !DILocation(line: 943, column: 10, scope: !16867)
!17061 = !DILocation(line: 943, column: 20, scope: !16867)
!17062 = !DILocation(line: 944, column: 3, scope: !16867)
!17063 = !DILocation(line: 944, column: 10, scope: !16867)
!17064 = !DILocation(line: 944, column: 22, scope: !16867)
!17065 = !DILocation(line: 945, column: 3, scope: !16867)
!17066 = !DILocation(line: 945, column: 10, scope: !16867)
!17067 = !DILocation(line: 945, column: 21, scope: !16867)
!17068 = !DILocation(line: 946, column: 3, scope: !16867)
!17069 = !DILocation(line: 946, column: 10, scope: !16867)
!17070 = !DILocation(line: 946, column: 21, scope: !16867)
!17071 = !DILocation(line: 947, column: 3, scope: !16867)
!17072 = !DILocation(line: 947, column: 10, scope: !16867)
!17073 = !DILocation(line: 947, column: 22, scope: !16867)
!17074 = !DILocation(line: 948, column: 3, scope: !16867)
!17075 = !DILocation(line: 948, column: 10, scope: !16867)
!17076 = !DILocation(line: 948, column: 22, scope: !16867)
!17077 = !DILocation(line: 949, column: 3, scope: !16867)
!17078 = !DILocation(line: 949, column: 10, scope: !16867)
!17079 = !DILocation(line: 949, column: 22, scope: !16867)
!17080 = !DILocation(line: 950, column: 3, scope: !16867)
!17081 = !DILocation(line: 950, column: 10, scope: !16867)
!17082 = !DILocation(line: 950, column: 21, scope: !16867)
!17083 = !DILocation(line: 951, column: 3, scope: !16867)
!17084 = !DILocation(line: 954, column: 3, scope: !16867)
!17085 = !DILocation(line: 954, column: 10, scope: !16867)
!17086 = !DILocation(line: 954, column: 20, scope: !16867)
!17087 = !DILocation(line: 955, column: 3, scope: !16867)
!17088 = !DILocation(line: 955, column: 10, scope: !16867)
!17089 = !DILocation(line: 955, column: 20, scope: !16867)
!17090 = !DILocation(line: 956, column: 3, scope: !16867)
!17091 = !DILocation(line: 956, column: 10, scope: !16867)
!17092 = !DILocation(line: 956, column: 20, scope: !16867)
!17093 = !DILocation(line: 957, column: 3, scope: !16867)
!17094 = !DILocation(line: 957, column: 10, scope: !16867)
!17095 = !DILocation(line: 957, column: 22, scope: !16867)
!17096 = !DILocation(line: 958, column: 3, scope: !16867)
!17097 = !DILocation(line: 958, column: 10, scope: !16867)
!17098 = !DILocation(line: 958, column: 21, scope: !16867)
!17099 = !DILocation(line: 959, column: 3, scope: !16867)
!17100 = !DILocation(line: 959, column: 10, scope: !16867)
!17101 = !DILocation(line: 959, column: 21, scope: !16867)
!17102 = !DILocation(line: 960, column: 3, scope: !16867)
!17103 = !DILocation(line: 960, column: 10, scope: !16867)
!17104 = !DILocation(line: 960, column: 22, scope: !16867)
!17105 = !DILocation(line: 961, column: 3, scope: !16867)
!17106 = !DILocation(line: 961, column: 10, scope: !16867)
!17107 = !DILocation(line: 961, column: 22, scope: !16867)
!17108 = !DILocation(line: 962, column: 3, scope: !16867)
!17109 = !DILocation(line: 962, column: 10, scope: !16867)
!17110 = !DILocation(line: 962, column: 22, scope: !16867)
!17111 = !DILocation(line: 963, column: 3, scope: !16867)
!17112 = !DILocation(line: 963, column: 10, scope: !16867)
!17113 = !DILocation(line: 963, column: 21, scope: !16867)
!17114 = !DILocation(line: 964, column: 3, scope: !16867)
!17115 = !DILocation(line: 966, column: 3, scope: !16867)
!17116 = !DILocation(line: 968, column: 10, scope: !16867)
!17117 = !DILocation(line: 969, column: 3, scope: !16867)
!17118 = !DILocation(line: 972, column: 2, scope: !16760)
!17119 = !DILabel(scope: !16760, name: "error", file: !3, line: 977)
!17120 = !DILocation(line: 977, column: 1, scope: !16760)
!17121 = !DILocation(line: 978, column: 6, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !16760, file: !3, line: 978, column: 6)
!17123 = !DILocation(line: 978, column: 13, scope: !17122)
!17124 = !DILocation(line: 978, column: 6, scope: !16760)
!17125 = !DILocation(line: 979, column: 3, scope: !17122)
!17126 = !DILocation(line: 978, column: 15, scope: !17122)
!17127 = !DILabel(scope: !16760, name: "error2", file: !3, line: 981)
!17128 = !DILocation(line: 981, column: 1, scope: !16760)
!17129 = !DILocation(line: 982, column: 9, scope: !16760)
!17130 = !DILocation(line: 982, column: 2, scope: !16760)
!17131 = !DILocation(line: 983, column: 1, scope: !16760)
!17132 = distinct !DISubprogram(name: "init_hi", scope: !3, file: !3, line: 1070, type: !5239, scopeLine: 1071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!17133 = !DILocalVariable(name: "state", arg: 1, scope: !17132, file: !3, line: 1070, type: !4562)
!17134 = !DILocation(line: 1070, column: 39, scope: !17132)
!17135 = !DILocation(line: 1072, column: 2, scope: !17132)
!17136 = !DILocation(line: 1072, column: 2, scope: !17137)
!17137 = distinct !DILexicalBlock(scope: !17138, file: !3, line: 1072, column: 2)
!17138 = distinct !DILexicalBlock(scope: !17132, file: !3, line: 1072, column: 2)
!17139 = !DILocation(line: 1072, column: 2, scope: !17138)
!17140 = !DILocation(line: 1074, column: 33, scope: !17132)
!17141 = !DILocation(line: 1074, column: 40, scope: !17132)
!17142 = !DILocation(line: 1074, column: 54, scope: !17132)
!17143 = !DILocation(line: 1074, column: 32, scope: !17132)
!17144 = !DILocation(line: 1074, column: 2, scope: !17132)
!17145 = !DILocation(line: 1074, column: 9, scope: !17132)
!17146 = !DILocation(line: 1074, column: 30, scope: !17132)
!17147 = !DILocation(line: 1075, column: 2, scope: !17132)
!17148 = !DILocation(line: 1075, column: 9, scope: !17132)
!17149 = !DILocation(line: 1075, column: 26, scope: !17132)
!17150 = !DILocation(line: 1077, column: 2, scope: !17132)
!17151 = !DILocation(line: 1077, column: 9, scope: !17132)
!17152 = !DILocation(line: 1077, column: 23, scope: !17132)
!17153 = !DILocation(line: 1079, column: 24, scope: !17132)
!17154 = !DILocation(line: 1079, column: 9, scope: !17132)
!17155 = !DILocation(line: 1079, column: 2, scope: !17132)
!17156 = distinct !DISubprogram(name: "mpegts_disable", scope: !3, file: !3, line: 1241, type: !5239, scopeLine: 1242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!17157 = !DILocalVariable(name: "state", arg: 1, scope: !17156, file: !3, line: 1241, type: !4562)
!17158 = !DILocation(line: 1241, column: 46, scope: !17156)
!17159 = !DILocation(line: 1243, column: 2, scope: !17156)
!17160 = !DILocation(line: 1243, column: 2, scope: !17161)
!17161 = distinct !DILexicalBlock(scope: !17162, file: !3, line: 1243, column: 2)
!17162 = distinct !DILexicalBlock(scope: !17156, file: !3, line: 1243, column: 2)
!17163 = !DILocation(line: 1243, column: 2, scope: !17162)
!17164 = !DILocation(line: 1245, column: 31, scope: !17156)
!17165 = !DILocation(line: 1245, column: 9, scope: !17156)
!17166 = !DILocation(line: 1245, column: 2, scope: !17156)
!17167 = distinct !DISubprogram(name: "download_microcode", scope: !3, file: !3, line: 1293, type: !17168, scopeLine: 1295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!17168 = !DISubroutineType(types: !17169)
!17169 = !{!405, !4562, !549, !411}
!17170 = !DILocalVariable(name: "state", arg: 1, scope: !17167, file: !3, line: 1293, type: !4562)
!17171 = !DILocation(line: 1293, column: 50, scope: !17167)
!17172 = !DILocalVariable(name: "p_mc_image", arg: 2, scope: !17167, file: !3, line: 1294, type: !549)
!17173 = !DILocation(line: 1294, column: 18, scope: !17167)
!17174 = !DILocalVariable(name: "length", arg: 3, scope: !17167, file: !3, line: 1294, type: !411)
!17175 = !DILocation(line: 1294, column: 36, scope: !17167)
!17176 = !DILocalVariable(name: "p_src", scope: !17167, file: !3, line: 1296, type: !549)
!17177 = !DILocation(line: 1296, column: 12, scope: !17167)
!17178 = !DILocation(line: 1296, column: 20, scope: !17167)
!17179 = !DILocalVariable(name: "address", scope: !17167, file: !3, line: 1297, type: !411)
!17180 = !DILocation(line: 1297, column: 6, scope: !17167)
!17181 = !DILocalVariable(name: "n_blocks", scope: !17167, file: !3, line: 1298, type: !408)
!17182 = !DILocation(line: 1298, column: 6, scope: !17167)
!17183 = !DILocalVariable(name: "block_size", scope: !17167, file: !3, line: 1299, type: !408)
!17184 = !DILocation(line: 1299, column: 6, scope: !17167)
!17185 = !DILocalVariable(name: "offset", scope: !17167, file: !3, line: 1300, type: !411)
!17186 = !DILocation(line: 1300, column: 6, scope: !17167)
!17187 = !DILocalVariable(name: "i", scope: !17167, file: !3, line: 1301, type: !411)
!17188 = !DILocation(line: 1301, column: 6, scope: !17167)
!17189 = !DILocalVariable(name: "status", scope: !17167, file: !3, line: 1302, type: !405)
!17190 = !DILocation(line: 1302, column: 6, scope: !17167)
!17191 = !DILocation(line: 1304, column: 2, scope: !17167)
!17192 = !DILocation(line: 1304, column: 2, scope: !17193)
!17193 = distinct !DILexicalBlock(scope: !17194, file: !3, line: 1304, column: 2)
!17194 = distinct !DILexicalBlock(scope: !17167, file: !3, line: 1304, column: 2)
!17195 = !DILocation(line: 1304, column: 2, scope: !17194)
!17196 = !DILocation(line: 1311, column: 8, scope: !17167)
!17197 = !DILocation(line: 1312, column: 9, scope: !17167)
!17198 = !DILocation(line: 1313, column: 14, scope: !17167)
!17199 = !DILocation(line: 1313, column: 23, scope: !17167)
!17200 = !DILocation(line: 1313, column: 31, scope: !17167)
!17201 = !DILocation(line: 1313, column: 29, scope: !17167)
!17202 = !DILocation(line: 1313, column: 13, scope: !17167)
!17203 = !DILocation(line: 1313, column: 11, scope: !17167)
!17204 = !DILocation(line: 1314, column: 8, scope: !17167)
!17205 = !DILocation(line: 1315, column: 9, scope: !17167)
!17206 = !DILocation(line: 1317, column: 9, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17167, file: !3, line: 1317, column: 2)
!17208 = !DILocation(line: 1317, column: 7, scope: !17207)
!17209 = !DILocation(line: 1317, column: 14, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17207, file: !3, line: 1317, column: 2)
!17211 = !DILocation(line: 1317, column: 18, scope: !17210)
!17212 = !DILocation(line: 1317, column: 16, scope: !17210)
!17213 = !DILocation(line: 1317, column: 2, scope: !17207)
!17214 = !DILocation(line: 1318, column: 14, scope: !17215)
!17215 = distinct !DILexicalBlock(scope: !17210, file: !3, line: 1317, column: 36)
!17216 = !DILocation(line: 1318, column: 23, scope: !17215)
!17217 = !DILocation(line: 1318, column: 33, scope: !17215)
!17218 = !DILocation(line: 1318, column: 42, scope: !17215)
!17219 = !DILocation(line: 1318, column: 30, scope: !17215)
!17220 = !DILocation(line: 1319, column: 8, scope: !17215)
!17221 = !DILocation(line: 1319, column: 17, scope: !17215)
!17222 = !DILocation(line: 1318, column: 49, scope: !17215)
!17223 = !DILocation(line: 1319, column: 25, scope: !17215)
!17224 = !DILocation(line: 1319, column: 23, scope: !17215)
!17225 = !DILocation(line: 1318, column: 11, scope: !17215)
!17226 = !DILocation(line: 1320, column: 9, scope: !17215)
!17227 = !DILocation(line: 1321, column: 10, scope: !17215)
!17228 = !DILocation(line: 1323, column: 18, scope: !17215)
!17229 = !DILocation(line: 1323, column: 27, scope: !17215)
!17230 = !DILocation(line: 1323, column: 35, scope: !17215)
!17231 = !DILocation(line: 1323, column: 33, scope: !17215)
!17232 = !DILocation(line: 1323, column: 16, scope: !17215)
!17233 = !DILocation(line: 1323, column: 45, scope: !17215)
!17234 = !DILocation(line: 1323, column: 14, scope: !17215)
!17235 = !DILocation(line: 1324, column: 9, scope: !17215)
!17236 = !DILocation(line: 1325, column: 10, scope: !17215)
!17237 = !DILocation(line: 1331, column: 9, scope: !17215)
!17238 = !DILocation(line: 1332, column: 10, scope: !17215)
!17239 = !DILocation(line: 1338, column: 9, scope: !17215)
!17240 = !DILocation(line: 1339, column: 10, scope: !17215)
!17241 = !DILocation(line: 1341, column: 7, scope: !17242)
!17242 = distinct !DILexicalBlock(scope: !17215, file: !3, line: 1341, column: 7)
!17243 = !DILocation(line: 1341, column: 16, scope: !17242)
!17244 = !DILocation(line: 1341, column: 14, scope: !17242)
!17245 = !DILocation(line: 1341, column: 29, scope: !17242)
!17246 = !DILocation(line: 1341, column: 27, scope: !17242)
!17247 = !DILocation(line: 1341, column: 7, scope: !17215)
!17248 = !DILocation(line: 1342, column: 4, scope: !17249)
!17249 = distinct !DILexicalBlock(scope: !17242, file: !3, line: 1341, column: 37)
!17250 = !DILocation(line: 1343, column: 4, scope: !17249)
!17251 = !DILocation(line: 1346, column: 24, scope: !17215)
!17252 = !DILocation(line: 1346, column: 31, scope: !17215)
!17253 = !DILocation(line: 1346, column: 40, scope: !17215)
!17254 = !DILocation(line: 1346, column: 52, scope: !17215)
!17255 = !DILocation(line: 1346, column: 12, scope: !17215)
!17256 = !DILocation(line: 1346, column: 10, scope: !17215)
!17257 = !DILocation(line: 1347, column: 7, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17215, file: !3, line: 1347, column: 7)
!17259 = !DILocation(line: 1347, column: 14, scope: !17258)
!17260 = !DILocation(line: 1347, column: 7, scope: !17215)
!17261 = !DILocation(line: 1348, column: 4, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17258, file: !3, line: 1347, column: 19)
!17263 = !DILocation(line: 1349, column: 4, scope: !17262)
!17264 = !DILocation(line: 1351, column: 12, scope: !17215)
!17265 = !DILocation(line: 1351, column: 9, scope: !17215)
!17266 = !DILocation(line: 1352, column: 13, scope: !17215)
!17267 = !DILocation(line: 1352, column: 10, scope: !17215)
!17268 = !DILocation(line: 1353, column: 2, scope: !17215)
!17269 = !DILocation(line: 1317, column: 30, scope: !17210)
!17270 = !DILocation(line: 1317, column: 2, scope: !17210)
!17271 = distinct !{!17271, !17213, !17272}
!17272 = !DILocation(line: 1353, column: 2, scope: !17207)
!17273 = !DILocation(line: 1354, column: 9, scope: !17167)
!17274 = !DILocation(line: 1354, column: 2, scope: !17167)
!17275 = !DILocation(line: 1355, column: 1, scope: !17167)
!17276 = distinct !DISubprogram(name: "mpegts_dto_init", scope: !3, file: !3, line: 1916, type: !5239, scopeLine: 1917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!17277 = !DILocalVariable(name: "state", arg: 1, scope: !17276, file: !3, line: 1916, type: !4562)
!17278 = !DILocation(line: 1916, column: 47, scope: !17276)
!17279 = !DILocalVariable(name: "status", scope: !17276, file: !3, line: 1918, type: !405)
!17280 = !DILocation(line: 1918, column: 6, scope: !17276)
!17281 = !DILocation(line: 1920, column: 2, scope: !17276)
!17282 = !DILocation(line: 1920, column: 2, scope: !17283)
!17283 = distinct !DILexicalBlock(scope: !17284, file: !3, line: 1920, column: 2)
!17284 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1920, column: 2)
!17285 = !DILocation(line: 1920, column: 2, scope: !17284)
!17286 = !DILocation(line: 1923, column: 19, scope: !17276)
!17287 = !DILocation(line: 1923, column: 11, scope: !17276)
!17288 = !DILocation(line: 1923, column: 9, scope: !17276)
!17289 = !DILocation(line: 1924, column: 6, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1924, column: 6)
!17291 = !DILocation(line: 1924, column: 13, scope: !17290)
!17292 = !DILocation(line: 1924, column: 6, scope: !17276)
!17293 = !DILocation(line: 1925, column: 3, scope: !17290)
!17294 = !DILocation(line: 1926, column: 19, scope: !17276)
!17295 = !DILocation(line: 1926, column: 11, scope: !17276)
!17296 = !DILocation(line: 1926, column: 9, scope: !17276)
!17297 = !DILocation(line: 1927, column: 6, scope: !17298)
!17298 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1927, column: 6)
!17299 = !DILocation(line: 1927, column: 13, scope: !17298)
!17300 = !DILocation(line: 1927, column: 6, scope: !17276)
!17301 = !DILocation(line: 1928, column: 3, scope: !17298)
!17302 = !DILocation(line: 1929, column: 19, scope: !17276)
!17303 = !DILocation(line: 1929, column: 11, scope: !17276)
!17304 = !DILocation(line: 1929, column: 9, scope: !17276)
!17305 = !DILocation(line: 1930, column: 6, scope: !17306)
!17306 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1930, column: 6)
!17307 = !DILocation(line: 1930, column: 13, scope: !17306)
!17308 = !DILocation(line: 1930, column: 6, scope: !17276)
!17309 = !DILocation(line: 1931, column: 3, scope: !17306)
!17310 = !DILocation(line: 1932, column: 19, scope: !17276)
!17311 = !DILocation(line: 1932, column: 11, scope: !17276)
!17312 = !DILocation(line: 1932, column: 9, scope: !17276)
!17313 = !DILocation(line: 1933, column: 6, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1933, column: 6)
!17315 = !DILocation(line: 1933, column: 13, scope: !17314)
!17316 = !DILocation(line: 1933, column: 6, scope: !17276)
!17317 = !DILocation(line: 1934, column: 3, scope: !17314)
!17318 = !DILocation(line: 1935, column: 19, scope: !17276)
!17319 = !DILocation(line: 1935, column: 11, scope: !17276)
!17320 = !DILocation(line: 1935, column: 9, scope: !17276)
!17321 = !DILocation(line: 1936, column: 6, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1936, column: 6)
!17323 = !DILocation(line: 1936, column: 13, scope: !17322)
!17324 = !DILocation(line: 1936, column: 6, scope: !17276)
!17325 = !DILocation(line: 1937, column: 3, scope: !17322)
!17326 = !DILocation(line: 1938, column: 19, scope: !17276)
!17327 = !DILocation(line: 1938, column: 11, scope: !17276)
!17328 = !DILocation(line: 1938, column: 9, scope: !17276)
!17329 = !DILocation(line: 1939, column: 6, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1939, column: 6)
!17331 = !DILocation(line: 1939, column: 13, scope: !17330)
!17332 = !DILocation(line: 1939, column: 6, scope: !17276)
!17333 = !DILocation(line: 1940, column: 3, scope: !17330)
!17334 = !DILocation(line: 1941, column: 19, scope: !17276)
!17335 = !DILocation(line: 1941, column: 11, scope: !17276)
!17336 = !DILocation(line: 1941, column: 9, scope: !17276)
!17337 = !DILocation(line: 1942, column: 6, scope: !17338)
!17338 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1942, column: 6)
!17339 = !DILocation(line: 1942, column: 13, scope: !17338)
!17340 = !DILocation(line: 1942, column: 6, scope: !17276)
!17341 = !DILocation(line: 1943, column: 3, scope: !17338)
!17342 = !DILocation(line: 1944, column: 19, scope: !17276)
!17343 = !DILocation(line: 1944, column: 11, scope: !17276)
!17344 = !DILocation(line: 1944, column: 9, scope: !17276)
!17345 = !DILocation(line: 1945, column: 6, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1945, column: 6)
!17347 = !DILocation(line: 1945, column: 13, scope: !17346)
!17348 = !DILocation(line: 1945, column: 6, scope: !17276)
!17349 = !DILocation(line: 1946, column: 3, scope: !17346)
!17350 = !DILocation(line: 1949, column: 19, scope: !17276)
!17351 = !DILocation(line: 1949, column: 11, scope: !17276)
!17352 = !DILocation(line: 1949, column: 9, scope: !17276)
!17353 = !DILocation(line: 1950, column: 6, scope: !17354)
!17354 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1950, column: 6)
!17355 = !DILocation(line: 1950, column: 13, scope: !17354)
!17356 = !DILocation(line: 1950, column: 6, scope: !17276)
!17357 = !DILocation(line: 1951, column: 3, scope: !17354)
!17358 = !DILocation(line: 1952, column: 19, scope: !17276)
!17359 = !DILocation(line: 1952, column: 11, scope: !17276)
!17360 = !DILocation(line: 1952, column: 9, scope: !17276)
!17361 = !DILocation(line: 1953, column: 6, scope: !17362)
!17362 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1953, column: 6)
!17363 = !DILocation(line: 1953, column: 13, scope: !17362)
!17364 = !DILocation(line: 1953, column: 6, scope: !17276)
!17365 = !DILocation(line: 1954, column: 3, scope: !17362)
!17366 = !DILocation(line: 1955, column: 19, scope: !17276)
!17367 = !DILocation(line: 1955, column: 11, scope: !17276)
!17368 = !DILocation(line: 1955, column: 9, scope: !17276)
!17369 = !DILocation(line: 1955, column: 2, scope: !17276)
!17370 = !DILabel(scope: !17276, name: "error", file: !3, line: 1956)
!17371 = !DILocation(line: 1956, column: 1, scope: !17276)
!17372 = !DILocation(line: 1957, column: 6, scope: !17373)
!17373 = distinct !DILexicalBlock(scope: !17276, file: !3, line: 1957, column: 6)
!17374 = !DILocation(line: 1957, column: 13, scope: !17373)
!17375 = !DILocation(line: 1957, column: 6, scope: !17276)
!17376 = !DILocation(line: 1958, column: 3, scope: !17373)
!17377 = !DILocation(line: 1960, column: 9, scope: !17276)
!17378 = !DILocation(line: 1960, column: 2, scope: !17276)
!17379 = distinct !DISubprogram(name: "mpegts_configure_polarity", scope: !3, file: !3, line: 2100, type: !5239, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!17380 = !DILocalVariable(name: "state", arg: 1, scope: !17379, file: !3, line: 2100, type: !4562)
!17381 = !DILocation(line: 2100, column: 57, scope: !17379)
!17382 = !DILocalVariable(name: "fec_oc_reg_ipr_invert", scope: !17379, file: !3, line: 2102, type: !408)
!17383 = !DILocation(line: 2102, column: 6, scope: !17379)
!17384 = !DILocalVariable(name: "invert_data_mask", scope: !17379, file: !3, line: 2105, type: !408)
!17385 = !DILocation(line: 2105, column: 6, scope: !17379)
!17386 = !DILocation(line: 2111, column: 2, scope: !17379)
!17387 = !DILocation(line: 2111, column: 2, scope: !17388)
!17388 = distinct !DILexicalBlock(scope: !17389, file: !3, line: 2111, column: 2)
!17389 = distinct !DILexicalBlock(scope: !17379, file: !3, line: 2111, column: 2)
!17390 = !DILocation(line: 2111, column: 2, scope: !17389)
!17391 = !DILocation(line: 2114, column: 30, scope: !17379)
!17392 = !DILocation(line: 2114, column: 29, scope: !17379)
!17393 = !DILocation(line: 2114, column: 28, scope: !17379)
!17394 = !DILocation(line: 2114, column: 24, scope: !17379)
!17395 = !DILocation(line: 2115, column: 6, scope: !17396)
!17396 = distinct !DILexicalBlock(scope: !17379, file: !3, line: 2115, column: 6)
!17397 = !DILocation(line: 2115, column: 13, scope: !17396)
!17398 = !DILocation(line: 2115, column: 6, scope: !17379)
!17399 = !DILocation(line: 2116, column: 28, scope: !17396)
!17400 = !DILocation(line: 2116, column: 25, scope: !17396)
!17401 = !DILocation(line: 2116, column: 3, scope: !17396)
!17402 = !DILocation(line: 2117, column: 24, scope: !17379)
!17403 = !DILocation(line: 2118, column: 6, scope: !17404)
!17404 = distinct !DILexicalBlock(scope: !17379, file: !3, line: 2118, column: 6)
!17405 = !DILocation(line: 2118, column: 13, scope: !17404)
!17406 = !DILocation(line: 2118, column: 6, scope: !17379)
!17407 = !DILocation(line: 2119, column: 25, scope: !17404)
!17408 = !DILocation(line: 2119, column: 3, scope: !17404)
!17409 = !DILocation(line: 2120, column: 24, scope: !17379)
!17410 = !DILocation(line: 2121, column: 6, scope: !17411)
!17411 = distinct !DILexicalBlock(scope: !17379, file: !3, line: 2121, column: 6)
!17412 = !DILocation(line: 2121, column: 13, scope: !17411)
!17413 = !DILocation(line: 2121, column: 6, scope: !17379)
!17414 = !DILocation(line: 2122, column: 25, scope: !17411)
!17415 = !DILocation(line: 2122, column: 3, scope: !17411)
!17416 = !DILocation(line: 2123, column: 24, scope: !17379)
!17417 = !DILocation(line: 2124, column: 6, scope: !17418)
!17418 = distinct !DILexicalBlock(scope: !17379, file: !3, line: 2124, column: 6)
!17419 = !DILocation(line: 2124, column: 13, scope: !17418)
!17420 = !DILocation(line: 2124, column: 6, scope: !17379)
!17421 = !DILocation(line: 2125, column: 25, scope: !17418)
!17422 = !DILocation(line: 2125, column: 3, scope: !17418)
!17423 = !DILocation(line: 2126, column: 24, scope: !17379)
!17424 = !DILocation(line: 2127, column: 6, scope: !17425)
!17425 = distinct !DILexicalBlock(scope: !17379, file: !3, line: 2127, column: 6)
!17426 = !DILocation(line: 2127, column: 13, scope: !17425)
!17427 = !DILocation(line: 2127, column: 6, scope: !17379)
!17428 = !DILocation(line: 2128, column: 25, scope: !17425)
!17429 = !DILocation(line: 2128, column: 3, scope: !17425)
!17430 = !DILocation(line: 2130, column: 17, scope: !17379)
!17431 = !DILocation(line: 2130, column: 46, scope: !17379)
!17432 = !DILocation(line: 2130, column: 9, scope: !17379)
!17433 = !DILocation(line: 2130, column: 2, scope: !17379)
!17434 = distinct !DISubprogram(name: "mpegts_configure_pins", scope: !3, file: !3, line: 1082, type: !7485, scopeLine: 1083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!17435 = !DILocalVariable(name: "state", arg: 1, scope: !17434, file: !3, line: 1082, type: !4562)
!17436 = !DILocation(line: 1082, column: 53, scope: !17434)
!17437 = !DILocalVariable(name: "mpeg_enable", arg: 2, scope: !17434, file: !3, line: 1082, type: !406)
!17438 = !DILocation(line: 1082, column: 65, scope: !17434)
!17439 = !DILocalVariable(name: "status", scope: !17434, file: !3, line: 1084, type: !405)
!17440 = !DILocation(line: 1084, column: 6, scope: !17434)
!17441 = !DILocalVariable(name: "sio_pdr_mclk_cfg", scope: !17434, file: !3, line: 1085, type: !408)
!17442 = !DILocation(line: 1085, column: 6, scope: !17434)
!17443 = !DILocalVariable(name: "sio_pdr_mdx_cfg", scope: !17434, file: !3, line: 1086, type: !408)
!17444 = !DILocation(line: 1086, column: 6, scope: !17434)
!17445 = !DILocalVariable(name: "err_cfg", scope: !17434, file: !3, line: 1087, type: !408)
!17446 = !DILocation(line: 1087, column: 6, scope: !17434)
!17447 = !DILocation(line: 1089, column: 2, scope: !17434)
!17448 = !DILocation(line: 1089, column: 2, scope: !17449)
!17449 = distinct !DILexicalBlock(scope: !17450, file: !3, line: 1089, column: 2)
!17450 = distinct !DILexicalBlock(scope: !17434, file: !3, line: 1089, column: 2)
!17451 = !DILocation(line: 1089, column: 2, scope: !17450)
!17452 = !DILocation(line: 1094, column: 19, scope: !17434)
!17453 = !DILocation(line: 1094, column: 11, scope: !17434)
!17454 = !DILocation(line: 1094, column: 9, scope: !17434)
!17455 = !DILocation(line: 1096, column: 6, scope: !17456)
!17456 = distinct !DILexicalBlock(scope: !17434, file: !3, line: 1096, column: 6)
!17457 = !DILocation(line: 1096, column: 13, scope: !17456)
!17458 = !DILocation(line: 1096, column: 6, scope: !17434)
!17459 = !DILocation(line: 1097, column: 3, scope: !17456)
!17460 = !DILocation(line: 1100, column: 19, scope: !17434)
!17461 = !DILocation(line: 1100, column: 11, scope: !17434)
!17462 = !DILocation(line: 1100, column: 9, scope: !17434)
!17463 = !DILocation(line: 1101, column: 6, scope: !17464)
!17464 = distinct !DILexicalBlock(scope: !17434, file: !3, line: 1101, column: 6)
!17465 = !DILocation(line: 1101, column: 13, scope: !17464)
!17466 = !DILocation(line: 1101, column: 6, scope: !17434)
!17467 = !DILocation(line: 1102, column: 3, scope: !17464)
!17468 = !DILocation(line: 1104, column: 7, scope: !17469)
!17469 = distinct !DILexicalBlock(scope: !17434, file: !3, line: 1104, column: 6)
!17470 = !DILocation(line: 1104, column: 6, scope: !17434)
!17471 = !DILocation(line: 1106, column: 20, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17469, file: !3, line: 1104, column: 20)
!17473 = !DILocation(line: 1106, column: 12, scope: !17472)
!17474 = !DILocation(line: 1106, column: 10, scope: !17472)
!17475 = !DILocation(line: 1107, column: 7, scope: !17476)
!17476 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1107, column: 7)
!17477 = !DILocation(line: 1107, column: 14, scope: !17476)
!17478 = !DILocation(line: 1107, column: 7, scope: !17472)
!17479 = !DILocation(line: 1108, column: 4, scope: !17476)
!17480 = !DILocation(line: 1109, column: 20, scope: !17472)
!17481 = !DILocation(line: 1109, column: 12, scope: !17472)
!17482 = !DILocation(line: 1109, column: 10, scope: !17472)
!17483 = !DILocation(line: 1110, column: 7, scope: !17484)
!17484 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1110, column: 7)
!17485 = !DILocation(line: 1110, column: 14, scope: !17484)
!17486 = !DILocation(line: 1110, column: 7, scope: !17472)
!17487 = !DILocation(line: 1111, column: 4, scope: !17484)
!17488 = !DILocation(line: 1112, column: 20, scope: !17472)
!17489 = !DILocation(line: 1112, column: 12, scope: !17472)
!17490 = !DILocation(line: 1112, column: 10, scope: !17472)
!17491 = !DILocation(line: 1113, column: 7, scope: !17492)
!17492 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1113, column: 7)
!17493 = !DILocation(line: 1113, column: 14, scope: !17492)
!17494 = !DILocation(line: 1113, column: 7, scope: !17472)
!17495 = !DILocation(line: 1114, column: 4, scope: !17492)
!17496 = !DILocation(line: 1115, column: 20, scope: !17472)
!17497 = !DILocation(line: 1115, column: 12, scope: !17472)
!17498 = !DILocation(line: 1115, column: 10, scope: !17472)
!17499 = !DILocation(line: 1116, column: 7, scope: !17500)
!17500 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1116, column: 7)
!17501 = !DILocation(line: 1116, column: 14, scope: !17500)
!17502 = !DILocation(line: 1116, column: 7, scope: !17472)
!17503 = !DILocation(line: 1117, column: 4, scope: !17500)
!17504 = !DILocation(line: 1118, column: 20, scope: !17472)
!17505 = !DILocation(line: 1118, column: 12, scope: !17472)
!17506 = !DILocation(line: 1118, column: 10, scope: !17472)
!17507 = !DILocation(line: 1119, column: 7, scope: !17508)
!17508 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1119, column: 7)
!17509 = !DILocation(line: 1119, column: 14, scope: !17508)
!17510 = !DILocation(line: 1119, column: 7, scope: !17472)
!17511 = !DILocation(line: 1120, column: 4, scope: !17508)
!17512 = !DILocation(line: 1121, column: 20, scope: !17472)
!17513 = !DILocation(line: 1121, column: 12, scope: !17472)
!17514 = !DILocation(line: 1121, column: 10, scope: !17472)
!17515 = !DILocation(line: 1122, column: 7, scope: !17516)
!17516 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1122, column: 7)
!17517 = !DILocation(line: 1122, column: 14, scope: !17516)
!17518 = !DILocation(line: 1122, column: 7, scope: !17472)
!17519 = !DILocation(line: 1123, column: 4, scope: !17516)
!17520 = !DILocation(line: 1124, column: 20, scope: !17472)
!17521 = !DILocation(line: 1124, column: 12, scope: !17472)
!17522 = !DILocation(line: 1124, column: 10, scope: !17472)
!17523 = !DILocation(line: 1125, column: 7, scope: !17524)
!17524 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1125, column: 7)
!17525 = !DILocation(line: 1125, column: 14, scope: !17524)
!17526 = !DILocation(line: 1125, column: 7, scope: !17472)
!17527 = !DILocation(line: 1126, column: 4, scope: !17524)
!17528 = !DILocation(line: 1127, column: 20, scope: !17472)
!17529 = !DILocation(line: 1127, column: 12, scope: !17472)
!17530 = !DILocation(line: 1127, column: 10, scope: !17472)
!17531 = !DILocation(line: 1128, column: 7, scope: !17532)
!17532 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1128, column: 7)
!17533 = !DILocation(line: 1128, column: 14, scope: !17532)
!17534 = !DILocation(line: 1128, column: 7, scope: !17472)
!17535 = !DILocation(line: 1129, column: 4, scope: !17532)
!17536 = !DILocation(line: 1130, column: 20, scope: !17472)
!17537 = !DILocation(line: 1130, column: 12, scope: !17472)
!17538 = !DILocation(line: 1130, column: 10, scope: !17472)
!17539 = !DILocation(line: 1131, column: 7, scope: !17540)
!17540 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1131, column: 7)
!17541 = !DILocation(line: 1131, column: 14, scope: !17540)
!17542 = !DILocation(line: 1131, column: 7, scope: !17472)
!17543 = !DILocation(line: 1132, column: 4, scope: !17540)
!17544 = !DILocation(line: 1133, column: 20, scope: !17472)
!17545 = !DILocation(line: 1133, column: 12, scope: !17472)
!17546 = !DILocation(line: 1133, column: 10, scope: !17472)
!17547 = !DILocation(line: 1134, column: 7, scope: !17548)
!17548 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1134, column: 7)
!17549 = !DILocation(line: 1134, column: 14, scope: !17548)
!17550 = !DILocation(line: 1134, column: 7, scope: !17472)
!17551 = !DILocation(line: 1135, column: 4, scope: !17548)
!17552 = !DILocation(line: 1136, column: 20, scope: !17472)
!17553 = !DILocation(line: 1136, column: 12, scope: !17472)
!17554 = !DILocation(line: 1136, column: 10, scope: !17472)
!17555 = !DILocation(line: 1137, column: 7, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1137, column: 7)
!17557 = !DILocation(line: 1137, column: 14, scope: !17556)
!17558 = !DILocation(line: 1137, column: 7, scope: !17472)
!17559 = !DILocation(line: 1138, column: 4, scope: !17556)
!17560 = !DILocation(line: 1139, column: 20, scope: !17472)
!17561 = !DILocation(line: 1139, column: 12, scope: !17472)
!17562 = !DILocation(line: 1139, column: 10, scope: !17472)
!17563 = !DILocation(line: 1140, column: 7, scope: !17564)
!17564 = distinct !DILexicalBlock(scope: !17472, file: !3, line: 1140, column: 7)
!17565 = !DILocation(line: 1140, column: 14, scope: !17564)
!17566 = !DILocation(line: 1140, column: 7, scope: !17472)
!17567 = !DILocation(line: 1141, column: 4, scope: !17564)
!17568 = !DILocation(line: 1142, column: 2, scope: !17472)
!17569 = !DILocation(line: 1145, column: 6, scope: !17570)
!17570 = distinct !DILexicalBlock(scope: !17469, file: !3, line: 1142, column: 9)
!17571 = !DILocation(line: 1145, column: 13, scope: !17570)
!17572 = !DILocation(line: 1145, column: 32, scope: !17570)
!17573 = !DILocation(line: 1146, column: 30, scope: !17570)
!17574 = !DILocation(line: 1145, column: 4, scope: !17570)
!17575 = !DILocation(line: 1144, column: 19, scope: !17570)
!17576 = !DILocation(line: 1147, column: 24, scope: !17570)
!17577 = !DILocation(line: 1147, column: 31, scope: !17570)
!17578 = !DILocation(line: 1147, column: 52, scope: !17570)
!17579 = !DILocation(line: 1148, column: 33, scope: !17570)
!17580 = !DILocation(line: 1147, column: 22, scope: !17570)
!17581 = !DILocation(line: 1147, column: 20, scope: !17570)
!17582 = !DILocation(line: 1151, column: 20, scope: !17570)
!17583 = !DILocation(line: 1151, column: 49, scope: !17570)
!17584 = !DILocation(line: 1151, column: 12, scope: !17570)
!17585 = !DILocation(line: 1151, column: 10, scope: !17570)
!17586 = !DILocation(line: 1152, column: 7, scope: !17587)
!17587 = distinct !DILexicalBlock(scope: !17570, file: !3, line: 1152, column: 7)
!17588 = !DILocation(line: 1152, column: 14, scope: !17587)
!17589 = !DILocation(line: 1152, column: 7, scope: !17570)
!17590 = !DILocation(line: 1153, column: 4, scope: !17587)
!17591 = !DILocation(line: 1155, column: 7, scope: !17592)
!17592 = distinct !DILexicalBlock(scope: !17570, file: !3, line: 1155, column: 7)
!17593 = !DILocation(line: 1155, column: 14, scope: !17592)
!17594 = !DILocation(line: 1155, column: 7, scope: !17570)
!17595 = !DILocation(line: 1156, column: 14, scope: !17592)
!17596 = !DILocation(line: 1156, column: 12, scope: !17592)
!17597 = !DILocation(line: 1156, column: 4, scope: !17592)
!17598 = !DILocation(line: 1158, column: 20, scope: !17570)
!17599 = !DILocation(line: 1158, column: 48, scope: !17570)
!17600 = !DILocation(line: 1158, column: 12, scope: !17570)
!17601 = !DILocation(line: 1158, column: 10, scope: !17570)
!17602 = !DILocation(line: 1159, column: 7, scope: !17603)
!17603 = distinct !DILexicalBlock(scope: !17570, file: !3, line: 1159, column: 7)
!17604 = !DILocation(line: 1159, column: 14, scope: !17603)
!17605 = !DILocation(line: 1159, column: 7, scope: !17570)
!17606 = !DILocation(line: 1160, column: 4, scope: !17603)
!17607 = !DILocation(line: 1161, column: 20, scope: !17570)
!17608 = !DILocation(line: 1161, column: 48, scope: !17570)
!17609 = !DILocation(line: 1161, column: 12, scope: !17570)
!17610 = !DILocation(line: 1161, column: 10, scope: !17570)
!17611 = !DILocation(line: 1162, column: 7, scope: !17612)
!17612 = distinct !DILexicalBlock(scope: !17570, file: !3, line: 1162, column: 7)
!17613 = !DILocation(line: 1162, column: 14, scope: !17612)
!17614 = !DILocation(line: 1162, column: 7, scope: !17570)
!17615 = !DILocation(line: 1163, column: 4, scope: !17612)
!17616 = !DILocation(line: 1165, column: 7, scope: !17617)
!17617 = distinct !DILexicalBlock(scope: !17570, file: !3, line: 1165, column: 7)
!17618 = !DILocation(line: 1165, column: 14, scope: !17617)
!17619 = !DILocation(line: 1165, column: 7, scope: !17570)
!17620 = !DILocation(line: 1167, column: 21, scope: !17621)
!17621 = distinct !DILexicalBlock(scope: !17617, file: !3, line: 1165, column: 33)
!17622 = !DILocation(line: 1168, column: 7, scope: !17621)
!17623 = !DILocation(line: 1167, column: 13, scope: !17621)
!17624 = !DILocation(line: 1167, column: 11, scope: !17621)
!17625 = !DILocation(line: 1169, column: 8, scope: !17626)
!17626 = distinct !DILexicalBlock(scope: !17621, file: !3, line: 1169, column: 8)
!17627 = !DILocation(line: 1169, column: 15, scope: !17626)
!17628 = !DILocation(line: 1169, column: 8, scope: !17621)
!17629 = !DILocation(line: 1170, column: 5, scope: !17626)
!17630 = !DILocation(line: 1171, column: 21, scope: !17621)
!17631 = !DILocation(line: 1172, column: 7, scope: !17621)
!17632 = !DILocation(line: 1171, column: 13, scope: !17621)
!17633 = !DILocation(line: 1171, column: 11, scope: !17621)
!17634 = !DILocation(line: 1173, column: 8, scope: !17635)
!17635 = distinct !DILexicalBlock(scope: !17621, file: !3, line: 1173, column: 8)
!17636 = !DILocation(line: 1173, column: 15, scope: !17635)
!17637 = !DILocation(line: 1173, column: 8, scope: !17621)
!17638 = !DILocation(line: 1174, column: 5, scope: !17635)
!17639 = !DILocation(line: 1175, column: 21, scope: !17621)
!17640 = !DILocation(line: 1176, column: 7, scope: !17621)
!17641 = !DILocation(line: 1175, column: 13, scope: !17621)
!17642 = !DILocation(line: 1175, column: 11, scope: !17621)
!17643 = !DILocation(line: 1177, column: 8, scope: !17644)
!17644 = distinct !DILexicalBlock(scope: !17621, file: !3, line: 1177, column: 8)
!17645 = !DILocation(line: 1177, column: 15, scope: !17644)
!17646 = !DILocation(line: 1177, column: 8, scope: !17621)
!17647 = !DILocation(line: 1178, column: 5, scope: !17644)
!17648 = !DILocation(line: 1179, column: 21, scope: !17621)
!17649 = !DILocation(line: 1180, column: 7, scope: !17621)
!17650 = !DILocation(line: 1179, column: 13, scope: !17621)
!17651 = !DILocation(line: 1179, column: 11, scope: !17621)
!17652 = !DILocation(line: 1181, column: 8, scope: !17653)
!17653 = distinct !DILexicalBlock(scope: !17621, file: !3, line: 1181, column: 8)
!17654 = !DILocation(line: 1181, column: 15, scope: !17653)
!17655 = !DILocation(line: 1181, column: 8, scope: !17621)
!17656 = !DILocation(line: 1182, column: 5, scope: !17653)
!17657 = !DILocation(line: 1183, column: 21, scope: !17621)
!17658 = !DILocation(line: 1184, column: 7, scope: !17621)
!17659 = !DILocation(line: 1183, column: 13, scope: !17621)
!17660 = !DILocation(line: 1183, column: 11, scope: !17621)
!17661 = !DILocation(line: 1185, column: 8, scope: !17662)
!17662 = distinct !DILexicalBlock(scope: !17621, file: !3, line: 1185, column: 8)
!17663 = !DILocation(line: 1185, column: 15, scope: !17662)
!17664 = !DILocation(line: 1185, column: 8, scope: !17621)
!17665 = !DILocation(line: 1186, column: 5, scope: !17662)
!17666 = !DILocation(line: 1187, column: 21, scope: !17621)
!17667 = !DILocation(line: 1188, column: 7, scope: !17621)
!17668 = !DILocation(line: 1187, column: 13, scope: !17621)
!17669 = !DILocation(line: 1187, column: 11, scope: !17621)
!17670 = !DILocation(line: 1189, column: 8, scope: !17671)
!17671 = distinct !DILexicalBlock(scope: !17621, file: !3, line: 1189, column: 8)
!17672 = !DILocation(line: 1189, column: 15, scope: !17671)
!17673 = !DILocation(line: 1189, column: 8, scope: !17621)
!17674 = !DILocation(line: 1190, column: 5, scope: !17671)
!17675 = !DILocation(line: 1191, column: 21, scope: !17621)
!17676 = !DILocation(line: 1192, column: 7, scope: !17621)
!17677 = !DILocation(line: 1191, column: 13, scope: !17621)
!17678 = !DILocation(line: 1191, column: 11, scope: !17621)
!17679 = !DILocation(line: 1193, column: 8, scope: !17680)
!17680 = distinct !DILexicalBlock(scope: !17621, file: !3, line: 1193, column: 8)
!17681 = !DILocation(line: 1193, column: 15, scope: !17680)
!17682 = !DILocation(line: 1193, column: 8, scope: !17621)
!17683 = !DILocation(line: 1194, column: 5, scope: !17680)
!17684 = !DILocation(line: 1195, column: 3, scope: !17621)
!17685 = !DILocation(line: 1196, column: 24, scope: !17686)
!17686 = distinct !DILexicalBlock(scope: !17617, file: !3, line: 1195, column: 10)
!17687 = !DILocation(line: 1196, column: 31, scope: !17686)
!17688 = !DILocation(line: 1196, column: 50, scope: !17686)
!17689 = !DILocation(line: 1198, column: 6, scope: !17686)
!17690 = !DILocation(line: 1196, column: 22, scope: !17686)
!17691 = !DILocation(line: 1196, column: 20, scope: !17686)
!17692 = !DILocation(line: 1200, column: 21, scope: !17686)
!17693 = !DILocation(line: 1200, column: 13, scope: !17686)
!17694 = !DILocation(line: 1200, column: 11, scope: !17686)
!17695 = !DILocation(line: 1201, column: 8, scope: !17696)
!17696 = distinct !DILexicalBlock(scope: !17686, file: !3, line: 1201, column: 8)
!17697 = !DILocation(line: 1201, column: 15, scope: !17696)
!17698 = !DILocation(line: 1201, column: 8, scope: !17686)
!17699 = !DILocation(line: 1202, column: 5, scope: !17696)
!17700 = !DILocation(line: 1203, column: 21, scope: !17686)
!17701 = !DILocation(line: 1203, column: 13, scope: !17686)
!17702 = !DILocation(line: 1203, column: 11, scope: !17686)
!17703 = !DILocation(line: 1204, column: 8, scope: !17704)
!17704 = distinct !DILexicalBlock(scope: !17686, file: !3, line: 1204, column: 8)
!17705 = !DILocation(line: 1204, column: 15, scope: !17704)
!17706 = !DILocation(line: 1204, column: 8, scope: !17686)
!17707 = !DILocation(line: 1205, column: 5, scope: !17704)
!17708 = !DILocation(line: 1206, column: 21, scope: !17686)
!17709 = !DILocation(line: 1206, column: 13, scope: !17686)
!17710 = !DILocation(line: 1206, column: 11, scope: !17686)
!17711 = !DILocation(line: 1207, column: 8, scope: !17712)
!17712 = distinct !DILexicalBlock(scope: !17686, file: !3, line: 1207, column: 8)
!17713 = !DILocation(line: 1207, column: 15, scope: !17712)
!17714 = !DILocation(line: 1207, column: 8, scope: !17686)
!17715 = !DILocation(line: 1208, column: 5, scope: !17712)
!17716 = !DILocation(line: 1209, column: 21, scope: !17686)
!17717 = !DILocation(line: 1209, column: 13, scope: !17686)
!17718 = !DILocation(line: 1209, column: 11, scope: !17686)
!17719 = !DILocation(line: 1210, column: 8, scope: !17720)
!17720 = distinct !DILexicalBlock(scope: !17686, file: !3, line: 1210, column: 8)
!17721 = !DILocation(line: 1210, column: 15, scope: !17720)
!17722 = !DILocation(line: 1210, column: 8, scope: !17686)
!17723 = !DILocation(line: 1211, column: 5, scope: !17720)
!17724 = !DILocation(line: 1212, column: 21, scope: !17686)
!17725 = !DILocation(line: 1212, column: 13, scope: !17686)
!17726 = !DILocation(line: 1212, column: 11, scope: !17686)
!17727 = !DILocation(line: 1213, column: 8, scope: !17728)
!17728 = distinct !DILexicalBlock(scope: !17686, file: !3, line: 1213, column: 8)
!17729 = !DILocation(line: 1213, column: 15, scope: !17728)
!17730 = !DILocation(line: 1213, column: 8, scope: !17686)
!17731 = !DILocation(line: 1214, column: 5, scope: !17728)
!17732 = !DILocation(line: 1215, column: 21, scope: !17686)
!17733 = !DILocation(line: 1215, column: 13, scope: !17686)
!17734 = !DILocation(line: 1215, column: 11, scope: !17686)
!17735 = !DILocation(line: 1216, column: 8, scope: !17736)
!17736 = distinct !DILexicalBlock(scope: !17686, file: !3, line: 1216, column: 8)
!17737 = !DILocation(line: 1216, column: 15, scope: !17736)
!17738 = !DILocation(line: 1216, column: 8, scope: !17686)
!17739 = !DILocation(line: 1217, column: 5, scope: !17736)
!17740 = !DILocation(line: 1218, column: 21, scope: !17686)
!17741 = !DILocation(line: 1218, column: 13, scope: !17686)
!17742 = !DILocation(line: 1218, column: 11, scope: !17686)
!17743 = !DILocation(line: 1219, column: 8, scope: !17744)
!17744 = distinct !DILexicalBlock(scope: !17686, file: !3, line: 1219, column: 8)
!17745 = !DILocation(line: 1219, column: 15, scope: !17744)
!17746 = !DILocation(line: 1219, column: 8, scope: !17686)
!17747 = !DILocation(line: 1220, column: 5, scope: !17744)
!17748 = !DILocation(line: 1222, column: 20, scope: !17570)
!17749 = !DILocation(line: 1222, column: 48, scope: !17570)
!17750 = !DILocation(line: 1222, column: 12, scope: !17570)
!17751 = !DILocation(line: 1222, column: 10, scope: !17570)
!17752 = !DILocation(line: 1223, column: 7, scope: !17753)
!17753 = distinct !DILexicalBlock(scope: !17570, file: !3, line: 1223, column: 7)
!17754 = !DILocation(line: 1223, column: 14, scope: !17753)
!17755 = !DILocation(line: 1223, column: 7, scope: !17570)
!17756 = !DILocation(line: 1224, column: 4, scope: !17753)
!17757 = !DILocation(line: 1225, column: 20, scope: !17570)
!17758 = !DILocation(line: 1225, column: 47, scope: !17570)
!17759 = !DILocation(line: 1225, column: 12, scope: !17570)
!17760 = !DILocation(line: 1225, column: 10, scope: !17570)
!17761 = !DILocation(line: 1226, column: 7, scope: !17762)
!17762 = distinct !DILexicalBlock(scope: !17570, file: !3, line: 1226, column: 7)
!17763 = !DILocation(line: 1226, column: 14, scope: !17762)
!17764 = !DILocation(line: 1226, column: 7, scope: !17570)
!17765 = !DILocation(line: 1227, column: 4, scope: !17762)
!17766 = !DILocation(line: 1230, column: 19, scope: !17434)
!17767 = !DILocation(line: 1230, column: 11, scope: !17434)
!17768 = !DILocation(line: 1230, column: 9, scope: !17434)
!17769 = !DILocation(line: 1231, column: 6, scope: !17770)
!17770 = distinct !DILexicalBlock(scope: !17434, file: !3, line: 1231, column: 6)
!17771 = !DILocation(line: 1231, column: 13, scope: !17770)
!17772 = !DILocation(line: 1231, column: 6, scope: !17434)
!17773 = !DILocation(line: 1232, column: 3, scope: !17770)
!17774 = !DILocation(line: 1234, column: 19, scope: !17434)
!17775 = !DILocation(line: 1234, column: 11, scope: !17434)
!17776 = !DILocation(line: 1234, column: 9, scope: !17434)
!17777 = !DILocation(line: 1234, column: 2, scope: !17434)
!17778 = !DILabel(scope: !17434, name: "error", file: !3, line: 1235)
!17779 = !DILocation(line: 1235, column: 1, scope: !17434)
!17780 = !DILocation(line: 1236, column: 6, scope: !17781)
!17781 = distinct !DILexicalBlock(scope: !17434, file: !3, line: 1236, column: 6)
!17782 = !DILocation(line: 1236, column: 13, scope: !17781)
!17783 = !DILocation(line: 1236, column: 6, scope: !17434)
!17784 = !DILocation(line: 1237, column: 3, scope: !17781)
!17785 = !DILocation(line: 1238, column: 9, scope: !17434)
!17786 = !DILocation(line: 1238, column: 2, scope: !17434)
!17787 = distinct !DISubprogram(name: "power_down_device", scope: !3, file: !3, line: 5992, type: !5239, scopeLine: 5993, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!17788 = !DILocalVariable(name: "state", arg: 1, scope: !17787, file: !3, line: 5992, type: !4562)
!17789 = !DILocation(line: 5992, column: 49, scope: !17787)
!17790 = !DILocalVariable(name: "status", scope: !17787, file: !3, line: 6000, type: !405)
!17791 = !DILocation(line: 6000, column: 6, scope: !17787)
!17792 = !DILocation(line: 6002, column: 2, scope: !17787)
!17793 = !DILocation(line: 6002, column: 2, scope: !17794)
!17794 = distinct !DILexicalBlock(scope: !17795, file: !3, line: 6002, column: 2)
!17795 = distinct !DILexicalBlock(scope: !17787, file: !3, line: 6002, column: 2)
!17796 = !DILocation(line: 6002, column: 2, scope: !17795)
!17797 = !DILocation(line: 6003, column: 6, scope: !17798)
!17798 = distinct !DILexicalBlock(scope: !17787, file: !3, line: 6003, column: 6)
!17799 = !DILocation(line: 6003, column: 13, scope: !17798)
!17800 = !DILocation(line: 6003, column: 6, scope: !17787)
!17801 = !DILocation(line: 6005, column: 31, scope: !17802)
!17802 = distinct !DILexicalBlock(scope: !17798, file: !3, line: 6003, column: 37)
!17803 = !DILocation(line: 6005, column: 12, scope: !17802)
!17804 = !DILocation(line: 6005, column: 10, scope: !17802)
!17805 = !DILocation(line: 6006, column: 7, scope: !17806)
!17806 = distinct !DILexicalBlock(scope: !17802, file: !3, line: 6006, column: 7)
!17807 = !DILocation(line: 6006, column: 14, scope: !17806)
!17808 = !DILocation(line: 6006, column: 7, scope: !17802)
!17809 = !DILocation(line: 6007, column: 4, scope: !17806)
!17810 = !DILocation(line: 6008, column: 2, scope: !17802)
!17811 = !DILocation(line: 6010, column: 39, scope: !17787)
!17812 = !DILocation(line: 6010, column: 11, scope: !17787)
!17813 = !DILocation(line: 6010, column: 9, scope: !17787)
!17814 = !DILocation(line: 6011, column: 6, scope: !17815)
!17815 = distinct !DILexicalBlock(scope: !17787, file: !3, line: 6011, column: 6)
!17816 = !DILocation(line: 6011, column: 13, scope: !17815)
!17817 = !DILocation(line: 6011, column: 6, scope: !17787)
!17818 = !DILocation(line: 6012, column: 3, scope: !17815)
!17819 = !DILocation(line: 6014, column: 19, scope: !17787)
!17820 = !DILocation(line: 6014, column: 11, scope: !17787)
!17821 = !DILocation(line: 6014, column: 9, scope: !17787)
!17822 = !DILocation(line: 6016, column: 6, scope: !17823)
!17823 = distinct !DILexicalBlock(scope: !17787, file: !3, line: 6016, column: 6)
!17824 = !DILocation(line: 6016, column: 13, scope: !17823)
!17825 = !DILocation(line: 6016, column: 6, scope: !17787)
!17826 = !DILocation(line: 6017, column: 3, scope: !17823)
!17827 = !DILocation(line: 6018, column: 19, scope: !17787)
!17828 = !DILocation(line: 6018, column: 11, scope: !17787)
!17829 = !DILocation(line: 6018, column: 9, scope: !17787)
!17830 = !DILocation(line: 6019, column: 6, scope: !17831)
!17831 = distinct !DILexicalBlock(scope: !17787, file: !3, line: 6019, column: 6)
!17832 = !DILocation(line: 6019, column: 13, scope: !17831)
!17833 = !DILocation(line: 6019, column: 6, scope: !17787)
!17834 = !DILocation(line: 6020, column: 3, scope: !17831)
!17835 = !DILocation(line: 6021, column: 2, scope: !17787)
!17836 = !DILocation(line: 6021, column: 9, scope: !17787)
!17837 = !DILocation(line: 6021, column: 23, scope: !17787)
!17838 = !DILocation(line: 6022, column: 26, scope: !17787)
!17839 = !DILocation(line: 6022, column: 11, scope: !17787)
!17840 = !DILocation(line: 6022, column: 9, scope: !17787)
!17841 = !DILocation(line: 6022, column: 2, scope: !17787)
!17842 = !DILabel(scope: !17787, name: "error", file: !3, line: 6023)
!17843 = !DILocation(line: 6023, column: 1, scope: !17787)
!17844 = !DILocation(line: 6024, column: 6, scope: !17845)
!17845 = distinct !DILexicalBlock(scope: !17787, file: !3, line: 6024, column: 6)
!17846 = !DILocation(line: 6024, column: 13, scope: !17845)
!17847 = !DILocation(line: 6024, column: 6, scope: !17787)
!17848 = !DILocation(line: 6025, column: 3, scope: !17845)
!17849 = !DILocation(line: 6027, column: 9, scope: !17787)
!17850 = !DILocation(line: 6027, column: 2, scope: !17787)
!17851 = distinct !DISubprogram(name: "drxk_i2c_unlock", scope: !3, file: !3, line: 199, type: !17852, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!17852 = !DISubroutineType(types: !17853)
!17853 = !{null, !4562}
!17854 = !DILocalVariable(name: "state", arg: 1, scope: !17851, file: !3, line: 199, type: !4562)
!17855 = !DILocation(line: 199, column: 48, scope: !17851)
!17856 = !DILocation(line: 201, column: 7, scope: !17857)
!17857 = distinct !DILexicalBlock(scope: !17851, file: !3, line: 201, column: 6)
!17858 = !DILocation(line: 201, column: 14, scope: !17857)
!17859 = !DILocation(line: 201, column: 6, scope: !17851)
!17860 = !DILocation(line: 202, column: 3, scope: !17857)
!17861 = !DILocation(line: 204, column: 17, scope: !17851)
!17862 = !DILocation(line: 204, column: 24, scope: !17851)
!17863 = !DILocation(line: 204, column: 2, scope: !17851)
!17864 = !DILocation(line: 205, column: 2, scope: !17851)
!17865 = !DILocation(line: 205, column: 9, scope: !17851)
!17866 = !DILocation(line: 205, column: 33, scope: !17851)
!17867 = !DILocation(line: 206, column: 1, scope: !17851)
!17868 = distinct !DISubprogram(name: "i2c_lock_bus", scope: !4402, file: !4402, line: 763, type: !4451, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!17869 = !DILocalVariable(name: "adapter", arg: 1, scope: !17868, file: !4402, line: 763, type: !4400)
!17870 = !DILocation(line: 763, column: 34, scope: !17868)
!17871 = !DILocalVariable(name: "flags", arg: 2, scope: !17868, file: !4402, line: 763, type: !7)
!17872 = !DILocation(line: 763, column: 56, scope: !17868)
!17873 = !DILocation(line: 765, column: 2, scope: !17868)
!17874 = !DILocation(line: 765, column: 11, scope: !17868)
!17875 = !DILocation(line: 765, column: 21, scope: !17868)
!17876 = !DILocation(line: 765, column: 30, scope: !17868)
!17877 = !DILocation(line: 765, column: 39, scope: !17868)
!17878 = !DILocation(line: 766, column: 1, scope: !17868)
!17879 = distinct !DISubprogram(name: "read32", scope: !3, file: !3, line: 347, type: !17880, scopeLine: 348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!17880 = !DISubroutineType(types: !17881)
!17881 = !{!405, !4562, !411, !664}
!17882 = !DILocalVariable(name: "state", arg: 1, scope: !17879, file: !3, line: 347, type: !4562)
!17883 = !DILocation(line: 347, column: 38, scope: !17879)
!17884 = !DILocalVariable(name: "reg", arg: 2, scope: !17879, file: !3, line: 347, type: !411)
!17885 = !DILocation(line: 347, column: 49, scope: !17879)
!17886 = !DILocalVariable(name: "data", arg: 3, scope: !17879, file: !3, line: 347, type: !664)
!17887 = !DILocation(line: 347, column: 59, scope: !17879)
!17888 = !DILocation(line: 349, column: 22, scope: !17879)
!17889 = !DILocation(line: 349, column: 29, scope: !17879)
!17890 = !DILocation(line: 349, column: 34, scope: !17879)
!17891 = !DILocation(line: 349, column: 9, scope: !17879)
!17892 = !DILocation(line: 349, column: 2, scope: !17879)
!17893 = distinct !DISubprogram(name: "read32_flags", scope: !3, file: !3, line: 317, type: !17894, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!17894 = !DISubroutineType(types: !17895)
!17895 = !{!405, !4562, !411, !664, !455}
!17896 = !DILocalVariable(name: "state", arg: 1, scope: !17893, file: !3, line: 317, type: !4562)
!17897 = !DILocation(line: 317, column: 44, scope: !17893)
!17898 = !DILocalVariable(name: "reg", arg: 2, scope: !17893, file: !3, line: 317, type: !411)
!17899 = !DILocation(line: 317, column: 55, scope: !17893)
!17900 = !DILocalVariable(name: "data", arg: 3, scope: !17893, file: !3, line: 317, type: !664)
!17901 = !DILocation(line: 317, column: 65, scope: !17893)
!17902 = !DILocalVariable(name: "flags", arg: 4, scope: !17893, file: !3, line: 317, type: !455)
!17903 = !DILocation(line: 317, column: 74, scope: !17893)
!17904 = !DILocalVariable(name: "status", scope: !17893, file: !3, line: 319, type: !405)
!17905 = !DILocation(line: 319, column: 6, scope: !17893)
!17906 = !DILocalVariable(name: "adr", scope: !17893, file: !3, line: 320, type: !455)
!17907 = !DILocation(line: 320, column: 5, scope: !17893)
!17908 = !DILocation(line: 320, column: 11, scope: !17893)
!17909 = !DILocation(line: 320, column: 18, scope: !17893)
!17910 = !DILocalVariable(name: "mm1", scope: !17893, file: !3, line: 320, type: !6847)
!17911 = !DILocation(line: 320, column: 33, scope: !17893)
!17912 = !DILocalVariable(name: "mm2", scope: !17893, file: !3, line: 320, type: !6847)
!17913 = !DILocation(line: 320, column: 41, scope: !17893)
!17914 = !DILocalVariable(name: "len", scope: !17893, file: !3, line: 320, type: !455)
!17915 = !DILocation(line: 320, column: 49, scope: !17893)
!17916 = !DILocation(line: 322, column: 6, scope: !17917)
!17917 = distinct !DILexicalBlock(scope: !17893, file: !3, line: 322, column: 6)
!17918 = !DILocation(line: 322, column: 13, scope: !17917)
!17919 = !DILocation(line: 322, column: 6, scope: !17893)
!17920 = !DILocation(line: 323, column: 9, scope: !17917)
!17921 = !DILocation(line: 323, column: 3, scope: !17917)
!17922 = !DILocation(line: 325, column: 6, scope: !17923)
!17923 = distinct !DILexicalBlock(scope: !17893, file: !3, line: 325, column: 6)
!17924 = !DILocation(line: 325, column: 35, scope: !17923)
!17925 = !DILocation(line: 325, column: 39, scope: !17923)
!17926 = !DILocation(line: 325, column: 45, scope: !17923)
!17927 = !DILocation(line: 325, column: 6, scope: !17893)
!17928 = !DILocation(line: 326, column: 15, scope: !17929)
!17929 = distinct !DILexicalBlock(scope: !17923, file: !3, line: 325, column: 52)
!17930 = !DILocation(line: 326, column: 19, scope: !17929)
!17931 = !DILocation(line: 326, column: 25, scope: !17929)
!17932 = !DILocation(line: 326, column: 33, scope: !17929)
!17933 = !DILocation(line: 326, column: 12, scope: !17929)
!17934 = !DILocation(line: 326, column: 3, scope: !17929)
!17935 = !DILocation(line: 326, column: 10, scope: !17929)
!17936 = !DILocation(line: 327, column: 14, scope: !17929)
!17937 = !DILocation(line: 327, column: 18, scope: !17929)
!17938 = !DILocation(line: 327, column: 25, scope: !17929)
!17939 = !DILocation(line: 327, column: 12, scope: !17929)
!17940 = !DILocation(line: 327, column: 3, scope: !17929)
!17941 = !DILocation(line: 327, column: 10, scope: !17929)
!17942 = !DILocation(line: 328, column: 14, scope: !17929)
!17943 = !DILocation(line: 328, column: 18, scope: !17929)
!17944 = !DILocation(line: 328, column: 25, scope: !17929)
!17945 = !DILocation(line: 328, column: 35, scope: !17929)
!17946 = !DILocation(line: 328, column: 33, scope: !17929)
!17947 = !DILocation(line: 328, column: 12, scope: !17929)
!17948 = !DILocation(line: 328, column: 3, scope: !17929)
!17949 = !DILocation(line: 328, column: 10, scope: !17929)
!17950 = !DILocation(line: 329, column: 14, scope: !17929)
!17951 = !DILocation(line: 329, column: 18, scope: !17929)
!17952 = !DILocation(line: 329, column: 24, scope: !17929)
!17953 = !DILocation(line: 329, column: 12, scope: !17929)
!17954 = !DILocation(line: 329, column: 3, scope: !17929)
!17955 = !DILocation(line: 329, column: 10, scope: !17929)
!17956 = !DILocation(line: 330, column: 7, scope: !17929)
!17957 = !DILocation(line: 331, column: 2, scope: !17929)
!17958 = !DILocation(line: 332, column: 14, scope: !17959)
!17959 = distinct !DILexicalBlock(scope: !17923, file: !3, line: 331, column: 9)
!17960 = !DILocation(line: 332, column: 18, scope: !17959)
!17961 = !DILocation(line: 332, column: 24, scope: !17959)
!17962 = !DILocation(line: 332, column: 12, scope: !17959)
!17963 = !DILocation(line: 332, column: 3, scope: !17959)
!17964 = !DILocation(line: 332, column: 10, scope: !17959)
!17965 = !DILocation(line: 333, column: 15, scope: !17959)
!17966 = !DILocation(line: 333, column: 19, scope: !17959)
!17967 = !DILocation(line: 333, column: 26, scope: !17959)
!17968 = !DILocation(line: 333, column: 38, scope: !17959)
!17969 = !DILocation(line: 333, column: 42, scope: !17959)
!17970 = !DILocation(line: 333, column: 49, scope: !17959)
!17971 = !DILocation(line: 333, column: 34, scope: !17959)
!17972 = !DILocation(line: 333, column: 12, scope: !17959)
!17973 = !DILocation(line: 333, column: 3, scope: !17959)
!17974 = !DILocation(line: 333, column: 10, scope: !17959)
!17975 = !DILocation(line: 334, column: 7, scope: !17959)
!17976 = !DILocation(line: 336, column: 2, scope: !17893)
!17977 = !DILocation(line: 336, column: 2, scope: !17978)
!17978 = distinct !DILexicalBlock(scope: !17979, file: !3, line: 336, column: 2)
!17979 = distinct !DILexicalBlock(scope: !17893, file: !3, line: 336, column: 2)
!17980 = !DILocation(line: 336, column: 2, scope: !17979)
!17981 = !DILocation(line: 337, column: 20, scope: !17893)
!17982 = !DILocation(line: 337, column: 27, scope: !17893)
!17983 = !DILocation(line: 337, column: 32, scope: !17893)
!17984 = !DILocation(line: 337, column: 37, scope: !17893)
!17985 = !DILocation(line: 337, column: 42, scope: !17893)
!17986 = !DILocation(line: 337, column: 11, scope: !17893)
!17987 = !DILocation(line: 337, column: 9, scope: !17893)
!17988 = !DILocation(line: 338, column: 6, scope: !17989)
!17989 = distinct !DILexicalBlock(scope: !17893, file: !3, line: 338, column: 6)
!17990 = !DILocation(line: 338, column: 13, scope: !17989)
!17991 = !DILocation(line: 338, column: 6, scope: !17893)
!17992 = !DILocation(line: 339, column: 10, scope: !17989)
!17993 = !DILocation(line: 339, column: 3, scope: !17989)
!17994 = !DILocation(line: 340, column: 6, scope: !17995)
!17995 = distinct !DILexicalBlock(scope: !17893, file: !3, line: 340, column: 6)
!17996 = !DILocation(line: 340, column: 6, scope: !17893)
!17997 = !DILocation(line: 341, column: 11, scope: !17995)
!17998 = !DILocation(line: 341, column: 21, scope: !17995)
!17999 = !DILocation(line: 341, column: 28, scope: !17995)
!18000 = !DILocation(line: 341, column: 18, scope: !17995)
!18001 = !DILocation(line: 342, column: 8, scope: !17995)
!18002 = !DILocation(line: 342, column: 15, scope: !17995)
!18003 = !DILocation(line: 341, column: 34, scope: !17995)
!18004 = !DILocation(line: 342, column: 25, scope: !17995)
!18005 = !DILocation(line: 342, column: 32, scope: !17995)
!18006 = !DILocation(line: 342, column: 22, scope: !17995)
!18007 = !DILocation(line: 341, column: 4, scope: !17995)
!18008 = !DILocation(line: 341, column: 9, scope: !17995)
!18009 = !DILocation(line: 341, column: 3, scope: !17995)
!18010 = !DILocation(line: 344, column: 2, scope: !17893)
!18011 = !DILocation(line: 345, column: 1, scope: !17893)
!18012 = distinct !DISubprogram(name: "i2c_unlock_bus", scope: !4402, file: !4402, line: 789, type: !4451, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !850)
!18013 = !DILocalVariable(name: "adapter", arg: 1, scope: !18012, file: !4402, line: 789, type: !4400)
!18014 = !DILocation(line: 789, column: 36, scope: !18012)
!18015 = !DILocalVariable(name: "flags", arg: 2, scope: !18012, file: !4402, line: 789, type: !7)
!18016 = !DILocation(line: 789, column: 58, scope: !18012)
!18017 = !DILocation(line: 791, column: 2, scope: !18012)
!18018 = !DILocation(line: 791, column: 11, scope: !18012)
!18019 = !DILocation(line: 791, column: 21, scope: !18012)
!18020 = !DILocation(line: 791, column: 32, scope: !18012)
!18021 = !DILocation(line: 791, column: 41, scope: !18012)
!18022 = !DILocation(line: 792, column: 1, scope: !18012)
