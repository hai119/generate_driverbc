; ModuleID = '../bcout/drivers/media/dvb-frontends/cxd2841er.llvm.bc'
source_filename = "drivers/media/dvb-frontends/cxd2841er.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.dvb_frontend_ops = type { %struct.dvb_frontend_internal_info, [8 x i8], void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i8*, i32)*, i32 (%struct.dvb_frontend*, i1, i32, i32*, i32*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.dvb_frontend_tune_settings*)*, i32 (%struct.dvb_frontend*, %struct.dtv_frontend_properties*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_master_cmd*)*, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_slave_reply*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i64)*, i32 (%struct.dvb_frontend*, i64)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, %struct.dvb_tuner_ops, %struct.analog_demod_ops }
%struct.dvb_frontend_internal_info = type { [128 x i8], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.dvb_frontend = type { %struct.kref, %struct.dvb_frontend_ops, %struct.dvb_adapter*, i8*, i8*, i8*, i8*, i8*, %struct.dtv_frontend_properties, i32 (i8*, i32, i32, i32)*, i32, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.dvb_adapter = type { i32, %struct.list_head, %struct.list_head, i8*, [6 x i8], i8*, %struct.device*, %struct.module*, i32, %struct.dvb_device*, %struct.mutex }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.65, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.65 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.63, %struct.list_head, %struct.list_head, %union.anon.64 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.61 }
%union.anon.61 = type { %struct.anon.62 }
%struct.anon.62 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.3, %union.anon.53, %struct.atomic_t, [8 x i8] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.53 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.54, i32 }
%union.anon.54 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.47, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.17, [0 x i64] }
%struct.anon.17 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.18, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.18 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.19 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.24, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.25, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.26, %union.anon.30, %struct.key_restriction* }
%union.anon.24 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.25 = type { i64 }
%union.anon.26 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.27, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.27 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.30 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.33, %union.anon.34, i32 }
%struct.request_queue = type opaque
%union.anon.33 = type { %struct.list_head }
%union.anon.34 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.35 }
%struct.anon.35 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.46, i32, [12 x i8] }
%union.anon.46 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.47 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.48, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.51 }
%union.anon.48 = type { %struct.anon.49 }
%struct.anon.49 = type { i64, i64 }
%union.anon.51 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.63 = type { %struct.list_head }
%union.anon.64 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.55, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.56, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.57, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.60, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.55 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.56 = type { %struct.callback_head }
%union.anon.57 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.6 }
%union.anon.6 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.60 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.58 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.58 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.32 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.32 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.5 }
%union.anon.5 = type { %struct.raw_spinlock }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.module = type opaque
%struct.dvb_device = type { %struct.list_head, %struct.file_operations*, %struct.dvb_adapter*, i32, i32, i32, i32, i32, i32, %struct.wait_queue_head, i32 (%struct.file*, i32, i8*)*, i8* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dtv_frontend_properties = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i32, i8, [3 x %struct.anon], i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats }
%struct.anon = type { i8, i32, i32, i8 }
%struct.dtv_fe_stats = type { i8, [4 x %struct.dtv_stats] }
%struct.dtv_stats = type <{ i8, %union.anon }>
%union.anon = type { i64 }
%struct.dvb_frontend_tune_settings = type { i32, i32, i32 }
%struct.dvb_diseqc_master_cmd = type { [6 x i8], i8 }
%struct.dvb_diseqc_slave_reply = type { [4 x i8], i8, i32 }
%struct.dvb_tuner_ops = type { %struct.dvb_tuner_info, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.analog_parameters*)*, i32 (%struct.dvb_frontend*, i8*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i8*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)* }
%struct.dvb_tuner_info = type { [128 x i8], i32, i32, i32, i32, i32, i32 }
%struct.analog_parameters = type { i32, i32, i32, i64 }
%struct.analog_demod_ops = type { %struct.analog_demod_info, void (%struct.dvb_frontend*, %struct.analog_parameters*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i8*)* }
%struct.analog_demod_info = type { i8* }
%struct.kmem_cache = type opaque
%struct.cxd2841er_cnr_data = type { i32, i32 }
%struct.cxd2841er_config = type { i8, i32, i32 }
%struct.i2c_adapter = type { %struct.module*, i32, %struct.i2c_algorithm*, i8*, %struct.i2c_lock_operations*, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i64, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, %struct.i2c_bus_recovery_info*, %struct.i2c_adapter_quirks*, %struct.irq_domain* }
%struct.i2c_algorithm = type { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*)* }
%struct.i2c_msg = type { i16, i16, i16, i8* }
%union.i2c_smbus_data = type { i16, [32 x i8] }
%struct.i2c_lock_operations = type { void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*, i32)*, void (%struct.i2c_adapter*, i32)* }
%struct.rt_mutex = type { %struct.raw_spinlock, %struct.rb_root_cached, %struct.task_struct* }
%struct.i2c_bus_recovery_info = type { i32 (%struct.i2c_adapter*)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, %struct.gpio_desc*, %struct.gpio_desc*, %struct.pinctrl*, %struct.pinctrl_state*, %struct.pinctrl_state* }
%struct.gpio_desc = type opaque
%struct.pinctrl = type opaque
%struct.pinctrl_state = type opaque
%struct.i2c_adapter_quirks = type { i64, i32, i16, i16, i16, i16 }
%struct.cxd2841er_priv = type { %struct.dvb_frontend, %struct.i2c_adapter*, i8, i8, %struct.cxd2841er_config*, i32, i8, i32, i32, i32, i64 }

@__UNIQUE_ID_description220 = internal constant [87 x i8] c"cxd2841er.description=Sony CXD2837/38/41/43/54ER DVB-C/C2/T/T2/S/S2 demodulator driver\00", section ".modinfo", align 1, !dbg !0
@__UNIQUE_ID_author221 = internal constant [80 x i8] c"cxd2841er.author=Sergey Kozlov <serjk@netup.ru>, Abylay Ospan <aospan@netup.ru>\00", section ".modinfo", align 1, !dbg !346
@__UNIQUE_ID_file222 = internal constant [53 x i8] c"cxd2841er.file=drivers/media/dvb-frontends/cxd2841er\00", section ".modinfo", align 1, !dbg !353
@__UNIQUE_ID_license223 = internal constant [22 x i8] c"cxd2841er.license=GPL\00", section ".modinfo", align 1, !dbg !358
@.str = private unnamed_addr constant [48 x i8] c"%s(): I2C adapter %p SLVX addr %x SLVT addr %x\0A\00", align 1
@__func__.cxd2841er_attach = private unnamed_addr constant [17 x i8] c"cxd2841er_attach\00", align 1
@cxd2841er_t_c_ops = internal global %struct.dvb_frontend_ops { %struct.dvb_frontend_internal_info { [128 x i8] zeroinitializer, i32 42000000, i32 1002000000, i32 0, i32 0, i32 870000, i32 11700000, i32 0, i32 -1877213522 }, [8 x i8] c"\03\10\01\00\00\00\00\00", void (%struct.dvb_frontend*)* null, void (%struct.dvb_frontend*)* @cxd2841er_release, void (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* @cxd2841er_init_tc, i32 (%struct.dvb_frontend*)* @cxd2841er_shutdown_tc, i32 (%struct.dvb_frontend*, i8*, i32)* null, i32 (%struct.dvb_frontend*, i1, i32, i32*, i32*)* @cxd2841er_tune_tc, i32 (%struct.dvb_frontend*)* @cxd2841er_get_algo, i32 (%struct.dvb_frontend*)* @cxd2841er_set_frontend_tc, i32 (%struct.dvb_frontend*, %struct.dvb_frontend_tune_settings*)* null, i32 (%struct.dvb_frontend*, %struct.dtv_frontend_properties*)* @cxd2841er_get_frontend, i32 (%struct.dvb_frontend*, i32*)* @cxd2841er_read_status_tc, i32 (%struct.dvb_frontend*, i32*)* null, i32 (%struct.dvb_frontend*, i16*)* null, i32 (%struct.dvb_frontend*, i16*)* null, i32 (%struct.dvb_frontend*, i32*)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_master_cmd*)* null, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_slave_reply*)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i32)* @cxd2841er_i2c_gate_ctrl, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* null, %struct.dvb_tuner_ops zeroinitializer, %struct.analog_demod_ops zeroinitializer }, align 8, !dbg !363
@.str.1 = private unnamed_addr constant [38 x i8] c"Sony CXD2837ER DVB-T/T2/C demodulator\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"CXD2837ER\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"C/T/T2\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"Sony CXD2838ER ISDB-T demodulator\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"CXD2838ER\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"ISDB-T\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"Sony CXD2841ER DVB-T/T2/C demodulator\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"CXD2841ER\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"T/T2/C/ISDB-T\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"Sony CXD2843ER DVB-T/T2/C/C2 demodulator\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"CXD2843ER\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"C/C2/T/T2\00", align 1
@.str.13 = private unnamed_addr constant [49 x i8] c"Sony CXD2854ER DVB-T/T2/C and ISDB-T demodulator\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"CXD2854ER\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"C/C2/T/T2/ISDB-T\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"%s(): invalid chip ID 0x%02x\0A\00", align 1
@cxd2841er_dvbs_s2_ops = internal constant %struct.dvb_frontend_ops { %struct.dvb_frontend_internal_info { [128 x i8] c"Sony CXD2841ER DVB-S/S2 demodulator\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 500000000, i32 -1794967296, i32 0, i32 0, i32 1000000, i32 45000000, i32 500, i32 1537 }, [8 x i8] c"\05\06\00\00\00\00\00\00", void (%struct.dvb_frontend*)* null, void (%struct.dvb_frontend*)* @cxd2841er_release, void (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* @cxd2841er_init_s, i32 (%struct.dvb_frontend*)* @cxd2841er_sleep_s, i32 (%struct.dvb_frontend*, i8*, i32)* null, i32 (%struct.dvb_frontend*, i1, i32, i32*, i32*)* @cxd2841er_tune_s, i32 (%struct.dvb_frontend*)* @cxd2841er_get_algo, i32 (%struct.dvb_frontend*)* @cxd2841er_set_frontend_s, i32 (%struct.dvb_frontend*, %struct.dvb_frontend_tune_settings*)* null, i32 (%struct.dvb_frontend*, %struct.dtv_frontend_properties*)* @cxd2841er_get_frontend, i32 (%struct.dvb_frontend*, i32*)* @cxd2841er_read_status_s, i32 (%struct.dvb_frontend*, i32*)* null, i32 (%struct.dvb_frontend*, i16*)* null, i32 (%struct.dvb_frontend*, i16*)* null, i32 (%struct.dvb_frontend*, i32*)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_master_cmd*)* @cxd2841er_send_diseqc_msg, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_slave_reply*)* null, i32 (%struct.dvb_frontend*, i32)* @cxd2841er_send_burst, i32 (%struct.dvb_frontend*, i32)* @cxd2841er_set_tone, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i32)* @cxd2841er_i2c_gate_ctrl, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* null, %struct.dvb_tuner_ops zeroinitializer, %struct.analog_demod_ops zeroinitializer }, align 8, !dbg !4488
@.str.17 = private unnamed_addr constant [5 x i8] c"S/S2\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%s(): attaching %s DVB-%s frontend\0A\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"%s(): chip ID 0x%02x OK.\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.20 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c"wr reg=%04x: len=%d is too big!\0A\00", align 1
@.str.22 = private unnamed_addr constant [48 x i8] c"%s: i2c wr failed=%d addr=%02x reg=%02x len=%d\0A\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"cxd2841er\00", align 1
@.str.24 = private unnamed_addr constant [41 x i8] c"%s: i2c rd failed=%d addr=%02x reg=%02x\0A\00", align 1
@.str.25 = private unnamed_addr constant [34 x i8] c"%s(): unknown delivery system %d\0A\00", align 1
@__func__.cxd2841er_sleep_tc = private unnamed_addr constant [19 x i8] c"cxd2841er_sleep_tc\00", align 1
@.str.26 = private unnamed_addr constant [24 x i8] c"%s(): invalid state %d\0A\00", align 1
@__func__.cxd2841er_active_t_to_sleep_tc = private unnamed_addr constant [31 x i8] c"cxd2841er_active_t_to_sleep_tc\00", align 1
@__func__.cxd2841er_active_t2_to_sleep_tc = private unnamed_addr constant [32 x i8] c"cxd2841er_active_t2_to_sleep_tc\00", align 1
@__func__.cxd2841er_active_i_to_sleep_tc = private unnamed_addr constant [31 x i8] c"cxd2841er_active_i_to_sleep_tc\00", align 1
@__func__.cxd2841er_active_c_to_sleep_tc = private unnamed_addr constant [31 x i8] c"cxd2841er_active_c_to_sleep_tc\00", align 1
@__const.cxd2841er_sleep_tc_to_active_t.data = private unnamed_addr constant [2 x i8] c"\09T", align 1
@__const.cxd2841er_sleep_tc_to_active_t.data24m = private unnamed_addr constant [3 x i8] c"\DCl\00", align 1
@cxd2841er_sleep_tc_to_active_t_band.nominalRate8bw = internal constant [3 x [5 x i8]] [[5 x i8] c"\11\F0\00\00\00", [5 x i8] c"\15\00\00\00\00", [5 x i8] c"\11\F0\00\00\00"], align 1, !dbg !4261
@cxd2841er_sleep_tc_to_active_t_band.nominalRate7bw = internal constant [3 x [5 x i8]] [[5 x i8] c"\14\80\00\00\00", [5 x i8] c"\18\00\00\00\00", [5 x i8] c"\14\80\00\00\00"], align 1, !dbg !4412
@cxd2841er_sleep_tc_to_active_t_band.nominalRate6bw = internal constant [3 x [5 x i8]] [[5 x i8] c"\17\EA\AA\AA\AA", [5 x i8] c"\1C\00\00\00\00", [5 x i8] c"\17\EA\AA\AA\AA"], align 1, !dbg !4414
@cxd2841er_sleep_tc_to_active_t_band.nominalRate5bw = internal constant [3 x [5 x i8]] [[5 x i8] c"\1C\B3333", [5 x i8] c"!\99\99\99\99", [5 x i8] c"\1C\B3333"], align 1, !dbg !4416
@cxd2841er_sleep_tc_to_active_t_band.itbCoef8bw = internal constant [3 x [14 x i8]] [[14 x i8] c"&\AF\06\CD\13\BB(\BA#\A9\1F\A8,\C8", [14 x i8] c"/\BA(\9B(\9D(\A1)\A5*\AC)\B5", [14 x i8] c"&\AF\06\CD\13\BB(\BA#\A9\1F\A8,\C8"], align 16, !dbg !4418
@cxd2841er_sleep_tc_to_active_t_band.itbCoef7bw = internal constant [3 x [14 x i8]] [[14 x i8] c",\BD\02\CF\04\F8#\A6)\B0&\A9!\A5", [14 x i8] c"0\B1)\9A(\9C(\A0)\A2+\A6+\AD", [14 x i8] c",\BD\02\CF\04\F8#\A6)\B0&\A9!\A5"], align 16, !dbg !4423
@cxd2841er_sleep_tc_to_active_t_band.itbCoef6bw = internal constant [3 x [14 x i8]] [[14 x i8] c"'\A7(\B3\02\F0\01\E8\00\CF\00\E6#\A4", [14 x i8] c"1\A8)\9B'\9C(\9E)\A4)\A2)\A8", [14 x i8] c"'\A7(\B3\02\F0\01\E8\00\CF\00\E6#\A4"], align 16, !dbg !4425
@cxd2841er_sleep_tc_to_active_t_band.itbCoef5bw = internal constant [3 x [14 x i8]] [[14 x i8] c"'\A7(\B3\02\F0\01\E8\00\CF\00\E6#\A4", [14 x i8] c"1\A8)\9B'\9C(\9E)\A4)\A2)\A8", [14 x i8] c"'\A7(\B3\02\F0\01\E8\00\CF\00\E6#\A4"], align 16, !dbg !4427
@.str.27 = private unnamed_addr constant [33 x i8] c"%s(): reg_value is out of range\0A\00", align 1
@__func__.cxd2841er_dvbs2_set_symbol_rate = private unnamed_addr constant [32 x i8] c"cxd2841er_dvbs2_set_symbol_rate\00", align 1
@cxd2841er_sleep_tc_to_active_t2_band.nominalRate8bw = internal constant [3 x [5 x i8]] [[5 x i8] c"\11\F0\00\00\00", [5 x i8] c"\15\00\00\00\00", [5 x i8] c"\11\F0\00\00\00"], align 1, !dbg !4429
@cxd2841er_sleep_tc_to_active_t2_band.nominalRate7bw = internal constant [3 x [5 x i8]] [[5 x i8] c"\14\80\00\00\00", [5 x i8] c"\18\00\00\00\00", [5 x i8] c"\14\80\00\00\00"], align 1, !dbg !4435
@cxd2841er_sleep_tc_to_active_t2_band.nominalRate6bw = internal constant [3 x [5 x i8]] [[5 x i8] c"\17\EA\AA\AA\AA", [5 x i8] c"\1C\00\00\00\00", [5 x i8] c"\17\EA\AA\AA\AA"], align 1, !dbg !4437
@cxd2841er_sleep_tc_to_active_t2_band.nominalRate5bw = internal constant [3 x [5 x i8]] [[5 x i8] c"\1C\B3333", [5 x i8] c"!\99\99\99\99", [5 x i8] c"\1C\B3333"], align 1, !dbg !4439
@cxd2841er_sleep_tc_to_active_t2_band.nominalRate17bw = internal constant [3 x [5 x i8]] [[5 x i8] c"X\E2\AF\E0\BC", [5 x i8] c"h\0F\A22\D0", [5 x i8] c"X\E2\AF\E0\BC"], align 1, !dbg !4441
@cxd2841er_sleep_tc_to_active_t2_band.itbCoef8bw = internal constant [3 x [14 x i8]] [[14 x i8] c"&\AF\06\CD\13\BB(\BA#\A9\1F\A8,\C8", [14 x i8] c"/\BA(\9B(\9D(\A1)\A5*\AC)\B5", [14 x i8] c"&\AF\06\CD\13\BB(\BA#\A9\1F\A8,\C8"], align 16, !dbg !4443
@cxd2841er_sleep_tc_to_active_t2_band.itbCoef7bw = internal constant [3 x [14 x i8]] [[14 x i8] c",\BD\02\CF\04\F8#\A6)\B0&\A9!\A5", [14 x i8] c"0\B1)\9A(\9C(\A0)\A2+\A6+\AD", [14 x i8] c",\BD\02\CF\04\F8#\A6)\B0&\A9!\A5"], align 16, !dbg !4446
@cxd2841er_sleep_tc_to_active_t2_band.itbCoef6bw = internal constant [3 x [14 x i8]] [[14 x i8] c"'\A7(\B3\02\F0\01\E8\00\CF\00\E6#\A4", [14 x i8] c"1\A8)\9B'\9C(\9E)\A4)\A2)\A8", [14 x i8] c"'\A7(\B3\02\F0\01\E8\00\CF\00\E6#\A4"], align 16, !dbg !4448
@cxd2841er_sleep_tc_to_active_t2_band.itbCoef5bw = internal constant [3 x [14 x i8]] [[14 x i8] c"'\A7(\B3\02\F0\01\E8\00\CF\00\E6#\A4", [14 x i8] c"1\A8)\9B'\9C(\9E)\A4)\A2)\A8", [14 x i8] c"'\A7(\B3\02\F0\01\E8\00\CF\00\E6#\A4"], align 16, !dbg !4450
@cxd2841er_sleep_tc_to_active_t2_band.itbCoef17bw = internal constant [3 x [14 x i8]] [[14 x i8] c"%\A06\8D.\94(\9B2\90,\9D)\99", [14 x i8] c"3\8E+\97-\957\8B0\97-\9A!\A4", [14 x i8] c"%\A06\8D.\94(\9B2\90,\9D)\99"], align 16, !dbg !4452
@__const.cxd2841er_sleep_tc_to_active_c_band.bw7_8mhz_b10_a6 = private unnamed_addr constant [14 x i8] c"-\C7\04\F4\07\C5*\B8'\9E'\A4)\AB", align 1
@__const.cxd2841er_sleep_tc_to_active_c_band.bw6mhz_b10_a6 = private unnamed_addr constant [14 x i8] c"'\A7(\B3\02\F0\01\E8\00\CF\00\E6#\A4", align 1
@.str.28 = private unnamed_addr constant [47 x i8] c"%s(): unsupported bandwidth %d. Forcing 8Mhz!\0A\00", align 1
@__func__.cxd2841er_sleep_tc_to_active_c_band = private unnamed_addr constant [36 x i8] c"cxd2841er_sleep_tc_to_active_c_band\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"%s(): unsupported bandwidth %d\0A\00", align 1
@__const.cxd2841er_sleep_tc_to_active_i.data = private unnamed_addr constant [2 x i8] c"\09T", align 1
@__const.cxd2841er_sleep_tc_to_active_i.data24m = private unnamed_addr constant [2 x i8] c"`\00", align 1
@__const.cxd2841er_sleep_tc_to_active_i.data24m2 = private unnamed_addr constant [3 x i8] c"\B7\1B\00", align 1
@cxd2841er_sleep_tc_to_active_i_band.nominalRate8bw = internal constant [3 x [5 x i8]] [[5 x i8] zeroinitializer, [5 x i8] c"\11\B8\00\00\00", [5 x i8] zeroinitializer], align 1, !dbg !4454
@cxd2841er_sleep_tc_to_active_i_band.nominalRate7bw = internal constant [3 x [5 x i8]] [[5 x i8] zeroinitializer, [5 x i8] c"\14@\00\00\00", [5 x i8] zeroinitializer], align 1, !dbg !4457
@cxd2841er_sleep_tc_to_active_i_band.nominalRate6bw = internal constant [3 x [5 x i8]] [[5 x i8] c"\14.\00\00\00", [5 x i8] c"\17\A0\00\00\00", [5 x i8] c"\14.\00\00\00"], align 1, !dbg !4459
@cxd2841er_sleep_tc_to_active_i_band.itbCoef8bw = internal constant [3 x [14 x i8]] [[14 x i8] zeroinitializer, [14 x i8] c"/\BA(\9B(\9D(\A1)\A5*\AC)\B5", [14 x i8] zeroinitializer], align 16, !dbg !4461
@cxd2841er_sleep_tc_to_active_i_band.itbCoef7bw = internal constant [3 x [14 x i8]] [[14 x i8] zeroinitializer, [14 x i8] c"0\B1)\9A(\9C(\A0)\A2+\A6+\AD", [14 x i8] zeroinitializer], align 16, !dbg !4463
@cxd2841er_sleep_tc_to_active_i_band.itbCoef6bw = internal constant [3 x [14 x i8]] [[14 x i8] c"'\A7(\B3\02\F0\01\E8\00\CF\00\E6#\A4", [14 x i8] c"1\A8)\9B'\9C(\9E)\A4)\A2)\A8", [14 x i8] c"'\A7(\B3\02\F0\01\E8\00\CF\00\E6#\A4"], align 16, !dbg !4465
@.str.30 = private unnamed_addr constant [50 x i8] c"%s(): bandwidth %d supported only for 24MHz xtal\0A\00", align 1
@__func__.cxd2841er_sleep_tc_to_active_i_band = private unnamed_addr constant [36 x i8] c"cxd2841er_sleep_tc_to_active_i_band\00", align 1
@__const.cxd2841er_sleep_tc_to_active_c.data = private unnamed_addr constant [2 x i8] c"\09T", align 1
@jiffies = external dso_local global i64, align 8
@__func__.cxd2841er_read_status_s = private unnamed_addr constant [24 x i8] c"cxd2841er_read_status_s\00", align 1
@cxd2841er_dvbs_read_snr.cn_data = internal global %struct.cxd2841er_cnr_data* null, align 8, !dbg !4467
@s_cn_data = internal constant [191 x %struct.cxd2841er_cnr_data] [%struct.cxd2841er_cnr_data { i32 830, i32 0 }, %struct.cxd2841er_cnr_data { i32 825, i32 100 }, %struct.cxd2841er_cnr_data { i32 819, i32 200 }, %struct.cxd2841er_cnr_data { i32 814, i32 300 }, %struct.cxd2841er_cnr_data { i32 809, i32 400 }, %struct.cxd2841er_cnr_data { i32 804, i32 500 }, %struct.cxd2841er_cnr_data { i32 798, i32 600 }, %struct.cxd2841er_cnr_data { i32 793, i32 700 }, %struct.cxd2841er_cnr_data { i32 788, i32 800 }, %struct.cxd2841er_cnr_data { i32 783, i32 900 }, %struct.cxd2841er_cnr_data { i32 778, i32 1000 }, %struct.cxd2841er_cnr_data { i32 767, i32 1100 }, %struct.cxd2841er_cnr_data { i32 756, i32 1200 }, %struct.cxd2841er_cnr_data { i32 745, i32 1300 }, %struct.cxd2841er_cnr_data { i32 734, i32 1400 }, %struct.cxd2841er_cnr_data { i32 724, i32 1500 }, %struct.cxd2841er_cnr_data { i32 713, i32 1600 }, %struct.cxd2841er_cnr_data { i32 703, i32 1700 }, %struct.cxd2841er_cnr_data { i32 693, i32 1800 }, %struct.cxd2841er_cnr_data { i32 683, i32 1900 }, %struct.cxd2841er_cnr_data { i32 673, i32 2000 }, %struct.cxd2841er_cnr_data { i32 667, i32 2100 }, %struct.cxd2841er_cnr_data { i32 661, i32 2200 }, %struct.cxd2841er_cnr_data { i32 656, i32 2300 }, %struct.cxd2841er_cnr_data { i32 650, i32 2400 }, %struct.cxd2841er_cnr_data { i32 644, i32 2500 }, %struct.cxd2841er_cnr_data { i32 639, i32 2600 }, %struct.cxd2841er_cnr_data { i32 633, i32 2700 }, %struct.cxd2841er_cnr_data { i32 628, i32 2800 }, %struct.cxd2841er_cnr_data { i32 622, i32 2900 }, %struct.cxd2841er_cnr_data { i32 617, i32 3000 }, %struct.cxd2841er_cnr_data { i32 610, i32 3100 }, %struct.cxd2841er_cnr_data { i32 604, i32 3200 }, %struct.cxd2841er_cnr_data { i32 597, i32 3300 }, %struct.cxd2841er_cnr_data { i32 591, i32 3400 }, %struct.cxd2841er_cnr_data { i32 585, i32 3500 }, %struct.cxd2841er_cnr_data { i32 578, i32 3600 }, %struct.cxd2841er_cnr_data { i32 572, i32 3700 }, %struct.cxd2841er_cnr_data { i32 566, i32 3800 }, %struct.cxd2841er_cnr_data { i32 560, i32 3900 }, %struct.cxd2841er_cnr_data { i32 554, i32 4000 }, %struct.cxd2841er_cnr_data { i32 547, i32 4100 }, %struct.cxd2841er_cnr_data { i32 540, i32 4200 }, %struct.cxd2841er_cnr_data { i32 533, i32 4300 }, %struct.cxd2841er_cnr_data { i32 526, i32 4400 }, %struct.cxd2841er_cnr_data { i32 519, i32 4500 }, %struct.cxd2841er_cnr_data { i32 513, i32 4600 }, %struct.cxd2841er_cnr_data { i32 506, i32 4700 }, %struct.cxd2841er_cnr_data { i32 500, i32 4800 }, %struct.cxd2841er_cnr_data { i32 493, i32 4900 }, %struct.cxd2841er_cnr_data { i32 487, i32 5000 }, %struct.cxd2841er_cnr_data { i32 480, i32 5100 }, %struct.cxd2841er_cnr_data { i32 473, i32 5200 }, %struct.cxd2841er_cnr_data { i32 466, i32 5300 }, %struct.cxd2841er_cnr_data { i32 459, i32 5400 }, %struct.cxd2841er_cnr_data { i32 452, i32 5500 }, %struct.cxd2841er_cnr_data { i32 446, i32 5600 }, %struct.cxd2841er_cnr_data { i32 439, i32 5700 }, %struct.cxd2841er_cnr_data { i32 433, i32 5800 }, %struct.cxd2841er_cnr_data { i32 426, i32 5900 }, %struct.cxd2841er_cnr_data { i32 420, i32 6000 }, %struct.cxd2841er_cnr_data { i32 413, i32 6100 }, %struct.cxd2841er_cnr_data { i32 406, i32 6200 }, %struct.cxd2841er_cnr_data { i32 399, i32 6300 }, %struct.cxd2841er_cnr_data { i32 393, i32 6400 }, %struct.cxd2841er_cnr_data { i32 386, i32 6500 }, %struct.cxd2841er_cnr_data { i32 380, i32 6600 }, %struct.cxd2841er_cnr_data { i32 373, i32 6700 }, %struct.cxd2841er_cnr_data { i32 367, i32 6800 }, %struct.cxd2841er_cnr_data { i32 361, i32 6900 }, %struct.cxd2841er_cnr_data { i32 355, i32 7000 }, %struct.cxd2841er_cnr_data { i32 348, i32 7100 }, %struct.cxd2841er_cnr_data { i32 342, i32 7200 }, %struct.cxd2841er_cnr_data { i32 336, i32 7300 }, %struct.cxd2841er_cnr_data { i32 330, i32 7400 }, %struct.cxd2841er_cnr_data { i32 324, i32 7500 }, %struct.cxd2841er_cnr_data { i32 318, i32 7600 }, %struct.cxd2841er_cnr_data { i32 312, i32 7700 }, %struct.cxd2841er_cnr_data { i32 306, i32 7800 }, %struct.cxd2841er_cnr_data { i32 301, i32 7900 }, %struct.cxd2841er_cnr_data { i32 295, i32 8000 }, %struct.cxd2841er_cnr_data { i32 289, i32 8100 }, %struct.cxd2841er_cnr_data { i32 284, i32 8200 }, %struct.cxd2841er_cnr_data { i32 278, i32 8300 }, %struct.cxd2841er_cnr_data { i32 273, i32 8400 }, %struct.cxd2841er_cnr_data { i32 267, i32 8500 }, %struct.cxd2841er_cnr_data { i32 262, i32 8600 }, %struct.cxd2841er_cnr_data { i32 257, i32 8700 }, %struct.cxd2841er_cnr_data { i32 252, i32 8800 }, %struct.cxd2841er_cnr_data { i32 247, i32 8900 }, %struct.cxd2841er_cnr_data { i32 242, i32 9000 }, %struct.cxd2841er_cnr_data { i32 238, i32 9100 }, %struct.cxd2841er_cnr_data { i32 234, i32 9200 }, %struct.cxd2841er_cnr_data { i32 230, i32 9300 }, %struct.cxd2841er_cnr_data { i32 226, i32 9400 }, %struct.cxd2841er_cnr_data { i32 222, i32 9500 }, %struct.cxd2841er_cnr_data { i32 218, i32 9600 }, %struct.cxd2841er_cnr_data { i32 215, i32 9700 }, %struct.cxd2841er_cnr_data { i32 211, i32 9800 }, %struct.cxd2841er_cnr_data { i32 208, i32 9900 }, %struct.cxd2841er_cnr_data { i32 204, i32 10000 }, %struct.cxd2841er_cnr_data { i32 199, i32 10100 }, %struct.cxd2841er_cnr_data { i32 195, i32 10200 }, %struct.cxd2841er_cnr_data { i32 191, i32 10300 }, %struct.cxd2841er_cnr_data { i32 186, i32 10400 }, %struct.cxd2841er_cnr_data { i32 182, i32 10500 }, %struct.cxd2841er_cnr_data { i32 178, i32 10600 }, %struct.cxd2841er_cnr_data { i32 174, i32 10700 }, %struct.cxd2841er_cnr_data { i32 170, i32 10800 }, %struct.cxd2841er_cnr_data { i32 167, i32 10900 }, %struct.cxd2841er_cnr_data { i32 163, i32 11000 }, %struct.cxd2841er_cnr_data { i32 159, i32 11100 }, %struct.cxd2841er_cnr_data { i32 156, i32 11200 }, %struct.cxd2841er_cnr_data { i32 152, i32 11300 }, %struct.cxd2841er_cnr_data { i32 148, i32 11400 }, %struct.cxd2841er_cnr_data { i32 145, i32 11500 }, %struct.cxd2841er_cnr_data { i32 142, i32 11600 }, %struct.cxd2841er_cnr_data { i32 138, i32 11700 }, %struct.cxd2841er_cnr_data { i32 135, i32 11800 }, %struct.cxd2841er_cnr_data { i32 132, i32 11900 }, %struct.cxd2841er_cnr_data { i32 129, i32 12000 }, %struct.cxd2841er_cnr_data { i32 126, i32 12100 }, %struct.cxd2841er_cnr_data { i32 123, i32 12200 }, %struct.cxd2841er_cnr_data { i32 121, i32 12300 }, %struct.cxd2841er_cnr_data { i32 118, i32 12400 }, %struct.cxd2841er_cnr_data { i32 115, i32 12500 }, %struct.cxd2841er_cnr_data { i32 113, i32 12600 }, %struct.cxd2841er_cnr_data { i32 110, i32 12700 }, %struct.cxd2841er_cnr_data { i32 108, i32 12800 }, %struct.cxd2841er_cnr_data { i32 105, i32 12900 }, %struct.cxd2841er_cnr_data { i32 103, i32 13000 }, %struct.cxd2841er_cnr_data { i32 101, i32 13100 }, %struct.cxd2841er_cnr_data { i32 98, i32 13200 }, %struct.cxd2841er_cnr_data { i32 96, i32 13300 }, %struct.cxd2841er_cnr_data { i32 94, i32 13400 }, %struct.cxd2841er_cnr_data { i32 92, i32 13500 }, %struct.cxd2841er_cnr_data { i32 90, i32 13600 }, %struct.cxd2841er_cnr_data { i32 88, i32 13700 }, %struct.cxd2841er_cnr_data { i32 86, i32 13800 }, %struct.cxd2841er_cnr_data { i32 84, i32 13900 }, %struct.cxd2841er_cnr_data { i32 82, i32 14000 }, %struct.cxd2841er_cnr_data { i32 80, i32 14100 }, %struct.cxd2841er_cnr_data { i32 78, i32 14200 }, %struct.cxd2841er_cnr_data { i32 76, i32 14300 }, %struct.cxd2841er_cnr_data { i32 75, i32 14400 }, %struct.cxd2841er_cnr_data { i32 73, i32 14500 }, %struct.cxd2841er_cnr_data { i32 71, i32 14600 }, %struct.cxd2841er_cnr_data { i32 70, i32 14700 }, %struct.cxd2841er_cnr_data { i32 68, i32 14800 }, %struct.cxd2841er_cnr_data { i32 67, i32 14900 }, %struct.cxd2841er_cnr_data { i32 65, i32 15000 }, %struct.cxd2841er_cnr_data { i32 63, i32 15100 }, %struct.cxd2841er_cnr_data { i32 62, i32 15200 }, %struct.cxd2841er_cnr_data { i32 60, i32 15300 }, %struct.cxd2841er_cnr_data { i32 59, i32 15400 }, %struct.cxd2841er_cnr_data { i32 58, i32 15500 }, %struct.cxd2841er_cnr_data { i32 55, i32 15700 }, %struct.cxd2841er_cnr_data { i32 54, i32 15800 }, %struct.cxd2841er_cnr_data { i32 52, i32 15900 }, %struct.cxd2841er_cnr_data { i32 51, i32 16000 }, %struct.cxd2841er_cnr_data { i32 50, i32 16100 }, %struct.cxd2841er_cnr_data { i32 49, i32 16200 }, %struct.cxd2841er_cnr_data { i32 48, i32 16300 }, %struct.cxd2841er_cnr_data { i32 47, i32 16400 }, %struct.cxd2841er_cnr_data { i32 46, i32 16500 }, %struct.cxd2841er_cnr_data { i32 45, i32 16600 }, %struct.cxd2841er_cnr_data { i32 44, i32 16700 }, %struct.cxd2841er_cnr_data { i32 43, i32 16800 }, %struct.cxd2841er_cnr_data { i32 42, i32 16900 }, %struct.cxd2841er_cnr_data { i32 41, i32 17000 }, %struct.cxd2841er_cnr_data { i32 40, i32 17100 }, %struct.cxd2841er_cnr_data { i32 39, i32 17200 }, %struct.cxd2841er_cnr_data { i32 38, i32 17300 }, %struct.cxd2841er_cnr_data { i32 37, i32 17400 }, %struct.cxd2841er_cnr_data { i32 36, i32 17500 }, %struct.cxd2841er_cnr_data { i32 35, i32 17600 }, %struct.cxd2841er_cnr_data { i32 34, i32 17800 }, %struct.cxd2841er_cnr_data { i32 33, i32 17900 }, %struct.cxd2841er_cnr_data { i32 32, i32 18000 }, %struct.cxd2841er_cnr_data { i32 31, i32 18200 }, %struct.cxd2841er_cnr_data { i32 30, i32 18300 }, %struct.cxd2841er_cnr_data { i32 29, i32 18500 }, %struct.cxd2841er_cnr_data { i32 28, i32 18700 }, %struct.cxd2841er_cnr_data { i32 27, i32 18900 }, %struct.cxd2841er_cnr_data { i32 26, i32 19000 }, %struct.cxd2841er_cnr_data { i32 25, i32 19200 }, %struct.cxd2841er_cnr_data { i32 24, i32 19300 }, %struct.cxd2841er_cnr_data { i32 23, i32 19500 }, %struct.cxd2841er_cnr_data { i32 22, i32 19700 }, %struct.cxd2841er_cnr_data { i32 21, i32 19900 }, %struct.cxd2841er_cnr_data { i32 20, i32 20000 }], align 16, !dbg !4478
@s2_cn_data = internal constant [192 x %struct.cxd2841er_cnr_data] [%struct.cxd2841er_cnr_data { i32 1455, i32 0 }, %struct.cxd2841er_cnr_data { i32 1431, i32 100 }, %struct.cxd2841er_cnr_data { i32 1406, i32 200 }, %struct.cxd2841er_cnr_data { i32 1383, i32 300 }, %struct.cxd2841er_cnr_data { i32 1360, i32 400 }, %struct.cxd2841er_cnr_data { i32 1337, i32 500 }, %struct.cxd2841er_cnr_data { i32 1314, i32 600 }, %struct.cxd2841er_cnr_data { i32 1292, i32 700 }, %struct.cxd2841er_cnr_data { i32 1270, i32 800 }, %struct.cxd2841er_cnr_data { i32 1249, i32 900 }, %struct.cxd2841er_cnr_data { i32 1228, i32 1000 }, %struct.cxd2841er_cnr_data { i32 1206, i32 1100 }, %struct.cxd2841er_cnr_data { i32 1185, i32 1200 }, %struct.cxd2841er_cnr_data { i32 1164, i32 1300 }, %struct.cxd2841er_cnr_data { i32 1143, i32 1400 }, %struct.cxd2841er_cnr_data { i32 1123, i32 1500 }, %struct.cxd2841er_cnr_data { i32 1103, i32 1600 }, %struct.cxd2841er_cnr_data { i32 1084, i32 1700 }, %struct.cxd2841er_cnr_data { i32 1064, i32 1800 }, %struct.cxd2841er_cnr_data { i32 1046, i32 1900 }, %struct.cxd2841er_cnr_data { i32 1027, i32 2000 }, %struct.cxd2841er_cnr_data { i32 1007, i32 2100 }, %struct.cxd2841er_cnr_data { i32 988, i32 2200 }, %struct.cxd2841er_cnr_data { i32 969, i32 2300 }, %struct.cxd2841er_cnr_data { i32 950, i32 2400 }, %struct.cxd2841er_cnr_data { i32 932, i32 2500 }, %struct.cxd2841er_cnr_data { i32 914, i32 2600 }, %struct.cxd2841er_cnr_data { i32 897, i32 2700 }, %struct.cxd2841er_cnr_data { i32 879, i32 2800 }, %struct.cxd2841er_cnr_data { i32 863, i32 2900 }, %struct.cxd2841er_cnr_data { i32 846, i32 3000 }, %struct.cxd2841er_cnr_data { i32 829, i32 3100 }, %struct.cxd2841er_cnr_data { i32 813, i32 3200 }, %struct.cxd2841er_cnr_data { i32 797, i32 3300 }, %struct.cxd2841er_cnr_data { i32 781, i32 3400 }, %struct.cxd2841er_cnr_data { i32 765, i32 3500 }, %struct.cxd2841er_cnr_data { i32 750, i32 3600 }, %struct.cxd2841er_cnr_data { i32 735, i32 3700 }, %struct.cxd2841er_cnr_data { i32 720, i32 3800 }, %struct.cxd2841er_cnr_data { i32 706, i32 3900 }, %struct.cxd2841er_cnr_data { i32 692, i32 4000 }, %struct.cxd2841er_cnr_data { i32 678, i32 4100 }, %struct.cxd2841er_cnr_data { i32 665, i32 4200 }, %struct.cxd2841er_cnr_data { i32 652, i32 4300 }, %struct.cxd2841er_cnr_data { i32 639, i32 4400 }, %struct.cxd2841er_cnr_data { i32 626, i32 4500 }, %struct.cxd2841er_cnr_data { i32 613, i32 4600 }, %struct.cxd2841er_cnr_data { i32 601, i32 4700 }, %struct.cxd2841er_cnr_data { i32 589, i32 4800 }, %struct.cxd2841er_cnr_data { i32 577, i32 4900 }, %struct.cxd2841er_cnr_data { i32 566, i32 5000 }, %struct.cxd2841er_cnr_data { i32 555, i32 5100 }, %struct.cxd2841er_cnr_data { i32 544, i32 5200 }, %struct.cxd2841er_cnr_data { i32 533, i32 5300 }, %struct.cxd2841er_cnr_data { i32 522, i32 5400 }, %struct.cxd2841er_cnr_data { i32 512, i32 5500 }, %struct.cxd2841er_cnr_data { i32 502, i32 5600 }, %struct.cxd2841er_cnr_data { i32 492, i32 5700 }, %struct.cxd2841er_cnr_data { i32 482, i32 5800 }, %struct.cxd2841er_cnr_data { i32 472, i32 5900 }, %struct.cxd2841er_cnr_data { i32 463, i32 6000 }, %struct.cxd2841er_cnr_data { i32 454, i32 6100 }, %struct.cxd2841er_cnr_data { i32 444, i32 6200 }, %struct.cxd2841er_cnr_data { i32 435, i32 6300 }, %struct.cxd2841er_cnr_data { i32 426, i32 6400 }, %struct.cxd2841er_cnr_data { i32 418, i32 6500 }, %struct.cxd2841er_cnr_data { i32 409, i32 6600 }, %struct.cxd2841er_cnr_data { i32 401, i32 6700 }, %struct.cxd2841er_cnr_data { i32 393, i32 6800 }, %struct.cxd2841er_cnr_data { i32 385, i32 6900 }, %struct.cxd2841er_cnr_data { i32 377, i32 7000 }, %struct.cxd2841er_cnr_data { i32 369, i32 7100 }, %struct.cxd2841er_cnr_data { i32 361, i32 7200 }, %struct.cxd2841er_cnr_data { i32 353, i32 7300 }, %struct.cxd2841er_cnr_data { i32 346, i32 7400 }, %struct.cxd2841er_cnr_data { i32 339, i32 7500 }, %struct.cxd2841er_cnr_data { i32 331, i32 7600 }, %struct.cxd2841er_cnr_data { i32 324, i32 7700 }, %struct.cxd2841er_cnr_data { i32 317, i32 7800 }, %struct.cxd2841er_cnr_data { i32 311, i32 7900 }, %struct.cxd2841er_cnr_data { i32 304, i32 8000 }, %struct.cxd2841er_cnr_data { i32 298, i32 8100 }, %struct.cxd2841er_cnr_data { i32 292, i32 8200 }, %struct.cxd2841er_cnr_data { i32 286, i32 8300 }, %struct.cxd2841er_cnr_data { i32 280, i32 8400 }, %struct.cxd2841er_cnr_data { i32 274, i32 8500 }, %struct.cxd2841er_cnr_data { i32 268, i32 8600 }, %struct.cxd2841er_cnr_data { i32 263, i32 8700 }, %struct.cxd2841er_cnr_data { i32 257, i32 8800 }, %struct.cxd2841er_cnr_data { i32 252, i32 8900 }, %struct.cxd2841er_cnr_data { i32 247, i32 9000 }, %struct.cxd2841er_cnr_data { i32 242, i32 9100 }, %struct.cxd2841er_cnr_data { i32 236, i32 9200 }, %struct.cxd2841er_cnr_data { i32 231, i32 9300 }, %struct.cxd2841er_cnr_data { i32 226, i32 9400 }, %struct.cxd2841er_cnr_data { i32 221, i32 9500 }, %struct.cxd2841er_cnr_data { i32 216, i32 9600 }, %struct.cxd2841er_cnr_data { i32 212, i32 9700 }, %struct.cxd2841er_cnr_data { i32 207, i32 9800 }, %struct.cxd2841er_cnr_data { i32 202, i32 9900 }, %struct.cxd2841er_cnr_data { i32 198, i32 10000 }, %struct.cxd2841er_cnr_data { i32 194, i32 10100 }, %struct.cxd2841er_cnr_data { i32 190, i32 10200 }, %struct.cxd2841er_cnr_data { i32 185, i32 10300 }, %struct.cxd2841er_cnr_data { i32 181, i32 10400 }, %struct.cxd2841er_cnr_data { i32 177, i32 10500 }, %struct.cxd2841er_cnr_data { i32 174, i32 10600 }, %struct.cxd2841er_cnr_data { i32 170, i32 10700 }, %struct.cxd2841er_cnr_data { i32 166, i32 10800 }, %struct.cxd2841er_cnr_data { i32 163, i32 10900 }, %struct.cxd2841er_cnr_data { i32 159, i32 11000 }, %struct.cxd2841er_cnr_data { i32 155, i32 11100 }, %struct.cxd2841er_cnr_data { i32 152, i32 11200 }, %struct.cxd2841er_cnr_data { i32 149, i32 11300 }, %struct.cxd2841er_cnr_data { i32 145, i32 11400 }, %struct.cxd2841er_cnr_data { i32 142, i32 11500 }, %struct.cxd2841er_cnr_data { i32 139, i32 11600 }, %struct.cxd2841er_cnr_data { i32 136, i32 11700 }, %struct.cxd2841er_cnr_data { i32 133, i32 11800 }, %struct.cxd2841er_cnr_data { i32 130, i32 11900 }, %struct.cxd2841er_cnr_data { i32 127, i32 12000 }, %struct.cxd2841er_cnr_data { i32 124, i32 12100 }, %struct.cxd2841er_cnr_data { i32 122, i32 12200 }, %struct.cxd2841er_cnr_data { i32 119, i32 12300 }, %struct.cxd2841er_cnr_data { i32 116, i32 12400 }, %struct.cxd2841er_cnr_data { i32 114, i32 12500 }, %struct.cxd2841er_cnr_data { i32 111, i32 12600 }, %struct.cxd2841er_cnr_data { i32 109, i32 12700 }, %struct.cxd2841er_cnr_data { i32 107, i32 12800 }, %struct.cxd2841er_cnr_data { i32 104, i32 12900 }, %struct.cxd2841er_cnr_data { i32 102, i32 13000 }, %struct.cxd2841er_cnr_data { i32 100, i32 13100 }, %struct.cxd2841er_cnr_data { i32 97, i32 13200 }, %struct.cxd2841er_cnr_data { i32 95, i32 13300 }, %struct.cxd2841er_cnr_data { i32 93, i32 13400 }, %struct.cxd2841er_cnr_data { i32 91, i32 13500 }, %struct.cxd2841er_cnr_data { i32 89, i32 13600 }, %struct.cxd2841er_cnr_data { i32 87, i32 13700 }, %struct.cxd2841er_cnr_data { i32 85, i32 13800 }, %struct.cxd2841er_cnr_data { i32 83, i32 13900 }, %struct.cxd2841er_cnr_data { i32 81, i32 14000 }, %struct.cxd2841er_cnr_data { i32 79, i32 14100 }, %struct.cxd2841er_cnr_data { i32 78, i32 14200 }, %struct.cxd2841er_cnr_data { i32 76, i32 14300 }, %struct.cxd2841er_cnr_data { i32 74, i32 14400 }, %struct.cxd2841er_cnr_data { i32 73, i32 14500 }, %struct.cxd2841er_cnr_data { i32 71, i32 14600 }, %struct.cxd2841er_cnr_data { i32 69, i32 14700 }, %struct.cxd2841er_cnr_data { i32 68, i32 14800 }, %struct.cxd2841er_cnr_data { i32 66, i32 14900 }, %struct.cxd2841er_cnr_data { i32 65, i32 15000 }, %struct.cxd2841er_cnr_data { i32 63, i32 15100 }, %struct.cxd2841er_cnr_data { i32 62, i32 15200 }, %struct.cxd2841er_cnr_data { i32 60, i32 15300 }, %struct.cxd2841er_cnr_data { i32 59, i32 15400 }, %struct.cxd2841er_cnr_data { i32 58, i32 15500 }, %struct.cxd2841er_cnr_data { i32 56, i32 15600 }, %struct.cxd2841er_cnr_data { i32 55, i32 15700 }, %struct.cxd2841er_cnr_data { i32 54, i32 15800 }, %struct.cxd2841er_cnr_data { i32 52, i32 15900 }, %struct.cxd2841er_cnr_data { i32 51, i32 16000 }, %struct.cxd2841er_cnr_data { i32 50, i32 16100 }, %struct.cxd2841er_cnr_data { i32 49, i32 16200 }, %struct.cxd2841er_cnr_data { i32 48, i32 16300 }, %struct.cxd2841er_cnr_data { i32 47, i32 16400 }, %struct.cxd2841er_cnr_data { i32 46, i32 16500 }, %struct.cxd2841er_cnr_data { i32 45, i32 16600 }, %struct.cxd2841er_cnr_data { i32 44, i32 16700 }, %struct.cxd2841er_cnr_data { i32 43, i32 16800 }, %struct.cxd2841er_cnr_data { i32 42, i32 16900 }, %struct.cxd2841er_cnr_data { i32 41, i32 17000 }, %struct.cxd2841er_cnr_data { i32 40, i32 17100 }, %struct.cxd2841er_cnr_data { i32 39, i32 17200 }, %struct.cxd2841er_cnr_data { i32 38, i32 17300 }, %struct.cxd2841er_cnr_data { i32 37, i32 17400 }, %struct.cxd2841er_cnr_data { i32 36, i32 17500 }, %struct.cxd2841er_cnr_data { i32 35, i32 17600 }, %struct.cxd2841er_cnr_data { i32 34, i32 17800 }, %struct.cxd2841er_cnr_data { i32 33, i32 17900 }, %struct.cxd2841er_cnr_data { i32 32, i32 18000 }, %struct.cxd2841er_cnr_data { i32 31, i32 18200 }, %struct.cxd2841er_cnr_data { i32 30, i32 18300 }, %struct.cxd2841er_cnr_data { i32 29, i32 18500 }, %struct.cxd2841er_cnr_data { i32 28, i32 18700 }, %struct.cxd2841er_cnr_data { i32 27, i32 18900 }, %struct.cxd2841er_cnr_data { i32 26, i32 19000 }, %struct.cxd2841er_cnr_data { i32 25, i32 19200 }, %struct.cxd2841er_cnr_data { i32 24, i32 19300 }, %struct.cxd2841er_cnr_data { i32 23, i32 19500 }, %struct.cxd2841er_cnr_data { i32 22, i32 19700 }, %struct.cxd2841er_cnr_data { i32 21, i32 19900 }, %struct.cxd2841er_cnr_data { i32 20, i32 20000 }], align 16, !dbg !4483
@__func__.cxd2841er_active_s_to_sleep_s = private unnamed_addr constant [30 x i8] c"cxd2841er_active_s_to_sleep_s\00", align 1
@__func__.cxd2841er_sleep_s_to_active_s = private unnamed_addr constant [30 x i8] c"cxd2841er_sleep_s_to_active_s\00", align 1
@.str.31 = private unnamed_addr constant [25 x i8] c"%s(): invalid delsys %d\0A\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"%s(): invalid demod state %d\0A\00", align 1
@__func__.cxd2841er_send_diseqc_msg = private unnamed_addr constant [26 x i8] c"cxd2841er_send_diseqc_msg\00", align 1
@__func__.cxd2841er_send_burst = private unnamed_addr constant [21 x i8] c"cxd2841er_send_burst\00", align 1
@__func__.cxd2841er_set_tone = private unnamed_addr constant [19 x i8] c"cxd2841er_set_tone\00", align 1
@llvm.used = appending global [4 x i8*] [i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__UNIQUE_ID_description220, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__UNIQUE_ID_author221, i32 0, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__UNIQUE_ID_file222, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_license223, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dvb_frontend* @cxd2841er_attach_s(%struct.cxd2841er_config* %cfg, %struct.i2c_adapter* %i2c) #0 !dbg !4499 {
entry:
  %cfg.addr = alloca %struct.cxd2841er_config*, align 8
  %i2c.addr = alloca %struct.i2c_adapter*, align 8
  store %struct.cxd2841er_config* %cfg, %struct.cxd2841er_config** %cfg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_config** %cfg.addr, metadata !4503, metadata !DIExpression()), !dbg !4504
  store %struct.i2c_adapter* %i2c, %struct.i2c_adapter** %i2c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c.addr, metadata !4505, metadata !DIExpression()), !dbg !4506
  %0 = load %struct.cxd2841er_config*, %struct.cxd2841er_config** %cfg.addr, align 8, !dbg !4507
  %1 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c.addr, align 8, !dbg !4508
  %call = call %struct.dvb_frontend* @cxd2841er_attach(%struct.cxd2841er_config* %0, %struct.i2c_adapter* %1, i8 zeroext 5) #8, !dbg !4509
  ret %struct.dvb_frontend* %call, !dbg !4510
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dvb_frontend* @cxd2841er_attach(%struct.cxd2841er_config* %cfg, %struct.i2c_adapter* %i2c, i8 zeroext %system) #0 !dbg !4511 {
entry:
  %retval = alloca %struct.dvb_frontend*, align 8
  %cfg.addr = alloca %struct.cxd2841er_config*, align 8
  %i2c.addr = alloca %struct.i2c_adapter*, align 8
  %system.addr = alloca i8, align 1
  %chip_id = alloca i8, align 1
  %type = alloca i8*, align 8
  %name = alloca i8*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_config* %cfg, %struct.cxd2841er_config** %cfg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_config** %cfg.addr, metadata !4514, metadata !DIExpression()), !dbg !4515
  store %struct.i2c_adapter* %i2c, %struct.i2c_adapter** %i2c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c.addr, metadata !4516, metadata !DIExpression()), !dbg !4517
  store i8 %system, i8* %system.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %system.addr, metadata !4518, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.declare(metadata i8* %chip_id, metadata !4520, metadata !DIExpression()), !dbg !4521
  store i8 0, i8* %chip_id, align 1, !dbg !4521
  call void @llvm.dbg.declare(metadata i8** %type, metadata !4522, metadata !DIExpression()), !dbg !4523
  call void @llvm.dbg.declare(metadata i8** %name, metadata !4524, metadata !DIExpression()), !dbg !4525
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !4526, metadata !DIExpression()), !dbg !4527
  store %struct.cxd2841er_priv* null, %struct.cxd2841er_priv** %priv, align 8, !dbg !4527
  %call = call i8* @kzalloc(i64 1336, i32 3264) #8, !dbg !4528
  %0 = bitcast i8* %call to %struct.cxd2841er_priv*, !dbg !4528
  store %struct.cxd2841er_priv* %0, %struct.cxd2841er_priv** %priv, align 8, !dbg !4529
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4530
  %tobool = icmp ne %struct.cxd2841er_priv* %1, null, !dbg !4530
  br i1 %tobool, label %if.end, label %if.then, !dbg !4532

if.then:                                          ; preds = %entry
  store %struct.dvb_frontend* null, %struct.dvb_frontend** %retval, align 8, !dbg !4533
  br label %return, !dbg !4533

if.end:                                           ; preds = %entry
  %2 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c.addr, align 8, !dbg !4534
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4535
  %i2c1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 1, !dbg !4536
  store %struct.i2c_adapter* %2, %struct.i2c_adapter** %i2c1, align 8, !dbg !4537
  %4 = load %struct.cxd2841er_config*, %struct.cxd2841er_config** %cfg.addr, align 8, !dbg !4538
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4539
  %config = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %5, i32 0, i32 4, !dbg !4540
  store %struct.cxd2841er_config* %4, %struct.cxd2841er_config** %config, align 8, !dbg !4541
  %6 = load %struct.cxd2841er_config*, %struct.cxd2841er_config** %cfg.addr, align 8, !dbg !4542
  %i2c_addr = getelementptr inbounds %struct.cxd2841er_config, %struct.cxd2841er_config* %6, i32 0, i32 0, !dbg !4543
  %7 = load i8, i8* %i2c_addr, align 4, !dbg !4543
  %conv = zext i8 %7 to i32, !dbg !4542
  %add = add i32 %conv, 4, !dbg !4544
  %shr = ashr i32 %add, 1, !dbg !4545
  %conv2 = trunc i32 %shr to i8, !dbg !4546
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4547
  %i2c_addr_slvx = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %8, i32 0, i32 2, !dbg !4548
  store i8 %conv2, i8* %i2c_addr_slvx, align 8, !dbg !4549
  %9 = load %struct.cxd2841er_config*, %struct.cxd2841er_config** %cfg.addr, align 8, !dbg !4550
  %i2c_addr3 = getelementptr inbounds %struct.cxd2841er_config, %struct.cxd2841er_config* %9, i32 0, i32 0, !dbg !4551
  %10 = load i8, i8* %i2c_addr3, align 4, !dbg !4551
  %conv4 = zext i8 %10 to i32, !dbg !4552
  %shr5 = ashr i32 %conv4, 1, !dbg !4553
  %conv6 = trunc i32 %shr5 to i8, !dbg !4552
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4554
  %i2c_addr_slvt = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %11, i32 0, i32 3, !dbg !4555
  store i8 %conv6, i8* %i2c_addr_slvt, align 1, !dbg !4556
  %12 = load %struct.cxd2841er_config*, %struct.cxd2841er_config** %cfg.addr, align 8, !dbg !4557
  %xtal = getelementptr inbounds %struct.cxd2841er_config, %struct.cxd2841er_config* %12, i32 0, i32 1, !dbg !4558
  %13 = load i32, i32* %xtal, align 4, !dbg !4558
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4559
  %xtal7 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %14, i32 0, i32 7, !dbg !4560
  store i32 %13, i32* %xtal7, align 8, !dbg !4561
  %15 = load %struct.cxd2841er_config*, %struct.cxd2841er_config** %cfg.addr, align 8, !dbg !4562
  %flags = getelementptr inbounds %struct.cxd2841er_config, %struct.cxd2841er_config* %15, i32 0, i32 2, !dbg !4563
  %16 = load i32, i32* %flags, align 4, !dbg !4563
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4564
  %flags8 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %17, i32 0, i32 9, !dbg !4565
  store i32 %16, i32* %flags8, align 8, !dbg !4566
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4567
  %19 = bitcast %struct.cxd2841er_priv* %18 to i8*, !dbg !4567
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4568
  %frontend = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %20, i32 0, i32 0, !dbg !4569
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend, i32 0, i32 3, !dbg !4570
  store i8* %19, i8** %demodulator_priv, align 8, !dbg !4571
  %21 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4572
  %i2c9 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %21, i32 0, i32 1, !dbg !4572
  %22 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c9, align 8, !dbg !4572
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %22, i32 0, i32 9, !dbg !4572
  %23 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4572
  %i2c10 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %23, i32 0, i32 1, !dbg !4572
  %24 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c10, align 8, !dbg !4572
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4572
  %i2c_addr_slvx11 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %25, i32 0, i32 2, !dbg !4572
  %26 = load i8, i8* %i2c_addr_slvx11, align 8, !dbg !4572
  %conv12 = zext i8 %26 to i32, !dbg !4572
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4572
  %i2c_addr_slvt13 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %27, i32 0, i32 3, !dbg !4572
  %28 = load i8, i8* %i2c_addr_slvt13, align 1, !dbg !4572
  %conv14 = zext i8 %28 to i32, !dbg !4572
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.cxd2841er_attach, i64 0, i64 0), %struct.i2c_adapter* %24, i32 %conv12, i32 %conv14) #9, !dbg !4572
  %29 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4573
  %call15 = call zeroext i8 @cxd2841er_chip_id(%struct.cxd2841er_priv* %29) #8, !dbg !4574
  store i8 %call15, i8* %chip_id, align 1, !dbg !4575
  %30 = load i8, i8* %chip_id, align 1, !dbg !4576
  %conv16 = zext i8 %30 to i32, !dbg !4576
  switch i32 %conv16, label %sw.default [
    i32 177, label %sw.bb
    i32 176, label %sw.bb18
    i32 167, label %sw.bb20
    i32 164, label %sw.bb22
    i32 193, label %sw.bb24
  ], !dbg !4577

sw.bb:                                            ; preds = %if.end
  %call17 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @cxd2841er_t_c_ops, i32 0, i32 0, i32 0, i64 0), i64 128, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #8, !dbg !4578
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8** %name, align 8, !dbg !4580
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8** %type, align 8, !dbg !4581
  br label %sw.epilog, !dbg !4582

sw.bb18:                                          ; preds = %if.end
  %call19 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @cxd2841er_t_c_ops, i32 0, i32 0, i32 0, i64 0), i64 128, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0)) #8, !dbg !4583
  store i8 8, i8* getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @cxd2841er_t_c_ops, i32 0, i32 1, i64 0), align 8, !dbg !4584
  store i8 0, i8* getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @cxd2841er_t_c_ops, i32 0, i32 1, i64 1), align 1, !dbg !4585
  store i8 0, i8* getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @cxd2841er_t_c_ops, i32 0, i32 1, i64 2), align 2, !dbg !4586
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8** %name, align 8, !dbg !4587
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8** %type, align 8, !dbg !4588
  br label %sw.epilog, !dbg !4589

sw.bb20:                                          ; preds = %if.end
  %call21 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @cxd2841er_t_c_ops, i32 0, i32 0, i32 0, i64 0), i64 128, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #8, !dbg !4590
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8** %name, align 8, !dbg !4591
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i8** %type, align 8, !dbg !4592
  br label %sw.epilog, !dbg !4593

sw.bb22:                                          ; preds = %if.end
  %call23 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @cxd2841er_t_c_ops, i32 0, i32 0, i32 0, i64 0), i64 128, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0)) #8, !dbg !4594
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8** %name, align 8, !dbg !4595
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), i8** %type, align 8, !dbg !4596
  br label %sw.epilog, !dbg !4597

sw.bb24:                                          ; preds = %if.end
  %call25 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @cxd2841er_t_c_ops, i32 0, i32 0, i32 0, i64 0), i64 128, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.13, i64 0, i64 0)) #8, !dbg !4598
  store i8 8, i8* getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @cxd2841er_t_c_ops, i32 0, i32 1, i64 3), align 1, !dbg !4599
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i8** %name, align 8, !dbg !4600
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8** %type, align 8, !dbg !4601
  br label %sw.epilog, !dbg !4602

sw.default:                                       ; preds = %if.end
  %31 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4603
  %i2c26 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %31, i32 0, i32 1, !dbg !4603
  %32 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c26, align 8, !dbg !4603
  %dev27 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %32, i32 0, i32 9, !dbg !4603
  %33 = load i8, i8* %chip_id, align 1, !dbg !4603
  %conv28 = zext i8 %33 to i32, !dbg !4603
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev27, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.cxd2841er_attach, i64 0, i64 0), i32 %conv28) #9, !dbg !4603
  %34 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4604
  %frontend29 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %34, i32 0, i32 0, !dbg !4605
  %demodulator_priv30 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend29, i32 0, i32 3, !dbg !4606
  store i8* null, i8** %demodulator_priv30, align 8, !dbg !4607
  %35 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4608
  %36 = bitcast %struct.cxd2841er_priv* %35 to i8*, !dbg !4608
  call void @kfree(i8* %36) #8, !dbg !4609
  store %struct.dvb_frontend* null, %struct.dvb_frontend** %retval, align 8, !dbg !4610
  br label %return, !dbg !4610

sw.epilog:                                        ; preds = %sw.bb24, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb
  %37 = load i8, i8* %system.addr, align 1, !dbg !4611
  %conv31 = zext i8 %37 to i32, !dbg !4611
  %cmp = icmp eq i32 %conv31, 5, !dbg !4613
  br i1 %cmp, label %if.then33, label %if.else, !dbg !4614

if.then33:                                        ; preds = %sw.epilog
  %38 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4615
  %frontend34 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %38, i32 0, i32 0, !dbg !4617
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend34, i32 0, i32 1, !dbg !4618
  %39 = bitcast %struct.dvb_frontend_ops* %ops to i8*, !dbg !4619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @cxd2841er_dvbs_s2_ops, i32 0, i32 0, i32 0, i32 0), i64 752, i1 false), !dbg !4619
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8** %type, align 8, !dbg !4620
  br label %if.end37, !dbg !4621

if.else:                                          ; preds = %sw.epilog
  %40 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4622
  %frontend35 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %40, i32 0, i32 0, !dbg !4624
  %ops36 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend35, i32 0, i32 1, !dbg !4625
  %41 = bitcast %struct.dvb_frontend_ops* %ops36 to i8*, !dbg !4626
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @cxd2841er_t_c_ops, i32 0, i32 0, i32 0, i32 0), i64 752, i1 false), !dbg !4626
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then33
  %42 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4627
  %i2c38 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %42, i32 0, i32 1, !dbg !4627
  %43 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c38, align 8, !dbg !4627
  %dev39 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %43, i32 0, i32 9, !dbg !4627
  %44 = load i8*, i8** %name, align 8, !dbg !4627
  %45 = load i8*, i8** %type, align 8, !dbg !4627
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev39, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.cxd2841er_attach, i64 0, i64 0), i8* %44, i8* %45) #9, !dbg !4627
  %46 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4628
  %i2c40 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %46, i32 0, i32 1, !dbg !4628
  %47 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c40, align 8, !dbg !4628
  %dev41 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %47, i32 0, i32 9, !dbg !4628
  %48 = load i8, i8* %chip_id, align 1, !dbg !4628
  %conv42 = zext i8 %48 to i32, !dbg !4628
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev41, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.cxd2841er_attach, i64 0, i64 0), i32 %conv42) #9, !dbg !4628
  %49 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !4629
  %frontend43 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %49, i32 0, i32 0, !dbg !4630
  store %struct.dvb_frontend* %frontend43, %struct.dvb_frontend** %retval, align 8, !dbg !4631
  br label %return, !dbg !4631

return:                                           ; preds = %if.end37, %sw.default, %if.then
  %50 = load %struct.dvb_frontend*, %struct.dvb_frontend** %retval, align 8, !dbg !4632
  ret %struct.dvb_frontend* %50, !dbg !4632
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dvb_frontend* @cxd2841er_attach_t_c(%struct.cxd2841er_config* %cfg, %struct.i2c_adapter* %i2c) #0 !dbg !4633 {
entry:
  %cfg.addr = alloca %struct.cxd2841er_config*, align 8
  %i2c.addr = alloca %struct.i2c_adapter*, align 8
  store %struct.cxd2841er_config* %cfg, %struct.cxd2841er_config** %cfg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_config** %cfg.addr, metadata !4634, metadata !DIExpression()), !dbg !4635
  store %struct.i2c_adapter* %i2c, %struct.i2c_adapter** %i2c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c.addr, metadata !4636, metadata !DIExpression()), !dbg !4637
  %0 = load %struct.cxd2841er_config*, %struct.cxd2841er_config** %cfg.addr, align 8, !dbg !4638
  %1 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c.addr, align 8, !dbg !4639
  %call = call %struct.dvb_frontend* @cxd2841er_attach(%struct.cxd2841er_config* %0, %struct.i2c_adapter* %1, i8 zeroext 0) #8, !dbg !4640
  ret %struct.dvb_frontend* %call, !dbg !4641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !4642 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4645, metadata !DIExpression()), !dbg !4649
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4655, metadata !DIExpression()), !dbg !4656
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4657, metadata !DIExpression()), !dbg !4658
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4659, metadata !DIExpression()), !dbg !4660
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4661, metadata !DIExpression()), !dbg !4665
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4667, metadata !DIExpression()), !dbg !4671
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4673, metadata !DIExpression()), !dbg !4677
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4682, metadata !DIExpression()), !dbg !4683
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4684, metadata !DIExpression()), !dbg !4685
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4686, metadata !DIExpression()), !dbg !4687
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4688, metadata !DIExpression()), !dbg !4689
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4690, metadata !DIExpression()), !dbg !4691
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4692, metadata !DIExpression()), !dbg !4693
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4694, metadata !DIExpression()), !dbg !4695
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4696, metadata !DIExpression()), !dbg !4697
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4698, metadata !DIExpression()), !dbg !4699
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4700, metadata !DIExpression()), !dbg !4701
  %0 = load i64, i64* %size.addr, align 8, !dbg !4702
  %1 = load i32, i32* %flags.addr, align 4, !dbg !4703
  %or = or i32 %1, 256, !dbg !4704
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !4705
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !4706
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !4707

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !4708
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !4709
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !4710

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !4711
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !4712
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !4713
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !4714
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !4691
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !4715
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !4716
  %10 = load i32, i32* %order.i.i, align 4, !dbg !4717
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !4718
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !4719
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !4720
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !4721
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !4721
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !4721
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !4721
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !4721
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !4722
  br label %kmalloc.exit, !dbg !4722

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !4723
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4724
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !4724
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !4726

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !4727
  br label %kmalloc_index.exit.i, !dbg !4727

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4728
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !4730
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !4731

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4732
  br label %kmalloc_index.exit.i, !dbg !4732

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4733
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !4735
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !4736

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4737
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !4738
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !4739

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !4740
  br label %kmalloc_index.exit.i, !dbg !4740

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4741
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !4743
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !4744

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4745
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !4746
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !4747

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !4748
  br label %kmalloc_index.exit.i, !dbg !4748

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4749
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !4751
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !4752

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !4753
  br label %kmalloc_index.exit.i, !dbg !4753

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4754
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !4756
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !4757

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !4758
  br label %kmalloc_index.exit.i, !dbg !4758

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4759
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !4761
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !4762

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !4763
  br label %kmalloc_index.exit.i, !dbg !4763

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4764
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !4766
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !4767

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !4768
  br label %kmalloc_index.exit.i, !dbg !4768

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4769
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !4771
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !4772

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !4773
  br label %kmalloc_index.exit.i, !dbg !4773

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4774
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !4776
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !4777

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !4778
  br label %kmalloc_index.exit.i, !dbg !4778

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4779
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !4781
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !4782

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !4783
  br label %kmalloc_index.exit.i, !dbg !4783

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4784
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !4786
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !4787

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !4788
  br label %kmalloc_index.exit.i, !dbg !4788

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4789
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !4791
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !4792

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !4793
  br label %kmalloc_index.exit.i, !dbg !4793

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4794
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !4796
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !4797

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !4798
  br label %kmalloc_index.exit.i, !dbg !4798

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4799
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !4801
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !4802

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !4803
  br label %kmalloc_index.exit.i, !dbg !4803

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4804
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !4806
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !4807

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !4808
  br label %kmalloc_index.exit.i, !dbg !4808

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4809
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !4811
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !4812

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !4813
  br label %kmalloc_index.exit.i, !dbg !4813

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4814
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !4816
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !4817

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !4818
  br label %kmalloc_index.exit.i, !dbg !4818

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4819
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !4821
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !4822

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !4823
  br label %kmalloc_index.exit.i, !dbg !4823

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4824
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !4826
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !4827

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !4828
  br label %kmalloc_index.exit.i, !dbg !4828

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4829
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !4831
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !4832

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !4833
  br label %kmalloc_index.exit.i, !dbg !4833

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4834
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !4836
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !4837

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !4838
  br label %kmalloc_index.exit.i, !dbg !4838

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4839
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !4841
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !4842

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !4843
  br label %kmalloc_index.exit.i, !dbg !4843

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4844
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !4846
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !4847

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !4848
  br label %kmalloc_index.exit.i, !dbg !4848

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4849
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !4851
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !4852

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !4853
  br label %kmalloc_index.exit.i, !dbg !4853

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4854
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !4856
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !4857

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !4858
  br label %kmalloc_index.exit.i, !dbg !4858

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4859
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !4861
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !4862

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !4863
  br label %kmalloc_index.exit.i, !dbg !4863

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !4864
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !4866
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !4867

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !4868
  br label %kmalloc_index.exit.i, !dbg !4868

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !4869, !srcloc !4872
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !4873, !srcloc !4876
  unreachable, !dbg !4877

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !4878
  store i32 %45, i32* %index.i, align 4, !dbg !4879
  %46 = load i32, i32* %index.i, align 4, !dbg !4880
  %tobool.i = icmp ne i32 %46, 0, !dbg !4880
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !4882

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !4883
  br label %kmalloc.exit, !dbg !4883

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !4884
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4885
  %and.i.i = and i32 %48, 17, !dbg !4885
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !4885
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !4885
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !4885
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !4885
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !4887

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !4888
  br label %kmalloc_type.exit.i, !dbg !4888

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !4889
  %and2.i.i = and i32 %49, 1, !dbg !4890
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !4889
  %50 = zext i1 %tobool3.i.i to i64, !dbg !4889
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !4889
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !4891
  br label %kmalloc_type.exit.i, !dbg !4891

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !4892
  %idxprom.i = zext i32 %51 to i64, !dbg !4893
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !4893
  %52 = load i32, i32* %index.i, align 4, !dbg !4894
  %idxprom6.i = zext i32 %52 to i64, !dbg !4893
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !4893
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !4893
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !4895
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !4896
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4897
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4898
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !4899
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !4899
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !4899
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !4899
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !4899
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !4660
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !4900
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !4901
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !4902
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !4903
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !4904
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !4905
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !4906
  store i8* %62, i8** %retval.i, align 8, !dbg !4907
  br label %kmalloc.exit, !dbg !4907

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !4908
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !4909
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !4910
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !4910
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !4910
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !4910
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !4910
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !4911
  br label %kmalloc.exit, !dbg !4911

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !4912
  ret i8* %65, !dbg !4913
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @cxd2841er_chip_id(%struct.cxd2841er_priv* %priv) #0 !dbg !4914 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %chip_id = alloca i8, align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !4917, metadata !DIExpression()), !dbg !4918
  call void @llvm.dbg.declare(metadata i8* %chip_id, metadata !4919, metadata !DIExpression()), !dbg !4920
  store i8 0, i8* %chip_id, align 1, !dbg !4920
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !4921
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !4923
  %cmp = icmp eq i32 %call, 0, !dbg !4924
  br i1 %cmp, label %if.then, label %if.else, !dbg !4925

if.then:                                          ; preds = %entry
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !4926
  %call1 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %1, i8 zeroext 1, i8 zeroext -3, i8* %chip_id) #8, !dbg !4927
  br label %if.end6, !dbg !4927

if.else:                                          ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !4928
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !4930
  %cmp3 = icmp eq i32 %call2, 0, !dbg !4931
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !4932

if.then4:                                         ; preds = %if.else
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !4933
  %call5 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %3, i8 zeroext 0, i8 zeroext -3, i8* %chip_id) #8, !dbg !4934
  br label %if.end, !dbg !4934

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %4 = load i8, i8* %chip_id, align 1, !dbg !4935
  ret i8 %4, !dbg !4936
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !4937 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !4941, metadata !DIExpression()), !dbg !4946
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !4948, metadata !DIExpression()), !dbg !4949
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4950, metadata !DIExpression()), !dbg !4951
  %0 = load i64, i64* %size.addr, align 8, !dbg !4952
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !4954
  br i1 %1, label %if.then, label %if.end447, !dbg !4955

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !4956
  %tobool = icmp ne i64 %2, 0, !dbg !4956
  br i1 %tobool, label %if.end, label %if.then1, !dbg !4959

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !4960
  br label %return, !dbg !4960

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !4961
  %cmp = icmp ult i64 %3, 4096, !dbg !4963
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4964

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4965
  br label %return, !dbg !4965

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub = sub i64 %4, 1, !dbg !4966
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !4966
  br i1 %5, label %cond.true, label %cond.false442, !dbg !4966

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub4 = sub i64 %6, 1, !dbg !4966
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !4966
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !4966

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub6 = sub i64 %8, 1, !dbg !4966
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !4966
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !4966

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !4966

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub9 = sub i64 %9, 1, !dbg !4966
  %and = and i64 %sub9, -9223372036854775808, !dbg !4966
  %tobool10 = icmp ne i64 %and, 0, !dbg !4966
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !4966

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !4966

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub13 = sub i64 %10, 1, !dbg !4966
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !4966
  %tobool15 = icmp ne i64 %and14, 0, !dbg !4966
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !4966

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !4966

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub18 = sub i64 %11, 1, !dbg !4966
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !4966
  %tobool20 = icmp ne i64 %and19, 0, !dbg !4966
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !4966

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !4966

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub23 = sub i64 %12, 1, !dbg !4966
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !4966
  %tobool25 = icmp ne i64 %and24, 0, !dbg !4966
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !4966

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !4966

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub28 = sub i64 %13, 1, !dbg !4966
  %and29 = and i64 %sub28, 576460752303423488, !dbg !4966
  %tobool30 = icmp ne i64 %and29, 0, !dbg !4966
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !4966

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !4966

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub33 = sub i64 %14, 1, !dbg !4966
  %and34 = and i64 %sub33, 288230376151711744, !dbg !4966
  %tobool35 = icmp ne i64 %and34, 0, !dbg !4966
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !4966

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !4966

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub38 = sub i64 %15, 1, !dbg !4966
  %and39 = and i64 %sub38, 144115188075855872, !dbg !4966
  %tobool40 = icmp ne i64 %and39, 0, !dbg !4966
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !4966

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !4966

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub43 = sub i64 %16, 1, !dbg !4966
  %and44 = and i64 %sub43, 72057594037927936, !dbg !4966
  %tobool45 = icmp ne i64 %and44, 0, !dbg !4966
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !4966

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !4966

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub48 = sub i64 %17, 1, !dbg !4966
  %and49 = and i64 %sub48, 36028797018963968, !dbg !4966
  %tobool50 = icmp ne i64 %and49, 0, !dbg !4966
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !4966

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !4966

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub53 = sub i64 %18, 1, !dbg !4966
  %and54 = and i64 %sub53, 18014398509481984, !dbg !4966
  %tobool55 = icmp ne i64 %and54, 0, !dbg !4966
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !4966

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !4966

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub58 = sub i64 %19, 1, !dbg !4966
  %and59 = and i64 %sub58, 9007199254740992, !dbg !4966
  %tobool60 = icmp ne i64 %and59, 0, !dbg !4966
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !4966

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !4966

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub63 = sub i64 %20, 1, !dbg !4966
  %and64 = and i64 %sub63, 4503599627370496, !dbg !4966
  %tobool65 = icmp ne i64 %and64, 0, !dbg !4966
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !4966

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !4966

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub68 = sub i64 %21, 1, !dbg !4966
  %and69 = and i64 %sub68, 2251799813685248, !dbg !4966
  %tobool70 = icmp ne i64 %and69, 0, !dbg !4966
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !4966

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !4966

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub73 = sub i64 %22, 1, !dbg !4966
  %and74 = and i64 %sub73, 1125899906842624, !dbg !4966
  %tobool75 = icmp ne i64 %and74, 0, !dbg !4966
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !4966

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !4966

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub78 = sub i64 %23, 1, !dbg !4966
  %and79 = and i64 %sub78, 562949953421312, !dbg !4966
  %tobool80 = icmp ne i64 %and79, 0, !dbg !4966
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !4966

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !4966

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub83 = sub i64 %24, 1, !dbg !4966
  %and84 = and i64 %sub83, 281474976710656, !dbg !4966
  %tobool85 = icmp ne i64 %and84, 0, !dbg !4966
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !4966

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !4966

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub88 = sub i64 %25, 1, !dbg !4966
  %and89 = and i64 %sub88, 140737488355328, !dbg !4966
  %tobool90 = icmp ne i64 %and89, 0, !dbg !4966
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !4966

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !4966

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub93 = sub i64 %26, 1, !dbg !4966
  %and94 = and i64 %sub93, 70368744177664, !dbg !4966
  %tobool95 = icmp ne i64 %and94, 0, !dbg !4966
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !4966

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !4966

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub98 = sub i64 %27, 1, !dbg !4966
  %and99 = and i64 %sub98, 35184372088832, !dbg !4966
  %tobool100 = icmp ne i64 %and99, 0, !dbg !4966
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !4966

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !4966

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub103 = sub i64 %28, 1, !dbg !4966
  %and104 = and i64 %sub103, 17592186044416, !dbg !4966
  %tobool105 = icmp ne i64 %and104, 0, !dbg !4966
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !4966

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !4966

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub108 = sub i64 %29, 1, !dbg !4966
  %and109 = and i64 %sub108, 8796093022208, !dbg !4966
  %tobool110 = icmp ne i64 %and109, 0, !dbg !4966
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !4966

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !4966

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub113 = sub i64 %30, 1, !dbg !4966
  %and114 = and i64 %sub113, 4398046511104, !dbg !4966
  %tobool115 = icmp ne i64 %and114, 0, !dbg !4966
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !4966

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !4966

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub118 = sub i64 %31, 1, !dbg !4966
  %and119 = and i64 %sub118, 2199023255552, !dbg !4966
  %tobool120 = icmp ne i64 %and119, 0, !dbg !4966
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !4966

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !4966

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub123 = sub i64 %32, 1, !dbg !4966
  %and124 = and i64 %sub123, 1099511627776, !dbg !4966
  %tobool125 = icmp ne i64 %and124, 0, !dbg !4966
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !4966

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !4966

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub128 = sub i64 %33, 1, !dbg !4966
  %and129 = and i64 %sub128, 549755813888, !dbg !4966
  %tobool130 = icmp ne i64 %and129, 0, !dbg !4966
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !4966

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !4966

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub133 = sub i64 %34, 1, !dbg !4966
  %and134 = and i64 %sub133, 274877906944, !dbg !4966
  %tobool135 = icmp ne i64 %and134, 0, !dbg !4966
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !4966

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !4966

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub138 = sub i64 %35, 1, !dbg !4966
  %and139 = and i64 %sub138, 137438953472, !dbg !4966
  %tobool140 = icmp ne i64 %and139, 0, !dbg !4966
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !4966

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !4966

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub143 = sub i64 %36, 1, !dbg !4966
  %and144 = and i64 %sub143, 68719476736, !dbg !4966
  %tobool145 = icmp ne i64 %and144, 0, !dbg !4966
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !4966

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !4966

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub148 = sub i64 %37, 1, !dbg !4966
  %and149 = and i64 %sub148, 34359738368, !dbg !4966
  %tobool150 = icmp ne i64 %and149, 0, !dbg !4966
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !4966

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !4966

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub153 = sub i64 %38, 1, !dbg !4966
  %and154 = and i64 %sub153, 17179869184, !dbg !4966
  %tobool155 = icmp ne i64 %and154, 0, !dbg !4966
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !4966

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !4966

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub158 = sub i64 %39, 1, !dbg !4966
  %and159 = and i64 %sub158, 8589934592, !dbg !4966
  %tobool160 = icmp ne i64 %and159, 0, !dbg !4966
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !4966

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !4966

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub163 = sub i64 %40, 1, !dbg !4966
  %and164 = and i64 %sub163, 4294967296, !dbg !4966
  %tobool165 = icmp ne i64 %and164, 0, !dbg !4966
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !4966

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !4966

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub168 = sub i64 %41, 1, !dbg !4966
  %and169 = and i64 %sub168, 2147483648, !dbg !4966
  %tobool170 = icmp ne i64 %and169, 0, !dbg !4966
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !4966

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !4966

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub173 = sub i64 %42, 1, !dbg !4966
  %and174 = and i64 %sub173, 1073741824, !dbg !4966
  %tobool175 = icmp ne i64 %and174, 0, !dbg !4966
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !4966

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !4966

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub178 = sub i64 %43, 1, !dbg !4966
  %and179 = and i64 %sub178, 536870912, !dbg !4966
  %tobool180 = icmp ne i64 %and179, 0, !dbg !4966
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !4966

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !4966

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub183 = sub i64 %44, 1, !dbg !4966
  %and184 = and i64 %sub183, 268435456, !dbg !4966
  %tobool185 = icmp ne i64 %and184, 0, !dbg !4966
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !4966

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !4966

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub188 = sub i64 %45, 1, !dbg !4966
  %and189 = and i64 %sub188, 134217728, !dbg !4966
  %tobool190 = icmp ne i64 %and189, 0, !dbg !4966
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !4966

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !4966

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub193 = sub i64 %46, 1, !dbg !4966
  %and194 = and i64 %sub193, 67108864, !dbg !4966
  %tobool195 = icmp ne i64 %and194, 0, !dbg !4966
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !4966

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !4966

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub198 = sub i64 %47, 1, !dbg !4966
  %and199 = and i64 %sub198, 33554432, !dbg !4966
  %tobool200 = icmp ne i64 %and199, 0, !dbg !4966
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !4966

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !4966

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub203 = sub i64 %48, 1, !dbg !4966
  %and204 = and i64 %sub203, 16777216, !dbg !4966
  %tobool205 = icmp ne i64 %and204, 0, !dbg !4966
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !4966

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !4966

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub208 = sub i64 %49, 1, !dbg !4966
  %and209 = and i64 %sub208, 8388608, !dbg !4966
  %tobool210 = icmp ne i64 %and209, 0, !dbg !4966
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !4966

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !4966

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub213 = sub i64 %50, 1, !dbg !4966
  %and214 = and i64 %sub213, 4194304, !dbg !4966
  %tobool215 = icmp ne i64 %and214, 0, !dbg !4966
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !4966

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !4966

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub218 = sub i64 %51, 1, !dbg !4966
  %and219 = and i64 %sub218, 2097152, !dbg !4966
  %tobool220 = icmp ne i64 %and219, 0, !dbg !4966
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !4966

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !4966

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub223 = sub i64 %52, 1, !dbg !4966
  %and224 = and i64 %sub223, 1048576, !dbg !4966
  %tobool225 = icmp ne i64 %and224, 0, !dbg !4966
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !4966

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !4966

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub228 = sub i64 %53, 1, !dbg !4966
  %and229 = and i64 %sub228, 524288, !dbg !4966
  %tobool230 = icmp ne i64 %and229, 0, !dbg !4966
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !4966

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !4966

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub233 = sub i64 %54, 1, !dbg !4966
  %and234 = and i64 %sub233, 262144, !dbg !4966
  %tobool235 = icmp ne i64 %and234, 0, !dbg !4966
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !4966

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !4966

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub238 = sub i64 %55, 1, !dbg !4966
  %and239 = and i64 %sub238, 131072, !dbg !4966
  %tobool240 = icmp ne i64 %and239, 0, !dbg !4966
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !4966

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !4966

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub243 = sub i64 %56, 1, !dbg !4966
  %and244 = and i64 %sub243, 65536, !dbg !4966
  %tobool245 = icmp ne i64 %and244, 0, !dbg !4966
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !4966

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !4966

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub248 = sub i64 %57, 1, !dbg !4966
  %and249 = and i64 %sub248, 32768, !dbg !4966
  %tobool250 = icmp ne i64 %and249, 0, !dbg !4966
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !4966

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !4966

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub253 = sub i64 %58, 1, !dbg !4966
  %and254 = and i64 %sub253, 16384, !dbg !4966
  %tobool255 = icmp ne i64 %and254, 0, !dbg !4966
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !4966

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !4966

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub258 = sub i64 %59, 1, !dbg !4966
  %and259 = and i64 %sub258, 8192, !dbg !4966
  %tobool260 = icmp ne i64 %and259, 0, !dbg !4966
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !4966

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !4966

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub263 = sub i64 %60, 1, !dbg !4966
  %and264 = and i64 %sub263, 4096, !dbg !4966
  %tobool265 = icmp ne i64 %and264, 0, !dbg !4966
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !4966

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !4966

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub268 = sub i64 %61, 1, !dbg !4966
  %and269 = and i64 %sub268, 2048, !dbg !4966
  %tobool270 = icmp ne i64 %and269, 0, !dbg !4966
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !4966

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !4966

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub273 = sub i64 %62, 1, !dbg !4966
  %and274 = and i64 %sub273, 1024, !dbg !4966
  %tobool275 = icmp ne i64 %and274, 0, !dbg !4966
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !4966

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !4966

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub278 = sub i64 %63, 1, !dbg !4966
  %and279 = and i64 %sub278, 512, !dbg !4966
  %tobool280 = icmp ne i64 %and279, 0, !dbg !4966
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !4966

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !4966

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub283 = sub i64 %64, 1, !dbg !4966
  %and284 = and i64 %sub283, 256, !dbg !4966
  %tobool285 = icmp ne i64 %and284, 0, !dbg !4966
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !4966

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !4966

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub288 = sub i64 %65, 1, !dbg !4966
  %and289 = and i64 %sub288, 128, !dbg !4966
  %tobool290 = icmp ne i64 %and289, 0, !dbg !4966
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !4966

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !4966

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub293 = sub i64 %66, 1, !dbg !4966
  %and294 = and i64 %sub293, 64, !dbg !4966
  %tobool295 = icmp ne i64 %and294, 0, !dbg !4966
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !4966

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !4966

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub298 = sub i64 %67, 1, !dbg !4966
  %and299 = and i64 %sub298, 32, !dbg !4966
  %tobool300 = icmp ne i64 %and299, 0, !dbg !4966
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !4966

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !4966

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub303 = sub i64 %68, 1, !dbg !4966
  %and304 = and i64 %sub303, 16, !dbg !4966
  %tobool305 = icmp ne i64 %and304, 0, !dbg !4966
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !4966

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !4966

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub308 = sub i64 %69, 1, !dbg !4966
  %and309 = and i64 %sub308, 8, !dbg !4966
  %tobool310 = icmp ne i64 %and309, 0, !dbg !4966
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !4966

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !4966

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub313 = sub i64 %70, 1, !dbg !4966
  %and314 = and i64 %sub313, 4, !dbg !4966
  %tobool315 = icmp ne i64 %and314, 0, !dbg !4966
  %71 = zext i1 %tobool315 to i64, !dbg !4966
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !4966
  br label %cond.end, !dbg !4966

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !4966
  br label %cond.end317, !dbg !4966

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !4966
  br label %cond.end319, !dbg !4966

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !4966
  br label %cond.end321, !dbg !4966

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !4966
  br label %cond.end323, !dbg !4966

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !4966
  br label %cond.end325, !dbg !4966

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !4966
  br label %cond.end327, !dbg !4966

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !4966
  br label %cond.end329, !dbg !4966

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !4966
  br label %cond.end331, !dbg !4966

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !4966
  br label %cond.end333, !dbg !4966

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !4966
  br label %cond.end335, !dbg !4966

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !4966
  br label %cond.end337, !dbg !4966

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !4966
  br label %cond.end339, !dbg !4966

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !4966
  br label %cond.end341, !dbg !4966

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !4966
  br label %cond.end343, !dbg !4966

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !4966
  br label %cond.end345, !dbg !4966

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !4966
  br label %cond.end347, !dbg !4966

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !4966
  br label %cond.end349, !dbg !4966

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !4966
  br label %cond.end351, !dbg !4966

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !4966
  br label %cond.end353, !dbg !4966

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !4966
  br label %cond.end355, !dbg !4966

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !4966
  br label %cond.end357, !dbg !4966

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !4966
  br label %cond.end359, !dbg !4966

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !4966
  br label %cond.end361, !dbg !4966

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !4966
  br label %cond.end363, !dbg !4966

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !4966
  br label %cond.end365, !dbg !4966

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !4966
  br label %cond.end367, !dbg !4966

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !4966
  br label %cond.end369, !dbg !4966

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !4966
  br label %cond.end371, !dbg !4966

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !4966
  br label %cond.end373, !dbg !4966

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !4966
  br label %cond.end375, !dbg !4966

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !4966
  br label %cond.end377, !dbg !4966

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !4966
  br label %cond.end379, !dbg !4966

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !4966
  br label %cond.end381, !dbg !4966

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !4966
  br label %cond.end383, !dbg !4966

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !4966
  br label %cond.end385, !dbg !4966

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !4966
  br label %cond.end387, !dbg !4966

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !4966
  br label %cond.end389, !dbg !4966

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !4966
  br label %cond.end391, !dbg !4966

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !4966
  br label %cond.end393, !dbg !4966

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !4966
  br label %cond.end395, !dbg !4966

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !4966
  br label %cond.end397, !dbg !4966

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !4966
  br label %cond.end399, !dbg !4966

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !4966
  br label %cond.end401, !dbg !4966

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !4966
  br label %cond.end403, !dbg !4966

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !4966
  br label %cond.end405, !dbg !4966

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !4966
  br label %cond.end407, !dbg !4966

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !4966
  br label %cond.end409, !dbg !4966

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !4966
  br label %cond.end411, !dbg !4966

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !4966
  br label %cond.end413, !dbg !4966

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !4966
  br label %cond.end415, !dbg !4966

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !4966
  br label %cond.end417, !dbg !4966

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !4966
  br label %cond.end419, !dbg !4966

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !4966
  br label %cond.end421, !dbg !4966

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !4966
  br label %cond.end423, !dbg !4966

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !4966
  br label %cond.end425, !dbg !4966

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !4966
  br label %cond.end427, !dbg !4966

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !4966
  br label %cond.end429, !dbg !4966

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !4966
  br label %cond.end431, !dbg !4966

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !4966
  br label %cond.end433, !dbg !4966

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !4966
  br label %cond.end435, !dbg !4966

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !4966
  br label %cond.end437, !dbg !4966

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !4966
  br label %cond.end440, !dbg !4966

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !4966

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !4966
  br label %cond.end444, !dbg !4966

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !4966
  %sub443 = sub i64 %72, 1, !dbg !4966
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !4966
  br label %cond.end444, !dbg !4966

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !4966
  %sub446 = sub i32 %cond445, 12, !dbg !4967
  %add = add i32 %sub446, 1, !dbg !4968
  store i32 %add, i32* %retval, align 4, !dbg !4969
  br label %return, !dbg !4969

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !4970
  %dec = add i64 %73, -1, !dbg !4970
  store i64 %dec, i64* %size.addr, align 8, !dbg !4970
  %74 = load i64, i64* %size.addr, align 8, !dbg !4971
  %shr = lshr i64 %74, 12, !dbg !4971
  store i64 %shr, i64* %size.addr, align 8, !dbg !4971
  %75 = load i64, i64* %size.addr, align 8, !dbg !4972
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !4949
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !4973
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !4974
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #13, !dbg !4973, !srcloc !4975
  store i32 %78, i32* %bitpos.i, align 4, !dbg !4973
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !4976
  %add.i = add i32 %79, 1, !dbg !4977
  store i32 %add.i, i32* %retval, align 4, !dbg !4978
  br label %return, !dbg !4978

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !4979
  ret i32 %80, !dbg !4979
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !4980 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !4941, metadata !DIExpression()), !dbg !4984
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !4948, metadata !DIExpression()), !dbg !4986
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !4987, metadata !DIExpression()), !dbg !4988
  %0 = load i64, i64* %n.addr, align 8, !dbg !4989
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !4986
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !4990
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !4991
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #13, !dbg !4990, !srcloc !4975
  store i32 %3, i32* %bitpos.i, align 4, !dbg !4990
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !4992
  %add.i = add i32 %4, 1, !dbg !4993
  %sub = sub i32 %add.i, 1, !dbg !4994
  ret i32 %sub, !dbg !4995
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !4996 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !5000, metadata !DIExpression()), !dbg !5001
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !5002, metadata !DIExpression()), !dbg !5003
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5004, metadata !DIExpression()), !dbg !5005
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5006, metadata !DIExpression()), !dbg !5007
  %0 = load i8*, i8** %object.addr, align 8, !dbg !5008
  ret i8* %0, !dbg !5009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %priv, i8 zeroext %addr, i8 zeroext %reg, i8 zeroext %val) #0 !dbg !5010 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %addr.addr = alloca i8, align 1
  %reg.addr = alloca i8, align 1
  %val.addr = alloca i8, align 1
  %tmp = alloca i8, align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !5013, metadata !DIExpression()), !dbg !5014
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !5015, metadata !DIExpression()), !dbg !5016
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !5017, metadata !DIExpression()), !dbg !5018
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !5019, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !5021, metadata !DIExpression()), !dbg !5022
  %0 = load i8, i8* %val.addr, align 1, !dbg !5023
  store i8 %0, i8* %tmp, align 1, !dbg !5022
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5024
  %2 = load i8, i8* %addr.addr, align 1, !dbg !5025
  %3 = load i8, i8* %reg.addr, align 1, !dbg !5026
  %call = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %1, i8 zeroext %2, i8 zeroext %3, i8* %tmp, i32 1) #8, !dbg !5027
  ret i32 %call, !dbg !5028
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %priv, i8 zeroext %addr, i8 zeroext %reg, i8* %val) #0 !dbg !5029 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %addr.addr = alloca i8, align 1
  %reg.addr = alloca i8, align 1
  %val.addr = alloca i8*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !5032, metadata !DIExpression()), !dbg !5033
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !5034, metadata !DIExpression()), !dbg !5035
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !5036, metadata !DIExpression()), !dbg !5037
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !5038, metadata !DIExpression()), !dbg !5039
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5040
  %1 = load i8, i8* %addr.addr, align 1, !dbg !5041
  %2 = load i8, i8* %reg.addr, align 1, !dbg !5042
  %3 = load i8*, i8** %val.addr, align 8, !dbg !5043
  %call = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %0, i8 zeroext %1, i8 zeroext %2, i8* %3, i32 1) #8, !dbg !5044
  ret i32 %call, !dbg !5045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %priv, i8 zeroext %addr, i8 zeroext %reg, i8* %data, i32 %len) #0 !dbg !5046 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %addr.addr = alloca i8, align 1
  %reg.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %buf = alloca [17 x i8], align 16
  %i2c_addr = alloca i8, align 1
  %msg = alloca [1 x %struct.i2c_msg], align 16
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !5049, metadata !DIExpression()), !dbg !5050
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !5051, metadata !DIExpression()), !dbg !5052
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !5053, metadata !DIExpression()), !dbg !5054
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5055, metadata !DIExpression()), !dbg !5056
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !5057, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5059, metadata !DIExpression()), !dbg !5060
  call void @llvm.dbg.declare(metadata [17 x i8]* %buf, metadata !5061, metadata !DIExpression()), !dbg !5065
  call void @llvm.dbg.declare(metadata i8* %i2c_addr, metadata !5066, metadata !DIExpression()), !dbg !5067
  %0 = load i8, i8* %addr.addr, align 1, !dbg !5068
  %conv = zext i8 %0 to i32, !dbg !5068
  %cmp = icmp eq i32 %conv, 0, !dbg !5069
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5068

cond.true:                                        ; preds = %entry
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5070
  %i2c_addr_slvx = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 2, !dbg !5071
  %2 = load i8, i8* %i2c_addr_slvx, align 8, !dbg !5071
  %conv2 = zext i8 %2 to i32, !dbg !5070
  br label %cond.end, !dbg !5068

cond.false:                                       ; preds = %entry
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5072
  %i2c_addr_slvt = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 3, !dbg !5073
  %4 = load i8, i8* %i2c_addr_slvt, align 1, !dbg !5073
  %conv3 = zext i8 %4 to i32, !dbg !5072
  br label %cond.end, !dbg !5068

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %conv3, %cond.false ], !dbg !5068
  %conv4 = trunc i32 %cond to i8, !dbg !5074
  store i8 %conv4, i8* %i2c_addr, align 1, !dbg !5067
  call void @llvm.dbg.declare(metadata [1 x %struct.i2c_msg]* %msg, metadata !5075, metadata !DIExpression()), !dbg !5077
  %arrayinit.begin = getelementptr inbounds [1 x %struct.i2c_msg], [1 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !5078
  %addr5 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 0, !dbg !5079
  %5 = load i8, i8* %i2c_addr, align 1, !dbg !5080
  %conv6 = zext i8 %5 to i16, !dbg !5080
  store i16 %conv6, i16* %addr5, align 16, !dbg !5079
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 1, !dbg !5079
  store i16 0, i16* %flags, align 2, !dbg !5079
  %len7 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 2, !dbg !5079
  %6 = load i32, i32* %len.addr, align 4, !dbg !5081
  %add = add i32 %6, 1, !dbg !5082
  %conv8 = trunc i32 %add to i16, !dbg !5081
  store i16 %conv8, i16* %len7, align 4, !dbg !5079
  %buf9 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 3, !dbg !5079
  %arraydecay = getelementptr inbounds [17 x i8], [17 x i8]* %buf, i64 0, i64 0, !dbg !5083
  store i8* %arraydecay, i8** %buf9, align 8, !dbg !5079
  %7 = load i32, i32* %len.addr, align 4, !dbg !5084
  %add10 = add i32 %7, 1, !dbg !5086
  %conv11 = zext i32 %add10 to i64, !dbg !5084
  %cmp12 = icmp uge i64 %conv11, 17, !dbg !5087
  br i1 %cmp12, label %if.then, label %if.end, !dbg !5088

if.then:                                          ; preds = %cond.end
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5089
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %8, i32 0, i32 1, !dbg !5089
  %9 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !5089
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %9, i32 0, i32 9, !dbg !5089
  %10 = load i8, i8* %reg.addr, align 1, !dbg !5089
  %conv14 = zext i8 %10 to i32, !dbg !5089
  %11 = load i32, i32* %len.addr, align 4, !dbg !5089
  %add15 = add i32 %11, 1, !dbg !5089
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i64 0, i64 0), i32 %conv14, i32 %add15) #9, !dbg !5089
  store i32 -7, i32* %retval, align 4, !dbg !5091
  br label %return, !dbg !5091

if.end:                                           ; preds = %cond.end
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5092
  %13 = load i8, i8* %i2c_addr, align 1, !dbg !5093
  %14 = load i8, i8* %reg.addr, align 1, !dbg !5094
  %15 = load i8*, i8** %data.addr, align 8, !dbg !5095
  %16 = load i32, i32* %len.addr, align 4, !dbg !5096
  call void @cxd2841er_i2c_debug(%struct.cxd2841er_priv* %12, i8 zeroext %13, i8 zeroext %14, i8 zeroext 1, i8* %15, i32 %16) #8, !dbg !5097
  %17 = load i8, i8* %reg.addr, align 1, !dbg !5098
  %arrayidx = getelementptr [17 x i8], [17 x i8]* %buf, i64 0, i64 0, !dbg !5099
  store i8 %17, i8* %arrayidx, align 16, !dbg !5100
  %arrayidx16 = getelementptr [17 x i8], [17 x i8]* %buf, i64 0, i64 1, !dbg !5101
  %18 = load i8*, i8** %data.addr, align 8, !dbg !5102
  %19 = load i32, i32* %len.addr, align 4, !dbg !5103
  %conv17 = zext i32 %19 to i64, !dbg !5103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx16, i8* align 1 %18, i64 %conv17, i1 false), !dbg !5104
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5105
  %i2c18 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %20, i32 0, i32 1, !dbg !5106
  %21 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c18, align 8, !dbg !5106
  %arraydecay19 = getelementptr inbounds [1 x %struct.i2c_msg], [1 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !5107
  %call = call i32 @i2c_transfer(%struct.i2c_adapter* %21, %struct.i2c_msg* %arraydecay19, i32 1) #8, !dbg !5108
  store i32 %call, i32* %ret, align 4, !dbg !5109
  %22 = load i32, i32* %ret, align 4, !dbg !5110
  %cmp20 = icmp sge i32 %22, 0, !dbg !5112
  br i1 %cmp20, label %land.lhs.true, label %if.end25, !dbg !5113

land.lhs.true:                                    ; preds = %if.end
  %23 = load i32, i32* %ret, align 4, !dbg !5114
  %cmp22 = icmp ne i32 %23, 1, !dbg !5115
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !5116

if.then24:                                        ; preds = %land.lhs.true
  store i32 -5, i32* %ret, align 4, !dbg !5117
  br label %if.end25, !dbg !5118

if.end25:                                         ; preds = %if.then24, %land.lhs.true, %if.end
  %24 = load i32, i32* %ret, align 4, !dbg !5119
  %cmp26 = icmp slt i32 %24, 0, !dbg !5121
  br i1 %cmp26, label %if.then28, label %if.end33, !dbg !5122

if.then28:                                        ; preds = %if.end25
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5123
  %i2c29 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %25, i32 0, i32 1, !dbg !5123
  %26 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c29, align 8, !dbg !5123
  %dev30 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %26, i32 0, i32 9, !dbg !5123
  %27 = load i32, i32* %ret, align 4, !dbg !5123
  %28 = load i8, i8* %i2c_addr, align 1, !dbg !5123
  %conv31 = zext i8 %28 to i32, !dbg !5123
  %29 = load i8, i8* %reg.addr, align 1, !dbg !5123
  %conv32 = zext i8 %29 to i32, !dbg !5123
  %30 = load i32, i32* %len.addr, align 4, !dbg !5123
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev30, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), i32 %27, i32 %conv31, i32 %conv32, i32 %30) #9, !dbg !5123
  %31 = load i32, i32* %ret, align 4, !dbg !5125
  store i32 %31, i32* %retval, align 4, !dbg !5126
  br label %return, !dbg !5126

if.end33:                                         ; preds = %if.end25
  store i32 0, i32* %retval, align 4, !dbg !5127
  br label %return, !dbg !5127

return:                                           ; preds = %if.end33, %if.then28, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !5128
  ret i32 %32, !dbg !5128
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cxd2841er_i2c_debug(%struct.cxd2841er_priv* %priv, i8 zeroext %addr, i8 zeroext %reg, i8 zeroext %write, i8* %data, i32 %len) #0 !dbg !5129 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %addr.addr = alloca i8, align 1
  %reg.addr = alloca i8, align 1
  %write.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !5132, metadata !DIExpression()), !dbg !5133
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !5134, metadata !DIExpression()), !dbg !5135
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !5136, metadata !DIExpression()), !dbg !5137
  store i8 %write, i8* %write.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %write.addr, metadata !5138, metadata !DIExpression()), !dbg !5139
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5140, metadata !DIExpression()), !dbg !5141
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !5142, metadata !DIExpression()), !dbg !5143
  ret void, !dbg !5144
}

; Function Attrs: noredzone
declare dso_local i32 @i2c_transfer(%struct.i2c_adapter*, %struct.i2c_msg*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %priv, i8 zeroext %addr, i8 zeroext %reg, i8* %val, i32 %len) #0 !dbg !5145 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %addr.addr = alloca i8, align 1
  %reg.addr = alloca i8, align 1
  %val.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %i2c_addr = alloca i8, align 1
  %msg = alloca [2 x %struct.i2c_msg], align 16
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !5148, metadata !DIExpression()), !dbg !5149
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !5150, metadata !DIExpression()), !dbg !5151
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !5152, metadata !DIExpression()), !dbg !5153
  store i8* %val, i8** %val.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %val.addr, metadata !5154, metadata !DIExpression()), !dbg !5155
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !5156, metadata !DIExpression()), !dbg !5157
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5158, metadata !DIExpression()), !dbg !5159
  call void @llvm.dbg.declare(metadata i8* %i2c_addr, metadata !5160, metadata !DIExpression()), !dbg !5161
  %0 = load i8, i8* %addr.addr, align 1, !dbg !5162
  %conv = zext i8 %0 to i32, !dbg !5162
  %cmp = icmp eq i32 %conv, 0, !dbg !5163
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5162

cond.true:                                        ; preds = %entry
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5164
  %i2c_addr_slvx = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 2, !dbg !5165
  %2 = load i8, i8* %i2c_addr_slvx, align 8, !dbg !5165
  %conv2 = zext i8 %2 to i32, !dbg !5164
  br label %cond.end, !dbg !5162

cond.false:                                       ; preds = %entry
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5166
  %i2c_addr_slvt = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 3, !dbg !5167
  %4 = load i8, i8* %i2c_addr_slvt, align 1, !dbg !5167
  %conv3 = zext i8 %4 to i32, !dbg !5166
  br label %cond.end, !dbg !5162

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %conv3, %cond.false ], !dbg !5162
  %conv4 = trunc i32 %cond to i8, !dbg !5168
  store i8 %conv4, i8* %i2c_addr, align 1, !dbg !5161
  call void @llvm.dbg.declare(metadata [2 x %struct.i2c_msg]* %msg, metadata !5169, metadata !DIExpression()), !dbg !5171
  %arrayinit.begin = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !5172
  %addr5 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 0, !dbg !5173
  %5 = load i8, i8* %i2c_addr, align 1, !dbg !5174
  %conv6 = zext i8 %5 to i16, !dbg !5174
  store i16 %conv6, i16* %addr5, align 16, !dbg !5173
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 1, !dbg !5173
  store i16 0, i16* %flags, align 2, !dbg !5173
  %len7 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 2, !dbg !5173
  store i16 1, i16* %len7, align 4, !dbg !5173
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 3, !dbg !5173
  store i8* %reg.addr, i8** %buf, align 8, !dbg !5173
  %arrayinit.element = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i64 1, !dbg !5172
  %addr8 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 0, !dbg !5175
  %6 = load i8, i8* %i2c_addr, align 1, !dbg !5176
  %conv9 = zext i8 %6 to i16, !dbg !5176
  store i16 %conv9, i16* %addr8, align 16, !dbg !5175
  %flags10 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 1, !dbg !5175
  store i16 1, i16* %flags10, align 2, !dbg !5175
  %len11 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 2, !dbg !5175
  %7 = load i32, i32* %len.addr, align 4, !dbg !5177
  %conv12 = trunc i32 %7 to i16, !dbg !5177
  store i16 %conv12, i16* %len11, align 4, !dbg !5175
  %buf13 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 3, !dbg !5175
  %8 = load i8*, i8** %val.addr, align 8, !dbg !5178
  store i8* %8, i8** %buf13, align 8, !dbg !5175
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5179
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %9, i32 0, i32 1, !dbg !5180
  %10 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !5180
  %arraydecay = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !5181
  %call = call i32 @i2c_transfer(%struct.i2c_adapter* %10, %struct.i2c_msg* %arraydecay, i32 2) #8, !dbg !5182
  store i32 %call, i32* %ret, align 4, !dbg !5183
  %11 = load i32, i32* %ret, align 4, !dbg !5184
  %cmp14 = icmp sge i32 %11, 0, !dbg !5186
  br i1 %cmp14, label %land.lhs.true, label %if.end, !dbg !5187

land.lhs.true:                                    ; preds = %cond.end
  %12 = load i32, i32* %ret, align 4, !dbg !5188
  %cmp16 = icmp ne i32 %12, 2, !dbg !5189
  br i1 %cmp16, label %if.then, label %if.end, !dbg !5190

if.then:                                          ; preds = %land.lhs.true
  store i32 -5, i32* %ret, align 4, !dbg !5191
  br label %if.end, !dbg !5192

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  %13 = load i32, i32* %ret, align 4, !dbg !5193
  %cmp18 = icmp slt i32 %13, 0, !dbg !5195
  br i1 %cmp18, label %if.then20, label %if.end24, !dbg !5196

if.then20:                                        ; preds = %if.end
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5197
  %i2c21 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %14, i32 0, i32 1, !dbg !5197
  %15 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c21, align 8, !dbg !5197
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %15, i32 0, i32 9, !dbg !5197
  %16 = load i32, i32* %ret, align 4, !dbg !5197
  %17 = load i8, i8* %i2c_addr, align 1, !dbg !5197
  %conv22 = zext i8 %17 to i32, !dbg !5197
  %18 = load i8, i8* %reg.addr, align 1, !dbg !5197
  %conv23 = zext i8 %18 to i32, !dbg !5197
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), i32 %16, i32 %conv22, i32 %conv23) #9, !dbg !5197
  %19 = load i32, i32* %ret, align 4, !dbg !5199
  store i32 %19, i32* %retval, align 4, !dbg !5200
  br label %return, !dbg !5200

if.end24:                                         ; preds = %if.end
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5201
  %21 = load i8, i8* %i2c_addr, align 1, !dbg !5202
  %22 = load i8, i8* %reg.addr, align 1, !dbg !5203
  %23 = load i8*, i8** %val.addr, align 8, !dbg !5204
  %24 = load i32, i32* %len.addr, align 4, !dbg !5205
  call void @cxd2841er_i2c_debug(%struct.cxd2841er_priv* %20, i8 zeroext %21, i8 zeroext %22, i8 zeroext 0, i8* %23, i32 %24) #8, !dbg !5206
  store i32 0, i32* %retval, align 4, !dbg !5207
  br label %return, !dbg !5207

return:                                           ; preds = %if.end24, %if.then20
  %25 = load i32, i32* %retval, align 4, !dbg !5208
  ret i32 %25, !dbg !5208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cxd2841er_release(%struct.dvb_frontend* %fe) #0 !dbg !5209 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5210, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !5212, metadata !DIExpression()), !dbg !5213
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5214
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5215
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5215
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !5214
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !5213
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5216
  %4 = bitcast %struct.cxd2841er_priv* %3 to i8*, !dbg !5216
  call void @kfree(i8* %4) #8, !dbg !5217
  ret void, !dbg !5218
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_init_tc(%struct.dvb_frontend* %fe) #0 !dbg !5219 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5220, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !5222, metadata !DIExpression()), !dbg !5223
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5224
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5225
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5225
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !5224
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !5223
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !5226, metadata !DIExpression()), !dbg !5227
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5228
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 8, !dbg !5229
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !5227
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5230
  %call = call i32 @cxd2841er_shutdown_to_sleep_tc(%struct.cxd2841er_priv* %4) #8, !dbg !5231
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5232
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !5233
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5234
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5235
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %7, i32 0, i32 9, !dbg !5236
  %8 = load i32, i32* %flags, align 8, !dbg !5236
  %and = and i32 %8, 64, !dbg !5237
  %tobool = icmp ne i32 %and, 0, !dbg !5238
  %9 = zext i1 %tobool to i64, !dbg !5238
  %cond = select i1 %tobool, i32 0, i32 64, !dbg !5238
  %conv = trunc i32 %cond to i8, !dbg !5239
  %call2 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext -53, i8 zeroext %conv, i8 zeroext 64) #8, !dbg !5240
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5241
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext 1, i8 zeroext -51, i8 zeroext 80) #8, !dbg !5242
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5243
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %11, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !5244
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5245
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5246
  %flags5 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %13, i32 0, i32 9, !dbg !5247
  %14 = load i32, i32* %flags5, align 8, !dbg !5247
  %and6 = and i32 %14, 4, !dbg !5248
  %tobool7 = icmp ne i32 %and6, 0, !dbg !5249
  %15 = zext i1 %tobool7 to i64, !dbg !5249
  %cond8 = select i1 %tobool7, i32 128, i32 0, !dbg !5249
  %conv9 = trunc i32 %cond8 to i8, !dbg !5250
  %call10 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext -60, i8 zeroext %conv9, i8 zeroext -128) #8, !dbg !5251
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5252
  %flags11 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %16, i32 0, i32 9, !dbg !5254
  %17 = load i32, i32* %flags11, align 8, !dbg !5254
  %and12 = and i32 %17, 128, !dbg !5255
  %tobool13 = icmp ne i32 %and12, 0, !dbg !5255
  br i1 %tobool13, label %if.then, label %if.end, !dbg !5256

if.then:                                          ; preds = %entry
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5257
  %call14 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %18, i8 zeroext 1, i8 zeroext -60, i8 zeroext 0, i8 zeroext 24) #8, !dbg !5258
  br label %if.end, !dbg !5258

if.end:                                           ; preds = %if.then, %entry
  %19 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5259
  call void @cxd2841er_init_stats(%struct.dvb_frontend* %19) #8, !dbg !5260
  ret i32 0, !dbg !5261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_shutdown_tc(%struct.dvb_frontend* %fe) #0 !dbg !5262 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5263, metadata !DIExpression()), !dbg !5264
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !5265, metadata !DIExpression()), !dbg !5266
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5267
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5268
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5268
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !5267
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !5266
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5269
  %call = call i32 @cxd2841er_sleep_tc(%struct.dvb_frontend* %3) #8, !dbg !5271
  %tobool = icmp ne i32 %call, 0, !dbg !5271
  br i1 %tobool, label %if.end, label %if.then, !dbg !5272

if.then:                                          ; preds = %entry
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5273
  %call1 = call i32 @cxd2841er_sleep_tc_to_shutdown(%struct.cxd2841er_priv* %4) #8, !dbg !5274
  br label %if.end, !dbg !5274

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !5275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_tune_tc(%struct.dvb_frontend* %fe, i1 zeroext %re_tune, i32 %mode_flags, i32* %delay, i32* %status) #0 !dbg !5276 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %re_tune.addr = alloca i8, align 1
  %mode_flags.addr = alloca i32, align 4
  %delay.addr = alloca i32*, align 8
  %status.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  %carrier_offset = alloca i32, align 4
  %priv = alloca %struct.cxd2841er_priv*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5277, metadata !DIExpression()), !dbg !5278
  %frombool = zext i1 %re_tune to i8
  store i8 %frombool, i8* %re_tune.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %re_tune.addr, metadata !5279, metadata !DIExpression()), !dbg !5280
  store i32 %mode_flags, i32* %mode_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode_flags.addr, metadata !5281, metadata !DIExpression()), !dbg !5282
  store i32* %delay, i32** %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %delay.addr, metadata !5283, metadata !DIExpression()), !dbg !5284
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !5285, metadata !DIExpression()), !dbg !5286
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5287, metadata !DIExpression()), !dbg !5288
  call void @llvm.dbg.declare(metadata i32* %carrier_offset, metadata !5289, metadata !DIExpression()), !dbg !5290
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !5291, metadata !DIExpression()), !dbg !5292
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5293
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5294
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5294
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !5293
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !5292
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !5295, metadata !DIExpression()), !dbg !5296
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5297
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 8, !dbg !5298
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !5296
  %4 = load i8, i8* %re_tune.addr, align 1, !dbg !5299
  %tobool = trunc i8 %4 to i1, !dbg !5299
  br i1 %tobool, label %if.then, label %if.end32, !dbg !5301

if.then:                                          ; preds = %entry
  %5 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5302
  %call = call i32 @cxd2841er_set_frontend_tc(%struct.dvb_frontend* %5) #8, !dbg !5304
  store i32 %call, i32* %ret, align 4, !dbg !5305
  %6 = load i32, i32* %ret, align 4, !dbg !5306
  %tobool1 = icmp ne i32 %6, 0, !dbg !5306
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !5308

if.then2:                                         ; preds = %if.then
  %7 = load i32, i32* %ret, align 4, !dbg !5309
  store i32 %7, i32* %retval, align 4, !dbg !5310
  br label %return, !dbg !5310

if.end:                                           ; preds = %if.then
  %8 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5311
  %9 = load i32*, i32** %status.addr, align 8, !dbg !5312
  %call3 = call i32 @cxd2841er_read_status_tc(%struct.dvb_frontend* %8, i32* %9) #8, !dbg !5313
  %10 = load i32*, i32** %status.addr, align 8, !dbg !5314
  %11 = load i32, i32* %10, align 4, !dbg !5316
  %and = and i32 %11, 16, !dbg !5317
  %tobool4 = icmp ne i32 %and, 0, !dbg !5317
  br i1 %tobool4, label %if.then5, label %if.end31, !dbg !5318

if.then5:                                         ; preds = %if.end
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5319
  %system = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %12, i32 0, i32 6, !dbg !5321
  %13 = load i8, i8* %system, align 4, !dbg !5321
  %conv = zext i8 %13 to i32, !dbg !5319
  switch i32 %conv, label %sw.default [
    i32 8, label %sw.bb
    i32 3, label %sw.bb10
    i32 16, label %sw.bb16
    i32 1, label %sw.bb22
  ], !dbg !5322

sw.bb:                                            ; preds = %if.then5
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5323
  %15 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5325
  %bandwidth_hz = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %15, i32 0, i32 7, !dbg !5326
  %16 = load i32, i32* %bandwidth_hz, align 4, !dbg !5326
  %call6 = call i32 @cxd2841er_get_carrier_offset_i(%struct.cxd2841er_priv* %14, i32 %16, i32* %carrier_offset) #8, !dbg !5327
  store i32 %call6, i32* %ret, align 4, !dbg !5328
  %17 = load i32, i32* %ret, align 4, !dbg !5329
  %tobool7 = icmp ne i32 %17, 0, !dbg !5329
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !5331

if.then8:                                         ; preds = %sw.bb
  %18 = load i32, i32* %ret, align 4, !dbg !5332
  store i32 %18, i32* %retval, align 4, !dbg !5333
  br label %return, !dbg !5333

if.end9:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !5334

sw.bb10:                                          ; preds = %if.then5
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5335
  %20 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5336
  %bandwidth_hz11 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %20, i32 0, i32 7, !dbg !5337
  %21 = load i32, i32* %bandwidth_hz11, align 4, !dbg !5337
  %call12 = call i32 @cxd2841er_get_carrier_offset_t(%struct.cxd2841er_priv* %19, i32 %21, i32* %carrier_offset) #8, !dbg !5338
  store i32 %call12, i32* %ret, align 4, !dbg !5339
  %22 = load i32, i32* %ret, align 4, !dbg !5340
  %tobool13 = icmp ne i32 %22, 0, !dbg !5340
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !5342

if.then14:                                        ; preds = %sw.bb10
  %23 = load i32, i32* %ret, align 4, !dbg !5343
  store i32 %23, i32* %retval, align 4, !dbg !5344
  br label %return, !dbg !5344

if.end15:                                         ; preds = %sw.bb10
  br label %sw.epilog, !dbg !5345

sw.bb16:                                          ; preds = %if.then5
  %24 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5346
  %25 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5347
  %bandwidth_hz17 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %25, i32 0, i32 7, !dbg !5348
  %26 = load i32, i32* %bandwidth_hz17, align 4, !dbg !5348
  %call18 = call i32 @cxd2841er_get_carrier_offset_t2(%struct.cxd2841er_priv* %24, i32 %26, i32* %carrier_offset) #8, !dbg !5349
  store i32 %call18, i32* %ret, align 4, !dbg !5350
  %27 = load i32, i32* %ret, align 4, !dbg !5351
  %tobool19 = icmp ne i32 %27, 0, !dbg !5351
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !5353

if.then20:                                        ; preds = %sw.bb16
  %28 = load i32, i32* %ret, align 4, !dbg !5354
  store i32 %28, i32* %retval, align 4, !dbg !5355
  br label %return, !dbg !5355

if.end21:                                         ; preds = %sw.bb16
  br label %sw.epilog, !dbg !5356

sw.bb22:                                          ; preds = %if.then5
  %29 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5357
  %call23 = call i32 @cxd2841er_get_carrier_offset_c(%struct.cxd2841er_priv* %29, i32* %carrier_offset) #8, !dbg !5358
  store i32 %call23, i32* %ret, align 4, !dbg !5359
  %30 = load i32, i32* %ret, align 4, !dbg !5360
  %tobool24 = icmp ne i32 %30, 0, !dbg !5360
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !5362

if.then25:                                        ; preds = %sw.bb22
  %31 = load i32, i32* %ret, align 4, !dbg !5363
  store i32 %31, i32* %retval, align 4, !dbg !5364
  br label %return, !dbg !5364

if.end26:                                         ; preds = %sw.bb22
  br label %sw.epilog, !dbg !5365

sw.default:                                       ; preds = %if.then5
  store i32 -22, i32* %retval, align 4, !dbg !5366
  br label %return, !dbg !5366

sw.epilog:                                        ; preds = %if.end26, %if.end21, %if.end15, %if.end9
  %32 = load i32, i32* %carrier_offset, align 4, !dbg !5367
  %33 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5368
  %frequency = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %33, i32 0, i32 0, !dbg !5369
  %34 = load i32, i32* %frequency, align 4, !dbg !5370
  %add = add i32 %34, %32, !dbg !5370
  store i32 %add, i32* %frequency, align 4, !dbg !5370
  %35 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5371
  %call27 = call i32 @cxd2841er_set_frontend_tc(%struct.dvb_frontend* %35) #8, !dbg !5372
  store i32 %call27, i32* %ret, align 4, !dbg !5373
  %36 = load i32, i32* %ret, align 4, !dbg !5374
  %tobool28 = icmp ne i32 %36, 0, !dbg !5374
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !5376

if.then29:                                        ; preds = %sw.epilog
  %37 = load i32, i32* %ret, align 4, !dbg !5377
  store i32 %37, i32* %retval, align 4, !dbg !5378
  br label %return, !dbg !5378

if.end30:                                         ; preds = %sw.epilog
  br label %if.end31, !dbg !5379

if.end31:                                         ; preds = %if.end30, %if.end
  br label %if.end32, !dbg !5380

if.end32:                                         ; preds = %if.end31, %entry
  %38 = load i32*, i32** %delay.addr, align 8, !dbg !5381
  store i32 50, i32* %38, align 4, !dbg !5382
  %39 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5383
  %40 = load i32*, i32** %status.addr, align 8, !dbg !5384
  %call33 = call i32 @cxd2841er_read_status_tc(%struct.dvb_frontend* %39, i32* %40) #8, !dbg !5385
  store i32 %call33, i32* %retval, align 4, !dbg !5386
  br label %return, !dbg !5386

return:                                           ; preds = %if.end32, %if.then29, %sw.default, %if.then25, %if.then20, %if.then14, %if.then8, %if.then2
  %41 = load i32, i32* %retval, align 4, !dbg !5387
  ret i32 %41, !dbg !5387
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_get_algo(%struct.dvb_frontend* %fe) #0 !dbg !5388 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5389, metadata !DIExpression()), !dbg !5390
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !5391, metadata !DIExpression()), !dbg !5392
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5393
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5394
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5394
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !5393
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !5392
  ret i32 1, !dbg !5395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_set_frontend_tc(%struct.dvb_frontend* %fe) #0 !dbg !5396 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %ret = alloca i32, align 4
  %timeout = alloca i32, align 4
  %status = alloca i32, align 4
  %priv = alloca %struct.cxd2841er_priv*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5397, metadata !DIExpression()), !dbg !5398
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5399, metadata !DIExpression()), !dbg !5400
  store i32 0, i32* %ret, align 4, !dbg !5400
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !5401, metadata !DIExpression()), !dbg !5402
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5403, metadata !DIExpression()), !dbg !5404
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !5405, metadata !DIExpression()), !dbg !5406
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5407
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5408
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5408
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !5407
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !5406
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !5409, metadata !DIExpression()), !dbg !5410
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5411
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 8, !dbg !5412
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !5410
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5413
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %4, i32 0, i32 9, !dbg !5415
  %5 = load i32, i32* %flags, align 8, !dbg !5415
  %and = and i32 %5, 16, !dbg !5416
  %tobool = icmp ne i32 %and, 0, !dbg !5416
  br i1 %tobool, label %if.then, label %if.end, !dbg !5417

if.then:                                          ; preds = %entry
  %6 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5418
  %call = call i32 @cxd2841er_tuner_set(%struct.dvb_frontend* %6) #8, !dbg !5419
  br label %if.end, !dbg !5419

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5420
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %7, i32 0, i32 5, !dbg !5422
  %8 = load i32, i32* %state, align 8, !dbg !5422
  %cmp = icmp eq i32 %8, 4, !dbg !5423
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !5424

land.lhs.true:                                    ; preds = %if.end
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5425
  %system = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %9, i32 0, i32 6, !dbg !5426
  %10 = load i8, i8* %system, align 4, !dbg !5426
  %conv = zext i8 %10 to i32, !dbg !5425
  %11 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5427
  %delivery_system = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %11, i32 0, i32 15, !dbg !5428
  %12 = load i32, i32* %delivery_system, align 4, !dbg !5428
  %cmp1 = icmp ne i32 %conv, %12, !dbg !5429
  br i1 %cmp1, label %if.then3, label %if.end5, !dbg !5430

if.then3:                                         ; preds = %land.lhs.true
  %13 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5431
  %call4 = call i32 @cxd2841er_sleep_tc(%struct.dvb_frontend* %13) #8, !dbg !5433
  br label %if.end5, !dbg !5434

if.end5:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %14 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5435
  %delivery_system6 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %14, i32 0, i32 15, !dbg !5437
  %15 = load i32, i32* %delivery_system6, align 4, !dbg !5437
  %cmp7 = icmp eq i32 %15, 3, !dbg !5438
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !5439

if.then9:                                         ; preds = %if.end5
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5440
  %system10 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %16, i32 0, i32 6, !dbg !5442
  store i8 3, i8* %system10, align 4, !dbg !5443
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5444
  %state11 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %17, i32 0, i32 5, !dbg !5445
  %18 = load i32, i32* %state11, align 8, !dbg !5445
  switch i32 %18, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb13
  ], !dbg !5446

sw.bb:                                            ; preds = %if.then9
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5447
  %20 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5449
  %bandwidth_hz = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %20, i32 0, i32 7, !dbg !5450
  %21 = load i32, i32* %bandwidth_hz, align 4, !dbg !5450
  %call12 = call i32 @cxd2841er_sleep_tc_to_active_t(%struct.cxd2841er_priv* %19, i32 %21) #8, !dbg !5451
  store i32 %call12, i32* %ret, align 4, !dbg !5452
  br label %sw.epilog, !dbg !5453

sw.bb13:                                          ; preds = %if.then9
  %22 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5454
  %23 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5455
  %call14 = call i32 @cxd2841er_retune_active(%struct.cxd2841er_priv* %22, %struct.dtv_frontend_properties* %23) #8, !dbg !5456
  store i32 %call14, i32* %ret, align 4, !dbg !5457
  br label %sw.epilog, !dbg !5458

sw.default:                                       ; preds = %if.then9
  store i32 -22, i32* %ret, align 4, !dbg !5459
  br label %sw.epilog, !dbg !5460

sw.epilog:                                        ; preds = %sw.default, %sw.bb13, %sw.bb
  br label %if.end84, !dbg !5461

if.else:                                          ; preds = %if.end5
  %24 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5462
  %delivery_system15 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %24, i32 0, i32 15, !dbg !5464
  %25 = load i32, i32* %delivery_system15, align 4, !dbg !5464
  %cmp16 = icmp eq i32 %25, 16, !dbg !5465
  br i1 %cmp16, label %if.then18, label %if.else35, !dbg !5466

if.then18:                                        ; preds = %if.else
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5467
  %system19 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %26, i32 0, i32 6, !dbg !5469
  store i8 16, i8* %system19, align 4, !dbg !5470
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5471
  %28 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5472
  %stream_id = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %28, i32 0, i32 24, !dbg !5473
  %29 = load i32, i32* %stream_id, align 4, !dbg !5473
  %cmp20 = icmp ugt i32 %29, 255, !dbg !5474
  %conv21 = zext i1 %cmp20 to i32, !dbg !5474
  %conv22 = trunc i32 %conv21 to i8, !dbg !5475
  %30 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5476
  %stream_id23 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %30, i32 0, i32 24, !dbg !5477
  %31 = load i32, i32* %stream_id23, align 4, !dbg !5477
  %conv24 = trunc i32 %31 to i8, !dbg !5476
  %call25 = call i32 @cxd2841er_dvbt2_set_plp_config(%struct.cxd2841er_priv* %27, i8 zeroext %conv22, i8 zeroext %conv24) #8, !dbg !5478
  %32 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5479
  %call26 = call i32 @cxd2841er_dvbt2_set_profile(%struct.cxd2841er_priv* %32, i32 1) #8, !dbg !5480
  %33 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5481
  %state27 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %33, i32 0, i32 5, !dbg !5482
  %34 = load i32, i32* %state27, align 8, !dbg !5482
  switch i32 %34, label %sw.default33 [
    i32 3, label %sw.bb28
    i32 4, label %sw.bb31
  ], !dbg !5483

sw.bb28:                                          ; preds = %if.then18
  %35 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5484
  %36 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5486
  %bandwidth_hz29 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %36, i32 0, i32 7, !dbg !5487
  %37 = load i32, i32* %bandwidth_hz29, align 4, !dbg !5487
  %call30 = call i32 @cxd2841er_sleep_tc_to_active_t2(%struct.cxd2841er_priv* %35, i32 %37) #8, !dbg !5488
  store i32 %call30, i32* %ret, align 4, !dbg !5489
  br label %sw.epilog34, !dbg !5490

sw.bb31:                                          ; preds = %if.then18
  %38 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5491
  %39 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5492
  %call32 = call i32 @cxd2841er_retune_active(%struct.cxd2841er_priv* %38, %struct.dtv_frontend_properties* %39) #8, !dbg !5493
  store i32 %call32, i32* %ret, align 4, !dbg !5494
  br label %sw.epilog34, !dbg !5495

sw.default33:                                     ; preds = %if.then18
  store i32 -22, i32* %ret, align 4, !dbg !5496
  br label %sw.epilog34, !dbg !5497

sw.epilog34:                                      ; preds = %sw.default33, %sw.bb31, %sw.bb28
  br label %if.end83, !dbg !5498

if.else35:                                        ; preds = %if.else
  %40 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5499
  %delivery_system36 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %40, i32 0, i32 15, !dbg !5501
  %41 = load i32, i32* %delivery_system36, align 4, !dbg !5501
  %cmp37 = icmp eq i32 %41, 8, !dbg !5502
  br i1 %cmp37, label %if.then39, label %if.else49, !dbg !5503

if.then39:                                        ; preds = %if.else35
  %42 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5504
  %system40 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %42, i32 0, i32 6, !dbg !5506
  store i8 8, i8* %system40, align 4, !dbg !5507
  %43 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5508
  %state41 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %43, i32 0, i32 5, !dbg !5509
  %44 = load i32, i32* %state41, align 8, !dbg !5509
  switch i32 %44, label %sw.default47 [
    i32 3, label %sw.bb42
    i32 4, label %sw.bb45
  ], !dbg !5510

sw.bb42:                                          ; preds = %if.then39
  %45 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5511
  %46 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5513
  %bandwidth_hz43 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %46, i32 0, i32 7, !dbg !5514
  %47 = load i32, i32* %bandwidth_hz43, align 4, !dbg !5514
  %call44 = call i32 @cxd2841er_sleep_tc_to_active_i(%struct.cxd2841er_priv* %45, i32 %47) #8, !dbg !5515
  store i32 %call44, i32* %ret, align 4, !dbg !5516
  br label %sw.epilog48, !dbg !5517

sw.bb45:                                          ; preds = %if.then39
  %48 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5518
  %49 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5519
  %call46 = call i32 @cxd2841er_retune_active(%struct.cxd2841er_priv* %48, %struct.dtv_frontend_properties* %49) #8, !dbg !5520
  store i32 %call46, i32* %ret, align 4, !dbg !5521
  br label %sw.epilog48, !dbg !5522

sw.default47:                                     ; preds = %if.then39
  store i32 -22, i32* %ret, align 4, !dbg !5523
  br label %sw.epilog48, !dbg !5524

sw.epilog48:                                      ; preds = %sw.default47, %sw.bb45, %sw.bb42
  br label %if.end82, !dbg !5525

if.else49:                                        ; preds = %if.else35
  %50 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5526
  %delivery_system50 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %50, i32 0, i32 15, !dbg !5528
  %51 = load i32, i32* %delivery_system50, align 4, !dbg !5528
  %cmp51 = icmp eq i32 %51, 1, !dbg !5529
  br i1 %cmp51, label %if.then56, label %lor.lhs.false, !dbg !5530

lor.lhs.false:                                    ; preds = %if.else49
  %52 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5531
  %delivery_system53 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %52, i32 0, i32 15, !dbg !5532
  %53 = load i32, i32* %delivery_system53, align 4, !dbg !5532
  %cmp54 = icmp eq i32 %53, 18, !dbg !5533
  br i1 %cmp54, label %if.then56, label %if.else80, !dbg !5534

if.then56:                                        ; preds = %lor.lhs.false, %if.else49
  %54 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5535
  %system57 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %54, i32 0, i32 6, !dbg !5537
  store i8 1, i8* %system57, align 4, !dbg !5538
  %55 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5539
  %bandwidth_hz58 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %55, i32 0, i32 7, !dbg !5541
  %56 = load i32, i32* %bandwidth_hz58, align 4, !dbg !5541
  %cmp59 = icmp ne i32 %56, 6000000, !dbg !5542
  br i1 %cmp59, label %land.lhs.true61, label %if.end71, !dbg !5543

land.lhs.true61:                                  ; preds = %if.then56
  %57 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5544
  %bandwidth_hz62 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %57, i32 0, i32 7, !dbg !5545
  %58 = load i32, i32* %bandwidth_hz62, align 4, !dbg !5545
  %cmp63 = icmp ne i32 %58, 7000000, !dbg !5546
  br i1 %cmp63, label %land.lhs.true65, label %if.end71, !dbg !5547

land.lhs.true65:                                  ; preds = %land.lhs.true61
  %59 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5548
  %bandwidth_hz66 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %59, i32 0, i32 7, !dbg !5549
  %60 = load i32, i32* %bandwidth_hz66, align 4, !dbg !5549
  %cmp67 = icmp ne i32 %60, 8000000, !dbg !5550
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !5551

if.then69:                                        ; preds = %land.lhs.true65
  %61 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5552
  %bandwidth_hz70 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %61, i32 0, i32 7, !dbg !5554
  store i32 8000000, i32* %bandwidth_hz70, align 4, !dbg !5555
  br label %if.end71, !dbg !5556

if.end71:                                         ; preds = %if.then69, %land.lhs.true65, %land.lhs.true61, %if.then56
  %62 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5557
  %state72 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %62, i32 0, i32 5, !dbg !5558
  %63 = load i32, i32* %state72, align 8, !dbg !5558
  switch i32 %63, label %sw.default78 [
    i32 3, label %sw.bb73
    i32 4, label %sw.bb76
  ], !dbg !5559

sw.bb73:                                          ; preds = %if.end71
  %64 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5560
  %65 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5562
  %bandwidth_hz74 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %65, i32 0, i32 7, !dbg !5563
  %66 = load i32, i32* %bandwidth_hz74, align 4, !dbg !5563
  %call75 = call i32 @cxd2841er_sleep_tc_to_active_c(%struct.cxd2841er_priv* %64, i32 %66) #8, !dbg !5564
  store i32 %call75, i32* %ret, align 4, !dbg !5565
  br label %sw.epilog79, !dbg !5566

sw.bb76:                                          ; preds = %if.end71
  %67 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5567
  %68 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5568
  %call77 = call i32 @cxd2841er_retune_active(%struct.cxd2841er_priv* %67, %struct.dtv_frontend_properties* %68) #8, !dbg !5569
  store i32 %call77, i32* %ret, align 4, !dbg !5570
  br label %sw.epilog79, !dbg !5571

sw.default78:                                     ; preds = %if.end71
  store i32 -22, i32* %ret, align 4, !dbg !5572
  br label %sw.epilog79, !dbg !5573

sw.epilog79:                                      ; preds = %sw.default78, %sw.bb76, %sw.bb73
  br label %if.end81, !dbg !5574

if.else80:                                        ; preds = %lor.lhs.false
  store i32 -22, i32* %ret, align 4, !dbg !5575
  br label %if.end81

if.end81:                                         ; preds = %if.else80, %sw.epilog79
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %sw.epilog48
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %sw.epilog34
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %sw.epilog
  %69 = load i32, i32* %ret, align 4, !dbg !5577
  %tobool85 = icmp ne i32 %69, 0, !dbg !5577
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !5579

if.then86:                                        ; preds = %if.end84
  br label %done, !dbg !5580

if.end87:                                         ; preds = %if.end84
  %70 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5581
  %flags88 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %70, i32 0, i32 9, !dbg !5583
  %71 = load i32, i32* %flags88, align 8, !dbg !5583
  %and89 = and i32 %71, 16, !dbg !5584
  %tobool90 = icmp ne i32 %and89, 0, !dbg !5584
  br i1 %tobool90, label %if.end93, label %if.then91, !dbg !5585

if.then91:                                        ; preds = %if.end87
  %72 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5586
  %call92 = call i32 @cxd2841er_tuner_set(%struct.dvb_frontend* %72) #8, !dbg !5587
  br label %if.end93, !dbg !5587

if.end93:                                         ; preds = %if.then91, %if.end87
  %73 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5588
  %call94 = call i32 @cxd2841er_tune_done(%struct.cxd2841er_priv* %73) #8, !dbg !5589
  %74 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5590
  %flags95 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %74, i32 0, i32 9, !dbg !5592
  %75 = load i32, i32* %flags95, align 8, !dbg !5592
  %and96 = and i32 %75, 32, !dbg !5593
  %tobool97 = icmp ne i32 %and96, 0, !dbg !5593
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !5594

if.then98:                                        ; preds = %if.end93
  br label %done, !dbg !5595

if.end99:                                         ; preds = %if.end93
  store i32 2500, i32* %timeout, align 4, !dbg !5596
  br label %while.cond, !dbg !5597

while.cond:                                       ; preds = %if.end109, %if.end99
  %76 = load i32, i32* %timeout, align 4, !dbg !5598
  %cmp100 = icmp sgt i32 %76, 0, !dbg !5599
  br i1 %cmp100, label %while.body, label %while.end, !dbg !5597

while.body:                                       ; preds = %while.cond
  %77 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5600
  %call102 = call i32 @cxd2841er_read_status_tc(%struct.dvb_frontend* %77, i32* %status) #8, !dbg !5602
  store i32 %call102, i32* %ret, align 4, !dbg !5603
  %78 = load i32, i32* %ret, align 4, !dbg !5604
  %tobool103 = icmp ne i32 %78, 0, !dbg !5604
  br i1 %tobool103, label %if.then104, label %if.end105, !dbg !5606

if.then104:                                       ; preds = %while.body
  br label %done, !dbg !5607

if.end105:                                        ; preds = %while.body
  %79 = load i32, i32* %status, align 4, !dbg !5608
  %and106 = and i32 %79, 16, !dbg !5610
  %tobool107 = icmp ne i32 %and106, 0, !dbg !5610
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !5611

if.then108:                                       ; preds = %if.end105
  br label %while.end, !dbg !5612

if.end109:                                        ; preds = %if.end105
  call void @msleep(i32 20) #8, !dbg !5613
  %80 = load i32, i32* %timeout, align 4, !dbg !5614
  %sub = sub i32 %80, 20, !dbg !5614
  store i32 %sub, i32* %timeout, align 4, !dbg !5614
  br label %while.cond, !dbg !5597, !llvm.loop !5615

while.end:                                        ; preds = %if.then108, %while.cond
  %81 = load i32, i32* %timeout, align 4, !dbg !5617
  %cmp110 = icmp slt i32 %81, 0, !dbg !5619
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !5620

if.then112:                                       ; preds = %while.end
  br label %if.end113, !dbg !5621

if.end113:                                        ; preds = %if.then112, %while.end
  br label %done, !dbg !5622

done:                                             ; preds = %if.end113, %if.then104, %if.then98, %if.then86
  call void @llvm.dbg.label(metadata !5623), !dbg !5624
  %82 = load i32, i32* %ret, align 4, !dbg !5625
  ret i32 %82, !dbg !5626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_get_frontend(%struct.dvb_frontend* %fe, %struct.dtv_frontend_properties* %p) #0 !dbg !5627 {
entry:
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !5628, metadata !DIExpression()), !dbg !5633
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %p.addr = alloca %struct.dtv_frontend_properties*, align 8
  %status = alloca i32, align 4
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5637, metadata !DIExpression()), !dbg !5638
  store %struct.dtv_frontend_properties* %p, %struct.dtv_frontend_properties** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p.addr, metadata !5639, metadata !DIExpression()), !dbg !5640
  call void @llvm.dbg.declare(metadata i32* %status, metadata !5641, metadata !DIExpression()), !dbg !5642
  store i32 0, i32* %status, align 4, !dbg !5642
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !5643, metadata !DIExpression()), !dbg !5644
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5645
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5646
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5646
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !5645
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !5644
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5647
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 5, !dbg !5649
  %4 = load i32, i32* %state, align 8, !dbg !5649
  %cmp = icmp eq i32 %4, 2, !dbg !5650
  br i1 %cmp, label %if.then, label %if.else, !dbg !5651

if.then:                                          ; preds = %entry
  %5 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5652
  %call = call i32 @cxd2841er_read_status_s(%struct.dvb_frontend* %5, i32* %status) #8, !dbg !5653
  br label %if.end5, !dbg !5653

if.else:                                          ; preds = %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5654
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %6, i32 0, i32 5, !dbg !5656
  %7 = load i32, i32* %state1, align 8, !dbg !5656
  %cmp2 = icmp eq i32 %7, 4, !dbg !5657
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !5658

if.then3:                                         ; preds = %if.else
  %8 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5659
  %call4 = call i32 @cxd2841er_read_status_tc(%struct.dvb_frontend* %8, i32* %status) #8, !dbg !5660
  br label %if.end, !dbg !5660

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5661
  %state6 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %9, i32 0, i32 5, !dbg !5663
  %10 = load i32, i32* %state6, align 8, !dbg !5663
  %cmp7 = icmp eq i32 %10, 4, !dbg !5664
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !5665

lor.lhs.false:                                    ; preds = %if.end5
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5666
  %state8 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %11, i32 0, i32 5, !dbg !5667
  %12 = load i32, i32* %state8, align 8, !dbg !5667
  %cmp9 = icmp eq i32 %12, 2, !dbg !5668
  br i1 %cmp9, label %if.then10, label %if.else11, !dbg !5669

if.then10:                                        ; preds = %lor.lhs.false, %if.end5
  %13 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5670
  call void @cxd2841er_read_signal_strength(%struct.dvb_frontend* %13) #8, !dbg !5671
  br label %if.end12, !dbg !5671

if.else11:                                        ; preds = %lor.lhs.false
  %14 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !5672
  %strength = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %14, i32 0, i32 42, !dbg !5673
  %stat = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength, i32 0, i32 1, !dbg !5674
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat, i64 0, i64 0, !dbg !5672
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 0, !dbg !5675
  store i8 0, i8* %scale, align 1, !dbg !5676
  br label %if.end12

if.end12:                                         ; preds = %if.else11, %if.then10
  %15 = load i32, i32* %status, align 4, !dbg !5677
  %and = and i32 %15, 16, !dbg !5678
  %tobool = icmp ne i32 %and, 0, !dbg !5678
  br i1 %tobool, label %if.then13, label %if.else21, !dbg !5679

if.then13:                                        ; preds = %if.end12
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5680
  %stats_time = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %16, i32 0, i32 10, !dbg !5682
  %17 = load i64, i64* %stats_time, align 8, !dbg !5682
  %tobool14 = icmp ne i64 %17, 0, !dbg !5680
  br i1 %tobool14, label %land.lhs.true, label %if.end18, !dbg !5683

land.lhs.true:                                    ; preds = %if.then13
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5684
  %stats_time15 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %18, i32 0, i32 10, !dbg !5684
  %19 = load i64, i64* %stats_time15, align 8, !dbg !5684
  %20 = load volatile i64, i64* @jiffies, align 8, !dbg !5684
  %sub = sub i64 %19, %20, !dbg !5684
  %cmp16 = icmp slt i64 %sub, 0, !dbg !5684
  br i1 %cmp16, label %if.end18, label %if.then17, !dbg !5685

if.then17:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !5686
  br label %return, !dbg !5686

if.end18:                                         ; preds = %land.lhs.true, %if.then13
  %21 = load volatile i64, i64* @jiffies, align 8, !dbg !5687
  store i32 1000, i32* %m.addr.i, align 4
  %22 = load i32, i32* %m.addr.i, align 4, !dbg !5688
  %23 = call i1 @llvm.is.constant.i32(i32 %22) #10, !dbg !5690
  br i1 %23, label %if.then.i, label %if.else.i, !dbg !5691

if.then.i:                                        ; preds = %if.end18
  %24 = load i32, i32* %m.addr.i, align 4, !dbg !5692
  %cmp.i = icmp slt i32 %24, 0, !dbg !5695
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5696

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !5697
  br label %msecs_to_jiffies.exit, !dbg !5697

if.end.i:                                         ; preds = %if.then.i
  %25 = load i32, i32* %m.addr.i, align 4, !dbg !5698
  %call.i = call i64 @_msecs_to_jiffies(i32 %25) #12, !dbg !5699
  store i64 %call.i, i64* %retval.i, align 8, !dbg !5700
  br label %msecs_to_jiffies.exit, !dbg !5700

if.else.i:                                        ; preds = %if.end18
  %26 = load i32, i32* %m.addr.i, align 4, !dbg !5701
  %call2.i = call i64 @__msecs_to_jiffies(i32 %26) #12, !dbg !5703
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !5704
  br label %msecs_to_jiffies.exit, !dbg !5704

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %27 = load i64, i64* %retval.i, align 8, !dbg !5705
  %add = add i64 %21, %27, !dbg !5706
  %28 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5707
  %stats_time20 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %28, i32 0, i32 10, !dbg !5708
  store i64 %add, i64* %stats_time20, align 8, !dbg !5709
  %29 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5710
  call void @cxd2841er_read_snr(%struct.dvb_frontend* %29) #8, !dbg !5711
  %30 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5712
  call void @cxd2841er_read_ucblocks(%struct.dvb_frontend* %30) #8, !dbg !5713
  %31 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5714
  call void @cxd2841er_read_ber(%struct.dvb_frontend* %31) #8, !dbg !5715
  br label %if.end34, !dbg !5716

if.else21:                                        ; preds = %if.end12
  %32 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !5717
  %cnr = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %32, i32 0, i32 43, !dbg !5719
  %stat22 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr, i32 0, i32 1, !dbg !5720
  %arrayidx23 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat22, i64 0, i64 0, !dbg !5717
  %scale24 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx23, i32 0, i32 0, !dbg !5721
  store i8 0, i8* %scale24, align 1, !dbg !5722
  %33 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !5723
  %block_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %33, i32 0, i32 48, !dbg !5724
  %stat25 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error, i32 0, i32 1, !dbg !5725
  %arrayidx26 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat25, i64 0, i64 0, !dbg !5723
  %scale27 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx26, i32 0, i32 0, !dbg !5726
  store i8 0, i8* %scale27, align 1, !dbg !5727
  %34 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !5728
  %post_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %34, i32 0, i32 46, !dbg !5729
  %stat28 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error, i32 0, i32 1, !dbg !5730
  %arrayidx29 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat28, i64 0, i64 0, !dbg !5728
  %scale30 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx29, i32 0, i32 0, !dbg !5731
  store i8 0, i8* %scale30, align 1, !dbg !5732
  %35 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !5733
  %post_bit_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %35, i32 0, i32 47, !dbg !5734
  %stat31 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count, i32 0, i32 1, !dbg !5735
  %arrayidx32 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat31, i64 0, i64 0, !dbg !5733
  %scale33 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx32, i32 0, i32 0, !dbg !5736
  store i8 0, i8* %scale33, align 1, !dbg !5737
  br label %if.end34

if.end34:                                         ; preds = %if.else21, %msecs_to_jiffies.exit
  store i32 0, i32* %retval, align 4, !dbg !5738
  br label %return, !dbg !5738

return:                                           ; preds = %if.end34, %if.then17
  %36 = load i32, i32* %retval, align 4, !dbg !5739
  ret i32 %36, !dbg !5739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_status_tc(%struct.dvb_frontend* %fe, i32* %status) #0 !dbg !5740 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %status.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  %sync = alloca i8, align 1
  %tslock = alloca i8, align 1
  %unlock = alloca i8, align 1
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5741, metadata !DIExpression()), !dbg !5742
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !5743, metadata !DIExpression()), !dbg !5744
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5745, metadata !DIExpression()), !dbg !5746
  store i32 0, i32* %ret, align 4, !dbg !5746
  call void @llvm.dbg.declare(metadata i8* %sync, metadata !5747, metadata !DIExpression()), !dbg !5748
  store i8 0, i8* %sync, align 1, !dbg !5748
  call void @llvm.dbg.declare(metadata i8* %tslock, metadata !5749, metadata !DIExpression()), !dbg !5750
  store i8 0, i8* %tslock, align 1, !dbg !5750
  call void @llvm.dbg.declare(metadata i8* %unlock, metadata !5751, metadata !DIExpression()), !dbg !5752
  store i8 0, i8* %unlock, align 1, !dbg !5752
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !5753, metadata !DIExpression()), !dbg !5754
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5755
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5756
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5756
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !5755
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !5754
  %3 = load i32*, i32** %status.addr, align 8, !dbg !5757
  store i32 0, i32* %3, align 4, !dbg !5758
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5759
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %4, i32 0, i32 5, !dbg !5761
  %5 = load i32, i32* %state, align 8, !dbg !5761
  %cmp = icmp eq i32 %5, 4, !dbg !5762
  br i1 %cmp, label %if.then, label %if.end53, !dbg !5763

if.then:                                          ; preds = %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5764
  %system = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %6, i32 0, i32 6, !dbg !5767
  %7 = load i8, i8* %system, align 4, !dbg !5767
  %conv = zext i8 %7 to i32, !dbg !5764
  %cmp1 = icmp eq i32 %conv, 3, !dbg !5768
  br i1 %cmp1, label %if.then7, label %lor.lhs.false, !dbg !5769

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5770
  %system3 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %8, i32 0, i32 6, !dbg !5771
  %9 = load i8, i8* %system3, align 4, !dbg !5771
  %conv4 = zext i8 %9 to i32, !dbg !5770
  %cmp5 = icmp eq i32 %conv4, 16, !dbg !5772
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !5773

if.then7:                                         ; preds = %lor.lhs.false, %if.then
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5774
  %call = call i32 @cxd2841er_read_status_t_t2(%struct.cxd2841er_priv* %10, i8* %sync, i8* %tslock, i8* %unlock) #8, !dbg !5776
  store i32 %call, i32* %ret, align 4, !dbg !5777
  %11 = load i32, i32* %ret, align 4, !dbg !5778
  %tobool = icmp ne i32 %11, 0, !dbg !5778
  br i1 %tobool, label %if.then8, label %if.end, !dbg !5780

if.then8:                                         ; preds = %if.then7
  br label %done, !dbg !5781

if.end:                                           ; preds = %if.then7
  %12 = load i8, i8* %unlock, align 1, !dbg !5782
  %tobool9 = icmp ne i8 %12, 0, !dbg !5782
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !5784

if.then10:                                        ; preds = %if.end
  br label %done, !dbg !5785

if.end11:                                         ; preds = %if.end
  %13 = load i8, i8* %sync, align 1, !dbg !5786
  %tobool12 = icmp ne i8 %13, 0, !dbg !5786
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !5788

if.then13:                                        ; preds = %if.end11
  %14 = load i32*, i32** %status.addr, align 8, !dbg !5789
  store i32 15, i32* %14, align 4, !dbg !5790
  br label %if.end14, !dbg !5791

if.end14:                                         ; preds = %if.then13, %if.end11
  %15 = load i8, i8* %tslock, align 1, !dbg !5792
  %tobool15 = icmp ne i8 %15, 0, !dbg !5792
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !5794

if.then16:                                        ; preds = %if.end14
  %16 = load i32*, i32** %status.addr, align 8, !dbg !5795
  %17 = load i32, i32* %16, align 4, !dbg !5796
  %or = or i32 %17, 16, !dbg !5796
  store i32 %or, i32* %16, align 4, !dbg !5796
  br label %if.end17, !dbg !5797

if.end17:                                         ; preds = %if.then16, %if.end14
  br label %if.end52, !dbg !5798

if.else:                                          ; preds = %lor.lhs.false
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5799
  %system18 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %18, i32 0, i32 6, !dbg !5801
  %19 = load i8, i8* %system18, align 4, !dbg !5801
  %conv19 = zext i8 %19 to i32, !dbg !5799
  %cmp20 = icmp eq i32 %conv19, 8, !dbg !5802
  br i1 %cmp20, label %if.then22, label %if.else37, !dbg !5803

if.then22:                                        ; preds = %if.else
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5804
  %call23 = call i32 @cxd2841er_read_status_i(%struct.cxd2841er_priv* %20, i8* %sync, i8* %tslock, i8* %unlock) #8, !dbg !5806
  store i32 %call23, i32* %ret, align 4, !dbg !5807
  %21 = load i32, i32* %ret, align 4, !dbg !5808
  %tobool24 = icmp ne i32 %21, 0, !dbg !5808
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !5810

if.then25:                                        ; preds = %if.then22
  br label %done, !dbg !5811

if.end26:                                         ; preds = %if.then22
  %22 = load i8, i8* %unlock, align 1, !dbg !5812
  %tobool27 = icmp ne i8 %22, 0, !dbg !5812
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !5814

if.then28:                                        ; preds = %if.end26
  br label %done, !dbg !5815

if.end29:                                         ; preds = %if.end26
  %23 = load i8, i8* %sync, align 1, !dbg !5816
  %tobool30 = icmp ne i8 %23, 0, !dbg !5816
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !5818

if.then31:                                        ; preds = %if.end29
  %24 = load i32*, i32** %status.addr, align 8, !dbg !5819
  store i32 15, i32* %24, align 4, !dbg !5820
  br label %if.end32, !dbg !5821

if.end32:                                         ; preds = %if.then31, %if.end29
  %25 = load i8, i8* %tslock, align 1, !dbg !5822
  %tobool33 = icmp ne i8 %25, 0, !dbg !5822
  br i1 %tobool33, label %if.then34, label %if.end36, !dbg !5824

if.then34:                                        ; preds = %if.end32
  %26 = load i32*, i32** %status.addr, align 8, !dbg !5825
  %27 = load i32, i32* %26, align 4, !dbg !5826
  %or35 = or i32 %27, 16, !dbg !5826
  store i32 %or35, i32* %26, align 4, !dbg !5826
  br label %if.end36, !dbg !5827

if.end36:                                         ; preds = %if.then34, %if.end32
  br label %if.end51, !dbg !5828

if.else37:                                        ; preds = %if.else
  %28 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5829
  %system38 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %28, i32 0, i32 6, !dbg !5831
  %29 = load i8, i8* %system38, align 4, !dbg !5831
  %conv39 = zext i8 %29 to i32, !dbg !5829
  %cmp40 = icmp eq i32 %conv39, 1, !dbg !5832
  br i1 %cmp40, label %if.then42, label %if.end50, !dbg !5833

if.then42:                                        ; preds = %if.else37
  %30 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5834
  %call43 = call i32 @cxd2841er_read_status_c(%struct.cxd2841er_priv* %30, i8* %tslock) #8, !dbg !5836
  store i32 %call43, i32* %ret, align 4, !dbg !5837
  %31 = load i32, i32* %ret, align 4, !dbg !5838
  %tobool44 = icmp ne i32 %31, 0, !dbg !5838
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !5840

if.then45:                                        ; preds = %if.then42
  br label %done, !dbg !5841

if.end46:                                         ; preds = %if.then42
  %32 = load i8, i8* %tslock, align 1, !dbg !5842
  %tobool47 = icmp ne i8 %32, 0, !dbg !5842
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !5844

if.then48:                                        ; preds = %if.end46
  %33 = load i32*, i32** %status.addr, align 8, !dbg !5845
  store i32 31, i32* %33, align 4, !dbg !5846
  br label %if.end49, !dbg !5847

if.end49:                                         ; preds = %if.then48, %if.end46
  br label %if.end50, !dbg !5848

if.end50:                                         ; preds = %if.end49, %if.else37
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end36
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.end17
  br label %if.end53, !dbg !5849

if.end53:                                         ; preds = %if.end52, %entry
  br label %done, !dbg !5850

done:                                             ; preds = %if.end53, %if.then45, %if.then28, %if.then25, %if.then10, %if.then8
  call void @llvm.dbg.label(metadata !5851), !dbg !5852
  %34 = load i32, i32* %ret, align 4, !dbg !5853
  ret i32 %34, !dbg !5854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_i2c_gate_ctrl(%struct.dvb_frontend* %fe, i32 %enable) #0 !dbg !5855 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %enable.addr = alloca i32, align 4
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5856, metadata !DIExpression()), !dbg !5857
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !5858, metadata !DIExpression()), !dbg !5859
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !5860, metadata !DIExpression()), !dbg !5861
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5862
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5863
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5863
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !5862
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !5861
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !5864
  %4 = load i32, i32* %enable.addr, align 4, !dbg !5865
  %tobool = icmp ne i32 %4, 0, !dbg !5865
  %5 = zext i1 %tobool to i64, !dbg !5865
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !5865
  %conv = trunc i32 %cond to i8, !dbg !5866
  %call = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %3, i8 zeroext 0, i8 zeroext 8, i8 zeroext %conv, i8 zeroext 1) #8, !dbg !5867
  ret i32 0, !dbg !5868
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_shutdown_to_sleep_tc(%struct.cxd2841er_priv* %priv) #0 !dbg !5869 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %data = alloca i8, align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !5872, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.declare(metadata i8* %data, metadata !5874, metadata !DIExpression()), !dbg !5875
  store i8 0, i8* %data, align 1, !dbg !5875
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5876
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !5878
  %1 = load i32, i32* %state, align 8, !dbg !5878
  %cmp = icmp ne i32 %1, 0, !dbg !5879
  br i1 %cmp, label %if.then, label %if.end, !dbg !5880

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !5881
  br label %return, !dbg !5881

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5883
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !5884
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5885
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 0, i8 zeroext 2, i8 zeroext 0) #8, !dbg !5886
  call void @usleep_range(i64 3000, i64 5000) #8, !dbg !5887
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5888
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !5889
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5890
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 0, i8 zeroext 16, i8 zeroext 1) #8, !dbg !5891
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5892
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %6, i8 zeroext 0, i8 zeroext 19, i8 zeroext 0) #8, !dbg !5893
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5894
  %xtal = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %7, i32 0, i32 7, !dbg !5895
  %8 = load i32, i32* %xtal, align 8, !dbg !5895
  switch i32 %8, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
    i32 2, label %sw.bb7
  ], !dbg !5896

sw.bb:                                            ; preds = %if.end
  store i8 0, i8* %data, align 1, !dbg !5897
  br label %sw.epilog, !dbg !5899

sw.bb5:                                           ; preds = %if.end
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5900
  %call6 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %9, i8 zeroext 0, i8 zeroext 18, i8 zeroext 0) #8, !dbg !5901
  store i8 3, i8* %data, align 1, !dbg !5902
  br label %sw.epilog, !dbg !5903

sw.bb7:                                           ; preds = %if.end
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5904
  %call8 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext 0, i8 zeroext 18, i8 zeroext 0) #8, !dbg !5905
  store i8 1, i8* %data, align 1, !dbg !5906
  br label %sw.epilog, !dbg !5907

sw.epilog:                                        ; preds = %if.end, %sw.bb7, %sw.bb5, %sw.bb
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5908
  %12 = load i8, i8* %data, align 1, !dbg !5909
  %call9 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %11, i8 zeroext 0, i8 zeroext 20, i8 zeroext %12) #8, !dbg !5910
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5911
  %call10 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 0, i8 zeroext 16, i8 zeroext 0) #8, !dbg !5912
  call void @usleep_range(i64 1000, i64 2000) #8, !dbg !5913
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5914
  %call11 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !5915
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5916
  %call12 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext 67, i8 zeroext 10) #8, !dbg !5917
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5918
  %call13 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %16, i8 zeroext 1, i8 zeroext 65, i8 zeroext 10) #8, !dbg !5919
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5920
  %call14 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext 99, i8 zeroext 22) #8, !dbg !5921
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5922
  %call15 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %18, i8 zeroext 1, i8 zeroext 101, i8 zeroext 39) #8, !dbg !5923
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5924
  %call16 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %19, i8 zeroext 1, i8 zeroext 105, i8 zeroext 6) #8, !dbg !5925
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5926
  %state17 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %20, i32 0, i32 5, !dbg !5927
  store i32 3, i32* %state17, align 8, !dbg !5928
  store i32 0, i32* %retval, align 4, !dbg !5929
  br label %return, !dbg !5929

return:                                           ; preds = %sw.epilog, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !5930
  ret i32 %21, !dbg !5930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %priv, i8 zeroext %addr, i8 zeroext %reg, i8 zeroext %data, i8 zeroext %mask) #0 !dbg !5931 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %addr.addr = alloca i8, align 1
  %reg.addr = alloca i8, align 1
  %data.addr = alloca i8, align 1
  %mask.addr = alloca i8, align 1
  %res = alloca i32, align 4
  %rdata = alloca i8, align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !5934, metadata !DIExpression()), !dbg !5935
  store i8 %addr, i8* %addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %addr.addr, metadata !5936, metadata !DIExpression()), !dbg !5937
  store i8 %reg, i8* %reg.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %reg.addr, metadata !5938, metadata !DIExpression()), !dbg !5939
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !5940, metadata !DIExpression()), !dbg !5941
  store i8 %mask, i8* %mask.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mask.addr, metadata !5942, metadata !DIExpression()), !dbg !5943
  call void @llvm.dbg.declare(metadata i32* %res, metadata !5944, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.declare(metadata i8* %rdata, metadata !5946, metadata !DIExpression()), !dbg !5947
  %0 = load i8, i8* %mask.addr, align 1, !dbg !5948
  %conv = zext i8 %0 to i32, !dbg !5948
  %cmp = icmp ne i32 %conv, 255, !dbg !5950
  br i1 %cmp, label %if.then, label %if.end9, !dbg !5951

if.then:                                          ; preds = %entry
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5952
  %2 = load i8, i8* %addr.addr, align 1, !dbg !5954
  %3 = load i8, i8* %reg.addr, align 1, !dbg !5955
  %call = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %1, i8 zeroext %2, i8 zeroext %3, i8* %rdata) #8, !dbg !5956
  store i32 %call, i32* %res, align 4, !dbg !5957
  %4 = load i32, i32* %res, align 4, !dbg !5958
  %tobool = icmp ne i32 %4, 0, !dbg !5958
  br i1 %tobool, label %if.then2, label %if.end, !dbg !5960

if.then2:                                         ; preds = %if.then
  %5 = load i32, i32* %res, align 4, !dbg !5961
  store i32 %5, i32* %retval, align 4, !dbg !5962
  br label %return, !dbg !5962

if.end:                                           ; preds = %if.then
  %6 = load i8, i8* %data.addr, align 1, !dbg !5963
  %conv3 = zext i8 %6 to i32, !dbg !5963
  %7 = load i8, i8* %mask.addr, align 1, !dbg !5964
  %conv4 = zext i8 %7 to i32, !dbg !5964
  %and = and i32 %conv3, %conv4, !dbg !5965
  %8 = load i8, i8* %rdata, align 1, !dbg !5966
  %conv5 = zext i8 %8 to i32, !dbg !5966
  %9 = load i8, i8* %mask.addr, align 1, !dbg !5967
  %conv6 = zext i8 %9 to i32, !dbg !5967
  %xor = xor i32 %conv6, 255, !dbg !5968
  %and7 = and i32 %conv5, %xor, !dbg !5969
  %or = or i32 %and, %and7, !dbg !5970
  %conv8 = trunc i32 %or to i8, !dbg !5971
  store i8 %conv8, i8* %data.addr, align 1, !dbg !5972
  br label %if.end9, !dbg !5973

if.end9:                                          ; preds = %if.end, %entry
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !5974
  %11 = load i8, i8* %addr.addr, align 1, !dbg !5975
  %12 = load i8, i8* %reg.addr, align 1, !dbg !5976
  %13 = load i8, i8* %data.addr, align 1, !dbg !5977
  %call10 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext %11, i8 zeroext %12, i8 zeroext %13) #8, !dbg !5978
  store i32 %call10, i32* %retval, align 4, !dbg !5979
  br label %return, !dbg !5979

return:                                           ; preds = %if.end9, %if.then2
  %14 = load i32, i32* %retval, align 4, !dbg !5980
  ret i32 %14, !dbg !5980
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cxd2841er_init_stats(%struct.dvb_frontend* %fe) #0 !dbg !5981 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5982, metadata !DIExpression()), !dbg !5983
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !5984, metadata !DIExpression()), !dbg !5985
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5986
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !5987
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !5985
  %1 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5988
  %strength = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %1, i32 0, i32 42, !dbg !5989
  %len = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength, i32 0, i32 0, !dbg !5990
  store i8 1, i8* %len, align 4, !dbg !5991
  %2 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5992
  %strength1 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %2, i32 0, i32 42, !dbg !5993
  %stat = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength1, i32 0, i32 1, !dbg !5994
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat, i64 0, i64 0, !dbg !5992
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 0, !dbg !5995
  store i8 2, i8* %scale, align 1, !dbg !5996
  %3 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !5997
  %cnr = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %3, i32 0, i32 43, !dbg !5998
  %len2 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr, i32 0, i32 0, !dbg !5999
  store i8 1, i8* %len2, align 1, !dbg !6000
  %4 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6001
  %cnr3 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %4, i32 0, i32 43, !dbg !6002
  %stat4 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr3, i32 0, i32 1, !dbg !6003
  %arrayidx5 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat4, i64 0, i64 0, !dbg !6001
  %scale6 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx5, i32 0, i32 0, !dbg !6004
  store i8 0, i8* %scale6, align 1, !dbg !6005
  %5 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6006
  %block_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %5, i32 0, i32 48, !dbg !6007
  %len7 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error, i32 0, i32 0, !dbg !6008
  store i8 1, i8* %len7, align 2, !dbg !6009
  %6 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6010
  %block_error8 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %6, i32 0, i32 48, !dbg !6011
  %stat9 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error8, i32 0, i32 1, !dbg !6012
  %arrayidx10 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat9, i64 0, i64 0, !dbg !6010
  %scale11 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx10, i32 0, i32 0, !dbg !6013
  store i8 0, i8* %scale11, align 1, !dbg !6014
  %7 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6015
  %post_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %7, i32 0, i32 46, !dbg !6016
  %len12 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error, i32 0, i32 0, !dbg !6017
  store i8 1, i8* %len12, align 4, !dbg !6018
  %8 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6019
  %post_bit_error13 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %8, i32 0, i32 46, !dbg !6020
  %stat14 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error13, i32 0, i32 1, !dbg !6021
  %arrayidx15 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat14, i64 0, i64 0, !dbg !6019
  %scale16 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx15, i32 0, i32 0, !dbg !6022
  store i8 0, i8* %scale16, align 1, !dbg !6023
  %9 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6024
  %post_bit_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %9, i32 0, i32 47, !dbg !6025
  %len17 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count, i32 0, i32 0, !dbg !6026
  store i8 1, i8* %len17, align 1, !dbg !6027
  %10 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !6028
  %post_bit_count18 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %10, i32 0, i32 47, !dbg !6029
  %stat19 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count18, i32 0, i32 1, !dbg !6030
  %arrayidx20 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat19, i64 0, i64 0, !dbg !6028
  %scale21 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx20, i32 0, i32 0, !dbg !6031
  store i8 0, i8* %scale21, align 1, !dbg !6032
  ret void, !dbg !6033
}

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_tc(%struct.dvb_frontend* %fe) #0 !dbg !6034 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6035, metadata !DIExpression()), !dbg !6036
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !6037, metadata !DIExpression()), !dbg !6038
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6039
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6040
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6040
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !6039
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !6038
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6041
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 5, !dbg !6043
  %4 = load i32, i32* %state, align 8, !dbg !6043
  %cmp = icmp eq i32 %4, 4, !dbg !6044
  br i1 %cmp, label %if.then, label %if.end, !dbg !6045

if.then:                                          ; preds = %entry
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6046
  %system = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %5, i32 0, i32 6, !dbg !6048
  %6 = load i8, i8* %system, align 4, !dbg !6048
  %conv = zext i8 %6 to i32, !dbg !6046
  switch i32 %conv, label %sw.default [
    i32 3, label %sw.bb
    i32 16, label %sw.bb1
    i32 8, label %sw.bb3
    i32 1, label %sw.bb5
  ], !dbg !6049

sw.bb:                                            ; preds = %if.then
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6050
  %call = call i32 @cxd2841er_active_t_to_sleep_tc(%struct.cxd2841er_priv* %7) #8, !dbg !6052
  br label %sw.epilog, !dbg !6053

sw.bb1:                                           ; preds = %if.then
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6054
  %call2 = call i32 @cxd2841er_active_t2_to_sleep_tc(%struct.cxd2841er_priv* %8) #8, !dbg !6055
  br label %sw.epilog, !dbg !6056

sw.bb3:                                           ; preds = %if.then
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6057
  %call4 = call i32 @cxd2841er_active_i_to_sleep_tc(%struct.cxd2841er_priv* %9) #8, !dbg !6058
  br label %sw.epilog, !dbg !6059

sw.bb5:                                           ; preds = %if.then
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6060
  %call6 = call i32 @cxd2841er_active_c_to_sleep_tc(%struct.cxd2841er_priv* %10) #8, !dbg !6061
  br label %sw.epilog, !dbg !6062

sw.default:                                       ; preds = %if.then
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6063
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %11, i32 0, i32 1, !dbg !6063
  %12 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !6063
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %12, i32 0, i32 9, !dbg !6063
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6063
  %system7 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %13, i32 0, i32 6, !dbg !6063
  %14 = load i8, i8* %system7, align 4, !dbg !6063
  %conv8 = zext i8 %14 to i32, !dbg !6063
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.cxd2841er_sleep_tc, i64 0, i64 0), i32 %conv8) #9, !dbg !6063
  br label %sw.epilog, !dbg !6064

sw.epilog:                                        ; preds = %sw.default, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  br label %if.end, !dbg !6065

if.end:                                           ; preds = %sw.epilog, %entry
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6066
  %state9 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %15, i32 0, i32 5, !dbg !6068
  %16 = load i32, i32* %state9, align 8, !dbg !6068
  %cmp10 = icmp ne i32 %16, 3, !dbg !6069
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !6070

if.then12:                                        ; preds = %if.end
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6071
  %i2c13 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %17, i32 0, i32 1, !dbg !6071
  %18 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c13, align 8, !dbg !6071
  %dev14 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %18, i32 0, i32 9, !dbg !6071
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6071
  %state15 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %19, i32 0, i32 5, !dbg !6071
  %20 = load i32, i32* %state15, align 8, !dbg !6071
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev14, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.cxd2841er_sleep_tc, i64 0, i64 0), i32 %20) #9, !dbg !6071
  store i32 -22, i32* %retval, align 4, !dbg !6073
  br label %return, !dbg !6073

if.end16:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6074
  br label %return, !dbg !6074

return:                                           ; preds = %if.end16, %if.then12
  %21 = load i32, i32* %retval, align 4, !dbg !6075
  ret i32 %21, !dbg !6075
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_tc_to_shutdown(%struct.cxd2841er_priv* %priv) #0 !dbg !6076 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6077, metadata !DIExpression()), !dbg !6078
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6079
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !6081
  %1 = load i32, i32* %state, align 8, !dbg !6081
  %cmp = icmp ne i32 %1, 3, !dbg !6082
  br i1 %cmp, label %if.then, label %if.end, !dbg !6083

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6084
  br label %return, !dbg !6084

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6086
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6087
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6088
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 0, i8 zeroext 21, i8 zeroext 1) #8, !dbg !6089
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6090
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 0, i8 zeroext 23, i8 zeroext 1) #8, !dbg !6091
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6092
  %state3 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %5, i32 0, i32 5, !dbg !6093
  store i32 0, i32* %state3, align 8, !dbg !6094
  store i32 0, i32* %retval, align 4, !dbg !6095
  br label %return, !dbg !6095

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !6096
  ret i32 %6, !dbg !6096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_active_t_to_sleep_tc(%struct.cxd2841er_priv* %priv) #0 !dbg !6097 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6098, metadata !DIExpression()), !dbg !6099
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6100
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !6102
  %1 = load i32, i32* %state, align 8, !dbg !6102
  %cmp = icmp ne i32 %1, 4, !dbg !6103
  br i1 %cmp, label %if.then, label %if.end, !dbg !6104

if.then:                                          ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6105
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 1, !dbg !6105
  %3 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !6105
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %3, i32 0, i32 9, !dbg !6105
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6105
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %4, i32 0, i32 5, !dbg !6105
  %5 = load i32, i32* %state1, align 8, !dbg !6105
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.cxd2841er_active_t_to_sleep_tc, i64 0, i64 0), i32 %5) #9, !dbg !6105
  store i32 -22, i32* %retval, align 4, !dbg !6107
  br label %return, !dbg !6107

if.end:                                           ; preds = %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6108
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6109
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6110
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %7, i8 zeroext 1, i8 zeroext -61, i8 zeroext 1) #8, !dbg !6111
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6112
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext -128, i8 zeroext 63) #8, !dbg !6113
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6114
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %9, i8 zeroext 1, i8 zeroext -127, i8 zeroext -1) #8, !dbg !6115
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6116
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6117
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6118
  %call6 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %11, i8 zeroext 0, i8 zeroext 24, i8 zeroext 1) #8, !dbg !6119
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6120
  %call7 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6121
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6122
  %call8 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext 67, i8 zeroext 10) #8, !dbg !6123
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6124
  %call9 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 65, i8 zeroext 10) #8, !dbg !6125
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6126
  %call10 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext 48, i8 zeroext 0) #8, !dbg !6127
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6128
  %call11 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %16, i8 zeroext 1, i8 zeroext 47, i8 zeroext 0) #8, !dbg !6129
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6130
  %call12 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext 44, i8 zeroext 0) #8, !dbg !6131
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6132
  %state13 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %18, i32 0, i32 5, !dbg !6133
  store i32 3, i32* %state13, align 8, !dbg !6134
  store i32 0, i32* %retval, align 4, !dbg !6135
  br label %return, !dbg !6135

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !6136
  ret i32 %19, !dbg !6136
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_active_t2_to_sleep_tc(%struct.cxd2841er_priv* %priv) #0 !dbg !6137 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6138, metadata !DIExpression()), !dbg !6139
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6140
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !6142
  %1 = load i32, i32* %state, align 8, !dbg !6142
  %cmp = icmp ne i32 %1, 4, !dbg !6143
  br i1 %cmp, label %if.then, label %if.end, !dbg !6144

if.then:                                          ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6145
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 1, !dbg !6145
  %3 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !6145
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %3, i32 0, i32 9, !dbg !6145
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6145
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %4, i32 0, i32 5, !dbg !6145
  %5 = load i32, i32* %state1, align 8, !dbg !6145
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__.cxd2841er_active_t2_to_sleep_tc, i64 0, i64 0), i32 %5) #9, !dbg !6145
  store i32 -22, i32* %retval, align 4, !dbg !6147
  br label %return, !dbg !6147

if.end:                                           ; preds = %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6148
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6149
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6150
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %7, i8 zeroext 1, i8 zeroext -61, i8 zeroext 1) #8, !dbg !6151
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6152
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext -128, i8 zeroext 63) #8, !dbg !6153
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6154
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %9, i8 zeroext 1, i8 zeroext -127, i8 zeroext -1) #8, !dbg !6155
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6156
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext 1, i8 zeroext 0, i8 zeroext 19) #8, !dbg !6157
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6158
  %call6 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %11, i8 zeroext 1, i8 zeroext -125, i8 zeroext 64) #8, !dbg !6159
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6160
  %call7 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext -122, i8 zeroext 33) #8, !dbg !6161
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6162
  %call8 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext -98, i8 zeroext 9, i8 zeroext 15) #8, !dbg !6163
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6164
  %call9 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext -97, i8 zeroext -5) #8, !dbg !6165
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6166
  %call10 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext 0, i8 zeroext 42) #8, !dbg !6167
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6168
  %call11 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %16, i8 zeroext 1, i8 zeroext 56, i8 zeroext 0, i8 zeroext 15) #8, !dbg !6169
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6170
  %call12 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext 0, i8 zeroext 43) #8, !dbg !6171
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6172
  %call13 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %18, i8 zeroext 1, i8 zeroext 17, i8 zeroext 0, i8 zeroext 63) #8, !dbg !6173
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6174
  %call14 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %19, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6175
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6176
  %call15 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %20, i8 zeroext 0, i8 zeroext 24, i8 zeroext 1) #8, !dbg !6177
  %21 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6178
  %call16 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %21, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6179
  %22 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6180
  %call17 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %22, i8 zeroext 1, i8 zeroext 67, i8 zeroext 10) #8, !dbg !6181
  %23 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6182
  %call18 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %23, i8 zeroext 1, i8 zeroext 65, i8 zeroext 10) #8, !dbg !6183
  %24 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6184
  %call19 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %24, i8 zeroext 1, i8 zeroext 48, i8 zeroext 0) #8, !dbg !6185
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6186
  %call20 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %25, i8 zeroext 1, i8 zeroext 47, i8 zeroext 0) #8, !dbg !6187
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6188
  %call21 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %26, i8 zeroext 1, i8 zeroext 44, i8 zeroext 0) #8, !dbg !6189
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6190
  %state22 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %27, i32 0, i32 5, !dbg !6191
  store i32 3, i32* %state22, align 8, !dbg !6192
  store i32 0, i32* %retval, align 4, !dbg !6193
  br label %return, !dbg !6193

return:                                           ; preds = %if.end, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !6194
  ret i32 %28, !dbg !6194
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_active_i_to_sleep_tc(%struct.cxd2841er_priv* %priv) #0 !dbg !6195 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6196, metadata !DIExpression()), !dbg !6197
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6198
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !6200
  %1 = load i32, i32* %state, align 8, !dbg !6200
  %cmp = icmp ne i32 %1, 4, !dbg !6201
  br i1 %cmp, label %if.then, label %if.end, !dbg !6202

if.then:                                          ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6203
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 1, !dbg !6203
  %3 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !6203
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %3, i32 0, i32 9, !dbg !6203
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6203
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %4, i32 0, i32 5, !dbg !6203
  %5 = load i32, i32* %state1, align 8, !dbg !6203
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.cxd2841er_active_i_to_sleep_tc, i64 0, i64 0), i32 %5) #9, !dbg !6203
  store i32 -22, i32* %retval, align 4, !dbg !6205
  br label %return, !dbg !6205

if.end:                                           ; preds = %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6206
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6207
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6208
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %7, i8 zeroext 1, i8 zeroext -61, i8 zeroext 1) #8, !dbg !6209
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6210
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext -128, i8 zeroext 63) #8, !dbg !6211
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6212
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %9, i8 zeroext 1, i8 zeroext -127, i8 zeroext -1) #8, !dbg !6213
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6214
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6215
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6216
  %call6 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %11, i8 zeroext 0, i8 zeroext 24, i8 zeroext 1) #8, !dbg !6217
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6218
  %call7 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6219
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6220
  %call8 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext 67, i8 zeroext 10) #8, !dbg !6221
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6222
  %call9 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 65, i8 zeroext 10) #8, !dbg !6223
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6224
  %call10 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext 48, i8 zeroext 0) #8, !dbg !6225
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6226
  %call11 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %16, i8 zeroext 1, i8 zeroext 47, i8 zeroext 0) #8, !dbg !6227
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6228
  %call12 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext 44, i8 zeroext 0) #8, !dbg !6229
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6230
  %state13 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %18, i32 0, i32 5, !dbg !6231
  store i32 3, i32* %state13, align 8, !dbg !6232
  store i32 0, i32* %retval, align 4, !dbg !6233
  br label %return, !dbg !6233

return:                                           ; preds = %if.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !6234
  ret i32 %19, !dbg !6234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_active_c_to_sleep_tc(%struct.cxd2841er_priv* %priv) #0 !dbg !6235 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6236, metadata !DIExpression()), !dbg !6237
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6238
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !6240
  %1 = load i32, i32* %state, align 8, !dbg !6240
  %cmp = icmp ne i32 %1, 4, !dbg !6241
  br i1 %cmp, label %if.then, label %if.end, !dbg !6242

if.then:                                          ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6243
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 1, !dbg !6243
  %3 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !6243
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %3, i32 0, i32 9, !dbg !6243
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6243
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %4, i32 0, i32 5, !dbg !6243
  %5 = load i32, i32* %state1, align 8, !dbg !6243
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.cxd2841er_active_c_to_sleep_tc, i64 0, i64 0), i32 %5) #9, !dbg !6243
  store i32 -22, i32* %retval, align 4, !dbg !6245
  br label %return, !dbg !6245

if.end:                                           ; preds = %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6246
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6247
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6248
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %7, i8 zeroext 1, i8 zeroext -61, i8 zeroext 1) #8, !dbg !6249
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6250
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext -128, i8 zeroext 63) #8, !dbg !6251
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6252
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %9, i8 zeroext 1, i8 zeroext -127, i8 zeroext -1) #8, !dbg !6253
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6254
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext 1, i8 zeroext 0, i8 zeroext 17) #8, !dbg !6255
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6256
  %call6 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %11, i8 zeroext 1, i8 zeroext -93, i8 zeroext 0, i8 zeroext 31) #8, !dbg !6257
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6258
  %call7 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %12, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6259
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6260
  %call8 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 0, i8 zeroext 24, i8 zeroext 1) #8, !dbg !6261
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6262
  %call9 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6263
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6264
  %call10 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext 67, i8 zeroext 10) #8, !dbg !6265
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6266
  %call11 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %16, i8 zeroext 1, i8 zeroext 65, i8 zeroext 10) #8, !dbg !6267
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6268
  %call12 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext 48, i8 zeroext 0) #8, !dbg !6269
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6270
  %call13 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %18, i8 zeroext 1, i8 zeroext 47, i8 zeroext 0) #8, !dbg !6271
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6272
  %call14 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %19, i8 zeroext 1, i8 zeroext 44, i8 zeroext 0) #8, !dbg !6273
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6274
  %state15 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %20, i32 0, i32 5, !dbg !6275
  store i32 3, i32* %state15, align 8, !dbg !6276
  store i32 0, i32* %retval, align 4, !dbg !6277
  br label %return, !dbg !6277

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !6278
  ret i32 %21, !dbg !6278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_get_carrier_offset_i(%struct.cxd2841er_priv* %priv, i32 %bandwidth, i32* %offset) #0 !dbg !6279 {
entry:
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !6282, metadata !DIExpression()), !dbg !6287
  %index.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr.i, metadata !6289, metadata !DIExpression()), !dbg !6290
  %shift.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %shift.i, metadata !6291, metadata !DIExpression()), !dbg !6292
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bandwidth.addr = alloca i32, align 4
  %offset.addr = alloca i32*, align 8
  %data = alloca [4 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6293, metadata !DIExpression()), !dbg !6294
  store i32 %bandwidth, i32* %bandwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bandwidth.addr, metadata !6295, metadata !DIExpression()), !dbg !6296
  store i32* %offset, i32** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !6297, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.declare(metadata [4 x i8]* %data, metadata !6299, metadata !DIExpression()), !dbg !6301
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6302
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !6304
  %1 = load i32, i32* %state, align 8, !dbg !6304
  %cmp = icmp ne i32 %1, 4, !dbg !6305
  br i1 %cmp, label %if.then, label %if.end, !dbg !6306

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6307
  br label %return, !dbg !6307

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6309
  %system = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 6, !dbg !6311
  %3 = load i8, i8* %system, align 4, !dbg !6311
  %conv = zext i8 %3 to i32, !dbg !6309
  %cmp1 = icmp ne i32 %conv, 8, !dbg !6312
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !6313

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !6314
  br label %return, !dbg !6314

if.end4:                                          ; preds = %if.end
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6316
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 96) #8, !dbg !6317
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6318
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !6319
  %call5 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 76, i8* %arraydecay, i32 4) #8, !dbg !6320
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !6321
  %6 = load i8, i8* %arrayidx, align 1, !dbg !6321
  %conv6 = zext i8 %6 to i32, !dbg !6321
  %and = and i32 %conv6, 31, !dbg !6322
  %shl = shl i32 %and, 24, !dbg !6323
  %arrayidx7 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 1, !dbg !6324
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !6324
  %conv8 = zext i8 %7 to i32, !dbg !6325
  %shl9 = shl i32 %conv8, 16, !dbg !6326
  %or = or i32 %shl, %shl9, !dbg !6327
  %arrayidx10 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 2, !dbg !6328
  %8 = load i8, i8* %arrayidx10, align 1, !dbg !6328
  %conv11 = zext i8 %8 to i32, !dbg !6329
  %shl12 = shl i32 %conv11, 8, !dbg !6330
  %or13 = or i32 %or, %shl12, !dbg !6331
  %arrayidx14 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 3, !dbg !6332
  %9 = load i8, i8* %arrayidx14, align 1, !dbg !6332
  %conv15 = zext i8 %9 to i32, !dbg !6333
  %or16 = or i32 %or13, %conv15, !dbg !6334
  store i32 %or16, i32* %value.addr.i, align 4
  store i32 29, i32* %index.addr.i, align 4
  %10 = load i32, i32* %index.addr.i, align 4, !dbg !6335
  %sub.i = sub i32 31, %10, !dbg !6336
  %conv.i = trunc i32 %sub.i to i8, !dbg !6337
  store i8 %conv.i, i8* %shift.i, align 1, !dbg !6292
  %11 = load i32, i32* %value.addr.i, align 4, !dbg !6338
  %12 = load i8, i8* %shift.i, align 1, !dbg !6339
  %conv1.i = zext i8 %12 to i32, !dbg !6339
  %shl.i = shl i32 %11, %conv1.i, !dbg !6340
  %13 = load i8, i8* %shift.i, align 1, !dbg !6341
  %conv2.i = zext i8 %13 to i32, !dbg !6341
  %shr.i = ashr i32 %shl.i, %conv2.i, !dbg !6342
  %mul = mul i32 -1, %shr.i, !dbg !6343
  %14 = load i32*, i32** %offset.addr, align 8, !dbg !6344
  store i32 %mul, i32* %14, align 4, !dbg !6345
  %15 = load i32, i32* %bandwidth.addr, align 4, !dbg !6346
  switch i32 %15, label %sw.default [
    i32 6000000, label %sw.bb
    i32 7000000, label %sw.bb20
    i32 8000000, label %sw.bb24
  ], !dbg !6347

sw.bb:                                            ; preds = %if.end4
  %16 = load i32*, i32** %offset.addr, align 8, !dbg !6348
  %17 = load i32, i32* %16, align 4, !dbg !6350
  %mul18 = mul i32 %17, 8, !dbg !6351
  %div = sdiv i32 %mul18, 264, !dbg !6352
  %mul19 = mul i32 -1, %div, !dbg !6353
  %18 = load i32*, i32** %offset.addr, align 8, !dbg !6354
  store i32 %mul19, i32* %18, align 4, !dbg !6355
  br label %sw.epilog, !dbg !6356

sw.bb20:                                          ; preds = %if.end4
  %19 = load i32*, i32** %offset.addr, align 8, !dbg !6357
  %20 = load i32, i32* %19, align 4, !dbg !6358
  %mul21 = mul i32 %20, 8, !dbg !6359
  %div22 = sdiv i32 %mul21, 231, !dbg !6360
  %mul23 = mul i32 -1, %div22, !dbg !6361
  %21 = load i32*, i32** %offset.addr, align 8, !dbg !6362
  store i32 %mul23, i32* %21, align 4, !dbg !6363
  br label %sw.epilog, !dbg !6364

sw.bb24:                                          ; preds = %if.end4
  %22 = load i32*, i32** %offset.addr, align 8, !dbg !6365
  %23 = load i32, i32* %22, align 4, !dbg !6366
  %mul25 = mul i32 %23, 8, !dbg !6367
  %div26 = sdiv i32 %mul25, 198, !dbg !6368
  %mul27 = mul i32 -1, %div26, !dbg !6369
  %24 = load i32*, i32** %offset.addr, align 8, !dbg !6370
  store i32 %mul27, i32* %24, align 4, !dbg !6371
  br label %sw.epilog, !dbg !6372

sw.default:                                       ; preds = %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !6373
  br label %return, !dbg !6373

sw.epilog:                                        ; preds = %sw.bb24, %sw.bb20, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !6374
  br label %return, !dbg !6374

return:                                           ; preds = %sw.epilog, %sw.default, %if.then3, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !6375
  ret i32 %25, !dbg !6375
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_get_carrier_offset_t(%struct.cxd2841er_priv* %priv, i32 %bandwidth, i32* %offset) #0 !dbg !6376 {
entry:
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !6282, metadata !DIExpression()), !dbg !6377
  %index.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr.i, metadata !6289, metadata !DIExpression()), !dbg !6379
  %shift.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %shift.i, metadata !6291, metadata !DIExpression()), !dbg !6380
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bandwidth.addr = alloca i32, align 4
  %offset.addr = alloca i32*, align 8
  %data = alloca [4 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6381, metadata !DIExpression()), !dbg !6382
  store i32 %bandwidth, i32* %bandwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bandwidth.addr, metadata !6383, metadata !DIExpression()), !dbg !6384
  store i32* %offset, i32** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !6385, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.declare(metadata [4 x i8]* %data, metadata !6387, metadata !DIExpression()), !dbg !6388
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6389
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !6391
  %1 = load i32, i32* %state, align 8, !dbg !6391
  %cmp = icmp ne i32 %1, 4, !dbg !6392
  br i1 %cmp, label %if.then, label %if.end, !dbg !6393

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6394
  br label %return, !dbg !6394

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6396
  %system = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 6, !dbg !6398
  %3 = load i8, i8* %system, align 4, !dbg !6398
  %conv = zext i8 %3 to i32, !dbg !6396
  %cmp1 = icmp ne i32 %conv, 3, !dbg !6399
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !6400

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !6401
  br label %return, !dbg !6401

if.end4:                                          ; preds = %if.end
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6403
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !6404
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6405
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !6406
  %call5 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 76, i8* %arraydecay, i32 4) #8, !dbg !6407
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !6408
  %6 = load i8, i8* %arrayidx, align 1, !dbg !6408
  %conv6 = zext i8 %6 to i32, !dbg !6408
  %and = and i32 %conv6, 31, !dbg !6409
  %shl = shl i32 %and, 24, !dbg !6410
  %arrayidx7 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 1, !dbg !6411
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !6411
  %conv8 = zext i8 %7 to i32, !dbg !6412
  %shl9 = shl i32 %conv8, 16, !dbg !6413
  %or = or i32 %shl, %shl9, !dbg !6414
  %arrayidx10 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 2, !dbg !6415
  %8 = load i8, i8* %arrayidx10, align 1, !dbg !6415
  %conv11 = zext i8 %8 to i32, !dbg !6416
  %shl12 = shl i32 %conv11, 8, !dbg !6417
  %or13 = or i32 %or, %shl12, !dbg !6418
  %arrayidx14 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 3, !dbg !6419
  %9 = load i8, i8* %arrayidx14, align 1, !dbg !6419
  %conv15 = zext i8 %9 to i32, !dbg !6420
  %or16 = or i32 %or13, %conv15, !dbg !6421
  store i32 %or16, i32* %value.addr.i, align 4
  store i32 29, i32* %index.addr.i, align 4
  %10 = load i32, i32* %index.addr.i, align 4, !dbg !6422
  %sub.i = sub i32 31, %10, !dbg !6423
  %conv.i = trunc i32 %sub.i to i8, !dbg !6424
  store i8 %conv.i, i8* %shift.i, align 1, !dbg !6380
  %11 = load i32, i32* %value.addr.i, align 4, !dbg !6425
  %12 = load i8, i8* %shift.i, align 1, !dbg !6426
  %conv1.i = zext i8 %12 to i32, !dbg !6426
  %shl.i = shl i32 %11, %conv1.i, !dbg !6427
  %13 = load i8, i8* %shift.i, align 1, !dbg !6428
  %conv2.i = zext i8 %13 to i32, !dbg !6428
  %shr.i = ashr i32 %shl.i, %conv2.i, !dbg !6429
  %mul = mul i32 -1, %shr.i, !dbg !6430
  %14 = load i32*, i32** %offset.addr, align 8, !dbg !6431
  store i32 %mul, i32* %14, align 4, !dbg !6432
  %15 = load i32, i32* %bandwidth.addr, align 4, !dbg !6433
  %div = udiv i32 %15, 1000000, !dbg !6434
  %16 = load i32*, i32** %offset.addr, align 8, !dbg !6435
  %17 = load i32, i32* %16, align 4, !dbg !6436
  %mul18 = mul i32 %17, %div, !dbg !6436
  store i32 %mul18, i32* %16, align 4, !dbg !6436
  %18 = load i32*, i32** %offset.addr, align 8, !dbg !6437
  %19 = load i32, i32* %18, align 4, !dbg !6438
  %div19 = sdiv i32 %19, 235, !dbg !6438
  store i32 %div19, i32* %18, align 4, !dbg !6438
  store i32 0, i32* %retval, align 4, !dbg !6439
  br label %return, !dbg !6439

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !6440
  ret i32 %20, !dbg !6440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_get_carrier_offset_t2(%struct.cxd2841er_priv* %priv, i32 %bandwidth, i32* %offset) #0 !dbg !6441 {
entry:
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !6282, metadata !DIExpression()), !dbg !6442
  %index.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr.i, metadata !6289, metadata !DIExpression()), !dbg !6444
  %shift.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %shift.i, metadata !6291, metadata !DIExpression()), !dbg !6445
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bandwidth.addr = alloca i32, align 4
  %offset.addr = alloca i32*, align 8
  %data = alloca [4 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6446, metadata !DIExpression()), !dbg !6447
  store i32 %bandwidth, i32* %bandwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bandwidth.addr, metadata !6448, metadata !DIExpression()), !dbg !6449
  store i32* %offset, i32** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !6450, metadata !DIExpression()), !dbg !6451
  call void @llvm.dbg.declare(metadata [4 x i8]* %data, metadata !6452, metadata !DIExpression()), !dbg !6453
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6454
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !6456
  %1 = load i32, i32* %state, align 8, !dbg !6456
  %cmp = icmp ne i32 %1, 4, !dbg !6457
  br i1 %cmp, label %if.then, label %if.end, !dbg !6458

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6459
  br label %return, !dbg !6459

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6461
  %system = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 6, !dbg !6463
  %3 = load i8, i8* %system, align 4, !dbg !6463
  %conv = zext i8 %3 to i32, !dbg !6461
  %cmp1 = icmp ne i32 %conv, 16, !dbg !6464
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !6465

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !6466
  br label %return, !dbg !6466

if.end4:                                          ; preds = %if.end
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6468
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 32) #8, !dbg !6469
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6470
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !6471
  %call5 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 76, i8* %arraydecay, i32 4) #8, !dbg !6472
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !6473
  %6 = load i8, i8* %arrayidx, align 1, !dbg !6473
  %conv6 = zext i8 %6 to i32, !dbg !6473
  %and = and i32 %conv6, 15, !dbg !6474
  %shl = shl i32 %and, 24, !dbg !6475
  %arrayidx7 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 1, !dbg !6476
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !6476
  %conv8 = zext i8 %7 to i32, !dbg !6477
  %shl9 = shl i32 %conv8, 16, !dbg !6478
  %or = or i32 %shl, %shl9, !dbg !6479
  %arrayidx10 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 2, !dbg !6480
  %8 = load i8, i8* %arrayidx10, align 1, !dbg !6480
  %conv11 = zext i8 %8 to i32, !dbg !6481
  %shl12 = shl i32 %conv11, 8, !dbg !6482
  %or13 = or i32 %or, %shl12, !dbg !6483
  %arrayidx14 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 3, !dbg !6484
  %9 = load i8, i8* %arrayidx14, align 1, !dbg !6484
  %conv15 = zext i8 %9 to i32, !dbg !6485
  %or16 = or i32 %or13, %conv15, !dbg !6486
  store i32 %or16, i32* %value.addr.i, align 4
  store i32 27, i32* %index.addr.i, align 4
  %10 = load i32, i32* %index.addr.i, align 4, !dbg !6487
  %sub.i = sub i32 31, %10, !dbg !6488
  %conv.i = trunc i32 %sub.i to i8, !dbg !6489
  store i8 %conv.i, i8* %shift.i, align 1, !dbg !6445
  %11 = load i32, i32* %value.addr.i, align 4, !dbg !6490
  %12 = load i8, i8* %shift.i, align 1, !dbg !6491
  %conv1.i = zext i8 %12 to i32, !dbg !6491
  %shl.i = shl i32 %11, %conv1.i, !dbg !6492
  %13 = load i8, i8* %shift.i, align 1, !dbg !6493
  %conv2.i = zext i8 %13 to i32, !dbg !6493
  %shr.i = ashr i32 %shl.i, %conv2.i, !dbg !6494
  %mul = mul i32 -1, %shr.i, !dbg !6495
  %14 = load i32*, i32** %offset.addr, align 8, !dbg !6496
  store i32 %mul, i32* %14, align 4, !dbg !6497
  %15 = load i32, i32* %bandwidth.addr, align 4, !dbg !6498
  switch i32 %15, label %sw.default [
    i32 1712000, label %sw.bb
    i32 5000000, label %sw.bb18
    i32 6000000, label %sw.bb18
    i32 7000000, label %sw.bb18
    i32 8000000, label %sw.bb18
  ], !dbg !6499

sw.bb:                                            ; preds = %if.end4
  %16 = load i32*, i32** %offset.addr, align 8, !dbg !6500
  %17 = load i32, i32* %16, align 4, !dbg !6502
  %div = sdiv i32 %17, 582, !dbg !6502
  store i32 %div, i32* %16, align 4, !dbg !6502
  br label %sw.epilog, !dbg !6503

sw.bb18:                                          ; preds = %if.end4, %if.end4, %if.end4, %if.end4
  %18 = load i32, i32* %bandwidth.addr, align 4, !dbg !6504
  %div19 = udiv i32 %18, 1000000, !dbg !6505
  %19 = load i32*, i32** %offset.addr, align 8, !dbg !6506
  %20 = load i32, i32* %19, align 4, !dbg !6507
  %mul20 = mul i32 %20, %div19, !dbg !6507
  store i32 %mul20, i32* %19, align 4, !dbg !6507
  %21 = load i32*, i32** %offset.addr, align 8, !dbg !6508
  %22 = load i32, i32* %21, align 4, !dbg !6509
  %div21 = sdiv i32 %22, 940, !dbg !6509
  store i32 %div21, i32* %21, align 4, !dbg !6509
  br label %sw.epilog, !dbg !6510

sw.default:                                       ; preds = %if.end4
  store i32 -22, i32* %retval, align 4, !dbg !6511
  br label %return, !dbg !6511

sw.epilog:                                        ; preds = %sw.bb18, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !6512
  br label %return, !dbg !6512

return:                                           ; preds = %sw.epilog, %sw.default, %if.then3, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !6513
  ret i32 %23, !dbg !6513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_get_carrier_offset_c(%struct.cxd2841er_priv* %priv, i32* %offset) #0 !dbg !6514 {
entry:
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !6282, metadata !DIExpression()), !dbg !6517
  %index.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr.i, metadata !6289, metadata !DIExpression()), !dbg !6519
  %shift.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %shift.i, metadata !6291, metadata !DIExpression()), !dbg !6520
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %offset.addr = alloca i32*, align 8
  %data = alloca [2 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6521, metadata !DIExpression()), !dbg !6522
  store i32* %offset, i32** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !6523, metadata !DIExpression()), !dbg !6524
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !6525, metadata !DIExpression()), !dbg !6527
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6528
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !6530
  %1 = load i32, i32* %state, align 8, !dbg !6530
  %cmp = icmp ne i32 %1, 4, !dbg !6531
  br i1 %cmp, label %if.then, label %if.end, !dbg !6532

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6533
  br label %return, !dbg !6533

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6535
  %system = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 6, !dbg !6537
  %3 = load i8, i8* %system, align 4, !dbg !6537
  %conv = zext i8 %3 to i32, !dbg !6535
  %cmp1 = icmp ne i32 %conv, 1, !dbg !6538
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !6539

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !6540
  br label %return, !dbg !6540

if.end4:                                          ; preds = %if.end
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6542
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 64) #8, !dbg !6543
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6544
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !6545
  %call5 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 21, i8* %arraydecay, i32 2) #8, !dbg !6546
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !6547
  %6 = load i8, i8* %arrayidx, align 1, !dbg !6547
  %conv6 = zext i8 %6 to i32, !dbg !6548
  %and = and i32 %conv6, 63, !dbg !6549
  %shl = shl i32 %and, 8, !dbg !6550
  %arrayidx7 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !6551
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !6551
  %conv8 = zext i8 %7 to i32, !dbg !6552
  %or = or i32 %shl, %conv8, !dbg !6553
  store i32 %or, i32* %value.addr.i, align 4
  store i32 13, i32* %index.addr.i, align 4
  %8 = load i32, i32* %index.addr.i, align 4, !dbg !6554
  %sub.i = sub i32 31, %8, !dbg !6555
  %conv.i = trunc i32 %sub.i to i8, !dbg !6556
  store i8 %conv.i, i8* %shift.i, align 1, !dbg !6520
  %9 = load i32, i32* %value.addr.i, align 4, !dbg !6557
  %10 = load i8, i8* %shift.i, align 1, !dbg !6558
  %conv1.i = zext i8 %10 to i32, !dbg !6558
  %shl.i = shl i32 %9, %conv1.i, !dbg !6559
  %11 = load i8, i8* %shift.i, align 1, !dbg !6560
  %conv2.i = zext i8 %11 to i32, !dbg !6560
  %shr.i = ashr i32 %shl.i, %conv2.i, !dbg !6561
  %conv10 = sext i32 %shr.i to i64, !dbg !6562
  %mul = mul i64 41000, %conv10, !dbg !6563
  %call11 = call i64 @div_s64(i64 %mul, i32 16384) #8, !dbg !6564
  %conv12 = trunc i64 %call11 to i32, !dbg !6564
  %12 = load i32*, i32** %offset.addr, align 8, !dbg !6565
  store i32 %conv12, i32* %12, align 4, !dbg !6566
  store i32 0, i32* %retval, align 4, !dbg !6567
  br label %return, !dbg !6567

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !6568
  ret i32 %13, !dbg !6568
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @div_s64(i64 %dividend, i32 %divisor) #0 !dbg !6569 {
entry:
  %dividend.addr = alloca i64, align 8
  %divisor.addr = alloca i32, align 4
  %remainder = alloca i32, align 4
  store i64 %dividend, i64* %dividend.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dividend.addr, metadata !6573, metadata !DIExpression()), !dbg !6574
  store i32 %divisor, i32* %divisor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %divisor.addr, metadata !6575, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.declare(metadata i32* %remainder, metadata !6577, metadata !DIExpression()), !dbg !6578
  %0 = load i64, i64* %dividend.addr, align 8, !dbg !6579
  %1 = load i32, i32* %divisor.addr, align 4, !dbg !6580
  %call = call i64 @div_s64_rem(i64 %0, i32 %1, i32* %remainder) #8, !dbg !6581
  ret i64 %call, !dbg !6582
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @div_s64_rem(i64 %dividend, i32 %divisor, i32* %remainder) #0 !dbg !6583 {
entry:
  %dividend.addr = alloca i64, align 8
  %divisor.addr = alloca i32, align 4
  %remainder.addr = alloca i32*, align 8
  store i64 %dividend, i64* %dividend.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %dividend.addr, metadata !6586, metadata !DIExpression()), !dbg !6587
  store i32 %divisor, i32* %divisor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %divisor.addr, metadata !6588, metadata !DIExpression()), !dbg !6589
  store i32* %remainder, i32** %remainder.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %remainder.addr, metadata !6590, metadata !DIExpression()), !dbg !6591
  %0 = load i64, i64* %dividend.addr, align 8, !dbg !6592
  %1 = load i32, i32* %divisor.addr, align 4, !dbg !6593
  %conv = sext i32 %1 to i64, !dbg !6593
  %rem = srem i64 %0, %conv, !dbg !6594
  %conv1 = trunc i64 %rem to i32, !dbg !6592
  %2 = load i32*, i32** %remainder.addr, align 8, !dbg !6595
  store i32 %conv1, i32* %2, align 4, !dbg !6596
  %3 = load i64, i64* %dividend.addr, align 8, !dbg !6597
  %4 = load i32, i32* %divisor.addr, align 4, !dbg !6598
  %conv2 = sext i32 %4 to i64, !dbg !6598
  %div = sdiv i64 %3, %conv2, !dbg !6599
  ret i64 %div, !dbg !6600
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_tuner_set(%struct.dvb_frontend* %fe) #0 !dbg !6601 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6602, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !6604, metadata !DIExpression()), !dbg !6605
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6606
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6607
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6607
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !6606
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !6605
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6608
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 9, !dbg !6610
  %4 = load i32, i32* %flags, align 8, !dbg !6610
  %and = and i32 %4, 1, !dbg !6611
  %tobool = icmp ne i32 %and, 0, !dbg !6611
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6612

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6613
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %5, i32 0, i32 1, !dbg !6614
  %i2c_gate_ctrl = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops, i32 0, i32 26, !dbg !6615
  %6 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %i2c_gate_ctrl, align 8, !dbg !6615
  %tobool1 = icmp ne i32 (%struct.dvb_frontend*, i32)* %6, null, !dbg !6613
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6616

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6617
  %ops2 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %7, i32 0, i32 1, !dbg !6618
  %i2c_gate_ctrl3 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops2, i32 0, i32 26, !dbg !6619
  %8 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %i2c_gate_ctrl3, align 8, !dbg !6619
  %9 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6620
  %call = call i32 %8(%struct.dvb_frontend* %9, i32 1) #8, !dbg !6617
  br label %if.end, !dbg !6617

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %10 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6621
  %ops4 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %10, i32 0, i32 1, !dbg !6623
  %tuner_ops = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops4, i32 0, i32 30, !dbg !6624
  %set_params = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops, i32 0, i32 6, !dbg !6625
  %11 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %set_params, align 8, !dbg !6625
  %tobool5 = icmp ne i32 (%struct.dvb_frontend*)* %11, null, !dbg !6621
  br i1 %tobool5, label %if.then6, label %if.end11, !dbg !6626

if.then6:                                         ; preds = %if.end
  %12 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6627
  %ops7 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %12, i32 0, i32 1, !dbg !6628
  %tuner_ops8 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops7, i32 0, i32 30, !dbg !6629
  %set_params9 = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops8, i32 0, i32 6, !dbg !6630
  %13 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %set_params9, align 8, !dbg !6630
  %14 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6631
  %call10 = call i32 %13(%struct.dvb_frontend* %14) #8, !dbg !6627
  br label %if.end11, !dbg !6627

if.end11:                                         ; preds = %if.then6, %if.end
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !6632
  %flags12 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %15, i32 0, i32 9, !dbg !6634
  %16 = load i32, i32* %flags12, align 8, !dbg !6634
  %and13 = and i32 %16, 1, !dbg !6635
  %tobool14 = icmp ne i32 %and13, 0, !dbg !6635
  br i1 %tobool14, label %land.lhs.true15, label %if.end23, !dbg !6636

land.lhs.true15:                                  ; preds = %if.end11
  %17 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6637
  %ops16 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %17, i32 0, i32 1, !dbg !6638
  %i2c_gate_ctrl17 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops16, i32 0, i32 26, !dbg !6639
  %18 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %i2c_gate_ctrl17, align 8, !dbg !6639
  %tobool18 = icmp ne i32 (%struct.dvb_frontend*, i32)* %18, null, !dbg !6637
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !6640

if.then19:                                        ; preds = %land.lhs.true15
  %19 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6641
  %ops20 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %19, i32 0, i32 1, !dbg !6642
  %i2c_gate_ctrl21 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops20, i32 0, i32 26, !dbg !6643
  %20 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %i2c_gate_ctrl21, align 8, !dbg !6643
  %21 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6644
  %call22 = call i32 %20(%struct.dvb_frontend* %21, i32 0) #8, !dbg !6641
  br label %if.end23, !dbg !6641

if.end23:                                         ; preds = %if.then19, %land.lhs.true15, %if.end11
  ret i32 0, !dbg !6645
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_tc_to_active_t(%struct.cxd2841er_priv* %priv, i32 %bandwidth) #0 !dbg !6646 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bandwidth.addr = alloca i32, align 4
  %data = alloca [2 x i8], align 1
  %data24m = alloca [3 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6647, metadata !DIExpression()), !dbg !6648
  store i32 %bandwidth, i32* %bandwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bandwidth.addr, metadata !6649, metadata !DIExpression()), !dbg !6650
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !6651, metadata !DIExpression()), !dbg !6652
  %0 = bitcast [2 x i8]* %data to i8*, !dbg !6652
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([2 x i8], [2 x i8]* @__const.cxd2841er_sleep_tc_to_active_t.data, i32 0, i32 0), i64 2, i1 false), !dbg !6652
  call void @llvm.dbg.declare(metadata [3 x i8]* %data24m, metadata !6653, metadata !DIExpression()), !dbg !6655
  %1 = bitcast [3 x i8]* %data24m to i8*, !dbg !6655
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @__const.cxd2841er_sleep_tc_to_active_t.data24m, i32 0, i32 0), i64 3, i1 false), !dbg !6655
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6656
  call void @cxd2841er_set_ts_clock_mode(%struct.cxd2841er_priv* %2, i8 zeroext 3) #8, !dbg !6657
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6658
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6659
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6660
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 0, i8 zeroext 23, i8 zeroext 1) #8, !dbg !6661
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6662
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6663
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6664
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 44, i8 zeroext 1) #8, !dbg !6665
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6666
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %7, i8 zeroext 1, i8 zeroext 47, i8 zeroext 0) #8, !dbg !6667
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6668
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext 48, i8 zeroext 0) #8, !dbg !6669
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6670
  %call6 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %9, i8 zeroext 1, i8 zeroext 65, i8 zeroext 26) #8, !dbg !6671
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6672
  %xtal = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %10, i32 0, i32 7, !dbg !6674
  %11 = load i32, i32* %xtal, align 8, !dbg !6674
  %cmp = icmp eq i32 %11, 2, !dbg !6675
  br i1 %cmp, label %if.then, label %if.end, !dbg !6676

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !6677
  store i8 10, i8* %arrayidx, align 1, !dbg !6679
  %arrayidx7 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !6680
  store i8 -44, i8* %arrayidx7, align 1, !dbg !6681
  br label %if.end, !dbg !6682

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6683
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !6684
  %call8 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext 67, i8* %arraydecay, i32 2) #8, !dbg !6685
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6686
  %call9 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 0, i8 zeroext 24, i8 zeroext 0) #8, !dbg !6687
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6688
  %call10 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !6689
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6690
  %call11 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext -46, i8 zeroext 12, i8 zeroext 31) #8, !dbg !6691
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6692
  %call12 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %16, i8 zeroext 1, i8 zeroext 0, i8 zeroext 17) #8, !dbg !6693
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6694
  %call13 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext 106, i8 zeroext 80) #8, !dbg !6695
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6696
  %call14 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %18, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !6697
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6698
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6699
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %20, i32 0, i32 9, !dbg !6700
  %21 = load i32, i32* %flags, align 8, !dbg !6700
  %and = and i32 %21, 8, !dbg !6701
  %tobool = icmp ne i32 %and, 0, !dbg !6702
  %22 = zext i1 %tobool to i64, !dbg !6702
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !6702
  %conv = trunc i32 %cond to i8, !dbg !6703
  %call15 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %19, i8 zeroext 1, i8 zeroext -91, i8 zeroext %conv, i8 zeroext 1) #8, !dbg !6704
  %23 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6705
  %call16 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %23, i8 zeroext 1, i8 zeroext 0, i8 zeroext 24) #8, !dbg !6706
  %24 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6707
  %call17 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %24, i8 zeroext 1, i8 zeroext 54, i8 zeroext 64, i8 zeroext 7) #8, !dbg !6708
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6709
  %call18 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %25, i8 zeroext 1, i8 zeroext 48, i8 zeroext 1, i8 zeroext 1) #8, !dbg !6710
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6711
  %call19 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %26, i8 zeroext 1, i8 zeroext 49, i8 zeroext 1, i8 zeroext 1) #8, !dbg !6712
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6713
  %call20 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %27, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6714
  %28 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6715
  %call21 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %28, i8 zeroext 1, i8 zeroext -50, i8 zeroext 1, i8 zeroext 1) #8, !dbg !6716
  %29 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6717
  %call22 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %29, i8 zeroext 1, i8 zeroext -49, i8 zeroext 1, i8 zeroext 1) #8, !dbg !6718
  %30 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6719
  %xtal23 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %30, i32 0, i32 7, !dbg !6721
  %31 = load i32, i32* %xtal23, align 8, !dbg !6721
  %cmp24 = icmp eq i32 %31, 1, !dbg !6722
  br i1 %cmp24, label %if.then26, label %if.end32, !dbg !6723

if.then26:                                        ; preds = %if.end
  %32 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6724
  %call27 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %32, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !6726
  %33 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6727
  %call28 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %33, i8 zeroext 1, i8 zeroext -65, i8 zeroext 96) #8, !dbg !6728
  %34 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6729
  %call29 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %34, i8 zeroext 1, i8 zeroext 0, i8 zeroext 24) #8, !dbg !6730
  %35 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6731
  %arraydecay30 = getelementptr inbounds [3 x i8], [3 x i8]* %data24m, i64 0, i64 0, !dbg !6732
  %call31 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %35, i8 zeroext 1, i8 zeroext 36, i8* %arraydecay30, i32 3) #8, !dbg !6733
  br label %if.end32, !dbg !6734

if.end32:                                         ; preds = %if.then26, %if.end
  %36 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6735
  %37 = load i32, i32* %bandwidth.addr, align 4, !dbg !6736
  %call33 = call i32 @cxd2841er_sleep_tc_to_active_t_band(%struct.cxd2841er_priv* %36, i32 %37) #8, !dbg !6737
  %38 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6738
  %call34 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %38, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6739
  %39 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6740
  %call35 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %39, i8 zeroext 1, i8 zeroext -128, i8 zeroext 40) #8, !dbg !6741
  %40 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6742
  %call36 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %40, i8 zeroext 1, i8 zeroext -127, i8 zeroext 0) #8, !dbg !6743
  %41 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6744
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %41, i32 0, i32 5, !dbg !6745
  store i32 4, i32* %state, align 8, !dbg !6746
  ret i32 0, !dbg !6747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_retune_active(%struct.cxd2841er_priv* %priv, %struct.dtv_frontend_properties* %p) #0 !dbg !6748 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %p.addr = alloca %struct.dtv_frontend_properties*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6751, metadata !DIExpression()), !dbg !6752
  store %struct.dtv_frontend_properties* %p, %struct.dtv_frontend_properties** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p.addr, metadata !6753, metadata !DIExpression()), !dbg !6754
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6755
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !6757
  %1 = load i32, i32* %state, align 8, !dbg !6757
  %cmp = icmp ne i32 %1, 2, !dbg !6758
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6759

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6760
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 5, !dbg !6761
  %3 = load i32, i32* %state1, align 8, !dbg !6761
  %cmp2 = icmp ne i32 %3, 4, !dbg !6762
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6763

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !6764
  br label %return, !dbg !6764

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6766
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6767
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6768
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext -61, i8 zeroext 1) #8, !dbg !6769
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6770
  %state4 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %6, i32 0, i32 5, !dbg !6772
  %7 = load i32, i32* %state4, align 8, !dbg !6772
  %cmp5 = icmp eq i32 %7, 2, !dbg !6773
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6774

if.then6:                                         ; preds = %if.end
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6775
  %9 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !6776
  %symbol_rate = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %9, i32 0, i32 10, !dbg !6777
  %10 = load i32, i32* %symbol_rate, align 4, !dbg !6777
  %div = udiv i32 %10, 1000, !dbg !6778
  %call7 = call i32 @cxd2841er_dvbs2_set_symbol_rate(%struct.cxd2841er_priv* %8, i32 %div) #8, !dbg !6779
  store i32 %call7, i32* %retval, align 4, !dbg !6780
  br label %return, !dbg !6780

if.else:                                          ; preds = %if.end
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6781
  %state8 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %11, i32 0, i32 5, !dbg !6783
  %12 = load i32, i32* %state8, align 8, !dbg !6783
  %cmp9 = icmp eq i32 %12, 4, !dbg !6784
  br i1 %cmp9, label %if.then10, label %if.end24, !dbg !6785

if.then10:                                        ; preds = %if.else
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6786
  %system = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %13, i32 0, i32 6, !dbg !6788
  %14 = load i8, i8* %system, align 4, !dbg !6788
  %conv = zext i8 %14 to i32, !dbg !6786
  switch i32 %conv, label %sw.epilog [
    i32 3, label %sw.bb
    i32 16, label %sw.bb12
    i32 1, label %sw.bb15
    i32 8, label %sw.bb18
  ], !dbg !6789

sw.bb:                                            ; preds = %if.then10
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6790
  %16 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !6792
  %bandwidth_hz = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %16, i32 0, i32 7, !dbg !6793
  %17 = load i32, i32* %bandwidth_hz, align 4, !dbg !6793
  %call11 = call i32 @cxd2841er_sleep_tc_to_active_t_band(%struct.cxd2841er_priv* %15, i32 %17) #8, !dbg !6794
  store i32 %call11, i32* %retval, align 4, !dbg !6795
  br label %return, !dbg !6795

sw.bb12:                                          ; preds = %if.then10
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6796
  %19 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !6797
  %bandwidth_hz13 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %19, i32 0, i32 7, !dbg !6798
  %20 = load i32, i32* %bandwidth_hz13, align 4, !dbg !6798
  %call14 = call i32 @cxd2841er_sleep_tc_to_active_t2_band(%struct.cxd2841er_priv* %18, i32 %20) #8, !dbg !6799
  store i32 %call14, i32* %retval, align 4, !dbg !6800
  br label %return, !dbg !6800

sw.bb15:                                          ; preds = %if.then10
  %21 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6801
  %22 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !6802
  %bandwidth_hz16 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %22, i32 0, i32 7, !dbg !6803
  %23 = load i32, i32* %bandwidth_hz16, align 4, !dbg !6803
  %call17 = call i32 @cxd2841er_sleep_tc_to_active_c_band(%struct.cxd2841er_priv* %21, i32 %23) #8, !dbg !6804
  store i32 %call17, i32* %retval, align 4, !dbg !6805
  br label %return, !dbg !6805

sw.bb18:                                          ; preds = %if.then10
  %24 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6806
  %call19 = call i32 @cxd2841er_active_i_to_sleep_tc(%struct.cxd2841er_priv* %24) #8, !dbg !6807
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6808
  %call20 = call i32 @cxd2841er_sleep_tc_to_shutdown(%struct.cxd2841er_priv* %25) #8, !dbg !6809
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6810
  %call21 = call i32 @cxd2841er_shutdown_to_sleep_tc(%struct.cxd2841er_priv* %26) #8, !dbg !6811
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6812
  %28 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p.addr, align 8, !dbg !6813
  %bandwidth_hz22 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %28, i32 0, i32 7, !dbg !6814
  %29 = load i32, i32* %bandwidth_hz22, align 4, !dbg !6814
  %call23 = call i32 @cxd2841er_sleep_tc_to_active_i(%struct.cxd2841er_priv* %27, i32 %29) #8, !dbg !6815
  store i32 %call23, i32* %retval, align 4, !dbg !6816
  br label %return, !dbg !6816

sw.epilog:                                        ; preds = %if.then10
  br label %if.end24, !dbg !6817

if.end24:                                         ; preds = %sw.epilog, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24
  store i32 -22, i32* %retval, align 4, !dbg !6818
  br label %return, !dbg !6818

return:                                           ; preds = %if.end25, %sw.bb18, %sw.bb15, %sw.bb12, %sw.bb, %if.then6, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !6819
  ret i32 %30, !dbg !6819
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_dvbt2_set_plp_config(%struct.cxd2841er_priv* %priv, i8 zeroext %is_auto, i8 zeroext %plp_id) #0 !dbg !6820 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %is_auto.addr = alloca i8, align 1
  %plp_id.addr = alloca i8, align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6823, metadata !DIExpression()), !dbg !6824
  store i8 %is_auto, i8* %is_auto.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_auto.addr, metadata !6825, metadata !DIExpression()), !dbg !6826
  store i8 %plp_id, i8* %plp_id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %plp_id.addr, metadata !6827, metadata !DIExpression()), !dbg !6828
  %0 = load i8, i8* %is_auto.addr, align 1, !dbg !6829
  %tobool = icmp ne i8 %0, 0, !dbg !6829
  br i1 %tobool, label %if.then, label %if.else, !dbg !6831

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6832

if.else:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6834
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %1, i8 zeroext 1, i8 zeroext 0, i8 zeroext 35) #8, !dbg !6835
  %2 = load i8, i8* %is_auto.addr, align 1, !dbg !6836
  %tobool1 = icmp ne i8 %2, 0, !dbg !6836
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !6838

if.then2:                                         ; preds = %if.end
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6839
  %4 = load i8, i8* %plp_id.addr, align 1, !dbg !6841
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext -81, i8 zeroext %4) #8, !dbg !6842
  br label %if.end4, !dbg !6843

if.end4:                                          ; preds = %if.then2, %if.end
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6844
  %6 = load i8, i8* %is_auto.addr, align 1, !dbg !6845
  %conv = zext i8 %6 to i32, !dbg !6845
  %tobool5 = icmp ne i32 %conv, 0, !dbg !6845
  %7 = zext i1 %tobool5 to i64, !dbg !6845
  %cond = select i1 %tobool5, i32 0, i32 1, !dbg !6845
  %conv6 = trunc i32 %cond to i8, !dbg !6846
  %call7 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext -83, i8 zeroext %conv6) #8, !dbg !6847
  ret i32 0, !dbg !6848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_dvbt2_set_profile(%struct.cxd2841er_priv* %priv, i32 %profile) #0 !dbg !6849 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %profile.addr = alloca i32, align 4
  %tune_mode = alloca i8, align 1
  %seq_not2d_time = alloca i8, align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6852, metadata !DIExpression()), !dbg !6853
  store i32 %profile, i32* %profile.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %profile.addr, metadata !6854, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.declare(metadata i8* %tune_mode, metadata !6856, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.declare(metadata i8* %seq_not2d_time, metadata !6858, metadata !DIExpression()), !dbg !6859
  %0 = load i32, i32* %profile.addr, align 4, !dbg !6860
  switch i32 %0, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 0, label %sw.bb7
  ], !dbg !6861

sw.bb:                                            ; preds = %entry
  store i8 1, i8* %tune_mode, align 1, !dbg !6862
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6864
  %xtal = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 7, !dbg !6865
  %2 = load i32, i32* %xtal, align 8, !dbg !6865
  %cmp = icmp eq i32 %2, 1, !dbg !6866
  %3 = zext i1 %cmp to i64, !dbg !6867
  %cond = select i1 %cmp, i32 14, i32 12, !dbg !6867
  %conv = trunc i32 %cond to i8, !dbg !6867
  store i8 %conv, i8* %seq_not2d_time, align 1, !dbg !6868
  br label %sw.epilog, !dbg !6869

sw.bb1:                                           ; preds = %entry
  store i8 5, i8* %tune_mode, align 1, !dbg !6870
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6871
  %xtal2 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %4, i32 0, i32 7, !dbg !6872
  %5 = load i32, i32* %xtal2, align 8, !dbg !6872
  %cmp3 = icmp eq i32 %5, 1, !dbg !6873
  %6 = zext i1 %cmp3 to i64, !dbg !6874
  %cond5 = select i1 %cmp3, i32 46, i32 40, !dbg !6874
  %conv6 = trunc i32 %cond5 to i8, !dbg !6874
  store i8 %conv6, i8* %seq_not2d_time, align 1, !dbg !6875
  br label %sw.epilog, !dbg !6876

sw.bb7:                                           ; preds = %entry
  store i8 0, i8* %tune_mode, align 1, !dbg !6877
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6878
  %xtal8 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %7, i32 0, i32 7, !dbg !6879
  %8 = load i32, i32* %xtal8, align 8, !dbg !6879
  %cmp9 = icmp eq i32 %8, 1, !dbg !6880
  %9 = zext i1 %cmp9 to i64, !dbg !6881
  %cond11 = select i1 %cmp9, i32 46, i32 40, !dbg !6881
  %conv12 = trunc i32 %cond11 to i8, !dbg !6881
  store i8 %conv12, i8* %seq_not2d_time, align 1, !dbg !6882
  br label %sw.epilog, !dbg !6883

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6884
  br label %return, !dbg !6884

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb1, %sw.bb
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6885
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext 1, i8 zeroext 0, i8 zeroext 46) #8, !dbg !6886
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6887
  %12 = load i8, i8* %tune_mode, align 1, !dbg !6888
  %call13 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %11, i8 zeroext 1, i8 zeroext 16, i8 zeroext %12, i8 zeroext 7) #8, !dbg !6889
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6890
  %call14 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext 0, i8 zeroext 43) #8, !dbg !6891
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6892
  %15 = load i8, i8* %seq_not2d_time, align 1, !dbg !6893
  %call15 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext -99, i8 zeroext %15) #8, !dbg !6894
  store i32 0, i32* %retval, align 4, !dbg !6895
  br label %return, !dbg !6895

return:                                           ; preds = %sw.epilog, %sw.default
  %16 = load i32, i32* %retval, align 4, !dbg !6896
  ret i32 %16, !dbg !6896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_tc_to_active_t2(%struct.cxd2841er_priv* %priv, i32 %bandwidth) #0 !dbg !6897 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bandwidth.addr = alloca i32, align 4
  %data = alloca [16 x i8], align 16
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !6898, metadata !DIExpression()), !dbg !6899
  store i32 %bandwidth, i32* %bandwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bandwidth.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.declare(metadata [16 x i8]* %data, metadata !6902, metadata !DIExpression()), !dbg !6904
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6905
  call void @cxd2841er_set_ts_clock_mode(%struct.cxd2841er_priv* %0, i8 zeroext 16) #8, !dbg !6906
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6907
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %1, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6908
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6909
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 0, i8 zeroext 23, i8 zeroext 2) #8, !dbg !6910
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6911
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6912
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6913
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 44, i8 zeroext 1) #8, !dbg !6914
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6915
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 89, i8 zeroext 0) #8, !dbg !6916
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6917
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 47, i8 zeroext 0) #8, !dbg !6918
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6919
  %call6 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %7, i8 zeroext 1, i8 zeroext 48, i8 zeroext 0) #8, !dbg !6920
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6921
  %call7 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext 65, i8 zeroext 26) #8, !dbg !6922
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6923
  %xtal = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %9, i32 0, i32 7, !dbg !6925
  %10 = load i32, i32* %xtal, align 8, !dbg !6925
  %cmp = icmp eq i32 %10, 2, !dbg !6926
  br i1 %cmp, label %if.then, label %if.else, !dbg !6927

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !6928
  store i8 10, i8* %arrayidx, align 16, !dbg !6930
  %arrayidx8 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !6931
  store i8 -44, i8* %arrayidx8, align 1, !dbg !6932
  br label %if.end, !dbg !6933

if.else:                                          ; preds = %entry
  %arrayidx9 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !6934
  store i8 9, i8* %arrayidx9, align 16, !dbg !6936
  %arrayidx10 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !6937
  store i8 84, i8* %arrayidx10, align 1, !dbg !6938
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6939
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !6940
  %call11 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %11, i8 zeroext 1, i8 zeroext 67, i8* %arraydecay, i32 2) #8, !dbg !6941
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6942
  %call12 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %12, i8 zeroext 0, i8 zeroext 24, i8 zeroext 0) #8, !dbg !6943
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6944
  %call13 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !6945
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6946
  %call14 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext -46, i8 zeroext 12, i8 zeroext 31) #8, !dbg !6947
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6948
  %call15 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext 0, i8 zeroext 17) #8, !dbg !6949
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6950
  %call16 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %16, i8 zeroext 1, i8 zeroext 106, i8 zeroext 80) #8, !dbg !6951
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6952
  %call17 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !6953
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6954
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6955
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %19, i32 0, i32 9, !dbg !6956
  %20 = load i32, i32* %flags, align 8, !dbg !6956
  %and = and i32 %20, 8, !dbg !6957
  %tobool = icmp ne i32 %and, 0, !dbg !6958
  %21 = zext i1 %tobool to i64, !dbg !6958
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !6958
  %conv = trunc i32 %cond to i8, !dbg !6959
  %call18 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %18, i8 zeroext 1, i8 zeroext -91, i8 zeroext %conv, i8 zeroext 1) #8, !dbg !6960
  %22 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6961
  %call19 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %22, i8 zeroext 1, i8 zeroext 0, i8 zeroext 32) #8, !dbg !6962
  %23 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6963
  %call20 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %23, i8 zeroext 1, i8 zeroext -117, i8 zeroext 60) #8, !dbg !6964
  %24 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6965
  %call21 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %24, i8 zeroext 1, i8 zeroext 0, i8 zeroext 43) #8, !dbg !6966
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6967
  %call22 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %25, i8 zeroext 1, i8 zeroext 118, i8 zeroext 32, i8 zeroext 112) #8, !dbg !6968
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6969
  %call23 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %26, i8 zeroext 1, i8 zeroext 0, i8 zeroext 35) #8, !dbg !6970
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6971
  %call24 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %27, i8 zeroext 1, i8 zeroext -26, i8 zeroext 0, i8 zeroext 3) #8, !dbg !6972
  %28 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6973
  %call25 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %28, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !6974
  %29 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6975
  %call26 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %29, i8 zeroext 1, i8 zeroext -50, i8 zeroext 1, i8 zeroext 1) #8, !dbg !6976
  %30 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6977
  %call27 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %30, i8 zeroext 1, i8 zeroext -49, i8 zeroext 1, i8 zeroext 1) #8, !dbg !6978
  %31 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6979
  %call28 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %31, i8 zeroext 1, i8 zeroext 0, i8 zeroext 19) #8, !dbg !6980
  %32 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6981
  %call29 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %32, i8 zeroext 1, i8 zeroext -125, i8 zeroext 16) #8, !dbg !6982
  %33 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6983
  %call30 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %33, i8 zeroext 1, i8 zeroext -122, i8 zeroext 52) #8, !dbg !6984
  %34 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6985
  %call31 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %34, i8 zeroext 1, i8 zeroext -98, i8 zeroext 9, i8 zeroext 15) #8, !dbg !6986
  %35 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6987
  %call32 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %35, i8 zeroext 1, i8 zeroext -97, i8 zeroext -40) #8, !dbg !6988
  %36 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6989
  %call33 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %36, i8 zeroext 1, i8 zeroext 0, i8 zeroext 42) #8, !dbg !6990
  %37 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6991
  %call34 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %37, i8 zeroext 1, i8 zeroext 56, i8 zeroext 4, i8 zeroext 15) #8, !dbg !6992
  %38 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6993
  %call35 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %38, i8 zeroext 1, i8 zeroext 0, i8 zeroext 43) #8, !dbg !6994
  %39 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6995
  %call36 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %39, i8 zeroext 1, i8 zeroext 17, i8 zeroext 32, i8 zeroext 63) #8, !dbg !6996
  %40 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !6997
  %xtal37 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %40, i32 0, i32 7, !dbg !6999
  %41 = load i32, i32* %xtal37, align 8, !dbg !6999
  %cmp38 = icmp eq i32 %41, 1, !dbg !7000
  br i1 %cmp38, label %if.then40, label %if.end91, !dbg !7001

if.then40:                                        ; preds = %if.end
  %42 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7002
  %call41 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %42, i8 zeroext 1, i8 zeroext 0, i8 zeroext 17) #8, !dbg !7004
  %arrayidx42 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7005
  store i8 -21, i8* %arrayidx42, align 16, !dbg !7006
  %arrayidx43 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7007
  store i8 3, i8* %arrayidx43, align 1, !dbg !7008
  %arrayidx44 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7009
  store i8 59, i8* %arrayidx44, align 2, !dbg !7010
  %43 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7011
  %arraydecay45 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7012
  %call46 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %43, i8 zeroext 1, i8 zeroext 51, i8* %arraydecay45, i32 3) #8, !dbg !7013
  %44 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7014
  %call47 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %44, i8 zeroext 1, i8 zeroext 0, i8 zeroext 32) #8, !dbg !7015
  %arrayidx48 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7016
  store i8 94, i8* %arrayidx48, align 16, !dbg !7017
  %arrayidx49 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7018
  store i8 94, i8* %arrayidx49, align 1, !dbg !7019
  %arrayidx50 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7020
  store i8 71, i8* %arrayidx50, align 2, !dbg !7021
  %45 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7022
  %arraydecay51 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7023
  %call52 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %45, i8 zeroext 1, i8 zeroext -107, i8* %arraydecay51, i32 3) #8, !dbg !7024
  %46 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7025
  %call53 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %46, i8 zeroext 1, i8 zeroext -103, i8 zeroext 24) #8, !dbg !7026
  %arrayidx54 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7027
  store i8 63, i8* %arrayidx54, align 16, !dbg !7028
  %arrayidx55 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7029
  store i8 -1, i8* %arrayidx55, align 1, !dbg !7030
  %47 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7031
  %arraydecay56 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7032
  %call57 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %47, i8 zeroext 1, i8 zeroext -39, i8* %arraydecay56, i32 2) #8, !dbg !7033
  %48 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7034
  %call58 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %48, i8 zeroext 1, i8 zeroext 0, i8 zeroext 36) #8, !dbg !7035
  %arrayidx59 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7036
  store i8 11, i8* %arrayidx59, align 16, !dbg !7037
  %arrayidx60 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7038
  store i8 114, i8* %arrayidx60, align 1, !dbg !7039
  %49 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7040
  %arraydecay61 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7041
  %call62 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %49, i8 zeroext 1, i8 zeroext 52, i8* %arraydecay61, i32 2) #8, !dbg !7042
  %arrayidx63 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7043
  store i8 -109, i8* %arrayidx63, align 16, !dbg !7044
  %arrayidx64 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7045
  store i8 -13, i8* %arrayidx64, align 1, !dbg !7046
  %arrayidx65 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7047
  store i8 0, i8* %arrayidx65, align 2, !dbg !7048
  %50 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7049
  %arraydecay66 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7050
  %call67 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %50, i8 zeroext 1, i8 zeroext -46, i8* %arraydecay66, i32 3) #8, !dbg !7051
  %arrayidx68 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7052
  store i8 5, i8* %arrayidx68, align 16, !dbg !7053
  %arrayidx69 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7054
  store i8 -72, i8* %arrayidx69, align 1, !dbg !7055
  %arrayidx70 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7056
  store i8 -40, i8* %arrayidx70, align 2, !dbg !7057
  %51 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7058
  %arraydecay71 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7059
  %call72 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %51, i8 zeroext 1, i8 zeroext -35, i8* %arraydecay71, i32 3) #8, !dbg !7060
  %52 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7061
  %call73 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %52, i8 zeroext 1, i8 zeroext -32, i8 zeroext 0) #8, !dbg !7062
  %53 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7063
  %call74 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %53, i8 zeroext 1, i8 zeroext 0, i8 zeroext 37) #8, !dbg !7064
  %54 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7065
  %call75 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %54, i8 zeroext 1, i8 zeroext -19, i8 zeroext 96) #8, !dbg !7066
  %55 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7067
  %call76 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %55, i8 zeroext 1, i8 zeroext 0, i8 zeroext 39) #8, !dbg !7068
  %56 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7069
  %call77 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %56, i8 zeroext 1, i8 zeroext -6, i8 zeroext 52) #8, !dbg !7070
  %57 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7071
  %call78 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %57, i8 zeroext 1, i8 zeroext 0, i8 zeroext 43) #8, !dbg !7072
  %58 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7073
  %call79 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %58, i8 zeroext 1, i8 zeroext 75, i8 zeroext 47) #8, !dbg !7074
  %59 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7075
  %call80 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %59, i8 zeroext 1, i8 zeroext -98, i8 zeroext 14) #8, !dbg !7076
  %60 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7077
  %call81 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %60, i8 zeroext 1, i8 zeroext 0, i8 zeroext 45) #8, !dbg !7078
  %arrayidx82 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7079
  store i8 -119, i8* %arrayidx82, align 16, !dbg !7080
  %arrayidx83 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7081
  store i8 -119, i8* %arrayidx83, align 1, !dbg !7082
  %61 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7083
  %arraydecay84 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7084
  %call85 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %61, i8 zeroext 1, i8 zeroext 36, i8* %arraydecay84, i32 2) #8, !dbg !7085
  %62 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7086
  %call86 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %62, i8 zeroext 1, i8 zeroext 0, i8 zeroext 94) #8, !dbg !7087
  %arrayidx87 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7088
  store i8 36, i8* %arrayidx87, align 16, !dbg !7089
  %arrayidx88 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7090
  store i8 -107, i8* %arrayidx88, align 1, !dbg !7091
  %63 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7092
  %arraydecay89 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7093
  %call90 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %63, i8 zeroext 1, i8 zeroext -116, i8* %arraydecay89, i32 2) #8, !dbg !7094
  br label %if.end91, !dbg !7095

if.end91:                                         ; preds = %if.then40, %if.end
  %64 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7096
  %65 = load i32, i32* %bandwidth.addr, align 4, !dbg !7097
  %call92 = call i32 @cxd2841er_sleep_tc_to_active_t2_band(%struct.cxd2841er_priv* %64, i32 %65) #8, !dbg !7098
  %66 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7099
  %call93 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %66, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !7100
  %67 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7101
  %call94 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %67, i8 zeroext 1, i8 zeroext -128, i8 zeroext 40) #8, !dbg !7102
  %68 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7103
  %call95 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %68, i8 zeroext 1, i8 zeroext -127, i8 zeroext 0) #8, !dbg !7104
  %69 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7105
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %69, i32 0, i32 5, !dbg !7106
  store i32 4, i32* %state, align 8, !dbg !7107
  ret i32 0, !dbg !7108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_tc_to_active_i(%struct.cxd2841er_priv* %priv, i32 %bandwidth) #0 !dbg !7109 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bandwidth.addr = alloca i32, align 4
  %data = alloca [2 x i8], align 1
  %data24m = alloca [2 x i8], align 1
  %data24m2 = alloca [3 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !7110, metadata !DIExpression()), !dbg !7111
  store i32 %bandwidth, i32* %bandwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bandwidth.addr, metadata !7112, metadata !DIExpression()), !dbg !7113
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !7114, metadata !DIExpression()), !dbg !7115
  %0 = bitcast [2 x i8]* %data to i8*, !dbg !7115
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([2 x i8], [2 x i8]* @__const.cxd2841er_sleep_tc_to_active_i.data, i32 0, i32 0), i64 2, i1 false), !dbg !7115
  call void @llvm.dbg.declare(metadata [2 x i8]* %data24m, metadata !7116, metadata !DIExpression()), !dbg !7117
  %1 = bitcast [2 x i8]* %data24m to i8*, !dbg !7117
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([2 x i8], [2 x i8]* @__const.cxd2841er_sleep_tc_to_active_i.data24m, i32 0, i32 0), i64 2, i1 false), !dbg !7117
  call void @llvm.dbg.declare(metadata [3 x i8]* %data24m2, metadata !7118, metadata !DIExpression()), !dbg !7119
  %2 = bitcast [3 x i8]* %data24m2 to i8*, !dbg !7119
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2, i8* align 1 getelementptr inbounds ([3 x i8], [3 x i8]* @__const.cxd2841er_sleep_tc_to_active_i.data24m2, i32 0, i32 0), i64 3, i1 false), !dbg !7119
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7120
  call void @cxd2841er_set_ts_clock_mode(%struct.cxd2841er_priv* %3, i8 zeroext 3) #8, !dbg !7121
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7122
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !7123
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7124
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 0, i8 zeroext 23, i8 zeroext 6) #8, !dbg !7125
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7126
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !7127
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7128
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %7, i8 zeroext 1, i8 zeroext 44, i8 zeroext 1) #8, !dbg !7129
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7130
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext 47, i8 zeroext 1) #8, !dbg !7131
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7132
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %9, i8 zeroext 1, i8 zeroext 89, i8 zeroext 1) #8, !dbg !7133
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7134
  %call6 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext 1, i8 zeroext 48, i8 zeroext 0) #8, !dbg !7135
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7136
  %call7 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %11, i8 zeroext 1, i8 zeroext 65, i8 zeroext 26) #8, !dbg !7137
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7138
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !7139
  %call8 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext 67, i8* %arraydecay, i32 2) #8, !dbg !7140
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7141
  %call9 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 0, i8 zeroext 24, i8 zeroext 0) #8, !dbg !7142
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7143
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7144
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %15, i32 0, i32 9, !dbg !7145
  %16 = load i32, i32* %flags, align 8, !dbg !7145
  %and = and i32 %16, 8, !dbg !7146
  %tobool = icmp ne i32 %and, 0, !dbg !7147
  %17 = zext i1 %tobool to i64, !dbg !7147
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !7147
  %conv = trunc i32 %cond to i8, !dbg !7148
  %call10 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext -91, i8 zeroext %conv, i8 zeroext 1) #8, !dbg !7149
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7150
  %call11 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %18, i8 zeroext 1, i8 zeroext 48, i8 zeroext 1, i8 zeroext 1) #8, !dbg !7151
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7152
  %call12 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %19, i8 zeroext 1, i8 zeroext 49, i8 zeroext 0, i8 zeroext 1) #8, !dbg !7153
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7154
  %call13 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %20, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !7155
  %21 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7156
  %call14 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %21, i8 zeroext 1, i8 zeroext -50, i8 zeroext 0, i8 zeroext 1) #8, !dbg !7157
  %22 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7158
  %call15 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %22, i8 zeroext 1, i8 zeroext -49, i8 zeroext 0, i8 zeroext 1) #8, !dbg !7159
  %23 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7160
  %call16 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %23, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !7161
  %24 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7162
  %call17 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %24, i8 zeroext 1, i8 zeroext 105, i8 zeroext 4, i8 zeroext 7) #8, !dbg !7163
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7164
  %call18 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %25, i8 zeroext 1, i8 zeroext 107, i8 zeroext 3, i8 zeroext 7) #8, !dbg !7165
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7166
  %call19 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %26, i8 zeroext 1, i8 zeroext -99, i8 zeroext 80, i8 zeroext -1) #8, !dbg !7167
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7168
  %call20 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %27, i8 zeroext 1, i8 zeroext -45, i8 zeroext 6, i8 zeroext 31) #8, !dbg !7169
  %28 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7170
  %call21 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %28, i8 zeroext 1, i8 zeroext -19, i8 zeroext 0, i8 zeroext 1) #8, !dbg !7171
  %29 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7172
  %call22 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %29, i8 zeroext 1, i8 zeroext -30, i8 zeroext -50, i8 zeroext -128) #8, !dbg !7173
  %30 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7174
  %call23 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %30, i8 zeroext 1, i8 zeroext -14, i8 zeroext 19, i8 zeroext 16) #8, !dbg !7175
  %31 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7176
  %call24 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %31, i8 zeroext 1, i8 zeroext -34, i8 zeroext 46, i8 zeroext 63) #8, !dbg !7177
  %32 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7178
  %call25 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %32, i8 zeroext 1, i8 zeroext 0, i8 zeroext 21) #8, !dbg !7179
  %33 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7180
  %call26 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %33, i8 zeroext 1, i8 zeroext -34, i8 zeroext 2, i8 zeroext 3) #8, !dbg !7181
  %34 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7182
  %call27 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %34, i8 zeroext 1, i8 zeroext 0, i8 zeroext 30) #8, !dbg !7183
  %35 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7184
  %call28 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %35, i8 zeroext 1, i8 zeroext 115, i8 zeroext 104, i8 zeroext -1) #8, !dbg !7185
  %36 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7186
  %call29 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %36, i8 zeroext 1, i8 zeroext 0, i8 zeroext 99) #8, !dbg !7187
  %37 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7188
  %call30 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %37, i8 zeroext 1, i8 zeroext -127, i8 zeroext 0, i8 zeroext 1) #8, !dbg !7189
  %38 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7190
  %call31 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %38, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !7191
  %39 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7192
  %arraydecay32 = getelementptr inbounds [2 x i8], [2 x i8]* %data24m, i64 0, i64 0, !dbg !7193
  %call33 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %39, i8 zeroext 1, i8 zeroext -65, i8* %arraydecay32, i32 2) #8, !dbg !7194
  %40 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7195
  %call34 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %40, i8 zeroext 1, i8 zeroext 0, i8 zeroext 96) #8, !dbg !7196
  %41 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7197
  %arraydecay35 = getelementptr inbounds [3 x i8], [3 x i8]* %data24m2, i64 0, i64 0, !dbg !7198
  %call36 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %41, i8 zeroext 1, i8 zeroext -88, i8* %arraydecay35, i32 3) #8, !dbg !7199
  %42 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7200
  %43 = load i32, i32* %bandwidth.addr, align 4, !dbg !7201
  %call37 = call i32 @cxd2841er_sleep_tc_to_active_i_band(%struct.cxd2841er_priv* %42, i32 %43) #8, !dbg !7202
  %44 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7203
  %call38 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %44, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !7204
  %45 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7205
  %call39 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %45, i8 zeroext 1, i8 zeroext -128, i8 zeroext 40) #8, !dbg !7206
  %46 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7207
  %call40 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %46, i8 zeroext 1, i8 zeroext -127, i8 zeroext 0) #8, !dbg !7208
  %47 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7209
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %47, i32 0, i32 5, !dbg !7210
  store i32 4, i32* %state, align 8, !dbg !7211
  ret i32 0, !dbg !7212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_tc_to_active_c(%struct.cxd2841er_priv* %priv, i32 %bandwidth) #0 !dbg !7213 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bandwidth.addr = alloca i32, align 4
  %data = alloca [2 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !7214, metadata !DIExpression()), !dbg !7215
  store i32 %bandwidth, i32* %bandwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bandwidth.addr, metadata !7216, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !7218, metadata !DIExpression()), !dbg !7219
  %0 = bitcast [2 x i8]* %data to i8*, !dbg !7219
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([2 x i8], [2 x i8]* @__const.cxd2841er_sleep_tc_to_active_c.data, i32 0, i32 0), i64 2, i1 false), !dbg !7219
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7220
  call void @cxd2841er_set_ts_clock_mode(%struct.cxd2841er_priv* %1, i8 zeroext 1) #8, !dbg !7221
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7222
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !7223
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7224
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 0, i8 zeroext 23, i8 zeroext 4) #8, !dbg !7225
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7226
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !7227
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7228
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 44, i8 zeroext 1) #8, !dbg !7229
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7230
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 89, i8 zeroext 0) #8, !dbg !7231
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7232
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %7, i8 zeroext 1, i8 zeroext 47, i8 zeroext 0) #8, !dbg !7233
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7234
  %call6 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext 48, i8 zeroext 0) #8, !dbg !7235
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7236
  %call7 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %9, i8 zeroext 1, i8 zeroext 65, i8 zeroext 26) #8, !dbg !7237
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7238
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !7239
  %call8 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %10, i8 zeroext 1, i8 zeroext 67, i8* %arraydecay, i32 2) #8, !dbg !7240
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7241
  %call9 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %11, i8 zeroext 0, i8 zeroext 24, i8 zeroext 0) #8, !dbg !7242
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7243
  %call10 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !7244
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7245
  %call11 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext -46, i8 zeroext 9, i8 zeroext 31) #8, !dbg !7246
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7247
  %call12 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 0, i8 zeroext 17) #8, !dbg !7248
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7249
  %call13 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext 106, i8 zeroext 72) #8, !dbg !7250
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7251
  %call14 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %16, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !7252
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7253
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7254
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %18, i32 0, i32 9, !dbg !7255
  %19 = load i32, i32* %flags, align 8, !dbg !7255
  %and = and i32 %19, 8, !dbg !7256
  %tobool = icmp ne i32 %and, 0, !dbg !7257
  %20 = zext i1 %tobool to i64, !dbg !7257
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !7257
  %conv = trunc i32 %cond to i8, !dbg !7258
  %call15 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext -91, i8 zeroext %conv, i8 zeroext 1) #8, !dbg !7259
  %21 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7260
  %call16 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %21, i8 zeroext 1, i8 zeroext 0, i8 zeroext 64) #8, !dbg !7261
  %22 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7262
  %call17 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %22, i8 zeroext 1, i8 zeroext -61, i8 zeroext 0, i8 zeroext 4) #8, !dbg !7263
  %23 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7264
  %call18 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %23, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !7265
  %24 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7266
  %call19 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %24, i8 zeroext 1, i8 zeroext -50, i8 zeroext 1, i8 zeroext 1) #8, !dbg !7267
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7268
  %call20 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %25, i8 zeroext 1, i8 zeroext -49, i8 zeroext 1, i8 zeroext 1) #8, !dbg !7269
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7270
  %27 = load i32, i32* %bandwidth.addr, align 4, !dbg !7271
  %call21 = call i32 @cxd2841er_sleep_tc_to_active_c_band(%struct.cxd2841er_priv* %26, i32 %27) #8, !dbg !7272
  %28 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7273
  %call22 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %28, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !7274
  %29 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7275
  %call23 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %29, i8 zeroext 1, i8 zeroext -128, i8 zeroext 40) #8, !dbg !7276
  %30 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7277
  %call24 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %30, i8 zeroext 1, i8 zeroext -127, i8 zeroext 0) #8, !dbg !7278
  %31 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7279
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %31, i32 0, i32 5, !dbg !7280
  store i32 4, i32* %state, align 8, !dbg !7281
  ret i32 0, !dbg !7282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_tune_done(%struct.cxd2841er_priv* %priv) #0 !dbg !7283 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !7284, metadata !DIExpression()), !dbg !7285
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7286
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !7287
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7288
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %1, i8 zeroext 1, i8 zeroext -2, i8 zeroext 1) #8, !dbg !7289
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7290
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext -61, i8 zeroext 0) #8, !dbg !7291
  ret i32 0, !dbg !7292
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cxd2841er_set_ts_clock_mode(%struct.cxd2841er_priv* %priv, i8 zeroext %system) #0 !dbg !7293 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %system.addr = alloca i8, align 1
  %serial_ts = alloca i8, align 1
  %ts_rate_ctrl_off = alloca i8, align 1
  %ts_in_off = alloca i8, align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !7296, metadata !DIExpression()), !dbg !7297
  store i8 %system, i8* %system.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %system.addr, metadata !7298, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.declare(metadata i8* %serial_ts, metadata !7300, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.declare(metadata i8* %ts_rate_ctrl_off, metadata !7302, metadata !DIExpression()), !dbg !7303
  call void @llvm.dbg.declare(metadata i8* %ts_in_off, metadata !7304, metadata !DIExpression()), !dbg !7305
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7306
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !7307
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7308
  %call1 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %1, i8 zeroext 1, i8 zeroext -60, i8* %serial_ts) #8, !dbg !7309
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7310
  %call2 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext -45, i8* %ts_rate_ctrl_off) #8, !dbg !7311
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7312
  %call3 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext -34, i8* %ts_in_off) #8, !dbg !7313
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7314
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7315
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %5, i32 0, i32 9, !dbg !7316
  %6 = load i32, i32* %flags, align 8, !dbg !7316
  %and = and i32 %6, 4, !dbg !7317
  %tobool = icmp ne i32 %and, 0, !dbg !7318
  %7 = zext i1 %tobool to i64, !dbg !7318
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !7318
  %conv = trunc i32 %cond to i8, !dbg !7319
  %call4 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext -60, i8 zeroext %conv, i8 zeroext 3) #8, !dbg !7320
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7321
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7322
  %flags5 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %9, i32 0, i32 9, !dbg !7323
  %10 = load i32, i32* %flags5, align 8, !dbg !7323
  %and6 = and i32 %10, 4, !dbg !7324
  %tobool7 = icmp ne i32 %and6, 0, !dbg !7325
  %11 = zext i1 %tobool7 to i64, !dbg !7325
  %cond8 = select i1 %tobool7, i32 1, i32 0, !dbg !7325
  %conv9 = trunc i32 %cond8 to i8, !dbg !7326
  %call10 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext -47, i8 zeroext %conv9, i8 zeroext 3) #8, !dbg !7327
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7328
  %call11 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext -39, i8 zeroext 8) #8, !dbg !7329
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7330
  %call12 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext 50, i8 zeroext 0, i8 zeroext 1) #8, !dbg !7331
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7332
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7333
  %flags13 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %15, i32 0, i32 9, !dbg !7334
  %16 = load i32, i32* %flags13, align 8, !dbg !7334
  %and14 = and i32 %16, 4, !dbg !7335
  %tobool15 = icmp ne i32 %and14, 0, !dbg !7336
  %17 = zext i1 %tobool15 to i64, !dbg !7336
  %cond16 = select i1 %tobool15, i32 1, i32 0, !dbg !7336
  %conv17 = trunc i32 %cond16 to i8, !dbg !7337
  %call18 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 51, i8 zeroext %conv17, i8 zeroext 3) #8, !dbg !7338
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7339
  %call19 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %18, i8 zeroext 1, i8 zeroext 50, i8 zeroext 1, i8 zeroext 1) #8, !dbg !7340
  %19 = load i8, i8* %system.addr, align 1, !dbg !7341
  %conv20 = zext i8 %19 to i32, !dbg !7341
  %cmp = icmp eq i32 %conv20, 3, !dbg !7343
  br i1 %cmp, label %if.then, label %if.else, !dbg !7344

if.then:                                          ; preds = %entry
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7345
  %call22 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %20, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !7347
  %21 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7348
  %call23 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %21, i8 zeroext 1, i8 zeroext 102, i8 zeroext 1, i8 zeroext 1) #8, !dbg !7349
  br label %if.end30, !dbg !7350

if.else:                                          ; preds = %entry
  %22 = load i8, i8* %system.addr, align 1, !dbg !7351
  %conv24 = zext i8 %22 to i32, !dbg !7351
  %cmp25 = icmp eq i32 %conv24, 1, !dbg !7353
  br i1 %cmp25, label %if.then27, label %if.end, !dbg !7354

if.then27:                                        ; preds = %if.else
  %23 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7355
  %call28 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %23, i8 zeroext 1, i8 zeroext 0, i8 zeroext 64) #8, !dbg !7357
  %24 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7358
  %call29 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %24, i8 zeroext 1, i8 zeroext 102, i8 zeroext 1, i8 zeroext 1) #8, !dbg !7359
  br label %if.end, !dbg !7360

if.end:                                           ; preds = %if.then27, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end, %if.then
  ret void, !dbg !7361
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_tc_to_active_t_band(%struct.cxd2841er_priv* %priv, i32 %bandwidth) #0 !dbg !4263 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bandwidth.addr = alloca i32, align 4
  %data = alloca [16 x i8], align 16
  %iffreq = alloca i32, align 4
  %ifhz = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !7362, metadata !DIExpression()), !dbg !7363
  store i32 %bandwidth, i32* %bandwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bandwidth.addr, metadata !7364, metadata !DIExpression()), !dbg !7365
  call void @llvm.dbg.declare(metadata [16 x i8]* %data, metadata !7366, metadata !DIExpression()), !dbg !7367
  call void @llvm.dbg.declare(metadata i32* %iffreq, metadata !7368, metadata !DIExpression()), !dbg !7369
  call void @llvm.dbg.declare(metadata i32* %ifhz, metadata !7370, metadata !DIExpression()), !dbg !7371
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7372
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 19) #8, !dbg !7373
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7374
  store i8 1, i8* %arrayidx, align 16, !dbg !7375
  %arrayidx1 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7376
  store i8 20, i8* %arrayidx1, align 1, !dbg !7377
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7378
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7379
  %call2 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %1, i8 zeroext 1, i8 zeroext -100, i8* %arraydecay, i32 2) #8, !dbg !7380
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7381
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !7382
  %3 = load i32, i32* %bandwidth.addr, align 4, !dbg !7383
  switch i32 %3, label %sw.epilog [
    i32 8000000, label %sw.bb
    i32 7000000, label %sw.bb42
    i32 6000000, label %sw.bb92
    i32 5000000, label %sw.bb142
  ], !dbg !7384

sw.bb:                                            ; preds = %entry
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7385
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7387
  %xtal = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %5, i32 0, i32 7, !dbg !7388
  %6 = load i32, i32* %xtal, align 8, !dbg !7388
  %idxprom = zext i32 %6 to i64, !dbg !7389
  %arrayidx4 = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_t_band.nominalRate8bw, i64 0, i64 %idxprom, !dbg !7389
  %arraydecay5 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx4, i64 0, i64 0, !dbg !7389
  %call6 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay5, i32 5) #8, !dbg !7390
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7391
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %7, i32 0, i32 9, !dbg !7393
  %8 = load i32, i32* %flags, align 8, !dbg !7393
  %and = and i32 %8, 8, !dbg !7394
  %tobool = icmp ne i32 %and, 0, !dbg !7394
  br i1 %tobool, label %if.then, label %if.end, !dbg !7395

if.then:                                          ; preds = %sw.bb
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7396
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7397
  %xtal7 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %10, i32 0, i32 7, !dbg !7398
  %11 = load i32, i32* %xtal7, align 8, !dbg !7398
  %idxprom8 = zext i32 %11 to i64, !dbg !7399
  %arrayidx9 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_t_band.itbCoef8bw, i64 0, i64 %idxprom8, !dbg !7399
  %arraydecay10 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx9, i64 0, i64 0, !dbg !7399
  %call11 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %9, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay10, i32 14) #8, !dbg !7400
  br label %if.end, !dbg !7400

if.end:                                           ; preds = %if.then, %sw.bb
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7401
  %call12 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %12, i32 4800000) #8, !dbg !7402
  store i32 %call12, i32* %ifhz, align 4, !dbg !7403
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7404
  %xtal13 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %13, i32 0, i32 7, !dbg !7405
  %14 = load i32, i32* %xtal13, align 8, !dbg !7405
  %15 = load i32, i32* %ifhz, align 4, !dbg !7406
  %call14 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %14, i32 %15) #8, !dbg !7407
  store i32 %call14, i32* %iffreq, align 4, !dbg !7408
  %16 = load i32, i32* %iffreq, align 4, !dbg !7409
  %shr = lshr i32 %16, 16, !dbg !7410
  %and15 = and i32 %shr, 255, !dbg !7411
  %conv = trunc i32 %and15 to i8, !dbg !7412
  %arrayidx16 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7413
  store i8 %conv, i8* %arrayidx16, align 16, !dbg !7414
  %17 = load i32, i32* %iffreq, align 4, !dbg !7415
  %shr17 = lshr i32 %17, 8, !dbg !7416
  %and18 = and i32 %shr17, 255, !dbg !7417
  %conv19 = trunc i32 %and18 to i8, !dbg !7418
  %arrayidx20 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7419
  store i8 %conv19, i8* %arrayidx20, align 1, !dbg !7420
  %18 = load i32, i32* %iffreq, align 4, !dbg !7421
  %and21 = and i32 %18, 255, !dbg !7422
  %conv22 = trunc i32 %and21 to i8, !dbg !7423
  %arrayidx23 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7424
  store i8 %conv22, i8* %arrayidx23, align 2, !dbg !7425
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7426
  %arraydecay24 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7427
  %call25 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %19, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay24, i32 3) #8, !dbg !7428
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7429
  %call26 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %20, i8 zeroext 1, i8 zeroext -41, i8 zeroext 0, i8 zeroext 7) #8, !dbg !7430
  %21 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7431
  %xtal27 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %21, i32 0, i32 7, !dbg !7433
  %22 = load i32, i32* %xtal27, align 8, !dbg !7433
  %cmp = icmp eq i32 %22, 1, !dbg !7434
  br i1 %cmp, label %if.then29, label %if.else, !dbg !7435

if.then29:                                        ; preds = %if.end
  %arrayidx30 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7436
  store i8 21, i8* %arrayidx30, align 16, !dbg !7438
  %arrayidx31 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7439
  store i8 40, i8* %arrayidx31, align 1, !dbg !7440
  br label %if.end34, !dbg !7441

if.else:                                          ; preds = %if.end
  %arrayidx32 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7442
  store i8 1, i8* %arrayidx32, align 16, !dbg !7444
  %arrayidx33 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7445
  store i8 -32, i8* %arrayidx33, align 1, !dbg !7446
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then29
  %23 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7447
  %arraydecay35 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7448
  %call36 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %23, i8 zeroext 1, i8 zeroext -39, i8* %arraydecay35, i32 2) #8, !dbg !7449
  %arrayidx37 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7450
  store i8 1, i8* %arrayidx37, align 16, !dbg !7451
  %arrayidx38 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7452
  store i8 2, i8* %arrayidx38, align 1, !dbg !7453
  %24 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7454
  %call39 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %24, i8 zeroext 1, i8 zeroext 0, i8 zeroext 23) #8, !dbg !7455
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7456
  %arraydecay40 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7457
  %call41 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %25, i8 zeroext 1, i8 zeroext 56, i8* %arraydecay40, i32 2) #8, !dbg !7458
  br label %sw.epilog, !dbg !7459

sw.bb42:                                          ; preds = %entry
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7460
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7461
  %xtal43 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %27, i32 0, i32 7, !dbg !7462
  %28 = load i32, i32* %xtal43, align 8, !dbg !7462
  %idxprom44 = zext i32 %28 to i64, !dbg !7463
  %arrayidx45 = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_t_band.nominalRate7bw, i64 0, i64 %idxprom44, !dbg !7463
  %arraydecay46 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx45, i64 0, i64 0, !dbg !7463
  %call47 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %26, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay46, i32 5) #8, !dbg !7464
  %29 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7465
  %flags48 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %29, i32 0, i32 9, !dbg !7467
  %30 = load i32, i32* %flags48, align 8, !dbg !7467
  %and49 = and i32 %30, 8, !dbg !7468
  %tobool50 = icmp ne i32 %and49, 0, !dbg !7468
  br i1 %tobool50, label %if.then51, label %if.end57, !dbg !7469

if.then51:                                        ; preds = %sw.bb42
  %31 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7470
  %32 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7471
  %xtal52 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %32, i32 0, i32 7, !dbg !7472
  %33 = load i32, i32* %xtal52, align 8, !dbg !7472
  %idxprom53 = zext i32 %33 to i64, !dbg !7473
  %arrayidx54 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_t_band.itbCoef7bw, i64 0, i64 %idxprom53, !dbg !7473
  %arraydecay55 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx54, i64 0, i64 0, !dbg !7473
  %call56 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %31, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay55, i32 14) #8, !dbg !7474
  br label %if.end57, !dbg !7474

if.end57:                                         ; preds = %if.then51, %sw.bb42
  %34 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7475
  %call58 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %34, i32 4200000) #8, !dbg !7476
  store i32 %call58, i32* %ifhz, align 4, !dbg !7477
  %35 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7478
  %xtal59 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %35, i32 0, i32 7, !dbg !7479
  %36 = load i32, i32* %xtal59, align 8, !dbg !7479
  %37 = load i32, i32* %ifhz, align 4, !dbg !7480
  %call60 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %36, i32 %37) #8, !dbg !7481
  store i32 %call60, i32* %iffreq, align 4, !dbg !7482
  %38 = load i32, i32* %iffreq, align 4, !dbg !7483
  %shr61 = lshr i32 %38, 16, !dbg !7484
  %and62 = and i32 %shr61, 255, !dbg !7485
  %conv63 = trunc i32 %and62 to i8, !dbg !7486
  %arrayidx64 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7487
  store i8 %conv63, i8* %arrayidx64, align 16, !dbg !7488
  %39 = load i32, i32* %iffreq, align 4, !dbg !7489
  %shr65 = lshr i32 %39, 8, !dbg !7490
  %and66 = and i32 %shr65, 255, !dbg !7491
  %conv67 = trunc i32 %and66 to i8, !dbg !7492
  %arrayidx68 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7493
  store i8 %conv67, i8* %arrayidx68, align 1, !dbg !7494
  %40 = load i32, i32* %iffreq, align 4, !dbg !7495
  %and69 = and i32 %40, 255, !dbg !7496
  %conv70 = trunc i32 %and69 to i8, !dbg !7497
  %arrayidx71 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7498
  store i8 %conv70, i8* %arrayidx71, align 2, !dbg !7499
  %41 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7500
  %arraydecay72 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7501
  %call73 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %41, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay72, i32 3) #8, !dbg !7502
  %42 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7503
  %call74 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %42, i8 zeroext 1, i8 zeroext -41, i8 zeroext 2, i8 zeroext 7) #8, !dbg !7504
  %43 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7505
  %xtal75 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %43, i32 0, i32 7, !dbg !7507
  %44 = load i32, i32* %xtal75, align 8, !dbg !7507
  %cmp76 = icmp eq i32 %44, 1, !dbg !7508
  br i1 %cmp76, label %if.then78, label %if.else81, !dbg !7509

if.then78:                                        ; preds = %if.end57
  %arrayidx79 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7510
  store i8 31, i8* %arrayidx79, align 16, !dbg !7512
  %arrayidx80 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7513
  store i8 -8, i8* %arrayidx80, align 1, !dbg !7514
  br label %if.end84, !dbg !7515

if.else81:                                        ; preds = %if.end57
  %arrayidx82 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7516
  store i8 18, i8* %arrayidx82, align 16, !dbg !7518
  %arrayidx83 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7519
  store i8 -8, i8* %arrayidx83, align 1, !dbg !7520
  br label %if.end84

if.end84:                                         ; preds = %if.else81, %if.then78
  %45 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7521
  %arraydecay85 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7522
  %call86 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %45, i8 zeroext 1, i8 zeroext -39, i8* %arraydecay85, i32 2) #8, !dbg !7523
  %arrayidx87 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7524
  store i8 0, i8* %arrayidx87, align 16, !dbg !7525
  %arrayidx88 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7526
  store i8 3, i8* %arrayidx88, align 1, !dbg !7527
  %46 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7528
  %call89 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %46, i8 zeroext 1, i8 zeroext 0, i8 zeroext 23) #8, !dbg !7529
  %47 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7530
  %arraydecay90 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7531
  %call91 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %47, i8 zeroext 1, i8 zeroext 56, i8* %arraydecay90, i32 2) #8, !dbg !7532
  br label %sw.epilog, !dbg !7533

sw.bb92:                                          ; preds = %entry
  %48 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7534
  %49 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7535
  %xtal93 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %49, i32 0, i32 7, !dbg !7536
  %50 = load i32, i32* %xtal93, align 8, !dbg !7536
  %idxprom94 = zext i32 %50 to i64, !dbg !7537
  %arrayidx95 = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_t_band.nominalRate6bw, i64 0, i64 %idxprom94, !dbg !7537
  %arraydecay96 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx95, i64 0, i64 0, !dbg !7537
  %call97 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %48, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay96, i32 5) #8, !dbg !7538
  %51 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7539
  %flags98 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %51, i32 0, i32 9, !dbg !7541
  %52 = load i32, i32* %flags98, align 8, !dbg !7541
  %and99 = and i32 %52, 8, !dbg !7542
  %tobool100 = icmp ne i32 %and99, 0, !dbg !7542
  br i1 %tobool100, label %if.then101, label %if.end107, !dbg !7543

if.then101:                                       ; preds = %sw.bb92
  %53 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7544
  %54 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7545
  %xtal102 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %54, i32 0, i32 7, !dbg !7546
  %55 = load i32, i32* %xtal102, align 8, !dbg !7546
  %idxprom103 = zext i32 %55 to i64, !dbg !7547
  %arrayidx104 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_t_band.itbCoef6bw, i64 0, i64 %idxprom103, !dbg !7547
  %arraydecay105 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx104, i64 0, i64 0, !dbg !7547
  %call106 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %53, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay105, i32 14) #8, !dbg !7548
  br label %if.end107, !dbg !7548

if.end107:                                        ; preds = %if.then101, %sw.bb92
  %56 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7549
  %call108 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %56, i32 3600000) #8, !dbg !7550
  store i32 %call108, i32* %ifhz, align 4, !dbg !7551
  %57 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7552
  %xtal109 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %57, i32 0, i32 7, !dbg !7553
  %58 = load i32, i32* %xtal109, align 8, !dbg !7553
  %59 = load i32, i32* %ifhz, align 4, !dbg !7554
  %call110 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %58, i32 %59) #8, !dbg !7555
  store i32 %call110, i32* %iffreq, align 4, !dbg !7556
  %60 = load i32, i32* %iffreq, align 4, !dbg !7557
  %shr111 = lshr i32 %60, 16, !dbg !7558
  %and112 = and i32 %shr111, 255, !dbg !7559
  %conv113 = trunc i32 %and112 to i8, !dbg !7560
  %arrayidx114 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7561
  store i8 %conv113, i8* %arrayidx114, align 16, !dbg !7562
  %61 = load i32, i32* %iffreq, align 4, !dbg !7563
  %shr115 = lshr i32 %61, 8, !dbg !7564
  %and116 = and i32 %shr115, 255, !dbg !7565
  %conv117 = trunc i32 %and116 to i8, !dbg !7566
  %arrayidx118 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7567
  store i8 %conv117, i8* %arrayidx118, align 1, !dbg !7568
  %62 = load i32, i32* %iffreq, align 4, !dbg !7569
  %and119 = and i32 %62, 255, !dbg !7570
  %conv120 = trunc i32 %and119 to i8, !dbg !7571
  %arrayidx121 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7572
  store i8 %conv120, i8* %arrayidx121, align 2, !dbg !7573
  %63 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7574
  %arraydecay122 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7575
  %call123 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %63, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay122, i32 3) #8, !dbg !7576
  %64 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7577
  %call124 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %64, i8 zeroext 1, i8 zeroext -41, i8 zeroext 4, i8 zeroext 7) #8, !dbg !7578
  %65 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7579
  %xtal125 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %65, i32 0, i32 7, !dbg !7581
  %66 = load i32, i32* %xtal125, align 8, !dbg !7581
  %cmp126 = icmp eq i32 %66, 1, !dbg !7582
  br i1 %cmp126, label %if.then128, label %if.else131, !dbg !7583

if.then128:                                       ; preds = %if.end107
  %arrayidx129 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7584
  store i8 37, i8* %arrayidx129, align 16, !dbg !7586
  %arrayidx130 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7587
  store i8 76, i8* %arrayidx130, align 1, !dbg !7588
  br label %if.end134, !dbg !7589

if.else131:                                       ; preds = %if.end107
  %arrayidx132 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7590
  store i8 31, i8* %arrayidx132, align 16, !dbg !7592
  %arrayidx133 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7593
  store i8 -36, i8* %arrayidx133, align 1, !dbg !7594
  br label %if.end134

if.end134:                                        ; preds = %if.else131, %if.then128
  %67 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7595
  %arraydecay135 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7596
  %call136 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %67, i8 zeroext 1, i8 zeroext -39, i8* %arraydecay135, i32 2) #8, !dbg !7597
  %arrayidx137 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7598
  store i8 0, i8* %arrayidx137, align 16, !dbg !7599
  %arrayidx138 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7600
  store i8 3, i8* %arrayidx138, align 1, !dbg !7601
  %68 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7602
  %call139 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %68, i8 zeroext 1, i8 zeroext 0, i8 zeroext 23) #8, !dbg !7603
  %69 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7604
  %arraydecay140 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7605
  %call141 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %69, i8 zeroext 1, i8 zeroext 56, i8* %arraydecay140, i32 2) #8, !dbg !7606
  br label %sw.epilog, !dbg !7607

sw.bb142:                                         ; preds = %entry
  %70 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7608
  %71 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7609
  %xtal143 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %71, i32 0, i32 7, !dbg !7610
  %72 = load i32, i32* %xtal143, align 8, !dbg !7610
  %idxprom144 = zext i32 %72 to i64, !dbg !7611
  %arrayidx145 = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_t_band.nominalRate5bw, i64 0, i64 %idxprom144, !dbg !7611
  %arraydecay146 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx145, i64 0, i64 0, !dbg !7611
  %call147 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %70, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay146, i32 5) #8, !dbg !7612
  %73 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7613
  %flags148 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %73, i32 0, i32 9, !dbg !7615
  %74 = load i32, i32* %flags148, align 8, !dbg !7615
  %and149 = and i32 %74, 8, !dbg !7616
  %tobool150 = icmp ne i32 %and149, 0, !dbg !7616
  br i1 %tobool150, label %if.then151, label %if.end157, !dbg !7617

if.then151:                                       ; preds = %sw.bb142
  %75 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7618
  %76 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7619
  %xtal152 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %76, i32 0, i32 7, !dbg !7620
  %77 = load i32, i32* %xtal152, align 8, !dbg !7620
  %idxprom153 = zext i32 %77 to i64, !dbg !7621
  %arrayidx154 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_t_band.itbCoef5bw, i64 0, i64 %idxprom153, !dbg !7621
  %arraydecay155 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx154, i64 0, i64 0, !dbg !7621
  %call156 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %75, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay155, i32 14) #8, !dbg !7622
  br label %if.end157, !dbg !7622

if.end157:                                        ; preds = %if.then151, %sw.bb142
  %78 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7623
  %call158 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %78, i32 3600000) #8, !dbg !7624
  store i32 %call158, i32* %ifhz, align 4, !dbg !7625
  %79 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7626
  %xtal159 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %79, i32 0, i32 7, !dbg !7627
  %80 = load i32, i32* %xtal159, align 8, !dbg !7627
  %81 = load i32, i32* %ifhz, align 4, !dbg !7628
  %call160 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %80, i32 %81) #8, !dbg !7629
  store i32 %call160, i32* %iffreq, align 4, !dbg !7630
  %82 = load i32, i32* %iffreq, align 4, !dbg !7631
  %shr161 = lshr i32 %82, 16, !dbg !7632
  %and162 = and i32 %shr161, 255, !dbg !7633
  %conv163 = trunc i32 %and162 to i8, !dbg !7634
  %arrayidx164 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7635
  store i8 %conv163, i8* %arrayidx164, align 16, !dbg !7636
  %83 = load i32, i32* %iffreq, align 4, !dbg !7637
  %shr165 = lshr i32 %83, 8, !dbg !7638
  %and166 = and i32 %shr165, 255, !dbg !7639
  %conv167 = trunc i32 %and166 to i8, !dbg !7640
  %arrayidx168 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7641
  store i8 %conv167, i8* %arrayidx168, align 1, !dbg !7642
  %84 = load i32, i32* %iffreq, align 4, !dbg !7643
  %and169 = and i32 %84, 255, !dbg !7644
  %conv170 = trunc i32 %and169 to i8, !dbg !7645
  %arrayidx171 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7646
  store i8 %conv170, i8* %arrayidx171, align 2, !dbg !7647
  %85 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7648
  %arraydecay172 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7649
  %call173 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %85, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay172, i32 3) #8, !dbg !7650
  %86 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7651
  %call174 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %86, i8 zeroext 1, i8 zeroext -41, i8 zeroext 6, i8 zeroext 7) #8, !dbg !7652
  %87 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7653
  %xtal175 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %87, i32 0, i32 7, !dbg !7655
  %88 = load i32, i32* %xtal175, align 8, !dbg !7655
  %cmp176 = icmp eq i32 %88, 1, !dbg !7656
  br i1 %cmp176, label %if.then178, label %if.else181, !dbg !7657

if.then178:                                       ; preds = %if.end157
  %arrayidx179 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7658
  store i8 44, i8* %arrayidx179, align 16, !dbg !7660
  %arrayidx180 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7661
  store i8 -62, i8* %arrayidx180, align 1, !dbg !7662
  br label %if.end184, !dbg !7663

if.else181:                                       ; preds = %if.end157
  %arrayidx182 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7664
  store i8 38, i8* %arrayidx182, align 16, !dbg !7666
  %arrayidx183 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7667
  store i8 60, i8* %arrayidx183, align 1, !dbg !7668
  br label %if.end184

if.end184:                                        ; preds = %if.else181, %if.then178
  %89 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7669
  %arraydecay185 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7670
  %call186 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %89, i8 zeroext 1, i8 zeroext -39, i8* %arraydecay185, i32 2) #8, !dbg !7671
  %arrayidx187 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7672
  store i8 0, i8* %arrayidx187, align 16, !dbg !7673
  %arrayidx188 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7674
  store i8 3, i8* %arrayidx188, align 1, !dbg !7675
  %90 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7676
  %call189 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %90, i8 zeroext 1, i8 zeroext 0, i8 zeroext 23) #8, !dbg !7677
  %91 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7678
  %arraydecay190 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7679
  %call191 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %91, i8 zeroext 1, i8 zeroext 56, i8* %arraydecay190, i32 2) #8, !dbg !7680
  br label %sw.epilog, !dbg !7681

sw.epilog:                                        ; preds = %entry, %if.end184, %if.end134, %if.end84, %if.end34
  ret i32 0, !dbg !7682
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %priv, i32 %def_hz) #0 !dbg !7683 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %def_hz.addr = alloca i32, align 4
  %hz = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !7684, metadata !DIExpression()), !dbg !7685
  store i32 %def_hz, i32* %def_hz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %def_hz.addr, metadata !7686, metadata !DIExpression()), !dbg !7687
  call void @llvm.dbg.declare(metadata i32* %hz, metadata !7688, metadata !DIExpression()), !dbg !7689
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7690
  %frontend = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 0, !dbg !7692
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend, i32 0, i32 1, !dbg !7693
  %tuner_ops = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops, i32 0, i32 30, !dbg !7694
  %get_if_frequency = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops, i32 0, i32 11, !dbg !7695
  %1 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %get_if_frequency, align 8, !dbg !7695
  %tobool = icmp ne i32 (%struct.dvb_frontend*, i32*)* %1, null, !dbg !7690
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !7696

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7697
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 9, !dbg !7698
  %3 = load i32, i32* %flags, align 8, !dbg !7698
  %and = and i32 %3, 2, !dbg !7699
  %tobool1 = icmp ne i32 %and, 0, !dbg !7699
  br i1 %tobool1, label %if.then, label %if.else, !dbg !7700

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7701
  %frontend2 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %4, i32 0, i32 0, !dbg !7702
  %ops3 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend2, i32 0, i32 1, !dbg !7703
  %tuner_ops4 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops3, i32 0, i32 30, !dbg !7704
  %get_if_frequency5 = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops4, i32 0, i32 11, !dbg !7705
  %5 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %get_if_frequency5, align 8, !dbg !7705
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7706
  %frontend6 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %6, i32 0, i32 0, !dbg !7707
  %call = call i32 %5(%struct.dvb_frontend* %frontend6, i32* %hz) #8, !dbg !7701
  br label %if.end, !dbg !7701

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load i32, i32* %def_hz.addr, align 4, !dbg !7708
  store i32 %7, i32* %hz, align 4, !dbg !7709
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %hz, align 4, !dbg !7710
  ret i32 %8, !dbg !7711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_calc_iffreq_xtal(i32 %xtal, i32 %ifhz) #0 !dbg !7712 {
entry:
  %xtal.addr = alloca i32, align 4
  %ifhz.addr = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp5 = alloca i32, align 4
  store i32 %xtal, i32* %xtal.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %xtal.addr, metadata !7715, metadata !DIExpression()), !dbg !7716
  store i32 %ifhz, i32* %ifhz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ifhz.addr, metadata !7717, metadata !DIExpression()), !dbg !7718
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !7719, metadata !DIExpression()), !dbg !7720
  %0 = load i32, i32* %ifhz.addr, align 4, !dbg !7721
  %conv = zext i32 %0 to i64, !dbg !7722
  %mul = mul i64 %conv, 16777216, !dbg !7723
  store i64 %mul, i64* %tmp, align 8, !dbg !7724
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !7725, metadata !DIExpression()), !dbg !7727
  %1 = load i32, i32* %xtal.addr, align 4, !dbg !7727
  %cmp = icmp eq i32 %1, 1, !dbg !7727
  %2 = zext i1 %cmp to i64, !dbg !7727
  %cond = select i1 %cmp, i32 48000000, i32 41000000, !dbg !7727
  store i32 %cond, i32* %__base, align 4, !dbg !7727
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !7728, metadata !DIExpression()), !dbg !7727
  %3 = load i64, i64* %tmp, align 8, !dbg !7727
  %4 = load i32, i32* %__base, align 4, !dbg !7727
  %conv2 = zext i32 %4 to i64, !dbg !7727
  %rem = urem i64 %3, %conv2, !dbg !7727
  %conv3 = trunc i64 %rem to i32, !dbg !7727
  store i32 %conv3, i32* %__rem, align 4, !dbg !7727
  %5 = load i64, i64* %tmp, align 8, !dbg !7727
  %6 = load i32, i32* %__base, align 4, !dbg !7727
  %conv4 = zext i32 %6 to i64, !dbg !7727
  %div = udiv i64 %5, %conv4, !dbg !7727
  store i64 %div, i64* %tmp, align 8, !dbg !7727
  %7 = load i32, i32* %__rem, align 4, !dbg !7727
  store i32 %7, i32* %tmp5, align 4, !dbg !7727
  %8 = load i32, i32* %tmp5, align 4, !dbg !7727
  %9 = load i64, i64* %tmp, align 8, !dbg !7729
  %conv6 = trunc i64 %9 to i32, !dbg !7730
  ret i32 %conv6, !dbg !7731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_dvbs2_set_symbol_rate(%struct.cxd2841er_priv* %priv, i32 %symbol_rate) #0 !dbg !7732 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %symbol_rate.addr = alloca i32, align 4
  %reg_value = alloca i32, align 4
  %data = alloca [3 x i8], align 1
  %__x = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !7733, metadata !DIExpression()), !dbg !7734
  store i32 %symbol_rate, i32* %symbol_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %symbol_rate.addr, metadata !7735, metadata !DIExpression()), !dbg !7736
  call void @llvm.dbg.declare(metadata i32* %reg_value, metadata !7737, metadata !DIExpression()), !dbg !7738
  store i32 0, i32* %reg_value, align 4, !dbg !7738
  call void @llvm.dbg.declare(metadata [3 x i8]* %data, metadata !7739, metadata !DIExpression()), !dbg !7740
  %0 = bitcast [3 x i8]* %data to i8*, !dbg !7740
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 3, i1 false), !dbg !7740
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !7741, metadata !DIExpression()), !dbg !7743
  %1 = load i32, i32* %symbol_rate.addr, align 4, !dbg !7743
  %mul = mul i32 %1, 16384, !dbg !7743
  store i32 %mul, i32* %__x, align 4, !dbg !7743
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !7744, metadata !DIExpression()), !dbg !7743
  store i32 1000, i32* %__d, align 4, !dbg !7743
  %2 = load i32, i32* %__x, align 4, !dbg !7743
  %3 = load i32, i32* %__d, align 4, !dbg !7743
  %div = sdiv i32 %3, 2, !dbg !7743
  %add = add i32 %2, %div, !dbg !7743
  %4 = load i32, i32* %__d, align 4, !dbg !7743
  %div1 = udiv i32 %add, %4, !dbg !7743
  store i32 %div1, i32* %tmp, align 4, !dbg !7743
  %5 = load i32, i32* %tmp, align 4, !dbg !7743
  store i32 %5, i32* %reg_value, align 4, !dbg !7745
  %6 = load i32, i32* %reg_value, align 4, !dbg !7746
  %cmp = icmp eq i32 %6, 0, !dbg !7748
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7749

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32, i32* %reg_value, align 4, !dbg !7750
  %cmp2 = icmp ugt i32 %7, 1048575, !dbg !7751
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7752

if.then:                                          ; preds = %lor.lhs.false, %entry
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7753
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %8, i32 0, i32 1, !dbg !7753
  %9 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !7753
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %9, i32 0, i32 9, !dbg !7753
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__func__.cxd2841er_dvbs2_set_symbol_rate, i64 0, i64 0)) #9, !dbg !7753
  store i32 -22, i32* %retval, align 4, !dbg !7755
  br label %return, !dbg !7755

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i32, i32* %reg_value, align 4, !dbg !7756
  %shr = lshr i32 %10, 16, !dbg !7757
  %and = and i32 %shr, 15, !dbg !7758
  %conv = trunc i32 %and to i8, !dbg !7759
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !7760
  store i8 %conv, i8* %arrayidx, align 1, !dbg !7761
  %11 = load i32, i32* %reg_value, align 4, !dbg !7762
  %shr3 = lshr i32 %11, 8, !dbg !7763
  %and4 = and i32 %shr3, 255, !dbg !7764
  %conv5 = trunc i32 %and4 to i8, !dbg !7765
  %arrayidx6 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !7766
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !7767
  %12 = load i32, i32* %reg_value, align 4, !dbg !7768
  %and7 = and i32 %12, 255, !dbg !7769
  %conv8 = trunc i32 %and7 to i8, !dbg !7770
  %arrayidx9 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 2, !dbg !7771
  store i8 %conv8, i8* %arrayidx9, align 1, !dbg !7772
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7773
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext 0, i8 zeroext -82) #8, !dbg !7774
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7775
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !7776
  %call10 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 32, i8* %arraydecay, i32 3) #8, !dbg !7777
  store i32 0, i32* %retval, align 4, !dbg !7778
  br label %return, !dbg !7778

return:                                           ; preds = %if.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !7779
  ret i32 %15, !dbg !7779
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_tc_to_active_t2_band(%struct.cxd2841er_priv* %priv, i32 %bandwidth) #0 !dbg !4431 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bandwidth.addr = alloca i32, align 4
  %iffreq = alloca i32, align 4
  %ifhz = alloca i32, align 4
  %data = alloca [16 x i8], align 16
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !7780, metadata !DIExpression()), !dbg !7781
  store i32 %bandwidth, i32* %bandwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bandwidth.addr, metadata !7782, metadata !DIExpression()), !dbg !7783
  call void @llvm.dbg.declare(metadata i32* %iffreq, metadata !7784, metadata !DIExpression()), !dbg !7785
  call void @llvm.dbg.declare(metadata i32* %ifhz, metadata !7786, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.declare(metadata [16 x i8]* %data, metadata !7788, metadata !DIExpression()), !dbg !7789
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7790
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 32) #8, !dbg !7791
  %1 = load i32, i32* %bandwidth.addr, align 4, !dbg !7792
  switch i32 %1, label %sw.default [
    i32 8000000, label %sw.bb
    i32 7000000, label %sw.bb25
    i32 6000000, label %sw.bb61
    i32 5000000, label %sw.bb97
    i32 1712000, label %sw.bb133
  ], !dbg !7793

sw.bb:                                            ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7794
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7796
  %xtal = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 7, !dbg !7797
  %4 = load i32, i32* %xtal, align 8, !dbg !7797
  %idxprom = zext i32 %4 to i64, !dbg !7798
  %arrayidx = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_t2_band.nominalRate8bw, i64 0, i64 %idxprom, !dbg !7798
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx, i64 0, i64 0, !dbg !7798
  %call1 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay, i32 5) #8, !dbg !7799
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7800
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 0, i8 zeroext 39) #8, !dbg !7801
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7802
  %call3 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 122, i8 zeroext 0, i8 zeroext 15) #8, !dbg !7803
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7804
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %7, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !7805
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7806
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %8, i32 0, i32 9, !dbg !7808
  %9 = load i32, i32* %flags, align 8, !dbg !7808
  %and = and i32 %9, 8, !dbg !7809
  %tobool = icmp ne i32 %and, 0, !dbg !7809
  br i1 %tobool, label %if.then, label %if.end, !dbg !7810

if.then:                                          ; preds = %sw.bb
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7811
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7812
  %xtal5 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %11, i32 0, i32 7, !dbg !7813
  %12 = load i32, i32* %xtal5, align 8, !dbg !7813
  %idxprom6 = zext i32 %12 to i64, !dbg !7814
  %arrayidx7 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_t2_band.itbCoef8bw, i64 0, i64 %idxprom6, !dbg !7814
  %arraydecay8 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx7, i64 0, i64 0, !dbg !7814
  %call9 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %10, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay8, i32 14) #8, !dbg !7815
  br label %if.end, !dbg !7815

if.end:                                           ; preds = %if.then, %sw.bb
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7816
  %call10 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %13, i32 4800000) #8, !dbg !7817
  store i32 %call10, i32* %ifhz, align 4, !dbg !7818
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7819
  %xtal11 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %14, i32 0, i32 7, !dbg !7820
  %15 = load i32, i32* %xtal11, align 8, !dbg !7820
  %16 = load i32, i32* %ifhz, align 4, !dbg !7821
  %call12 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %15, i32 %16) #8, !dbg !7822
  store i32 %call12, i32* %iffreq, align 4, !dbg !7823
  %17 = load i32, i32* %iffreq, align 4, !dbg !7824
  %shr = lshr i32 %17, 16, !dbg !7825
  %and13 = and i32 %shr, 255, !dbg !7826
  %conv = trunc i32 %and13 to i8, !dbg !7827
  %arrayidx14 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7828
  store i8 %conv, i8* %arrayidx14, align 16, !dbg !7829
  %18 = load i32, i32* %iffreq, align 4, !dbg !7830
  %shr15 = lshr i32 %18, 8, !dbg !7831
  %and16 = and i32 %shr15, 255, !dbg !7832
  %conv17 = trunc i32 %and16 to i8, !dbg !7833
  %arrayidx18 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7834
  store i8 %conv17, i8* %arrayidx18, align 1, !dbg !7835
  %19 = load i32, i32* %iffreq, align 4, !dbg !7836
  %and19 = and i32 %19, 255, !dbg !7837
  %conv20 = trunc i32 %and19 to i8, !dbg !7838
  %arrayidx21 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7839
  store i8 %conv20, i8* %arrayidx21, align 2, !dbg !7840
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7841
  %arraydecay22 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7842
  %call23 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %20, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay22, i32 3) #8, !dbg !7843
  %21 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7844
  %call24 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %21, i8 zeroext 1, i8 zeroext -41, i8 zeroext 0, i8 zeroext 7) #8, !dbg !7845
  br label %sw.epilog, !dbg !7846

sw.bb25:                                          ; preds = %entry
  %22 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7847
  %23 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7848
  %xtal26 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %23, i32 0, i32 7, !dbg !7849
  %24 = load i32, i32* %xtal26, align 8, !dbg !7849
  %idxprom27 = zext i32 %24 to i64, !dbg !7850
  %arrayidx28 = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_t2_band.nominalRate7bw, i64 0, i64 %idxprom27, !dbg !7850
  %arraydecay29 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx28, i64 0, i64 0, !dbg !7850
  %call30 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %22, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay29, i32 5) #8, !dbg !7851
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7852
  %call31 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %25, i8 zeroext 1, i8 zeroext 0, i8 zeroext 39) #8, !dbg !7853
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7854
  %call32 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %26, i8 zeroext 1, i8 zeroext 122, i8 zeroext 0, i8 zeroext 15) #8, !dbg !7855
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7856
  %call33 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %27, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !7857
  %28 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7858
  %flags34 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %28, i32 0, i32 9, !dbg !7860
  %29 = load i32, i32* %flags34, align 8, !dbg !7860
  %and35 = and i32 %29, 8, !dbg !7861
  %tobool36 = icmp ne i32 %and35, 0, !dbg !7861
  br i1 %tobool36, label %if.then37, label %if.end43, !dbg !7862

if.then37:                                        ; preds = %sw.bb25
  %30 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7863
  %31 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7864
  %xtal38 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %31, i32 0, i32 7, !dbg !7865
  %32 = load i32, i32* %xtal38, align 8, !dbg !7865
  %idxprom39 = zext i32 %32 to i64, !dbg !7866
  %arrayidx40 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_t2_band.itbCoef7bw, i64 0, i64 %idxprom39, !dbg !7866
  %arraydecay41 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx40, i64 0, i64 0, !dbg !7866
  %call42 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %30, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay41, i32 14) #8, !dbg !7867
  br label %if.end43, !dbg !7867

if.end43:                                         ; preds = %if.then37, %sw.bb25
  %33 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7868
  %call44 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %33, i32 4200000) #8, !dbg !7869
  store i32 %call44, i32* %ifhz, align 4, !dbg !7870
  %34 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7871
  %xtal45 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %34, i32 0, i32 7, !dbg !7872
  %35 = load i32, i32* %xtal45, align 8, !dbg !7872
  %36 = load i32, i32* %ifhz, align 4, !dbg !7873
  %call46 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %35, i32 %36) #8, !dbg !7874
  store i32 %call46, i32* %iffreq, align 4, !dbg !7875
  %37 = load i32, i32* %iffreq, align 4, !dbg !7876
  %shr47 = lshr i32 %37, 16, !dbg !7877
  %and48 = and i32 %shr47, 255, !dbg !7878
  %conv49 = trunc i32 %and48 to i8, !dbg !7879
  %arrayidx50 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7880
  store i8 %conv49, i8* %arrayidx50, align 16, !dbg !7881
  %38 = load i32, i32* %iffreq, align 4, !dbg !7882
  %shr51 = lshr i32 %38, 8, !dbg !7883
  %and52 = and i32 %shr51, 255, !dbg !7884
  %conv53 = trunc i32 %and52 to i8, !dbg !7885
  %arrayidx54 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7886
  store i8 %conv53, i8* %arrayidx54, align 1, !dbg !7887
  %39 = load i32, i32* %iffreq, align 4, !dbg !7888
  %and55 = and i32 %39, 255, !dbg !7889
  %conv56 = trunc i32 %and55 to i8, !dbg !7890
  %arrayidx57 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7891
  store i8 %conv56, i8* %arrayidx57, align 2, !dbg !7892
  %40 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7893
  %arraydecay58 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7894
  %call59 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %40, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay58, i32 3) #8, !dbg !7895
  %41 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7896
  %call60 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %41, i8 zeroext 1, i8 zeroext -41, i8 zeroext 2, i8 zeroext 7) #8, !dbg !7897
  br label %sw.epilog, !dbg !7898

sw.bb61:                                          ; preds = %entry
  %42 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7899
  %43 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7900
  %xtal62 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %43, i32 0, i32 7, !dbg !7901
  %44 = load i32, i32* %xtal62, align 8, !dbg !7901
  %idxprom63 = zext i32 %44 to i64, !dbg !7902
  %arrayidx64 = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_t2_band.nominalRate6bw, i64 0, i64 %idxprom63, !dbg !7902
  %arraydecay65 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx64, i64 0, i64 0, !dbg !7902
  %call66 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %42, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay65, i32 5) #8, !dbg !7903
  %45 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7904
  %call67 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %45, i8 zeroext 1, i8 zeroext 0, i8 zeroext 39) #8, !dbg !7905
  %46 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7906
  %call68 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %46, i8 zeroext 1, i8 zeroext 122, i8 zeroext 0, i8 zeroext 15) #8, !dbg !7907
  %47 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7908
  %call69 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %47, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !7909
  %48 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7910
  %flags70 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %48, i32 0, i32 9, !dbg !7912
  %49 = load i32, i32* %flags70, align 8, !dbg !7912
  %and71 = and i32 %49, 8, !dbg !7913
  %tobool72 = icmp ne i32 %and71, 0, !dbg !7913
  br i1 %tobool72, label %if.then73, label %if.end79, !dbg !7914

if.then73:                                        ; preds = %sw.bb61
  %50 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7915
  %51 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7916
  %xtal74 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %51, i32 0, i32 7, !dbg !7917
  %52 = load i32, i32* %xtal74, align 8, !dbg !7917
  %idxprom75 = zext i32 %52 to i64, !dbg !7918
  %arrayidx76 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_t2_band.itbCoef6bw, i64 0, i64 %idxprom75, !dbg !7918
  %arraydecay77 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx76, i64 0, i64 0, !dbg !7918
  %call78 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %50, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay77, i32 14) #8, !dbg !7919
  br label %if.end79, !dbg !7919

if.end79:                                         ; preds = %if.then73, %sw.bb61
  %53 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7920
  %call80 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %53, i32 3600000) #8, !dbg !7921
  store i32 %call80, i32* %ifhz, align 4, !dbg !7922
  %54 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7923
  %xtal81 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %54, i32 0, i32 7, !dbg !7924
  %55 = load i32, i32* %xtal81, align 8, !dbg !7924
  %56 = load i32, i32* %ifhz, align 4, !dbg !7925
  %call82 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %55, i32 %56) #8, !dbg !7926
  store i32 %call82, i32* %iffreq, align 4, !dbg !7927
  %57 = load i32, i32* %iffreq, align 4, !dbg !7928
  %shr83 = lshr i32 %57, 16, !dbg !7929
  %and84 = and i32 %shr83, 255, !dbg !7930
  %conv85 = trunc i32 %and84 to i8, !dbg !7931
  %arrayidx86 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7932
  store i8 %conv85, i8* %arrayidx86, align 16, !dbg !7933
  %58 = load i32, i32* %iffreq, align 4, !dbg !7934
  %shr87 = lshr i32 %58, 8, !dbg !7935
  %and88 = and i32 %shr87, 255, !dbg !7936
  %conv89 = trunc i32 %and88 to i8, !dbg !7937
  %arrayidx90 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7938
  store i8 %conv89, i8* %arrayidx90, align 1, !dbg !7939
  %59 = load i32, i32* %iffreq, align 4, !dbg !7940
  %and91 = and i32 %59, 255, !dbg !7941
  %conv92 = trunc i32 %and91 to i8, !dbg !7942
  %arrayidx93 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7943
  store i8 %conv92, i8* %arrayidx93, align 2, !dbg !7944
  %60 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7945
  %arraydecay94 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7946
  %call95 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %60, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay94, i32 3) #8, !dbg !7947
  %61 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7948
  %call96 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %61, i8 zeroext 1, i8 zeroext -41, i8 zeroext 4, i8 zeroext 7) #8, !dbg !7949
  br label %sw.epilog, !dbg !7950

sw.bb97:                                          ; preds = %entry
  %62 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7951
  %63 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7952
  %xtal98 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %63, i32 0, i32 7, !dbg !7953
  %64 = load i32, i32* %xtal98, align 8, !dbg !7953
  %idxprom99 = zext i32 %64 to i64, !dbg !7954
  %arrayidx100 = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_t2_band.nominalRate5bw, i64 0, i64 %idxprom99, !dbg !7954
  %arraydecay101 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx100, i64 0, i64 0, !dbg !7954
  %call102 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %62, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay101, i32 5) #8, !dbg !7955
  %65 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7956
  %call103 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %65, i8 zeroext 1, i8 zeroext 0, i8 zeroext 39) #8, !dbg !7957
  %66 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7958
  %call104 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %66, i8 zeroext 1, i8 zeroext 122, i8 zeroext 0, i8 zeroext 15) #8, !dbg !7959
  %67 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7960
  %call105 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %67, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !7961
  %68 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7962
  %flags106 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %68, i32 0, i32 9, !dbg !7964
  %69 = load i32, i32* %flags106, align 8, !dbg !7964
  %and107 = and i32 %69, 8, !dbg !7965
  %tobool108 = icmp ne i32 %and107, 0, !dbg !7965
  br i1 %tobool108, label %if.then109, label %if.end115, !dbg !7966

if.then109:                                       ; preds = %sw.bb97
  %70 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7967
  %71 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7968
  %xtal110 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %71, i32 0, i32 7, !dbg !7969
  %72 = load i32, i32* %xtal110, align 8, !dbg !7969
  %idxprom111 = zext i32 %72 to i64, !dbg !7970
  %arrayidx112 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_t2_band.itbCoef5bw, i64 0, i64 %idxprom111, !dbg !7970
  %arraydecay113 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx112, i64 0, i64 0, !dbg !7970
  %call114 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %70, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay113, i32 14) #8, !dbg !7971
  br label %if.end115, !dbg !7971

if.end115:                                        ; preds = %if.then109, %sw.bb97
  %73 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7972
  %call116 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %73, i32 3600000) #8, !dbg !7973
  store i32 %call116, i32* %ifhz, align 4, !dbg !7974
  %74 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7975
  %xtal117 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %74, i32 0, i32 7, !dbg !7976
  %75 = load i32, i32* %xtal117, align 8, !dbg !7976
  %76 = load i32, i32* %ifhz, align 4, !dbg !7977
  %call118 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %75, i32 %76) #8, !dbg !7978
  store i32 %call118, i32* %iffreq, align 4, !dbg !7979
  %77 = load i32, i32* %iffreq, align 4, !dbg !7980
  %shr119 = lshr i32 %77, 16, !dbg !7981
  %and120 = and i32 %shr119, 255, !dbg !7982
  %conv121 = trunc i32 %and120 to i8, !dbg !7983
  %arrayidx122 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7984
  store i8 %conv121, i8* %arrayidx122, align 16, !dbg !7985
  %78 = load i32, i32* %iffreq, align 4, !dbg !7986
  %shr123 = lshr i32 %78, 8, !dbg !7987
  %and124 = and i32 %shr123, 255, !dbg !7988
  %conv125 = trunc i32 %and124 to i8, !dbg !7989
  %arrayidx126 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !7990
  store i8 %conv125, i8* %arrayidx126, align 1, !dbg !7991
  %79 = load i32, i32* %iffreq, align 4, !dbg !7992
  %and127 = and i32 %79, 255, !dbg !7993
  %conv128 = trunc i32 %and127 to i8, !dbg !7994
  %arrayidx129 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !7995
  store i8 %conv128, i8* %arrayidx129, align 2, !dbg !7996
  %80 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !7997
  %arraydecay130 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !7998
  %call131 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %80, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay130, i32 3) #8, !dbg !7999
  %81 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8000
  %call132 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %81, i8 zeroext 1, i8 zeroext -41, i8 zeroext 6, i8 zeroext 7) #8, !dbg !8001
  br label %sw.epilog, !dbg !8002

sw.bb133:                                         ; preds = %entry
  %82 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8003
  %83 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8004
  %xtal134 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %83, i32 0, i32 7, !dbg !8005
  %84 = load i32, i32* %xtal134, align 8, !dbg !8005
  %idxprom135 = zext i32 %84 to i64, !dbg !8006
  %arrayidx136 = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_t2_band.nominalRate17bw, i64 0, i64 %idxprom135, !dbg !8006
  %arraydecay137 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx136, i64 0, i64 0, !dbg !8006
  %call138 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %82, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay137, i32 5) #8, !dbg !8007
  %85 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8008
  %call139 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %85, i8 zeroext 1, i8 zeroext 0, i8 zeroext 39) #8, !dbg !8009
  %86 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8010
  %call140 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %86, i8 zeroext 1, i8 zeroext 122, i8 zeroext 3, i8 zeroext 15) #8, !dbg !8011
  %87 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8012
  %call141 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %87, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !8013
  %88 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8014
  %flags142 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %88, i32 0, i32 9, !dbg !8016
  %89 = load i32, i32* %flags142, align 8, !dbg !8016
  %and143 = and i32 %89, 8, !dbg !8017
  %tobool144 = icmp ne i32 %and143, 0, !dbg !8017
  br i1 %tobool144, label %if.then145, label %if.end151, !dbg !8018

if.then145:                                       ; preds = %sw.bb133
  %90 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8019
  %91 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8020
  %xtal146 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %91, i32 0, i32 7, !dbg !8021
  %92 = load i32, i32* %xtal146, align 8, !dbg !8021
  %idxprom147 = zext i32 %92 to i64, !dbg !8022
  %arrayidx148 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_t2_band.itbCoef17bw, i64 0, i64 %idxprom147, !dbg !8022
  %arraydecay149 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx148, i64 0, i64 0, !dbg !8022
  %call150 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %90, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay149, i32 14) #8, !dbg !8023
  br label %if.end151, !dbg !8023

if.end151:                                        ; preds = %if.then145, %sw.bb133
  %93 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8024
  %call152 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %93, i32 3500000) #8, !dbg !8025
  store i32 %call152, i32* %ifhz, align 4, !dbg !8026
  %94 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8027
  %xtal153 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %94, i32 0, i32 7, !dbg !8028
  %95 = load i32, i32* %xtal153, align 8, !dbg !8028
  %96 = load i32, i32* %ifhz, align 4, !dbg !8029
  %call154 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %95, i32 %96) #8, !dbg !8030
  store i32 %call154, i32* %iffreq, align 4, !dbg !8031
  %97 = load i32, i32* %iffreq, align 4, !dbg !8032
  %shr155 = lshr i32 %97, 16, !dbg !8033
  %and156 = and i32 %shr155, 255, !dbg !8034
  %conv157 = trunc i32 %and156 to i8, !dbg !8035
  %arrayidx158 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !8036
  store i8 %conv157, i8* %arrayidx158, align 16, !dbg !8037
  %98 = load i32, i32* %iffreq, align 4, !dbg !8038
  %shr159 = lshr i32 %98, 8, !dbg !8039
  %and160 = and i32 %shr159, 255, !dbg !8040
  %conv161 = trunc i32 %and160 to i8, !dbg !8041
  %arrayidx162 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 1, !dbg !8042
  store i8 %conv161, i8* %arrayidx162, align 1, !dbg !8043
  %99 = load i32, i32* %iffreq, align 4, !dbg !8044
  %and163 = and i32 %99, 255, !dbg !8045
  %conv164 = trunc i32 %and163 to i8, !dbg !8046
  %arrayidx165 = getelementptr [16 x i8], [16 x i8]* %data, i64 0, i64 2, !dbg !8047
  store i8 %conv164, i8* %arrayidx165, align 2, !dbg !8048
  %100 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8049
  %arraydecay166 = getelementptr inbounds [16 x i8], [16 x i8]* %data, i64 0, i64 0, !dbg !8050
  %call167 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %100, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay166, i32 3) #8, !dbg !8051
  %101 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8052
  %call168 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %101, i8 zeroext 1, i8 zeroext -41, i8 zeroext 3, i8 zeroext 7) #8, !dbg !8053
  br label %sw.epilog, !dbg !8054

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8055
  br label %return, !dbg !8055

sw.epilog:                                        ; preds = %if.end151, %if.end115, %if.end79, %if.end43, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8056
  br label %return, !dbg !8056

return:                                           ; preds = %sw.epilog, %sw.default
  %102 = load i32, i32* %retval, align 4, !dbg !8057
  ret i32 %102, !dbg !8057
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_tc_to_active_c_band(%struct.cxd2841er_priv* %priv, i32 %bandwidth) #0 !dbg !8058 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bandwidth.addr = alloca i32, align 4
  %bw7_8mhz_b10_a6 = alloca [14 x i8], align 1
  %bw6mhz_b10_a6 = alloca [14 x i8], align 1
  %b10_b6 = alloca [3 x i8], align 1
  %iffreq = alloca i32, align 4
  %ifhz = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !8059, metadata !DIExpression()), !dbg !8060
  store i32 %bandwidth, i32* %bandwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bandwidth.addr, metadata !8061, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.declare(metadata [14 x i8]* %bw7_8mhz_b10_a6, metadata !8063, metadata !DIExpression()), !dbg !8066
  %0 = bitcast [14 x i8]* %bw7_8mhz_b10_a6 to i8*, !dbg !8066
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @__const.cxd2841er_sleep_tc_to_active_c_band.bw7_8mhz_b10_a6, i32 0, i32 0), i64 14, i1 false), !dbg !8066
  call void @llvm.dbg.declare(metadata [14 x i8]* %bw6mhz_b10_a6, metadata !8067, metadata !DIExpression()), !dbg !8068
  %1 = bitcast [14 x i8]* %bw6mhz_b10_a6 to i8*, !dbg !8068
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @__const.cxd2841er_sleep_tc_to_active_c_band.bw6mhz_b10_a6, i32 0, i32 0), i64 14, i1 false), !dbg !8068
  call void @llvm.dbg.declare(metadata [3 x i8]* %b10_b6, metadata !8069, metadata !DIExpression()), !dbg !8070
  call void @llvm.dbg.declare(metadata i32* %iffreq, metadata !8071, metadata !DIExpression()), !dbg !8072
  call void @llvm.dbg.declare(metadata i32* %ifhz, metadata !8073, metadata !DIExpression()), !dbg !8074
  %2 = load i32, i32* %bandwidth.addr, align 4, !dbg !8075
  %cmp = icmp ne i32 %2, 6000000, !dbg !8077
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8078

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %bandwidth.addr, align 4, !dbg !8079
  %cmp1 = icmp ne i32 %3, 7000000, !dbg !8080
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !8081

land.lhs.true2:                                   ; preds = %land.lhs.true
  %4 = load i32, i32* %bandwidth.addr, align 4, !dbg !8082
  %cmp3 = icmp ne i32 %4, 8000000, !dbg !8083
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8084

if.then:                                          ; preds = %land.lhs.true2
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8085
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %5, i32 0, i32 1, !dbg !8085
  %6 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !8085
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %6, i32 0, i32 9, !dbg !8085
  %7 = load i32, i32* %bandwidth.addr, align 4, !dbg !8085
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__func__.cxd2841er_sleep_tc_to_active_c_band, i64 0, i64 0), i32 %7) #9, !dbg !8085
  store i32 8000000, i32* %bandwidth.addr, align 4, !dbg !8087
  br label %if.end, !dbg !8088

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8089
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !8090
  %9 = load i32, i32* %bandwidth.addr, align 4, !dbg !8091
  switch i32 %9, label %sw.default [
    i32 8000000, label %sw.bb
    i32 7000000, label %sw.bb
    i32 6000000, label %sw.bb9
  ], !dbg !8092

sw.bb:                                            ; preds = %if.end, %if.end
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8093
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %10, i32 0, i32 9, !dbg !8096
  %11 = load i32, i32* %flags, align 8, !dbg !8096
  %and = and i32 %11, 8, !dbg !8097
  %tobool = icmp ne i32 %and, 0, !dbg !8097
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !8098

if.then4:                                         ; preds = %sw.bb
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8099
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %bw7_8mhz_b10_a6, i64 0, i64 0, !dbg !8100
  %call5 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay, i32 14) #8, !dbg !8101
  br label %if.end6, !dbg !8101

if.end6:                                          ; preds = %if.then4, %sw.bb
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8102
  %call7 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %13, i32 4900000) #8, !dbg !8103
  store i32 %call7, i32* %ifhz, align 4, !dbg !8104
  %14 = load i32, i32* %ifhz, align 4, !dbg !8105
  %call8 = call i32 @cxd2841er_calc_iffreq(i32 %14) #8, !dbg !8106
  store i32 %call8, i32* %iffreq, align 4, !dbg !8107
  br label %sw.epilog, !dbg !8108

sw.bb9:                                           ; preds = %if.end
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8109
  %flags10 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %15, i32 0, i32 9, !dbg !8111
  %16 = load i32, i32* %flags10, align 8, !dbg !8111
  %and11 = and i32 %16, 8, !dbg !8112
  %tobool12 = icmp ne i32 %and11, 0, !dbg !8112
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !8113

if.then13:                                        ; preds = %sw.bb9
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8114
  %arraydecay14 = getelementptr inbounds [14 x i8], [14 x i8]* %bw6mhz_b10_a6, i64 0, i64 0, !dbg !8115
  %call15 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay14, i32 14) #8, !dbg !8116
  br label %if.end16, !dbg !8116

if.end16:                                         ; preds = %if.then13, %sw.bb9
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8117
  %call17 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %18, i32 3700000) #8, !dbg !8118
  store i32 %call17, i32* %ifhz, align 4, !dbg !8119
  %19 = load i32, i32* %ifhz, align 4, !dbg !8120
  %call18 = call i32 @cxd2841er_calc_iffreq(i32 %19) #8, !dbg !8121
  store i32 %call18, i32* %iffreq, align 4, !dbg !8122
  br label %sw.epilog, !dbg !8123

sw.default:                                       ; preds = %if.end
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8124
  %i2c19 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %20, i32 0, i32 1, !dbg !8124
  %21 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c19, align 8, !dbg !8124
  %dev20 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %21, i32 0, i32 9, !dbg !8124
  %22 = load i32, i32* %bandwidth.addr, align 4, !dbg !8124
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev20, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__func__.cxd2841er_sleep_tc_to_active_c_band, i64 0, i64 0), i32 %22) #9, !dbg !8124
  store i32 -22, i32* %retval, align 4, !dbg !8125
  br label %return, !dbg !8125

sw.epilog:                                        ; preds = %if.end16, %if.end6
  %23 = load i32, i32* %iffreq, align 4, !dbg !8126
  %shr = lshr i32 %23, 16, !dbg !8127
  %and21 = and i32 %shr, 255, !dbg !8128
  %conv = trunc i32 %and21 to i8, !dbg !8129
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %b10_b6, i64 0, i64 0, !dbg !8130
  store i8 %conv, i8* %arrayidx, align 1, !dbg !8131
  %24 = load i32, i32* %iffreq, align 4, !dbg !8132
  %shr22 = lshr i32 %24, 8, !dbg !8133
  %and23 = and i32 %shr22, 255, !dbg !8134
  %conv24 = trunc i32 %and23 to i8, !dbg !8135
  %arrayidx25 = getelementptr [3 x i8], [3 x i8]* %b10_b6, i64 0, i64 1, !dbg !8136
  store i8 %conv24, i8* %arrayidx25, align 1, !dbg !8137
  %25 = load i32, i32* %iffreq, align 4, !dbg !8138
  %and26 = and i32 %25, 255, !dbg !8139
  %conv27 = trunc i32 %and26 to i8, !dbg !8140
  %arrayidx28 = getelementptr [3 x i8], [3 x i8]* %b10_b6, i64 0, i64 2, !dbg !8141
  store i8 %conv27, i8* %arrayidx28, align 1, !dbg !8142
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8143
  %arraydecay29 = getelementptr inbounds [3 x i8], [3 x i8]* %b10_b6, i64 0, i64 0, !dbg !8144
  %call30 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %26, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay29, i32 3) #8, !dbg !8145
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8146
  %call31 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %27, i8 zeroext 1, i8 zeroext 0, i8 zeroext 17) #8, !dbg !8147
  %28 = load i32, i32* %bandwidth.addr, align 4, !dbg !8148
  switch i32 %28, label %sw.epilog36 [
    i32 8000000, label %sw.bb32
    i32 7000000, label %sw.bb32
    i32 6000000, label %sw.bb34
  ], !dbg !8149

sw.bb32:                                          ; preds = %sw.epilog, %sw.epilog
  %29 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8150
  %call33 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %29, i8 zeroext 1, i8 zeroext -93, i8 zeroext 0, i8 zeroext 31) #8, !dbg !8152
  br label %sw.epilog36, !dbg !8153

sw.bb34:                                          ; preds = %sw.epilog
  %30 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8154
  %call35 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %30, i8 zeroext 1, i8 zeroext -93, i8 zeroext 20, i8 zeroext 31) #8, !dbg !8155
  br label %sw.epilog36, !dbg !8156

sw.epilog36:                                      ; preds = %sw.epilog, %sw.bb34, %sw.bb32
  %31 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8157
  %call37 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %31, i8 zeroext 1, i8 zeroext 0, i8 zeroext 64) #8, !dbg !8158
  %32 = load i32, i32* %bandwidth.addr, align 4, !dbg !8159
  switch i32 %32, label %sw.epilog47 [
    i32 8000000, label %sw.bb38
    i32 7000000, label %sw.bb41
    i32 6000000, label %sw.bb44
  ], !dbg !8160

sw.bb38:                                          ; preds = %sw.epilog36
  %33 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8161
  %call39 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %33, i8 zeroext 1, i8 zeroext 38, i8 zeroext 11, i8 zeroext 15) #8, !dbg !8163
  %34 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8164
  %call40 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %34, i8 zeroext 1, i8 zeroext 39, i8 zeroext 62) #8, !dbg !8165
  br label %sw.epilog47, !dbg !8166

sw.bb41:                                          ; preds = %sw.epilog36
  %35 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8167
  %call42 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %35, i8 zeroext 1, i8 zeroext 38, i8 zeroext 9, i8 zeroext 15) #8, !dbg !8168
  %36 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8169
  %call43 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %36, i8 zeroext 1, i8 zeroext 39, i8 zeroext -42) #8, !dbg !8170
  br label %sw.epilog47, !dbg !8171

sw.bb44:                                          ; preds = %sw.epilog36
  %37 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8172
  %call45 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %37, i8 zeroext 1, i8 zeroext 38, i8 zeroext 8, i8 zeroext 15) #8, !dbg !8173
  %38 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8174
  %call46 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %38, i8 zeroext 1, i8 zeroext 39, i8 zeroext 110) #8, !dbg !8175
  br label %sw.epilog47, !dbg !8176

sw.epilog47:                                      ; preds = %sw.epilog36, %sw.bb44, %sw.bb41, %sw.bb38
  store i32 0, i32* %retval, align 4, !dbg !8177
  br label %return, !dbg !8177

return:                                           ; preds = %sw.epilog47, %sw.default
  %39 = load i32, i32* %retval, align 4, !dbg !8178
  ret i32 %39, !dbg !8178
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_calc_iffreq(i32 %ifhz) #0 !dbg !8179 {
entry:
  %ifhz.addr = alloca i32, align 4
  store i32 %ifhz, i32* %ifhz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ifhz.addr, metadata !8182, metadata !DIExpression()), !dbg !8183
  %0 = load i32, i32* %ifhz.addr, align 4, !dbg !8184
  %call = call i32 @cxd2841er_calc_iffreq_xtal(i32 0, i32 %0) #8, !dbg !8185
  ret i32 %call, !dbg !8186
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_tc_to_active_i_band(%struct.cxd2841er_priv* %priv, i32 %bandwidth) #0 !dbg !4456 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bandwidth.addr = alloca i32, align 4
  %iffreq = alloca i32, align 4
  %ifhz = alloca i32, align 4
  %data = alloca [3 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !8187, metadata !DIExpression()), !dbg !8188
  store i32 %bandwidth, i32* %bandwidth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bandwidth.addr, metadata !8189, metadata !DIExpression()), !dbg !8190
  call void @llvm.dbg.declare(metadata i32* %iffreq, metadata !8191, metadata !DIExpression()), !dbg !8192
  call void @llvm.dbg.declare(metadata i32* %ifhz, metadata !8193, metadata !DIExpression()), !dbg !8194
  call void @llvm.dbg.declare(metadata [3 x i8]* %data, metadata !8195, metadata !DIExpression()), !dbg !8196
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8197
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !8198
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8199
  %xtal = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 7, !dbg !8201
  %2 = load i32, i32* %xtal, align 8, !dbg !8201
  %cmp = icmp ne i32 %2, 1, !dbg !8202
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8203

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %bandwidth.addr, align 4, !dbg !8204
  %cmp1 = icmp ugt i32 %3, 6000000, !dbg !8205
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8206

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8207
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %4, i32 0, i32 1, !dbg !8207
  %5 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !8207
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %5, i32 0, i32 9, !dbg !8207
  %6 = load i32, i32* %bandwidth.addr, align 4, !dbg !8207
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__func__.cxd2841er_sleep_tc_to_active_i_band, i64 0, i64 0), i32 %6) #9, !dbg !8207
  store i32 -22, i32* %retval, align 4, !dbg !8209
  br label %return, !dbg !8209

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load i32, i32* %bandwidth.addr, align 4, !dbg !8210
  switch i32 %7, label %sw.default [
    i32 8000000, label %sw.bb
    i32 7000000, label %sw.bb34
    i32 6000000, label %sw.bb75
  ], !dbg !8211

sw.bb:                                            ; preds = %if.end
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8212
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8214
  %xtal2 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %9, i32 0, i32 7, !dbg !8215
  %10 = load i32, i32* %xtal2, align 8, !dbg !8215
  %idxprom = zext i32 %10 to i64, !dbg !8216
  %arrayidx = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_i_band.nominalRate8bw, i64 0, i64 %idxprom, !dbg !8216
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx, i64 0, i64 0, !dbg !8216
  %call3 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay, i32 5) #8, !dbg !8217
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8218
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %11, i32 0, i32 9, !dbg !8220
  %12 = load i32, i32* %flags, align 8, !dbg !8220
  %and = and i32 %12, 8, !dbg !8221
  %tobool = icmp ne i32 %and, 0, !dbg !8221
  br i1 %tobool, label %if.then4, label %if.end10, !dbg !8222

if.then4:                                         ; preds = %sw.bb
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8223
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8224
  %xtal5 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %14, i32 0, i32 7, !dbg !8225
  %15 = load i32, i32* %xtal5, align 8, !dbg !8225
  %idxprom6 = zext i32 %15 to i64, !dbg !8226
  %arrayidx7 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_i_band.itbCoef8bw, i64 0, i64 %idxprom6, !dbg !8226
  %arraydecay8 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx7, i64 0, i64 0, !dbg !8226
  %call9 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay8, i32 14) #8, !dbg !8227
  br label %if.end10, !dbg !8227

if.end10:                                         ; preds = %if.then4, %sw.bb
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8228
  %call11 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %16, i32 4750000) #8, !dbg !8229
  store i32 %call11, i32* %ifhz, align 4, !dbg !8230
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8231
  %xtal12 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %17, i32 0, i32 7, !dbg !8232
  %18 = load i32, i32* %xtal12, align 8, !dbg !8232
  %19 = load i32, i32* %ifhz, align 4, !dbg !8233
  %call13 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %18, i32 %19) #8, !dbg !8234
  store i32 %call13, i32* %iffreq, align 4, !dbg !8235
  %20 = load i32, i32* %iffreq, align 4, !dbg !8236
  %shr = lshr i32 %20, 16, !dbg !8237
  %and14 = and i32 %shr, 255, !dbg !8238
  %conv = trunc i32 %and14 to i8, !dbg !8239
  %arrayidx15 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8240
  store i8 %conv, i8* %arrayidx15, align 1, !dbg !8241
  %21 = load i32, i32* %iffreq, align 4, !dbg !8242
  %shr16 = lshr i32 %21, 8, !dbg !8243
  %and17 = and i32 %shr16, 255, !dbg !8244
  %conv18 = trunc i32 %and17 to i8, !dbg !8245
  %arrayidx19 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !8246
  store i8 %conv18, i8* %arrayidx19, align 1, !dbg !8247
  %22 = load i32, i32* %iffreq, align 4, !dbg !8248
  %and20 = and i32 %22, 255, !dbg !8249
  %conv21 = trunc i32 %and20 to i8, !dbg !8250
  %arrayidx22 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 2, !dbg !8251
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !8252
  %23 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8253
  %arraydecay23 = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8254
  %call24 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %23, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay23, i32 3) #8, !dbg !8255
  %24 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8256
  %call25 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %24, i8 zeroext 1, i8 zeroext -41, i8 zeroext 0, i8 zeroext 7) #8, !dbg !8257
  %arrayidx26 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8258
  store i8 19, i8* %arrayidx26, align 1, !dbg !8259
  %arrayidx27 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !8260
  store i8 -4, i8* %arrayidx27, align 1, !dbg !8261
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8262
  %arraydecay28 = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8263
  %call29 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %25, i8 zeroext 1, i8 zeroext -39, i8* %arraydecay28, i32 2) #8, !dbg !8264
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8265
  %call30 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %26, i8 zeroext 1, i8 zeroext 0, i8 zeroext 18) #8, !dbg !8266
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8267
  %call31 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %27, i8 zeroext 1, i8 zeroext 113, i8 zeroext 3, i8 zeroext 7) #8, !dbg !8268
  %28 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8269
  %call32 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %28, i8 zeroext 1, i8 zeroext 0, i8 zeroext 21) #8, !dbg !8270
  %29 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8271
  %call33 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %29, i8 zeroext 1, i8 zeroext -66, i8 zeroext 3) #8, !dbg !8272
  br label %sw.epilog, !dbg !8273

sw.bb34:                                          ; preds = %if.end
  %30 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8274
  %31 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8275
  %xtal35 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %31, i32 0, i32 7, !dbg !8276
  %32 = load i32, i32* %xtal35, align 8, !dbg !8276
  %idxprom36 = zext i32 %32 to i64, !dbg !8277
  %arrayidx37 = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_i_band.nominalRate7bw, i64 0, i64 %idxprom36, !dbg !8277
  %arraydecay38 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx37, i64 0, i64 0, !dbg !8277
  %call39 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %30, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay38, i32 5) #8, !dbg !8278
  %33 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8279
  %flags40 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %33, i32 0, i32 9, !dbg !8281
  %34 = load i32, i32* %flags40, align 8, !dbg !8281
  %and41 = and i32 %34, 8, !dbg !8282
  %tobool42 = icmp ne i32 %and41, 0, !dbg !8282
  br i1 %tobool42, label %if.then43, label %if.end49, !dbg !8283

if.then43:                                        ; preds = %sw.bb34
  %35 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8284
  %36 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8285
  %xtal44 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %36, i32 0, i32 7, !dbg !8286
  %37 = load i32, i32* %xtal44, align 8, !dbg !8286
  %idxprom45 = zext i32 %37 to i64, !dbg !8287
  %arrayidx46 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_i_band.itbCoef7bw, i64 0, i64 %idxprom45, !dbg !8287
  %arraydecay47 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx46, i64 0, i64 0, !dbg !8287
  %call48 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %35, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay47, i32 14) #8, !dbg !8288
  br label %if.end49, !dbg !8288

if.end49:                                         ; preds = %if.then43, %sw.bb34
  %38 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8289
  %call50 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %38, i32 4150000) #8, !dbg !8290
  store i32 %call50, i32* %ifhz, align 4, !dbg !8291
  %39 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8292
  %xtal51 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %39, i32 0, i32 7, !dbg !8293
  %40 = load i32, i32* %xtal51, align 8, !dbg !8293
  %41 = load i32, i32* %ifhz, align 4, !dbg !8294
  %call52 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %40, i32 %41) #8, !dbg !8295
  store i32 %call52, i32* %iffreq, align 4, !dbg !8296
  %42 = load i32, i32* %iffreq, align 4, !dbg !8297
  %shr53 = lshr i32 %42, 16, !dbg !8298
  %and54 = and i32 %shr53, 255, !dbg !8299
  %conv55 = trunc i32 %and54 to i8, !dbg !8300
  %arrayidx56 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8301
  store i8 %conv55, i8* %arrayidx56, align 1, !dbg !8302
  %43 = load i32, i32* %iffreq, align 4, !dbg !8303
  %shr57 = lshr i32 %43, 8, !dbg !8304
  %and58 = and i32 %shr57, 255, !dbg !8305
  %conv59 = trunc i32 %and58 to i8, !dbg !8306
  %arrayidx60 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !8307
  store i8 %conv59, i8* %arrayidx60, align 1, !dbg !8308
  %44 = load i32, i32* %iffreq, align 4, !dbg !8309
  %and61 = and i32 %44, 255, !dbg !8310
  %conv62 = trunc i32 %and61 to i8, !dbg !8311
  %arrayidx63 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 2, !dbg !8312
  store i8 %conv62, i8* %arrayidx63, align 1, !dbg !8313
  %45 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8314
  %arraydecay64 = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8315
  %call65 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %45, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay64, i32 3) #8, !dbg !8316
  %46 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8317
  %call66 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %46, i8 zeroext 1, i8 zeroext -41, i8 zeroext 2, i8 zeroext 7) #8, !dbg !8318
  %arrayidx67 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8319
  store i8 26, i8* %arrayidx67, align 1, !dbg !8320
  %arrayidx68 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !8321
  store i8 -6, i8* %arrayidx68, align 1, !dbg !8322
  %47 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8323
  %arraydecay69 = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8324
  %call70 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %47, i8 zeroext 1, i8 zeroext -39, i8* %arraydecay69, i32 2) #8, !dbg !8325
  %48 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8326
  %call71 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %48, i8 zeroext 1, i8 zeroext 0, i8 zeroext 18) #8, !dbg !8327
  %49 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8328
  %call72 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %49, i8 zeroext 1, i8 zeroext 113, i8 zeroext 3, i8 zeroext 7) #8, !dbg !8329
  %50 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8330
  %call73 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %50, i8 zeroext 1, i8 zeroext 0, i8 zeroext 21) #8, !dbg !8331
  %51 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8332
  %call74 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %51, i8 zeroext 1, i8 zeroext -66, i8 zeroext 2) #8, !dbg !8333
  br label %sw.epilog, !dbg !8334

sw.bb75:                                          ; preds = %if.end
  %52 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8335
  %53 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8336
  %xtal76 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %53, i32 0, i32 7, !dbg !8337
  %54 = load i32, i32* %xtal76, align 8, !dbg !8337
  %idxprom77 = zext i32 %54 to i64, !dbg !8338
  %arrayidx78 = getelementptr [3 x [5 x i8]], [3 x [5 x i8]]* @cxd2841er_sleep_tc_to_active_i_band.nominalRate6bw, i64 0, i64 %idxprom77, !dbg !8338
  %arraydecay79 = getelementptr inbounds [5 x i8], [5 x i8]* %arrayidx78, i64 0, i64 0, !dbg !8338
  %call80 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %52, i8 zeroext 1, i8 zeroext -97, i8* %arraydecay79, i32 5) #8, !dbg !8339
  %55 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8340
  %flags81 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %55, i32 0, i32 9, !dbg !8342
  %56 = load i32, i32* %flags81, align 8, !dbg !8342
  %and82 = and i32 %56, 8, !dbg !8343
  %tobool83 = icmp ne i32 %and82, 0, !dbg !8343
  br i1 %tobool83, label %if.then84, label %if.end90, !dbg !8344

if.then84:                                        ; preds = %sw.bb75
  %57 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8345
  %58 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8346
  %xtal85 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %58, i32 0, i32 7, !dbg !8347
  %59 = load i32, i32* %xtal85, align 8, !dbg !8347
  %idxprom86 = zext i32 %59 to i64, !dbg !8348
  %arrayidx87 = getelementptr [3 x [14 x i8]], [3 x [14 x i8]]* @cxd2841er_sleep_tc_to_active_i_band.itbCoef6bw, i64 0, i64 %idxprom86, !dbg !8348
  %arraydecay88 = getelementptr inbounds [14 x i8], [14 x i8]* %arrayidx87, i64 0, i64 0, !dbg !8348
  %call89 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %57, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay88, i32 14) #8, !dbg !8349
  br label %if.end90, !dbg !8349

if.end90:                                         ; preds = %if.then84, %sw.bb75
  %60 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8350
  %call91 = call i32 @cxd2841er_get_if_hz(%struct.cxd2841er_priv* %60, i32 3550000) #8, !dbg !8351
  store i32 %call91, i32* %ifhz, align 4, !dbg !8352
  %61 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8353
  %xtal92 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %61, i32 0, i32 7, !dbg !8354
  %62 = load i32, i32* %xtal92, align 8, !dbg !8354
  %63 = load i32, i32* %ifhz, align 4, !dbg !8355
  %call93 = call i32 @cxd2841er_calc_iffreq_xtal(i32 %62, i32 %63) #8, !dbg !8356
  store i32 %call93, i32* %iffreq, align 4, !dbg !8357
  %64 = load i32, i32* %iffreq, align 4, !dbg !8358
  %shr94 = lshr i32 %64, 16, !dbg !8359
  %and95 = and i32 %shr94, 255, !dbg !8360
  %conv96 = trunc i32 %and95 to i8, !dbg !8361
  %arrayidx97 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8362
  store i8 %conv96, i8* %arrayidx97, align 1, !dbg !8363
  %65 = load i32, i32* %iffreq, align 4, !dbg !8364
  %shr98 = lshr i32 %65, 8, !dbg !8365
  %and99 = and i32 %shr98, 255, !dbg !8366
  %conv100 = trunc i32 %and99 to i8, !dbg !8367
  %arrayidx101 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !8368
  store i8 %conv100, i8* %arrayidx101, align 1, !dbg !8369
  %66 = load i32, i32* %iffreq, align 4, !dbg !8370
  %and102 = and i32 %66, 255, !dbg !8371
  %conv103 = trunc i32 %and102 to i8, !dbg !8372
  %arrayidx104 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 2, !dbg !8373
  store i8 %conv103, i8* %arrayidx104, align 1, !dbg !8374
  %67 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8375
  %arraydecay105 = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8376
  %call106 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %67, i8 zeroext 1, i8 zeroext -74, i8* %arraydecay105, i32 3) #8, !dbg !8377
  %68 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8378
  %call107 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %68, i8 zeroext 1, i8 zeroext -41, i8 zeroext 4, i8 zeroext 7) #8, !dbg !8379
  %69 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8380
  %xtal108 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %69, i32 0, i32 7, !dbg !8382
  %70 = load i32, i32* %xtal108, align 8, !dbg !8382
  %cmp109 = icmp eq i32 %70, 1, !dbg !8383
  br i1 %cmp109, label %if.then111, label %if.else, !dbg !8384

if.then111:                                       ; preds = %if.end90
  %arrayidx112 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8385
  store i8 31, i8* %arrayidx112, align 1, !dbg !8387
  %arrayidx113 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !8388
  store i8 121, i8* %arrayidx113, align 1, !dbg !8389
  br label %if.end116, !dbg !8390

if.else:                                          ; preds = %if.end90
  %arrayidx114 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8391
  store i8 26, i8* %arrayidx114, align 1, !dbg !8393
  %arrayidx115 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !8394
  store i8 -30, i8* %arrayidx115, align 1, !dbg !8395
  br label %if.end116

if.end116:                                        ; preds = %if.else, %if.then111
  %71 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8396
  %arraydecay117 = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !8397
  %call118 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %71, i8 zeroext 1, i8 zeroext -39, i8* %arraydecay117, i32 2) #8, !dbg !8398
  %72 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8399
  %call119 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %72, i8 zeroext 1, i8 zeroext 0, i8 zeroext 18) #8, !dbg !8400
  %73 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8401
  %call120 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %73, i8 zeroext 1, i8 zeroext 113, i8 zeroext 7, i8 zeroext 7) #8, !dbg !8402
  %74 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8403
  %call121 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %74, i8 zeroext 1, i8 zeroext 0, i8 zeroext 21) #8, !dbg !8404
  %75 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8405
  %call122 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %75, i8 zeroext 1, i8 zeroext -66, i8 zeroext 2) #8, !dbg !8406
  br label %sw.epilog, !dbg !8407

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8408
  br label %return, !dbg !8408

sw.epilog:                                        ; preds = %if.end116, %if.end49, %if.end10
  store i32 0, i32* %retval, align 4, !dbg !8409
  br label %return, !dbg !8409

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !8410
  ret i32 %76, !dbg !8410
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_status_s(%struct.dvb_frontend* %fe, i32* %status) #0 !dbg !8411 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %status.addr = alloca i32*, align 8
  %reg = alloca i8, align 1
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !8412, metadata !DIExpression()), !dbg !8413
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !8414, metadata !DIExpression()), !dbg !8415
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !8416, metadata !DIExpression()), !dbg !8417
  store i8 0, i8* %reg, align 1, !dbg !8417
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !8418, metadata !DIExpression()), !dbg !8419
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !8420
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !8421
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !8421
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !8420
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !8419
  %3 = load i32*, i32** %status.addr, align 8, !dbg !8422
  store i32 0, i32* %3, align 4, !dbg !8423
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8424
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %4, i32 0, i32 5, !dbg !8426
  %5 = load i32, i32* %state, align 8, !dbg !8426
  %cmp = icmp ne i32 %5, 2, !dbg !8427
  br i1 %cmp, label %if.then, label %if.end, !dbg !8428

if.then:                                          ; preds = %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8429
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %6, i32 0, i32 1, !dbg !8429
  %7 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !8429
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %7, i32 0, i32 9, !dbg !8429
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8429
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %8, i32 0, i32 5, !dbg !8429
  %9 = load i32, i32* %state1, align 8, !dbg !8429
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.cxd2841er_read_status_s, i64 0, i64 0), i32 %9) #9, !dbg !8429
  store i32 -22, i32* %retval, align 4, !dbg !8431
  br label %return, !dbg !8431

if.end:                                           ; preds = %entry
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8432
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext 1, i8 zeroext 0, i8 zeroext -96) #8, !dbg !8433
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8434
  %call2 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %11, i8 zeroext 1, i8 zeroext 17, i8* %reg) #8, !dbg !8435
  %12 = load i8, i8* %reg, align 1, !dbg !8436
  %conv = zext i8 %12 to i32, !dbg !8436
  %and = and i32 %conv, 4, !dbg !8438
  %tobool = icmp ne i32 %and, 0, !dbg !8438
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !8439

if.then3:                                         ; preds = %if.end
  %13 = load i32*, i32** %status.addr, align 8, !dbg !8440
  store i32 31, i32* %13, align 4, !dbg !8442
  br label %if.end4, !dbg !8443

if.end4:                                          ; preds = %if.then3, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8444
  br label %return, !dbg !8444

return:                                           ; preds = %if.end4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8445
  ret i32 %14, !dbg !8445
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cxd2841er_read_signal_strength(%struct.dvb_frontend* %fe) #0 !dbg !8446 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  %strength = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !8447, metadata !DIExpression()), !dbg !8448
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !8449, metadata !DIExpression()), !dbg !8450
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !8451
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !8452
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !8450
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !8453, metadata !DIExpression()), !dbg !8454
  %1 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !8455
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %1, i32 0, i32 3, !dbg !8456
  %2 = load i8*, i8** %demodulator_priv, align 8, !dbg !8456
  %3 = bitcast i8* %2 to %struct.cxd2841er_priv*, !dbg !8455
  store %struct.cxd2841er_priv* %3, %struct.cxd2841er_priv** %priv, align 8, !dbg !8454
  call void @llvm.dbg.declare(metadata i32* %strength, metadata !8457, metadata !DIExpression()), !dbg !8458
  %4 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8459
  %delivery_system = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %4, i32 0, i32 15, !dbg !8460
  %5 = load i32, i32* %delivery_system, align 4, !dbg !8460
  switch i32 %5, label %sw.default [
    i32 3, label %sw.bb
    i32 16, label %sw.bb
    i32 1, label %sw.bb8
    i32 2, label %sw.bb8
    i32 18, label %sw.bb8
    i32 8, label %sw.bb25
    i32 5, label %sw.bb42
    i32 6, label %sw.bb42
  ], !dbg !8461

sw.bb:                                            ; preds = %entry, %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8462
  %7 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8464
  %delivery_system1 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %7, i32 0, i32 15, !dbg !8465
  %8 = load i32, i32* %delivery_system1, align 4, !dbg !8465
  %conv = trunc i32 %8 to i8, !dbg !8464
  %call = call zeroext i16 @cxd2841er_read_agc_gain_t_t2(%struct.cxd2841er_priv* %6, i8 zeroext %conv) #8, !dbg !8466
  %conv2 = zext i16 %call to i32, !dbg !8466
  store i32 %conv2, i32* %strength, align 4, !dbg !8467
  %9 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8468
  %strength3 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %9, i32 0, i32 42, !dbg !8469
  %stat = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength3, i32 0, i32 1, !dbg !8470
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat, i64 0, i64 0, !dbg !8468
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 0, !dbg !8471
  store i8 1, i8* %scale, align 1, !dbg !8472
  %10 = load i32, i32* %strength, align 4, !dbg !8473
  %mul = mul i32 %10, 366, !dbg !8474
  %div = sdiv i32 %mul, 100, !dbg !8475
  %sub = sub i32 %div, 89520, !dbg !8476
  %conv4 = sext i32 %sub to i64, !dbg !8473
  %11 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8477
  %strength5 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %11, i32 0, i32 42, !dbg !8478
  %stat6 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength5, i32 0, i32 1, !dbg !8479
  %arrayidx7 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat6, i64 0, i64 0, !dbg !8477
  %12 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx7, i32 0, i32 1, !dbg !8480
  %uvalue = bitcast %union.anon* %12 to i64*, !dbg !8480
  store i64 %conv4, i64* %uvalue, align 1, !dbg !8481
  br label %sw.epilog, !dbg !8482

sw.bb8:                                           ; preds = %entry, %entry, %entry
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8483
  %14 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8484
  %delivery_system9 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %14, i32 0, i32 15, !dbg !8485
  %15 = load i32, i32* %delivery_system9, align 4, !dbg !8485
  %conv10 = trunc i32 %15 to i8, !dbg !8484
  %call11 = call zeroext i16 @cxd2841er_read_agc_gain_c(%struct.cxd2841er_priv* %13, i8 zeroext %conv10) #8, !dbg !8486
  %conv12 = zext i16 %call11 to i32, !dbg !8486
  store i32 %conv12, i32* %strength, align 4, !dbg !8487
  %16 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8488
  %strength13 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %16, i32 0, i32 42, !dbg !8489
  %stat14 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength13, i32 0, i32 1, !dbg !8490
  %arrayidx15 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat14, i64 0, i64 0, !dbg !8488
  %scale16 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx15, i32 0, i32 0, !dbg !8491
  store i8 1, i8* %scale16, align 1, !dbg !8492
  %17 = load i32, i32* %strength, align 4, !dbg !8493
  %mul17 = mul i32 %17, 4045, !dbg !8494
  %div18 = sdiv i32 %mul17, 1000, !dbg !8495
  %sub19 = sub i32 %div18, 85224, !dbg !8496
  %conv20 = sext i32 %sub19 to i64, !dbg !8493
  %18 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8497
  %strength21 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %18, i32 0, i32 42, !dbg !8498
  %stat22 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength21, i32 0, i32 1, !dbg !8499
  %arrayidx23 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat22, i64 0, i64 0, !dbg !8497
  %19 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx23, i32 0, i32 1, !dbg !8500
  %uvalue24 = bitcast %union.anon* %19 to i64*, !dbg !8500
  store i64 %conv20, i64* %uvalue24, align 1, !dbg !8501
  br label %sw.epilog, !dbg !8502

sw.bb25:                                          ; preds = %entry
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8503
  %21 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8504
  %delivery_system26 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %21, i32 0, i32 15, !dbg !8505
  %22 = load i32, i32* %delivery_system26, align 4, !dbg !8505
  %conv27 = trunc i32 %22 to i8, !dbg !8504
  %call28 = call zeroext i16 @cxd2841er_read_agc_gain_i(%struct.cxd2841er_priv* %20, i8 zeroext %conv27) #8, !dbg !8506
  %conv29 = zext i16 %call28 to i32, !dbg !8506
  store i32 %conv29, i32* %strength, align 4, !dbg !8507
  %23 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8508
  %strength30 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %23, i32 0, i32 42, !dbg !8509
  %stat31 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength30, i32 0, i32 1, !dbg !8510
  %arrayidx32 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat31, i64 0, i64 0, !dbg !8508
  %scale33 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx32, i32 0, i32 0, !dbg !8511
  store i8 1, i8* %scale33, align 1, !dbg !8512
  %24 = load i32, i32* %strength, align 4, !dbg !8513
  %mul34 = mul i32 %24, 3775, !dbg !8514
  %div35 = sdiv i32 %mul34, 1000, !dbg !8515
  %sub36 = sub i32 %div35, 90185, !dbg !8516
  %conv37 = sext i32 %sub36 to i64, !dbg !8513
  %25 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8517
  %strength38 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %25, i32 0, i32 42, !dbg !8518
  %stat39 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength38, i32 0, i32 1, !dbg !8519
  %arrayidx40 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat39, i64 0, i64 0, !dbg !8517
  %26 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx40, i32 0, i32 1, !dbg !8520
  %uvalue41 = bitcast %union.anon* %26 to i64*, !dbg !8520
  store i64 %conv37, i64* %uvalue41, align 1, !dbg !8521
  br label %sw.epilog, !dbg !8522

sw.bb42:                                          ; preds = %entry, %entry
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8523
  %call43 = call zeroext i16 @cxd2841er_read_agc_gain_s(%struct.cxd2841er_priv* %27) #8, !dbg !8524
  %conv44 = zext i16 %call43 to i32, !dbg !8524
  %sub45 = sub i32 65535, %conv44, !dbg !8525
  store i32 %sub45, i32* %strength, align 4, !dbg !8526
  %28 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8527
  %strength46 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %28, i32 0, i32 42, !dbg !8528
  %stat47 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength46, i32 0, i32 1, !dbg !8529
  %arrayidx48 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat47, i64 0, i64 0, !dbg !8527
  %scale49 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx48, i32 0, i32 0, !dbg !8530
  store i8 2, i8* %scale49, align 1, !dbg !8531
  %29 = load i32, i32* %strength, align 4, !dbg !8532
  %conv50 = sext i32 %29 to i64, !dbg !8532
  %30 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8533
  %strength51 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %30, i32 0, i32 42, !dbg !8534
  %stat52 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength51, i32 0, i32 1, !dbg !8535
  %arrayidx53 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat52, i64 0, i64 0, !dbg !8533
  %31 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx53, i32 0, i32 1, !dbg !8536
  %uvalue54 = bitcast %union.anon* %31 to i64*, !dbg !8536
  store i64 %conv50, i64* %uvalue54, align 1, !dbg !8537
  br label %sw.epilog, !dbg !8538

sw.default:                                       ; preds = %entry
  %32 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8539
  %strength55 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %32, i32 0, i32 42, !dbg !8540
  %stat56 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength55, i32 0, i32 1, !dbg !8541
  %arrayidx57 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat56, i64 0, i64 0, !dbg !8539
  %scale58 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx57, i32 0, i32 0, !dbg !8542
  store i8 0, i8* %scale58, align 1, !dbg !8543
  br label %sw.epilog, !dbg !8544

sw.epilog:                                        ; preds = %sw.default, %sw.bb42, %sw.bb25, %sw.bb8, %sw.bb
  ret void, !dbg !8545
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cxd2841er_read_snr(%struct.dvb_frontend* %fe) #0 !dbg !8546 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %tmp = alloca i32, align 4
  %ret = alloca i32, align 4
  %p = alloca %struct.dtv_frontend_properties*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !8547, metadata !DIExpression()), !dbg !8548
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !8549, metadata !DIExpression()), !dbg !8550
  store i32 0, i32* %tmp, align 4, !dbg !8550
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8551, metadata !DIExpression()), !dbg !8552
  store i32 0, i32* %ret, align 4, !dbg !8552
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !8553, metadata !DIExpression()), !dbg !8554
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !8555
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !8556
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !8554
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !8557, metadata !DIExpression()), !dbg !8558
  %1 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !8559
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %1, i32 0, i32 3, !dbg !8560
  %2 = load i8*, i8** %demodulator_priv, align 8, !dbg !8560
  %3 = bitcast i8* %2 to %struct.cxd2841er_priv*, !dbg !8559
  store %struct.cxd2841er_priv* %3, %struct.cxd2841er_priv** %priv, align 8, !dbg !8558
  %4 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8561
  %delivery_system = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %4, i32 0, i32 15, !dbg !8562
  %5 = load i32, i32* %delivery_system, align 4, !dbg !8562
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 18, label %sw.bb
    i32 3, label %sw.bb1
    i32 16, label %sw.bb3
    i32 8, label %sw.bb5
    i32 5, label %sw.bb7
    i32 6, label %sw.bb7
  ], !dbg !8563

sw.bb:                                            ; preds = %entry, %entry, %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8564
  %call = call i32 @cxd2841er_read_snr_c(%struct.cxd2841er_priv* %6, i32* %tmp) #8, !dbg !8566
  store i32 %call, i32* %ret, align 4, !dbg !8567
  br label %sw.epilog, !dbg !8568

sw.bb1:                                           ; preds = %entry
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8569
  %call2 = call i32 @cxd2841er_read_snr_t(%struct.cxd2841er_priv* %7, i32* %tmp) #8, !dbg !8570
  store i32 %call2, i32* %ret, align 4, !dbg !8571
  br label %sw.epilog, !dbg !8572

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8573
  %call4 = call i32 @cxd2841er_read_snr_t2(%struct.cxd2841er_priv* %8, i32* %tmp) #8, !dbg !8574
  store i32 %call4, i32* %ret, align 4, !dbg !8575
  br label %sw.epilog, !dbg !8576

sw.bb5:                                           ; preds = %entry
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8577
  %call6 = call i32 @cxd2841er_read_snr_i(%struct.cxd2841er_priv* %9, i32* %tmp) #8, !dbg !8578
  store i32 %call6, i32* %ret, align 4, !dbg !8579
  br label %sw.epilog, !dbg !8580

sw.bb7:                                           ; preds = %entry, %entry
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8581
  %11 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8582
  %delivery_system8 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %11, i32 0, i32 15, !dbg !8583
  %12 = load i32, i32* %delivery_system8, align 4, !dbg !8583
  %conv = trunc i32 %12 to i8, !dbg !8582
  %call9 = call i32 @cxd2841er_dvbs_read_snr(%struct.cxd2841er_priv* %10, i8 zeroext %conv, i32* %tmp) #8, !dbg !8584
  store i32 %call9, i32* %ret, align 4, !dbg !8585
  br label %sw.epilog, !dbg !8586

sw.default:                                       ; preds = %entry
  %13 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8587
  %cnr = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %13, i32 0, i32 43, !dbg !8588
  %stat = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr, i32 0, i32 1, !dbg !8589
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat, i64 0, i64 0, !dbg !8587
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 0, !dbg !8590
  store i8 0, i8* %scale, align 1, !dbg !8591
  br label %if.end, !dbg !8592

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %14 = load i32, i32* %ret, align 4, !dbg !8593
  %tobool = icmp ne i32 %14, 0, !dbg !8593
  br i1 %tobool, label %if.else, label %if.then, !dbg !8595

if.then:                                          ; preds = %sw.epilog
  %15 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8596
  %cnr10 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %15, i32 0, i32 43, !dbg !8598
  %stat11 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr10, i32 0, i32 1, !dbg !8599
  %arrayidx12 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat11, i64 0, i64 0, !dbg !8596
  %scale13 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx12, i32 0, i32 0, !dbg !8600
  store i8 1, i8* %scale13, align 1, !dbg !8601
  %16 = load i32, i32* %tmp, align 4, !dbg !8602
  %conv14 = zext i32 %16 to i64, !dbg !8602
  %17 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8603
  %cnr15 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %17, i32 0, i32 43, !dbg !8604
  %stat16 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr15, i32 0, i32 1, !dbg !8605
  %arrayidx17 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat16, i64 0, i64 0, !dbg !8603
  %18 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx17, i32 0, i32 1, !dbg !8606
  %svalue = bitcast %union.anon* %18 to i64*, !dbg !8606
  store i64 %conv14, i64* %svalue, align 1, !dbg !8607
  br label %if.end, !dbg !8608

if.else:                                          ; preds = %sw.epilog
  %19 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8609
  %cnr18 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %19, i32 0, i32 43, !dbg !8611
  %stat19 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr18, i32 0, i32 1, !dbg !8612
  %arrayidx20 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat19, i64 0, i64 0, !dbg !8609
  %scale21 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx20, i32 0, i32 0, !dbg !8613
  store i8 0, i8* %scale21, align 1, !dbg !8614
  br label %if.end

if.end:                                           ; preds = %sw.default, %if.else, %if.then
  ret void, !dbg !8615
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cxd2841er_read_ucblocks(%struct.dvb_frontend* %fe) #0 !dbg !8616 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  %ucblocks = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !8617, metadata !DIExpression()), !dbg !8618
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !8619, metadata !DIExpression()), !dbg !8620
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !8621
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !8622
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !8620
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !8623, metadata !DIExpression()), !dbg !8624
  %1 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !8625
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %1, i32 0, i32 3, !dbg !8626
  %2 = load i8*, i8** %demodulator_priv, align 8, !dbg !8626
  %3 = bitcast i8* %2 to %struct.cxd2841er_priv*, !dbg !8625
  store %struct.cxd2841er_priv* %3, %struct.cxd2841er_priv** %priv, align 8, !dbg !8624
  call void @llvm.dbg.declare(metadata i32* %ucblocks, metadata !8627, metadata !DIExpression()), !dbg !8628
  store i32 0, i32* %ucblocks, align 4, !dbg !8628
  %4 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8629
  %delivery_system = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %4, i32 0, i32 15, !dbg !8630
  %5 = load i32, i32* %delivery_system, align 4, !dbg !8630
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 18, label %sw.bb
    i32 3, label %sw.bb1
    i32 16, label %sw.bb3
    i32 8, label %sw.bb5
  ], !dbg !8631

sw.bb:                                            ; preds = %entry, %entry, %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8632
  %call = call i32 @cxd2841er_read_packet_errors_c(%struct.cxd2841er_priv* %6, i32* %ucblocks) #8, !dbg !8634
  br label %sw.epilog, !dbg !8635

sw.bb1:                                           ; preds = %entry
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8636
  %call2 = call i32 @cxd2841er_read_packet_errors_t(%struct.cxd2841er_priv* %7, i32* %ucblocks) #8, !dbg !8637
  br label %sw.epilog, !dbg !8638

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8639
  %call4 = call i32 @cxd2841er_read_packet_errors_t2(%struct.cxd2841er_priv* %8, i32* %ucblocks) #8, !dbg !8640
  br label %sw.epilog, !dbg !8641

sw.bb5:                                           ; preds = %entry
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8642
  %call6 = call i32 @cxd2841er_read_packet_errors_i(%struct.cxd2841er_priv* %9, i32* %ucblocks) #8, !dbg !8643
  br label %sw.epilog, !dbg !8644

sw.default:                                       ; preds = %entry
  %10 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8645
  %block_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %10, i32 0, i32 48, !dbg !8646
  %stat = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error, i32 0, i32 1, !dbg !8647
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat, i64 0, i64 0, !dbg !8645
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 0, !dbg !8648
  store i8 0, i8* %scale, align 1, !dbg !8649
  br label %return, !dbg !8650

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %11 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8651
  %block_error7 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %11, i32 0, i32 48, !dbg !8652
  %stat8 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error7, i32 0, i32 1, !dbg !8653
  %arrayidx9 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat8, i64 0, i64 0, !dbg !8651
  %scale10 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx9, i32 0, i32 0, !dbg !8654
  store i8 3, i8* %scale10, align 1, !dbg !8655
  %12 = load i32, i32* %ucblocks, align 4, !dbg !8656
  %conv = zext i32 %12 to i64, !dbg !8656
  %13 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8657
  %block_error11 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %13, i32 0, i32 48, !dbg !8658
  %stat12 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error11, i32 0, i32 1, !dbg !8659
  %arrayidx13 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat12, i64 0, i64 0, !dbg !8657
  %14 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx13, i32 0, i32 1, !dbg !8660
  %uvalue = bitcast %union.anon* %14 to i64*, !dbg !8660
  store i64 %conv, i64* %uvalue, align 1, !dbg !8661
  br label %return, !dbg !8662

return:                                           ; preds = %sw.epilog, %sw.default
  ret void, !dbg !8662
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cxd2841er_read_ber(%struct.dvb_frontend* %fe) #0 !dbg !8663 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  %ret = alloca i32, align 4
  %bit_error = alloca i32, align 4
  %bit_count = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !8664, metadata !DIExpression()), !dbg !8665
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !8666, metadata !DIExpression()), !dbg !8667
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !8668
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !8669
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !8667
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !8670, metadata !DIExpression()), !dbg !8671
  %1 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !8672
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %1, i32 0, i32 3, !dbg !8673
  %2 = load i8*, i8** %demodulator_priv, align 8, !dbg !8673
  %3 = bitcast i8* %2 to %struct.cxd2841er_priv*, !dbg !8672
  store %struct.cxd2841er_priv* %3, %struct.cxd2841er_priv** %priv, align 8, !dbg !8671
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8674, metadata !DIExpression()), !dbg !8675
  call void @llvm.dbg.declare(metadata i32* %bit_error, metadata !8676, metadata !DIExpression()), !dbg !8677
  store i32 0, i32* %bit_error, align 4, !dbg !8677
  call void @llvm.dbg.declare(metadata i32* %bit_count, metadata !8678, metadata !DIExpression()), !dbg !8679
  store i32 0, i32* %bit_count, align 4, !dbg !8679
  %4 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8680
  %delivery_system = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %4, i32 0, i32 15, !dbg !8681
  %5 = load i32, i32* %delivery_system, align 4, !dbg !8681
  switch i32 %5, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 18, label %sw.bb
    i32 8, label %sw.bb1
    i32 5, label %sw.bb3
    i32 6, label %sw.bb5
    i32 3, label %sw.bb7
    i32 16, label %sw.bb9
  ], !dbg !8682

sw.bb:                                            ; preds = %entry, %entry, %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8683
  %call = call i32 @cxd2841er_read_ber_c(%struct.cxd2841er_priv* %6, i32* %bit_error, i32* %bit_count) #8, !dbg !8685
  store i32 %call, i32* %ret, align 4, !dbg !8686
  br label %sw.epilog, !dbg !8687

sw.bb1:                                           ; preds = %entry
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8688
  %call2 = call i32 @cxd2841er_read_ber_i(%struct.cxd2841er_priv* %7, i32* %bit_error, i32* %bit_count) #8, !dbg !8689
  store i32 %call2, i32* %ret, align 4, !dbg !8690
  br label %sw.epilog, !dbg !8691

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8692
  %call4 = call i32 @cxd2841er_mon_read_ber_s(%struct.cxd2841er_priv* %8, i32* %bit_error, i32* %bit_count) #8, !dbg !8693
  store i32 %call4, i32* %ret, align 4, !dbg !8694
  br label %sw.epilog, !dbg !8695

sw.bb5:                                           ; preds = %entry
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8696
  %call6 = call i32 @cxd2841er_mon_read_ber_s2(%struct.cxd2841er_priv* %9, i32* %bit_error, i32* %bit_count) #8, !dbg !8697
  store i32 %call6, i32* %ret, align 4, !dbg !8698
  br label %sw.epilog, !dbg !8699

sw.bb7:                                           ; preds = %entry
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8700
  %call8 = call i32 @cxd2841er_read_ber_t(%struct.cxd2841er_priv* %10, i32* %bit_error, i32* %bit_count) #8, !dbg !8701
  store i32 %call8, i32* %ret, align 4, !dbg !8702
  br label %sw.epilog, !dbg !8703

sw.bb9:                                           ; preds = %entry
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !8704
  %call10 = call i32 @cxd2841er_read_ber_t2(%struct.cxd2841er_priv* %11, i32* %bit_error, i32* %bit_count) #8, !dbg !8705
  store i32 %call10, i32* %ret, align 4, !dbg !8706
  br label %sw.epilog, !dbg !8707

sw.default:                                       ; preds = %entry
  %12 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8708
  %post_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %12, i32 0, i32 46, !dbg !8709
  %stat = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error, i32 0, i32 1, !dbg !8710
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat, i64 0, i64 0, !dbg !8708
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 0, !dbg !8711
  store i8 0, i8* %scale, align 1, !dbg !8712
  %13 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8713
  %post_bit_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %13, i32 0, i32 47, !dbg !8714
  %stat11 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count, i32 0, i32 1, !dbg !8715
  %arrayidx12 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat11, i64 0, i64 0, !dbg !8713
  %scale13 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx12, i32 0, i32 0, !dbg !8716
  store i8 0, i8* %scale13, align 1, !dbg !8717
  br label %if.end, !dbg !8718

sw.epilog:                                        ; preds = %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %14 = load i32, i32* %ret, align 4, !dbg !8719
  %tobool = icmp ne i32 %14, 0, !dbg !8719
  br i1 %tobool, label %if.else, label %if.then, !dbg !8721

if.then:                                          ; preds = %sw.epilog
  %15 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8722
  %post_bit_error14 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %15, i32 0, i32 46, !dbg !8724
  %stat15 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error14, i32 0, i32 1, !dbg !8725
  %arrayidx16 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat15, i64 0, i64 0, !dbg !8722
  %scale17 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx16, i32 0, i32 0, !dbg !8726
  store i8 3, i8* %scale17, align 1, !dbg !8727
  %16 = load i32, i32* %bit_error, align 4, !dbg !8728
  %conv = zext i32 %16 to i64, !dbg !8728
  %17 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8729
  %post_bit_error18 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %17, i32 0, i32 46, !dbg !8730
  %stat19 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error18, i32 0, i32 1, !dbg !8731
  %arrayidx20 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat19, i64 0, i64 0, !dbg !8729
  %18 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx20, i32 0, i32 1, !dbg !8732
  %uvalue = bitcast %union.anon* %18 to i64*, !dbg !8732
  %19 = load i64, i64* %uvalue, align 1, !dbg !8733
  %add = add i64 %19, %conv, !dbg !8733
  store i64 %add, i64* %uvalue, align 1, !dbg !8733
  %20 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8734
  %post_bit_count21 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %20, i32 0, i32 47, !dbg !8735
  %stat22 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count21, i32 0, i32 1, !dbg !8736
  %arrayidx23 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat22, i64 0, i64 0, !dbg !8734
  %scale24 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx23, i32 0, i32 0, !dbg !8737
  store i8 3, i8* %scale24, align 1, !dbg !8738
  %21 = load i32, i32* %bit_count, align 4, !dbg !8739
  %conv25 = zext i32 %21 to i64, !dbg !8739
  %22 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8740
  %post_bit_count26 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %22, i32 0, i32 47, !dbg !8741
  %stat27 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count26, i32 0, i32 1, !dbg !8742
  %arrayidx28 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat27, i64 0, i64 0, !dbg !8740
  %23 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx28, i32 0, i32 1, !dbg !8743
  %uvalue29 = bitcast %union.anon* %23 to i64*, !dbg !8743
  %24 = load i64, i64* %uvalue29, align 1, !dbg !8744
  %add30 = add i64 %24, %conv25, !dbg !8744
  store i64 %add30, i64* %uvalue29, align 1, !dbg !8744
  br label %if.end, !dbg !8745

if.else:                                          ; preds = %sw.epilog
  %25 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8746
  %post_bit_error31 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %25, i32 0, i32 46, !dbg !8748
  %stat32 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error31, i32 0, i32 1, !dbg !8749
  %arrayidx33 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat32, i64 0, i64 0, !dbg !8746
  %scale34 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx33, i32 0, i32 0, !dbg !8750
  store i8 0, i8* %scale34, align 1, !dbg !8751
  %26 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !8752
  %post_bit_count35 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %26, i32 0, i32 47, !dbg !8753
  %stat36 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count35, i32 0, i32 1, !dbg !8754
  %arrayidx37 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat36, i64 0, i64 0, !dbg !8752
  %scale38 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx37, i32 0, i32 0, !dbg !8755
  store i8 0, i8* %scale38, align 1, !dbg !8756
  br label %if.end

if.end:                                           ; preds = %sw.default, %if.else, %if.then
  ret void, !dbg !8757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @cxd2841er_read_agc_gain_t_t2(%struct.cxd2841er_priv* %priv, i8 zeroext %delsys) #0 !dbg !8758 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %delsys.addr = alloca i8, align 1
  %data = alloca [2 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !8761, metadata !DIExpression()), !dbg !8762
  store i8 %delsys, i8* %delsys.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delsys.addr, metadata !8763, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !8765, metadata !DIExpression()), !dbg !8766
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8767
  %1 = load i8, i8* %delsys.addr, align 1, !dbg !8768
  %conv = zext i8 %1 to i32, !dbg !8768
  %cmp = icmp eq i32 %conv, 3, !dbg !8769
  %2 = zext i1 %cmp to i64, !dbg !8768
  %cond = select i1 %cmp, i32 16, i32 32, !dbg !8768
  %conv2 = trunc i32 %cond to i8, !dbg !8770
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext %conv2) #8, !dbg !8771
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8772
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8773
  %call3 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 38, i8* %arraydecay, i32 2) #8, !dbg !8774
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8775
  %4 = load i8, i8* %arrayidx, align 1, !dbg !8775
  %conv4 = zext i8 %4 to i16, !dbg !8776
  %conv5 = zext i16 %conv4 to i32, !dbg !8776
  %and = and i32 %conv5, 15, !dbg !8777
  %shl = shl i32 %and, 8, !dbg !8778
  %arrayidx6 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !8779
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !8779
  %conv7 = zext i8 %5 to i32, !dbg !8779
  %and8 = and i32 %conv7, 255, !dbg !8780
  %conv9 = trunc i32 %and8 to i16, !dbg !8781
  %conv10 = zext i16 %conv9 to i32, !dbg !8781
  %or = or i32 %shl, %conv10, !dbg !8782
  %shl11 = shl i32 %or, 4, !dbg !8783
  %conv12 = trunc i32 %shl11 to i16, !dbg !8784
  ret i16 %conv12, !dbg !8785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @cxd2841er_read_agc_gain_c(%struct.cxd2841er_priv* %priv, i8 zeroext %delsys) #0 !dbg !8786 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %delsys.addr = alloca i8, align 1
  %data = alloca [2 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !8787, metadata !DIExpression()), !dbg !8788
  store i8 %delsys, i8* %delsys.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delsys.addr, metadata !8789, metadata !DIExpression()), !dbg !8790
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !8791, metadata !DIExpression()), !dbg !8792
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8793
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 64) #8, !dbg !8794
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8795
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8796
  %call1 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %1, i8 zeroext 1, i8 zeroext 73, i8* %arraydecay, i32 2) #8, !dbg !8797
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8798
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8798
  %conv = zext i8 %2 to i16, !dbg !8799
  %conv2 = zext i16 %conv to i32, !dbg !8799
  %and = and i32 %conv2, 15, !dbg !8800
  %shl = shl i32 %and, 8, !dbg !8801
  %arrayidx3 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !8802
  %3 = load i8, i8* %arrayidx3, align 1, !dbg !8802
  %conv4 = zext i8 %3 to i32, !dbg !8802
  %and5 = and i32 %conv4, 255, !dbg !8803
  %conv6 = trunc i32 %and5 to i16, !dbg !8804
  %conv7 = zext i16 %conv6 to i32, !dbg !8804
  %or = or i32 %shl, %conv7, !dbg !8805
  %shl8 = shl i32 %or, 4, !dbg !8806
  %conv9 = trunc i32 %shl8 to i16, !dbg !8807
  ret i16 %conv9, !dbg !8808
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @cxd2841er_read_agc_gain_i(%struct.cxd2841er_priv* %priv, i8 zeroext %delsys) #0 !dbg !8809 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %delsys.addr = alloca i8, align 1
  %data = alloca [2 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !8810, metadata !DIExpression()), !dbg !8811
  store i8 %delsys, i8* %delsys.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delsys.addr, metadata !8812, metadata !DIExpression()), !dbg !8813
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !8814, metadata !DIExpression()), !dbg !8815
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8816
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 96) #8, !dbg !8817
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8818
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8819
  %call1 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %1, i8 zeroext 1, i8 zeroext 38, i8* %arraydecay, i32 2) #8, !dbg !8820
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8821
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8821
  %conv = zext i8 %2 to i16, !dbg !8822
  %conv2 = zext i16 %conv to i32, !dbg !8822
  %and = and i32 %conv2, 15, !dbg !8823
  %shl = shl i32 %and, 8, !dbg !8824
  %arrayidx3 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !8825
  %3 = load i8, i8* %arrayidx3, align 1, !dbg !8825
  %conv4 = zext i8 %3 to i32, !dbg !8825
  %and5 = and i32 %conv4, 255, !dbg !8826
  %conv6 = trunc i32 %and5 to i16, !dbg !8827
  %conv7 = zext i16 %conv6 to i32, !dbg !8827
  %or = or i32 %shl, %conv7, !dbg !8828
  %shl8 = shl i32 %or, 4, !dbg !8829
  %conv9 = trunc i32 %shl8 to i16, !dbg !8830
  ret i16 %conv9, !dbg !8831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @cxd2841er_read_agc_gain_s(%struct.cxd2841er_priv* %priv) #0 !dbg !8832 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %data = alloca [2 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !8835, metadata !DIExpression()), !dbg !8836
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !8837, metadata !DIExpression()), !dbg !8838
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8839
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext -96) #8, !dbg !8840
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8841
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8842
  %call1 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %1, i8 zeroext 1, i8 zeroext 31, i8* %arraydecay, i32 2) #8, !dbg !8843
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8844
  %2 = load i8, i8* %arrayidx, align 1, !dbg !8844
  %conv = zext i8 %2 to i16, !dbg !8845
  %conv2 = zext i16 %conv to i32, !dbg !8845
  %and = and i32 %conv2, 31, !dbg !8846
  %shl = shl i32 %and, 8, !dbg !8847
  %arrayidx3 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !8848
  %3 = load i8, i8* %arrayidx3, align 1, !dbg !8848
  %conv4 = zext i8 %3 to i32, !dbg !8848
  %and5 = and i32 %conv4, 255, !dbg !8849
  %conv6 = trunc i32 %and5 to i16, !dbg !8850
  %conv7 = zext i16 %conv6 to i32, !dbg !8850
  %or = or i32 %shl, %conv7, !dbg !8851
  %shl8 = shl i32 %or, 3, !dbg !8852
  %conv9 = trunc i32 %shl8 to i16, !dbg !8853
  ret i16 %conv9, !dbg !8854
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !8855 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !8856, metadata !DIExpression()), !dbg !8857
  %0 = load i32, i32* %m.addr, align 4, !dbg !8858
  %conv = zext i32 %0 to i64, !dbg !8858
  %add = add i64 %conv, 4, !dbg !8859
  %sub = sub i64 %add, 1, !dbg !8860
  %div = sdiv i64 %sub, 4, !dbg !8861
  ret i64 %div, !dbg !8862
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_snr_c(%struct.cxd2841er_priv* %priv, i32* %snr) #0 !dbg !8863 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %snr.addr = alloca i32*, align 8
  %reg = alloca i32, align 4
  %data = alloca [2 x i8], align 1
  %qam = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !8866, metadata !DIExpression()), !dbg !8867
  store i32* %snr, i32** %snr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %snr.addr, metadata !8868, metadata !DIExpression()), !dbg !8869
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !8870, metadata !DIExpression()), !dbg !8871
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !8872, metadata !DIExpression()), !dbg !8873
  call void @llvm.dbg.declare(metadata i32* %qam, metadata !8874, metadata !DIExpression()), !dbg !8875
  store i32 0, i32* %qam, align 4, !dbg !8875
  %0 = load i32*, i32** %snr.addr, align 8, !dbg !8876
  store i32 0, i32* %0, align 4, !dbg !8877
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8878
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 5, !dbg !8880
  %2 = load i32, i32* %state, align 8, !dbg !8880
  %cmp = icmp ne i32 %2, 4, !dbg !8881
  br i1 %cmp, label %if.then, label %if.end, !dbg !8882

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8883
  br label %return, !dbg !8883

if.end:                                           ; preds = %entry
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8885
  %call = call i32 @cxd2841er_freeze_regs(%struct.cxd2841er_priv* %3) #8, !dbg !8886
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8887
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 64) #8, !dbg !8888
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8889
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8890
  %call2 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 25, i8* %arraydecay, i32 1) #8, !dbg !8891
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8892
  %6 = load i8, i8* %arrayidx, align 1, !dbg !8892
  %conv = zext i8 %6 to i32, !dbg !8892
  %and = and i32 %conv, 7, !dbg !8893
  store i32 %and, i32* %qam, align 4, !dbg !8894
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8895
  %arraydecay3 = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8896
  %call4 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %7, i8 zeroext 1, i8 zeroext 76, i8* %arraydecay3, i32 2) #8, !dbg !8897
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8898
  %call5 = call i32 @cxd2841er_unfreeze_regs(%struct.cxd2841er_priv* %8) #8, !dbg !8899
  %arrayidx6 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8900
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !8900
  %conv7 = zext i8 %9 to i32, !dbg !8900
  %and8 = and i32 %conv7, 31, !dbg !8901
  %shl = shl i32 %and8, 8, !dbg !8902
  %arrayidx9 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !8903
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !8903
  %conv10 = zext i8 %10 to i32, !dbg !8904
  %or = or i32 %shl, %conv10, !dbg !8905
  store i32 %or, i32* %reg, align 4, !dbg !8906
  %11 = load i32, i32* %reg, align 4, !dbg !8907
  %cmp11 = icmp eq i32 %11, 0, !dbg !8909
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !8910

if.then13:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8911
  br label %return, !dbg !8911

if.end14:                                         ; preds = %if.end
  %12 = load i32, i32* %qam, align 4, !dbg !8913
  switch i32 %12, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb20
    i32 3, label %sw.bb20
  ], !dbg !8914

sw.bb:                                            ; preds = %if.end14, %if.end14, %if.end14
  %13 = load i32, i32* %reg, align 4, !dbg !8915
  %cmp15 = icmp ult i32 %13, 126, !dbg !8918
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !8919

if.then17:                                        ; preds = %sw.bb
  store i32 126, i32* %reg, align 4, !dbg !8920
  br label %if.end18, !dbg !8921

if.end18:                                         ; preds = %if.then17, %sw.bb
  %14 = load i32, i32* %reg, align 4, !dbg !8922
  %call19 = call i32 @sony_log(i32 %14) #8, !dbg !8923
  %mul = mul i32 -95, %call19, !dbg !8924
  %add = add i32 %mul, 95941, !dbg !8925
  %15 = load i32*, i32** %snr.addr, align 8, !dbg !8926
  store i32 %add, i32* %15, align 4, !dbg !8927
  br label %sw.epilog, !dbg !8928

sw.bb20:                                          ; preds = %if.end14, %if.end14
  %16 = load i32, i32* %reg, align 4, !dbg !8929
  %cmp21 = icmp ult i32 %16, 69, !dbg !8931
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !8932

if.then23:                                        ; preds = %sw.bb20
  store i32 69, i32* %reg, align 4, !dbg !8933
  br label %if.end24, !dbg !8934

if.end24:                                         ; preds = %if.then23, %sw.bb20
  %17 = load i32, i32* %reg, align 4, !dbg !8935
  %call25 = call i32 @sony_log(i32 %17) #8, !dbg !8936
  %mul26 = mul i32 -88, %call25, !dbg !8937
  %add27 = add i32 %mul26, 86999, !dbg !8938
  %18 = load i32*, i32** %snr.addr, align 8, !dbg !8939
  store i32 %add27, i32* %18, align 4, !dbg !8940
  br label %sw.epilog, !dbg !8941

sw.default:                                       ; preds = %if.end14
  store i32 -22, i32* %retval, align 4, !dbg !8942
  br label %return, !dbg !8942

sw.epilog:                                        ; preds = %if.end24, %if.end18
  store i32 0, i32* %retval, align 4, !dbg !8943
  br label %return, !dbg !8943

return:                                           ; preds = %sw.epilog, %sw.default, %if.then13, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !8944
  ret i32 %19, !dbg !8944
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_snr_t(%struct.cxd2841er_priv* %priv, i32* %snr) #0 !dbg !8945 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %snr.addr = alloca i32*, align 8
  %reg = alloca i32, align 4
  %data = alloca [2 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !8946, metadata !DIExpression()), !dbg !8947
  store i32* %snr, i32** %snr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %snr.addr, metadata !8948, metadata !DIExpression()), !dbg !8949
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !8950, metadata !DIExpression()), !dbg !8951
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !8952, metadata !DIExpression()), !dbg !8953
  %0 = load i32*, i32** %snr.addr, align 8, !dbg !8954
  store i32 0, i32* %0, align 4, !dbg !8955
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8956
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 5, !dbg !8958
  %2 = load i32, i32* %state, align 8, !dbg !8958
  %cmp = icmp ne i32 %2, 4, !dbg !8959
  br i1 %cmp, label %if.then, label %if.end, !dbg !8960

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !8961
  br label %return, !dbg !8961

if.end:                                           ; preds = %entry
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8963
  %call = call i32 @cxd2841er_freeze_regs(%struct.cxd2841er_priv* %3) #8, !dbg !8964
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8965
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !8966
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8967
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8968
  %call2 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 40, i8* %arraydecay, i32 2) #8, !dbg !8969
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !8970
  %call3 = call i32 @cxd2841er_unfreeze_regs(%struct.cxd2841er_priv* %6) #8, !dbg !8971
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !8972
  %7 = load i8, i8* %arrayidx, align 1, !dbg !8972
  %conv = zext i8 %7 to i32, !dbg !8973
  %shl = shl i32 %conv, 8, !dbg !8974
  %arrayidx4 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !8975
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !8975
  %conv5 = zext i8 %8 to i32, !dbg !8976
  %or = or i32 %shl, %conv5, !dbg !8977
  store i32 %or, i32* %reg, align 4, !dbg !8978
  %9 = load i32, i32* %reg, align 4, !dbg !8979
  %cmp6 = icmp eq i32 %9, 0, !dbg !8981
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !8982

if.then8:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8983
  br label %return, !dbg !8983

if.end9:                                          ; preds = %if.end
  %10 = load i32, i32* %reg, align 4, !dbg !8985
  %cmp10 = icmp ugt i32 %10, 4996, !dbg !8987
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !8988

if.then12:                                        ; preds = %if.end9
  store i32 4996, i32* %reg, align 4, !dbg !8989
  br label %if.end13, !dbg !8990

if.end13:                                         ; preds = %if.then12, %if.end9
  %11 = load i32, i32* %reg, align 4, !dbg !8991
  %call14 = call i32 @intlog10(i32 %11) #8, !dbg !8991
  %conv15 = zext i32 %call14 to i64, !dbg !8991
  %mul = mul i64 %conv15, 100, !dbg !8991
  %shr = lshr i64 %mul, 24, !dbg !8991
  %conv16 = trunc i64 %shr to i32, !dbg !8991
  %12 = load i32, i32* %reg, align 4, !dbg !8992
  %sub = sub i32 5350, %12, !dbg !8992
  %call17 = call i32 @intlog10(i32 %sub) #8, !dbg !8992
  %conv18 = zext i32 %call17 to i64, !dbg !8992
  %mul19 = mul i64 %conv18, 100, !dbg !8992
  %shr20 = lshr i64 %mul19, 24, !dbg !8992
  %conv21 = trunc i64 %shr20 to i32, !dbg !8992
  %sub22 = sub i32 %conv16, %conv21, !dbg !8993
  %add = add i32 %sub22, 285, !dbg !8994
  %mul23 = mul i32 100, %add, !dbg !8995
  %13 = load i32*, i32** %snr.addr, align 8, !dbg !8996
  store i32 %mul23, i32* %13, align 4, !dbg !8997
  store i32 0, i32* %retval, align 4, !dbg !8998
  br label %return, !dbg !8998

return:                                           ; preds = %if.end13, %if.then8, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !8999
  ret i32 %14, !dbg !8999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_snr_t2(%struct.cxd2841er_priv* %priv, i32* %snr) #0 !dbg !9000 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %snr.addr = alloca i32*, align 8
  %reg = alloca i32, align 4
  %data = alloca [2 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9001, metadata !DIExpression()), !dbg !9002
  store i32* %snr, i32** %snr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %snr.addr, metadata !9003, metadata !DIExpression()), !dbg !9004
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !9005, metadata !DIExpression()), !dbg !9006
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !9007, metadata !DIExpression()), !dbg !9008
  %0 = load i32*, i32** %snr.addr, align 8, !dbg !9009
  store i32 0, i32* %0, align 4, !dbg !9010
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9011
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 5, !dbg !9013
  %2 = load i32, i32* %state, align 8, !dbg !9013
  %cmp = icmp ne i32 %2, 4, !dbg !9014
  br i1 %cmp, label %if.then, label %if.end, !dbg !9015

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9016
  br label %return, !dbg !9016

if.end:                                           ; preds = %entry
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9018
  %call = call i32 @cxd2841er_freeze_regs(%struct.cxd2841er_priv* %3) #8, !dbg !9019
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9020
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 32) #8, !dbg !9021
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9022
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9023
  %call2 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 40, i8* %arraydecay, i32 2) #8, !dbg !9024
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9025
  %call3 = call i32 @cxd2841er_unfreeze_regs(%struct.cxd2841er_priv* %6) #8, !dbg !9026
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9027
  %7 = load i8, i8* %arrayidx, align 1, !dbg !9027
  %conv = zext i8 %7 to i32, !dbg !9028
  %shl = shl i32 %conv, 8, !dbg !9029
  %arrayidx4 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !9030
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !9030
  %conv5 = zext i8 %8 to i32, !dbg !9031
  %or = or i32 %shl, %conv5, !dbg !9032
  store i32 %or, i32* %reg, align 4, !dbg !9033
  %9 = load i32, i32* %reg, align 4, !dbg !9034
  %cmp6 = icmp eq i32 %9, 0, !dbg !9036
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !9037

if.then8:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9038
  br label %return, !dbg !9038

if.end9:                                          ; preds = %if.end
  %10 = load i32, i32* %reg, align 4, !dbg !9040
  %cmp10 = icmp ugt i32 %10, 10876, !dbg !9042
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !9043

if.then12:                                        ; preds = %if.end9
  store i32 10876, i32* %reg, align 4, !dbg !9044
  br label %if.end13, !dbg !9045

if.end13:                                         ; preds = %if.then12, %if.end9
  %11 = load i32, i32* %reg, align 4, !dbg !9046
  %call14 = call i32 @intlog10(i32 %11) #8, !dbg !9046
  %conv15 = zext i32 %call14 to i64, !dbg !9046
  %mul = mul i64 %conv15, 100, !dbg !9046
  %shr = lshr i64 %mul, 24, !dbg !9046
  %conv16 = trunc i64 %shr to i32, !dbg !9046
  %12 = load i32, i32* %reg, align 4, !dbg !9047
  %sub = sub i32 12600, %12, !dbg !9047
  %call17 = call i32 @intlog10(i32 %sub) #8, !dbg !9047
  %conv18 = zext i32 %call17 to i64, !dbg !9047
  %mul19 = mul i64 %conv18, 100, !dbg !9047
  %shr20 = lshr i64 %mul19, 24, !dbg !9047
  %conv21 = trunc i64 %shr20 to i32, !dbg !9047
  %sub22 = sub i32 %conv16, %conv21, !dbg !9048
  %add = add i32 %sub22, 320, !dbg !9049
  %mul23 = mul i32 100, %add, !dbg !9050
  %13 = load i32*, i32** %snr.addr, align 8, !dbg !9051
  store i32 %mul23, i32* %13, align 4, !dbg !9052
  store i32 0, i32* %retval, align 4, !dbg !9053
  br label %return, !dbg !9053

return:                                           ; preds = %if.end13, %if.then8, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !9054
  ret i32 %14, !dbg !9054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_snr_i(%struct.cxd2841er_priv* %priv, i32* %snr) #0 !dbg !9055 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %snr.addr = alloca i32*, align 8
  %reg = alloca i32, align 4
  %data = alloca [2 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9056, metadata !DIExpression()), !dbg !9057
  store i32* %snr, i32** %snr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %snr.addr, metadata !9058, metadata !DIExpression()), !dbg !9059
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !9060, metadata !DIExpression()), !dbg !9061
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !9062, metadata !DIExpression()), !dbg !9063
  %0 = load i32*, i32** %snr.addr, align 8, !dbg !9064
  store i32 0, i32* %0, align 4, !dbg !9065
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9066
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 5, !dbg !9068
  %2 = load i32, i32* %state, align 8, !dbg !9068
  %cmp = icmp ne i32 %2, 4, !dbg !9069
  br i1 %cmp, label %if.then, label %if.end, !dbg !9070

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9071
  br label %return, !dbg !9071

if.end:                                           ; preds = %entry
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9073
  %call = call i32 @cxd2841er_freeze_regs(%struct.cxd2841er_priv* %3) #8, !dbg !9074
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9075
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 96) #8, !dbg !9076
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9077
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9078
  %call2 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 40, i8* %arraydecay, i32 2) #8, !dbg !9079
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9080
  %call3 = call i32 @cxd2841er_unfreeze_regs(%struct.cxd2841er_priv* %6) #8, !dbg !9081
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9082
  %7 = load i8, i8* %arrayidx, align 1, !dbg !9082
  %conv = zext i8 %7 to i32, !dbg !9083
  %shl = shl i32 %conv, 8, !dbg !9084
  %arrayidx4 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !9085
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !9085
  %conv5 = zext i8 %8 to i32, !dbg !9086
  %or = or i32 %shl, %conv5, !dbg !9087
  store i32 %or, i32* %reg, align 4, !dbg !9088
  %9 = load i32, i32* %reg, align 4, !dbg !9089
  %cmp6 = icmp eq i32 %9, 0, !dbg !9091
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !9092

if.then8:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9093
  br label %return, !dbg !9093

if.end9:                                          ; preds = %if.end
  %10 = load i32, i32* %reg, align 4, !dbg !9095
  %call10 = call i32 @intlog10(i32 %10) #8, !dbg !9096
  %shr = lshr i32 %call10, 24, !dbg !9097
  %mul = mul i32 10000, %shr, !dbg !9098
  %sub = sub i32 %mul, 9031, !dbg !9099
  %11 = load i32*, i32** %snr.addr, align 8, !dbg !9100
  store i32 %sub, i32* %11, align 4, !dbg !9101
  store i32 0, i32* %retval, align 4, !dbg !9102
  br label %return, !dbg !9102

return:                                           ; preds = %if.end9, %if.then8, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !9103
  ret i32 %12, !dbg !9103
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_dvbs_read_snr(%struct.cxd2841er_priv* %priv, i8 zeroext %delsys, i32* %snr) #0 !dbg !4469 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %delsys.addr = alloca i8, align 1
  %snr.addr = alloca i32*, align 8
  %data = alloca [3 x i8], align 1
  %res = alloca i32, align 4
  %value = alloca i32, align 4
  %min_index = alloca i32, align 4
  %max_index = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9104, metadata !DIExpression()), !dbg !9105
  store i8 %delsys, i8* %delsys.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %delsys.addr, metadata !9106, metadata !DIExpression()), !dbg !9107
  store i32* %snr, i32** %snr.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %snr.addr, metadata !9108, metadata !DIExpression()), !dbg !9109
  call void @llvm.dbg.declare(metadata [3 x i8]* %data, metadata !9110, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.declare(metadata i32* %res, metadata !9112, metadata !DIExpression()), !dbg !9113
  store i32 0, i32* %res, align 4, !dbg !9113
  call void @llvm.dbg.declare(metadata i32* %value, metadata !9114, metadata !DIExpression()), !dbg !9115
  call void @llvm.dbg.declare(metadata i32* %min_index, metadata !9116, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.declare(metadata i32* %max_index, metadata !9118, metadata !DIExpression()), !dbg !9119
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9120, metadata !DIExpression()), !dbg !9121
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9122
  %call = call i32 @cxd2841er_freeze_regs(%struct.cxd2841er_priv* %0) #8, !dbg !9123
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9124
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %1, i8 zeroext 1, i8 zeroext 0, i8 zeroext -95) #8, !dbg !9125
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9126
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9127
  %call2 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext 16, i8* %arraydecay, i32 3) #8, !dbg !9128
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9129
  %call3 = call i32 @cxd2841er_unfreeze_regs(%struct.cxd2841er_priv* %3) #8, !dbg !9130
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9131
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9131
  %conv = zext i8 %4 to i32, !dbg !9131
  %and = and i32 %conv, 1, !dbg !9133
  %tobool = icmp ne i32 %and, 0, !dbg !9133
  br i1 %tobool, label %if.then, label %if.else70, !dbg !9134

if.then:                                          ; preds = %entry
  %arrayidx4 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !9135
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !9135
  %conv5 = zext i8 %5 to i32, !dbg !9135
  %and6 = and i32 %conv5, 31, !dbg !9137
  %shl = shl i32 %and6, 8, !dbg !9138
  %arrayidx7 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 2, !dbg !9139
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !9139
  %conv8 = zext i8 %6 to i32, !dbg !9139
  %and9 = and i32 %conv8, 255, !dbg !9140
  %or = or i32 %shl, %and9, !dbg !9141
  store i32 %or, i32* %value, align 4, !dbg !9142
  store i32 0, i32* %min_index, align 4, !dbg !9143
  %7 = load i8, i8* %delsys.addr, align 1, !dbg !9144
  %conv10 = zext i8 %7 to i32, !dbg !9144
  %cmp = icmp eq i32 %conv10, 5, !dbg !9146
  br i1 %cmp, label %if.then12, label %if.else, !dbg !9147

if.then12:                                        ; preds = %if.then
  store %struct.cxd2841er_cnr_data* getelementptr inbounds ([191 x %struct.cxd2841er_cnr_data], [191 x %struct.cxd2841er_cnr_data]* @s_cn_data, i64 0, i64 0), %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9148
  store i32 190, i32* %max_index, align 4, !dbg !9150
  br label %if.end, !dbg !9151

if.else:                                          ; preds = %if.then
  store %struct.cxd2841er_cnr_data* getelementptr inbounds ([192 x %struct.cxd2841er_cnr_data], [192 x %struct.cxd2841er_cnr_data]* @s2_cn_data, i64 0, i64 0), %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9152
  store i32 191, i32* %max_index, align 4, !dbg !9154
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then12
  %8 = load i32, i32* %value, align 4, !dbg !9155
  %9 = load %struct.cxd2841er_cnr_data*, %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9157
  %10 = load i32, i32* %min_index, align 4, !dbg !9158
  %idxprom = sext i32 %10 to i64, !dbg !9157
  %arrayidx13 = getelementptr %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %9, i64 %idxprom, !dbg !9157
  %value14 = getelementptr inbounds %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %arrayidx13, i32 0, i32 0, !dbg !9159
  %11 = load i32, i32* %value14, align 4, !dbg !9159
  %cmp15 = icmp uge i32 %8, %11, !dbg !9160
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !9161

if.then17:                                        ; preds = %if.end
  %12 = load %struct.cxd2841er_cnr_data*, %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9162
  %13 = load i32, i32* %min_index, align 4, !dbg !9164
  %idxprom18 = sext i32 %13 to i64, !dbg !9162
  %arrayidx19 = getelementptr %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %12, i64 %idxprom18, !dbg !9162
  %cnr_x1000 = getelementptr inbounds %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %arrayidx19, i32 0, i32 1, !dbg !9165
  %14 = load i32, i32* %cnr_x1000, align 4, !dbg !9165
  store i32 %14, i32* %res, align 4, !dbg !9166
  br label %done, !dbg !9167

if.end20:                                         ; preds = %if.end
  %15 = load i32, i32* %value, align 4, !dbg !9168
  %16 = load %struct.cxd2841er_cnr_data*, %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9170
  %17 = load i32, i32* %max_index, align 4, !dbg !9171
  %idxprom21 = sext i32 %17 to i64, !dbg !9170
  %arrayidx22 = getelementptr %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %16, i64 %idxprom21, !dbg !9170
  %value23 = getelementptr inbounds %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %arrayidx22, i32 0, i32 0, !dbg !9172
  %18 = load i32, i32* %value23, align 4, !dbg !9172
  %cmp24 = icmp ule i32 %15, %18, !dbg !9173
  br i1 %cmp24, label %if.then26, label %if.end30, !dbg !9174

if.then26:                                        ; preds = %if.end20
  %19 = load %struct.cxd2841er_cnr_data*, %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9175
  %20 = load i32, i32* %max_index, align 4, !dbg !9177
  %idxprom27 = sext i32 %20 to i64, !dbg !9175
  %arrayidx28 = getelementptr %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %19, i64 %idxprom27, !dbg !9175
  %cnr_x100029 = getelementptr inbounds %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %arrayidx28, i32 0, i32 1, !dbg !9178
  %21 = load i32, i32* %cnr_x100029, align 4, !dbg !9178
  store i32 %21, i32* %res, align 4, !dbg !9179
  br label %done, !dbg !9180

if.end30:                                         ; preds = %if.end20
  br label %while.cond, !dbg !9181

while.cond:                                       ; preds = %if.end69, %if.end30
  %22 = load i32, i32* %max_index, align 4, !dbg !9182
  %23 = load i32, i32* %min_index, align 4, !dbg !9183
  %sub = sub i32 %22, %23, !dbg !9184
  %cmp31 = icmp sgt i32 %sub, 1, !dbg !9185
  br i1 %cmp31, label %while.body, label %while.end, !dbg !9181

while.body:                                       ; preds = %while.cond
  %24 = load i32, i32* %max_index, align 4, !dbg !9186
  %25 = load i32, i32* %min_index, align 4, !dbg !9188
  %add = add i32 %24, %25, !dbg !9189
  %div = sdiv i32 %add, 2, !dbg !9190
  store i32 %div, i32* %index, align 4, !dbg !9191
  %26 = load i32, i32* %value, align 4, !dbg !9192
  %27 = load %struct.cxd2841er_cnr_data*, %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9194
  %28 = load i32, i32* %index, align 4, !dbg !9195
  %idxprom33 = sext i32 %28 to i64, !dbg !9194
  %arrayidx34 = getelementptr %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %27, i64 %idxprom33, !dbg !9194
  %value35 = getelementptr inbounds %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %arrayidx34, i32 0, i32 0, !dbg !9196
  %29 = load i32, i32* %value35, align 4, !dbg !9196
  %cmp36 = icmp eq i32 %26, %29, !dbg !9197
  br i1 %cmp36, label %if.then38, label %if.else42, !dbg !9198

if.then38:                                        ; preds = %while.body
  %30 = load %struct.cxd2841er_cnr_data*, %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9199
  %31 = load i32, i32* %index, align 4, !dbg !9201
  %idxprom39 = sext i32 %31 to i64, !dbg !9199
  %arrayidx40 = getelementptr %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %30, i64 %idxprom39, !dbg !9199
  %cnr_x100041 = getelementptr inbounds %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %arrayidx40, i32 0, i32 1, !dbg !9202
  %32 = load i32, i32* %cnr_x100041, align 4, !dbg !9202
  store i32 %32, i32* %res, align 4, !dbg !9203
  br label %done, !dbg !9204

if.else42:                                        ; preds = %while.body
  %33 = load i32, i32* %value, align 4, !dbg !9205
  %34 = load %struct.cxd2841er_cnr_data*, %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9207
  %35 = load i32, i32* %index, align 4, !dbg !9208
  %idxprom43 = sext i32 %35 to i64, !dbg !9207
  %arrayidx44 = getelementptr %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %34, i64 %idxprom43, !dbg !9207
  %value45 = getelementptr inbounds %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %arrayidx44, i32 0, i32 0, !dbg !9209
  %36 = load i32, i32* %value45, align 4, !dbg !9209
  %cmp46 = icmp ugt i32 %33, %36, !dbg !9210
  br i1 %cmp46, label %if.then48, label %if.else49, !dbg !9211

if.then48:                                        ; preds = %if.else42
  %37 = load i32, i32* %index, align 4, !dbg !9212
  store i32 %37, i32* %max_index, align 4, !dbg !9213
  br label %if.end50, !dbg !9214

if.else49:                                        ; preds = %if.else42
  %38 = load i32, i32* %index, align 4, !dbg !9215
  store i32 %38, i32* %min_index, align 4, !dbg !9216
  br label %if.end50

if.end50:                                         ; preds = %if.else49, %if.then48
  br label %if.end51

if.end51:                                         ; preds = %if.end50
  %39 = load i32, i32* %max_index, align 4, !dbg !9217
  %40 = load i32, i32* %min_index, align 4, !dbg !9219
  %sub52 = sub i32 %39, %40, !dbg !9220
  %cmp53 = icmp sle i32 %sub52, 1, !dbg !9221
  br i1 %cmp53, label %if.then55, label %if.end69, !dbg !9222

if.then55:                                        ; preds = %if.end51
  %41 = load i32, i32* %value, align 4, !dbg !9223
  %42 = load %struct.cxd2841er_cnr_data*, %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9226
  %43 = load i32, i32* %max_index, align 4, !dbg !9227
  %idxprom56 = sext i32 %43 to i64, !dbg !9226
  %arrayidx57 = getelementptr %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %42, i64 %idxprom56, !dbg !9226
  %value58 = getelementptr inbounds %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %arrayidx57, i32 0, i32 0, !dbg !9228
  %44 = load i32, i32* %value58, align 4, !dbg !9228
  %cmp59 = icmp eq i32 %41, %44, !dbg !9229
  br i1 %cmp59, label %if.then61, label %if.else65, !dbg !9230

if.then61:                                        ; preds = %if.then55
  %45 = load %struct.cxd2841er_cnr_data*, %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9231
  %46 = load i32, i32* %max_index, align 4, !dbg !9233
  %idxprom62 = sext i32 %46 to i64, !dbg !9231
  %arrayidx63 = getelementptr %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %45, i64 %idxprom62, !dbg !9231
  %cnr_x100064 = getelementptr inbounds %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %arrayidx63, i32 0, i32 1, !dbg !9234
  %47 = load i32, i32* %cnr_x100064, align 4, !dbg !9234
  store i32 %47, i32* %res, align 4, !dbg !9235
  br label %done, !dbg !9236

if.else65:                                        ; preds = %if.then55
  %48 = load %struct.cxd2841er_cnr_data*, %struct.cxd2841er_cnr_data** @cxd2841er_dvbs_read_snr.cn_data, align 8, !dbg !9237
  %49 = load i32, i32* %min_index, align 4, !dbg !9239
  %idxprom66 = sext i32 %49 to i64, !dbg !9237
  %arrayidx67 = getelementptr %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %48, i64 %idxprom66, !dbg !9237
  %cnr_x100068 = getelementptr inbounds %struct.cxd2841er_cnr_data, %struct.cxd2841er_cnr_data* %arrayidx67, i32 0, i32 1, !dbg !9240
  %50 = load i32, i32* %cnr_x100068, align 4, !dbg !9240
  store i32 %50, i32* %res, align 4, !dbg !9241
  br label %done, !dbg !9242

if.end69:                                         ; preds = %if.end51
  br label %while.cond, !dbg !9181, !llvm.loop !9243

while.end:                                        ; preds = %while.cond
  br label %if.end71, !dbg !9245

if.else70:                                        ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9246
  br label %return, !dbg !9246

if.end71:                                         ; preds = %while.end
  br label %done, !dbg !9248

done:                                             ; preds = %if.end71, %if.else65, %if.then61, %if.then38, %if.then26, %if.then17
  call void @llvm.dbg.label(metadata !9249), !dbg !9250
  %51 = load i32, i32* %res, align 4, !dbg !9251
  %52 = load i32*, i32** %snr.addr, align 8, !dbg !9252
  store i32 %51, i32* %52, align 4, !dbg !9253
  store i32 0, i32* %retval, align 4, !dbg !9254
  br label %return, !dbg !9254

return:                                           ; preds = %done, %if.else70
  %53 = load i32, i32* %retval, align 4, !dbg !9255
  ret i32 %53, !dbg !9255
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_freeze_regs(%struct.cxd2841er_priv* %priv) #0 !dbg !9256 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9259
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1) #8, !dbg !9260
  ret i32 0, !dbg !9261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_unfreeze_regs(%struct.cxd2841er_priv* %priv) #0 !dbg !9262 {
entry:
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9263, metadata !DIExpression()), !dbg !9264
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9265
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0) #8, !dbg !9266
  ret i32 0, !dbg !9267
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sony_log(i32 %x) #0 !dbg !9268 {
entry:
  %x.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !9271, metadata !DIExpression()), !dbg !9272
  %0 = load i32, i32* %x.addr, align 4, !dbg !9273
  %call = call i32 @intlog2(i32 %0) #8, !dbg !9274
  %shr = lshr i32 %call, 16, !dbg !9275
  %mul = mul i32 39, %shr, !dbg !9276
  %add = add i32 %mul, 72, !dbg !9277
  %div = udiv i32 %add, 144, !dbg !9278
  ret i32 %div, !dbg !9279
}

; Function Attrs: noredzone
declare dso_local i32 @intlog2(i32) #3

; Function Attrs: noredzone
declare dso_local i32 @intlog10(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_packet_errors_c(%struct.cxd2841er_priv* %priv, i32* %penum) #0 !dbg !9280 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %penum.addr = alloca i32*, align 8
  %data = alloca [3 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9281, metadata !DIExpression()), !dbg !9282
  store i32* %penum, i32** %penum.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %penum.addr, metadata !9283, metadata !DIExpression()), !dbg !9284
  call void @llvm.dbg.declare(metadata [3 x i8]* %data, metadata !9285, metadata !DIExpression()), !dbg !9286
  %0 = load i32*, i32** %penum.addr, align 8, !dbg !9287
  store i32 0, i32* %0, align 4, !dbg !9288
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9289
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 5, !dbg !9291
  %2 = load i32, i32* %state, align 8, !dbg !9291
  %cmp = icmp ne i32 %2, 4, !dbg !9292
  br i1 %cmp, label %if.then, label %if.end, !dbg !9293

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9294
  br label %return, !dbg !9294

if.end:                                           ; preds = %entry
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9296
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 0, i8 zeroext 64) #8, !dbg !9297
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9298
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9299
  %call1 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext -22, i8* %arraydecay, i32 3) #8, !dbg !9300
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 2, !dbg !9301
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9301
  %conv = zext i8 %5 to i32, !dbg !9301
  %and = and i32 %conv, 1, !dbg !9303
  %tobool = icmp ne i32 %and, 0, !dbg !9303
  br i1 %tobool, label %if.then2, label %if.end7, !dbg !9304

if.then2:                                         ; preds = %if.end
  %arrayidx3 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9305
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !9305
  %conv4 = zext i8 %6 to i32, !dbg !9306
  %shl = shl i32 %conv4, 8, !dbg !9307
  %arrayidx5 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !9308
  %7 = load i8, i8* %arrayidx5, align 1, !dbg !9308
  %conv6 = zext i8 %7 to i32, !dbg !9309
  %or = or i32 %shl, %conv6, !dbg !9310
  %8 = load i32*, i32** %penum.addr, align 8, !dbg !9311
  store i32 %or, i32* %8, align 4, !dbg !9312
  br label %if.end7, !dbg !9313

if.end7:                                          ; preds = %if.then2, %if.end
  store i32 0, i32* %retval, align 4, !dbg !9314
  br label %return, !dbg !9314

return:                                           ; preds = %if.end7, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9315
  ret i32 %9, !dbg !9315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_packet_errors_t(%struct.cxd2841er_priv* %priv, i32* %penum) #0 !dbg !9316 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %penum.addr = alloca i32*, align 8
  %data = alloca [3 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9317, metadata !DIExpression()), !dbg !9318
  store i32* %penum, i32** %penum.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %penum.addr, metadata !9319, metadata !DIExpression()), !dbg !9320
  call void @llvm.dbg.declare(metadata [3 x i8]* %data, metadata !9321, metadata !DIExpression()), !dbg !9322
  %0 = load i32*, i32** %penum.addr, align 8, !dbg !9323
  store i32 0, i32* %0, align 4, !dbg !9324
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9325
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 5, !dbg !9327
  %2 = load i32, i32* %state, align 8, !dbg !9327
  %cmp = icmp ne i32 %2, 4, !dbg !9328
  br i1 %cmp, label %if.then, label %if.end, !dbg !9329

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9330
  br label %return, !dbg !9330

if.end:                                           ; preds = %entry
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9332
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !9333
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9334
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9335
  %call1 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext -22, i8* %arraydecay, i32 3) #8, !dbg !9336
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 2, !dbg !9337
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9337
  %conv = zext i8 %5 to i32, !dbg !9337
  %and = and i32 %conv, 1, !dbg !9339
  %tobool = icmp ne i32 %and, 0, !dbg !9339
  br i1 %tobool, label %if.then2, label %if.end7, !dbg !9340

if.then2:                                         ; preds = %if.end
  %arrayidx3 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9341
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !9341
  %conv4 = zext i8 %6 to i32, !dbg !9342
  %shl = shl i32 %conv4, 8, !dbg !9343
  %arrayidx5 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !9344
  %7 = load i8, i8* %arrayidx5, align 1, !dbg !9344
  %conv6 = zext i8 %7 to i32, !dbg !9345
  %or = or i32 %shl, %conv6, !dbg !9346
  %8 = load i32*, i32** %penum.addr, align 8, !dbg !9347
  store i32 %or, i32* %8, align 4, !dbg !9348
  br label %if.end7, !dbg !9349

if.end7:                                          ; preds = %if.then2, %if.end
  store i32 0, i32* %retval, align 4, !dbg !9350
  br label %return, !dbg !9350

return:                                           ; preds = %if.end7, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9351
  ret i32 %9, !dbg !9351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_packet_errors_t2(%struct.cxd2841er_priv* %priv, i32* %penum) #0 !dbg !9352 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %penum.addr = alloca i32*, align 8
  %data = alloca [3 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9353, metadata !DIExpression()), !dbg !9354
  store i32* %penum, i32** %penum.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %penum.addr, metadata !9355, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.declare(metadata [3 x i8]* %data, metadata !9357, metadata !DIExpression()), !dbg !9358
  %0 = load i32*, i32** %penum.addr, align 8, !dbg !9359
  store i32 0, i32* %0, align 4, !dbg !9360
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9361
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 5, !dbg !9363
  %2 = load i32, i32* %state, align 8, !dbg !9363
  %cmp = icmp ne i32 %2, 4, !dbg !9364
  br i1 %cmp, label %if.then, label %if.end, !dbg !9365

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9366
  br label %return, !dbg !9366

if.end:                                           ; preds = %entry
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9368
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 0, i8 zeroext 36) #8, !dbg !9369
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9370
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9371
  %call1 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext -3, i8* %arraydecay, i32 3) #8, !dbg !9372
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9373
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9373
  %conv = zext i8 %5 to i32, !dbg !9373
  %and = and i32 %conv, 1, !dbg !9375
  %tobool = icmp ne i32 %and, 0, !dbg !9375
  br i1 %tobool, label %if.then2, label %if.end7, !dbg !9376

if.then2:                                         ; preds = %if.end
  %arrayidx3 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !9377
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !9377
  %conv4 = zext i8 %6 to i32, !dbg !9378
  %shl = shl i32 %conv4, 8, !dbg !9379
  %arrayidx5 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 2, !dbg !9380
  %7 = load i8, i8* %arrayidx5, align 1, !dbg !9380
  %conv6 = zext i8 %7 to i32, !dbg !9381
  %or = or i32 %shl, %conv6, !dbg !9382
  %8 = load i32*, i32** %penum.addr, align 8, !dbg !9383
  store i32 %or, i32* %8, align 4, !dbg !9384
  br label %if.end7, !dbg !9385

if.end7:                                          ; preds = %if.then2, %if.end
  store i32 0, i32* %retval, align 4, !dbg !9386
  br label %return, !dbg !9386

return:                                           ; preds = %if.end7, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9387
  ret i32 %9, !dbg !9387
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_packet_errors_i(%struct.cxd2841er_priv* %priv, i32* %penum) #0 !dbg !9388 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %penum.addr = alloca i32*, align 8
  %data = alloca [2 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9389, metadata !DIExpression()), !dbg !9390
  store i32* %penum, i32** %penum.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %penum.addr, metadata !9391, metadata !DIExpression()), !dbg !9392
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !9393, metadata !DIExpression()), !dbg !9394
  %0 = load i32*, i32** %penum.addr, align 8, !dbg !9395
  store i32 0, i32* %0, align 4, !dbg !9396
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9397
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 5, !dbg !9399
  %2 = load i32, i32* %state, align 8, !dbg !9399
  %cmp = icmp ne i32 %2, 4, !dbg !9400
  br i1 %cmp, label %if.then, label %if.end, !dbg !9401

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9402
  br label %return, !dbg !9402

if.end:                                           ; preds = %entry
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9404
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 0, i8 zeroext 96) #8, !dbg !9405
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9406
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9407
  %call1 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext -95, i8* %arraydecay, i32 1) #8, !dbg !9408
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9409
  %5 = load i8, i8* %arrayidx, align 1, !dbg !9409
  %conv = zext i8 %5 to i32, !dbg !9409
  %and = and i32 %conv, 1, !dbg !9411
  %tobool = icmp ne i32 %and, 0, !dbg !9411
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !9412

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9413
  br label %return, !dbg !9413

if.end3:                                          ; preds = %if.end
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9414
  %arraydecay4 = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9415
  %call5 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext -94, i8* %arraydecay4, i32 2) #8, !dbg !9416
  %arrayidx6 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9417
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !9417
  %conv7 = zext i8 %7 to i32, !dbg !9418
  %shl = shl i32 %conv7, 8, !dbg !9419
  %arrayidx8 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !9420
  %8 = load i8, i8* %arrayidx8, align 1, !dbg !9420
  %conv9 = zext i8 %8 to i32, !dbg !9421
  %or = or i32 %shl, %conv9, !dbg !9422
  %9 = load i32*, i32** %penum.addr, align 8, !dbg !9423
  store i32 %or, i32* %9, align 4, !dbg !9424
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9425
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9426
  %call11 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %10, i8 zeroext 1, i8 zeroext -92, i8* %arraydecay10, i32 2) #8, !dbg !9427
  %arrayidx12 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9428
  %11 = load i8, i8* %arrayidx12, align 1, !dbg !9428
  %conv13 = zext i8 %11 to i32, !dbg !9429
  %shl14 = shl i32 %conv13, 8, !dbg !9430
  %arrayidx15 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !9431
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !9431
  %conv16 = zext i8 %12 to i32, !dbg !9432
  %or17 = or i32 %shl14, %conv16, !dbg !9433
  %13 = load i32*, i32** %penum.addr, align 8, !dbg !9434
  %14 = load i32, i32* %13, align 4, !dbg !9435
  %add = add i32 %14, %or17, !dbg !9435
  store i32 %add, i32* %13, align 4, !dbg !9435
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9436
  %arraydecay18 = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9437
  %call19 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext -90, i8* %arraydecay18, i32 2) #8, !dbg !9438
  %arrayidx20 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9439
  %16 = load i8, i8* %arrayidx20, align 1, !dbg !9439
  %conv21 = zext i8 %16 to i32, !dbg !9440
  %shl22 = shl i32 %conv21, 8, !dbg !9441
  %arrayidx23 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !9442
  %17 = load i8, i8* %arrayidx23, align 1, !dbg !9442
  %conv24 = zext i8 %17 to i32, !dbg !9443
  %or25 = or i32 %shl22, %conv24, !dbg !9444
  %18 = load i32*, i32** %penum.addr, align 8, !dbg !9445
  %19 = load i32, i32* %18, align 4, !dbg !9446
  %add26 = add i32 %19, %or25, !dbg !9446
  store i32 %add26, i32* %18, align 4, !dbg !9446
  store i32 0, i32* %retval, align 4, !dbg !9447
  br label %return, !dbg !9447

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !9448
  ret i32 %20, !dbg !9448
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_ber_c(%struct.cxd2841er_priv* %priv, i32* %bit_error, i32* %bit_count) #0 !dbg !9449 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bit_error.addr = alloca i32*, align 8
  %bit_count.addr = alloca i32*, align 8
  %data = alloca [3 x i8], align 1
  %bit_err = alloca i32, align 4
  %period_exp = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9452, metadata !DIExpression()), !dbg !9453
  store i32* %bit_error, i32** %bit_error.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_error.addr, metadata !9454, metadata !DIExpression()), !dbg !9455
  store i32* %bit_count, i32** %bit_count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_count.addr, metadata !9456, metadata !DIExpression()), !dbg !9457
  call void @llvm.dbg.declare(metadata [3 x i8]* %data, metadata !9458, metadata !DIExpression()), !dbg !9459
  call void @llvm.dbg.declare(metadata i32* %bit_err, metadata !9460, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.declare(metadata i32* %period_exp, metadata !9462, metadata !DIExpression()), !dbg !9463
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9464
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !9466
  %1 = load i32, i32* %state, align 8, !dbg !9466
  %cmp = icmp ne i32 %1, 4, !dbg !9467
  br i1 %cmp, label %if.then, label %if.end, !dbg !9468

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9469
  br label %return, !dbg !9469

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9471
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext 0, i8 zeroext 64) #8, !dbg !9472
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9473
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9474
  %call1 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 98, i8* %arraydecay, i32 3) #8, !dbg !9475
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9476
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9476
  %conv = zext i8 %4 to i32, !dbg !9476
  %and = and i32 %conv, 128, !dbg !9478
  %tobool = icmp ne i32 %and, 0, !dbg !9478
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !9479

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9480
  br label %return, !dbg !9480

if.end3:                                          ; preds = %if.end
  %arrayidx4 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9482
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !9482
  %conv5 = zext i8 %5 to i32, !dbg !9482
  %and6 = and i32 %conv5, 63, !dbg !9483
  %shl = shl i32 %and6, 16, !dbg !9484
  %arrayidx7 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !9485
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !9485
  %conv8 = zext i8 %6 to i32, !dbg !9486
  %shl9 = shl i32 %conv8, 8, !dbg !9487
  %or = or i32 %shl, %shl9, !dbg !9488
  %arrayidx10 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 2, !dbg !9489
  %7 = load i8, i8* %arrayidx10, align 1, !dbg !9489
  %conv11 = zext i8 %7 to i32, !dbg !9490
  %or12 = or i32 %or, %conv11, !dbg !9491
  store i32 %or12, i32* %bit_err, align 4, !dbg !9492
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9493
  %arraydecay13 = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9494
  %call14 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext 96, i8* %arraydecay13) #8, !dbg !9495
  %arrayidx15 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9496
  %9 = load i8, i8* %arrayidx15, align 1, !dbg !9496
  %conv16 = zext i8 %9 to i32, !dbg !9496
  %and17 = and i32 %conv16, 31, !dbg !9497
  store i32 %and17, i32* %period_exp, align 4, !dbg !9498
  %10 = load i32, i32* %period_exp, align 4, !dbg !9499
  %cmp18 = icmp ule i32 %10, 11, !dbg !9501
  br i1 %cmp18, label %land.lhs.true, label %if.end25, !dbg !9502

land.lhs.true:                                    ; preds = %if.end3
  %11 = load i32, i32* %bit_err, align 4, !dbg !9503
  %12 = load i32, i32* %period_exp, align 4, !dbg !9504
  %shl20 = shl i32 1, %12, !dbg !9505
  %mul = mul i32 %shl20, 204, !dbg !9506
  %mul21 = mul i32 %mul, 8, !dbg !9507
  %cmp22 = icmp ugt i32 %11, %mul21, !dbg !9508
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !9509

if.then24:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !9510
  br label %return, !dbg !9510

if.end25:                                         ; preds = %land.lhs.true, %if.end3
  %13 = load i32, i32* %bit_err, align 4, !dbg !9512
  %14 = load i32*, i32** %bit_error.addr, align 8, !dbg !9513
  store i32 %13, i32* %14, align 4, !dbg !9514
  %15 = load i32, i32* %period_exp, align 4, !dbg !9515
  %shl26 = shl i32 1, %15, !dbg !9516
  %mul27 = mul i32 %shl26, 204, !dbg !9517
  %mul28 = mul i32 %mul27, 8, !dbg !9518
  %16 = load i32*, i32** %bit_count.addr, align 8, !dbg !9519
  store i32 %mul28, i32* %16, align 4, !dbg !9520
  store i32 0, i32* %retval, align 4, !dbg !9521
  br label %return, !dbg !9521

return:                                           ; preds = %if.end25, %if.then24, %if.then2, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !9522
  ret i32 %17, !dbg !9522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_ber_i(%struct.cxd2841er_priv* %priv, i32* %bit_error, i32* %bit_count) #0 !dbg !9523 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bit_error.addr = alloca i32*, align 8
  %bit_count.addr = alloca i32*, align 8
  %data = alloca [3 x i8], align 1
  %pktnum = alloca [2 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9524, metadata !DIExpression()), !dbg !9525
  store i32* %bit_error, i32** %bit_error.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_error.addr, metadata !9526, metadata !DIExpression()), !dbg !9527
  store i32* %bit_count, i32** %bit_count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_count.addr, metadata !9528, metadata !DIExpression()), !dbg !9529
  call void @llvm.dbg.declare(metadata [3 x i8]* %data, metadata !9530, metadata !DIExpression()), !dbg !9531
  call void @llvm.dbg.declare(metadata [2 x i8]* %pktnum, metadata !9532, metadata !DIExpression()), !dbg !9533
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9534
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !9536
  %1 = load i32, i32* %state, align 8, !dbg !9536
  %cmp = icmp ne i32 %1, 4, !dbg !9537
  br i1 %cmp, label %if.then, label %if.end, !dbg !9538

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9539
  br label %return, !dbg !9539

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9541
  %call = call i32 @cxd2841er_freeze_regs(%struct.cxd2841er_priv* %2) #8, !dbg !9542
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9543
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 0, i8 zeroext 96) #8, !dbg !9544
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9545
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %pktnum, i64 0, i64 0, !dbg !9546
  %call2 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 91, i8* %arraydecay, i32 2) #8, !dbg !9547
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9548
  %arraydecay3 = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9549
  %call4 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 22, i8* %arraydecay3, i32 3) #8, !dbg !9550
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9551
  %call5 = call i32 @cxd2841er_unfreeze_regs(%struct.cxd2841er_priv* %6) #8, !dbg !9552
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %pktnum, i64 0, i64 0, !dbg !9553
  %7 = load i8, i8* %arrayidx, align 1, !dbg !9553
  %tobool = icmp ne i8 %7, 0, !dbg !9553
  br i1 %tobool, label %if.end9, label %land.lhs.true, !dbg !9555

land.lhs.true:                                    ; preds = %if.end
  %arrayidx6 = getelementptr [2 x i8], [2 x i8]* %pktnum, i64 0, i64 1, !dbg !9556
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !9556
  %tobool7 = icmp ne i8 %8, 0, !dbg !9556
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !9557

if.then8:                                         ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !9558
  br label %return, !dbg !9558

if.end9:                                          ; preds = %land.lhs.true, %if.end
  %arrayidx10 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !9560
  %9 = load i8, i8* %arrayidx10, align 1, !dbg !9560
  %conv = zext i8 %9 to i32, !dbg !9560
  %and = and i32 %conv, 127, !dbg !9561
  %shl = shl i32 %and, 16, !dbg !9562
  %arrayidx11 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !9563
  %10 = load i8, i8* %arrayidx11, align 1, !dbg !9563
  %conv12 = zext i8 %10 to i32, !dbg !9564
  %shl13 = shl i32 %conv12, 8, !dbg !9565
  %or = or i32 %shl, %shl13, !dbg !9566
  %arrayidx14 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 2, !dbg !9567
  %11 = load i8, i8* %arrayidx14, align 1, !dbg !9567
  %conv15 = zext i8 %11 to i32, !dbg !9567
  %or16 = or i32 %or, %conv15, !dbg !9568
  %12 = load i32*, i32** %bit_error.addr, align 8, !dbg !9569
  store i32 %or16, i32* %12, align 4, !dbg !9570
  %arrayidx17 = getelementptr [2 x i8], [2 x i8]* %pktnum, i64 0, i64 0, !dbg !9571
  %13 = load i8, i8* %arrayidx17, align 1, !dbg !9571
  %conv18 = zext i8 %13 to i32, !dbg !9572
  %shl19 = shl i32 %conv18, 8, !dbg !9573
  %arrayidx20 = getelementptr [2 x i8], [2 x i8]* %pktnum, i64 0, i64 1, !dbg !9574
  %14 = load i8, i8* %arrayidx20, align 1, !dbg !9574
  %conv21 = zext i8 %14 to i32, !dbg !9574
  %or22 = or i32 %shl19, %conv21, !dbg !9575
  %mul = mul i32 %or22, 204, !dbg !9576
  %mul23 = mul i32 %mul, 8, !dbg !9577
  %15 = load i32*, i32** %bit_count.addr, align 8, !dbg !9578
  store i32 %mul23, i32* %15, align 4, !dbg !9579
  store i32 0, i32* %retval, align 4, !dbg !9580
  br label %return, !dbg !9580

return:                                           ; preds = %if.end9, %if.then8, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !9581
  ret i32 %16, !dbg !9581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_mon_read_ber_s(%struct.cxd2841er_priv* %priv, i32* %bit_error, i32* %bit_count) #0 !dbg !9582 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bit_error.addr = alloca i32*, align 8
  %bit_count.addr = alloca i32*, align 8
  %data = alloca [11 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9583, metadata !DIExpression()), !dbg !9584
  store i32* %bit_error, i32** %bit_error.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_error.addr, metadata !9585, metadata !DIExpression()), !dbg !9586
  store i32* %bit_count, i32** %bit_count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_count.addr, metadata !9587, metadata !DIExpression()), !dbg !9588
  call void @llvm.dbg.declare(metadata [11 x i8]* %data, metadata !9589, metadata !DIExpression()), !dbg !9593
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9594
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext -96) #8, !dbg !9595
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9596
  %arraydecay = getelementptr inbounds [11 x i8], [11 x i8]* %data, i64 0, i64 0, !dbg !9597
  %call1 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %1, i8 zeroext 1, i8 zeroext 53, i8* %arraydecay, i32 11) #8, !dbg !9598
  %arrayidx = getelementptr [11 x i8], [11 x i8]* %data, i64 0, i64 0, !dbg !9599
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9599
  %conv = zext i8 %2 to i32, !dbg !9599
  %and = and i32 %conv, 1, !dbg !9601
  %tobool = icmp ne i32 %and, 0, !dbg !9601
  br i1 %tobool, label %if.then, label %if.end30, !dbg !9602

if.then:                                          ; preds = %entry
  %arrayidx2 = getelementptr [11 x i8], [11 x i8]* %data, i64 0, i64 1, !dbg !9603
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !9603
  %conv3 = zext i8 %3 to i32, !dbg !9603
  %and4 = and i32 %conv3, 63, !dbg !9605
  %shl = shl i32 %and4, 16, !dbg !9606
  %arrayidx5 = getelementptr [11 x i8], [11 x i8]* %data, i64 0, i64 2, !dbg !9607
  %4 = load i8, i8* %arrayidx5, align 1, !dbg !9607
  %conv6 = zext i8 %4 to i32, !dbg !9607
  %and7 = and i32 %conv6, 255, !dbg !9608
  %shl8 = shl i32 %and7, 8, !dbg !9609
  %or = or i32 %shl, %shl8, !dbg !9610
  %arrayidx9 = getelementptr [11 x i8], [11 x i8]* %data, i64 0, i64 3, !dbg !9611
  %5 = load i8, i8* %arrayidx9, align 1, !dbg !9611
  %conv10 = zext i8 %5 to i32, !dbg !9611
  %and11 = and i32 %conv10, 255, !dbg !9612
  %or12 = or i32 %or, %and11, !dbg !9613
  %6 = load i32*, i32** %bit_error.addr, align 8, !dbg !9614
  store i32 %or12, i32* %6, align 4, !dbg !9615
  %arrayidx13 = getelementptr [11 x i8], [11 x i8]* %data, i64 0, i64 8, !dbg !9616
  %7 = load i8, i8* %arrayidx13, align 1, !dbg !9616
  %conv14 = zext i8 %7 to i32, !dbg !9616
  %and15 = and i32 %conv14, 63, !dbg !9617
  %shl16 = shl i32 %and15, 16, !dbg !9618
  %arrayidx17 = getelementptr [11 x i8], [11 x i8]* %data, i64 0, i64 9, !dbg !9619
  %8 = load i8, i8* %arrayidx17, align 1, !dbg !9619
  %conv18 = zext i8 %8 to i32, !dbg !9619
  %and19 = and i32 %conv18, 255, !dbg !9620
  %shl20 = shl i32 %and19, 8, !dbg !9621
  %or21 = or i32 %shl16, %shl20, !dbg !9622
  %arrayidx22 = getelementptr [11 x i8], [11 x i8]* %data, i64 0, i64 10, !dbg !9623
  %9 = load i8, i8* %arrayidx22, align 1, !dbg !9623
  %conv23 = zext i8 %9 to i32, !dbg !9623
  %and24 = and i32 %conv23, 255, !dbg !9624
  %or25 = or i32 %or21, %and24, !dbg !9625
  %10 = load i32*, i32** %bit_count.addr, align 8, !dbg !9626
  store i32 %or25, i32* %10, align 4, !dbg !9627
  %11 = load i32*, i32** %bit_count.addr, align 8, !dbg !9628
  %12 = load i32, i32* %11, align 4, !dbg !9630
  %cmp = icmp eq i32 %12, 0, !dbg !9631
  br i1 %cmp, label %if.then29, label %lor.lhs.false, !dbg !9632

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i32*, i32** %bit_error.addr, align 8, !dbg !9633
  %14 = load i32, i32* %13, align 4, !dbg !9634
  %15 = load i32*, i32** %bit_count.addr, align 8, !dbg !9635
  %16 = load i32, i32* %15, align 4, !dbg !9636
  %cmp27 = icmp ugt i32 %14, %16, !dbg !9637
  br i1 %cmp27, label %if.then29, label %if.end, !dbg !9638

if.then29:                                        ; preds = %lor.lhs.false, %if.then
  store i32 -22, i32* %retval, align 4, !dbg !9639
  br label %return, !dbg !9639

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !9641
  br label %return, !dbg !9641

if.end30:                                         ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9642
  br label %return, !dbg !9642

return:                                           ; preds = %if.end30, %if.end, %if.then29
  %17 = load i32, i32* %retval, align 4, !dbg !9643
  ret i32 %17, !dbg !9643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_mon_read_ber_s2(%struct.cxd2841er_priv* %priv, i32* %bit_error, i32* %bit_count) #0 !dbg !9644 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bit_error.addr = alloca i32*, align 8
  %bit_count.addr = alloca i32*, align 8
  %data = alloca [5 x i8], align 1
  %period = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9645, metadata !DIExpression()), !dbg !9646
  store i32* %bit_error, i32** %bit_error.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_error.addr, metadata !9647, metadata !DIExpression()), !dbg !9648
  store i32* %bit_count, i32** %bit_count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_count.addr, metadata !9649, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.declare(metadata [5 x i8]* %data, metadata !9651, metadata !DIExpression()), !dbg !9654
  call void @llvm.dbg.declare(metadata i32* %period, metadata !9655, metadata !DIExpression()), !dbg !9656
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9657
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %0, i8 zeroext 1, i8 zeroext 0, i8 zeroext -78) #8, !dbg !9658
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9659
  %arraydecay = getelementptr inbounds [5 x i8], [5 x i8]* %data, i64 0, i64 0, !dbg !9660
  %call1 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %1, i8 zeroext 1, i8 zeroext 48, i8* %arraydecay, i32 5) #8, !dbg !9661
  %arrayidx = getelementptr [5 x i8], [5 x i8]* %data, i64 0, i64 0, !dbg !9662
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9662
  %conv = zext i8 %2 to i32, !dbg !9662
  %and = and i32 %conv, 1, !dbg !9664
  %tobool = icmp ne i32 %and, 0, !dbg !9664
  br i1 %tobool, label %if.then, label %if.else, !dbg !9665

if.then:                                          ; preds = %entry
  %arrayidx2 = getelementptr [5 x i8], [5 x i8]* %data, i64 0, i64 1, !dbg !9666
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !9666
  %conv3 = zext i8 %3 to i32, !dbg !9666
  %and4 = and i32 %conv3, 15, !dbg !9668
  %shl = shl i32 %and4, 24, !dbg !9669
  %arrayidx5 = getelementptr [5 x i8], [5 x i8]* %data, i64 0, i64 2, !dbg !9670
  %4 = load i8, i8* %arrayidx5, align 1, !dbg !9670
  %conv6 = zext i8 %4 to i32, !dbg !9670
  %and7 = and i32 %conv6, 255, !dbg !9671
  %shl8 = shl i32 %and7, 16, !dbg !9672
  %or = or i32 %shl, %shl8, !dbg !9673
  %arrayidx9 = getelementptr [5 x i8], [5 x i8]* %data, i64 0, i64 3, !dbg !9674
  %5 = load i8, i8* %arrayidx9, align 1, !dbg !9674
  %conv10 = zext i8 %5 to i32, !dbg !9674
  %and11 = and i32 %conv10, 255, !dbg !9675
  %shl12 = shl i32 %and11, 8, !dbg !9676
  %or13 = or i32 %or, %shl12, !dbg !9677
  %arrayidx14 = getelementptr [5 x i8], [5 x i8]* %data, i64 0, i64 4, !dbg !9678
  %6 = load i8, i8* %arrayidx14, align 1, !dbg !9678
  %conv15 = zext i8 %6 to i32, !dbg !9678
  %and16 = and i32 %conv15, 255, !dbg !9679
  %or17 = or i32 %or13, %and16, !dbg !9680
  %7 = load i32*, i32** %bit_error.addr, align 8, !dbg !9681
  store i32 %or17, i32* %7, align 4, !dbg !9682
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9683
  %call18 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext 0, i8 zeroext -96) #8, !dbg !9684
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9685
  %arraydecay19 = getelementptr inbounds [5 x i8], [5 x i8]* %data, i64 0, i64 0, !dbg !9686
  %call20 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %9, i8 zeroext 1, i8 zeroext 122, i8* %arraydecay19) #8, !dbg !9687
  %arrayidx21 = getelementptr [5 x i8], [5 x i8]* %data, i64 0, i64 0, !dbg !9688
  %10 = load i8, i8* %arrayidx21, align 1, !dbg !9688
  %conv22 = zext i8 %10 to i32, !dbg !9688
  %and23 = and i32 %conv22, 15, !dbg !9689
  %shl24 = shl i32 1, %and23, !dbg !9690
  store i32 %shl24, i32* %period, align 4, !dbg !9691
  %11 = load i32, i32* %period, align 4, !dbg !9692
  %cmp = icmp eq i32 %11, 0, !dbg !9694
  br i1 %cmp, label %if.then26, label %if.end, !dbg !9695

if.then26:                                        ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !9696
  br label %return, !dbg !9696

if.end:                                           ; preds = %if.then
  %12 = load i32*, i32** %bit_error.addr, align 8, !dbg !9698
  %13 = load i32, i32* %12, align 4, !dbg !9700
  %14 = load i32, i32* %period, align 4, !dbg !9701
  %mul = mul i32 %14, 64800, !dbg !9702
  %cmp27 = icmp ugt i32 %13, %mul, !dbg !9703
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !9704

if.then29:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9705
  br label %return, !dbg !9705

if.end30:                                         ; preds = %if.end
  %15 = load i32, i32* %period, align 4, !dbg !9707
  %mul31 = mul i32 %15, 64800, !dbg !9708
  %16 = load i32*, i32** %bit_count.addr, align 8, !dbg !9709
  store i32 %mul31, i32* %16, align 4, !dbg !9710
  store i32 0, i32* %retval, align 4, !dbg !9711
  br label %return, !dbg !9711

if.else:                                          ; preds = %entry
  br label %if.end32

if.end32:                                         ; preds = %if.else
  store i32 -22, i32* %retval, align 4, !dbg !9712
  br label %return, !dbg !9712

return:                                           ; preds = %if.end32, %if.end30, %if.then29, %if.then26
  %17 = load i32, i32* %retval, align 4, !dbg !9713
  ret i32 %17, !dbg !9713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_ber_t(%struct.cxd2841er_priv* %priv, i32* %bit_error, i32* %bit_count) #0 !dbg !9714 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bit_error.addr = alloca i32*, align 8
  %bit_count.addr = alloca i32*, align 8
  %data = alloca [2 x i8], align 1
  %period = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9715, metadata !DIExpression()), !dbg !9716
  store i32* %bit_error, i32** %bit_error.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_error.addr, metadata !9717, metadata !DIExpression()), !dbg !9718
  store i32* %bit_count, i32** %bit_count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_count.addr, metadata !9719, metadata !DIExpression()), !dbg !9720
  call void @llvm.dbg.declare(metadata [2 x i8]* %data, metadata !9721, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.declare(metadata i32* %period, metadata !9723, metadata !DIExpression()), !dbg !9724
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9725
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !9727
  %1 = load i32, i32* %state, align 8, !dbg !9727
  %cmp = icmp ne i32 %1, 4, !dbg !9728
  br i1 %cmp, label %if.then, label %if.end, !dbg !9729

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9730
  br label %return, !dbg !9730

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9732
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !9733
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9734
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9735
  %call1 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 57, i8* %arraydecay) #8, !dbg !9736
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9737
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9737
  %conv = zext i8 %4 to i32, !dbg !9737
  %and = and i32 %conv, 1, !dbg !9739
  %tobool = icmp ne i32 %and, 0, !dbg !9739
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !9740

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9741
  br label %return, !dbg !9741

if.end3:                                          ; preds = %if.end
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9743
  %arraydecay4 = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9744
  %call5 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 34, i8* %arraydecay4, i32 2) #8, !dbg !9745
  %arrayidx6 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9746
  %6 = load i8, i8* %arrayidx6, align 1, !dbg !9746
  %conv7 = zext i8 %6 to i32, !dbg !9747
  %shl = shl i32 %conv7, 8, !dbg !9748
  %arrayidx8 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 1, !dbg !9749
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !9749
  %conv9 = zext i8 %7 to i32, !dbg !9750
  %or = or i32 %shl, %conv9, !dbg !9751
  %8 = load i32*, i32** %bit_error.addr, align 8, !dbg !9752
  store i32 %or, i32* %8, align 4, !dbg !9753
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9754
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9755
  %call11 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %9, i8 zeroext 1, i8 zeroext 111, i8* %arraydecay10) #8, !dbg !9756
  %arrayidx12 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9757
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !9757
  %conv13 = zext i8 %10 to i32, !dbg !9757
  %and14 = and i32 %conv13, 7, !dbg !9758
  %cmp15 = icmp eq i32 %and14, 0, !dbg !9759
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !9760

cond.true:                                        ; preds = %if.end3
  br label %cond.end, !dbg !9760

cond.false:                                       ; preds = %if.end3
  %arrayidx17 = getelementptr [2 x i8], [2 x i8]* %data, i64 0, i64 0, !dbg !9761
  %11 = load i8, i8* %arrayidx17, align 1, !dbg !9761
  %conv18 = zext i8 %11 to i32, !dbg !9761
  %and19 = and i32 %conv18, 7, !dbg !9762
  %shl20 = shl i32 4096, %and19, !dbg !9763
  br label %cond.end, !dbg !9760

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 256, %cond.true ], [ %shl20, %cond.false ], !dbg !9760
  store i32 %cond, i32* %period, align 4, !dbg !9764
  %12 = load i32, i32* %period, align 4, !dbg !9765
  %div = udiv i32 %12, 128, !dbg !9766
  %13 = load i32*, i32** %bit_count.addr, align 8, !dbg !9767
  store i32 %div, i32* %13, align 4, !dbg !9768
  %14 = load i32*, i32** %bit_error.addr, align 8, !dbg !9769
  %15 = load i32, i32* %14, align 4, !dbg !9770
  %conv21 = zext i32 %15 to i64, !dbg !9770
  %mul = mul i64 %conv21, 78125, !dbg !9770
  %conv22 = trunc i64 %mul to i32, !dbg !9770
  store i32 %conv22, i32* %14, align 4, !dbg !9770
  store i32 0, i32* %retval, align 4, !dbg !9771
  br label %return, !dbg !9771

return:                                           ; preds = %cond.end, %if.then2, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !9772
  ret i32 %16, !dbg !9772
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_ber_t2(%struct.cxd2841er_priv* %priv, i32* %bit_error, i32* %bit_count) #0 !dbg !9773 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %bit_error.addr = alloca i32*, align 8
  %bit_count.addr = alloca i32*, align 8
  %data = alloca [4 x i8], align 1
  %period_exp = alloca i32, align 4
  %n_ldpc = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9774, metadata !DIExpression()), !dbg !9775
  store i32* %bit_error, i32** %bit_error.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_error.addr, metadata !9776, metadata !DIExpression()), !dbg !9777
  store i32* %bit_count, i32** %bit_count.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %bit_count.addr, metadata !9778, metadata !DIExpression()), !dbg !9779
  call void @llvm.dbg.declare(metadata [4 x i8]* %data, metadata !9780, metadata !DIExpression()), !dbg !9781
  call void @llvm.dbg.declare(metadata i32* %period_exp, metadata !9782, metadata !DIExpression()), !dbg !9783
  call void @llvm.dbg.declare(metadata i32* %n_ldpc, metadata !9784, metadata !DIExpression()), !dbg !9785
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9786
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !9788
  %1 = load i32, i32* %state, align 8, !dbg !9788
  %cmp = icmp ne i32 %1, 4, !dbg !9789
  br i1 %cmp, label %if.then, label %if.end, !dbg !9790

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9791
  br label %return, !dbg !9791

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9793
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext 0, i8 zeroext 32) #8, !dbg !9794
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9795
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !9796
  %call1 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 57, i8* %arraydecay, i32 4) #8, !dbg !9797
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !9798
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9798
  %conv = zext i8 %4 to i32, !dbg !9798
  %and = and i32 %conv, 16, !dbg !9800
  %tobool = icmp ne i32 %and, 0, !dbg !9800
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !9801

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9802
  br label %return, !dbg !9802

if.end3:                                          ; preds = %if.end
  %arrayidx4 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !9804
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !9804
  %conv5 = zext i8 %5 to i32, !dbg !9804
  %and6 = and i32 %conv5, 15, !dbg !9805
  %shl = shl i32 %and6, 24, !dbg !9806
  %arrayidx7 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 1, !dbg !9807
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !9807
  %conv8 = zext i8 %6 to i32, !dbg !9808
  %shl9 = shl i32 %conv8, 16, !dbg !9809
  %or = or i32 %shl, %shl9, !dbg !9810
  %arrayidx10 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 2, !dbg !9811
  %7 = load i8, i8* %arrayidx10, align 1, !dbg !9811
  %conv11 = zext i8 %7 to i32, !dbg !9812
  %shl12 = shl i32 %conv11, 8, !dbg !9813
  %or13 = or i32 %or, %shl12, !dbg !9814
  %arrayidx14 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 3, !dbg !9815
  %8 = load i8, i8* %arrayidx14, align 1, !dbg !9815
  %conv15 = zext i8 %8 to i32, !dbg !9816
  %or16 = or i32 %or13, %conv15, !dbg !9817
  %9 = load i32*, i32** %bit_error.addr, align 8, !dbg !9818
  store i32 %or16, i32* %9, align 4, !dbg !9819
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9820
  %arraydecay17 = getelementptr inbounds [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !9821
  %call18 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %10, i8 zeroext 1, i8 zeroext 111, i8* %arraydecay17) #8, !dbg !9822
  %arrayidx19 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !9823
  %11 = load i8, i8* %arrayidx19, align 1, !dbg !9823
  %conv20 = zext i8 %11 to i32, !dbg !9823
  %and21 = and i32 %conv20, 15, !dbg !9824
  store i32 %and21, i32* %period_exp, align 4, !dbg !9825
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9826
  %call22 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext 0, i8 zeroext 34) #8, !dbg !9827
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9828
  %arraydecay23 = getelementptr inbounds [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !9829
  %call24 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext 94, i8* %arraydecay23) #8, !dbg !9830
  %arrayidx25 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !9831
  %14 = load i8, i8* %arrayidx25, align 1, !dbg !9831
  %conv26 = zext i8 %14 to i32, !dbg !9831
  %and27 = and i32 %conv26, 3, !dbg !9832
  %cmp28 = icmp eq i32 %and27, 0, !dbg !9833
  %15 = zext i1 %cmp28 to i64, !dbg !9834
  %cond = select i1 %cmp28, i32 16200, i32 64800, !dbg !9834
  store i32 %cond, i32* %n_ldpc, align 4, !dbg !9835
  %16 = load i32*, i32** %bit_error.addr, align 8, !dbg !9836
  %17 = load i32, i32* %16, align 4, !dbg !9838
  %18 = load i32, i32* %period_exp, align 4, !dbg !9839
  %shl30 = shl i32 1, %18, !dbg !9840
  %19 = load i32, i32* %n_ldpc, align 4, !dbg !9841
  %mul = mul i32 %shl30, %19, !dbg !9842
  %cmp31 = icmp ugt i32 %17, %mul, !dbg !9843
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !9844

if.then33:                                        ; preds = %if.end3
  store i32 -22, i32* %retval, align 4, !dbg !9845
  br label %return, !dbg !9845

if.end34:                                         ; preds = %if.end3
  %20 = load i32, i32* %period_exp, align 4, !dbg !9847
  %cmp35 = icmp uge i32 %20, 4, !dbg !9849
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !9850

if.then37:                                        ; preds = %if.end34
  %21 = load i32, i32* %period_exp, align 4, !dbg !9851
  %sub = sub i32 %21, 4, !dbg !9853
  %shl38 = shl i32 1, %sub, !dbg !9854
  %22 = load i32, i32* %n_ldpc, align 4, !dbg !9855
  %div = udiv i32 %22, 200, !dbg !9856
  %mul39 = mul i32 %shl38, %div, !dbg !9857
  %23 = load i32*, i32** %bit_count.addr, align 8, !dbg !9858
  store i32 %mul39, i32* %23, align 4, !dbg !9859
  %24 = load i32*, i32** %bit_error.addr, align 8, !dbg !9860
  %25 = load i32, i32* %24, align 4, !dbg !9861
  %conv40 = zext i32 %25 to i64, !dbg !9861
  %mul41 = mul i64 %conv40, 3125, !dbg !9861
  %conv42 = trunc i64 %mul41 to i32, !dbg !9861
  store i32 %conv42, i32* %24, align 4, !dbg !9861
  br label %if.end49, !dbg !9862

if.else:                                          ; preds = %if.end34
  %26 = load i32, i32* %period_exp, align 4, !dbg !9863
  %shl43 = shl i32 1, %26, !dbg !9865
  %27 = load i32, i32* %n_ldpc, align 4, !dbg !9866
  %div44 = udiv i32 %27, 200, !dbg !9867
  %mul45 = mul i32 %shl43, %div44, !dbg !9868
  %28 = load i32*, i32** %bit_count.addr, align 8, !dbg !9869
  store i32 %mul45, i32* %28, align 4, !dbg !9870
  %29 = load i32*, i32** %bit_error.addr, align 8, !dbg !9871
  %30 = load i32, i32* %29, align 4, !dbg !9872
  %conv46 = zext i32 %30 to i64, !dbg !9872
  %mul47 = mul i64 %conv46, 50000, !dbg !9872
  %conv48 = trunc i64 %mul47 to i32, !dbg !9872
  store i32 %conv48, i32* %29, align 4, !dbg !9872
  br label %if.end49

if.end49:                                         ; preds = %if.else, %if.then37
  store i32 0, i32* %retval, align 4, !dbg !9873
  br label %return, !dbg !9873

return:                                           ; preds = %if.end49, %if.then33, %if.then2, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !9874
  ret i32 %31, !dbg !9874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_status_t_t2(%struct.cxd2841er_priv* %priv, i8* %sync, i8* %tslock, i8* %unlock) #0 !dbg !9875 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %sync.addr = alloca i8*, align 8
  %tslock.addr = alloca i8*, align 8
  %unlock.addr = alloca i8*, align 8
  %data = alloca i8, align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9878, metadata !DIExpression()), !dbg !9879
  store i8* %sync, i8** %sync.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sync.addr, metadata !9880, metadata !DIExpression()), !dbg !9881
  store i8* %tslock, i8** %tslock.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tslock.addr, metadata !9882, metadata !DIExpression()), !dbg !9883
  store i8* %unlock, i8** %unlock.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %unlock.addr, metadata !9884, metadata !DIExpression()), !dbg !9885
  call void @llvm.dbg.declare(metadata i8* %data, metadata !9886, metadata !DIExpression()), !dbg !9887
  store i8 0, i8* %data, align 1, !dbg !9887
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9888
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !9890
  %1 = load i32, i32* %state, align 8, !dbg !9890
  %cmp = icmp ne i32 %1, 4, !dbg !9891
  br i1 %cmp, label %if.then, label %if.end, !dbg !9892

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9893
  br label %return, !dbg !9893

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9894
  %system = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 6, !dbg !9896
  %3 = load i8, i8* %system, align 4, !dbg !9896
  %conv = zext i8 %3 to i32, !dbg !9894
  %cmp1 = icmp eq i32 %conv, 3, !dbg !9897
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !9898

if.then3:                                         ; preds = %if.end
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9899
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext 0, i8 zeroext 16) #8, !dbg !9901
  br label %if.end5, !dbg !9902

if.else:                                          ; preds = %if.end
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9903
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 0, i8 zeroext 32) #8, !dbg !9905
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then3
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9906
  %call6 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 16, i8* %data) #8, !dbg !9907
  %7 = load i8, i8* %data, align 1, !dbg !9908
  %conv7 = zext i8 %7 to i32, !dbg !9908
  %and = and i32 %conv7, 7, !dbg !9910
  %cmp8 = icmp eq i32 %and, 7, !dbg !9911
  br i1 %cmp8, label %if.then10, label %if.else11, !dbg !9912

if.then10:                                        ; preds = %if.end5
  %8 = load i8*, i8** %sync.addr, align 8, !dbg !9913
  store i8 0, i8* %8, align 1, !dbg !9915
  %9 = load i8*, i8** %tslock.addr, align 8, !dbg !9916
  store i8 0, i8* %9, align 1, !dbg !9917
  %10 = load i8*, i8** %unlock.addr, align 8, !dbg !9918
  store i8 0, i8* %10, align 1, !dbg !9919
  br label %if.end26, !dbg !9920

if.else11:                                        ; preds = %if.end5
  %11 = load i8, i8* %data, align 1, !dbg !9921
  %conv12 = zext i8 %11 to i32, !dbg !9921
  %and13 = and i32 %conv12, 7, !dbg !9923
  %cmp14 = icmp eq i32 %and13, 6, !dbg !9924
  %12 = zext i1 %cmp14 to i64, !dbg !9925
  %cond = select i1 %cmp14, i32 1, i32 0, !dbg !9925
  %conv16 = trunc i32 %cond to i8, !dbg !9926
  %13 = load i8*, i8** %sync.addr, align 8, !dbg !9927
  store i8 %conv16, i8* %13, align 1, !dbg !9928
  %14 = load i8, i8* %data, align 1, !dbg !9929
  %conv17 = zext i8 %14 to i32, !dbg !9929
  %and18 = and i32 %conv17, 32, !dbg !9930
  %tobool = icmp ne i32 %and18, 0, !dbg !9931
  %15 = zext i1 %tobool to i64, !dbg !9931
  %cond19 = select i1 %tobool, i32 1, i32 0, !dbg !9931
  %conv20 = trunc i32 %cond19 to i8, !dbg !9932
  %16 = load i8*, i8** %tslock.addr, align 8, !dbg !9933
  store i8 %conv20, i8* %16, align 1, !dbg !9934
  %17 = load i8, i8* %data, align 1, !dbg !9935
  %conv21 = zext i8 %17 to i32, !dbg !9935
  %and22 = and i32 %conv21, 16, !dbg !9936
  %tobool23 = icmp ne i32 %and22, 0, !dbg !9937
  %18 = zext i1 %tobool23 to i64, !dbg !9937
  %cond24 = select i1 %tobool23, i32 1, i32 0, !dbg !9937
  %conv25 = trunc i32 %cond24 to i8, !dbg !9938
  %19 = load i8*, i8** %unlock.addr, align 8, !dbg !9939
  store i8 %conv25, i8* %19, align 1, !dbg !9940
  br label %if.end26

if.end26:                                         ; preds = %if.else11, %if.then10
  store i32 0, i32* %retval, align 4, !dbg !9941
  br label %return, !dbg !9941

return:                                           ; preds = %if.end26, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !9942
  ret i32 %20, !dbg !9942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_status_i(%struct.cxd2841er_priv* %priv, i8* %sync, i8* %tslock, i8* %unlock) #0 !dbg !9943 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %sync.addr = alloca i8*, align 8
  %tslock.addr = alloca i8*, align 8
  %unlock.addr = alloca i8*, align 8
  %data = alloca i8, align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9944, metadata !DIExpression()), !dbg !9945
  store i8* %sync, i8** %sync.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sync.addr, metadata !9946, metadata !DIExpression()), !dbg !9947
  store i8* %tslock, i8** %tslock.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tslock.addr, metadata !9948, metadata !DIExpression()), !dbg !9949
  store i8* %unlock, i8** %unlock.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %unlock.addr, metadata !9950, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.declare(metadata i8* %data, metadata !9952, metadata !DIExpression()), !dbg !9953
  store i8 0, i8* %data, align 1, !dbg !9953
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9954
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !9956
  %1 = load i32, i32* %state, align 8, !dbg !9956
  %cmp = icmp ne i32 %1, 4, !dbg !9957
  br i1 %cmp, label %if.then, label %if.end, !dbg !9958

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9959
  br label %return, !dbg !9959

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9960
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext 0, i8 zeroext 96) #8, !dbg !9961
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9962
  %call1 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 16, i8* %data) #8, !dbg !9963
  %4 = load i8, i8* %data, align 1, !dbg !9964
  %conv = zext i8 %4 to i32, !dbg !9964
  %and = and i32 %conv, 2, !dbg !9965
  %tobool = icmp ne i32 %and, 0, !dbg !9966
  %5 = zext i1 %tobool to i64, !dbg !9966
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !9966
  %conv2 = trunc i32 %cond to i8, !dbg !9967
  %6 = load i8*, i8** %sync.addr, align 8, !dbg !9968
  store i8 %conv2, i8* %6, align 1, !dbg !9969
  %7 = load i8, i8* %data, align 1, !dbg !9970
  %conv3 = zext i8 %7 to i32, !dbg !9970
  %and4 = and i32 %conv3, 1, !dbg !9971
  %tobool5 = icmp ne i32 %and4, 0, !dbg !9972
  %8 = zext i1 %tobool5 to i64, !dbg !9972
  %cond6 = select i1 %tobool5, i32 1, i32 0, !dbg !9972
  %conv7 = trunc i32 %cond6 to i8, !dbg !9973
  %9 = load i8*, i8** %tslock.addr, align 8, !dbg !9974
  store i8 %conv7, i8* %9, align 1, !dbg !9975
  %10 = load i8, i8* %data, align 1, !dbg !9976
  %conv8 = zext i8 %10 to i32, !dbg !9976
  %and9 = and i32 %conv8, 16, !dbg !9977
  %tobool10 = icmp ne i32 %and9, 0, !dbg !9978
  %11 = zext i1 %tobool10 to i64, !dbg !9978
  %cond11 = select i1 %tobool10, i32 1, i32 0, !dbg !9978
  %conv12 = trunc i32 %cond11 to i8, !dbg !9979
  %12 = load i8*, i8** %unlock.addr, align 8, !dbg !9980
  store i8 %conv12, i8* %12, align 1, !dbg !9981
  store i32 0, i32* %retval, align 4, !dbg !9982
  br label %return, !dbg !9982

return:                                           ; preds = %if.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !9983
  ret i32 %13, !dbg !9983
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_read_status_c(%struct.cxd2841er_priv* %priv, i8* %tslock) #0 !dbg !9984 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %tslock.addr = alloca i8*, align 8
  %data = alloca i8, align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !9987, metadata !DIExpression()), !dbg !9988
  store i8* %tslock, i8** %tslock.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tslock.addr, metadata !9989, metadata !DIExpression()), !dbg !9990
  call void @llvm.dbg.declare(metadata i8* %data, metadata !9991, metadata !DIExpression()), !dbg !9992
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9993
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !9995
  %1 = load i32, i32* %state, align 8, !dbg !9995
  %cmp = icmp ne i32 %1, 4, !dbg !9996
  br i1 %cmp, label %if.then, label %if.end, !dbg !9997

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9998
  br label %return, !dbg !9998

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !9999
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext 0, i8 zeroext 64) #8, !dbg !10000
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10001
  %call1 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext -120, i8* %data) #8, !dbg !10002
  %4 = load i8, i8* %data, align 1, !dbg !10003
  %conv = zext i8 %4 to i32, !dbg !10003
  %and = and i32 %conv, 1, !dbg !10005
  %cmp2 = icmp eq i32 %and, 0, !dbg !10006
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !10007

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %tslock.addr, align 8, !dbg !10008
  store i8 0, i8* %5, align 1, !dbg !10010
  br label %if.end9, !dbg !10011

if.else:                                          ; preds = %if.end
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10012
  %call5 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 16, i8* %data) #8, !dbg !10014
  %7 = load i8, i8* %data, align 1, !dbg !10015
  %conv6 = zext i8 %7 to i32, !dbg !10015
  %and7 = and i32 %conv6, 32, !dbg !10016
  %tobool = icmp ne i32 %and7, 0, !dbg !10017
  %8 = zext i1 %tobool to i64, !dbg !10017
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !10017
  %conv8 = trunc i32 %cond to i8, !dbg !10018
  %9 = load i8*, i8** %tslock.addr, align 8, !dbg !10019
  store i8 %conv8, i8* %9, align 1, !dbg !10020
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then4
  store i32 0, i32* %retval, align 4, !dbg !10021
  br label %return, !dbg !10021

return:                                           ; preds = %if.end9, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !10022
  ret i32 %10, !dbg !10022
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_init_s(%struct.dvb_frontend* %fe) #0 !dbg !10023 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !10024, metadata !DIExpression()), !dbg !10025
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !10026, metadata !DIExpression()), !dbg !10027
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10028
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !10029
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !10029
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !10028
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !10027
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10030
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 5, !dbg !10032
  %4 = load i32, i32* %state, align 8, !dbg !10032
  %cmp = icmp eq i32 %4, 1, !dbg !10033
  br i1 %cmp, label %if.then, label %if.else, !dbg !10034

if.then:                                          ; preds = %entry
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10035
  %call = call i32 @cxd2841er_sleep_s_to_shutdown(%struct.cxd2841er_priv* %5) #8, !dbg !10037
  br label %if.end6, !dbg !10038

if.else:                                          ; preds = %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10039
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %6, i32 0, i32 5, !dbg !10041
  %7 = load i32, i32* %state1, align 8, !dbg !10041
  %cmp2 = icmp eq i32 %7, 2, !dbg !10042
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !10043

if.then3:                                         ; preds = %if.else
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10044
  %call4 = call i32 @cxd2841er_active_s_to_sleep_s(%struct.cxd2841er_priv* %8) #8, !dbg !10046
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10047
  %call5 = call i32 @cxd2841er_sleep_s_to_shutdown(%struct.cxd2841er_priv* %9) #8, !dbg !10048
  br label %if.end, !dbg !10049

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10050
  %call7 = call i32 @cxd2841er_shutdown_to_sleep_s(%struct.cxd2841er_priv* %10) #8, !dbg !10051
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10052
  %call8 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %11, i8 zeroext 1, i8 zeroext 0, i8 zeroext -96) #8, !dbg !10053
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10054
  %call9 = call i32 @cxd2841er_set_reg_bits(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext -71, i8 zeroext 1, i8 zeroext 1) #8, !dbg !10055
  %13 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10056
  call void @cxd2841er_init_stats(%struct.dvb_frontend* %13) #8, !dbg !10057
  ret i32 0, !dbg !10058
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_s(%struct.dvb_frontend* %fe) #0 !dbg !10059 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !10062, metadata !DIExpression()), !dbg !10063
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10064
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !10065
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !10065
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !10064
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !10063
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10066
  %demodulator_priv1 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 3, !dbg !10067
  %4 = load i8*, i8** %demodulator_priv1, align 8, !dbg !10067
  %5 = bitcast i8* %4 to %struct.cxd2841er_priv*, !dbg !10066
  %call = call i32 @cxd2841er_active_s_to_sleep_s(%struct.cxd2841er_priv* %5) #8, !dbg !10068
  %6 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10069
  %demodulator_priv2 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %6, i32 0, i32 3, !dbg !10070
  %7 = load i8*, i8** %demodulator_priv2, align 8, !dbg !10070
  %8 = bitcast i8* %7 to %struct.cxd2841er_priv*, !dbg !10069
  %call3 = call i32 @cxd2841er_sleep_s_to_shutdown(%struct.cxd2841er_priv* %8) #8, !dbg !10071
  ret i32 0, !dbg !10072
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_tune_s(%struct.dvb_frontend* %fe, i1 zeroext %re_tune, i32 %mode_flags, i32* %delay, i32* %status) #0 !dbg !10073 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %re_tune.addr = alloca i8, align 1
  %mode_flags.addr = alloca i32, align 4
  %delay.addr = alloca i32*, align 8
  %status.addr = alloca i32*, align 8
  %ret = alloca i32, align 4
  %carrier_offset = alloca i32, align 4
  %priv = alloca %struct.cxd2841er_priv*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !10074, metadata !DIExpression()), !dbg !10075
  %frombool = zext i1 %re_tune to i8
  store i8 %frombool, i8* %re_tune.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %re_tune.addr, metadata !10076, metadata !DIExpression()), !dbg !10077
  store i32 %mode_flags, i32* %mode_flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode_flags.addr, metadata !10078, metadata !DIExpression()), !dbg !10079
  store i32* %delay, i32** %delay.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %delay.addr, metadata !10080, metadata !DIExpression()), !dbg !10081
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !10082, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10084, metadata !DIExpression()), !dbg !10085
  call void @llvm.dbg.declare(metadata i32* %carrier_offset, metadata !10086, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !10088, metadata !DIExpression()), !dbg !10089
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10090
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !10091
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !10091
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !10090
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !10089
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !10092, metadata !DIExpression()), !dbg !10093
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10094
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 8, !dbg !10095
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !10093
  %4 = load i8, i8* %re_tune.addr, align 1, !dbg !10096
  %tobool = trunc i8 %4 to i1, !dbg !10096
  br i1 %tobool, label %if.then, label %if.end15, !dbg !10098

if.then:                                          ; preds = %entry
  %5 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10099
  %call = call i32 @cxd2841er_set_frontend_s(%struct.dvb_frontend* %5) #8, !dbg !10101
  store i32 %call, i32* %ret, align 4, !dbg !10102
  %6 = load i32, i32* %ret, align 4, !dbg !10103
  %tobool1 = icmp ne i32 %6, 0, !dbg !10103
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !10105

if.then2:                                         ; preds = %if.then
  %7 = load i32, i32* %ret, align 4, !dbg !10106
  store i32 %7, i32* %retval, align 4, !dbg !10107
  br label %return, !dbg !10107

if.end:                                           ; preds = %if.then
  %8 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10108
  %9 = load i32*, i32** %status.addr, align 8, !dbg !10109
  %call3 = call i32 @cxd2841er_read_status_s(%struct.dvb_frontend* %8, i32* %9) #8, !dbg !10110
  %10 = load i32*, i32** %status.addr, align 8, !dbg !10111
  %11 = load i32, i32* %10, align 4, !dbg !10113
  %and = and i32 %11, 16, !dbg !10114
  %tobool4 = icmp ne i32 %and, 0, !dbg !10114
  br i1 %tobool4, label %if.then5, label %if.end14, !dbg !10115

if.then5:                                         ; preds = %if.end
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10116
  %call6 = call i32 @cxd2841er_get_carrier_offset_s_s2(%struct.cxd2841er_priv* %12, i32* %carrier_offset) #8, !dbg !10119
  %tobool7 = icmp ne i32 %call6, 0, !dbg !10119
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !10120

if.then8:                                         ; preds = %if.then5
  store i32 -22, i32* %retval, align 4, !dbg !10121
  br label %return, !dbg !10121

if.end9:                                          ; preds = %if.then5
  %13 = load i32, i32* %carrier_offset, align 4, !dbg !10122
  %14 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !10123
  %frequency = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %14, i32 0, i32 0, !dbg !10124
  %15 = load i32, i32* %frequency, align 4, !dbg !10125
  %add = add i32 %15, %13, !dbg !10125
  store i32 %add, i32* %frequency, align 4, !dbg !10125
  %16 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10126
  %call10 = call i32 @cxd2841er_set_frontend_s(%struct.dvb_frontend* %16) #8, !dbg !10127
  store i32 %call10, i32* %ret, align 4, !dbg !10128
  %17 = load i32, i32* %ret, align 4, !dbg !10129
  %tobool11 = icmp ne i32 %17, 0, !dbg !10129
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !10131

if.then12:                                        ; preds = %if.end9
  %18 = load i32, i32* %ret, align 4, !dbg !10132
  store i32 %18, i32* %retval, align 4, !dbg !10133
  br label %return, !dbg !10133

if.end13:                                         ; preds = %if.end9
  br label %if.end14, !dbg !10134

if.end14:                                         ; preds = %if.end13, %if.end
  br label %if.end15, !dbg !10135

if.end15:                                         ; preds = %if.end14, %entry
  %19 = load i32*, i32** %delay.addr, align 8, !dbg !10136
  store i32 50, i32* %19, align 4, !dbg !10137
  %20 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10138
  %21 = load i32*, i32** %status.addr, align 8, !dbg !10139
  %call16 = call i32 @cxd2841er_read_status_s(%struct.dvb_frontend* %20, i32* %21) #8, !dbg !10140
  store i32 %call16, i32* %retval, align 4, !dbg !10141
  br label %return, !dbg !10141

return:                                           ; preds = %if.end15, %if.then12, %if.then8, %if.then2
  %22 = load i32, i32* %retval, align 4, !dbg !10142
  ret i32 %22, !dbg !10142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_set_frontend_s(%struct.dvb_frontend* %fe) #0 !dbg !10143 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %timeout = alloca i32, align 4
  %carr_offset = alloca i32, align 4
  %status = alloca i32, align 4
  %priv = alloca %struct.cxd2841er_priv*, align 8
  %p = alloca %struct.dtv_frontend_properties*, align 8
  %symbol_rate = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !10144, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10146, metadata !DIExpression()), !dbg !10147
  store i32 0, i32* %ret, align 4, !dbg !10147
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10148, metadata !DIExpression()), !dbg !10149
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !10150, metadata !DIExpression()), !dbg !10151
  call void @llvm.dbg.declare(metadata i32* %carr_offset, metadata !10152, metadata !DIExpression()), !dbg !10153
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10154, metadata !DIExpression()), !dbg !10155
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !10156, metadata !DIExpression()), !dbg !10157
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10158
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !10159
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !10159
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !10158
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !10157
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %p, metadata !10160, metadata !DIExpression()), !dbg !10161
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10162
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 8, !dbg !10163
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %p, align 8, !dbg !10161
  call void @llvm.dbg.declare(metadata i32* %symbol_rate, metadata !10164, metadata !DIExpression()), !dbg !10165
  %4 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !10166
  %symbol_rate1 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %4, i32 0, i32 10, !dbg !10167
  %5 = load i32, i32* %symbol_rate1, align 4, !dbg !10167
  %div = udiv i32 %5, 1000, !dbg !10168
  store i32 %div, i32* %symbol_rate, align 4, !dbg !10165
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10169
  %flags = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %6, i32 0, i32 9, !dbg !10171
  %7 = load i32, i32* %flags, align 8, !dbg !10171
  %and = and i32 %7, 16, !dbg !10172
  %tobool = icmp ne i32 %and, 0, !dbg !10172
  br i1 %tobool, label %if.then, label %if.end, !dbg !10173

if.then:                                          ; preds = %entry
  %8 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10174
  %call = call i32 @cxd2841er_tuner_set(%struct.dvb_frontend* %8) #8, !dbg !10175
  br label %if.end, !dbg !10175

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10176
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %9, i32 0, i32 5, !dbg !10177
  %10 = load i32, i32* %state, align 8, !dbg !10177
  switch i32 %10, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
  ], !dbg !10178

sw.bb:                                            ; preds = %if.end
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10179
  %12 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !10181
  %delivery_system = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %12, i32 0, i32 15, !dbg !10182
  %13 = load i32, i32* %delivery_system, align 4, !dbg !10182
  %conv = trunc i32 %13 to i8, !dbg !10181
  %14 = load i32, i32* %symbol_rate, align 4, !dbg !10183
  %call2 = call i32 @cxd2841er_sleep_s_to_active_s(%struct.cxd2841er_priv* %11, i8 zeroext %conv, i32 %14) #8, !dbg !10184
  store i32 %call2, i32* %ret, align 4, !dbg !10185
  br label %sw.epilog, !dbg !10186

sw.bb3:                                           ; preds = %if.end
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10187
  %16 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !10188
  %call4 = call i32 @cxd2841er_retune_active(%struct.cxd2841er_priv* %15, %struct.dtv_frontend_properties* %16) #8, !dbg !10189
  store i32 %call4, i32* %ret, align 4, !dbg !10190
  br label %sw.epilog, !dbg !10191

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %ret, align 4, !dbg !10192
  br label %done, !dbg !10193

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb
  %17 = load i32, i32* %ret, align 4, !dbg !10194
  %tobool5 = icmp ne i32 %17, 0, !dbg !10194
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10196

if.then6:                                         ; preds = %sw.epilog
  br label %done, !dbg !10197

if.end7:                                          ; preds = %sw.epilog
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10199
  %flags8 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %18, i32 0, i32 9, !dbg !10201
  %19 = load i32, i32* %flags8, align 8, !dbg !10201
  %and9 = and i32 %19, 16, !dbg !10202
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10202
  br i1 %tobool10, label %if.end13, label %if.then11, !dbg !10203

if.then11:                                        ; preds = %if.end7
  %20 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10204
  %call12 = call i32 @cxd2841er_tuner_set(%struct.dvb_frontend* %20) #8, !dbg !10205
  br label %if.end13, !dbg !10205

if.end13:                                         ; preds = %if.then11, %if.end7
  %21 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10206
  %call14 = call i32 @cxd2841er_tune_done(%struct.cxd2841er_priv* %21) #8, !dbg !10207
  %22 = load i32, i32* %symbol_rate, align 4, !dbg !10208
  %sub = sub i32 %22, 1, !dbg !10209
  %add = add i32 3000000, %sub, !dbg !10210
  %23 = load i32, i32* %symbol_rate, align 4, !dbg !10211
  %div15 = udiv i32 %add, %23, !dbg !10212
  %add16 = add i32 %div15, 150, !dbg !10213
  store i32 %add16, i32* %timeout, align 4, !dbg !10214
  store i32 0, i32* %i, align 4, !dbg !10215
  br label %do.body, !dbg !10216

do.body:                                          ; preds = %do.cond, %if.end13
  call void @usleep_range(i64 10000, i64 12000) #8, !dbg !10217
  %24 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10219
  %call17 = call i32 @cxd2841er_read_status_s(%struct.dvb_frontend* %24, i32* %status) #8, !dbg !10220
  %25 = load i32, i32* %status, align 4, !dbg !10221
  %and18 = and i32 %25, 16, !dbg !10223
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10223
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !10224

if.then20:                                        ; preds = %do.body
  br label %do.end, !dbg !10225

if.end21:                                         ; preds = %do.body
  %26 = load i32, i32* %i, align 4, !dbg !10226
  %inc = add i32 %26, 1, !dbg !10226
  store i32 %inc, i32* %i, align 4, !dbg !10226
  br label %do.cond, !dbg !10227

do.cond:                                          ; preds = %if.end21
  %27 = load i32, i32* %i, align 4, !dbg !10228
  %28 = load i32, i32* %timeout, align 4, !dbg !10229
  %div22 = sdiv i32 %28, 10, !dbg !10230
  %cmp = icmp slt i32 %27, %div22, !dbg !10231
  br i1 %cmp, label %do.body, label %do.end, !dbg !10227, !llvm.loop !10232

do.end:                                           ; preds = %do.cond, %if.then20
  %29 = load i32, i32* %status, align 4, !dbg !10234
  %and24 = and i32 %29, 16, !dbg !10236
  %tobool25 = icmp ne i32 %and24, 0, !dbg !10236
  br i1 %tobool25, label %if.then26, label %if.end31, !dbg !10237

if.then26:                                        ; preds = %do.end
  %30 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10238
  %call27 = call i32 @cxd2841er_get_carrier_offset_s_s2(%struct.cxd2841er_priv* %30, i32* %carr_offset) #8, !dbg !10241
  %tobool28 = icmp ne i32 %call27, 0, !dbg !10241
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !10242

if.then29:                                        ; preds = %if.then26
  store i32 -22, i32* %ret, align 4, !dbg !10243
  br label %done, !dbg !10245

if.end30:                                         ; preds = %if.then26
  br label %if.end31, !dbg !10246

if.end31:                                         ; preds = %if.end30, %do.end
  br label %done, !dbg !10247

done:                                             ; preds = %if.end31, %if.then29, %if.then6, %sw.default
  call void @llvm.dbg.label(metadata !10248), !dbg !10249
  %31 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !10250
  %strength = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %31, i32 0, i32 42, !dbg !10251
  %stat = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength, i32 0, i32 1, !dbg !10252
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat, i64 0, i64 0, !dbg !10250
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 0, !dbg !10253
  store i8 2, i8* %scale, align 1, !dbg !10254
  %32 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !10255
  %cnr = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %32, i32 0, i32 43, !dbg !10256
  %stat32 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr, i32 0, i32 1, !dbg !10257
  %arrayidx33 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat32, i64 0, i64 0, !dbg !10255
  %scale34 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx33, i32 0, i32 0, !dbg !10258
  store i8 0, i8* %scale34, align 1, !dbg !10259
  %33 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !10260
  %block_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %33, i32 0, i32 48, !dbg !10261
  %stat35 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error, i32 0, i32 1, !dbg !10262
  %arrayidx36 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat35, i64 0, i64 0, !dbg !10260
  %scale37 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx36, i32 0, i32 0, !dbg !10263
  store i8 0, i8* %scale37, align 1, !dbg !10264
  %34 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !10265
  %post_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %34, i32 0, i32 46, !dbg !10266
  %stat38 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error, i32 0, i32 1, !dbg !10267
  %arrayidx39 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat38, i64 0, i64 0, !dbg !10265
  %scale40 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx39, i32 0, i32 0, !dbg !10268
  store i8 0, i8* %scale40, align 1, !dbg !10269
  %35 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %p, align 8, !dbg !10270
  %post_bit_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %35, i32 0, i32 47, !dbg !10271
  %stat41 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count, i32 0, i32 1, !dbg !10272
  %arrayidx42 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat41, i64 0, i64 0, !dbg !10270
  %scale43 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx42, i32 0, i32 0, !dbg !10273
  store i8 0, i8* %scale43, align 1, !dbg !10274
  %36 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10275
  %stats_time = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %36, i32 0, i32 10, !dbg !10276
  store i64 0, i64* %stats_time, align 8, !dbg !10277
  %37 = load i32, i32* %ret, align 4, !dbg !10278
  ret i32 %37, !dbg !10279
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_send_diseqc_msg(%struct.dvb_frontend* %fe, %struct.dvb_diseqc_master_cmd* %cmd) #0 !dbg !10280 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %cmd.addr = alloca %struct.dvb_diseqc_master_cmd*, align 8
  %i = alloca i32, align 4
  %data = alloca [12 x i8], align 1
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !10281, metadata !DIExpression()), !dbg !10282
  store %struct.dvb_diseqc_master_cmd* %cmd, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_diseqc_master_cmd** %cmd.addr, metadata !10283, metadata !DIExpression()), !dbg !10284
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10285, metadata !DIExpression()), !dbg !10286
  call void @llvm.dbg.declare(metadata [12 x i8]* %data, metadata !10287, metadata !DIExpression()), !dbg !10289
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !10290, metadata !DIExpression()), !dbg !10291
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10292
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !10293
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !10293
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !10292
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !10291
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10294
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 5, !dbg !10296
  %4 = load i32, i32* %state, align 8, !dbg !10296
  %cmp = icmp ne i32 %4, 1, !dbg !10297
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10298

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10299
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %5, i32 0, i32 5, !dbg !10300
  %6 = load i32, i32* %state1, align 8, !dbg !10300
  %cmp2 = icmp ne i32 %6, 2, !dbg !10301
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10302

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10303
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %7, i32 0, i32 1, !dbg !10303
  %8 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !10303
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %8, i32 0, i32 9, !dbg !10303
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10303
  %state3 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %9, i32 0, i32 5, !dbg !10303
  %10 = load i32, i32* %state3, align 8, !dbg !10303
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.cxd2841er_send_diseqc_msg, i64 0, i64 0), i32 %10) #9, !dbg !10303
  store i32 -22, i32* %retval, align 4, !dbg !10305
  br label %return, !dbg !10305

if.end:                                           ; preds = %land.lhs.true, %entry
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10306
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %11, i8 zeroext 1, i8 zeroext 0, i8 zeroext -69) #8, !dbg !10307
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10308
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext 51, i8 zeroext 1) #8, !dbg !10309
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10310
  %14 = load %struct.dvb_diseqc_master_cmd*, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8, !dbg !10311
  %msg_len = getelementptr inbounds %struct.dvb_diseqc_master_cmd, %struct.dvb_diseqc_master_cmd* %14, i32 0, i32 1, !dbg !10312
  %15 = load i8, i8* %msg_len, align 1, !dbg !10312
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext 61, i8 zeroext %15) #8, !dbg !10313
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %data, i64 0, i64 0, !dbg !10314
  call void @llvm.memset.p0i8.i64(i8* align 1 %arraydecay, i8 0, i64 12, i1 false), !dbg !10314
  store i32 0, i32* %i, align 4, !dbg !10315
  br label %for.cond, !dbg !10317

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load i32, i32* %i, align 4, !dbg !10318
  %17 = load %struct.dvb_diseqc_master_cmd*, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8, !dbg !10320
  %msg_len6 = getelementptr inbounds %struct.dvb_diseqc_master_cmd, %struct.dvb_diseqc_master_cmd* %17, i32 0, i32 1, !dbg !10321
  %18 = load i8, i8* %msg_len6, align 1, !dbg !10321
  %conv = zext i8 %18 to i32, !dbg !10320
  %cmp7 = icmp slt i32 %16, %conv, !dbg !10322
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !10323

land.rhs:                                         ; preds = %for.cond
  %19 = load i32, i32* %i, align 4, !dbg !10324
  %conv9 = sext i32 %19 to i64, !dbg !10324
  %cmp10 = icmp ult i64 %conv9, 12, !dbg !10325
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %20 = phi i1 [ false, %for.cond ], [ %cmp10, %land.rhs ], !dbg !10326
  br i1 %20, label %for.body, label %for.end, !dbg !10327

for.body:                                         ; preds = %land.end
  %21 = load %struct.dvb_diseqc_master_cmd*, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8, !dbg !10328
  %msg = getelementptr inbounds %struct.dvb_diseqc_master_cmd, %struct.dvb_diseqc_master_cmd* %21, i32 0, i32 0, !dbg !10329
  %22 = load i32, i32* %i, align 4, !dbg !10330
  %idxprom = sext i32 %22 to i64, !dbg !10328
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msg, i64 0, i64 %idxprom, !dbg !10328
  %23 = load i8, i8* %arrayidx, align 1, !dbg !10328
  %24 = load i32, i32* %i, align 4, !dbg !10331
  %idxprom12 = sext i32 %24 to i64, !dbg !10332
  %arrayidx13 = getelementptr [12 x i8], [12 x i8]* %data, i64 0, i64 %idxprom12, !dbg !10332
  store i8 %23, i8* %arrayidx13, align 1, !dbg !10333
  br label %for.inc, !dbg !10332

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !10334
  %inc = add i32 %25, 1, !dbg !10334
  store i32 %inc, i32* %i, align 4, !dbg !10334
  br label %for.cond, !dbg !10335, !llvm.loop !10336

for.end:                                          ; preds = %land.end
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10338
  %arraydecay14 = getelementptr inbounds [12 x i8], [12 x i8]* %data, i64 0, i64 0, !dbg !10339
  %call15 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %26, i8 zeroext 1, i8 zeroext 62, i8* %arraydecay14, i32 12) #8, !dbg !10340
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10341
  %call16 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %27, i8 zeroext 1, i8 zeroext 55, i8 zeroext 1) #8, !dbg !10342
  %28 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10343
  %call17 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %28, i8 zeroext 1, i8 zeroext 56, i8 zeroext 0) #8, !dbg !10344
  %29 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10345
  %call18 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %29, i8 zeroext 1, i8 zeroext 50, i8 zeroext 1) #8, !dbg !10346
  store i32 0, i32* %i, align 4, !dbg !10347
  br label %for.cond19, !dbg !10349

for.cond19:                                       ; preds = %for.inc28, %for.end
  %30 = load i32, i32* %i, align 4, !dbg !10350
  %cmp20 = icmp slt i32 %30, 50, !dbg !10352
  br i1 %cmp20, label %for.body22, label %for.end30, !dbg !10353

for.body22:                                       ; preds = %for.cond19
  %31 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10354
  %arraydecay23 = getelementptr inbounds [12 x i8], [12 x i8]* %data, i64 0, i64 0, !dbg !10356
  %call24 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %31, i8 zeroext 1, i8 zeroext 16, i8* %arraydecay23) #8, !dbg !10357
  %arrayidx25 = getelementptr [12 x i8], [12 x i8]* %data, i64 0, i64 0, !dbg !10358
  %32 = load i8, i8* %arrayidx25, align 1, !dbg !10358
  %tobool = icmp ne i8 %32, 0, !dbg !10358
  br i1 %tobool, label %if.end27, label %if.then26, !dbg !10360

if.then26:                                        ; preds = %for.body22
  store i32 0, i32* %retval, align 4, !dbg !10361
  br label %return, !dbg !10361

if.end27:                                         ; preds = %for.body22
  call void @msleep(i32 20) #8, !dbg !10363
  br label %for.inc28, !dbg !10364

for.inc28:                                        ; preds = %if.end27
  %33 = load i32, i32* %i, align 4, !dbg !10365
  %inc29 = add i32 %33, 1, !dbg !10365
  store i32 %inc29, i32* %i, align 4, !dbg !10365
  br label %for.cond19, !dbg !10366, !llvm.loop !10367

for.end30:                                        ; preds = %for.cond19
  store i32 -110, i32* %retval, align 4, !dbg !10369
  br label %return, !dbg !10369

return:                                           ; preds = %for.end30, %if.then26, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !10370
  ret i32 %34, !dbg !10370
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_send_burst(%struct.dvb_frontend* %fe, i32 %burst) #0 !dbg !10371 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %burst.addr = alloca i32, align 4
  %data = alloca i8, align 1
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !10372, metadata !DIExpression()), !dbg !10373
  store i32 %burst, i32* %burst.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %burst.addr, metadata !10374, metadata !DIExpression()), !dbg !10375
  call void @llvm.dbg.declare(metadata i8* %data, metadata !10376, metadata !DIExpression()), !dbg !10377
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !10378, metadata !DIExpression()), !dbg !10379
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10380
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !10381
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !10381
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !10380
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !10379
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10382
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 5, !dbg !10384
  %4 = load i32, i32* %state, align 8, !dbg !10384
  %cmp = icmp ne i32 %4, 1, !dbg !10385
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10386

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10387
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %5, i32 0, i32 5, !dbg !10388
  %6 = load i32, i32* %state1, align 8, !dbg !10388
  %cmp2 = icmp ne i32 %6, 2, !dbg !10389
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10390

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10391
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %7, i32 0, i32 1, !dbg !10391
  %8 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !10391
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %8, i32 0, i32 9, !dbg !10391
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10391
  %state3 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %9, i32 0, i32 5, !dbg !10391
  %10 = load i32, i32* %state3, align 8, !dbg !10391
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.cxd2841er_send_burst, i64 0, i64 0), i32 %10) #9, !dbg !10391
  store i32 -22, i32* %retval, align 4, !dbg !10393
  br label %return, !dbg !10393

if.end:                                           ; preds = %land.lhs.true, %entry
  %11 = load i32, i32* %burst.addr, align 4, !dbg !10394
  %cmp4 = icmp eq i32 %11, 0, !dbg !10395
  %12 = zext i1 %cmp4 to i64, !dbg !10394
  %cond = select i1 %cmp4, i32 0, i32 1, !dbg !10394
  %conv = trunc i32 %cond to i8, !dbg !10396
  store i8 %conv, i8* %data, align 1, !dbg !10397
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10398
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext 0, i8 zeroext -69) #8, !dbg !10399
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10400
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 52, i8 zeroext 1) #8, !dbg !10401
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10402
  %16 = load i8, i8* %data, align 1, !dbg !10403
  %call6 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext 53, i8 zeroext %16) #8, !dbg !10404
  store i32 0, i32* %retval, align 4, !dbg !10405
  br label %return, !dbg !10405

return:                                           ; preds = %if.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !10406
  ret i32 %17, !dbg !10406
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_set_tone(%struct.dvb_frontend* %fe, i32 %tone) #0 !dbg !10407 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %tone.addr = alloca i32, align 4
  %data = alloca i8, align 1
  %priv = alloca %struct.cxd2841er_priv*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !10408, metadata !DIExpression()), !dbg !10409
  store i32 %tone, i32* %tone.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tone.addr, metadata !10410, metadata !DIExpression()), !dbg !10411
  call void @llvm.dbg.declare(metadata i8* %data, metadata !10412, metadata !DIExpression()), !dbg !10413
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv, metadata !10414, metadata !DIExpression()), !dbg !10415
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !10416
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !10417
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !10417
  %2 = bitcast i8* %1 to %struct.cxd2841er_priv*, !dbg !10416
  store %struct.cxd2841er_priv* %2, %struct.cxd2841er_priv** %priv, align 8, !dbg !10415
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10418
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 5, !dbg !10420
  %4 = load i32, i32* %state, align 8, !dbg !10420
  %cmp = icmp ne i32 %4, 1, !dbg !10421
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10422

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10423
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %5, i32 0, i32 5, !dbg !10424
  %6 = load i32, i32* %state1, align 8, !dbg !10424
  %cmp2 = icmp ne i32 %6, 2, !dbg !10425
  br i1 %cmp2, label %if.then, label %if.end, !dbg !10426

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10427
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %7, i32 0, i32 1, !dbg !10427
  %8 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !10427
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %8, i32 0, i32 9, !dbg !10427
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10427
  %state3 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %9, i32 0, i32 5, !dbg !10427
  %10 = load i32, i32* %state3, align 8, !dbg !10427
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.cxd2841er_set_tone, i64 0, i64 0), i32 %10) #9, !dbg !10427
  store i32 -22, i32* %retval, align 4, !dbg !10429
  br label %return, !dbg !10429

if.end:                                           ; preds = %land.lhs.true, %entry
  %11 = load i32, i32* %tone.addr, align 4, !dbg !10430
  %cmp4 = icmp eq i32 %11, 0, !dbg !10431
  %12 = zext i1 %cmp4 to i64, !dbg !10430
  %cond = select i1 %cmp4, i32 1, i32 0, !dbg !10430
  %conv = trunc i32 %cond to i8, !dbg !10432
  store i8 %conv, i8* %data, align 1, !dbg !10433
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10434
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext 0, i8 zeroext -69) #8, !dbg !10435
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv, align 8, !dbg !10436
  %15 = load i8, i8* %data, align 1, !dbg !10437
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 54, i8 zeroext %15) #8, !dbg !10438
  store i32 0, i32* %retval, align 4, !dbg !10439
  br label %return, !dbg !10439

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !10440
  ret i32 %16, !dbg !10440
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_s_to_shutdown(%struct.cxd2841er_priv* %priv) #0 !dbg !10441 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !10442, metadata !DIExpression()), !dbg !10443
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10444
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !10446
  %1 = load i32, i32* %state, align 8, !dbg !10446
  %cmp = icmp ne i32 %1, 1, !dbg !10447
  br i1 %cmp, label %if.then, label %if.end, !dbg !10448

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10449
  br label %return, !dbg !10449

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10451
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10452
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10453
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext -128, i8 zeroext 63) #8, !dbg !10454
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10455
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 1, i8 zeroext -100, i8 zeroext 0) #8, !dbg !10456
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10457
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10458
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10459
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %6, i8 zeroext 0, i8 zeroext 21, i8 zeroext 1) #8, !dbg !10460
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10461
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %7, i8 zeroext 0, i8 zeroext 23, i8 zeroext 1) #8, !dbg !10462
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10463
  %state6 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %8, i32 0, i32 5, !dbg !10464
  store i32 0, i32* %state6, align 8, !dbg !10465
  store i32 0, i32* %retval, align 4, !dbg !10466
  br label %return, !dbg !10466

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !10467
  ret i32 %9, !dbg !10467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_active_s_to_sleep_s(%struct.cxd2841er_priv* %priv) #0 !dbg !10468 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !10469, metadata !DIExpression()), !dbg !10470
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10471
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !10473
  %1 = load i32, i32* %state, align 8, !dbg !10473
  %cmp = icmp ne i32 %1, 2, !dbg !10474
  br i1 %cmp, label %if.then, label %if.end, !dbg !10475

if.then:                                          ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10476
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %2, i32 0, i32 1, !dbg !10476
  %3 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !10476
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %3, i32 0, i32 9, !dbg !10476
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10476
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %4, i32 0, i32 5, !dbg !10476
  %5 = load i32, i32* %state1, align 8, !dbg !10476
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.cxd2841er_active_s_to_sleep_s, i64 0, i64 0), i32 %5) #9, !dbg !10476
  store i32 -22, i32* %retval, align 4, !dbg !10478
  br label %return, !dbg !10478

if.end:                                           ; preds = %entry
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10479
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %6, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10480
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10481
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %7, i8 zeroext 1, i8 zeroext -61, i8 zeroext 1) #8, !dbg !10482
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10483
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext -128, i8 zeroext 31) #8, !dbg !10484
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10485
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %9, i8 zeroext 1, i8 zeroext -127, i8 zeroext -1) #8, !dbg !10486
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10487
  %call5 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10488
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10489
  %call6 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %11, i8 zeroext 0, i8 zeroext 24, i8 zeroext 1) #8, !dbg !10490
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10491
  %call7 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %12, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10492
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10493
  %call8 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 1, i8 zeroext 49, i8 zeroext 0) #8, !dbg !10494
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10495
  %call9 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 99, i8 zeroext 22) #8, !dbg !10496
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10497
  %call10 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext 101, i8 zeroext 39) #8, !dbg !10498
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10499
  %call11 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %16, i8 zeroext 1, i8 zeroext 105, i8 zeroext 6) #8, !dbg !10500
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10501
  %call12 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext 44, i8 zeroext 0) #8, !dbg !10502
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10503
  %call13 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %18, i8 zeroext 1, i8 zeroext 0, i8 zeroext -82) #8, !dbg !10504
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10505
  %call14 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %19, i8 zeroext 1, i8 zeroext 48, i8 zeroext 0) #8, !dbg !10506
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10507
  %call15 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %20, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10508
  %21 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10509
  %call16 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %21, i8 zeroext 1, i8 zeroext 45, i8 zeroext 0) #8, !dbg !10510
  %22 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10511
  %state17 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %22, i32 0, i32 5, !dbg !10512
  store i32 1, i32* %state17, align 8, !dbg !10513
  store i32 0, i32* %retval, align 4, !dbg !10514
  br label %return, !dbg !10514

return:                                           ; preds = %if.end, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !10515
  ret i32 %23, !dbg !10515
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_shutdown_to_sleep_s(%struct.cxd2841er_priv* %priv) #0 !dbg !10516 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !10517, metadata !DIExpression()), !dbg !10518
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10519
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !10521
  %1 = load i32, i32* %state, align 8, !dbg !10521
  %cmp = icmp ne i32 %1, 0, !dbg !10522
  br i1 %cmp, label %if.then, label %if.end, !dbg !10523

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10524
  br label %return, !dbg !10524

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10526
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10527
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10528
  %call1 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %3, i8 zeroext 0, i8 zeroext 2, i8 zeroext 0) #8, !dbg !10529
  call void @usleep_range(i64 3000, i64 5000) #8, !dbg !10530
  %4 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10531
  %call2 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %4, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10532
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10533
  %call3 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %5, i8 zeroext 0, i8 zeroext 16, i8 zeroext 1) #8, !dbg !10534
  %6 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10535
  %xtal = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %6, i32 0, i32 7, !dbg !10536
  %7 = load i32, i32* %xtal, align 8, !dbg !10536
  switch i32 %7, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb5
    i32 2, label %sw.bb8
  ], !dbg !10537

sw.bb:                                            ; preds = %if.end
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10538
  %call4 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %8, i8 zeroext 0, i8 zeroext 20, i8 zeroext 0) #8, !dbg !10540
  br label %sw.epilog, !dbg !10541

sw.bb5:                                           ; preds = %if.end
  %9 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10542
  %call6 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %9, i8 zeroext 0, i8 zeroext 18, i8 zeroext 0) #8, !dbg !10543
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10544
  %call7 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %10, i8 zeroext 0, i8 zeroext 20, i8 zeroext 3) #8, !dbg !10545
  br label %sw.epilog, !dbg !10546

sw.bb8:                                           ; preds = %if.end
  %11 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10547
  %call9 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %11, i8 zeroext 0, i8 zeroext 20, i8 zeroext 1) #8, !dbg !10548
  br label %sw.epilog, !dbg !10549

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10550
  br label %return, !dbg !10550

sw.epilog:                                        ; preds = %sw.bb8, %sw.bb5, %sw.bb
  %12 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10551
  %call10 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %12, i8 zeroext 0, i8 zeroext 23, i8 zeroext 10) #8, !dbg !10552
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10553
  %call11 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 0, i8 zeroext 16, i8 zeroext 0) #8, !dbg !10554
  call void @usleep_range(i64 1000, i64 2000) #8, !dbg !10555
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10556
  %call12 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10557
  %15 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10558
  %call13 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %15, i8 zeroext 1, i8 zeroext -128, i8 zeroext 31) #8, !dbg !10559
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10560
  %call14 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %16, i8 zeroext 1, i8 zeroext -100, i8 zeroext 64) #8, !dbg !10561
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10562
  %call15 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext 67, i8 zeroext 10) #8, !dbg !10563
  %18 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10564
  %call16 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %18, i8 zeroext 1, i8 zeroext 65, i8 zeroext 10) #8, !dbg !10565
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10566
  %call17 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %19, i8 zeroext 1, i8 zeroext 99, i8 zeroext 22) #8, !dbg !10567
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10568
  %call18 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %20, i8 zeroext 1, i8 zeroext 101, i8 zeroext 39) #8, !dbg !10569
  %21 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10570
  %call19 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %21, i8 zeroext 1, i8 zeroext 105, i8 zeroext 6) #8, !dbg !10571
  %22 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10572
  %state20 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %22, i32 0, i32 5, !dbg !10573
  store i32 1, i32* %state20, align 8, !dbg !10574
  store i32 0, i32* %retval, align 4, !dbg !10575
  br label %return, !dbg !10575

return:                                           ; preds = %sw.epilog, %sw.default, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !10576
  ret i32 %23, !dbg !10576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_get_carrier_offset_s_s2(%struct.cxd2841er_priv* %priv, i32* %offset) #0 !dbg !10577 {
entry:
  %value.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr.i, metadata !6282, metadata !DIExpression()), !dbg !10578
  %index.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr.i, metadata !6289, metadata !DIExpression()), !dbg !10580
  %shift.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %shift.i, metadata !6291, metadata !DIExpression()), !dbg !10581
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %offset.addr = alloca i32*, align 8
  %data = alloca [3 x i8], align 1
  %is_hs_mode = alloca i8, align 1
  %cfrl_ctrlval = alloca i32, align 4
  %temp_div = alloca i32, align 4
  %temp_q = alloca i32, align 4
  %temp_r = alloca i32, align 4
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !10582, metadata !DIExpression()), !dbg !10583
  store i32* %offset, i32** %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %offset.addr, metadata !10584, metadata !DIExpression()), !dbg !10585
  call void @llvm.dbg.declare(metadata [3 x i8]* %data, metadata !10586, metadata !DIExpression()), !dbg !10587
  call void @llvm.dbg.declare(metadata i8* %is_hs_mode, metadata !10588, metadata !DIExpression()), !dbg !10589
  call void @llvm.dbg.declare(metadata i32* %cfrl_ctrlval, metadata !10590, metadata !DIExpression()), !dbg !10591
  call void @llvm.dbg.declare(metadata i32* %temp_div, metadata !10592, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.declare(metadata i32* %temp_q, metadata !10594, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.declare(metadata i32* %temp_r, metadata !10596, metadata !DIExpression()), !dbg !10597
  %0 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10598
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %0, i32 0, i32 5, !dbg !10600
  %1 = load i32, i32* %state, align 8, !dbg !10600
  %cmp = icmp ne i32 %1, 2, !dbg !10601
  br i1 %cmp, label %if.then, label %if.end, !dbg !10602

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10603
  br label %return, !dbg !10603

if.end:                                           ; preds = %entry
  %2 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10605
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %2, i8 zeroext 1, i8 zeroext 0, i8 zeroext -96) #8, !dbg !10606
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10607
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !10608
  %call1 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %3, i8 zeroext 1, i8 zeroext 16, i8* %arrayidx) #8, !dbg !10609
  %arrayidx2 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !10610
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !10610
  %conv = zext i8 %4 to i32, !dbg !10610
  %and = and i32 %conv, 1, !dbg !10612
  %tobool = icmp ne i32 %and, 0, !dbg !10612
  br i1 %tobool, label %if.then3, label %if.else, !dbg !10613

if.then3:                                         ; preds = %if.end
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10614
  %arrayidx4 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !10616
  %call5 = call i32 @cxd2841er_read_reg(%struct.cxd2841er_priv* %5, i8 zeroext 1, i8 zeroext 80, i8* %arrayidx4) #8, !dbg !10617
  %arrayidx6 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !10618
  %6 = load i8, i8* %arrayidx6, align 1, !dbg !10618
  %conv7 = zext i8 %6 to i32, !dbg !10618
  %and8 = and i32 %conv7, 16, !dbg !10619
  %tobool9 = icmp ne i32 %and8, 0, !dbg !10618
  %7 = zext i1 %tobool9 to i64, !dbg !10618
  %cond = select i1 %tobool9, i32 1, i32 0, !dbg !10618
  %conv10 = trunc i32 %cond to i8, !dbg !10620
  store i8 %conv10, i8* %is_hs_mode, align 1, !dbg !10621
  br label %if.end11, !dbg !10622

if.else:                                          ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10623
  br label %return, !dbg !10623

if.end11:                                         ; preds = %if.then3
  %8 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10625
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !10626
  %call12 = call i32 @cxd2841er_read_regs(%struct.cxd2841er_priv* %8, i8 zeroext 1, i8 zeroext 69, i8* %arraydecay, i32 3) #8, !dbg !10627
  %arrayidx13 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 0, !dbg !10628
  %9 = load i8, i8* %arrayidx13, align 1, !dbg !10628
  %conv14 = zext i8 %9 to i32, !dbg !10629
  %and15 = and i32 %conv14, 31, !dbg !10630
  %shl = shl i32 %and15, 16, !dbg !10631
  %arrayidx16 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 1, !dbg !10632
  %10 = load i8, i8* %arrayidx16, align 1, !dbg !10632
  %conv17 = zext i8 %10 to i32, !dbg !10633
  %and18 = and i32 %conv17, 255, !dbg !10634
  %shl19 = shl i32 %and18, 8, !dbg !10635
  %or = or i32 %shl, %shl19, !dbg !10636
  %arrayidx20 = getelementptr [3 x i8], [3 x i8]* %data, i64 0, i64 2, !dbg !10637
  %11 = load i8, i8* %arrayidx20, align 1, !dbg !10637
  %conv21 = zext i8 %11 to i32, !dbg !10638
  %and22 = and i32 %conv21, 255, !dbg !10639
  %or23 = or i32 %or, %and22, !dbg !10640
  store i32 %or23, i32* %value.addr.i, align 4
  store i32 20, i32* %index.addr.i, align 4
  %12 = load i32, i32* %index.addr.i, align 4, !dbg !10641
  %sub.i = sub i32 31, %12, !dbg !10642
  %conv.i = trunc i32 %sub.i to i8, !dbg !10643
  store i8 %conv.i, i8* %shift.i, align 1, !dbg !10581
  %13 = load i32, i32* %value.addr.i, align 4, !dbg !10644
  %14 = load i8, i8* %shift.i, align 1, !dbg !10645
  %conv1.i = zext i8 %14 to i32, !dbg !10645
  %shl.i = shl i32 %13, %conv1.i, !dbg !10646
  %15 = load i8, i8* %shift.i, align 1, !dbg !10647
  %conv2.i = zext i8 %15 to i32, !dbg !10647
  %shr.i = ashr i32 %shl.i, %conv2.i, !dbg !10648
  store i32 %shr.i, i32* %cfrl_ctrlval, align 4, !dbg !10649
  %16 = load i8, i8* %is_hs_mode, align 1, !dbg !10650
  %conv25 = zext i8 %16 to i32, !dbg !10650
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !10650
  %17 = zext i1 %tobool26 to i64, !dbg !10650
  %cond27 = select i1 %tobool26, i32 1048576, i32 1572864, !dbg !10650
  store i32 %cond27, i32* %temp_div, align 4, !dbg !10651
  %18 = load i32, i32* %cfrl_ctrlval, align 4, !dbg !10652
  %cmp28 = icmp sgt i32 %18, 0, !dbg !10654
  br i1 %cmp28, label %if.then30, label %if.else34, !dbg !10655

if.then30:                                        ; preds = %if.end11
  %19 = load i32, i32* %cfrl_ctrlval, align 4, !dbg !10656
  %conv31 = sext i32 %19 to i64, !dbg !10656
  %mul = mul i64 97375, %conv31, !dbg !10658
  %20 = load i32, i32* %temp_div, align 4, !dbg !10659
  %call32 = call i64 @div_s64_rem(i64 %mul, i32 %20, i32* %temp_r) #8, !dbg !10660
  %conv33 = trunc i64 %call32 to i32, !dbg !10660
  store i32 %conv33, i32* %temp_q, align 4, !dbg !10661
  br label %if.end39, !dbg !10662

if.else34:                                        ; preds = %if.end11
  %21 = load i32, i32* %cfrl_ctrlval, align 4, !dbg !10663
  %conv35 = sext i32 %21 to i64, !dbg !10663
  %mul36 = mul i64 -97375, %conv35, !dbg !10665
  %22 = load i32, i32* %temp_div, align 4, !dbg !10666
  %call37 = call i64 @div_s64_rem(i64 %mul36, i32 %22, i32* %temp_r) #8, !dbg !10667
  %conv38 = trunc i64 %call37 to i32, !dbg !10667
  store i32 %conv38, i32* %temp_q, align 4, !dbg !10668
  br label %if.end39

if.end39:                                         ; preds = %if.else34, %if.then30
  %23 = load i32, i32* %temp_r, align 4, !dbg !10669
  %24 = load i32, i32* %temp_div, align 4, !dbg !10671
  %div = sdiv i32 %24, 2, !dbg !10672
  %cmp40 = icmp sge i32 %23, %div, !dbg !10673
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !10674

if.then42:                                        ; preds = %if.end39
  %25 = load i32, i32* %temp_q, align 4, !dbg !10675
  %inc = add i32 %25, 1, !dbg !10675
  store i32 %inc, i32* %temp_q, align 4, !dbg !10675
  br label %if.end43, !dbg !10676

if.end43:                                         ; preds = %if.then42, %if.end39
  %26 = load i32, i32* %cfrl_ctrlval, align 4, !dbg !10677
  %cmp44 = icmp sgt i32 %26, 0, !dbg !10679
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !10680

if.then46:                                        ; preds = %if.end43
  %27 = load i32, i32* %temp_q, align 4, !dbg !10681
  %mul47 = mul i32 %27, -1, !dbg !10681
  store i32 %mul47, i32* %temp_q, align 4, !dbg !10681
  br label %if.end48, !dbg !10682

if.end48:                                         ; preds = %if.then46, %if.end43
  %28 = load i32, i32* %temp_q, align 4, !dbg !10683
  %29 = load i32*, i32** %offset.addr, align 8, !dbg !10684
  store i32 %28, i32* %29, align 4, !dbg !10685
  store i32 0, i32* %retval, align 4, !dbg !10686
  br label %return, !dbg !10686

return:                                           ; preds = %if.end48, %if.else, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !10687
  ret i32 %30, !dbg !10687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cxd2841er_sleep_s_to_active_s(%struct.cxd2841er_priv* %priv, i8 zeroext %system, i32 %symbol_rate) #0 !dbg !10688 {
entry:
  %retval = alloca i32, align 4
  %priv.addr = alloca %struct.cxd2841er_priv*, align 8
  %system.addr = alloca i8, align 1
  %symbol_rate.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %data = alloca [4 x i8], align 1
  store %struct.cxd2841er_priv* %priv, %struct.cxd2841er_priv** %priv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cxd2841er_priv** %priv.addr, metadata !10691, metadata !DIExpression()), !dbg !10692
  store i8 %system, i8* %system.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %system.addr, metadata !10693, metadata !DIExpression()), !dbg !10694
  store i32 %symbol_rate, i32* %symbol_rate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %symbol_rate.addr, metadata !10695, metadata !DIExpression()), !dbg !10696
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10697, metadata !DIExpression()), !dbg !10698
  call void @llvm.dbg.declare(metadata [4 x i8]* %data, metadata !10699, metadata !DIExpression()), !dbg !10700
  %0 = bitcast [4 x i8]* %data to i8*, !dbg !10700
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 4, i1 false), !dbg !10700
  %1 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10701
  %state = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %1, i32 0, i32 5, !dbg !10703
  %2 = load i32, i32* %state, align 8, !dbg !10703
  %cmp = icmp ne i32 %2, 1, !dbg !10704
  br i1 %cmp, label %if.then, label %if.end, !dbg !10705

if.then:                                          ; preds = %entry
  %3 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10706
  %i2c = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %3, i32 0, i32 1, !dbg !10706
  %4 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !10706
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %4, i32 0, i32 9, !dbg !10706
  %5 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10706
  %state1 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %5, i32 0, i32 5, !dbg !10706
  %6 = load i32, i32* %state1, align 8, !dbg !10706
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.cxd2841er_sleep_s_to_active_s, i64 0, i64 0), i32 %6) #9, !dbg !10706
  store i32 -22, i32* %retval, align 4, !dbg !10708
  br label %return, !dbg !10708

if.end:                                           ; preds = %entry
  %7 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10709
  call void @cxd2841er_set_ts_clock_mode(%struct.cxd2841er_priv* %7, i8 zeroext 5) #8, !dbg !10710
  %8 = load i8, i8* %system.addr, align 1, !dbg !10711
  %conv = zext i8 %8 to i32, !dbg !10711
  %cmp2 = icmp eq i32 %conv, 5, !dbg !10713
  br i1 %cmp2, label %if.then4, label %if.else, !dbg !10714

if.then4:                                         ; preds = %if.end
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10715
  store i8 10, i8* %arrayidx, align 1, !dbg !10717
  br label %if.end15, !dbg !10718

if.else:                                          ; preds = %if.end
  %9 = load i8, i8* %system.addr, align 1, !dbg !10719
  %conv5 = zext i8 %9 to i32, !dbg !10719
  %cmp6 = icmp eq i32 %conv5, 6, !dbg !10721
  br i1 %cmp6, label %if.then8, label %if.else10, !dbg !10722

if.then8:                                         ; preds = %if.else
  %arrayidx9 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10723
  store i8 11, i8* %arrayidx9, align 1, !dbg !10725
  br label %if.end14, !dbg !10726

if.else10:                                        ; preds = %if.else
  %10 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10727
  %i2c11 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %10, i32 0, i32 1, !dbg !10727
  %11 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c11, align 8, !dbg !10727
  %dev12 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %11, i32 0, i32 9, !dbg !10727
  %12 = load i8, i8* %system.addr, align 1, !dbg !10727
  %conv13 = zext i8 %12 to i32, !dbg !10727
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.cxd2841er_sleep_s_to_active_s, i64 0, i64 0), i32 %conv13) #9, !dbg !10727
  store i32 -22, i32* %retval, align 4, !dbg !10729
  br label %return, !dbg !10729

if.end14:                                         ; preds = %if.then8
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then4
  %13 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10730
  %call = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %13, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10731
  %14 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10732
  %arrayidx16 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10733
  %15 = load i8, i8* %arrayidx16, align 1, !dbg !10733
  %call17 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %14, i8 zeroext 0, i8 zeroext 23, i8 zeroext %15) #8, !dbg !10734
  %arrayidx18 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10735
  store i8 0, i8* %arrayidx18, align 1, !dbg !10736
  %16 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10737
  %call19 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %16, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10738
  %17 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10739
  %arrayidx20 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10740
  %18 = load i8, i8* %arrayidx20, align 1, !dbg !10740
  %call21 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %17, i8 zeroext 1, i8 zeroext 45, i8 zeroext %18) #8, !dbg !10741
  %19 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10742
  %call22 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %19, i8 zeroext 1, i8 zeroext 0, i8 zeroext -82) #8, !dbg !10743
  %20 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10744
  %arrayidx23 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10745
  %21 = load i8, i8* %arrayidx23, align 1, !dbg !10745
  %call24 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %20, i8 zeroext 1, i8 zeroext 48, i8 zeroext %21) #8, !dbg !10746
  %22 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10747
  %call25 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %22, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10748
  %23 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10749
  %call26 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %23, i8 zeroext 1, i8 zeroext 44, i8 zeroext 1) #8, !dbg !10750
  %24 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10751
  %call27 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %24, i8 zeroext 1, i8 zeroext 49, i8 zeroext 1) #8, !dbg !10752
  %25 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10753
  %call28 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %25, i8 zeroext 1, i8 zeroext 99, i8 zeroext 22) #8, !dbg !10754
  %26 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10755
  %call29 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %26, i8 zeroext 1, i8 zeroext 101, i8 zeroext 63) #8, !dbg !10756
  %27 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10757
  %call30 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %27, i8 zeroext 0, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10758
  %28 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10759
  %call31 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %28, i8 zeroext 0, i8 zeroext 24, i8 zeroext 0) #8, !dbg !10760
  %29 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10761
  %call32 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %29, i8 zeroext 1, i8 zeroext 0, i8 zeroext -93) #8, !dbg !10762
  %30 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10763
  %call33 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %30, i8 zeroext 1, i8 zeroext -84, i8 zeroext 0) #8, !dbg !10764
  %arrayidx34 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10765
  store i8 7, i8* %arrayidx34, align 1, !dbg !10766
  %arrayidx35 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 1, !dbg !10767
  store i8 59, i8* %arrayidx35, align 1, !dbg !10768
  %arrayidx36 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 2, !dbg !10769
  store i8 8, i8* %arrayidx36, align 1, !dbg !10770
  %arrayidx37 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 3, !dbg !10771
  store i8 -59, i8* %arrayidx37, align 1, !dbg !10772
  %31 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10773
  %call38 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %31, i8 zeroext 1, i8 zeroext 0, i8 zeroext -85) #8, !dbg !10774
  %32 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10775
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10776
  %call39 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %32, i8 zeroext 1, i8 zeroext -104, i8* %arraydecay, i32 4) #8, !dbg !10777
  %arrayidx40 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10778
  store i8 5, i8* %arrayidx40, align 1, !dbg !10779
  %arrayidx41 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 1, !dbg !10780
  store i8 -128, i8* %arrayidx41, align 1, !dbg !10781
  %arrayidx42 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 2, !dbg !10782
  store i8 10, i8* %arrayidx42, align 1, !dbg !10783
  %arrayidx43 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 3, !dbg !10784
  store i8 -128, i8* %arrayidx43, align 1, !dbg !10785
  %33 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10786
  %arraydecay44 = getelementptr inbounds [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10787
  %call45 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %33, i8 zeroext 1, i8 zeroext -88, i8* %arraydecay44, i32 4) #8, !dbg !10788
  %arrayidx46 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10789
  store i8 12, i8* %arrayidx46, align 1, !dbg !10790
  %arrayidx47 = getelementptr [4 x i8], [4 x i8]* %data, i64 0, i64 1, !dbg !10791
  store i8 -52, i8* %arrayidx47, align 1, !dbg !10792
  %34 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10793
  %arraydecay48 = getelementptr inbounds [4 x i8], [4 x i8]* %data, i64 0, i64 0, !dbg !10794
  %call49 = call i32 @cxd2841er_write_regs(%struct.cxd2841er_priv* %34, i8 zeroext 1, i8 zeroext -61, i8* %arraydecay48, i32 2) #8, !dbg !10795
  %35 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10796
  %36 = load i32, i32* %symbol_rate.addr, align 4, !dbg !10797
  %call50 = call i32 @cxd2841er_dvbs2_set_symbol_rate(%struct.cxd2841er_priv* %35, i32 %36) #8, !dbg !10798
  store i32 %call50, i32* %ret, align 4, !dbg !10799
  %37 = load i32, i32* %ret, align 4, !dbg !10800
  %cmp51 = icmp ne i32 %37, 0, !dbg !10802
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !10803

if.then53:                                        ; preds = %if.end15
  %38 = load i32, i32* %ret, align 4, !dbg !10804
  store i32 %38, i32* %retval, align 4, !dbg !10805
  br label %return, !dbg !10805

if.end54:                                         ; preds = %if.end15
  %39 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10806
  %call55 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %39, i8 zeroext 1, i8 zeroext 0, i8 zeroext 0) #8, !dbg !10807
  %40 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10808
  %call56 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %40, i8 zeroext 1, i8 zeroext -128, i8 zeroext 16) #8, !dbg !10809
  %41 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10810
  %call57 = call i32 @cxd2841er_write_reg(%struct.cxd2841er_priv* %41, i8 zeroext 1, i8 zeroext -127, i8 zeroext 0) #8, !dbg !10811
  %42 = load %struct.cxd2841er_priv*, %struct.cxd2841er_priv** %priv.addr, align 8, !dbg !10812
  %state58 = getelementptr inbounds %struct.cxd2841er_priv, %struct.cxd2841er_priv* %42, i32 0, i32 5, !dbg !10813
  store i32 2, i32* %state58, align 8, !dbg !10814
  store i32 0, i32* %retval, align 4, !dbg !10815
  br label %return, !dbg !10815

return:                                           ; preds = %if.end54, %if.then53, %if.else10, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !10816
  ret i32 %43, !dbg !10816
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noredzone }
attributes #9 = { cold noredzone }
attributes #10 = { nounwind }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }
attributes #13 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4494, !4495, !4496, !4497}
!llvm.ident = !{!4498}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description220", scope: !2, file: !3, line: 4007, type: !4491, isLocal: true, isDefinition: true, align: 8)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !322, globals: !345, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/media/dvb-frontends/cxd2841er.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !40, !50, !57, !73, !78, !82, !87, !102, !113, !126, !133, !138, !144, !165, !171, !175, !183, !190, !195, !201, !207, !216, !224, !230, !236, !243, !251, !257, !271, !283, !289, !296, !303, !309, !315}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_caps", file: !6, line: 72, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/uapi/linux/dvb/frontend.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39}
!9 = !DIEnumerator(name: "FE_IS_STUPID", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "FE_CAN_INVERSION_AUTO", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "FE_CAN_FEC_1_2", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "FE_CAN_FEC_2_3", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "FE_CAN_FEC_3_4", value: 8, isUnsigned: true)
!14 = !DIEnumerator(name: "FE_CAN_FEC_4_5", value: 16, isUnsigned: true)
!15 = !DIEnumerator(name: "FE_CAN_FEC_5_6", value: 32, isUnsigned: true)
!16 = !DIEnumerator(name: "FE_CAN_FEC_6_7", value: 64, isUnsigned: true)
!17 = !DIEnumerator(name: "FE_CAN_FEC_7_8", value: 128, isUnsigned: true)
!18 = !DIEnumerator(name: "FE_CAN_FEC_8_9", value: 256, isUnsigned: true)
!19 = !DIEnumerator(name: "FE_CAN_FEC_AUTO", value: 512, isUnsigned: true)
!20 = !DIEnumerator(name: "FE_CAN_QPSK", value: 1024, isUnsigned: true)
!21 = !DIEnumerator(name: "FE_CAN_QAM_16", value: 2048, isUnsigned: true)
!22 = !DIEnumerator(name: "FE_CAN_QAM_32", value: 4096, isUnsigned: true)
!23 = !DIEnumerator(name: "FE_CAN_QAM_64", value: 8192, isUnsigned: true)
!24 = !DIEnumerator(name: "FE_CAN_QAM_128", value: 16384, isUnsigned: true)
!25 = !DIEnumerator(name: "FE_CAN_QAM_256", value: 32768, isUnsigned: true)
!26 = !DIEnumerator(name: "FE_CAN_QAM_AUTO", value: 65536, isUnsigned: true)
!27 = !DIEnumerator(name: "FE_CAN_TRANSMISSION_MODE_AUTO", value: 131072, isUnsigned: true)
!28 = !DIEnumerator(name: "FE_CAN_BANDWIDTH_AUTO", value: 262144, isUnsigned: true)
!29 = !DIEnumerator(name: "FE_CAN_GUARD_INTERVAL_AUTO", value: 524288, isUnsigned: true)
!30 = !DIEnumerator(name: "FE_CAN_HIERARCHY_AUTO", value: 1048576, isUnsigned: true)
!31 = !DIEnumerator(name: "FE_CAN_8VSB", value: 2097152, isUnsigned: true)
!32 = !DIEnumerator(name: "FE_CAN_16VSB", value: 4194304, isUnsigned: true)
!33 = !DIEnumerator(name: "FE_HAS_EXTENDED_CAPS", value: 8388608, isUnsigned: true)
!34 = !DIEnumerator(name: "FE_CAN_MULTISTREAM", value: 67108864, isUnsigned: true)
!35 = !DIEnumerator(name: "FE_CAN_TURBO_FEC", value: 134217728, isUnsigned: true)
!36 = !DIEnumerator(name: "FE_CAN_2G_MODULATION", value: 268435456, isUnsigned: true)
!37 = !DIEnumerator(name: "FE_NEEDS_BENDING", value: 536870912, isUnsigned: true)
!38 = !DIEnumerator(name: "FE_CAN_RECOVER", value: 1073741824, isUnsigned: true)
!39 = !DIEnumerator(name: "FE_CAN_MUTE_TS", value: 2147483648, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_status", file: !6, line: 252, baseType: !7, size: 32, elements: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !48, !49}
!42 = !DIEnumerator(name: "FE_NONE", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "FE_HAS_SIGNAL", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "FE_HAS_CARRIER", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "FE_HAS_VITERBI", value: 4, isUnsigned: true)
!46 = !DIEnumerator(name: "FE_HAS_SYNC", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "FE_HAS_LOCK", value: 16, isUnsigned: true)
!48 = !DIEnumerator(name: "FE_TIMEDOUT", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "FE_REINIT", value: 64, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvbfe_algo", file: !51, line: 144, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/media/dvb_frontend.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54, !55, !56}
!53 = !DIEnumerator(name: "DVBFE_ALGO_HW", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "DVBFE_ALGO_SW", value: 2, isUnsigned: true)
!55 = !DIEnumerator(name: "DVBFE_ALGO_CUSTOM", value: 4, isUnsigned: true)
!56 = !DIEnumerator(name: "DVBFE_ALGO_RECOVERY", value: 2147483648, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_modulation", file: !6, line: 338, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72}
!59 = !DIEnumerator(name: "QPSK", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "QAM_16", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "QAM_32", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "QAM_64", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "QAM_128", value: 4, isUnsigned: true)
!64 = !DIEnumerator(name: "QAM_256", value: 5, isUnsigned: true)
!65 = !DIEnumerator(name: "QAM_AUTO", value: 6, isUnsigned: true)
!66 = !DIEnumerator(name: "VSB_8", value: 7, isUnsigned: true)
!67 = !DIEnumerator(name: "VSB_16", value: 8, isUnsigned: true)
!68 = !DIEnumerator(name: "PSK_8", value: 9, isUnsigned: true)
!69 = !DIEnumerator(name: "APSK_16", value: 10, isUnsigned: true)
!70 = !DIEnumerator(name: "APSK_32", value: 11, isUnsigned: true)
!71 = !DIEnumerator(name: "DQPSK", value: 12, isUnsigned: true)
!72 = !DIEnumerator(name: "QAM_4_NR", value: 13, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_voltage", file: !6, line: 208, baseType: !7, size: 32, elements: !74)
!74 = !{!75, !76, !77}
!75 = !DIEnumerator(name: "SEC_VOLTAGE_13", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "SEC_VOLTAGE_18", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "SEC_VOLTAGE_OFF", value: 2, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_tone_mode", file: !6, line: 220, baseType: !7, size: 32, elements: !79)
!79 = !{!80, !81}
!80 = !DIEnumerator(name: "SEC_TONE_ON", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "SEC_TONE_OFF", value: 1, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_spectral_inversion", file: !6, line: 276, baseType: !7, size: 32, elements: !83)
!83 = !{!84, !85, !86}
!84 = !DIEnumerator(name: "INVERSION_OFF", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "INVERSION_ON", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "INVERSION_AUTO", value: 2, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_code_rate", file: !6, line: 302, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101}
!89 = !DIEnumerator(name: "FEC_NONE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "FEC_1_2", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "FEC_2_3", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "FEC_3_4", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "FEC_4_5", value: 4, isUnsigned: true)
!94 = !DIEnumerator(name: "FEC_5_6", value: 5, isUnsigned: true)
!95 = !DIEnumerator(name: "FEC_6_7", value: 6, isUnsigned: true)
!96 = !DIEnumerator(name: "FEC_7_8", value: 7, isUnsigned: true)
!97 = !DIEnumerator(name: "FEC_8_9", value: 8, isUnsigned: true)
!98 = !DIEnumerator(name: "FEC_AUTO", value: 9, isUnsigned: true)
!99 = !DIEnumerator(name: "FEC_3_5", value: 10, isUnsigned: true)
!100 = !DIEnumerator(name: "FEC_9_10", value: 11, isUnsigned: true)
!101 = !DIEnumerator(name: "FEC_2_5", value: 12, isUnsigned: true)
!102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_transmit_mode", file: !6, line: 381, baseType: !7, size: 32, elements: !103)
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112}
!104 = !DIEnumerator(name: "TRANSMISSION_MODE_2K", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "TRANSMISSION_MODE_8K", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "TRANSMISSION_MODE_AUTO", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TRANSMISSION_MODE_4K", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "TRANSMISSION_MODE_1K", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "TRANSMISSION_MODE_16K", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "TRANSMISSION_MODE_32K", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "TRANSMISSION_MODE_C1", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "TRANSMISSION_MODE_C3780", value: 8, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_guard_interval", file: !6, line: 410, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125}
!115 = !DIEnumerator(name: "GUARD_INTERVAL_1_32", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "GUARD_INTERVAL_1_16", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "GUARD_INTERVAL_1_8", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "GUARD_INTERVAL_1_4", value: 3, isUnsigned: true)
!119 = !DIEnumerator(name: "GUARD_INTERVAL_AUTO", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "GUARD_INTERVAL_1_128", value: 5, isUnsigned: true)
!121 = !DIEnumerator(name: "GUARD_INTERVAL_19_128", value: 6, isUnsigned: true)
!122 = !DIEnumerator(name: "GUARD_INTERVAL_19_256", value: 7, isUnsigned: true)
!123 = !DIEnumerator(name: "GUARD_INTERVAL_PN420", value: 8, isUnsigned: true)
!124 = !DIEnumerator(name: "GUARD_INTERVAL_PN595", value: 9, isUnsigned: true)
!125 = !DIEnumerator(name: "GUARD_INTERVAL_PN945", value: 10, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_hierarchy", file: !6, line: 434, baseType: !7, size: 32, elements: !127)
!127 = !{!128, !129, !130, !131, !132}
!128 = !DIEnumerator(name: "HIERARCHY_NONE", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "HIERARCHY_1", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "HIERARCHY_2", value: 2, isUnsigned: true)
!131 = !DIEnumerator(name: "HIERARCHY_4", value: 3, isUnsigned: true)
!132 = !DIEnumerator(name: "HIERARCHY_AUTO", value: 4, isUnsigned: true)
!133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_pilot", file: !6, line: 562, baseType: !7, size: 32, elements: !134)
!134 = !{!135, !136, !137}
!135 = !DIEnumerator(name: "PILOT_ON", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "PILOT_OFF", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "PILOT_AUTO", value: 2, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_rolloff", file: !6, line: 579, baseType: !7, size: 32, elements: !139)
!139 = !{!140, !141, !142, !143}
!140 = !DIEnumerator(name: "ROLLOFF_35", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "ROLLOFF_20", value: 1, isUnsigned: true)
!142 = !DIEnumerator(name: "ROLLOFF_25", value: 2, isUnsigned: true)
!143 = !DIEnumerator(name: "ROLLOFF_AUTO", value: 3, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_delivery_system", file: !6, line: 628, baseType: !7, size: 32, elements: !145)
!145 = !{!146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164}
!146 = !DIEnumerator(name: "SYS_UNDEFINED", value: 0, isUnsigned: true)
!147 = !DIEnumerator(name: "SYS_DVBC_ANNEX_A", value: 1, isUnsigned: true)
!148 = !DIEnumerator(name: "SYS_DVBC_ANNEX_B", value: 2, isUnsigned: true)
!149 = !DIEnumerator(name: "SYS_DVBT", value: 3, isUnsigned: true)
!150 = !DIEnumerator(name: "SYS_DSS", value: 4, isUnsigned: true)
!151 = !DIEnumerator(name: "SYS_DVBS", value: 5, isUnsigned: true)
!152 = !DIEnumerator(name: "SYS_DVBS2", value: 6, isUnsigned: true)
!153 = !DIEnumerator(name: "SYS_DVBH", value: 7, isUnsigned: true)
!154 = !DIEnumerator(name: "SYS_ISDBT", value: 8, isUnsigned: true)
!155 = !DIEnumerator(name: "SYS_ISDBS", value: 9, isUnsigned: true)
!156 = !DIEnumerator(name: "SYS_ISDBC", value: 10, isUnsigned: true)
!157 = !DIEnumerator(name: "SYS_ATSC", value: 11, isUnsigned: true)
!158 = !DIEnumerator(name: "SYS_ATSCMH", value: 12, isUnsigned: true)
!159 = !DIEnumerator(name: "SYS_DTMB", value: 13, isUnsigned: true)
!160 = !DIEnumerator(name: "SYS_CMMB", value: 14, isUnsigned: true)
!161 = !DIEnumerator(name: "SYS_DAB", value: 15, isUnsigned: true)
!162 = !DIEnumerator(name: "SYS_DVBT2", value: 16, isUnsigned: true)
!163 = !DIEnumerator(name: "SYS_TURBO", value: 17, isUnsigned: true)
!164 = !DIEnumerator(name: "SYS_DVBC_ANNEX_C", value: 18, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_interleaving", file: !6, line: 451, baseType: !7, size: 32, elements: !166)
!166 = !{!167, !168, !169, !170}
!167 = !DIEnumerator(name: "INTERLEAVING_NONE", value: 0, isUnsigned: true)
!168 = !DIEnumerator(name: "INTERLEAVING_AUTO", value: 1, isUnsigned: true)
!169 = !DIEnumerator(name: "INTERLEAVING_240", value: 2, isUnsigned: true)
!170 = !DIEnumerator(name: "INTERLEAVING_720", value: 3, isUnsigned: true)
!171 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_mini_cmd", file: !6, line: 233, baseType: !7, size: 32, elements: !172)
!172 = !{!173, !174}
!173 = !DIEnumerator(name: "SEC_MINI_A", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "SEC_MINI_B", value: 1, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvbfe_search", file: !51, line: 173, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181, !182}
!177 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_SUCCESS", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_ASLEEP", value: 2, isUnsigned: true)
!179 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_FAILED", value: 4, isUnsigned: true)
!180 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_INVALID", value: 8, isUnsigned: true)
!181 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_AGAIN", value: 16, isUnsigned: true)
!182 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_ERROR", value: 2147483648, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !184, line: 15, baseType: !7, size: 32, elements: !185)
!184 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!185 = !{!186, !187, !188, !189}
!186 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!187 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!188 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!189 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !191, line: 65, baseType: !7, size: 32, elements: !192)
!191 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!192 = !{!193, !194}
!193 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!194 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !196, line: 16, baseType: !7, size: 32, elements: !197)
!196 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!197 = !{!198, !199, !200}
!198 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !202, line: 54, baseType: !7, size: 32, elements: !203)
!202 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!203 = !{!204, !205, !206}
!204 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!205 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!206 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !208, line: 296, baseType: !7, size: 32, elements: !209)
!208 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!209 = !{!210, !211, !212, !213, !214, !215}
!210 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!211 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!212 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!213 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!214 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!215 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !217, line: 9, baseType: !7, size: 32, elements: !218)
!217 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!218 = !{!219, !220, !221, !222, !223}
!219 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!220 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!221 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!222 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!223 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!224 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !225, line: 26, baseType: !7, size: 32, elements: !226)
!225 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!226 = !{!227, !228, !229}
!227 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!228 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!230 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !231, line: 44, baseType: !7, size: 32, elements: !232)
!231 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!232 = !{!233, !234, !235}
!233 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!234 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!235 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!236 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !237, line: 343, baseType: !7, size: 32, elements: !238)
!237 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!238 = !{!239, !240, !241, !242}
!239 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!240 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!241 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!242 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!243 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !244, line: 524, baseType: !7, size: 32, elements: !245)
!244 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!245 = !{!246, !247, !248, !249, !250}
!246 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!247 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!248 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!249 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!250 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !244, line: 502, baseType: !7, size: 32, elements: !252)
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !258, line: 76, baseType: !7, size: 32, elements: !259)
!258 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!259 = !{!260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270}
!260 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!261 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!262 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!263 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!264 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!265 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!266 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!267 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!268 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!269 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!270 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!271 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvb_device_type", file: !272, line: 57, baseType: !7, size: 32, elements: !273)
!272 = !DIFile(filename: "./include/media/dvbdev.h", directory: "/home/lizy2001/genbc/linux")
!273 = !{!274, !275, !276, !277, !278, !279, !280, !281, !282}
!274 = !DIEnumerator(name: "DVB_DEVICE_SEC", value: 0, isUnsigned: true)
!275 = !DIEnumerator(name: "DVB_DEVICE_FRONTEND", value: 1, isUnsigned: true)
!276 = !DIEnumerator(name: "DVB_DEVICE_DEMUX", value: 2, isUnsigned: true)
!277 = !DIEnumerator(name: "DVB_DEVICE_DVR", value: 3, isUnsigned: true)
!278 = !DIEnumerator(name: "DVB_DEVICE_CA", value: 4, isUnsigned: true)
!279 = !DIEnumerator(name: "DVB_DEVICE_NET", value: 5, isUnsigned: true)
!280 = !DIEnumerator(name: "DVB_DEVICE_VIDEO", value: 6, isUnsigned: true)
!281 = !DIEnumerator(name: "DVB_DEVICE_AUDIO", value: 7, isUnsigned: true)
!282 = !DIEnumerator(name: "DVB_DEVICE_OSD", value: 8, isUnsigned: true)
!283 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cxd2841er_xtal", file: !284, line: 27, baseType: !7, size: 32, elements: !285)
!284 = !DIFile(filename: "drivers/media/dvb-frontends/cxd2841er.h", directory: "/home/lizy2001/genbc/linux")
!285 = !{!286, !287, !288}
!286 = !DIEnumerator(name: "SONY_XTAL_20500", value: 0, isUnsigned: true)
!287 = !DIEnumerator(name: "SONY_XTAL_24000", value: 1, isUnsigned: true)
!288 = !DIEnumerator(name: "SONY_XTAL_41000", value: 2, isUnsigned: true)
!289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cxd2841er_state", file: !3, line: 44, baseType: !7, size: 32, elements: !290)
!290 = !{!291, !292, !293, !294, !295}
!291 = !DIEnumerator(name: "STATE_SHUTDOWN", value: 0, isUnsigned: true)
!292 = !DIEnumerator(name: "STATE_SLEEP_S", value: 1, isUnsigned: true)
!293 = !DIEnumerator(name: "STATE_ACTIVE_S", value: 2, isUnsigned: true)
!294 = !DIEnumerator(name: "STATE_SLEEP_TC", value: 3, isUnsigned: true)
!295 = !DIEnumerator(name: "STATE_ACTIVE_TC", value: 4, isUnsigned: true)
!296 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !297, line: 305, baseType: !7, size: 32, elements: !298)
!297 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!298 = !{!299, !300, !301, !302}
!299 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!300 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!301 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!302 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!303 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fecap_scale_params", file: !6, line: 752, baseType: !7, size: 32, elements: !304)
!304 = !{!305, !306, !307, !308}
!305 = !DIEnumerator(name: "FE_SCALE_NOT_AVAILABLE", value: 0, isUnsigned: true)
!306 = !DIEnumerator(name: "FE_SCALE_DECIBEL", value: 1, isUnsigned: true)
!307 = !DIEnumerator(name: "FE_SCALE_RELATIVE", value: 2, isUnsigned: true)
!308 = !DIEnumerator(name: "FE_SCALE_COUNTER", value: 3, isUnsigned: true)
!309 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cxd2841er_dvbt2_profile_t", file: !310, line: 32, baseType: !7, size: 32, elements: !311)
!310 = !DIFile(filename: "drivers/media/dvb-frontends/cxd2841er_priv.h", directory: "/home/lizy2001/genbc/linux")
!311 = !{!312, !313, !314}
!312 = !DIEnumerator(name: "DVBT2_PROFILE_ANY", value: 0, isUnsigned: true)
!313 = !DIEnumerator(name: "DVBT2_PROFILE_BASE", value: 1, isUnsigned: true)
!314 = !DIEnumerator(name: "DVBT2_PROFILE_LITE", value: 2, isUnsigned: true)
!315 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sony_dvbc_constellation_t", file: !3, line: 36, baseType: !7, size: 32, elements: !316)
!316 = !{!317, !318, !319, !320, !321}
!317 = !DIEnumerator(name: "SONY_DVBC_CONSTELLATION_16QAM", value: 0, isUnsigned: true)
!318 = !DIEnumerator(name: "SONY_DVBC_CONSTELLATION_32QAM", value: 1, isUnsigned: true)
!319 = !DIEnumerator(name: "SONY_DVBC_CONSTELLATION_64QAM", value: 2, isUnsigned: true)
!320 = !DIEnumerator(name: "SONY_DVBC_CONSTELLATION_128QAM", value: 3, isUnsigned: true)
!321 = !DIEnumerator(name: "SONY_DVBC_CONSTELLATION_256QAM", value: 4, isUnsigned: true)
!322 = !{!323, !325, !326, !330, !331, !332, !335, !338, !339, !340, !315, !343}
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !324, line: 148, baseType: !7)
!324 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !327, line: 21, baseType: !328)
!327 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !329, line: 27, baseType: !7)
!329 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !329, line: 26, baseType: !331)
!331 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !327, line: 17, baseType: !333)
!333 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !329, line: 21, baseType: !334)
!334 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !327, line: 23, baseType: !336)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !329, line: 31, baseType: !337)
!337 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !324, line: 107, baseType: !335)
!339 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !327, line: 19, baseType: !341)
!341 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !329, line: 24, baseType: !342)
!342 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !324, line: 98, baseType: !344)
!344 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !327, line: 20, baseType: !330)
!345 = !{!0, !346, !353, !358, !363, !4261, !4412, !4414, !4416, !4418, !4423, !4425, !4427, !4429, !4435, !4437, !4439, !4441, !4443, !4446, !4448, !4450, !4452, !4454, !4457, !4459, !4461, !4463, !4465, !4467, !4478, !4483, !4488}
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author221", scope: !2, file: !3, line: 4008, type: !348, isLocal: true, isDefinition: true, align: 8)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 640, elements: !351)
!349 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!350 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!351 = !{!352}
!352 = !DISubrange(count: 80)
!353 = !DIGlobalVariableExpression(var: !354, expr: !DIExpression())
!354 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file222", scope: !2, file: !3, line: 4009, type: !355, isLocal: true, isDefinition: true, align: 8)
!355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 424, elements: !356)
!356 = !{!357}
!357 = !DISubrange(count: 53)
!358 = !DIGlobalVariableExpression(var: !359, expr: !DIExpression())
!359 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license223", scope: !2, file: !3, line: 4009, type: !360, isLocal: true, isDefinition: true, align: 8)
!360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 176, elements: !361)
!361 = !{!362}
!362 = !DISubrange(count: 22)
!363 = !DIGlobalVariableExpression(var: !364, expr: !DIExpression())
!364 = distinct !DIGlobalVariable(name: "cxd2841er_t_c_ops", scope: !2, file: !3, line: 3969, type: !365, isLocal: true, isDefinition: true)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_ops", file: !51, line: 435, size: 6016, elements: !366)
!366 = !{!367, !382, !386, !4084, !4085, !4086, !4090, !4091, !4097, !4102, !4106, !4107, !4117, !4122, !4126, !4130, !4135, !4136, !4137, !4138, !4148, !4159, !4163, !4167, !4171, !4175, !4179, !4183, !4184, !4185, !4189, !4243}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !365, file: !51, line: 436, baseType: !368, size: 1280)
!368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_internal_info", file: !51, line: 338, size: 1280, elements: !369)
!369 = !{!370, !374, !375, !376, !377, !378, !379, !380, !381}
!370 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !368, file: !51, line: 339, baseType: !371, size: 1024)
!371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 1024, elements: !372)
!372 = !{!373}
!373 = !DISubrange(count: 128)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_min_hz", scope: !368, file: !51, line: 340, baseType: !326, size: 32, offset: 1024)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_max_hz", scope: !368, file: !51, line: 341, baseType: !326, size: 32, offset: 1056)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_stepsize_hz", scope: !368, file: !51, line: 342, baseType: !326, size: 32, offset: 1088)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_tolerance_hz", scope: !368, file: !51, line: 343, baseType: !326, size: 32, offset: 1120)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_min", scope: !368, file: !51, line: 344, baseType: !326, size: 32, offset: 1152)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_max", scope: !368, file: !51, line: 345, baseType: !326, size: 32, offset: 1184)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_tolerance", scope: !368, file: !51, line: 346, baseType: !326, size: 32, offset: 1216)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !368, file: !51, line: 347, baseType: !5, size: 32, offset: 1248)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "delsys", scope: !365, file: !51, line: 438, baseType: !383, size: 64, offset: 1280)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 64, elements: !384)
!384 = !{!385}
!385 = !DISubrange(count: 8)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !365, file: !51, line: 440, baseType: !387, size: 64, offset: 1344)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DISubroutineType(types: !389)
!389 = !{null, !390}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend", file: !51, line: 686, size: 10240, elements: !392)
!392 = !{!393, !407, !408, !4000, !4001, !4002, !4003, !4004, !4005, !4078, !4082, !4083}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !391, file: !51, line: 687, baseType: !394, size: 32)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !395, line: 19, size: 32, elements: !396)
!395 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!396 = !{!397}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !394, file: !395, line: 20, baseType: !398, size: 32)
!398 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !399, line: 113, baseType: !400)
!399 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !399, line: 111, size: 32, elements: !401)
!401 = !{!402}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !400, file: !399, line: 112, baseType: !403, size: 32)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !324, line: 168, baseType: !404)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !324, line: 166, size: 32, elements: !405)
!405 = !{!406}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !404, file: !324, line: 167, baseType: !331, size: 32)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !391, file: !51, line: 688, baseType: !365, size: 6016, offset: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "dvb", scope: !391, file: !51, line: 689, baseType: !409, size: 64, offset: 6080)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_adapter", file: !272, line: 101, size: 960, elements: !411)
!411 = !{!412, !413, !419, !420, !422, !426, !427, !3978, !3979, !3980, !3999}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !410, file: !272, line: 102, baseType: !331, size: 32)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "list_head", scope: !410, file: !272, line: 103, baseType: !414, size: 128, offset: 64)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !324, line: 178, size: 128, elements: !415)
!415 = !{!416, !418}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !414, file: !324, line: 179, baseType: !417, size: 64)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !414, file: !324, line: 179, baseType: !417, size: 64, offset: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "device_list", scope: !410, file: !272, line: 104, baseType: !414, size: 128, offset: 192)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !410, file: !272, line: 105, baseType: !421, size: 64, offset: 320)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "proposed_mac", scope: !410, file: !272, line: 106, baseType: !423, size: 48, offset: 384)
!423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 48, elements: !424)
!424 = !{!425}
!425 = !DISubrange(count: 6)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !410, file: !272, line: 107, baseType: !325, size: 64, offset: 448)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !410, file: !272, line: 109, baseType: !428, size: 64, offset: 512)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !237, line: 461, size: 5568, elements: !430)
!430 = !{!431, !3435, !3436, !3439, !3440, !3491, !3579, !3580, !3581, !3582, !3583, !3592, !3697, !3710, !3905, !3906, !3910, !3912, !3913, !3914, !3918, !3924, !3925, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3966, !3967, !3968, !3971, !3974, !3975, !3976, !3977}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !429, file: !237, line: 462, baseType: !432, size: 512)
!432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !433, line: 64, size: 512, elements: !434)
!433 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!434 = !{!435, !436, !437, !439, !499, !3290, !3429, !3430, !3431, !3432, !3433, !3434}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !432, file: !433, line: 65, baseType: !421, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !432, file: !433, line: 66, baseType: !414, size: 128, offset: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !432, file: !433, line: 67, baseType: !438, size: 64, offset: 192)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !432, file: !433, line: 68, baseType: !440, size: 64, offset: 256)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !433, line: 192, size: 704, elements: !442)
!442 = !{!443, !444, !460, !461}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !441, file: !433, line: 193, baseType: !414, size: 128)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !441, file: !433, line: 194, baseType: !445, offset: 128)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !446, line: 83, baseType: !447)
!446 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !446, line: 71, elements: !448)
!448 = !{!449}
!449 = !DIDerivedType(tag: DW_TAG_member, scope: !447, file: !446, line: 72, baseType: !450)
!450 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !447, file: !446, line: 72, elements: !451)
!451 = !{!452}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !450, file: !446, line: 73, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !446, line: 20, elements: !454)
!454 = !{!455}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !453, file: !446, line: 21, baseType: !456)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !457, line: 25, baseType: !458)
!457 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 25, elements: !459)
!459 = !{}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !441, file: !433, line: 195, baseType: !432, size: 512, offset: 128)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !441, file: !433, line: 196, baseType: !462, size: 64, offset: 640)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !464)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !433, line: 156, size: 192, elements: !465)
!465 = !{!466, !471, !476}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !464, file: !433, line: 157, baseType: !467, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!469 = !DISubroutineType(types: !470)
!470 = !{!331, !440, !438}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !464, file: !433, line: 158, baseType: !472, size: 64, offset: 64)
!472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = !DISubroutineType(types: !475)
!475 = !{!421, !440, !438}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !464, file: !433, line: 159, baseType: !477, size: 64, offset: 128)
!477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !478)
!478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!479 = !DISubroutineType(types: !480)
!480 = !{!331, !440, !438, !481}
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !433, line: 148, size: 20736, elements: !483)
!483 = !{!484, !489, !493, !494, !498}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !482, file: !433, line: 149, baseType: !485, size: 192)
!485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 192, elements: !487)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!487 = !{!488}
!488 = !DISubrange(count: 3)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !482, file: !433, line: 150, baseType: !490, size: 4096, offset: 192)
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 4096, elements: !491)
!491 = !{!492}
!492 = !DISubrange(count: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !482, file: !433, line: 151, baseType: !331, size: 32, offset: 4288)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !482, file: !433, line: 152, baseType: !495, size: 16384, offset: 4320)
!495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 16384, elements: !496)
!496 = !{!497}
!497 = !DISubrange(count: 2048)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !482, file: !433, line: 153, baseType: !331, size: 32, offset: 20704)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !432, file: !433, line: 69, baseType: !500, size: 64, offset: 320)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !433, line: 138, size: 448, elements: !502)
!502 = !{!503, !507, !535, !537, !3252, !3280, !3284}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !501, file: !433, line: 139, baseType: !504, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{null, !438}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !501, file: !433, line: 140, baseType: !508, size: 64, offset: 64)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !511, line: 230, size: 128, elements: !512)
!511 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!512 = !{!513, !527}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !510, file: !511, line: 231, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{!517, !438, !521, !486}
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !324, line: 60, baseType: !518)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !519, line: 73, baseType: !520)
!519 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !519, line: 15, baseType: !339)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !511, line: 30, size: 128, elements: !523)
!523 = !{!524, !525}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !522, file: !511, line: 31, baseType: !421, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !522, file: !511, line: 32, baseType: !526, size: 16, offset: 64)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !324, line: 19, baseType: !342)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !510, file: !511, line: 232, baseType: !528, size: 64, offset: 64)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DISubroutineType(types: !530)
!530 = !{!517, !438, !521, !421, !531}
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !324, line: 55, baseType: !532)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !519, line: 72, baseType: !533)
!533 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !519, line: 16, baseType: !534)
!534 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !501, file: !433, line: 141, baseType: !536, size: 64, offset: 128)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !501, file: !433, line: 142, baseType: !538, size: 64, offset: 192)
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !541)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !511, line: 84, size: 320, elements: !542)
!542 = !{!543, !544, !548, !3249, !3250}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !541, file: !511, line: 85, baseType: !421, size: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !541, file: !511, line: 86, baseType: !545, size: 64, offset: 64)
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = !DISubroutineType(types: !547)
!547 = !{!526, !438, !521, !331}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !541, file: !511, line: 88, baseType: !549, size: 64, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 64)
!550 = !DISubroutineType(types: !551)
!551 = !{!526, !438, !552, !331}
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !511, line: 168, size: 448, elements: !554)
!554 = !{!555, !556, !557, !558, !3244, !3245}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !553, file: !511, line: 169, baseType: !522, size: 128)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !553, file: !511, line: 170, baseType: !531, size: 64, offset: 128)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !553, file: !511, line: 171, baseType: !325, size: 64, offset: 192)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !553, file: !511, line: 172, baseType: !559, size: 64, offset: 256)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DISubroutineType(types: !561)
!561 = !{!517, !562, !438, !552, !486, !733, !531}
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !208, line: 916, size: 1856, align: 32, elements: !564)
!564 = !{!565, !583, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3227, !3228, !3237, !3238, !3239, !3240, !3241, !3242, !3243}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !563, file: !208, line: 920, baseType: !566, size: 128)
!566 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !563, file: !208, line: 917, size: 128, elements: !567)
!567 = !{!568, !574}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !566, file: !208, line: 918, baseType: !569, size: 64)
!569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !570, line: 58, size: 64, elements: !571)
!570 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!571 = !{!572}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !569, file: !570, line: 59, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !566, file: !208, line: 919, baseType: !575, size: 128, align: 64)
!575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !324, line: 216, size: 128, align: 64, elements: !576)
!576 = !{!577, !579}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !575, file: !324, line: 217, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !575, file: !324, line: 218, baseType: !580, size: 64, offset: 64)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{null, !578}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !563, file: !208, line: 921, baseType: !584, size: 128, offset: 128)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !585, line: 8, size: 128, elements: !586)
!585 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!586 = !{!587, !591}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !584, file: !585, line: 9, baseType: !588, size: 64)
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !590, line: 18, flags: DIFlagFwdDecl)
!590 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!591 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !584, file: !585, line: 10, baseType: !592, size: 64, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !590, line: 89, size: 1536, elements: !594)
!594 = !{!595, !596, !606, !614, !615, !630, !3178, !3180, !3192, !3193, !3194, !3195, !3196, !3201, !3202, !3203}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !593, file: !590, line: 91, baseType: !7, size: 32)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !593, file: !590, line: 92, baseType: !597, size: 32, offset: 32)
!597 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !598, line: 277, baseType: !599)
!598 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !598, line: 277, size: 32, elements: !600)
!600 = !{!601}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !599, file: !598, line: 277, baseType: !602, size: 32)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !598, line: 70, baseType: !603)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !598, line: 65, size: 32, elements: !604)
!604 = !{!605}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !603, file: !598, line: 66, baseType: !7, size: 32)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !593, file: !590, line: 93, baseType: !607, size: 128, offset: 64)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !608, line: 38, size: 128, elements: !609)
!608 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!609 = !{!610, !612}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !607, file: !608, line: 39, baseType: !611, size: 64)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !607, file: !608, line: 39, baseType: !613, size: 64, offset: 64)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !593, file: !590, line: 94, baseType: !592, size: 64, offset: 192)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !593, file: !590, line: 95, baseType: !616, size: 128, offset: 256)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !590, line: 47, size: 128, elements: !617)
!617 = !{!618, !627}
!618 = !DIDerivedType(tag: DW_TAG_member, scope: !616, file: !590, line: 48, baseType: !619, size: 64)
!619 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !616, file: !590, line: 48, size: 64, elements: !620)
!620 = !{!621, !626}
!621 = !DIDerivedType(tag: DW_TAG_member, scope: !619, file: !590, line: 49, baseType: !622, size: 64)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !619, file: !590, line: 49, size: 64, elements: !623)
!623 = !{!624, !625}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !622, file: !590, line: 50, baseType: !326, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !622, file: !590, line: 50, baseType: !326, size: 32, offset: 32)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !619, file: !590, line: 52, baseType: !335, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !616, file: !590, line: 54, baseType: !628, size: 64, offset: 64)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !593, file: !590, line: 96, baseType: !631, size: 64, offset: 384)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !208, line: 610, size: 4224, elements: !633)
!633 = !{!634, !635, !636, !644, !651, !652, !800, !2872, !2873, !2874, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !3146, !3154, !3155, !3156, !3174, !3175, !3176, !3177}
!634 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !632, file: !208, line: 611, baseType: !526, size: 16)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !632, file: !208, line: 612, baseType: !342, size: 16, offset: 16)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !632, file: !208, line: 613, baseType: !637, size: 32, offset: 32)
!637 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !638, line: 23, baseType: !639)
!638 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !638, line: 21, size: 32, elements: !640)
!640 = !{!641}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !639, file: !638, line: 22, baseType: !642, size: 32)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !324, line: 32, baseType: !643)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !519, line: 49, baseType: !7)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !632, file: !208, line: 614, baseType: !645, size: 32, offset: 64)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !638, line: 28, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !638, line: 26, size: 32, elements: !647)
!647 = !{!648}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !646, file: !638, line: 27, baseType: !649, size: 32)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !324, line: 33, baseType: !650)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !519, line: 50, baseType: !7)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !632, file: !208, line: 615, baseType: !7, size: 32, offset: 96)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !632, file: !208, line: 622, baseType: !653, size: 64, offset: 128)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !208, line: 1864, size: 1536, align: 512, elements: !656)
!656 = !{!657, !661, !674, !678, !684, !688, !694, !698, !702, !706, !710, !711, !717, !721, !747, !776, !780, !786, !791, !795, !796}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !655, file: !208, line: 1865, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DISubroutineType(types: !660)
!660 = !{!592, !631, !592, !7}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !655, file: !208, line: 1866, baseType: !662, size: 64, offset: 64)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DISubroutineType(types: !664)
!664 = !{!421, !592, !631, !665}
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !667, line: 10, size: 128, elements: !668)
!667 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!668 = !{!669, !673}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !666, file: !667, line: 11, baseType: !670, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{null, !325}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !666, file: !667, line: 12, baseType: !325, size: 64, offset: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !655, file: !208, line: 1867, baseType: !675, size: 64, offset: 128)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DISubroutineType(types: !677)
!677 = !{!331, !631, !331}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !655, file: !208, line: 1868, baseType: !679, size: 64, offset: 192)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DISubroutineType(types: !681)
!681 = !{!682, !631, !331}
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !208, line: 581, flags: DIFlagFwdDecl)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !655, file: !208, line: 1870, baseType: !685, size: 64, offset: 256)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{!331, !592, !486, !331}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !655, file: !208, line: 1872, baseType: !689, size: 64, offset: 320)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DISubroutineType(types: !691)
!691 = !{!331, !631, !592, !526, !692}
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !324, line: 30, baseType: !693)
!693 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !655, file: !208, line: 1873, baseType: !695, size: 64, offset: 384)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DISubroutineType(types: !697)
!697 = !{!331, !592, !631, !592}
!698 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !655, file: !208, line: 1874, baseType: !699, size: 64, offset: 448)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DISubroutineType(types: !701)
!701 = !{!331, !631, !592}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !655, file: !208, line: 1875, baseType: !703, size: 64, offset: 512)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = !DISubroutineType(types: !705)
!705 = !{!331, !631, !592, !421}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !655, file: !208, line: 1876, baseType: !707, size: 64, offset: 576)
!707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !708, size: 64)
!708 = !DISubroutineType(types: !709)
!709 = !{!331, !631, !592, !526}
!710 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !655, file: !208, line: 1877, baseType: !699, size: 64, offset: 640)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !655, file: !208, line: 1878, baseType: !712, size: 64, offset: 704)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DISubroutineType(types: !714)
!714 = !{!331, !631, !592, !526, !715}
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !324, line: 16, baseType: !716)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !324, line: 13, baseType: !326)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !655, file: !208, line: 1879, baseType: !718, size: 64, offset: 768)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = !DISubroutineType(types: !720)
!720 = !{!331, !631, !592, !631, !592, !7}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !655, file: !208, line: 1881, baseType: !722, size: 64, offset: 832)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = !DISubroutineType(types: !724)
!724 = !{!331, !592, !725}
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !208, line: 219, size: 640, elements: !727)
!727 = !{!728, !729, !730, !731, !732, !736, !744, !745, !746}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !726, file: !208, line: 220, baseType: !7, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !726, file: !208, line: 221, baseType: !526, size: 16, offset: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !726, file: !208, line: 222, baseType: !637, size: 32, offset: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !726, file: !208, line: 223, baseType: !645, size: 32, offset: 96)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !726, file: !208, line: 224, baseType: !733, size: 64, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !324, line: 46, baseType: !734)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !519, line: 88, baseType: !735)
!735 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !726, file: !208, line: 225, baseType: !737, size: 128, offset: 192)
!737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !738, line: 13, size: 128, elements: !739)
!738 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!739 = !{!740, !743}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !737, file: !738, line: 14, baseType: !741, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !738, line: 8, baseType: !742)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !329, line: 30, baseType: !735)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !737, file: !738, line: 15, baseType: !339, size: 64, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !726, file: !208, line: 226, baseType: !737, size: 128, offset: 320)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !726, file: !208, line: 227, baseType: !737, size: 128, offset: 448)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !726, file: !208, line: 234, baseType: !562, size: 64, offset: 576)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !655, file: !208, line: 1882, baseType: !748, size: 64, offset: 896)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DISubroutineType(types: !750)
!750 = !{!331, !751, !753, !326, !7}
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !584)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !755, line: 22, size: 1152, elements: !756)
!755 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!756 = !{!757, !758, !759, !760, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !754, file: !755, line: 23, baseType: !326, size: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !754, file: !755, line: 24, baseType: !526, size: 16, offset: 32)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !754, file: !755, line: 25, baseType: !7, size: 32, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !754, file: !755, line: 26, baseType: !761, size: 32, offset: 96)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !324, line: 104, baseType: !326)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !754, file: !755, line: 27, baseType: !335, size: 64, offset: 128)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !754, file: !755, line: 28, baseType: !335, size: 64, offset: 192)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !754, file: !755, line: 37, baseType: !335, size: 64, offset: 256)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !754, file: !755, line: 38, baseType: !715, size: 32, offset: 320)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !754, file: !755, line: 39, baseType: !715, size: 32, offset: 352)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !754, file: !755, line: 40, baseType: !637, size: 32, offset: 384)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !754, file: !755, line: 41, baseType: !645, size: 32, offset: 416)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !754, file: !755, line: 42, baseType: !733, size: 64, offset: 448)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !754, file: !755, line: 43, baseType: !737, size: 128, offset: 512)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !754, file: !755, line: 44, baseType: !737, size: 128, offset: 640)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !754, file: !755, line: 45, baseType: !737, size: 128, offset: 768)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !754, file: !755, line: 46, baseType: !737, size: 128, offset: 896)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !754, file: !755, line: 47, baseType: !335, size: 64, offset: 1024)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !754, file: !755, line: 48, baseType: !335, size: 64, offset: 1088)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !655, file: !208, line: 1883, baseType: !777, size: 64, offset: 960)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{!517, !592, !486, !531}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !655, file: !208, line: 1884, baseType: !781, size: 64, offset: 1024)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DISubroutineType(types: !783)
!783 = !{!331, !631, !784, !335, !335}
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !208, line: 50, flags: DIFlagFwdDecl)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !655, file: !208, line: 1886, baseType: !787, size: 64, offset: 1088)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!788 = !DISubroutineType(types: !789)
!789 = !{!331, !631, !790, !331}
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !655, file: !208, line: 1887, baseType: !792, size: 64, offset: 1152)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DISubroutineType(types: !794)
!794 = !{!331, !631, !592, !562, !7, !526}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !655, file: !208, line: 1890, baseType: !707, size: 64, offset: 1216)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !655, file: !208, line: 1891, baseType: !797, size: 64, offset: 1280)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{!331, !631, !682, !331}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !632, file: !208, line: 623, baseType: !801, size: 64, offset: 192)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !208, line: 1416, size: 9472, elements: !803)
!803 = !{!804, !805, !806, !807, !808, !809, !859, !2479, !2561, !2644, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2660, !2664, !2665, !2668, !2669, !2672, !2673, !2674, !2715, !2742, !2743, !2744, !2745, !2746, !2747, !2750, !2752, !2759, !2760, !2762, !2763, !2764, !2823, !2824, !2839, !2840, !2841, !2842, !2843, !2846, !2847, !2848, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !802, file: !208, line: 1417, baseType: !414, size: 128)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !802, file: !208, line: 1418, baseType: !715, size: 32, offset: 128)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !802, file: !208, line: 1419, baseType: !334, size: 8, offset: 160)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !802, file: !208, line: 1420, baseType: !534, size: 64, offset: 192)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !802, file: !208, line: 1421, baseType: !733, size: 64, offset: 256)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !802, file: !208, line: 1422, baseType: !810, size: 64, offset: 320)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !208, line: 2228, size: 576, elements: !812)
!812 = !{!813, !814, !815, !822, !826, !830, !834, !838, !839, !849, !852, !853, !854, !856, !857, !858}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !811, file: !208, line: 2229, baseType: !421, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !811, file: !208, line: 2230, baseType: !331, size: 32, offset: 64)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !811, file: !208, line: 2238, baseType: !816, size: 64, offset: 128)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DISubroutineType(types: !818)
!818 = !{!331, !819}
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !821, line: 28, flags: DIFlagFwdDecl)
!821 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!822 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !811, file: !208, line: 2239, baseType: !823, size: 64, offset: 192)
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!825 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !208, line: 70, flags: DIFlagFwdDecl)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !811, file: !208, line: 2240, baseType: !827, size: 64, offset: 256)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!592, !810, !331, !421, !325}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !811, file: !208, line: 2242, baseType: !831, size: 64, offset: 320)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = !DISubroutineType(types: !833)
!833 = !{null, !801}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !811, file: !208, line: 2243, baseType: !835, size: 64, offset: 384)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !837, line: 76, flags: DIFlagFwdDecl)
!837 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!838 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !811, file: !208, line: 2244, baseType: !810, size: 64, offset: 448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !811, file: !208, line: 2245, baseType: !840, size: 64, offset: 512)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !324, line: 182, size: 64, elements: !841)
!841 = !{!842}
!842 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !840, file: !324, line: 183, baseType: !843, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !324, line: 186, size: 128, elements: !845)
!845 = !{!846, !847}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !844, file: !324, line: 187, baseType: !843, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !844, file: !324, line: 187, baseType: !848, size: 64, offset: 64)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !811, file: !208, line: 2247, baseType: !850, offset: 576)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !851, line: 187, elements: !459)
!851 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!852 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !811, file: !208, line: 2248, baseType: !850, offset: 576)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !811, file: !208, line: 2249, baseType: !850, offset: 576)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !811, file: !208, line: 2250, baseType: !855, offset: 576)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !850, elements: !487)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !811, file: !208, line: 2252, baseType: !850, offset: 576)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !811, file: !208, line: 2253, baseType: !850, offset: 576)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !811, file: !208, line: 2254, baseType: !850, offset: 576)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !802, file: !208, line: 1423, baseType: !860, size: 64, offset: 384)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !208, line: 1935, size: 1472, elements: !863)
!863 = !{!864, !868, !872, !873, !877, !883, !887, !888, !889, !893, !897, !898, !899, !900, !906, !911, !912, !919, !920, !921, !922, !2463, !2478}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !862, file: !208, line: 1936, baseType: !865, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DISubroutineType(types: !867)
!867 = !{!631, !801}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !862, file: !208, line: 1937, baseType: !869, size: 64, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DISubroutineType(types: !871)
!871 = !{null, !631}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !862, file: !208, line: 1938, baseType: !869, size: 64, offset: 128)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !862, file: !208, line: 1940, baseType: !874, size: 64, offset: 192)
!874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !875, size: 64)
!875 = !DISubroutineType(types: !876)
!876 = !{null, !631, !331}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !862, file: !208, line: 1941, baseType: !878, size: 64, offset: 256)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DISubroutineType(types: !880)
!880 = !{!331, !631, !881}
!881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!882 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !208, line: 289, flags: DIFlagFwdDecl)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !862, file: !208, line: 1942, baseType: !884, size: 64, offset: 320)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{!331, !631}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !862, file: !208, line: 1943, baseType: !869, size: 64, offset: 384)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !862, file: !208, line: 1944, baseType: !831, size: 64, offset: 448)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !862, file: !208, line: 1945, baseType: !890, size: 64, offset: 512)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DISubroutineType(types: !892)
!892 = !{!331, !801, !331}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !862, file: !208, line: 1946, baseType: !894, size: 64, offset: 576)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DISubroutineType(types: !896)
!896 = !{!331, !801}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !862, file: !208, line: 1947, baseType: !894, size: 64, offset: 640)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !862, file: !208, line: 1948, baseType: !894, size: 64, offset: 704)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !862, file: !208, line: 1949, baseType: !894, size: 64, offset: 768)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !862, file: !208, line: 1950, baseType: !901, size: 64, offset: 832)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{!331, !592, !904}
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !208, line: 57, flags: DIFlagFwdDecl)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !862, file: !208, line: 1951, baseType: !907, size: 64, offset: 896)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = !DISubroutineType(types: !909)
!909 = !{!331, !801, !910, !486}
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !862, file: !208, line: 1952, baseType: !831, size: 64, offset: 960)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !862, file: !208, line: 1954, baseType: !913, size: 64, offset: 1024)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DISubroutineType(types: !915)
!915 = !{!331, !916, !592}
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !918, line: 539, flags: DIFlagFwdDecl)
!918 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!919 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !862, file: !208, line: 1955, baseType: !913, size: 64, offset: 1088)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !862, file: !208, line: 1956, baseType: !913, size: 64, offset: 1152)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !862, file: !208, line: 1957, baseType: !913, size: 64, offset: 1216)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !862, file: !208, line: 1963, baseType: !923, size: 64, offset: 1280)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DISubroutineType(types: !925)
!925 = !{!331, !801, !926, !323}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !928, line: 68, size: 512, align: 128, elements: !929)
!928 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!929 = !{!930, !931, !2455, !2462}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !927, file: !928, line: 69, baseType: !534, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, scope: !927, file: !928, line: 77, baseType: !932, size: 320, offset: 64)
!932 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !927, file: !928, line: 77, size: 320, elements: !933)
!933 = !{!934, !1115, !1120, !1148, !1156, !1162, !2447, !2454}
!934 = !DIDerivedType(tag: DW_TAG_member, scope: !932, file: !928, line: 78, baseType: !935, size: 320)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !932, file: !928, line: 78, size: 320, elements: !936)
!936 = !{!937, !938, !1113, !1114}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !935, file: !928, line: 84, baseType: !414, size: 128)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !935, file: !928, line: 86, baseType: !939, size: 64, offset: 128)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !208, line: 451, size: 1216, align: 64, elements: !941)
!941 = !{!942, !943, !950, !951, !952, !967, !983, !984, !985, !986, !1106, !1107, !1110, !1111, !1112}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !940, file: !208, line: 452, baseType: !631, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !940, file: !208, line: 453, baseType: !944, size: 128, offset: 64)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !945, line: 292, size: 128, elements: !946)
!945 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!946 = !{!947, !948, !949}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !944, file: !945, line: 293, baseType: !445)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !944, file: !945, line: 295, baseType: !323, size: 32)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !944, file: !945, line: 296, baseType: !325, size: 64, offset: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !940, file: !208, line: 454, baseType: !323, size: 32, offset: 192)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !940, file: !208, line: 455, baseType: !403, size: 32, offset: 224)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !940, file: !208, line: 460, baseType: !953, size: 128, offset: 256)
!953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !954, line: 125, size: 128, elements: !955)
!954 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!955 = !{!956, !966}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !953, file: !954, line: 126, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !954, line: 31, size: 64, elements: !958)
!958 = !{!959}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !957, file: !954, line: 32, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !954, line: 24, size: 192, align: 64, elements: !962)
!962 = !{!963, !964, !965}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !961, file: !954, line: 25, baseType: !534, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !961, file: !954, line: 26, baseType: !960, size: 64, offset: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !961, file: !954, line: 27, baseType: !960, size: 64, offset: 128)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !953, file: !954, line: 127, baseType: !960, size: 64, offset: 64)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !940, file: !208, line: 461, baseType: !968, size: 256, offset: 384)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !969, line: 35, size: 256, elements: !970)
!969 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!970 = !{!971, !979, !980, !982}
!971 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !968, file: !969, line: 36, baseType: !972, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !973, line: 13, baseType: !974)
!973 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !324, line: 175, baseType: !975)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !324, line: 173, size: 64, elements: !976)
!976 = !{!977}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !975, file: !324, line: 174, baseType: !978, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !327, line: 22, baseType: !742)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !968, file: !969, line: 42, baseType: !972, size: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !968, file: !969, line: 46, baseType: !981, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !446, line: 29, baseType: !453)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !968, file: !969, line: 47, baseType: !414, size: 128, offset: 128)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !940, file: !208, line: 462, baseType: !534, size: 64, offset: 640)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !940, file: !208, line: 463, baseType: !534, size: 64, offset: 704)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !940, file: !208, line: 464, baseType: !534, size: 64, offset: 768)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !940, file: !208, line: 465, baseType: !987, size: 64, offset: 832)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !989)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !208, line: 367, size: 1408, elements: !990)
!990 = !{!991, !995, !999, !1003, !1007, !1011, !1017, !1023, !1027, !1032, !1036, !1040, !1044, !1070, !1074, !1080, !1081, !1082, !1086, !1091, !1095, !1102}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !989, file: !208, line: 368, baseType: !992, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DISubroutineType(types: !994)
!994 = !{!331, !926, !881}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !989, file: !208, line: 369, baseType: !996, size: 64, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = !DISubroutineType(types: !998)
!998 = !{!331, !562, !926}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !989, file: !208, line: 372, baseType: !1000, size: 64, offset: 128)
!1000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1001, size: 64)
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!331, !939, !881}
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !989, file: !208, line: 375, baseType: !1004, size: 64, offset: 192)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!331, !926}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !989, file: !208, line: 381, baseType: !1008, size: 64, offset: 256)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!331, !562, !939, !417, !7}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !989, file: !208, line: 383, baseType: !1012, size: 64, offset: 320)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{null, !1015}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !208, line: 290, flags: DIFlagFwdDecl)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !989, file: !208, line: 385, baseType: !1018, size: 64, offset: 384)
!1018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1019 = !DISubroutineType(types: !1020)
!1020 = !{!331, !562, !939, !733, !7, !7, !1021, !1022}
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !989, file: !208, line: 388, baseType: !1024, size: 64, offset: 448)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!331, !562, !939, !733, !7, !7, !926, !325}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !989, file: !208, line: 393, baseType: !1028, size: 64, offset: 512)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{!1031, !939, !1031}
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !324, line: 125, baseType: !335)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !989, file: !208, line: 394, baseType: !1033, size: 64, offset: 576)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{null, !926, !7, !7}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !989, file: !208, line: 395, baseType: !1037, size: 64, offset: 640)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!331, !926, !323}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !989, file: !208, line: 396, baseType: !1041, size: 64, offset: 704)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{null, !926}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !989, file: !208, line: 397, baseType: !1045, size: 64, offset: 768)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!517, !1048, !1068}
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !208, line: 320, size: 384, elements: !1050)
!1050 = !{!1051, !1052, !1053, !1057, !1058, !1059, !1060, !1061}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1049, file: !208, line: 321, baseType: !562, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1049, file: !208, line: 326, baseType: !733, size: 64, offset: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1049, file: !208, line: 327, baseType: !1054, size: 64, offset: 128)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !1048, !339, !339}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1049, file: !208, line: 328, baseType: !325, size: 64, offset: 192)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1049, file: !208, line: 329, baseType: !331, size: 32, offset: 256)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1049, file: !208, line: 330, baseType: !340, size: 16, offset: 288)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1049, file: !208, line: 331, baseType: !340, size: 16, offset: 304)
!1061 = !DIDerivedType(tag: DW_TAG_member, scope: !1049, file: !208, line: 332, baseType: !1062, size: 64, offset: 320)
!1062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1049, file: !208, line: 332, size: 64, elements: !1063)
!1063 = !{!1064, !1065}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1062, file: !208, line: 333, baseType: !7, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1062, file: !208, line: 334, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !208, line: 334, flags: DIFlagFwdDecl)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !208, line: 64, flags: DIFlagFwdDecl)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !989, file: !208, line: 402, baseType: !1071, size: 64, offset: 832)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!331, !939, !926, !926, !183}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !989, file: !208, line: 404, baseType: !1075, size: 64, offset: 896)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!692, !926, !1078}
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1079, line: 305, baseType: !7)
!1079 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !989, file: !208, line: 405, baseType: !1041, size: 64, offset: 960)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !989, file: !208, line: 406, baseType: !1004, size: 64, offset: 1024)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !989, file: !208, line: 407, baseType: !1083, size: 64, offset: 1088)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!331, !926, !534, !534}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !989, file: !208, line: 409, baseType: !1087, size: 64, offset: 1152)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{null, !926, !1090, !1090}
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !989, file: !208, line: 410, baseType: !1092, size: 64, offset: 1216)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!331, !939, !926}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !989, file: !208, line: 413, baseType: !1096, size: 64, offset: 1280)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!331, !1099, !562, !1101}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !208, line: 61, flags: DIFlagFwdDecl)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !989, file: !208, line: 415, baseType: !1103, size: 64, offset: 1344)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{null, !562}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !940, file: !208, line: 466, baseType: !534, size: 64, offset: 896)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !940, file: !208, line: 467, baseType: !1108, size: 32, offset: 960)
!1108 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1109, line: 8, baseType: !326)
!1109 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !940, file: !208, line: 468, baseType: !445, offset: 992)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !940, file: !208, line: 469, baseType: !414, size: 128, offset: 1024)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !940, file: !208, line: 470, baseType: !325, size: 64, offset: 1152)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !935, file: !928, line: 87, baseType: !534, size: 64, offset: 192)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !935, file: !928, line: 94, baseType: !534, size: 64, offset: 256)
!1115 = !DIDerivedType(tag: DW_TAG_member, scope: !932, file: !928, line: 96, baseType: !1116, size: 64)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !932, file: !928, line: 96, size: 64, elements: !1117)
!1117 = !{!1118}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1116, file: !928, line: 101, baseType: !1119, size: 64)
!1119 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !324, line: 143, baseType: !335)
!1120 = !DIDerivedType(tag: DW_TAG_member, scope: !932, file: !928, line: 103, baseType: !1121, size: 320)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !932, file: !928, line: 103, size: 320, elements: !1122)
!1122 = !{!1123, !1133, !1136, !1137}
!1123 = !DIDerivedType(tag: DW_TAG_member, scope: !1121, file: !928, line: 104, baseType: !1124, size: 128)
!1124 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1121, file: !928, line: 104, size: 128, elements: !1125)
!1125 = !{!1126, !1127}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1124, file: !928, line: 105, baseType: !414, size: 128)
!1127 = !DIDerivedType(tag: DW_TAG_member, scope: !1124, file: !928, line: 106, baseType: !1128, size: 128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1124, file: !928, line: 106, size: 128, elements: !1129)
!1129 = !{!1130, !1131, !1132}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1128, file: !928, line: 107, baseType: !926, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1128, file: !928, line: 109, baseType: !331, size: 32, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1128, file: !928, line: 110, baseType: !331, size: 32, offset: 96)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1121, file: !928, line: 117, baseType: !1134, size: 64, offset: 128)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !928, line: 117, flags: DIFlagFwdDecl)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1121, file: !928, line: 119, baseType: !325, size: 64, offset: 192)
!1137 = !DIDerivedType(tag: DW_TAG_member, scope: !1121, file: !928, line: 120, baseType: !1138, size: 64, offset: 256)
!1138 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1121, file: !928, line: 120, size: 64, elements: !1139)
!1139 = !{!1140, !1141, !1142}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1138, file: !928, line: 121, baseType: !325, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1138, file: !928, line: 122, baseType: !534, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, scope: !1138, file: !928, line: 123, baseType: !1143, size: 32)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1138, file: !928, line: 123, size: 32, elements: !1144)
!1144 = !{!1145, !1146, !1147}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1143, file: !928, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1143, file: !928, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1143, file: !928, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1148 = !DIDerivedType(tag: DW_TAG_member, scope: !932, file: !928, line: 130, baseType: !1149, size: 192)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !932, file: !928, line: 130, size: 192, elements: !1150)
!1150 = !{!1151, !1152, !1153, !1154, !1155}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1149, file: !928, line: 131, baseType: !534, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1149, file: !928, line: 134, baseType: !334, size: 8, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1149, file: !928, line: 135, baseType: !334, size: 8, offset: 72)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1149, file: !928, line: 136, baseType: !403, size: 32, offset: 96)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1149, file: !928, line: 137, baseType: !7, size: 32, offset: 128)
!1156 = !DIDerivedType(tag: DW_TAG_member, scope: !932, file: !928, line: 139, baseType: !1157, size: 256)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !932, file: !928, line: 139, size: 256, elements: !1158)
!1158 = !{!1159, !1160, !1161}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1157, file: !928, line: 140, baseType: !534, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1157, file: !928, line: 141, baseType: !403, size: 32, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1157, file: !928, line: 143, baseType: !414, size: 128, offset: 128)
!1162 = !DIDerivedType(tag: DW_TAG_member, scope: !932, file: !928, line: 145, baseType: !1163, size: 256)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !932, file: !928, line: 145, size: 256, elements: !1164)
!1164 = !{!1165, !1166, !1168, !1169, !2446}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1163, file: !928, line: 146, baseType: !534, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1163, file: !928, line: 147, baseType: !1167, size: 64, offset: 64)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !918, line: 509, baseType: !926)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1163, file: !928, line: 148, baseType: !534, size: 64, offset: 128)
!1169 = !DIDerivedType(tag: DW_TAG_member, scope: !1163, file: !928, line: 149, baseType: !1170, size: 64, offset: 192)
!1170 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1163, file: !928, line: 149, size: 64, elements: !1171)
!1171 = !{!1172, !2445}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1170, file: !928, line: 150, baseType: !1173, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !928, line: 388, size: 7296, elements: !1175)
!1175 = !{!1176, !2441}
!1176 = !DIDerivedType(tag: DW_TAG_member, scope: !1174, file: !928, line: 389, baseType: !1177, size: 7296)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1174, file: !928, line: 389, size: 7296, elements: !1178)
!1178 = !{!1179, !1217, !1218, !1219, !1223, !1224, !1225, !1226, !1227, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1268, !1276, !1279, !1325, !1326, !2425, !2426, !2429, !2430, !2431, !2434, !2435, !2436, !2439, !2440}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1177, file: !928, line: 390, baseType: !1180, size: 64)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !928, line: 305, size: 1472, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1197, !1198, !1203, !1204, !1207, !1211, !1212, !1213, !1214, !1215}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1181, file: !928, line: 308, baseType: !534, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1181, file: !928, line: 309, baseType: !534, size: 64, offset: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1181, file: !928, line: 313, baseType: !1180, size: 64, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1181, file: !928, line: 313, baseType: !1180, size: 64, offset: 192)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1181, file: !928, line: 315, baseType: !961, size: 192, align: 64, offset: 256)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1181, file: !928, line: 323, baseType: !534, size: 64, offset: 448)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1181, file: !928, line: 327, baseType: !1173, size: 64, offset: 512)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1181, file: !928, line: 333, baseType: !1191, size: 64, offset: 576)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !918, line: 284, baseType: !1192)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !918, line: 284, size: 64, elements: !1193)
!1193 = !{!1194}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1192, file: !918, line: 284, baseType: !1195, size: 64)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1196, line: 19, baseType: !534)
!1196 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1181, file: !928, line: 334, baseType: !534, size: 64, offset: 640)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1181, file: !928, line: 343, baseType: !1199, size: 256, offset: 704)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1181, file: !928, line: 340, size: 256, elements: !1200)
!1200 = !{!1201, !1202}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1199, file: !928, line: 341, baseType: !961, size: 192, align: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1199, file: !928, line: 342, baseType: !534, size: 64, offset: 192)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1181, file: !928, line: 351, baseType: !414, size: 128, offset: 960)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1181, file: !928, line: 353, baseType: !1205, size: 64, offset: 1088)
!1205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1206, size: 64)
!1206 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !928, line: 353, flags: DIFlagFwdDecl)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1181, file: !928, line: 356, baseType: !1208, size: 64, offset: 1152)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!1210 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !928, line: 356, flags: DIFlagFwdDecl)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1181, file: !928, line: 359, baseType: !534, size: 64, offset: 1216)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1181, file: !928, line: 361, baseType: !562, size: 64, offset: 1280)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1181, file: !928, line: 362, baseType: !325, size: 64, offset: 1344)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1181, file: !928, line: 365, baseType: !972, size: 64, offset: 1408)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1181, file: !928, line: 373, baseType: !1216, offset: 1472)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !928, line: 296, elements: !459)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1177, file: !928, line: 391, baseType: !957, size: 64, offset: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1177, file: !928, line: 392, baseType: !335, size: 64, offset: 128)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1177, file: !928, line: 394, baseType: !1220, size: 64, offset: 192)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DISubroutineType(types: !1222)
!1222 = !{!534, !562, !534, !534, !534, !534}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1177, file: !928, line: 398, baseType: !534, size: 64, offset: 256)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1177, file: !928, line: 399, baseType: !534, size: 64, offset: 320)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1177, file: !928, line: 405, baseType: !534, size: 64, offset: 384)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1177, file: !928, line: 406, baseType: !534, size: 64, offset: 448)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1177, file: !928, line: 407, baseType: !1228, size: 64, offset: 512)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 64)
!1229 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !918, line: 286, baseType: !1230)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !918, line: 286, size: 64, elements: !1231)
!1231 = !{!1232}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1230, file: !918, line: 286, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1196, line: 18, baseType: !534)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1177, file: !928, line: 416, baseType: !403, size: 32, offset: 576)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1177, file: !928, line: 428, baseType: !403, size: 32, offset: 608)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1177, file: !928, line: 437, baseType: !403, size: 32, offset: 640)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1177, file: !928, line: 447, baseType: !403, size: 32, offset: 672)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1177, file: !928, line: 450, baseType: !972, size: 64, offset: 704)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1177, file: !928, line: 452, baseType: !331, size: 32, offset: 768)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1177, file: !928, line: 454, baseType: !445, offset: 800)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1177, file: !928, line: 457, baseType: !968, size: 256, offset: 832)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1177, file: !928, line: 459, baseType: !414, size: 128, offset: 1088)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1177, file: !928, line: 466, baseType: !534, size: 64, offset: 1216)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1177, file: !928, line: 467, baseType: !534, size: 64, offset: 1280)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1177, file: !928, line: 469, baseType: !534, size: 64, offset: 1344)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1177, file: !928, line: 470, baseType: !534, size: 64, offset: 1408)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1177, file: !928, line: 471, baseType: !974, size: 64, offset: 1472)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1177, file: !928, line: 472, baseType: !534, size: 64, offset: 1536)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1177, file: !928, line: 473, baseType: !534, size: 64, offset: 1600)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1177, file: !928, line: 474, baseType: !534, size: 64, offset: 1664)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1177, file: !928, line: 475, baseType: !534, size: 64, offset: 1728)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1177, file: !928, line: 477, baseType: !445, offset: 1792)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1177, file: !928, line: 478, baseType: !534, size: 64, offset: 1792)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1177, file: !928, line: 478, baseType: !534, size: 64, offset: 1856)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1177, file: !928, line: 478, baseType: !534, size: 64, offset: 1920)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1177, file: !928, line: 478, baseType: !534, size: 64, offset: 1984)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1177, file: !928, line: 479, baseType: !534, size: 64, offset: 2048)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1177, file: !928, line: 479, baseType: !534, size: 64, offset: 2112)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1177, file: !928, line: 479, baseType: !534, size: 64, offset: 2176)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1177, file: !928, line: 480, baseType: !534, size: 64, offset: 2240)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1177, file: !928, line: 480, baseType: !534, size: 64, offset: 2304)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1177, file: !928, line: 480, baseType: !534, size: 64, offset: 2368)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1177, file: !928, line: 480, baseType: !534, size: 64, offset: 2432)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1177, file: !928, line: 482, baseType: !1265, size: 2816, offset: 2496)
!1265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, size: 2816, elements: !1266)
!1266 = !{!1267}
!1267 = !DISubrange(count: 44)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1177, file: !928, line: 488, baseType: !1269, size: 256, offset: 5312)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1270, line: 60, size: 256, elements: !1271)
!1270 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1271 = !{!1272}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1269, file: !1270, line: 61, baseType: !1273, size: 256)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 256, elements: !1274)
!1274 = !{!1275}
!1275 = !DISubrange(count: 4)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1177, file: !928, line: 490, baseType: !1277, size: 64, offset: 5568)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !928, line: 490, flags: DIFlagFwdDecl)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1177, file: !928, line: 493, baseType: !1280, size: 896, offset: 5632)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1281, line: 53, baseType: !1282)
!1281 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1281, line: 13, size: 896, elements: !1283)
!1283 = !{!1284, !1285, !1286, !1287, !1290, !1291, !1298, !1299, !1319, !1320, !1321}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1282, file: !1281, line: 18, baseType: !335, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1282, file: !1281, line: 28, baseType: !974, size: 64, offset: 64)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1282, file: !1281, line: 31, baseType: !968, size: 256, offset: 128)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1282, file: !1281, line: 32, baseType: !1288, size: 64, offset: 384)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1281, line: 32, flags: DIFlagFwdDecl)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1282, file: !1281, line: 37, baseType: !342, size: 16, offset: 448)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1282, file: !1281, line: 40, baseType: !1292, size: 192, offset: 512)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1293, line: 53, size: 192, elements: !1294)
!1293 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1294 = !{!1295, !1296, !1297}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1292, file: !1293, line: 54, baseType: !972, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1292, file: !1293, line: 55, baseType: !445, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1292, file: !1293, line: 59, baseType: !414, size: 128, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1282, file: !1281, line: 41, baseType: !325, size: 64, offset: 704)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1282, file: !1281, line: 42, baseType: !1300, size: 64, offset: 768)
!1300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1303, line: 13, size: 896, elements: !1304)
!1303 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1304 = !{!1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1302, file: !1303, line: 14, baseType: !325, size: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1302, file: !1303, line: 15, baseType: !534, size: 64, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1302, file: !1303, line: 17, baseType: !534, size: 64, offset: 128)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1302, file: !1303, line: 17, baseType: !534, size: 64, offset: 192)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1302, file: !1303, line: 19, baseType: !339, size: 64, offset: 256)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1302, file: !1303, line: 21, baseType: !339, size: 64, offset: 320)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1302, file: !1303, line: 22, baseType: !339, size: 64, offset: 384)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1302, file: !1303, line: 23, baseType: !339, size: 64, offset: 448)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1302, file: !1303, line: 24, baseType: !339, size: 64, offset: 512)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1302, file: !1303, line: 25, baseType: !339, size: 64, offset: 576)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1302, file: !1303, line: 26, baseType: !339, size: 64, offset: 640)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1302, file: !1303, line: 27, baseType: !339, size: 64, offset: 704)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1302, file: !1303, line: 28, baseType: !339, size: 64, offset: 768)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1302, file: !1303, line: 29, baseType: !339, size: 64, offset: 832)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1282, file: !1281, line: 44, baseType: !403, size: 32, offset: 832)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1282, file: !1281, line: 50, baseType: !340, size: 16, offset: 864)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1282, file: !1281, line: 51, baseType: !1322, size: 16, offset: 880)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !327, line: 18, baseType: !1323)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !329, line: 23, baseType: !1324)
!1324 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1177, file: !928, line: 495, baseType: !534, size: 64, offset: 6528)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1177, file: !928, line: 497, baseType: !1327, size: 64, offset: 6592)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !928, line: 381, size: 384, elements: !1329)
!1329 = !{!1330, !1331, !2424}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1328, file: !928, line: 382, baseType: !403, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1328, file: !928, line: 383, baseType: !1332, size: 128, offset: 64)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !928, line: 376, size: 128, elements: !1333)
!1333 = !{!1334, !2422}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1332, file: !928, line: 377, baseType: !1335, size: 64)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1337, line: 640, size: 48640, elements: !1338)
!1337 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1338 = !{!1339, !1345, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1360, !1378, !1389, !1470, !1471, !1472, !1483, !1484, !1486, !1487, !1488, !1489, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1571, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1609, !1611, !1612, !1613, !1625, !1626, !1627, !1628, !1629, !1630, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1654, !1659, !1840, !1841, !1842, !1843, !1847, !1850, !1853, !1856, !1859, !1863, !1964, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2010, !2011, !2012, !2013, !2014, !2019, !2020, !2021, !2024, !2025, !2028, !2031, !2034, !2037, !2080, !2083, !2084, !2163, !2164, !2167, !2168, !2171, !2172, !2173, !2177, !2178, !2179, !2192, !2193, !2194, !2204, !2209, !2212, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1336, file: !1337, line: 646, baseType: !1340, size: 128)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1341, line: 56, size: 128, elements: !1342)
!1341 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1342 = !{!1343, !1344}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1340, file: !1341, line: 57, baseType: !534, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1340, file: !1341, line: 58, baseType: !326, size: 32, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1336, file: !1337, line: 649, baseType: !1346, size: 64, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !339)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1336, file: !1337, line: 657, baseType: !325, size: 64, offset: 192)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1336, file: !1337, line: 658, baseType: !398, size: 32, offset: 256)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1336, file: !1337, line: 660, baseType: !7, size: 32, offset: 288)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1336, file: !1337, line: 661, baseType: !7, size: 32, offset: 320)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1336, file: !1337, line: 684, baseType: !331, size: 32, offset: 352)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1336, file: !1337, line: 686, baseType: !331, size: 32, offset: 384)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1336, file: !1337, line: 687, baseType: !331, size: 32, offset: 416)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1336, file: !1337, line: 688, baseType: !331, size: 32, offset: 448)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1336, file: !1337, line: 689, baseType: !7, size: 32, offset: 480)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1336, file: !1337, line: 691, baseType: !1357, size: 64, offset: 512)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1359)
!1359 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1337, line: 691, flags: DIFlagFwdDecl)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1336, file: !1337, line: 692, baseType: !1361, size: 832, offset: 576)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1337, line: 451, size: 832, elements: !1362)
!1362 = !{!1363, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1361, file: !1337, line: 453, baseType: !1364, size: 128)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1337, line: 325, size: 128, elements: !1365)
!1365 = !{!1366, !1367}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1364, file: !1337, line: 326, baseType: !534, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1364, file: !1337, line: 327, baseType: !326, size: 32, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1361, file: !1337, line: 454, baseType: !961, size: 192, align: 64, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1361, file: !1337, line: 455, baseType: !414, size: 128, offset: 320)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1361, file: !1337, line: 456, baseType: !7, size: 32, offset: 448)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1361, file: !1337, line: 458, baseType: !335, size: 64, offset: 512)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1361, file: !1337, line: 459, baseType: !335, size: 64, offset: 576)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1361, file: !1337, line: 460, baseType: !335, size: 64, offset: 640)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1361, file: !1337, line: 461, baseType: !335, size: 64, offset: 704)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1361, file: !1337, line: 463, baseType: !335, size: 64, offset: 768)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1361, file: !1337, line: 465, baseType: !1377, offset: 832)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1337, line: 415, elements: !459)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1336, file: !1337, line: 693, baseType: !1379, size: 384, offset: 1408)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1337, line: 489, size: 384, elements: !1380)
!1380 = !{!1381, !1382, !1383, !1384, !1385, !1386, !1387}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1379, file: !1337, line: 490, baseType: !414, size: 128)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1379, file: !1337, line: 491, baseType: !534, size: 64, offset: 128)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1379, file: !1337, line: 492, baseType: !534, size: 64, offset: 192)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1379, file: !1337, line: 493, baseType: !7, size: 32, offset: 256)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1379, file: !1337, line: 494, baseType: !342, size: 16, offset: 288)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1379, file: !1337, line: 495, baseType: !342, size: 16, offset: 304)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1379, file: !1337, line: 497, baseType: !1388, size: 64, offset: 320)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1336, file: !1337, line: 697, baseType: !1390, size: 1792, offset: 1792)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1337, line: 507, size: 1792, elements: !1391)
!1391 = !{!1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1467, !1468}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1390, file: !1337, line: 508, baseType: !961, size: 192, align: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1390, file: !1337, line: 515, baseType: !335, size: 64, offset: 192)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1390, file: !1337, line: 516, baseType: !335, size: 64, offset: 256)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1390, file: !1337, line: 517, baseType: !335, size: 64, offset: 320)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1390, file: !1337, line: 518, baseType: !335, size: 64, offset: 384)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1390, file: !1337, line: 519, baseType: !335, size: 64, offset: 448)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1390, file: !1337, line: 526, baseType: !978, size: 64, offset: 512)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1390, file: !1337, line: 527, baseType: !335, size: 64, offset: 576)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1390, file: !1337, line: 528, baseType: !7, size: 32, offset: 640)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1390, file: !1337, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1390, file: !1337, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1390, file: !1337, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1390, file: !1337, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1390, file: !1337, line: 563, baseType: !1406, size: 512, offset: 704)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !191, line: 118, size: 512, elements: !1407)
!1407 = !{!1408, !1416, !1417, !1422, !1463, !1464, !1465, !1466}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1406, file: !191, line: 119, baseType: !1409, size: 256)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1410, line: 9, size: 256, elements: !1411)
!1410 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1411 = !{!1412, !1413}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1409, file: !1410, line: 10, baseType: !961, size: 192, align: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1409, file: !1410, line: 11, baseType: !1414, size: 64, offset: 192)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1415, line: 29, baseType: !978)
!1415 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1406, file: !191, line: 120, baseType: !1414, size: 64, offset: 256)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1406, file: !191, line: 121, baseType: !1418, size: 64, offset: 320)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = !DISubroutineType(types: !1420)
!1420 = !{!190, !1421}
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1406, file: !191, line: 122, baseType: !1423, size: 64, offset: 384)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !191, line: 159, size: 512, align: 512, elements: !1425)
!1425 = !{!1426, !1444, !1445, !1448, !1453, !1454, !1458, !1462}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1424, file: !191, line: 160, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !191, line: 214, size: 4608, align: 512, elements: !1429)
!1429 = !{!1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1428, file: !191, line: 215, baseType: !981)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1428, file: !191, line: 216, baseType: !7, size: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1428, file: !191, line: 217, baseType: !7, size: 32, offset: 32)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1428, file: !191, line: 218, baseType: !7, size: 32, offset: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1428, file: !191, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1428, file: !191, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1428, file: !191, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1428, file: !191, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1428, file: !191, line: 233, baseType: !1414, size: 64, offset: 128)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1428, file: !191, line: 234, baseType: !1421, size: 64, offset: 192)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1428, file: !191, line: 235, baseType: !1414, size: 64, offset: 256)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1428, file: !191, line: 236, baseType: !1421, size: 64, offset: 320)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1428, file: !191, line: 237, baseType: !1443, size: 4096, offset: 512)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1424, size: 4096, elements: !384)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1424, file: !191, line: 161, baseType: !7, size: 32, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1424, file: !191, line: 162, baseType: !1446, size: 32, offset: 96)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !324, line: 27, baseType: !1447)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !519, line: 96, baseType: !331)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1424, file: !191, line: 163, baseType: !1449, size: 32, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !598, line: 276, baseType: !1450)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !598, line: 276, size: 32, elements: !1451)
!1451 = !{!1452}
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1450, file: !598, line: 276, baseType: !602, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1424, file: !191, line: 164, baseType: !1421, size: 64, offset: 192)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1424, file: !191, line: 165, baseType: !1455, size: 128, offset: 256)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1410, line: 14, size: 128, elements: !1456)
!1456 = !{!1457}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1455, file: !1410, line: 15, baseType: !953, size: 128)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1424, file: !191, line: 166, baseType: !1459, size: 64, offset: 384)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = !DISubroutineType(types: !1461)
!1461 = !{!1414}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1424, file: !191, line: 167, baseType: !1414, size: 64, offset: 448)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1406, file: !191, line: 123, baseType: !332, size: 8, offset: 448)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1406, file: !191, line: 124, baseType: !332, size: 8, offset: 456)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1406, file: !191, line: 125, baseType: !332, size: 8, offset: 464)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1406, file: !191, line: 126, baseType: !332, size: 8, offset: 472)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1390, file: !1337, line: 572, baseType: !1406, size: 512, offset: 1216)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1390, file: !1337, line: 580, baseType: !1469, size: 64, offset: 1728)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1336, file: !1337, line: 721, baseType: !7, size: 32, offset: 3584)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1336, file: !1337, line: 722, baseType: !331, size: 32, offset: 3616)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1336, file: !1337, line: 723, baseType: !1473, size: 64, offset: 3648)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1475)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1476, line: 17, baseType: !1477)
!1476 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1476, line: 17, size: 64, elements: !1478)
!1478 = !{!1479}
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1477, file: !1476, line: 17, baseType: !1480, size: 64)
!1480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, size: 64, elements: !1481)
!1481 = !{!1482}
!1482 = !DISubrange(count: 1)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1336, file: !1337, line: 724, baseType: !1475, size: 64, offset: 3712)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1336, file: !1337, line: 749, baseType: !1485, offset: 3776)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1337, line: 290, elements: !459)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1336, file: !1337, line: 751, baseType: !414, size: 128, offset: 3776)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1336, file: !1337, line: 757, baseType: !1173, size: 64, offset: 3904)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1336, file: !1337, line: 758, baseType: !1173, size: 64, offset: 3968)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1336, file: !1337, line: 761, baseType: !1490, size: 320, offset: 4032)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1270, line: 34, size: 320, elements: !1491)
!1491 = !{!1492, !1493}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1490, file: !1270, line: 35, baseType: !335, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1490, file: !1270, line: 36, baseType: !1494, size: 256, offset: 64)
!1494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1180, size: 256, elements: !1274)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1336, file: !1337, line: 766, baseType: !331, size: 32, offset: 4352)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1336, file: !1337, line: 767, baseType: !331, size: 32, offset: 4384)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1336, file: !1337, line: 768, baseType: !331, size: 32, offset: 4416)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1336, file: !1337, line: 770, baseType: !331, size: 32, offset: 4448)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1336, file: !1337, line: 772, baseType: !534, size: 64, offset: 4480)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1336, file: !1337, line: 775, baseType: !7, size: 32, offset: 4544)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1336, file: !1337, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1336, file: !1337, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1336, file: !1337, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1336, file: !1337, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1336, file: !1337, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1336, file: !1337, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1336, file: !1337, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1336, file: !1337, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1336, file: !1337, line: 831, baseType: !534, size: 64, offset: 4672)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1336, file: !1337, line: 833, baseType: !1511, size: 384, offset: 4736)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !196, line: 25, size: 384, elements: !1512)
!1512 = !{!1513, !1518}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1511, file: !196, line: 26, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!339, !1517}
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, scope: !1511, file: !196, line: 27, baseType: !1519, size: 320, offset: 64)
!1519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1511, file: !196, line: 27, size: 320, elements: !1520)
!1520 = !{!1521, !1531, !1556}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1519, file: !196, line: 36, baseType: !1522, size: 320)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1519, file: !196, line: 29, size: 320, elements: !1523)
!1523 = !{!1524, !1526, !1527, !1528, !1529, !1530}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1522, file: !196, line: 30, baseType: !1525, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1522, file: !196, line: 31, baseType: !326, size: 32, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1522, file: !196, line: 32, baseType: !326, size: 32, offset: 96)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1522, file: !196, line: 33, baseType: !326, size: 32, offset: 128)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1522, file: !196, line: 34, baseType: !335, size: 64, offset: 192)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1522, file: !196, line: 35, baseType: !1525, size: 64, offset: 256)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1519, file: !196, line: 46, baseType: !1532, size: 192)
!1532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1519, file: !196, line: 38, size: 192, elements: !1533)
!1533 = !{!1534, !1535, !1536, !1555}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1532, file: !196, line: 39, baseType: !1446, size: 32)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1532, file: !196, line: 40, baseType: !195, size: 32, offset: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, scope: !1532, file: !196, line: 41, baseType: !1537, size: 64, offset: 64)
!1537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1532, file: !196, line: 41, size: 64, elements: !1538)
!1538 = !{!1539, !1547}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1537, file: !196, line: 42, baseType: !1540, size: 64)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1542, line: 7, size: 128, elements: !1543)
!1542 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1543 = !{!1544, !1546}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1541, file: !1542, line: 8, baseType: !1545, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !519, line: 93, baseType: !735)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1541, file: !1542, line: 9, baseType: !735, size: 64, offset: 64)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1537, file: !196, line: 43, baseType: !1548, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1550, line: 7, size: 64, elements: !1551)
!1550 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1551 = !{!1552, !1554}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1549, file: !1550, line: 8, baseType: !1553, size: 32)
!1553 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1550, line: 5, baseType: !344)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1549, file: !1550, line: 9, baseType: !344, size: 32, offset: 32)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1532, file: !196, line: 45, baseType: !335, size: 64, offset: 128)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1519, file: !196, line: 54, baseType: !1557, size: 256)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1519, file: !196, line: 48, size: 256, elements: !1558)
!1558 = !{!1559, !1567, !1568, !1569, !1570}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1557, file: !196, line: 49, baseType: !1560, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1562, line: 36, size: 64, elements: !1563)
!1562 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1563 = !{!1564, !1565, !1566}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1561, file: !1562, line: 37, baseType: !331, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1561, file: !1562, line: 38, baseType: !1324, size: 16, offset: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1561, file: !1562, line: 39, baseType: !1324, size: 16, offset: 48)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1557, file: !196, line: 50, baseType: !331, size: 32, offset: 64)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1557, file: !196, line: 51, baseType: !331, size: 32, offset: 96)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1557, file: !196, line: 52, baseType: !534, size: 64, offset: 128)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1557, file: !196, line: 53, baseType: !534, size: 64, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1336, file: !1337, line: 835, baseType: !1572, size: 32, offset: 5120)
!1572 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !324, line: 22, baseType: !1573)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !519, line: 28, baseType: !331)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1336, file: !1337, line: 836, baseType: !1572, size: 32, offset: 5152)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1336, file: !1337, line: 840, baseType: !534, size: 64, offset: 5184)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1336, file: !1337, line: 849, baseType: !1335, size: 64, offset: 5248)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1336, file: !1337, line: 852, baseType: !1335, size: 64, offset: 5312)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1336, file: !1337, line: 857, baseType: !414, size: 128, offset: 5376)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1336, file: !1337, line: 858, baseType: !414, size: 128, offset: 5504)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1336, file: !1337, line: 859, baseType: !1335, size: 64, offset: 5632)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1336, file: !1337, line: 867, baseType: !414, size: 128, offset: 5696)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1336, file: !1337, line: 868, baseType: !414, size: 128, offset: 5824)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1336, file: !1337, line: 871, baseType: !1584, size: 64, offset: 5952)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !217, line: 59, size: 768, elements: !1586)
!1586 = !{!1587, !1588, !1589, !1590, !1592, !1593, !1600, !1601}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1585, file: !217, line: 61, baseType: !398, size: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1585, file: !217, line: 62, baseType: !7, size: 32, offset: 32)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1585, file: !217, line: 63, baseType: !445, offset: 64)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1585, file: !217, line: 65, baseType: !1591, size: 256, offset: 64)
!1591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !840, size: 256, elements: !1274)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1585, file: !217, line: 66, baseType: !840, size: 64, offset: 320)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1585, file: !217, line: 68, baseType: !1594, size: 128, offset: 384)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1595, line: 40, baseType: !1596)
!1595 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1595, line: 36, size: 128, elements: !1597)
!1597 = !{!1598, !1599}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1596, file: !1595, line: 37, baseType: !445)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1596, file: !1595, line: 38, baseType: !414, size: 128)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1585, file: !217, line: 69, baseType: !575, size: 128, align: 64, offset: 512)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1585, file: !217, line: 70, baseType: !1602, size: 128, offset: 640)
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1603, size: 128, elements: !1481)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !217, line: 54, size: 128, elements: !1604)
!1604 = !{!1605, !1606}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1603, file: !217, line: 55, baseType: !331, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1603, file: !217, line: 56, baseType: !1607, size: 64, offset: 64)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !217, line: 56, flags: DIFlagFwdDecl)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1336, file: !1337, line: 872, baseType: !1610, size: 512, offset: 6016)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, size: 512, elements: !1274)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1336, file: !1337, line: 873, baseType: !414, size: 128, offset: 6528)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1336, file: !1337, line: 874, baseType: !414, size: 128, offset: 6656)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1336, file: !1337, line: 876, baseType: !1614, size: 64, offset: 6784)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1616, line: 26, size: 192, elements: !1617)
!1616 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1617 = !{!1618, !1619}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1615, file: !1616, line: 27, baseType: !7, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1615, file: !1616, line: 28, baseType: !1620, size: 128, offset: 64)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1621, line: 43, size: 128, elements: !1622)
!1621 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1622 = !{!1623, !1624}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1620, file: !1621, line: 44, baseType: !981)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1620, file: !1621, line: 45, baseType: !414, size: 128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1336, file: !1337, line: 879, baseType: !910, size: 64, offset: 6848)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1336, file: !1337, line: 882, baseType: !910, size: 64, offset: 6912)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1336, file: !1337, line: 884, baseType: !335, size: 64, offset: 6976)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1336, file: !1337, line: 885, baseType: !335, size: 64, offset: 7040)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1336, file: !1337, line: 890, baseType: !335, size: 64, offset: 7104)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1336, file: !1337, line: 891, baseType: !1631, size: 128, offset: 7168)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1337, line: 242, size: 128, elements: !1632)
!1632 = !{!1633, !1634, !1635}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1631, file: !1337, line: 244, baseType: !335, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1631, file: !1337, line: 245, baseType: !335, size: 64, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1631, file: !1337, line: 246, baseType: !981, offset: 128)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1336, file: !1337, line: 900, baseType: !534, size: 64, offset: 7296)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1336, file: !1337, line: 901, baseType: !534, size: 64, offset: 7360)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1336, file: !1337, line: 904, baseType: !335, size: 64, offset: 7424)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1336, file: !1337, line: 907, baseType: !335, size: 64, offset: 7488)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1336, file: !1337, line: 910, baseType: !534, size: 64, offset: 7552)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1336, file: !1337, line: 911, baseType: !534, size: 64, offset: 7616)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1336, file: !1337, line: 914, baseType: !1643, size: 640, offset: 7680)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1644, line: 123, size: 640, elements: !1645)
!1644 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1645 = !{!1646, !1652, !1653}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1643, file: !1644, line: 124, baseType: !1647, size: 576)
!1647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1648, size: 576, elements: !487)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1644, line: 108, size: 192, elements: !1649)
!1649 = !{!1650, !1651}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1648, file: !1644, line: 109, baseType: !335, size: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1648, file: !1644, line: 110, baseType: !1455, size: 128, offset: 64)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1643, file: !1644, line: 125, baseType: !7, size: 32, offset: 576)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1643, file: !1644, line: 126, baseType: !7, size: 32, offset: 608)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1336, file: !1337, line: 917, baseType: !1655, size: 192, offset: 8320)
!1655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1644, line: 134, size: 192, elements: !1656)
!1656 = !{!1657, !1658}
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1655, file: !1644, line: 135, baseType: !575, size: 128, align: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1655, file: !1644, line: 136, baseType: !7, size: 32, offset: 128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1336, file: !1337, line: 923, baseType: !1660, size: 64, offset: 8512)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1663, line: 111, size: 1280, elements: !1664)
!1663 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1664 = !{!1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1684, !1685, !1686, !1687, !1688, !1689, !1793, !1794, !1795, !1796, !1822, !1825, !1835}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1662, file: !1663, line: 112, baseType: !403, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1662, file: !1663, line: 120, baseType: !637, size: 32, offset: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1662, file: !1663, line: 121, baseType: !645, size: 32, offset: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1662, file: !1663, line: 122, baseType: !637, size: 32, offset: 96)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1662, file: !1663, line: 123, baseType: !645, size: 32, offset: 128)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1662, file: !1663, line: 124, baseType: !637, size: 32, offset: 160)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1662, file: !1663, line: 125, baseType: !645, size: 32, offset: 192)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1662, file: !1663, line: 126, baseType: !637, size: 32, offset: 224)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1662, file: !1663, line: 127, baseType: !645, size: 32, offset: 256)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1662, file: !1663, line: 128, baseType: !7, size: 32, offset: 288)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1662, file: !1663, line: 129, baseType: !1676, size: 64, offset: 320)
!1676 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1677, line: 26, baseType: !1678)
!1677 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1677, line: 24, size: 64, elements: !1679)
!1679 = !{!1680}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1678, file: !1677, line: 25, baseType: !1681, size: 64)
!1681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 64, elements: !1682)
!1682 = !{!1683}
!1683 = !DISubrange(count: 2)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1662, file: !1663, line: 130, baseType: !1676, size: 64, offset: 384)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1662, file: !1663, line: 131, baseType: !1676, size: 64, offset: 448)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1662, file: !1663, line: 132, baseType: !1676, size: 64, offset: 512)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1662, file: !1663, line: 133, baseType: !1676, size: 64, offset: 576)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1662, file: !1663, line: 135, baseType: !334, size: 8, offset: 640)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1662, file: !1663, line: 137, baseType: !1690, size: 64, offset: 704)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1692, line: 189, size: 1664, elements: !1693)
!1692 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1693 = !{!1694, !1695, !1697, !1702, !1703, !1706, !1707, !1712, !1713, !1714, !1715, !1717, !1718, !1719, !1720, !1721, !1757, !1778}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1691, file: !1692, line: 190, baseType: !398, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1691, file: !1692, line: 191, baseType: !1696, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1692, line: 28, baseType: !343)
!1697 = !DIDerivedType(tag: DW_TAG_member, scope: !1691, file: !1692, line: 192, baseType: !1698, size: 192, offset: 64)
!1698 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1691, file: !1692, line: 192, size: 192, elements: !1699)
!1699 = !{!1700, !1701}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1698, file: !1692, line: 193, baseType: !414, size: 128)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1698, file: !1692, line: 194, baseType: !961, size: 192, align: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1691, file: !1692, line: 199, baseType: !968, size: 256, offset: 256)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1691, file: !1692, line: 200, baseType: !1704, size: 64, offset: 512)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1705, size: 64)
!1705 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1692, line: 200, flags: DIFlagFwdDecl)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1691, file: !1692, line: 201, baseType: !325, size: 64, offset: 576)
!1707 = !DIDerivedType(tag: DW_TAG_member, scope: !1691, file: !1692, line: 202, baseType: !1708, size: 64, offset: 640)
!1708 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1691, file: !1692, line: 202, size: 64, elements: !1709)
!1709 = !{!1710, !1711}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1708, file: !1692, line: 203, baseType: !741, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1708, file: !1692, line: 204, baseType: !741, size: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1691, file: !1692, line: 206, baseType: !741, size: 64, offset: 704)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1691, file: !1692, line: 207, baseType: !637, size: 32, offset: 768)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1691, file: !1692, line: 208, baseType: !645, size: 32, offset: 800)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1691, file: !1692, line: 209, baseType: !1716, size: 32, offset: 832)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1692, line: 31, baseType: !761)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1691, file: !1692, line: 210, baseType: !342, size: 16, offset: 864)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1691, file: !1692, line: 211, baseType: !342, size: 16, offset: 880)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1691, file: !1692, line: 215, baseType: !1324, size: 16, offset: 896)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1691, file: !1692, line: 222, baseType: !534, size: 64, offset: 960)
!1721 = !DIDerivedType(tag: DW_TAG_member, scope: !1691, file: !1692, line: 239, baseType: !1722, size: 320, offset: 1024)
!1722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1691, file: !1692, line: 239, size: 320, elements: !1723)
!1723 = !{!1724, !1749}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1722, file: !1692, line: 240, baseType: !1725, size: 320)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1692, line: 108, size: 320, elements: !1726)
!1726 = !{!1727, !1728, !1738, !1741, !1748}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1725, file: !1692, line: 110, baseType: !534, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, scope: !1725, file: !1692, line: 111, baseType: !1729, size: 64, offset: 64)
!1729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1725, file: !1692, line: 111, size: 64, elements: !1730)
!1730 = !{!1731, !1737}
!1731 = !DIDerivedType(tag: DW_TAG_member, scope: !1729, file: !1692, line: 112, baseType: !1732, size: 64)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1729, file: !1692, line: 112, size: 64, elements: !1733)
!1733 = !{!1734, !1735}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1732, file: !1692, line: 114, baseType: !340, size: 16)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1732, file: !1692, line: 115, baseType: !1736, size: 48, offset: 16)
!1736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 48, elements: !424)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1729, file: !1692, line: 121, baseType: !534, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1725, file: !1692, line: 123, baseType: !1739, size: 64, offset: 128)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1692, line: 96, flags: DIFlagFwdDecl)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1725, file: !1692, line: 124, baseType: !1742, size: 64, offset: 192)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1692, line: 102, size: 192, elements: !1744)
!1744 = !{!1745, !1746, !1747}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1743, file: !1692, line: 103, baseType: !575, size: 128, align: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1743, file: !1692, line: 104, baseType: !398, size: 32, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1743, file: !1692, line: 105, baseType: !692, size: 8, offset: 160)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1725, file: !1692, line: 125, baseType: !421, size: 64, offset: 256)
!1749 = !DIDerivedType(tag: DW_TAG_member, scope: !1722, file: !1692, line: 241, baseType: !1750, size: 320)
!1750 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1722, file: !1692, line: 241, size: 320, elements: !1751)
!1751 = !{!1752, !1753, !1754, !1755, !1756}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1750, file: !1692, line: 242, baseType: !534, size: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1750, file: !1692, line: 243, baseType: !534, size: 64, offset: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1750, file: !1692, line: 244, baseType: !1739, size: 64, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1750, file: !1692, line: 245, baseType: !1742, size: 64, offset: 192)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1750, file: !1692, line: 246, baseType: !486, size: 64, offset: 256)
!1757 = !DIDerivedType(tag: DW_TAG_member, scope: !1691, file: !1692, line: 254, baseType: !1758, size: 256, offset: 1344)
!1758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1691, file: !1692, line: 254, size: 256, elements: !1759)
!1759 = !{!1760, !1766}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1758, file: !1692, line: 255, baseType: !1761, size: 256)
!1761 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1692, line: 128, size: 256, elements: !1762)
!1762 = !{!1763, !1764}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1761, file: !1692, line: 129, baseType: !325, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1761, file: !1692, line: 130, baseType: !1765, size: 256)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !325, size: 256, elements: !1274)
!1766 = !DIDerivedType(tag: DW_TAG_member, scope: !1758, file: !1692, line: 256, baseType: !1767, size: 256)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1758, file: !1692, line: 256, size: 256, elements: !1768)
!1768 = !{!1769, !1770}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1767, file: !1692, line: 258, baseType: !414, size: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1767, file: !1692, line: 259, baseType: !1771, size: 128, offset: 128)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1772, line: 22, size: 128, elements: !1773)
!1772 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1773 = !{!1774, !1777}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1771, file: !1772, line: 23, baseType: !1775, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1772, line: 23, flags: DIFlagFwdDecl)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1771, file: !1772, line: 24, baseType: !534, size: 64, offset: 64)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1691, file: !1692, line: 274, baseType: !1779, size: 64, offset: 1600)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1692, line: 170, size: 192, elements: !1781)
!1781 = !{!1782, !1791, !1792}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1780, file: !1692, line: 171, baseType: !1783, size: 64)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1692, line: 165, baseType: !1784)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = !DISubroutineType(types: !1786)
!1786 = !{!331, !1690, !1787, !1789, !1690}
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1740)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1761)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1780, file: !1692, line: 172, baseType: !1690, size: 64, offset: 64)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1780, file: !1692, line: 173, baseType: !1739, size: 64, offset: 128)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1662, file: !1663, line: 138, baseType: !1690, size: 64, offset: 768)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1662, file: !1663, line: 139, baseType: !1690, size: 64, offset: 832)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1662, file: !1663, line: 140, baseType: !1690, size: 64, offset: 896)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1662, file: !1663, line: 145, baseType: !1797, size: 64, offset: 960)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 64)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1799, line: 13, size: 896, elements: !1800)
!1799 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1800 = !{!1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1798, file: !1799, line: 14, baseType: !398, size: 32)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1798, file: !1799, line: 15, baseType: !403, size: 32, offset: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1798, file: !1799, line: 16, baseType: !403, size: 32, offset: 64)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1798, file: !1799, line: 21, baseType: !972, size: 64, offset: 128)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1798, file: !1799, line: 27, baseType: !534, size: 64, offset: 192)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1798, file: !1799, line: 28, baseType: !534, size: 64, offset: 256)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1798, file: !1799, line: 29, baseType: !972, size: 64, offset: 320)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1798, file: !1799, line: 32, baseType: !844, size: 128, offset: 384)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1798, file: !1799, line: 33, baseType: !637, size: 32, offset: 512)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1798, file: !1799, line: 37, baseType: !972, size: 64, offset: 576)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1798, file: !1799, line: 44, baseType: !1812, size: 256, offset: 640)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1813, line: 15, size: 256, elements: !1814)
!1813 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1814 = !{!1815, !1816, !1817, !1818, !1819, !1820, !1821}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1812, file: !1813, line: 16, baseType: !981)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1812, file: !1813, line: 18, baseType: !331, size: 32)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1812, file: !1813, line: 19, baseType: !331, size: 32, offset: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1812, file: !1813, line: 20, baseType: !331, size: 32, offset: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1812, file: !1813, line: 21, baseType: !331, size: 32, offset: 96)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1812, file: !1813, line: 22, baseType: !534, size: 64, offset: 128)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1812, file: !1813, line: 23, baseType: !534, size: 64, offset: 192)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1662, file: !1663, line: 146, baseType: !1823, size: 64, offset: 1024)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !638, line: 18, flags: DIFlagFwdDecl)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1662, file: !1663, line: 147, baseType: !1826, size: 64, offset: 1088)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1663, line: 25, size: 64, elements: !1828)
!1828 = !{!1829, !1830, !1831}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1827, file: !1663, line: 26, baseType: !403, size: 32)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1827, file: !1663, line: 27, baseType: !331, size: 32, offset: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1827, file: !1663, line: 28, baseType: !1832, offset: 64)
!1832 = !DICompositeType(tag: DW_TAG_array_type, baseType: !645, elements: !1833)
!1833 = !{!1834}
!1834 = !DISubrange(count: 0)
!1835 = !DIDerivedType(tag: DW_TAG_member, scope: !1662, file: !1663, line: 149, baseType: !1836, size: 128, offset: 1152)
!1836 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1662, file: !1663, line: 149, size: 128, elements: !1837)
!1837 = !{!1838, !1839}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1836, file: !1663, line: 150, baseType: !331, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1836, file: !1663, line: 151, baseType: !575, size: 128, align: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1336, file: !1337, line: 926, baseType: !1660, size: 64, offset: 8576)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1336, file: !1337, line: 929, baseType: !1660, size: 64, offset: 8640)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1336, file: !1337, line: 933, baseType: !1690, size: 64, offset: 8704)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1336, file: !1337, line: 943, baseType: !1844, size: 128, offset: 8768)
!1844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 128, elements: !1845)
!1845 = !{!1846}
!1846 = !DISubrange(count: 16)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1336, file: !1337, line: 945, baseType: !1848, size: 64, offset: 8896)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 64)
!1849 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1337, line: 49, flags: DIFlagFwdDecl)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1336, file: !1337, line: 956, baseType: !1851, size: 64, offset: 8960)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1337, line: 45, flags: DIFlagFwdDecl)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1336, file: !1337, line: 959, baseType: !1854, size: 64, offset: 9024)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1337, line: 959, flags: DIFlagFwdDecl)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1336, file: !1337, line: 962, baseType: !1857, size: 64, offset: 9088)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1337, line: 66, flags: DIFlagFwdDecl)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1336, file: !1337, line: 966, baseType: !1860, size: 64, offset: 9152)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1862, line: 35, flags: DIFlagFwdDecl)
!1862 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1336, file: !1337, line: 969, baseType: !1864, size: 64, offset: 9216)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1866, line: 82, size: 7296, elements: !1867)
!1866 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1867 = !{!1868, !1869, !1870, !1871, !1872, !1873, !1874, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1903, !1912, !1913, !1915, !1916, !1917, !1920, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1950, !1951, !1958, !1959, !1960, !1961, !1962, !1963}
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1865, file: !1866, line: 83, baseType: !398, size: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1865, file: !1866, line: 84, baseType: !403, size: 32, offset: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1865, file: !1866, line: 85, baseType: !331, size: 32, offset: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1865, file: !1866, line: 86, baseType: !414, size: 128, offset: 128)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1865, file: !1866, line: 88, baseType: !1594, size: 128, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1865, file: !1866, line: 91, baseType: !1335, size: 64, offset: 384)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1865, file: !1866, line: 94, baseType: !1875, size: 192, offset: 448)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1876, line: 30, size: 192, elements: !1877)
!1876 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1875, file: !1876, line: 31, baseType: !414, size: 128)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1875, file: !1876, line: 32, baseType: !1880, size: 64, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1881, line: 25, baseType: !1882)
!1881 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1881, line: 23, size: 64, elements: !1883)
!1883 = !{!1884}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1882, file: !1881, line: 24, baseType: !1480, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1865, file: !1866, line: 97, baseType: !840, size: 64, offset: 640)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1865, file: !1866, line: 100, baseType: !331, size: 32, offset: 704)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1865, file: !1866, line: 106, baseType: !331, size: 32, offset: 736)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1865, file: !1866, line: 107, baseType: !1335, size: 64, offset: 768)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1865, file: !1866, line: 110, baseType: !331, size: 32, offset: 832)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1865, file: !1866, line: 111, baseType: !7, size: 32, offset: 864)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1865, file: !1866, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1865, file: !1866, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1865, file: !1866, line: 128, baseType: !331, size: 32, offset: 928)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1865, file: !1866, line: 129, baseType: !414, size: 128, offset: 960)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1865, file: !1866, line: 132, baseType: !1406, size: 512, offset: 1088)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1865, file: !1866, line: 133, baseType: !1414, size: 64, offset: 1600)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1865, file: !1866, line: 140, baseType: !1898, size: 256, offset: 1664)
!1898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1899, size: 256, elements: !1682)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1866, line: 38, size: 128, elements: !1900)
!1900 = !{!1901, !1902}
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1899, file: !1866, line: 39, baseType: !335, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1899, file: !1866, line: 40, baseType: !335, size: 64, offset: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1865, file: !1866, line: 146, baseType: !1904, size: 192, offset: 1920)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1866, line: 66, size: 192, elements: !1905)
!1905 = !{!1906}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1904, file: !1866, line: 67, baseType: !1907, size: 192)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1866, line: 47, size: 192, elements: !1908)
!1908 = !{!1909, !1910, !1911}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1907, file: !1866, line: 48, baseType: !974, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1907, file: !1866, line: 49, baseType: !974, size: 64, offset: 64)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1907, file: !1866, line: 50, baseType: !974, size: 64, offset: 128)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1865, file: !1866, line: 150, baseType: !1643, size: 640, offset: 2112)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1865, file: !1866, line: 153, baseType: !1914, size: 256, offset: 2752)
!1914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1584, size: 256, elements: !1274)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1865, file: !1866, line: 159, baseType: !1584, size: 64, offset: 3008)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1865, file: !1866, line: 162, baseType: !331, size: 32, offset: 3072)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1865, file: !1866, line: 164, baseType: !1918, size: 64, offset: 3136)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1866, line: 164, flags: DIFlagFwdDecl)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1865, file: !1866, line: 175, baseType: !1921, size: 32, offset: 3200)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !598, line: 805, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !598, line: 798, size: 32, elements: !1923)
!1923 = !{!1924, !1925}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1922, file: !598, line: 803, baseType: !597, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1922, file: !598, line: 804, baseType: !445, offset: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1865, file: !1866, line: 176, baseType: !335, size: 64, offset: 3264)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1865, file: !1866, line: 176, baseType: !335, size: 64, offset: 3328)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1865, file: !1866, line: 176, baseType: !335, size: 64, offset: 3392)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1865, file: !1866, line: 176, baseType: !335, size: 64, offset: 3456)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1865, file: !1866, line: 177, baseType: !335, size: 64, offset: 3520)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1865, file: !1866, line: 178, baseType: !335, size: 64, offset: 3584)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1865, file: !1866, line: 179, baseType: !1631, size: 128, offset: 3648)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1865, file: !1866, line: 180, baseType: !534, size: 64, offset: 3776)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1865, file: !1866, line: 180, baseType: !534, size: 64, offset: 3840)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1865, file: !1866, line: 180, baseType: !534, size: 64, offset: 3904)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1865, file: !1866, line: 180, baseType: !534, size: 64, offset: 3968)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1865, file: !1866, line: 181, baseType: !534, size: 64, offset: 4032)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1865, file: !1866, line: 181, baseType: !534, size: 64, offset: 4096)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1865, file: !1866, line: 181, baseType: !534, size: 64, offset: 4160)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1865, file: !1866, line: 181, baseType: !534, size: 64, offset: 4224)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1865, file: !1866, line: 182, baseType: !534, size: 64, offset: 4288)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1865, file: !1866, line: 182, baseType: !534, size: 64, offset: 4352)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1865, file: !1866, line: 182, baseType: !534, size: 64, offset: 4416)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1865, file: !1866, line: 182, baseType: !534, size: 64, offset: 4480)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1865, file: !1866, line: 183, baseType: !534, size: 64, offset: 4544)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1865, file: !1866, line: 183, baseType: !534, size: 64, offset: 4608)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1865, file: !1866, line: 184, baseType: !1948, offset: 4672)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1949, line: 12, elements: !459)
!1949 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1865, file: !1866, line: 192, baseType: !337, size: 64, offset: 4672)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1865, file: !1866, line: 203, baseType: !1952, size: 2048, offset: 4736)
!1952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1953, size: 2048, elements: !1845)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1954, line: 43, size: 128, elements: !1955)
!1954 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1955 = !{!1956, !1957}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1953, file: !1954, line: 44, baseType: !533, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1953, file: !1954, line: 45, baseType: !533, size: 64, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1865, file: !1866, line: 220, baseType: !692, size: 8, offset: 6784)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1865, file: !1866, line: 221, baseType: !1324, size: 16, offset: 6800)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1865, file: !1866, line: 222, baseType: !1324, size: 16, offset: 6816)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1865, file: !1866, line: 224, baseType: !1173, size: 64, offset: 6848)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1865, file: !1866, line: 227, baseType: !1292, size: 192, offset: 6912)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1865, file: !1866, line: 233, baseType: !1292, size: 192, offset: 7104)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1336, file: !1337, line: 970, baseType: !1965, size: 64, offset: 9280)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1866, line: 20, size: 16576, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1966, file: !1866, line: 21, baseType: !445)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1966, file: !1866, line: 22, baseType: !398, size: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1966, file: !1866, line: 23, baseType: !1594, size: 128, offset: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1966, file: !1866, line: 24, baseType: !1972, size: 16384, offset: 192)
!1972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1973, size: 16384, elements: !491)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1876, line: 49, size: 256, elements: !1974)
!1974 = !{!1975}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1973, file: !1876, line: 50, baseType: !1976, size: 256)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1876, line: 35, size: 256, elements: !1977)
!1977 = !{!1978, !1985, !1986, !1992}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1976, file: !1876, line: 37, baseType: !1979, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1980, line: 19, baseType: !1981)
!1980 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1980, line: 18, baseType: !1983)
!1983 = !DISubroutineType(types: !1984)
!1984 = !{null, !331}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1976, file: !1876, line: 38, baseType: !534, size: 64, offset: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1976, file: !1876, line: 44, baseType: !1987, size: 64, offset: 128)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1980, line: 22, baseType: !1988)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1980, line: 21, baseType: !1990)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{null}
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1976, file: !1876, line: 46, baseType: !1880, size: 64, offset: 192)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1336, file: !1337, line: 971, baseType: !1880, size: 64, offset: 9344)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1336, file: !1337, line: 972, baseType: !1880, size: 64, offset: 9408)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1336, file: !1337, line: 974, baseType: !1880, size: 64, offset: 9472)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1336, file: !1337, line: 975, baseType: !1875, size: 192, offset: 9536)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1336, file: !1337, line: 976, baseType: !534, size: 64, offset: 9728)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1336, file: !1337, line: 977, baseType: !531, size: 64, offset: 9792)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1336, file: !1337, line: 978, baseType: !7, size: 32, offset: 9856)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1336, file: !1337, line: 980, baseType: !578, size: 64, offset: 9920)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1336, file: !1337, line: 989, baseType: !2002, size: 128, offset: 9984)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2003, line: 35, size: 128, elements: !2004)
!2003 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2004 = !{!2005, !2006, !2007}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2002, file: !2003, line: 36, baseType: !331, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2002, file: !2003, line: 37, baseType: !403, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2002, file: !2003, line: 38, baseType: !2008, size: 64, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2009 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2003, line: 23, flags: DIFlagFwdDecl)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1336, file: !1337, line: 992, baseType: !335, size: 64, offset: 10112)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1336, file: !1337, line: 993, baseType: !335, size: 64, offset: 10176)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1336, file: !1337, line: 996, baseType: !445, offset: 10240)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1336, file: !1337, line: 999, baseType: !981, offset: 10240)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1336, file: !1337, line: 1001, baseType: !2015, size: 64, offset: 10240)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1337, line: 636, size: 64, elements: !2016)
!2016 = !{!2017}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2015, file: !1337, line: 637, baseType: !2018, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1336, file: !1337, line: 1005, baseType: !953, size: 128, offset: 10304)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1336, file: !1337, line: 1007, baseType: !1335, size: 64, offset: 10432)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1336, file: !1337, line: 1009, baseType: !2022, size: 64, offset: 10496)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 64)
!2023 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1337, line: 1009, flags: DIFlagFwdDecl)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1336, file: !1337, line: 1043, baseType: !325, size: 64, offset: 10560)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1336, file: !1337, line: 1046, baseType: !2026, size: 64, offset: 10624)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1337, line: 41, flags: DIFlagFwdDecl)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1336, file: !1337, line: 1050, baseType: !2029, size: 64, offset: 10688)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1337, line: 42, flags: DIFlagFwdDecl)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1336, file: !1337, line: 1054, baseType: !2032, size: 64, offset: 10752)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1337, line: 55, flags: DIFlagFwdDecl)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1336, file: !1337, line: 1056, baseType: !2035, size: 64, offset: 10816)
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1337, line: 40, flags: DIFlagFwdDecl)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1336, file: !1337, line: 1058, baseType: !2038, size: 64, offset: 10880)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2040, line: 99, size: 704, elements: !2041)
!2040 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2041 = !{!2042, !2043, !2044, !2045, !2046, !2047, !2048, !2067, !2068}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2039, file: !2040, line: 100, baseType: !972, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2039, file: !2040, line: 101, baseType: !403, size: 32, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2039, file: !2040, line: 102, baseType: !403, size: 32, offset: 96)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2039, file: !2040, line: 105, baseType: !445, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2039, file: !2040, line: 107, baseType: !342, size: 16, offset: 128)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2039, file: !2040, line: 109, baseType: !944, size: 128, offset: 192)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2039, file: !2040, line: 110, baseType: !2049, size: 64, offset: 320)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2040, line: 73, size: 448, elements: !2051)
!2051 = !{!2052, !2055, !2056, !2061, !2066}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2050, file: !2040, line: 74, baseType: !2053, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2040, line: 74, flags: DIFlagFwdDecl)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2050, file: !2040, line: 75, baseType: !2038, size: 64, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, scope: !2050, file: !2040, line: 83, baseType: !2057, size: 128, offset: 128)
!2057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2050, file: !2040, line: 83, size: 128, elements: !2058)
!2058 = !{!2059, !2060}
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2057, file: !2040, line: 84, baseType: !414, size: 128)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2057, file: !2040, line: 85, baseType: !1134, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, scope: !2050, file: !2040, line: 87, baseType: !2062, size: 128, offset: 256)
!2062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2050, file: !2040, line: 87, size: 128, elements: !2063)
!2063 = !{!2064, !2065}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2062, file: !2040, line: 88, baseType: !844, size: 128)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2062, file: !2040, line: 89, baseType: !575, size: 128, align: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2050, file: !2040, line: 92, baseType: !7, size: 32, offset: 384)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2039, file: !2040, line: 111, baseType: !840, size: 64, offset: 384)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2039, file: !2040, line: 113, baseType: !2069, size: 256, offset: 448)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2070, line: 102, size: 256, elements: !2071)
!2070 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2071 = !{!2072, !2073, !2074}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2069, file: !2070, line: 103, baseType: !972, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2069, file: !2070, line: 104, baseType: !414, size: 128, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2069, file: !2070, line: 105, baseType: !2075, size: 64, offset: 192)
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2070, line: 21, baseType: !2076)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{null, !2079}
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1336, file: !1337, line: 1061, baseType: !2081, size: 64, offset: 10944)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1337, line: 43, flags: DIFlagFwdDecl)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1336, file: !1337, line: 1064, baseType: !534, size: 64, offset: 11008)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1336, file: !1337, line: 1065, baseType: !2085, size: 64, offset: 11072)
!2085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2086, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1876, line: 14, baseType: !2087)
!2087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1876, line: 12, size: 384, elements: !2088)
!2088 = !{!2089}
!2089 = !DIDerivedType(tag: DW_TAG_member, scope: !2087, file: !1876, line: 13, baseType: !2090, size: 384)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2087, file: !1876, line: 13, size: 384, elements: !2091)
!2091 = !{!2092, !2093, !2094, !2095}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2090, file: !1876, line: 13, baseType: !331, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2090, file: !1876, line: 13, baseType: !331, size: 32, offset: 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2090, file: !1876, line: 13, baseType: !331, size: 32, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2090, file: !1876, line: 13, baseType: !2096, size: 256, offset: 128)
!2096 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2097, line: 32, size: 256, elements: !2098)
!2097 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2098 = !{!2099, !2104, !2117, !2123, !2132, !2152, !2157}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2096, file: !2097, line: 37, baseType: !2100, size: 64)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2096, file: !2097, line: 34, size: 64, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2100, file: !2097, line: 35, baseType: !1573, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2100, file: !2097, line: 36, baseType: !643, size: 32, offset: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2096, file: !2097, line: 45, baseType: !2105, size: 192)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2096, file: !2097, line: 40, size: 192, elements: !2106)
!2106 = !{!2107, !2109, !2110, !2116}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2105, file: !2097, line: 41, baseType: !2108, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !519, line: 95, baseType: !331)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2105, file: !2097, line: 42, baseType: !331, size: 32, offset: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2105, file: !2097, line: 43, baseType: !2111, size: 64, offset: 64)
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2097, line: 11, baseType: !2112)
!2112 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2097, line: 8, size: 64, elements: !2113)
!2113 = !{!2114, !2115}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2112, file: !2097, line: 9, baseType: !331, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2112, file: !2097, line: 10, baseType: !325, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2105, file: !2097, line: 44, baseType: !331, size: 32, offset: 128)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2096, file: !2097, line: 52, baseType: !2118, size: 128)
!2118 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2096, file: !2097, line: 48, size: 128, elements: !2119)
!2119 = !{!2120, !2121, !2122}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2118, file: !2097, line: 49, baseType: !1573, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2118, file: !2097, line: 50, baseType: !643, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2118, file: !2097, line: 51, baseType: !2111, size: 64, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2096, file: !2097, line: 61, baseType: !2124, size: 256)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2096, file: !2097, line: 55, size: 256, elements: !2125)
!2125 = !{!2126, !2127, !2128, !2129, !2131}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2124, file: !2097, line: 56, baseType: !1573, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2124, file: !2097, line: 57, baseType: !643, size: 32, offset: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2124, file: !2097, line: 58, baseType: !331, size: 32, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2124, file: !2097, line: 59, baseType: !2130, size: 64, offset: 128)
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !519, line: 94, baseType: !520)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2124, file: !2097, line: 60, baseType: !2130, size: 64, offset: 192)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2096, file: !2097, line: 95, baseType: !2133, size: 256)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2096, file: !2097, line: 64, size: 256, elements: !2134)
!2134 = !{!2135, !2136}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2133, file: !2097, line: 65, baseType: !325, size: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, scope: !2133, file: !2097, line: 77, baseType: !2137, size: 192, offset: 64)
!2137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2133, file: !2097, line: 77, size: 192, elements: !2138)
!2138 = !{!2139, !2140, !2147}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2137, file: !2097, line: 82, baseType: !1324, size: 16)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2137, file: !2097, line: 88, baseType: !2141, size: 192)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2137, file: !2097, line: 84, size: 192, elements: !2142)
!2142 = !{!2143, !2145, !2146}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2141, file: !2097, line: 85, baseType: !2144, size: 64)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 64, elements: !384)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2141, file: !2097, line: 86, baseType: !325, size: 64, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2141, file: !2097, line: 87, baseType: !325, size: 64, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2137, file: !2097, line: 93, baseType: !2148, size: 96)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2137, file: !2097, line: 90, size: 96, elements: !2149)
!2149 = !{!2150, !2151}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2148, file: !2097, line: 91, baseType: !2144, size: 64)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2148, file: !2097, line: 92, baseType: !328, size: 32, offset: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2096, file: !2097, line: 101, baseType: !2153, size: 128)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2096, file: !2097, line: 98, size: 128, elements: !2154)
!2154 = !{!2155, !2156}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2153, file: !2097, line: 99, baseType: !339, size: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2153, file: !2097, line: 100, baseType: !331, size: 32, offset: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2096, file: !2097, line: 108, baseType: !2158, size: 128)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2096, file: !2097, line: 104, size: 128, elements: !2159)
!2159 = !{!2160, !2161, !2162}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2158, file: !2097, line: 105, baseType: !325, size: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2158, file: !2097, line: 106, baseType: !331, size: 32, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2158, file: !2097, line: 107, baseType: !7, size: 32, offset: 96)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1336, file: !1337, line: 1067, baseType: !1948, offset: 11136)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1336, file: !1337, line: 1099, baseType: !2165, size: 64, offset: 11136)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1337, line: 56, flags: DIFlagFwdDecl)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1336, file: !1337, line: 1103, baseType: !414, size: 128, offset: 11200)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1336, file: !1337, line: 1104, baseType: !2169, size: 64, offset: 11328)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1337, line: 46, flags: DIFlagFwdDecl)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1336, file: !1337, line: 1105, baseType: !1292, size: 192, offset: 11392)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1336, file: !1337, line: 1106, baseType: !7, size: 32, offset: 11584)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1336, file: !1337, line: 1109, baseType: !2174, size: 128, offset: 11648)
!2174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 128, elements: !1682)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1337, line: 51, flags: DIFlagFwdDecl)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1336, file: !1337, line: 1110, baseType: !1292, size: 192, offset: 11776)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1336, file: !1337, line: 1111, baseType: !414, size: 128, offset: 11968)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1336, file: !1337, line: 1173, baseType: !2180, size: 64, offset: 12096)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2182, line: 62, size: 256, align: 256, elements: !2183)
!2182 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2183 = !{!2184, !2185, !2186, !2191}
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2181, file: !2182, line: 75, baseType: !328, size: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2181, file: !2182, line: 90, baseType: !328, size: 32, offset: 32)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2181, file: !2182, line: 124, baseType: !2187, size: 64, offset: 64)
!2187 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2181, file: !2182, line: 109, size: 64, elements: !2188)
!2188 = !{!2189, !2190}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2187, file: !2182, line: 110, baseType: !336, size: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2187, file: !2182, line: 112, baseType: !336, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2181, file: !2182, line: 144, baseType: !328, size: 32, offset: 128)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1336, file: !1337, line: 1174, baseType: !326, size: 32, offset: 12160)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1336, file: !1337, line: 1179, baseType: !534, size: 64, offset: 12224)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1336, file: !1337, line: 1182, baseType: !2195, size: 128, offset: 12288)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1270, line: 76, size: 128, elements: !2196)
!2196 = !{!2197, !2202, !2203}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2195, file: !1270, line: 85, baseType: !2198, size: 64)
!2198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2199, line: 7, size: 64, elements: !2200)
!2199 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2200 = !{!2201}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2198, file: !2199, line: 12, baseType: !1477, size: 64)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2195, file: !1270, line: 88, baseType: !692, size: 8, offset: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2195, file: !1270, line: 95, baseType: !692, size: 8, offset: 72)
!2204 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !1337, line: 1184, baseType: !2205, size: 128, offset: 12416)
!2205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1336, file: !1337, line: 1184, size: 128, elements: !2206)
!2206 = !{!2207, !2208}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2205, file: !1337, line: 1185, baseType: !398, size: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2205, file: !1337, line: 1186, baseType: !575, size: 128, align: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1336, file: !1337, line: 1190, baseType: !2210, size: 64, offset: 12544)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1337, line: 53, flags: DIFlagFwdDecl)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1336, file: !1337, line: 1192, baseType: !2213, size: 128, offset: 12608)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1270, line: 64, size: 128, elements: !2214)
!2214 = !{!2215, !2216, !2217}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2213, file: !1270, line: 65, baseType: !926, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2213, file: !1270, line: 67, baseType: !328, size: 32, offset: 64)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2213, file: !1270, line: 68, baseType: !328, size: 32, offset: 96)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1336, file: !1337, line: 1206, baseType: !331, size: 32, offset: 12736)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1336, file: !1337, line: 1207, baseType: !331, size: 32, offset: 12768)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1336, file: !1337, line: 1209, baseType: !534, size: 64, offset: 12800)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1336, file: !1337, line: 1219, baseType: !335, size: 64, offset: 12864)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1336, file: !1337, line: 1220, baseType: !335, size: 64, offset: 12928)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1336, file: !1337, line: 1317, baseType: !331, size: 32, offset: 12992)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1336, file: !1337, line: 1319, baseType: !1335, size: 64, offset: 13056)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1336, file: !1337, line: 1322, baseType: !2226, size: 64, offset: 13120)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2228, line: 56, size: 512, elements: !2229)
!2228 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2229 = !{!2230, !2231, !2232, !2233, !2234, !2235, !2236, !2238}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2227, file: !2228, line: 57, baseType: !2226, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2227, file: !2228, line: 58, baseType: !325, size: 64, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2227, file: !2228, line: 59, baseType: !534, size: 64, offset: 128)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2227, file: !2228, line: 60, baseType: !534, size: 64, offset: 192)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2227, file: !2228, line: 61, baseType: !1021, size: 64, offset: 256)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2227, file: !2228, line: 62, baseType: !7, size: 32, offset: 320)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2227, file: !2228, line: 63, baseType: !2237, size: 64, offset: 384)
!2237 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !324, line: 153, baseType: !335)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2227, file: !2228, line: 64, baseType: !2239, size: 64, offset: 448)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1336, file: !1337, line: 1326, baseType: !398, size: 32, offset: 13184)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1336, file: !1337, line: 1342, baseType: !325, size: 64, offset: 13248)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1336, file: !1337, line: 1343, baseType: !336, size: 64, offset: 13312)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1336, file: !1337, line: 1344, baseType: !335, size: 64, offset: 13376)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1336, file: !1337, line: 1345, baseType: !336, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1336, file: !1337, line: 1346, baseType: !336, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1336, file: !1337, line: 1347, baseType: !336, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1336, file: !1337, line: 1348, baseType: !575, size: 128, align: 64, offset: 13504)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1336, file: !1337, line: 1358, baseType: !2250, size: 34816, offset: 13824)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2251, line: 485, size: 34816, elements: !2252)
!2251 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2252 = !{!2253, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2282, !2283, !2284, !2285, !2286, !2287, !2290, !2291, !2292}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2250, file: !2251, line: 487, baseType: !2254, size: 192)
!2254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2255, size: 192, elements: !487)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2256, line: 16, size: 64, elements: !2257)
!2256 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2257 = !{!2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2255, file: !2256, line: 17, baseType: !340, size: 16)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2255, file: !2256, line: 18, baseType: !340, size: 16, offset: 16)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2255, file: !2256, line: 19, baseType: !340, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2255, file: !2256, line: 19, baseType: !340, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2255, file: !2256, line: 19, baseType: !340, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2255, file: !2256, line: 19, baseType: !340, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2255, file: !2256, line: 19, baseType: !340, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2255, file: !2256, line: 20, baseType: !340, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2255, file: !2256, line: 20, baseType: !340, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2255, file: !2256, line: 20, baseType: !340, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2255, file: !2256, line: 20, baseType: !340, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2255, file: !2256, line: 20, baseType: !340, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2255, file: !2256, line: 20, baseType: !340, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2250, file: !2251, line: 491, baseType: !534, size: 64, offset: 192)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2250, file: !2251, line: 495, baseType: !342, size: 16, offset: 256)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2250, file: !2251, line: 496, baseType: !342, size: 16, offset: 272)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2250, file: !2251, line: 497, baseType: !342, size: 16, offset: 288)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2250, file: !2251, line: 498, baseType: !342, size: 16, offset: 304)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2250, file: !2251, line: 502, baseType: !534, size: 64, offset: 320)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2250, file: !2251, line: 503, baseType: !534, size: 64, offset: 384)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2250, file: !2251, line: 514, baseType: !2279, size: 256, offset: 448)
!2279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2280, size: 256, elements: !1274)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2281, size: 64)
!2281 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2251, line: 483, flags: DIFlagFwdDecl)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2250, file: !2251, line: 516, baseType: !534, size: 64, offset: 704)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2250, file: !2251, line: 518, baseType: !534, size: 64, offset: 768)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2250, file: !2251, line: 520, baseType: !534, size: 64, offset: 832)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2250, file: !2251, line: 521, baseType: !534, size: 64, offset: 896)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2250, file: !2251, line: 522, baseType: !534, size: 64, offset: 960)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2250, file: !2251, line: 528, baseType: !2288, size: 64, offset: 1024)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2251, line: 10, flags: DIFlagFwdDecl)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2250, file: !2251, line: 535, baseType: !534, size: 64, offset: 1088)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2250, file: !2251, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2250, file: !2251, line: 540, baseType: !2293, size: 33280, offset: 1536)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2294, line: 317, size: 33280, elements: !2295)
!2294 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2295 = !{!2296, !2297, !2298}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2293, file: !2294, line: 330, baseType: !7, size: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2293, file: !2294, line: 337, baseType: !534, size: 64, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2293, file: !2294, line: 348, baseType: !2299, size: 32768, offset: 512)
!2299 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2294, line: 304, size: 32768, elements: !2300)
!2300 = !{!2301, !2316, !2355, !2405, !2418}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2299, file: !2294, line: 305, baseType: !2302, size: 896)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2294, line: 12, size: 896, elements: !2303)
!2303 = !{!2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2315}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2302, file: !2294, line: 13, baseType: !326, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2302, file: !2294, line: 14, baseType: !326, size: 32, offset: 32)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2302, file: !2294, line: 15, baseType: !326, size: 32, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2302, file: !2294, line: 16, baseType: !326, size: 32, offset: 96)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2302, file: !2294, line: 17, baseType: !326, size: 32, offset: 128)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2302, file: !2294, line: 18, baseType: !326, size: 32, offset: 160)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2302, file: !2294, line: 19, baseType: !326, size: 32, offset: 192)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2302, file: !2294, line: 22, baseType: !2312, size: 640, offset: 224)
!2312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 640, elements: !2313)
!2313 = !{!2314}
!2314 = !DISubrange(count: 20)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2302, file: !2294, line: 25, baseType: !326, size: 32, offset: 864)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2299, file: !2294, line: 306, baseType: !2317, size: 4096, align: 128)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2294, line: 34, size: 4096, align: 128, elements: !2318)
!2318 = !{!2319, !2320, !2321, !2322, !2323, !2338, !2339, !2340, !2344, !2346, !2350}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2317, file: !2294, line: 35, baseType: !340, size: 16)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2317, file: !2294, line: 36, baseType: !340, size: 16, offset: 16)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2317, file: !2294, line: 37, baseType: !340, size: 16, offset: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2317, file: !2294, line: 38, baseType: !340, size: 16, offset: 48)
!2323 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !2294, line: 39, baseType: !2324, size: 128, offset: 64)
!2324 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !2294, line: 39, size: 128, elements: !2325)
!2325 = !{!2326, !2331}
!2326 = !DIDerivedType(tag: DW_TAG_member, scope: !2324, file: !2294, line: 40, baseType: !2327, size: 128)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2324, file: !2294, line: 40, size: 128, elements: !2328)
!2328 = !{!2329, !2330}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2327, file: !2294, line: 41, baseType: !335, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2327, file: !2294, line: 42, baseType: !335, size: 64, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, scope: !2324, file: !2294, line: 44, baseType: !2332, size: 128)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2324, file: !2294, line: 44, size: 128, elements: !2333)
!2333 = !{!2334, !2335, !2336, !2337}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2332, file: !2294, line: 45, baseType: !326, size: 32)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2332, file: !2294, line: 46, baseType: !326, size: 32, offset: 32)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2332, file: !2294, line: 47, baseType: !326, size: 32, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2332, file: !2294, line: 48, baseType: !326, size: 32, offset: 96)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2317, file: !2294, line: 51, baseType: !326, size: 32, offset: 192)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2317, file: !2294, line: 52, baseType: !326, size: 32, offset: 224)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2317, file: !2294, line: 55, baseType: !2341, size: 1024, offset: 256)
!2341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 1024, elements: !2342)
!2342 = !{!2343}
!2343 = !DISubrange(count: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2317, file: !2294, line: 58, baseType: !2345, size: 2048, offset: 1280)
!2345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 2048, elements: !491)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2317, file: !2294, line: 60, baseType: !2347, size: 384, offset: 3328)
!2347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 384, elements: !2348)
!2348 = !{!2349}
!2349 = !DISubrange(count: 12)
!2350 = !DIDerivedType(tag: DW_TAG_member, scope: !2317, file: !2294, line: 62, baseType: !2351, size: 384, offset: 3712)
!2351 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2317, file: !2294, line: 62, size: 384, elements: !2352)
!2352 = !{!2353, !2354}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2351, file: !2294, line: 63, baseType: !2347, size: 384)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2351, file: !2294, line: 64, baseType: !2347, size: 384)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2299, file: !2294, line: 307, baseType: !2356, size: 1088)
!2356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2294, line: 79, size: 1088, elements: !2357)
!2357 = !{!2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2404}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2356, file: !2294, line: 80, baseType: !326, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2356, file: !2294, line: 81, baseType: !326, size: 32, offset: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2356, file: !2294, line: 82, baseType: !326, size: 32, offset: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2356, file: !2294, line: 83, baseType: !326, size: 32, offset: 96)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2356, file: !2294, line: 84, baseType: !326, size: 32, offset: 128)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2356, file: !2294, line: 85, baseType: !326, size: 32, offset: 160)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2356, file: !2294, line: 86, baseType: !326, size: 32, offset: 192)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2356, file: !2294, line: 88, baseType: !2312, size: 640, offset: 224)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2356, file: !2294, line: 89, baseType: !332, size: 8, offset: 864)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2356, file: !2294, line: 90, baseType: !332, size: 8, offset: 872)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2356, file: !2294, line: 91, baseType: !332, size: 8, offset: 880)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2356, file: !2294, line: 92, baseType: !332, size: 8, offset: 888)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2356, file: !2294, line: 93, baseType: !332, size: 8, offset: 896)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2356, file: !2294, line: 94, baseType: !332, size: 8, offset: 904)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2356, file: !2294, line: 95, baseType: !2373, size: 64, offset: 960)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2375, line: 11, size: 128, elements: !2376)
!2375 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2376 = !{!2377, !2378}
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2374, file: !2375, line: 12, baseType: !339, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2374, file: !2375, line: 13, baseType: !2379, size: 64, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2381, line: 56, size: 1344, elements: !2382)
!2381 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2382 = !{!2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2380, file: !2381, line: 61, baseType: !534, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2380, file: !2381, line: 62, baseType: !534, size: 64, offset: 64)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2380, file: !2381, line: 63, baseType: !534, size: 64, offset: 128)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2380, file: !2381, line: 64, baseType: !534, size: 64, offset: 192)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2380, file: !2381, line: 65, baseType: !534, size: 64, offset: 256)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2380, file: !2381, line: 66, baseType: !534, size: 64, offset: 320)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2380, file: !2381, line: 68, baseType: !534, size: 64, offset: 384)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2380, file: !2381, line: 69, baseType: !534, size: 64, offset: 448)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2380, file: !2381, line: 70, baseType: !534, size: 64, offset: 512)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2380, file: !2381, line: 71, baseType: !534, size: 64, offset: 576)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2380, file: !2381, line: 72, baseType: !534, size: 64, offset: 640)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2380, file: !2381, line: 73, baseType: !534, size: 64, offset: 704)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2380, file: !2381, line: 74, baseType: !534, size: 64, offset: 768)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2380, file: !2381, line: 75, baseType: !534, size: 64, offset: 832)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2380, file: !2381, line: 76, baseType: !534, size: 64, offset: 896)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2380, file: !2381, line: 81, baseType: !534, size: 64, offset: 960)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2380, file: !2381, line: 83, baseType: !534, size: 64, offset: 1024)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2380, file: !2381, line: 84, baseType: !534, size: 64, offset: 1088)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2380, file: !2381, line: 85, baseType: !534, size: 64, offset: 1152)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2380, file: !2381, line: 86, baseType: !534, size: 64, offset: 1216)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2380, file: !2381, line: 87, baseType: !534, size: 64, offset: 1280)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2356, file: !2294, line: 96, baseType: !326, size: 32, offset: 1024)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2299, file: !2294, line: 308, baseType: !2406, size: 4608, align: 512)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2294, line: 289, size: 4608, align: 512, elements: !2407)
!2407 = !{!2408, !2409, !2416}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2406, file: !2294, line: 290, baseType: !2317, size: 4096, align: 128)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2406, file: !2294, line: 291, baseType: !2410, size: 512, offset: 4096)
!2410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2294, line: 268, size: 512, elements: !2411)
!2411 = !{!2412, !2413, !2414}
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2410, file: !2294, line: 269, baseType: !335, size: 64)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2410, file: !2294, line: 270, baseType: !335, size: 64, offset: 64)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2410, file: !2294, line: 271, baseType: !2415, size: 384, offset: 128)
!2415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 384, elements: !424)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2406, file: !2294, line: 292, baseType: !2417, offset: 4608)
!2417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, elements: !1833)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2299, file: !2294, line: 309, baseType: !2419, size: 32768)
!2419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 32768, elements: !2420)
!2420 = !{!2421}
!2421 = !DISubrange(count: 4096)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1332, file: !928, line: 378, baseType: !2423, size: 64, offset: 64)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1328, file: !928, line: 384, baseType: !1615, size: 192, offset: 192)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1177, file: !928, line: 500, baseType: !445, offset: 6656)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1177, file: !928, line: 501, baseType: !2427, size: 64, offset: 6656)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !928, line: 387, flags: DIFlagFwdDecl)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1177, file: !928, line: 516, baseType: !1823, size: 64, offset: 6720)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1177, file: !928, line: 519, baseType: !562, size: 64, offset: 6784)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1177, file: !928, line: 521, baseType: !2432, size: 64, offset: 6848)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2433 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !928, line: 521, flags: DIFlagFwdDecl)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1177, file: !928, line: 545, baseType: !403, size: 32, offset: 6912)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1177, file: !928, line: 548, baseType: !692, size: 8, offset: 6944)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1177, file: !928, line: 550, baseType: !2437, offset: 6952)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2438, line: 142, elements: !459)
!2438 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1177, file: !928, line: 554, baseType: !2069, size: 256, offset: 6976)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1177, file: !928, line: 557, baseType: !326, size: 32, offset: 7232)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1174, file: !928, line: 565, baseType: !2442, offset: 7296)
!2442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, elements: !2443)
!2443 = !{!2444}
!2444 = !DISubrange(count: -1)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1170, file: !928, line: 151, baseType: !403, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1163, file: !928, line: 156, baseType: !445, offset: 256)
!2447 = !DIDerivedType(tag: DW_TAG_member, scope: !932, file: !928, line: 159, baseType: !2448, size: 128)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !932, file: !928, line: 159, size: 128, elements: !2449)
!2449 = !{!2450, !2453}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2448, file: !928, line: 161, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !928, line: 161, flags: DIFlagFwdDecl)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2448, file: !928, line: 162, baseType: !325, size: 64, offset: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !932, file: !928, line: 176, baseType: !575, size: 128, align: 64)
!2455 = !DIDerivedType(tag: DW_TAG_member, scope: !927, file: !928, line: 179, baseType: !2456, size: 32, offset: 384)
!2456 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !927, file: !928, line: 179, size: 32, elements: !2457)
!2457 = !{!2458, !2459, !2460, !2461}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2456, file: !928, line: 184, baseType: !403, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2456, file: !928, line: 192, baseType: !7, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2456, file: !928, line: 194, baseType: !7, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2456, file: !928, line: 195, baseType: !331, size: 32)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !927, file: !928, line: 199, baseType: !403, size: 32, offset: 416)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !862, file: !208, line: 1964, baseType: !2464, size: 64, offset: 1344)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{!339, !801, !2467}
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2469, line: 12, size: 256, elements: !2470)
!2469 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2470 = !{!2471, !2472, !2473, !2474, !2475}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2468, file: !2469, line: 13, baseType: !323, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2468, file: !2469, line: 16, baseType: !331, size: 32, offset: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2468, file: !2469, line: 23, baseType: !534, size: 64, offset: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2468, file: !2469, line: 30, baseType: !534, size: 64, offset: 128)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2468, file: !2469, line: 33, baseType: !2476, size: 64, offset: 192)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !928, line: 27, flags: DIFlagFwdDecl)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !862, file: !208, line: 1966, baseType: !2464, size: 64, offset: 1408)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !802, file: !208, line: 1424, baseType: !2480, size: 64, offset: 448)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2482)
!2482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !202, line: 322, size: 704, elements: !2483)
!2483 = !{!2484, !2530, !2534, !2538, !2539, !2540, !2541, !2542, !2547, !2552, !2556}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2482, file: !202, line: 323, baseType: !2485, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{!331, !2488}
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !202, line: 294, size: 1600, elements: !2490)
!2490 = !{!2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2515, !2516, !2517}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2489, file: !202, line: 295, baseType: !844, size: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2489, file: !202, line: 296, baseType: !414, size: 128, offset: 128)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2489, file: !202, line: 297, baseType: !414, size: 128, offset: 256)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2489, file: !202, line: 298, baseType: !414, size: 128, offset: 384)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2489, file: !202, line: 299, baseType: !1292, size: 192, offset: 512)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2489, file: !202, line: 300, baseType: !445, offset: 704)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2489, file: !202, line: 301, baseType: !403, size: 32, offset: 704)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2489, file: !202, line: 302, baseType: !801, size: 64, offset: 768)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2489, file: !202, line: 303, baseType: !2500, size: 64, offset: 832)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !202, line: 68, size: 64, elements: !2501)
!2501 = !{!2502, !2514}
!2502 = !DIDerivedType(tag: DW_TAG_member, scope: !2500, file: !202, line: 69, baseType: !2503, size: 32)
!2503 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2500, file: !202, line: 69, size: 32, elements: !2504)
!2504 = !{!2505, !2506, !2507}
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2503, file: !202, line: 70, baseType: !637, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2503, file: !202, line: 71, baseType: !645, size: 32)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2503, file: !202, line: 72, baseType: !2508, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2509, line: 24, baseType: !2510)
!2509 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2509, line: 22, size: 32, elements: !2511)
!2511 = !{!2512}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2510, file: !2509, line: 23, baseType: !2513, size: 32)
!2513 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2509, line: 20, baseType: !643)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2500, file: !202, line: 74, baseType: !201, size: 32, offset: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2489, file: !202, line: 304, baseType: !733, size: 64, offset: 896)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2489, file: !202, line: 305, baseType: !534, size: 64, offset: 960)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2489, file: !202, line: 306, baseType: !2518, size: 576, offset: 1024)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !202, line: 205, size: 576, elements: !2519)
!2519 = !{!2520, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2518, file: !202, line: 206, baseType: !2521, size: 64)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !202, line: 66, baseType: !735)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2518, file: !202, line: 207, baseType: !2521, size: 64, offset: 64)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2518, file: !202, line: 208, baseType: !2521, size: 64, offset: 128)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2518, file: !202, line: 209, baseType: !2521, size: 64, offset: 192)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2518, file: !202, line: 210, baseType: !2521, size: 64, offset: 256)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2518, file: !202, line: 211, baseType: !2521, size: 64, offset: 320)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2518, file: !202, line: 212, baseType: !2521, size: 64, offset: 384)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2518, file: !202, line: 213, baseType: !741, size: 64, offset: 448)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2518, file: !202, line: 214, baseType: !741, size: 64, offset: 512)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2482, file: !202, line: 324, baseType: !2531, size: 64, offset: 64)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!2488, !801, !331}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2482, file: !202, line: 325, baseType: !2535, size: 64, offset: 128)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 64)
!2536 = !DISubroutineType(types: !2537)
!2537 = !{null, !2488}
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2482, file: !202, line: 326, baseType: !2485, size: 64, offset: 192)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2482, file: !202, line: 327, baseType: !2485, size: 64, offset: 256)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2482, file: !202, line: 328, baseType: !2485, size: 64, offset: 320)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2482, file: !202, line: 329, baseType: !890, size: 64, offset: 384)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2482, file: !202, line: 332, baseType: !2543, size: 64, offset: 448)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!2546, !631}
!2546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2482, file: !202, line: 333, baseType: !2548, size: 64, offset: 512)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 64)
!2549 = !DISubroutineType(types: !2550)
!2550 = !{!331, !631, !2551}
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2482, file: !202, line: 335, baseType: !2553, size: 64, offset: 576)
!2553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2554, size: 64)
!2554 = !DISubroutineType(types: !2555)
!2555 = !{!331, !631, !2546}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2482, file: !202, line: 337, baseType: !2557, size: 64, offset: 640)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{!331, !801, !2560}
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !802, file: !208, line: 1425, baseType: !2562, size: 64, offset: 512)
!2562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 64)
!2563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2564)
!2564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !202, line: 428, size: 704, elements: !2565)
!2565 = !{!2566, !2570, !2571, !2575, !2576, !2577, !2592, !2615, !2619, !2620, !2643}
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2564, file: !202, line: 429, baseType: !2567, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{!331, !801, !331, !331, !751}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2564, file: !202, line: 430, baseType: !890, size: 64, offset: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2564, file: !202, line: 431, baseType: !2572, size: 64, offset: 128)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64)
!2573 = !DISubroutineType(types: !2574)
!2574 = !{!331, !801, !7}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2564, file: !202, line: 432, baseType: !2572, size: 64, offset: 192)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2564, file: !202, line: 433, baseType: !890, size: 64, offset: 256)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2564, file: !202, line: 434, baseType: !2578, size: 64, offset: 320)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{!331, !801, !331, !2581}
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !202, line: 415, size: 256, elements: !2583)
!2583 = !{!2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2582, file: !202, line: 416, baseType: !331, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2582, file: !202, line: 417, baseType: !7, size: 32, offset: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2582, file: !202, line: 418, baseType: !7, size: 32, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2582, file: !202, line: 420, baseType: !7, size: 32, offset: 96)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2582, file: !202, line: 421, baseType: !7, size: 32, offset: 128)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2582, file: !202, line: 422, baseType: !7, size: 32, offset: 160)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2582, file: !202, line: 423, baseType: !7, size: 32, offset: 192)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2582, file: !202, line: 424, baseType: !7, size: 32, offset: 224)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2564, file: !202, line: 435, baseType: !2593, size: 64, offset: 384)
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64)
!2594 = !DISubroutineType(types: !2595)
!2595 = !{!331, !801, !2500, !2596}
!2596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !202, line: 343, size: 960, elements: !2598)
!2598 = !{!2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2597, file: !202, line: 344, baseType: !331, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2597, file: !202, line: 345, baseType: !335, size: 64, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2597, file: !202, line: 346, baseType: !335, size: 64, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2597, file: !202, line: 347, baseType: !335, size: 64, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2597, file: !202, line: 348, baseType: !335, size: 64, offset: 256)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2597, file: !202, line: 349, baseType: !335, size: 64, offset: 320)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2597, file: !202, line: 350, baseType: !335, size: 64, offset: 384)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2597, file: !202, line: 351, baseType: !978, size: 64, offset: 448)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2597, file: !202, line: 353, baseType: !978, size: 64, offset: 512)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2597, file: !202, line: 354, baseType: !331, size: 32, offset: 576)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2597, file: !202, line: 355, baseType: !331, size: 32, offset: 608)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2597, file: !202, line: 356, baseType: !335, size: 64, offset: 640)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2597, file: !202, line: 357, baseType: !335, size: 64, offset: 704)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2597, file: !202, line: 358, baseType: !335, size: 64, offset: 768)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2597, file: !202, line: 359, baseType: !978, size: 64, offset: 832)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2597, file: !202, line: 360, baseType: !331, size: 32, offset: 896)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2564, file: !202, line: 436, baseType: !2616, size: 64, offset: 448)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = !DISubroutineType(types: !2618)
!2618 = !{!331, !801, !2560, !2596}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2564, file: !202, line: 438, baseType: !2593, size: 64, offset: 512)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2564, file: !202, line: 439, baseType: !2621, size: 64, offset: 576)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2622, size: 64)
!2622 = !DISubroutineType(types: !2623)
!2623 = !{!331, !801, !2624}
!2624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2625, size: 64)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !202, line: 409, size: 1408, elements: !2626)
!2626 = !{!2627, !2628}
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2625, file: !202, line: 410, baseType: !7, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2625, file: !202, line: 411, baseType: !2629, size: 1344, offset: 64)
!2629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2630, size: 1344, elements: !487)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !202, line: 395, size: 448, elements: !2631)
!2631 = !{!2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2642}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2630, file: !202, line: 396, baseType: !7, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2630, file: !202, line: 397, baseType: !7, size: 32, offset: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2630, file: !202, line: 399, baseType: !7, size: 32, offset: 64)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2630, file: !202, line: 400, baseType: !7, size: 32, offset: 96)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2630, file: !202, line: 401, baseType: !7, size: 32, offset: 128)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2630, file: !202, line: 402, baseType: !7, size: 32, offset: 160)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2630, file: !202, line: 403, baseType: !7, size: 32, offset: 192)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2630, file: !202, line: 404, baseType: !337, size: 64, offset: 256)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2630, file: !202, line: 405, baseType: !2641, size: 64, offset: 320)
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !324, line: 126, baseType: !335)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2630, file: !202, line: 406, baseType: !2641, size: 64, offset: 384)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2564, file: !202, line: 440, baseType: !2572, size: 64, offset: 640)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !802, file: !208, line: 1426, baseType: !2645, size: 64, offset: 576)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2647)
!2647 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !208, line: 49, flags: DIFlagFwdDecl)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !802, file: !208, line: 1427, baseType: !534, size: 64, offset: 640)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !802, file: !208, line: 1428, baseType: !534, size: 64, offset: 704)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !802, file: !208, line: 1429, baseType: !534, size: 64, offset: 768)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !802, file: !208, line: 1430, baseType: !592, size: 64, offset: 832)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !802, file: !208, line: 1431, baseType: !968, size: 256, offset: 896)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !802, file: !208, line: 1432, baseType: !331, size: 32, offset: 1152)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !802, file: !208, line: 1433, baseType: !403, size: 32, offset: 1184)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !802, file: !208, line: 1437, baseType: !2656, size: 64, offset: 1216)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2659)
!2659 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !208, line: 1437, flags: DIFlagFwdDecl)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !802, file: !208, line: 1449, baseType: !2661, size: 64, offset: 1280)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !608, line: 34, size: 64, elements: !2662)
!2662 = !{!2663}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2661, file: !608, line: 35, baseType: !611, size: 64)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !802, file: !208, line: 1450, baseType: !414, size: 128, offset: 1344)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !802, file: !208, line: 1451, baseType: !2666, size: 64, offset: 1472)
!2666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2667, size: 64)
!2667 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !208, line: 699, flags: DIFlagFwdDecl)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !802, file: !208, line: 1452, baseType: !2035, size: 64, offset: 1536)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !802, file: !208, line: 1453, baseType: !2670, size: 64, offset: 1600)
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 64)
!2671 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !208, line: 1453, flags: DIFlagFwdDecl)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !802, file: !208, line: 1454, baseType: !844, size: 128, offset: 1664)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !802, file: !208, line: 1455, baseType: !7, size: 32, offset: 1792)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !802, file: !208, line: 1456, baseType: !2675, size: 2432, offset: 1856)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !202, line: 518, size: 2432, elements: !2676)
!2676 = !{!2677, !2678, !2679, !2681, !2713}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2675, file: !202, line: 519, baseType: !7, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2675, file: !202, line: 520, baseType: !968, size: 256, offset: 64)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2675, file: !202, line: 521, baseType: !2680, size: 192, offset: 320)
!2680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !631, size: 192, elements: !487)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2675, file: !202, line: 522, baseType: !2682, size: 1728, offset: 512)
!2682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2683, size: 1728, elements: !487)
!2683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !202, line: 222, size: 576, elements: !2684)
!2684 = !{!2685, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2683, file: !202, line: 223, baseType: !2686, size: 64)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !202, line: 443, size: 256, elements: !2688)
!2688 = !{!2689, !2690, !2703, !2704}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2687, file: !202, line: 444, baseType: !331, size: 32)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2687, file: !202, line: 445, baseType: !2691, size: 64, offset: 64)
!2691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2692, size: 64)
!2692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2693)
!2693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !202, line: 310, size: 512, elements: !2694)
!2694 = !{!2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2693, file: !202, line: 311, baseType: !890, size: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2693, file: !202, line: 312, baseType: !890, size: 64, offset: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2693, file: !202, line: 313, baseType: !890, size: 64, offset: 128)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2693, file: !202, line: 314, baseType: !890, size: 64, offset: 192)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2693, file: !202, line: 315, baseType: !2485, size: 64, offset: 256)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2693, file: !202, line: 316, baseType: !2485, size: 64, offset: 320)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2693, file: !202, line: 317, baseType: !2485, size: 64, offset: 384)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2693, file: !202, line: 318, baseType: !2557, size: 64, offset: 448)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2687, file: !202, line: 446, baseType: !835, size: 64, offset: 128)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2687, file: !202, line: 447, baseType: !2686, size: 64, offset: 192)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2683, file: !202, line: 224, baseType: !331, size: 32, offset: 64)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2683, file: !202, line: 226, baseType: !414, size: 128, offset: 128)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2683, file: !202, line: 227, baseType: !534, size: 64, offset: 256)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2683, file: !202, line: 228, baseType: !7, size: 32, offset: 320)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2683, file: !202, line: 229, baseType: !7, size: 32, offset: 352)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2683, file: !202, line: 230, baseType: !2521, size: 64, offset: 384)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2683, file: !202, line: 231, baseType: !2521, size: 64, offset: 448)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2683, file: !202, line: 232, baseType: !325, size: 64, offset: 512)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2675, file: !202, line: 523, baseType: !2714, size: 192, offset: 2240)
!2714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2691, size: 192, elements: !487)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !802, file: !208, line: 1458, baseType: !2716, size: 2112, offset: 4288)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !208, line: 1410, size: 2112, elements: !2717)
!2717 = !{!2718, !2719, !2720}
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2716, file: !208, line: 1411, baseType: !331, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2716, file: !208, line: 1412, baseType: !1594, size: 128, offset: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2716, file: !208, line: 1413, baseType: !2721, size: 1920, offset: 192)
!2721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2722, size: 1920, elements: !487)
!2722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2723, line: 12, size: 640, elements: !2724)
!2723 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2724 = !{!2725, !2733, !2735, !2740, !2741}
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2722, file: !2723, line: 13, baseType: !2726, size: 320)
!2726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2727, line: 17, size: 320, elements: !2728)
!2727 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2728 = !{!2729, !2730, !2731, !2732}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2726, file: !2727, line: 18, baseType: !331, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2726, file: !2727, line: 19, baseType: !331, size: 32, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2726, file: !2727, line: 20, baseType: !1594, size: 128, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2726, file: !2727, line: 22, baseType: !575, size: 128, align: 64, offset: 192)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2722, file: !2723, line: 14, baseType: !2734, size: 64, offset: 320)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2722, file: !2723, line: 15, baseType: !2736, size: 64, offset: 384)
!2736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2737, line: 16, size: 64, elements: !2738)
!2737 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2738 = !{!2739}
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2736, file: !2737, line: 17, baseType: !1335, size: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2722, file: !2723, line: 16, baseType: !1594, size: 128, offset: 448)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2722, file: !2723, line: 17, baseType: !403, size: 32, offset: 576)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !802, file: !208, line: 1465, baseType: !325, size: 64, offset: 6400)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !802, file: !208, line: 1468, baseType: !326, size: 32, offset: 6464)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !802, file: !208, line: 1470, baseType: !741, size: 64, offset: 6528)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !802, file: !208, line: 1471, baseType: !741, size: 64, offset: 6592)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !802, file: !208, line: 1473, baseType: !328, size: 32, offset: 6656)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !802, file: !208, line: 1474, baseType: !2748, size: 64, offset: 6720)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !208, line: 603, flags: DIFlagFwdDecl)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !802, file: !208, line: 1477, baseType: !2751, size: 256, offset: 6784)
!2751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 256, elements: !2342)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !802, file: !208, line: 1478, baseType: !2753, size: 128, offset: 7040)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2754, line: 18, baseType: !2755)
!2754 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2754, line: 16, size: 128, elements: !2756)
!2756 = !{!2757}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2755, file: !2754, line: 17, baseType: !2758, size: 128)
!2758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 128, elements: !1845)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !802, file: !208, line: 1480, baseType: !7, size: 32, offset: 7168)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !802, file: !208, line: 1481, baseType: !2761, size: 32, offset: 7200)
!2761 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !324, line: 150, baseType: !7)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !802, file: !208, line: 1487, baseType: !1292, size: 192, offset: 7232)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !802, file: !208, line: 1493, baseType: !421, size: 64, offset: 7424)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !802, file: !208, line: 1495, baseType: !2765, size: 64, offset: 7488)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2767)
!2767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !590, line: 135, size: 1024, align: 512, elements: !2768)
!2768 = !{!2769, !2773, !2774, !2781, !2787, !2791, !2795, !2799, !2800, !2804, !2808, !2813, !2817}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2767, file: !590, line: 136, baseType: !2770, size: 64)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DISubroutineType(types: !2772)
!2772 = !{!331, !592, !7}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2767, file: !590, line: 137, baseType: !2770, size: 64, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2767, file: !590, line: 138, baseType: !2775, size: 64, offset: 128)
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 64)
!2776 = !DISubroutineType(types: !2777)
!2777 = !{!331, !2778, !2780}
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !593)
!2780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2767, file: !590, line: 139, baseType: !2782, size: 64, offset: 192)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!331, !2778, !7, !421, !2785}
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !616)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2767, file: !590, line: 141, baseType: !2788, size: 64, offset: 256)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = !DISubroutineType(types: !2790)
!2790 = !{!331, !2778}
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2767, file: !590, line: 142, baseType: !2792, size: 64, offset: 320)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{!331, !592}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2767, file: !590, line: 143, baseType: !2796, size: 64, offset: 384)
!2796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2797, size: 64)
!2797 = !DISubroutineType(types: !2798)
!2798 = !{null, !592}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2767, file: !590, line: 144, baseType: !2796, size: 64, offset: 448)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2767, file: !590, line: 145, baseType: !2801, size: 64, offset: 512)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 64)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{null, !592, !631}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2767, file: !590, line: 146, baseType: !2805, size: 64, offset: 576)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = !DISubroutineType(types: !2807)
!2807 = !{!486, !592, !486, !331}
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2767, file: !590, line: 147, baseType: !2809, size: 64, offset: 640)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = !DISubroutineType(types: !2811)
!2811 = !{!588, !2812}
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2767, file: !590, line: 148, baseType: !2814, size: 64, offset: 704)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = !DISubroutineType(types: !2816)
!2816 = !{!331, !751, !692}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2767, file: !590, line: 149, baseType: !2818, size: 64, offset: 768)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DISubroutineType(types: !2820)
!2820 = !{!592, !592, !2821}
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2822, size: 64)
!2822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !632)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !802, file: !208, line: 1500, baseType: !331, size: 32, offset: 7552)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !802, file: !208, line: 1502, baseType: !2825, size: 448, offset: 7616)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2469, line: 60, size: 448, elements: !2826)
!2826 = !{!2827, !2832, !2833, !2834, !2835, !2836, !2837}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2825, file: !2469, line: 61, baseType: !2828, size: 64)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = !DISubroutineType(types: !2830)
!2830 = !{!534, !2831, !2467}
!2831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2825, file: !2469, line: 63, baseType: !2828, size: 64, offset: 64)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2825, file: !2469, line: 66, baseType: !339, size: 64, offset: 128)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2825, file: !2469, line: 67, baseType: !331, size: 32, offset: 192)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2825, file: !2469, line: 68, baseType: !7, size: 32, offset: 224)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2825, file: !2469, line: 71, baseType: !414, size: 128, offset: 256)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2825, file: !2469, line: 77, baseType: !2838, size: 64, offset: 384)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !802, file: !208, line: 1505, baseType: !972, size: 64, offset: 8064)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !802, file: !208, line: 1508, baseType: !972, size: 64, offset: 8128)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !802, file: !208, line: 1511, baseType: !331, size: 32, offset: 8192)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !802, file: !208, line: 1514, baseType: !1108, size: 32, offset: 8224)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !802, file: !208, line: 1517, baseType: !2844, size: 64, offset: 8256)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2070, line: 18, flags: DIFlagFwdDecl)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !802, file: !208, line: 1518, baseType: !840, size: 64, offset: 8320)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !802, file: !208, line: 1525, baseType: !1823, size: 64, offset: 8384)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !802, file: !208, line: 1532, baseType: !2849, size: 64, offset: 8448)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2850, line: 52, size: 64, elements: !2851)
!2850 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2851 = !{!2852}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2849, file: !2850, line: 53, baseType: !2853, size: 64)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2850, line: 40, size: 256, elements: !2855)
!2855 = !{!2856, !2857, !2862}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2854, file: !2850, line: 42, baseType: !445)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2854, file: !2850, line: 44, baseType: !2858, size: 192)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2850, line: 28, size: 192, elements: !2859)
!2859 = !{!2860, !2861}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2858, file: !2850, line: 29, baseType: !414, size: 128)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2858, file: !2850, line: 31, baseType: !339, size: 64, offset: 128)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2854, file: !2850, line: 49, baseType: !339, size: 64, offset: 192)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !802, file: !208, line: 1533, baseType: !2849, size: 64, offset: 8512)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !802, file: !208, line: 1534, baseType: !575, size: 128, align: 64, offset: 8576)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !802, file: !208, line: 1535, baseType: !2069, size: 256, offset: 8704)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !802, file: !208, line: 1537, baseType: !1292, size: 192, offset: 8960)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !802, file: !208, line: 1542, baseType: !331, size: 32, offset: 9152)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !802, file: !208, line: 1545, baseType: !445, offset: 9184)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !802, file: !208, line: 1546, baseType: !414, size: 128, offset: 9216)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !802, file: !208, line: 1548, baseType: !445, offset: 9344)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !802, file: !208, line: 1549, baseType: !414, size: 128, offset: 9344)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !632, file: !208, line: 624, baseType: !939, size: 64, offset: 256)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !632, file: !208, line: 631, baseType: !534, size: 64, offset: 320)
!2874 = !DIDerivedType(tag: DW_TAG_member, scope: !632, file: !208, line: 639, baseType: !2875, size: 32, offset: 384)
!2875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !632, file: !208, line: 639, size: 32, elements: !2876)
!2876 = !{!2877, !2879}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2875, file: !208, line: 640, baseType: !2878, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2875, file: !208, line: 641, baseType: !7, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !632, file: !208, line: 643, baseType: !715, size: 32, offset: 416)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !632, file: !208, line: 644, baseType: !733, size: 64, offset: 448)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !632, file: !208, line: 645, baseType: !737, size: 128, offset: 512)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !632, file: !208, line: 646, baseType: !737, size: 128, offset: 640)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !632, file: !208, line: 647, baseType: !737, size: 128, offset: 768)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !632, file: !208, line: 648, baseType: !445, offset: 896)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !632, file: !208, line: 649, baseType: !342, size: 16, offset: 896)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !632, file: !208, line: 650, baseType: !332, size: 8, offset: 912)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !632, file: !208, line: 651, baseType: !332, size: 8, offset: 920)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !632, file: !208, line: 652, baseType: !2641, size: 64, offset: 960)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !632, file: !208, line: 659, baseType: !534, size: 64, offset: 1024)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !632, file: !208, line: 660, baseType: !968, size: 256, offset: 1088)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !632, file: !208, line: 662, baseType: !534, size: 64, offset: 1344)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !632, file: !208, line: 663, baseType: !534, size: 64, offset: 1408)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !632, file: !208, line: 665, baseType: !844, size: 128, offset: 1472)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !632, file: !208, line: 666, baseType: !414, size: 128, offset: 1600)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !632, file: !208, line: 675, baseType: !414, size: 128, offset: 1728)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !632, file: !208, line: 676, baseType: !414, size: 128, offset: 1856)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !632, file: !208, line: 677, baseType: !414, size: 128, offset: 1984)
!2899 = !DIDerivedType(tag: DW_TAG_member, scope: !632, file: !208, line: 678, baseType: !2900, size: 128, offset: 2112)
!2900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !632, file: !208, line: 678, size: 128, elements: !2901)
!2901 = !{!2902, !2903}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2900, file: !208, line: 679, baseType: !840, size: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2900, file: !208, line: 680, baseType: !575, size: 128, align: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !632, file: !208, line: 682, baseType: !974, size: 64, offset: 2240)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !632, file: !208, line: 683, baseType: !974, size: 64, offset: 2304)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !632, file: !208, line: 684, baseType: !403, size: 32, offset: 2368)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !632, file: !208, line: 685, baseType: !403, size: 32, offset: 2400)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !632, file: !208, line: 686, baseType: !403, size: 32, offset: 2432)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !632, file: !208, line: 688, baseType: !403, size: 32, offset: 2464)
!2910 = !DIDerivedType(tag: DW_TAG_member, scope: !632, file: !208, line: 690, baseType: !2911, size: 64, offset: 2496)
!2911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !632, file: !208, line: 690, size: 64, elements: !2912)
!2912 = !{!2913, !3145}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2911, file: !208, line: 691, baseType: !2914, size: 64)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2916)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !208, line: 1822, size: 2048, elements: !2917)
!2917 = !{!2918, !2919, !2923, !2928, !2932, !2933, !2934, !2938, !2951, !2952, !2969, !2973, !2974, !2978, !2979, !2983, !2988, !2989, !2993, !2997, !3105, !3109, !3110, !3114, !3115, !3119, !3123, !3128, !3132, !3136, !3140, !3144}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2916, file: !208, line: 1823, baseType: !835, size: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2916, file: !208, line: 1824, baseType: !2920, size: 64, offset: 64)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = !DISubroutineType(types: !2922)
!2922 = !{!733, !562, !733, !331}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2916, file: !208, line: 1825, baseType: !2924, size: 64, offset: 128)
!2924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2925, size: 64)
!2925 = !DISubroutineType(types: !2926)
!2926 = !{!517, !562, !486, !531, !2927}
!2927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2916, file: !208, line: 1826, baseType: !2929, size: 64, offset: 192)
!2929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2930, size: 64)
!2930 = !DISubroutineType(types: !2931)
!2931 = !{!517, !562, !421, !531, !2927}
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2916, file: !208, line: 1827, baseType: !1045, size: 64, offset: 256)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2916, file: !208, line: 1828, baseType: !1045, size: 64, offset: 320)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2916, file: !208, line: 1829, baseType: !2935, size: 64, offset: 384)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!331, !1048, !692}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2916, file: !208, line: 1830, baseType: !2939, size: 64, offset: 448)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{!331, !562, !2942}
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !208, line: 1776, size: 128, elements: !2944)
!2944 = !{!2945, !2950}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2943, file: !208, line: 1777, baseType: !2946, size: 64)
!2946 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !208, line: 1773, baseType: !2947)
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2948, size: 64)
!2948 = !DISubroutineType(types: !2949)
!2949 = !{!331, !2942, !421, !331, !733, !335, !7}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2943, file: !208, line: 1778, baseType: !733, size: 64, offset: 64)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2916, file: !208, line: 1831, baseType: !2939, size: 64, offset: 512)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2916, file: !208, line: 1832, baseType: !2953, size: 64, offset: 576)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{!2956, !562, !2958}
!2956 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2957, line: 52, baseType: !7)
!2957 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2959, size: 64)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !2960, line: 43, size: 128, elements: !2961)
!2960 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!2961 = !{!2962, !2968}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !2959, file: !2960, line: 44, baseType: !2963, size: 64)
!2963 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !2960, line: 37, baseType: !2964)
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 64)
!2965 = !DISubroutineType(types: !2966)
!2966 = !{null, !562, !2967, !2958}
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !2959, file: !2960, line: 45, baseType: !2956, size: 32, offset: 64)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2916, file: !208, line: 1833, baseType: !2970, size: 64, offset: 640)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2971, size: 64)
!2971 = !DISubroutineType(types: !2972)
!2972 = !{!339, !562, !7, !534}
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2916, file: !208, line: 1834, baseType: !2970, size: 64, offset: 704)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2916, file: !208, line: 1835, baseType: !2975, size: 64, offset: 768)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DISubroutineType(types: !2977)
!2977 = !{!331, !562, !1180}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2916, file: !208, line: 1836, baseType: !534, size: 64, offset: 832)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2916, file: !208, line: 1837, baseType: !2980, size: 64, offset: 896)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 64)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{!331, !631, !562}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2916, file: !208, line: 1838, baseType: !2984, size: 64, offset: 960)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DISubroutineType(types: !2986)
!2986 = !{!331, !562, !2987}
!2987 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !208, line: 1007, baseType: !325)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2916, file: !208, line: 1839, baseType: !2980, size: 64, offset: 1024)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2916, file: !208, line: 1840, baseType: !2990, size: 64, offset: 1088)
!2990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2991, size: 64)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{!331, !562, !733, !733, !331}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2916, file: !208, line: 1841, baseType: !2994, size: 64, offset: 1152)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = !DISubroutineType(types: !2996)
!2996 = !{!331, !331, !562, !331}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2916, file: !208, line: 1842, baseType: !2998, size: 64, offset: 1216)
!2998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2999, size: 64)
!2999 = !DISubroutineType(types: !3000)
!3000 = !{!331, !562, !331, !3001}
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !208, line: 1062, size: 1664, elements: !3003)
!3003 = !{!3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3035, !3036, !3037, !3050, !3081}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3002, file: !208, line: 1063, baseType: !3001, size: 64)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3002, file: !208, line: 1064, baseType: !414, size: 128, offset: 64)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3002, file: !208, line: 1065, baseType: !844, size: 128, offset: 192)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3002, file: !208, line: 1066, baseType: !414, size: 128, offset: 320)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3002, file: !208, line: 1069, baseType: !414, size: 128, offset: 448)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3002, file: !208, line: 1072, baseType: !2987, size: 64, offset: 576)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3002, file: !208, line: 1073, baseType: !7, size: 32, offset: 640)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3002, file: !208, line: 1074, baseType: !334, size: 8, offset: 672)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3002, file: !208, line: 1075, baseType: !7, size: 32, offset: 704)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3002, file: !208, line: 1076, baseType: !331, size: 32, offset: 736)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3002, file: !208, line: 1077, baseType: !1594, size: 128, offset: 768)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3002, file: !208, line: 1078, baseType: !562, size: 64, offset: 896)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3002, file: !208, line: 1079, baseType: !733, size: 64, offset: 960)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3002, file: !208, line: 1080, baseType: !733, size: 64, offset: 1024)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3002, file: !208, line: 1082, baseType: !3019, size: 64, offset: 1088)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !208, line: 1314, size: 320, elements: !3021)
!3021 = !{!3022, !3030, !3031, !3032, !3033, !3034}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3020, file: !208, line: 1315, baseType: !3023)
!3023 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3024, line: 20, baseType: !3025)
!3024 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3024, line: 11, elements: !3026)
!3026 = !{!3027}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3025, file: !3024, line: 12, baseType: !3028)
!3028 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !457, line: 33, baseType: !3029)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !457, line: 31, elements: !459)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3020, file: !208, line: 1316, baseType: !331, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3020, file: !208, line: 1317, baseType: !331, size: 32, offset: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3020, file: !208, line: 1318, baseType: !3019, size: 64, offset: 64)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3020, file: !208, line: 1319, baseType: !562, size: 64, offset: 128)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3020, file: !208, line: 1320, baseType: !575, size: 128, align: 64, offset: 192)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3002, file: !208, line: 1084, baseType: !534, size: 64, offset: 1152)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3002, file: !208, line: 1085, baseType: !534, size: 64, offset: 1216)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3002, file: !208, line: 1087, baseType: !3038, size: 64, offset: 1280)
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 64)
!3039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3040)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !208, line: 1011, size: 128, elements: !3041)
!3041 = !{!3042, !3046}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3040, file: !208, line: 1012, baseType: !3043, size: 64)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{null, !3001, !3001}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3040, file: !208, line: 1013, baseType: !3047, size: 64, offset: 64)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{null, !3001}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3002, file: !208, line: 1088, baseType: !3051, size: 64, offset: 1344)
!3051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3052, size: 64)
!3052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3053)
!3053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !208, line: 1016, size: 512, elements: !3054)
!3054 = !{!3055, !3059, !3063, !3064, !3068, !3072, !3076, !3080}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3053, file: !208, line: 1017, baseType: !3056, size: 64)
!3056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3057, size: 64)
!3057 = !DISubroutineType(types: !3058)
!3058 = !{!2987, !2987}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3053, file: !208, line: 1018, baseType: !3060, size: 64, offset: 64)
!3060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3061, size: 64)
!3061 = !DISubroutineType(types: !3062)
!3062 = !{null, !2987}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3053, file: !208, line: 1019, baseType: !3047, size: 64, offset: 128)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3053, file: !208, line: 1020, baseType: !3065, size: 64, offset: 192)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = !DISubroutineType(types: !3067)
!3067 = !{!331, !3001, !331}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3053, file: !208, line: 1021, baseType: !3069, size: 64, offset: 256)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{!692, !3001}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3053, file: !208, line: 1022, baseType: !3073, size: 64, offset: 320)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DISubroutineType(types: !3075)
!3075 = !{!331, !3001, !331, !417}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3053, file: !208, line: 1023, baseType: !3077, size: 64, offset: 384)
!3077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3078 = !DISubroutineType(types: !3079)
!3079 = !{null, !3001, !1022}
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3053, file: !208, line: 1024, baseType: !3069, size: 64, offset: 448)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3002, file: !208, line: 1097, baseType: !3082, size: 256, offset: 1408)
!3082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3002, file: !208, line: 1089, size: 256, elements: !3083)
!3083 = !{!3084, !3093, !3099}
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3082, file: !208, line: 1090, baseType: !3085, size: 256)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3086, line: 10, size: 256, elements: !3087)
!3086 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3087 = !{!3088, !3089, !3092}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3085, file: !3086, line: 11, baseType: !326, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3085, file: !3086, line: 12, baseType: !3090, size: 64, offset: 64)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3086, line: 5, flags: DIFlagFwdDecl)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3085, file: !3086, line: 13, baseType: !414, size: 128, offset: 128)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3082, file: !208, line: 1091, baseType: !3094, size: 64)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3086, line: 17, size: 64, elements: !3095)
!3095 = !{!3096}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3094, file: !3086, line: 18, baseType: !3097, size: 64)
!3097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3098, size: 64)
!3098 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3086, line: 16, flags: DIFlagFwdDecl)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3082, file: !208, line: 1096, baseType: !3100, size: 192)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3082, file: !208, line: 1092, size: 192, elements: !3101)
!3101 = !{!3102, !3103, !3104}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3100, file: !208, line: 1093, baseType: !414, size: 128)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3100, file: !208, line: 1094, baseType: !331, size: 32, offset: 128)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3100, file: !208, line: 1095, baseType: !7, size: 32, offset: 160)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2916, file: !208, line: 1843, baseType: !3106, size: 64, offset: 1280)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 64)
!3107 = !DISubroutineType(types: !3108)
!3108 = !{!517, !562, !926, !331, !531, !2927, !331}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2916, file: !208, line: 1844, baseType: !1220, size: 64, offset: 1344)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2916, file: !208, line: 1845, baseType: !3111, size: 64, offset: 1408)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{!331, !331}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2916, file: !208, line: 1846, baseType: !2998, size: 64, offset: 1472)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2916, file: !208, line: 1847, baseType: !3116, size: 64, offset: 1536)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!517, !2210, !562, !2927, !531, !7}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2916, file: !208, line: 1848, baseType: !3120, size: 64, offset: 1600)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DISubroutineType(types: !3122)
!3122 = !{!517, !562, !2927, !2210, !531, !7}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2916, file: !208, line: 1849, baseType: !3124, size: 64, offset: 1664)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{!331, !562, !339, !3127, !1022}
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2916, file: !208, line: 1850, baseType: !3129, size: 64, offset: 1728)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!339, !562, !331, !733, !733}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2916, file: !208, line: 1852, baseType: !3133, size: 64, offset: 1792)
!3133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 64)
!3134 = !DISubroutineType(types: !3135)
!3135 = !{null, !916, !562}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2916, file: !208, line: 1856, baseType: !3137, size: 64, offset: 1856)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{!517, !562, !733, !562, !733, !531, !7}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2916, file: !208, line: 1858, baseType: !3141, size: 64, offset: 1920)
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = !DISubroutineType(types: !3143)
!3143 = !{!733, !562, !733, !562, !733, !733, !7}
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2916, file: !208, line: 1861, baseType: !2990, size: 64, offset: 1984)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2911, file: !208, line: 692, baseType: !869, size: 64)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !632, file: !208, line: 694, baseType: !3147, size: 64, offset: 2560)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 64)
!3148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !208, line: 1100, size: 384, elements: !3149)
!3149 = !{!3150, !3151, !3152, !3153}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3148, file: !208, line: 1101, baseType: !445)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3148, file: !208, line: 1102, baseType: !414, size: 128)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3148, file: !208, line: 1103, baseType: !414, size: 128, offset: 128)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3148, file: !208, line: 1104, baseType: !414, size: 128, offset: 256)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !632, file: !208, line: 695, baseType: !940, size: 1216, align: 64, offset: 2624)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !632, file: !208, line: 696, baseType: !414, size: 128, offset: 3840)
!3156 = !DIDerivedType(tag: DW_TAG_member, scope: !632, file: !208, line: 697, baseType: !3157, size: 64, offset: 3968)
!3157 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !632, file: !208, line: 697, size: 64, elements: !3158)
!3158 = !{!3159, !3160, !3161, !3172, !3173}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3157, file: !208, line: 698, baseType: !2210, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3157, file: !208, line: 699, baseType: !2666, size: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3157, file: !208, line: 700, baseType: !3162, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3164, line: 14, size: 832, elements: !3165)
!3164 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3165 = !{!3166, !3167, !3168, !3169, !3170, !3171}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3163, file: !3164, line: 15, baseType: !432, size: 512)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3163, file: !3164, line: 16, baseType: !835, size: 64, offset: 512)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3163, file: !3164, line: 17, baseType: !2914, size: 64, offset: 576)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3163, file: !3164, line: 18, baseType: !414, size: 128, offset: 640)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3163, file: !3164, line: 19, baseType: !715, size: 32, offset: 768)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3163, file: !3164, line: 20, baseType: !7, size: 32, offset: 800)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3157, file: !208, line: 701, baseType: !486, size: 64)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3157, file: !208, line: 702, baseType: !7, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !632, file: !208, line: 705, baseType: !328, size: 32, offset: 4032)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !632, file: !208, line: 708, baseType: !328, size: 32, offset: 4064)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !632, file: !208, line: 709, baseType: !2748, size: 64, offset: 4096)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !632, file: !208, line: 720, baseType: !325, size: 64, offset: 4160)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !593, file: !590, line: 98, baseType: !3179, size: 256, offset: 448)
!3179 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 256, elements: !2342)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !593, file: !590, line: 101, baseType: !3181, size: 32, offset: 704)
!3181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3182, line: 25, size: 32, elements: !3183)
!3182 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3183 = !{!3184}
!3184 = !DIDerivedType(tag: DW_TAG_member, scope: !3181, file: !3182, line: 26, baseType: !3185, size: 32)
!3185 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3181, file: !3182, line: 26, size: 32, elements: !3186)
!3186 = !{!3187}
!3187 = !DIDerivedType(tag: DW_TAG_member, scope: !3185, file: !3182, line: 30, baseType: !3188, size: 32)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3185, file: !3182, line: 30, size: 32, elements: !3189)
!3189 = !{!3190, !3191}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3188, file: !3182, line: 31, baseType: !445)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3188, file: !3182, line: 32, baseType: !331, size: 32)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !593, file: !590, line: 102, baseType: !2765, size: 64, offset: 768)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !593, file: !590, line: 103, baseType: !801, size: 64, offset: 832)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !593, file: !590, line: 104, baseType: !534, size: 64, offset: 896)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !593, file: !590, line: 105, baseType: !325, size: 64, offset: 960)
!3196 = !DIDerivedType(tag: DW_TAG_member, scope: !593, file: !590, line: 107, baseType: !3197, size: 128, offset: 1024)
!3197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !593, file: !590, line: 107, size: 128, elements: !3198)
!3198 = !{!3199, !3200}
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3197, file: !590, line: 108, baseType: !414, size: 128)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3197, file: !590, line: 109, baseType: !2967, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !593, file: !590, line: 111, baseType: !414, size: 128, offset: 1152)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !593, file: !590, line: 112, baseType: !414, size: 128, offset: 1280)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !593, file: !590, line: 120, baseType: !3204, size: 128, offset: 1408)
!3204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !593, file: !590, line: 116, size: 128, elements: !3205)
!3205 = !{!3206, !3207, !3208}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3204, file: !590, line: 117, baseType: !844, size: 128)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3204, file: !590, line: 118, baseType: !607, size: 128)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3204, file: !590, line: 119, baseType: !575, size: 128, align: 64)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !563, file: !208, line: 922, baseType: !631, size: 64, offset: 256)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !563, file: !208, line: 923, baseType: !2914, size: 64, offset: 320)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !563, file: !208, line: 929, baseType: !445, offset: 384)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !563, file: !208, line: 930, baseType: !207, size: 32, offset: 384)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !563, file: !208, line: 931, baseType: !972, size: 64, offset: 448)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !563, file: !208, line: 932, baseType: !7, size: 32, offset: 512)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !563, file: !208, line: 933, baseType: !2761, size: 32, offset: 544)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !563, file: !208, line: 934, baseType: !1292, size: 192, offset: 576)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !563, file: !208, line: 935, baseType: !733, size: 64, offset: 768)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !563, file: !208, line: 936, baseType: !3219, size: 192, offset: 832)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !208, line: 885, size: 192, elements: !3220)
!3220 = !{!3221, !3222, !3223, !3224, !3225, !3226}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3219, file: !208, line: 886, baseType: !3023)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3219, file: !208, line: 887, baseType: !1584, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3219, file: !208, line: 888, baseType: !216, size: 32, offset: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3219, file: !208, line: 889, baseType: !637, size: 32, offset: 96)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3219, file: !208, line: 889, baseType: !637, size: 32, offset: 128)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3219, file: !208, line: 890, baseType: !331, size: 32, offset: 160)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !563, file: !208, line: 937, baseType: !1660, size: 64, offset: 1024)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !563, file: !208, line: 938, baseType: !3229, size: 256, offset: 1088)
!3229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !208, line: 896, size: 256, elements: !3230)
!3230 = !{!3231, !3232, !3233, !3234, !3235, !3236}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3229, file: !208, line: 897, baseType: !534, size: 64)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3229, file: !208, line: 898, baseType: !7, size: 32, offset: 64)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3229, file: !208, line: 899, baseType: !7, size: 32, offset: 96)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3229, file: !208, line: 902, baseType: !7, size: 32, offset: 128)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3229, file: !208, line: 903, baseType: !7, size: 32, offset: 160)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3229, file: !208, line: 904, baseType: !733, size: 64, offset: 192)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !563, file: !208, line: 940, baseType: !335, size: 64, offset: 1344)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !563, file: !208, line: 945, baseType: !325, size: 64, offset: 1408)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !563, file: !208, line: 949, baseType: !414, size: 128, offset: 1472)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !563, file: !208, line: 950, baseType: !414, size: 128, offset: 1600)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !563, file: !208, line: 952, baseType: !939, size: 64, offset: 1728)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !563, file: !208, line: 953, baseType: !1108, size: 32, offset: 1792)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !563, file: !208, line: 954, baseType: !1108, size: 32, offset: 1824)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !553, file: !511, line: 174, baseType: !559, size: 64, offset: 320)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !553, file: !511, line: 176, baseType: !3246, size: 64, offset: 384)
!3246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3247, size: 64)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{!331, !562, !438, !552, !1180}
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !541, file: !511, line: 90, baseType: !536, size: 64, offset: 192)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !541, file: !511, line: 91, baseType: !3251, size: 64, offset: 256)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !501, file: !433, line: 143, baseType: !3253, size: 64, offset: 256)
!3253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{!3256, !438}
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3258)
!3258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !225, line: 39, size: 384, elements: !3259)
!3259 = !{!3260, !3261, !3265, !3269, !3275, !3279}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3258, file: !225, line: 40, baseType: !224, size: 32)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3258, file: !225, line: 41, baseType: !3262, size: 64, offset: 64)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!692}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3258, file: !225, line: 42, baseType: !3266, size: 64, offset: 128)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{!325}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3258, file: !225, line: 43, baseType: !3270, size: 64, offset: 192)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = !DISubroutineType(types: !3272)
!3272 = !{!2239, !3273}
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 64)
!3274 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !225, line: 19, flags: DIFlagFwdDecl)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3258, file: !225, line: 44, baseType: !3276, size: 64, offset: 256)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!2239}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3258, file: !225, line: 45, baseType: !670, size: 64, offset: 320)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !501, file: !433, line: 144, baseType: !3281, size: 64, offset: 320)
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3282, size: 64)
!3282 = !DISubroutineType(types: !3283)
!3283 = !{!2239, !438}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !501, file: !433, line: 145, baseType: !3285, size: 64, offset: 384)
!3285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3286, size: 64)
!3286 = !DISubroutineType(types: !3287)
!3287 = !{null, !438, !3288, !3289}
!3288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!3289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !432, file: !433, line: 70, baseType: !3291, size: 64, offset: 384)
!3291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3292, size: 64)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !821, line: 123, size: 1024, elements: !3293)
!3293 = !{!3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3422, !3423, !3424, !3425, !3426}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3292, file: !821, line: 124, baseType: !403, size: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3292, file: !821, line: 125, baseType: !403, size: 32, offset: 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3292, file: !821, line: 135, baseType: !3291, size: 64, offset: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3292, file: !821, line: 136, baseType: !421, size: 64, offset: 128)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3292, file: !821, line: 138, baseType: !961, size: 192, align: 64, offset: 192)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3292, file: !821, line: 140, baseType: !2239, size: 64, offset: 384)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3292, file: !821, line: 141, baseType: !7, size: 32, offset: 448)
!3301 = !DIDerivedType(tag: DW_TAG_member, scope: !3292, file: !821, line: 142, baseType: !3302, size: 256, offset: 512)
!3302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3292, file: !821, line: 142, size: 256, elements: !3303)
!3303 = !{!3304, !3350, !3354}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3302, file: !821, line: 143, baseType: !3305, size: 192)
!3305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !821, line: 91, size: 192, elements: !3306)
!3306 = !{!3307, !3308, !3309}
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3305, file: !821, line: 92, baseType: !534, size: 64)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3305, file: !821, line: 94, baseType: !957, size: 64, offset: 64)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3305, file: !821, line: 100, baseType: !3310, size: 64, offset: 128)
!3310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3311, size: 64)
!3311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !821, line: 180, size: 704, elements: !3312)
!3312 = !{!3313, !3314, !3315, !3322, !3323, !3324, !3348, !3349}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3311, file: !821, line: 182, baseType: !3291, size: 64)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3311, file: !821, line: 183, baseType: !7, size: 32, offset: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3311, file: !821, line: 186, baseType: !3316, size: 192, offset: 128)
!3316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3317, line: 19, size: 192, elements: !3318)
!3317 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3318 = !{!3319, !3320, !3321}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3316, file: !3317, line: 20, baseType: !944, size: 128)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3316, file: !3317, line: 21, baseType: !7, size: 32, offset: 128)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3316, file: !3317, line: 22, baseType: !7, size: 32, offset: 160)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3311, file: !821, line: 187, baseType: !326, size: 32, offset: 320)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3311, file: !821, line: 188, baseType: !326, size: 32, offset: 352)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3311, file: !821, line: 189, baseType: !3325, size: 64, offset: 384)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 64)
!3326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !821, line: 168, size: 320, elements: !3327)
!3327 = !{!3328, !3332, !3336, !3340, !3344}
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3326, file: !821, line: 169, baseType: !3329, size: 64)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 64)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{!331, !916, !3310}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3326, file: !821, line: 171, baseType: !3333, size: 64, offset: 64)
!3333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3334, size: 64)
!3334 = !DISubroutineType(types: !3335)
!3335 = !{!331, !3291, !421, !526}
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3326, file: !821, line: 173, baseType: !3337, size: 64, offset: 128)
!3337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!3338 = !DISubroutineType(types: !3339)
!3339 = !{!331, !3291}
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3326, file: !821, line: 174, baseType: !3341, size: 64, offset: 192)
!3341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!3342 = !DISubroutineType(types: !3343)
!3343 = !{!331, !3291, !3291, !421}
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3326, file: !821, line: 176, baseType: !3345, size: 64, offset: 256)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!331, !916, !3291, !3310}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3311, file: !821, line: 192, baseType: !414, size: 128, offset: 448)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3311, file: !821, line: 194, baseType: !1594, size: 128, offset: 576)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3302, file: !821, line: 144, baseType: !3351, size: 64)
!3351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !821, line: 103, size: 64, elements: !3352)
!3352 = !{!3353}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3351, file: !821, line: 104, baseType: !3291, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3302, file: !821, line: 145, baseType: !3355, size: 256)
!3355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !821, line: 107, size: 256, elements: !3356)
!3356 = !{!3357, !3417, !3420, !3421}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3355, file: !821, line: 108, baseType: !3358, size: 64)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3359, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3360)
!3360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !821, line: 217, size: 768, elements: !3361)
!3361 = !{!3362, !3382, !3386, !3390, !3394, !3398, !3402, !3406, !3407, !3408, !3409, !3413}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3360, file: !821, line: 222, baseType: !3363, size: 64)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{!331, !3366}
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3367, size: 64)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !821, line: 197, size: 1088, elements: !3368)
!3368 = !{!3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3367, file: !821, line: 199, baseType: !3291, size: 64)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3367, file: !821, line: 200, baseType: !562, size: 64, offset: 64)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3367, file: !821, line: 201, baseType: !916, size: 64, offset: 128)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3367, file: !821, line: 202, baseType: !325, size: 64, offset: 192)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3367, file: !821, line: 205, baseType: !1292, size: 192, offset: 256)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3367, file: !821, line: 206, baseType: !1292, size: 192, offset: 448)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3367, file: !821, line: 207, baseType: !331, size: 32, offset: 640)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3367, file: !821, line: 208, baseType: !414, size: 128, offset: 704)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3367, file: !821, line: 209, baseType: !486, size: 64, offset: 832)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3367, file: !821, line: 211, baseType: !531, size: 64, offset: 896)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3367, file: !821, line: 212, baseType: !692, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3367, file: !821, line: 213, baseType: !692, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3367, file: !821, line: 214, baseType: !1208, size: 64, offset: 1024)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3360, file: !821, line: 223, baseType: !3383, size: 64, offset: 64)
!3383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3384, size: 64)
!3384 = !DISubroutineType(types: !3385)
!3385 = !{null, !3366}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3360, file: !821, line: 236, baseType: !3387, size: 64, offset: 128)
!3387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3388, size: 64)
!3388 = !DISubroutineType(types: !3389)
!3389 = !{!331, !916, !325}
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3360, file: !821, line: 238, baseType: !3391, size: 64, offset: 192)
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = !DISubroutineType(types: !3393)
!3393 = !{!325, !916, !2927}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3360, file: !821, line: 239, baseType: !3395, size: 64, offset: 256)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!325, !916, !325, !2927}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3360, file: !821, line: 240, baseType: !3399, size: 64, offset: 320)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 64)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{null, !916, !325}
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3360, file: !821, line: 242, baseType: !3403, size: 64, offset: 384)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 64)
!3404 = !DISubroutineType(types: !3405)
!3405 = !{!517, !3366, !486, !531, !733}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3360, file: !821, line: 252, baseType: !531, size: 64, offset: 448)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3360, file: !821, line: 259, baseType: !692, size: 8, offset: 512)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3360, file: !821, line: 260, baseType: !3403, size: 64, offset: 576)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3360, file: !821, line: 263, baseType: !3410, size: 64, offset: 640)
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 64)
!3411 = !DISubroutineType(types: !3412)
!3412 = !{!2956, !3366, !2958}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3360, file: !821, line: 266, baseType: !3414, size: 64, offset: 704)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!331, !3366, !1180}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3355, file: !821, line: 109, baseType: !3418, size: 64, offset: 64)
!3418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3419, size: 64)
!3419 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !821, line: 31, flags: DIFlagFwdDecl)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3355, file: !821, line: 110, baseType: !733, size: 64, offset: 128)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3355, file: !821, line: 111, baseType: !3291, size: 64, offset: 192)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3292, file: !821, line: 148, baseType: !325, size: 64, offset: 768)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3292, file: !821, line: 154, baseType: !335, size: 64, offset: 832)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3292, file: !821, line: 156, baseType: !342, size: 16, offset: 896)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3292, file: !821, line: 157, baseType: !526, size: 16, offset: 912)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3292, file: !821, line: 158, baseType: !3427, size: 64, offset: 960)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 64)
!3428 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !821, line: 32, flags: DIFlagFwdDecl)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !432, file: !433, line: 71, baseType: !394, size: 32, offset: 448)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !432, file: !433, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !432, file: !433, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !432, file: !433, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !432, file: !433, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !432, file: !433, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !429, file: !237, line: 463, baseType: !428, size: 64, offset: 512)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !429, file: !237, line: 465, baseType: !3437, size: 64, offset: 576)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !237, line: 36, flags: DIFlagFwdDecl)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !429, file: !237, line: 467, baseType: !421, size: 64, offset: 640)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !429, file: !237, line: 468, baseType: !3441, size: 64, offset: 704)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3443)
!3443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !237, line: 87, size: 384, elements: !3444)
!3444 = !{!3445, !3446, !3447, !3451, !3456, !3460}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3443, file: !237, line: 88, baseType: !421, size: 64)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3443, file: !237, line: 89, baseType: !538, size: 64, offset: 64)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3443, file: !237, line: 90, baseType: !3448, size: 64, offset: 128)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{!331, !428, !481}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3443, file: !237, line: 91, baseType: !3452, size: 64, offset: 192)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 64)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!486, !428, !3455, !3288, !3289}
!3455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3443, file: !237, line: 93, baseType: !3457, size: 64, offset: 256)
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{null, !428}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3443, file: !237, line: 95, baseType: !3461, size: 64, offset: 320)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3463)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !244, line: 278, size: 1472, elements: !3464)
!3464 = !{!3465, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3463, file: !244, line: 279, baseType: !3466, size: 64)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{!331, !428}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3463, file: !244, line: 280, baseType: !3457, size: 64, offset: 64)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3463, file: !244, line: 281, baseType: !3466, size: 64, offset: 128)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3463, file: !244, line: 282, baseType: !3466, size: 64, offset: 192)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3463, file: !244, line: 283, baseType: !3466, size: 64, offset: 256)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3463, file: !244, line: 284, baseType: !3466, size: 64, offset: 320)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3463, file: !244, line: 285, baseType: !3466, size: 64, offset: 384)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3463, file: !244, line: 286, baseType: !3466, size: 64, offset: 448)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3463, file: !244, line: 287, baseType: !3466, size: 64, offset: 512)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3463, file: !244, line: 288, baseType: !3466, size: 64, offset: 576)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3463, file: !244, line: 289, baseType: !3466, size: 64, offset: 640)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3463, file: !244, line: 290, baseType: !3466, size: 64, offset: 704)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3463, file: !244, line: 291, baseType: !3466, size: 64, offset: 768)
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3463, file: !244, line: 292, baseType: !3466, size: 64, offset: 832)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3463, file: !244, line: 293, baseType: !3466, size: 64, offset: 896)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3463, file: !244, line: 294, baseType: !3466, size: 64, offset: 960)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3463, file: !244, line: 295, baseType: !3466, size: 64, offset: 1024)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3463, file: !244, line: 296, baseType: !3466, size: 64, offset: 1088)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3463, file: !244, line: 297, baseType: !3466, size: 64, offset: 1152)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3463, file: !244, line: 298, baseType: !3466, size: 64, offset: 1216)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3463, file: !244, line: 299, baseType: !3466, size: 64, offset: 1280)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3463, file: !244, line: 300, baseType: !3466, size: 64, offset: 1344)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3463, file: !244, line: 301, baseType: !3466, size: 64, offset: 1408)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !429, file: !237, line: 470, baseType: !3492, size: 64, offset: 768)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3494, line: 82, size: 1408, elements: !3495)
!3494 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3495 = !{!3496, !3497, !3498, !3499, !3500, !3501, !3502, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3574, !3577, !3578}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3493, file: !3494, line: 83, baseType: !421, size: 64)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3493, file: !3494, line: 84, baseType: !421, size: 64, offset: 64)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3493, file: !3494, line: 85, baseType: !428, size: 64, offset: 128)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3493, file: !3494, line: 86, baseType: !538, size: 64, offset: 192)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3493, file: !3494, line: 87, baseType: !538, size: 64, offset: 256)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3493, file: !3494, line: 88, baseType: !538, size: 64, offset: 320)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3493, file: !3494, line: 90, baseType: !3503, size: 64, offset: 384)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!331, !428, !3506}
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !231, line: 95, size: 1152, elements: !3508)
!3508 = !{!3509, !3510, !3511, !3512, !3513, !3514, !3515, !3525, !3538, !3539, !3540, !3541, !3542, !3550, !3551, !3552, !3553, !3554, !3555}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3507, file: !231, line: 96, baseType: !421, size: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3507, file: !231, line: 97, baseType: !3492, size: 64, offset: 64)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3507, file: !231, line: 99, baseType: !835, size: 64, offset: 128)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3507, file: !231, line: 100, baseType: !421, size: 64, offset: 192)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3507, file: !231, line: 102, baseType: !692, size: 8, offset: 256)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3507, file: !231, line: 103, baseType: !230, size: 32, offset: 288)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3507, file: !231, line: 105, baseType: !3516, size: 64, offset: 320)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3518)
!3518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3519, line: 262, size: 1600, elements: !3520)
!3519 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3520 = !{!3521, !3522, !3523, !3524}
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3518, file: !3519, line: 263, baseType: !2751, size: 256)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3518, file: !3519, line: 264, baseType: !2751, size: 256, offset: 256)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3518, file: !3519, line: 265, baseType: !371, size: 1024, offset: 512)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3518, file: !3519, line: 266, baseType: !2239, size: 64, offset: 1536)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3507, file: !231, line: 106, baseType: !3526, size: 64, offset: 384)
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3527, size: 64)
!3527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3528)
!3528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3519, line: 210, size: 256, elements: !3529)
!3529 = !{!3530, !3534, !3536, !3537}
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3528, file: !3519, line: 211, baseType: !3531, size: 72)
!3531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 72, elements: !3532)
!3532 = !{!3533}
!3533 = !DISubrange(count: 9)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3528, file: !3519, line: 212, baseType: !3535, size: 64, offset: 128)
!3535 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3519, line: 14, baseType: !534)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3528, file: !3519, line: 213, baseType: !328, size: 32, offset: 192)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3528, file: !3519, line: 214, baseType: !328, size: 32, offset: 224)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3507, file: !231, line: 108, baseType: !3466, size: 64, offset: 448)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3507, file: !231, line: 109, baseType: !3457, size: 64, offset: 512)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3507, file: !231, line: 110, baseType: !3466, size: 64, offset: 576)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3507, file: !231, line: 111, baseType: !3457, size: 64, offset: 640)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3507, file: !231, line: 112, baseType: !3543, size: 64, offset: 704)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{!331, !428, !3546}
!3546 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !244, line: 52, baseType: !3547)
!3547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !244, line: 50, size: 32, elements: !3548)
!3548 = !{!3549}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3547, file: !244, line: 51, baseType: !331, size: 32)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3507, file: !231, line: 113, baseType: !3466, size: 64, offset: 768)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3507, file: !231, line: 114, baseType: !538, size: 64, offset: 832)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3507, file: !231, line: 115, baseType: !538, size: 64, offset: 896)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3507, file: !231, line: 117, baseType: !3461, size: 64, offset: 960)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3507, file: !231, line: 118, baseType: !3457, size: 64, offset: 1024)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3507, file: !231, line: 120, baseType: !3556, size: 64, offset: 1088)
!3556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3557, size: 64)
!3557 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !231, line: 120, flags: DIFlagFwdDecl)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3493, file: !3494, line: 91, baseType: !3448, size: 64, offset: 448)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3493, file: !3494, line: 92, baseType: !3466, size: 64, offset: 512)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3493, file: !3494, line: 93, baseType: !3457, size: 64, offset: 576)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3493, file: !3494, line: 94, baseType: !3466, size: 64, offset: 640)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3493, file: !3494, line: 95, baseType: !3457, size: 64, offset: 704)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3493, file: !3494, line: 97, baseType: !3466, size: 64, offset: 768)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3493, file: !3494, line: 98, baseType: !3466, size: 64, offset: 832)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3493, file: !3494, line: 100, baseType: !3543, size: 64, offset: 896)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3493, file: !3494, line: 101, baseType: !3466, size: 64, offset: 960)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3493, file: !3494, line: 103, baseType: !3466, size: 64, offset: 1024)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3493, file: !3494, line: 105, baseType: !3466, size: 64, offset: 1088)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3493, file: !3494, line: 107, baseType: !3461, size: 64, offset: 1152)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3493, file: !3494, line: 109, baseType: !3571, size: 64, offset: 1216)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3573)
!3573 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3494, line: 109, flags: DIFlagFwdDecl)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3493, file: !3494, line: 111, baseType: !3575, size: 64, offset: 1280)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3494, line: 111, flags: DIFlagFwdDecl)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3493, file: !3494, line: 112, baseType: !850, offset: 1344)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3493, file: !3494, line: 114, baseType: !692, size: 8, offset: 1344)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !429, file: !237, line: 471, baseType: !3506, size: 64, offset: 832)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !429, file: !237, line: 473, baseType: !325, size: 64, offset: 896)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !429, file: !237, line: 475, baseType: !325, size: 64, offset: 960)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !429, file: !237, line: 480, baseType: !1292, size: 192, offset: 1024)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !429, file: !237, line: 484, baseType: !3584, size: 576, offset: 1216)
!3584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !237, line: 361, size: 576, elements: !3585)
!3585 = !{!3586, !3587, !3588, !3589, !3590, !3591}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3584, file: !237, line: 362, baseType: !414, size: 128)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3584, file: !237, line: 363, baseType: !414, size: 128, offset: 128)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3584, file: !237, line: 364, baseType: !414, size: 128, offset: 256)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3584, file: !237, line: 365, baseType: !414, size: 128, offset: 384)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3584, file: !237, line: 366, baseType: !692, size: 8, offset: 512)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3584, file: !237, line: 367, baseType: !236, size: 32, offset: 544)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !429, file: !237, line: 485, baseType: !3593, size: 2304, offset: 1792)
!3593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !244, line: 565, size: 2304, elements: !3594)
!3594 = !{!3595, !3596, !3597, !3598, !3599, !3600, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3690, !3694}
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3593, file: !244, line: 566, baseType: !3546, size: 32)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3593, file: !244, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3593, file: !244, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3593, file: !244, line: 569, baseType: !692, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3593, file: !244, line: 570, baseType: !692, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3593, file: !244, line: 571, baseType: !692, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3593, file: !244, line: 572, baseType: !692, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3593, file: !244, line: 573, baseType: !692, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3593, file: !244, line: 574, baseType: !692, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3593, file: !244, line: 575, baseType: !692, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3593, file: !244, line: 576, baseType: !692, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3593, file: !244, line: 577, baseType: !326, size: 32, offset: 64)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3593, file: !244, line: 578, baseType: !445, offset: 96)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3593, file: !244, line: 580, baseType: !414, size: 128, offset: 128)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3593, file: !244, line: 581, baseType: !1615, size: 192, offset: 256)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3593, file: !244, line: 582, baseType: !3611, size: 64, offset: 448)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3613, line: 43, size: 1472, elements: !3614)
!3613 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3614 = !{!3615, !3616, !3617, !3618, !3619, !3622, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3645, !3646, !3647}
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3612, file: !3613, line: 44, baseType: !421, size: 64)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3612, file: !3613, line: 45, baseType: !331, size: 32, offset: 64)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3612, file: !3613, line: 46, baseType: !414, size: 128, offset: 128)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3612, file: !3613, line: 47, baseType: !445, offset: 256)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3612, file: !3613, line: 48, baseType: !3620, size: 64, offset: 256)
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3621, size: 64)
!3621 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !244, line: 533, flags: DIFlagFwdDecl)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3612, file: !3613, line: 49, baseType: !3623, size: 320, offset: 320)
!3623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3624, line: 11, size: 320, elements: !3625)
!3624 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3625 = !{!3626, !3627, !3628, !3633}
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3623, file: !3624, line: 16, baseType: !844, size: 128)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3623, file: !3624, line: 17, baseType: !534, size: 64, offset: 128)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3623, file: !3624, line: 18, baseType: !3629, size: 64, offset: 192)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{null, !3632}
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3623, file: !3624, line: 19, baseType: !326, size: 32, offset: 256)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3612, file: !3613, line: 50, baseType: !534, size: 64, offset: 640)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3612, file: !3613, line: 51, baseType: !1414, size: 64, offset: 704)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3612, file: !3613, line: 52, baseType: !1414, size: 64, offset: 768)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3612, file: !3613, line: 53, baseType: !1414, size: 64, offset: 832)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3612, file: !3613, line: 54, baseType: !1414, size: 64, offset: 896)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3612, file: !3613, line: 55, baseType: !1414, size: 64, offset: 960)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3612, file: !3613, line: 56, baseType: !534, size: 64, offset: 1024)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3612, file: !3613, line: 57, baseType: !534, size: 64, offset: 1088)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3612, file: !3613, line: 58, baseType: !534, size: 64, offset: 1152)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3612, file: !3613, line: 59, baseType: !534, size: 64, offset: 1216)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3612, file: !3613, line: 60, baseType: !534, size: 64, offset: 1280)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3612, file: !3613, line: 61, baseType: !428, size: 64, offset: 1344)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3612, file: !3613, line: 62, baseType: !692, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3612, file: !3613, line: 63, baseType: !692, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3593, file: !244, line: 583, baseType: !692, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3593, file: !244, line: 584, baseType: !692, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3593, file: !244, line: 585, baseType: !692, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3593, file: !244, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3593, file: !244, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3593, file: !244, line: 592, baseType: !1406, size: 512, offset: 576)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3593, file: !244, line: 593, baseType: !335, size: 64, offset: 1088)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3593, file: !244, line: 594, baseType: !2069, size: 256, offset: 1152)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3593, file: !244, line: 595, baseType: !1594, size: 128, offset: 1408)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3593, file: !244, line: 596, baseType: !3620, size: 64, offset: 1536)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3593, file: !244, line: 597, baseType: !403, size: 32, offset: 1600)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3593, file: !244, line: 598, baseType: !403, size: 32, offset: 1632)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3593, file: !244, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3593, file: !244, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3593, file: !244, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3593, file: !244, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3593, file: !244, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3593, file: !244, line: 604, baseType: !692, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3593, file: !244, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3593, file: !244, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3593, file: !244, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3593, file: !244, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3593, file: !244, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3593, file: !244, line: 610, baseType: !7, size: 32, offset: 1696)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3593, file: !244, line: 611, baseType: !243, size: 32, offset: 1728)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3593, file: !244, line: 612, baseType: !251, size: 32, offset: 1760)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3593, file: !244, line: 613, baseType: !331, size: 32, offset: 1792)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3593, file: !244, line: 614, baseType: !331, size: 32, offset: 1824)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3593, file: !244, line: 615, baseType: !335, size: 64, offset: 1856)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3593, file: !244, line: 616, baseType: !335, size: 64, offset: 1920)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3593, file: !244, line: 617, baseType: !335, size: 64, offset: 1984)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3593, file: !244, line: 618, baseType: !335, size: 64, offset: 2048)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3593, file: !244, line: 620, baseType: !3681, size: 64, offset: 2112)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !244, line: 536, size: 256, elements: !3683)
!3683 = !{!3684, !3685, !3686, !3687}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3682, file: !244, line: 537, baseType: !445)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3682, file: !244, line: 538, baseType: !7, size: 32)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3682, file: !244, line: 540, baseType: !414, size: 128, offset: 64)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3682, file: !244, line: 543, baseType: !3688, size: 64, offset: 192)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !244, line: 534, flags: DIFlagFwdDecl)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3593, file: !244, line: 621, baseType: !3691, size: 64, offset: 2176)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{null, !428, !344}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3593, file: !244, line: 622, baseType: !3695, size: 64, offset: 2240)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !244, line: 622, flags: DIFlagFwdDecl)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !429, file: !237, line: 486, baseType: !3698, size: 64, offset: 4096)
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 64)
!3699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !244, line: 642, size: 1792, elements: !3700)
!3700 = !{!3701, !3702, !3703, !3707, !3708, !3709}
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3699, file: !244, line: 643, baseType: !3463, size: 1472)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3699, file: !244, line: 644, baseType: !3466, size: 64, offset: 1472)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3699, file: !244, line: 645, baseType: !3704, size: 64, offset: 1536)
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3705, size: 64)
!3705 = !DISubroutineType(types: !3706)
!3706 = !{null, !428, !692}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3699, file: !244, line: 646, baseType: !3466, size: 64, offset: 1600)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3699, file: !244, line: 647, baseType: !3457, size: 64, offset: 1664)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3699, file: !244, line: 648, baseType: !3457, size: 64, offset: 1728)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !429, file: !237, line: 493, baseType: !3711, size: 64, offset: 4160)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !258, line: 162, size: 1088, elements: !3713)
!3713 = !{!3714, !3715, !3716, !3889, !3890, !3891, !3892, !3893, !3894, !3897, !3898, !3899, !3900, !3901, !3902, !3903}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3712, file: !258, line: 163, baseType: !414, size: 128)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3712, file: !258, line: 164, baseType: !421, size: 64, offset: 128)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3712, file: !258, line: 165, baseType: !3717, size: 64, offset: 192)
!3717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3718, size: 64)
!3718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3719)
!3719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !258, line: 105, size: 640, elements: !3720)
!3720 = !{!3721, !3839, !3850, !3855, !3859, !3866, !3870, !3874, !3881, !3885}
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3719, file: !258, line: 106, baseType: !3722, size: 64)
!3722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3723, size: 64)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{!331, !3711, !3725, !257}
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3727, line: 51, size: 1344, elements: !3728)
!3727 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3728 = !{!3729, !3730, !3732, !3733, !3823, !3832, !3833, !3834, !3835, !3836, !3837, !3838}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3726, file: !3727, line: 52, baseType: !421, size: 64)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3726, file: !3727, line: 53, baseType: !3731, size: 32, offset: 64)
!3731 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3727, line: 28, baseType: !326)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3726, file: !3727, line: 54, baseType: !421, size: 64, offset: 128)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3726, file: !3727, line: 55, baseType: !3734, size: 192, offset: 192)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3735, line: 17, size: 192, elements: !3736)
!3735 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3736 = !{!3737, !3739, !3822}
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3734, file: !3735, line: 18, baseType: !3738, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3734, file: !3735, line: 19, baseType: !3740, size: 64, offset: 64)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3742)
!3742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3735, line: 110, size: 1152, elements: !3743)
!3743 = !{!3744, !3748, !3752, !3758, !3764, !3768, !3772, !3777, !3781, !3782, !3786, !3790, !3794, !3805, !3806, !3807, !3808, !3818}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3742, file: !3735, line: 111, baseType: !3745, size: 64)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 64)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{!3738, !3738}
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3742, file: !3735, line: 112, baseType: !3749, size: 64, offset: 64)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{null, !3738}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3742, file: !3735, line: 113, baseType: !3753, size: 64, offset: 128)
!3753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3754, size: 64)
!3754 = !DISubroutineType(types: !3755)
!3755 = !{!692, !3756}
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3734)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3742, file: !3735, line: 114, baseType: !3759, size: 64, offset: 192)
!3759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3760, size: 64)
!3760 = !DISubroutineType(types: !3761)
!3761 = !{!2239, !3756, !3762}
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !429)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3742, file: !3735, line: 116, baseType: !3765, size: 64, offset: 256)
!3765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3766, size: 64)
!3766 = !DISubroutineType(types: !3767)
!3767 = !{!692, !3756, !421}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3742, file: !3735, line: 118, baseType: !3769, size: 64, offset: 320)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{!331, !3756, !421, !7, !325, !531}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3742, file: !3735, line: 123, baseType: !3773, size: 64, offset: 384)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{!331, !3756, !421, !3776, !531}
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3742, file: !3735, line: 126, baseType: !3778, size: 64, offset: 448)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = !DISubroutineType(types: !3780)
!3780 = !{!421, !3756}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3742, file: !3735, line: 127, baseType: !3778, size: 64, offset: 512)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3742, file: !3735, line: 128, baseType: !3783, size: 64, offset: 576)
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = !DISubroutineType(types: !3785)
!3785 = !{!3738, !3756}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3742, file: !3735, line: 130, baseType: !3787, size: 64, offset: 640)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{!3738, !3756, !3738}
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3742, file: !3735, line: 133, baseType: !3791, size: 64, offset: 704)
!3791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3792, size: 64)
!3792 = !DISubroutineType(types: !3793)
!3793 = !{!3738, !3756, !421}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3742, file: !3735, line: 135, baseType: !3795, size: 64, offset: 768)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3796 = !DISubroutineType(types: !3797)
!3797 = !{!331, !3756, !421, !421, !7, !7, !3798}
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3735, line: 43, size: 640, elements: !3800)
!3800 = !{!3801, !3802, !3803}
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3799, file: !3735, line: 44, baseType: !3738, size: 64)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3799, file: !3735, line: 45, baseType: !7, size: 32, offset: 64)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3799, file: !3735, line: 46, baseType: !3804, size: 512, offset: 128)
!3804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 512, elements: !384)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3742, file: !3735, line: 140, baseType: !3787, size: 64, offset: 832)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3742, file: !3735, line: 143, baseType: !3783, size: 64, offset: 896)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3742, file: !3735, line: 145, baseType: !3745, size: 64, offset: 960)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3742, file: !3735, line: 146, baseType: !3809, size: 64, offset: 1024)
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = !DISubroutineType(types: !3811)
!3811 = !{!331, !3756, !3812}
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3735, line: 29, size: 128, elements: !3814)
!3814 = !{!3815, !3816, !3817}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3813, file: !3735, line: 30, baseType: !7, size: 32)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3813, file: !3735, line: 31, baseType: !7, size: 32, offset: 32)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3813, file: !3735, line: 32, baseType: !3756, size: 64, offset: 64)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3742, file: !3735, line: 148, baseType: !3819, size: 64, offset: 1088)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DISubroutineType(types: !3821)
!3821 = !{!331, !3756, !428}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3734, file: !3735, line: 20, baseType: !428, size: 64, offset: 128)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3726, file: !3727, line: 57, baseType: !3824, size: 64, offset: 384)
!3824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3825, size: 64)
!3825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3727, line: 31, size: 704, elements: !3826)
!3826 = !{!3827, !3828, !3829, !3830, !3831}
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3825, file: !3727, line: 32, baseType: !486, size: 64)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3825, file: !3727, line: 33, baseType: !331, size: 32, offset: 64)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3825, file: !3727, line: 34, baseType: !325, size: 64, offset: 128)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3825, file: !3727, line: 35, baseType: !3824, size: 64, offset: 192)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3825, file: !3727, line: 43, baseType: !553, size: 448, offset: 256)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3726, file: !3727, line: 58, baseType: !3824, size: 64, offset: 448)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3726, file: !3727, line: 59, baseType: !3725, size: 64, offset: 512)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3726, file: !3727, line: 60, baseType: !3725, size: 64, offset: 576)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3726, file: !3727, line: 61, baseType: !3725, size: 64, offset: 640)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3726, file: !3727, line: 63, baseType: !432, size: 512, offset: 704)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3726, file: !3727, line: 65, baseType: !534, size: 64, offset: 1216)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3726, file: !3727, line: 66, baseType: !325, size: 64, offset: 1280)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3719, file: !258, line: 108, baseType: !3840, size: 64, offset: 64)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!331, !3711, !3843, !257}
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !258, line: 63, size: 640, elements: !3845)
!3845 = !{!3846, !3847, !3848}
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3844, file: !258, line: 64, baseType: !3738, size: 64)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3844, file: !258, line: 65, baseType: !331, size: 32, offset: 64)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3844, file: !258, line: 66, baseType: !3849, size: 512, offset: 96)
!3849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !326, size: 512, elements: !1845)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3719, file: !258, line: 110, baseType: !3851, size: 64, offset: 128)
!3851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3852, size: 64)
!3852 = !DISubroutineType(types: !3853)
!3853 = !{!331, !3711, !7, !3854}
!3854 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !324, line: 164, baseType: !534)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3719, file: !258, line: 111, baseType: !3856, size: 64, offset: 192)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DISubroutineType(types: !3858)
!3858 = !{null, !3711, !7}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3719, file: !258, line: 112, baseType: !3860, size: 64, offset: 256)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{!331, !3711, !3725, !3863, !7, !3865, !2734}
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3719, file: !258, line: 117, baseType: !3867, size: 64, offset: 320)
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = !DISubroutineType(types: !3869)
!3869 = !{!331, !3711, !7, !7, !325}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3719, file: !258, line: 119, baseType: !3871, size: 64, offset: 384)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3872, size: 64)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{null, !3711, !7, !7}
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3719, file: !258, line: 121, baseType: !3875, size: 64, offset: 448)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DISubroutineType(types: !3877)
!3877 = !{!331, !3711, !3878, !692}
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3880, line: 11, flags: DIFlagFwdDecl)
!3880 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3719, file: !258, line: 122, baseType: !3882, size: 64, offset: 512)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{null, !3711, !3878}
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3719, file: !258, line: 123, baseType: !3886, size: 64, offset: 576)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = !DISubroutineType(types: !3888)
!3888 = !{!331, !3711, !3843, !3865, !2734}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3712, file: !258, line: 166, baseType: !325, size: 64, offset: 256)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3712, file: !258, line: 167, baseType: !7, size: 32, offset: 320)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3712, file: !258, line: 168, baseType: !7, size: 32, offset: 352)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3712, file: !258, line: 171, baseType: !3738, size: 64, offset: 384)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3712, file: !258, line: 172, baseType: !257, size: 32, offset: 448)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3712, file: !258, line: 173, baseType: !3895, size: 64, offset: 512)
!3895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3896, size: 64)
!3896 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !258, line: 134, flags: DIFlagFwdDecl)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3712, file: !258, line: 175, baseType: !3711, size: 64, offset: 576)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3712, file: !258, line: 182, baseType: !3854, size: 64, offset: 640)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3712, file: !258, line: 183, baseType: !7, size: 32, offset: 704)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3712, file: !258, line: 184, baseType: !7, size: 32, offset: 736)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3712, file: !258, line: 185, baseType: !944, size: 128, offset: 768)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3712, file: !258, line: 186, baseType: !1292, size: 192, offset: 896)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3712, file: !258, line: 187, baseType: !3904, offset: 1088)
!3904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2443)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !429, file: !237, line: 499, baseType: !414, size: 128, offset: 4224)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !429, file: !237, line: 502, baseType: !3907, size: 64, offset: 4352)
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3909)
!3909 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !237, line: 502, flags: DIFlagFwdDecl)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !429, file: !237, line: 504, baseType: !3911, size: 64, offset: 4416)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !429, file: !237, line: 505, baseType: !335, size: 64, offset: 4480)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !429, file: !237, line: 510, baseType: !335, size: 64, offset: 4544)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !429, file: !237, line: 511, baseType: !3915, size: 64, offset: 4608)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3917)
!3917 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !237, line: 511, flags: DIFlagFwdDecl)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !429, file: !237, line: 513, baseType: !3919, size: 64, offset: 4672)
!3919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3920, size: 64)
!3920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !237, line: 288, size: 128, elements: !3921)
!3921 = !{!3922, !3923}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3920, file: !237, line: 293, baseType: !7, size: 32)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3920, file: !237, line: 294, baseType: !534, size: 64, offset: 64)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !429, file: !237, line: 515, baseType: !414, size: 128, offset: 4736)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !429, file: !237, line: 526, baseType: !3926, offset: 4864)
!3926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3927, line: 5, elements: !459)
!3927 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !429, file: !237, line: 528, baseType: !3725, size: 64, offset: 4864)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !429, file: !237, line: 529, baseType: !3738, size: 64, offset: 4928)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !429, file: !237, line: 534, baseType: !715, size: 32, offset: 4992)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !429, file: !237, line: 535, baseType: !326, size: 32, offset: 5024)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !429, file: !237, line: 537, baseType: !445, offset: 5056)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !429, file: !237, line: 538, baseType: !414, size: 128, offset: 5056)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !429, file: !237, line: 540, baseType: !3935, size: 64, offset: 5184)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3937, line: 54, size: 960, elements: !3938)
!3937 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3938 = !{!3939, !3940, !3941, !3942, !3943, !3944, !3945, !3949, !3953, !3954, !3955, !3956, !3960, !3964, !3965}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3936, file: !3937, line: 55, baseType: !421, size: 64)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3936, file: !3937, line: 56, baseType: !835, size: 64, offset: 64)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3936, file: !3937, line: 58, baseType: !538, size: 64, offset: 128)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3936, file: !3937, line: 59, baseType: !538, size: 64, offset: 192)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3936, file: !3937, line: 60, baseType: !438, size: 64, offset: 256)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3936, file: !3937, line: 62, baseType: !3448, size: 64, offset: 320)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3936, file: !3937, line: 63, baseType: !3946, size: 64, offset: 384)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!486, !428, !3455}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3936, file: !3937, line: 65, baseType: !3950, size: 64, offset: 448)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{null, !3935}
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3936, file: !3937, line: 66, baseType: !3457, size: 64, offset: 512)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3936, file: !3937, line: 68, baseType: !3466, size: 64, offset: 576)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3936, file: !3937, line: 70, baseType: !3256, size: 64, offset: 640)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3936, file: !3937, line: 71, baseType: !3957, size: 64, offset: 704)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = !DISubroutineType(types: !3959)
!3959 = !{!2239, !428}
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3936, file: !3937, line: 73, baseType: !3961, size: 64, offset: 768)
!3961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3962, size: 64)
!3962 = !DISubroutineType(types: !3963)
!3963 = !{null, !428, !3288, !3289}
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3936, file: !3937, line: 75, baseType: !3461, size: 64, offset: 832)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3936, file: !3937, line: 77, baseType: !3575, size: 64, offset: 896)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !429, file: !237, line: 541, baseType: !538, size: 64, offset: 5248)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !429, file: !237, line: 543, baseType: !3457, size: 64, offset: 5312)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !429, file: !237, line: 544, baseType: !3969, size: 64, offset: 5376)
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3970, size: 64)
!3970 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !237, line: 45, flags: DIFlagFwdDecl)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !429, file: !237, line: 545, baseType: !3972, size: 64, offset: 5440)
!3972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3973, size: 64)
!3973 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !237, line: 47, flags: DIFlagFwdDecl)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !429, file: !237, line: 547, baseType: !692, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !429, file: !237, line: 548, baseType: !692, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !429, file: !237, line: 549, baseType: !692, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !429, file: !237, line: 550, baseType: !692, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !410, file: !272, line: 111, baseType: !835, size: 64, offset: 576)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_shared", scope: !410, file: !272, line: 113, baseType: !331, size: 32, offset: 640)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_dvbdev", scope: !410, file: !272, line: 114, baseType: !3981, size: 64, offset: 704)
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3982, size: 64)
!3982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_device", file: !272, line: 157, size: 704, elements: !3983)
!3983 = !{!3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3998}
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "list_head", scope: !3982, file: !272, line: 158, baseType: !414, size: 128)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3982, file: !272, line: 159, baseType: !2914, size: 64, offset: 128)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "adapter", scope: !3982, file: !272, line: 160, baseType: !409, size: 64, offset: 192)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3982, file: !272, line: 161, baseType: !271, size: 32, offset: 256)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3982, file: !272, line: 162, baseType: !331, size: 32, offset: 288)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3982, file: !272, line: 163, baseType: !326, size: 32, offset: 320)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !3982, file: !272, line: 167, baseType: !331, size: 32, offset: 352)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !3982, file: !272, line: 168, baseType: !331, size: 32, offset: 384)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !3982, file: !272, line: 169, baseType: !331, size: 32, offset: 416)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3982, file: !272, line: 171, baseType: !1594, size: 128, offset: 448)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "kernel_ioctl", scope: !3982, file: !272, line: 173, baseType: !3995, size: 64, offset: 576)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{!331, !562, !7, !325}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3982, file: !272, line: 187, baseType: !325, size: 64, offset: 640)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_lock", scope: !410, file: !272, line: 115, baseType: !1292, size: 192, offset: 768)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "demodulator_priv", scope: !391, file: !51, line: 690, baseType: !325, size: 64, offset: 6144)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_priv", scope: !391, file: !51, line: 691, baseType: !325, size: 64, offset: 6208)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "frontend_priv", scope: !391, file: !51, line: 692, baseType: !325, size: 64, offset: 6272)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "sec_priv", scope: !391, file: !51, line: 693, baseType: !325, size: 64, offset: 6336)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "analog_demod_priv", scope: !391, file: !51, line: 694, baseType: !325, size: 64, offset: 6400)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "dtv_property_cache", scope: !391, file: !51, line: 695, baseType: !4006, size: 3648, offset: 6464)
!4006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_frontend_properties", file: !51, line: 586, size: 3648, elements: !4007)
!4007 = !{!4008, !4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4071, !4072, !4073, !4074, !4075, !4076, !4077}
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !4006, file: !51, line: 587, baseType: !326, size: 32)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !4006, file: !51, line: 588, baseType: !57, size: 32, offset: 32)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "voltage", scope: !4006, file: !51, line: 590, baseType: !73, size: 32, offset: 64)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "sectone", scope: !4006, file: !51, line: 591, baseType: !78, size: 32, offset: 96)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "inversion", scope: !4006, file: !51, line: 592, baseType: !82, size: 32, offset: 128)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "fec_inner", scope: !4006, file: !51, line: 593, baseType: !87, size: 32, offset: 160)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_mode", scope: !4006, file: !51, line: 594, baseType: !102, size: 32, offset: 192)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_hz", scope: !4006, file: !51, line: 595, baseType: !326, size: 32, offset: 224)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "guard_interval", scope: !4006, file: !51, line: 596, baseType: !113, size: 32, offset: 256)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "hierarchy", scope: !4006, file: !51, line: 597, baseType: !126, size: 32, offset: 288)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate", scope: !4006, file: !51, line: 598, baseType: !326, size: 32, offset: 320)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "code_rate_HP", scope: !4006, file: !51, line: 599, baseType: !87, size: 32, offset: 352)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "code_rate_LP", scope: !4006, file: !51, line: 600, baseType: !87, size: 32, offset: 384)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "pilot", scope: !4006, file: !51, line: 602, baseType: !133, size: 32, offset: 416)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "rolloff", scope: !4006, file: !51, line: 603, baseType: !138, size: 32, offset: 448)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "delivery_system", scope: !4006, file: !51, line: 605, baseType: !144, size: 32, offset: 480)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "interleaving", scope: !4006, file: !51, line: 607, baseType: !165, size: 32, offset: 512)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_partial_reception", scope: !4006, file: !51, line: 610, baseType: !332, size: 8, offset: 544)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_mode", scope: !4006, file: !51, line: 611, baseType: !332, size: 8, offset: 552)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_subchannel", scope: !4006, file: !51, line: 612, baseType: !332, size: 8, offset: 560)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_segment_idx", scope: !4006, file: !51, line: 613, baseType: !326, size: 32, offset: 576)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_segment_count", scope: !4006, file: !51, line: 614, baseType: !326, size: 32, offset: 608)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_layer_enabled", scope: !4006, file: !51, line: 615, baseType: !332, size: 8, offset: 640)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !4006, file: !51, line: 621, baseType: !4032, size: 384, offset: 672)
!4032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4033, size: 384, elements: !487)
!4033 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4006, file: !51, line: 616, size: 128, elements: !4034)
!4034 = !{!4035, !4036, !4037, !4038}
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "segment_count", scope: !4033, file: !51, line: 617, baseType: !332, size: 8)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !4033, file: !51, line: 618, baseType: !87, size: 32, offset: 32)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !4033, file: !51, line: 619, baseType: !57, size: 32, offset: 64)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "interleaving", scope: !4033, file: !51, line: 620, baseType: !332, size: 8, offset: 96)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !4006, file: !51, line: 624, baseType: !326, size: 32, offset: 1056)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "scrambling_sequence_index", scope: !4006, file: !51, line: 627, baseType: !326, size: 32, offset: 1088)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_fic_ver", scope: !4006, file: !51, line: 630, baseType: !332, size: 8, offset: 1120)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_parade_id", scope: !4006, file: !51, line: 631, baseType: !332, size: 8, offset: 1128)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_nog", scope: !4006, file: !51, line: 632, baseType: !332, size: 8, offset: 1136)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_tnog", scope: !4006, file: !51, line: 633, baseType: !332, size: 8, offset: 1144)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sgn", scope: !4006, file: !51, line: 634, baseType: !332, size: 8, offset: 1152)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_prc", scope: !4006, file: !51, line: 635, baseType: !332, size: 8, offset: 1160)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_frame_mode", scope: !4006, file: !51, line: 637, baseType: !332, size: 8, offset: 1168)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_frame_ensemble", scope: !4006, file: !51, line: 638, baseType: !332, size: 8, offset: 1176)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_code_mode_pri", scope: !4006, file: !51, line: 639, baseType: !332, size: 8, offset: 1184)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_code_mode_sec", scope: !4006, file: !51, line: 640, baseType: !332, size: 8, offset: 1192)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_block_mode", scope: !4006, file: !51, line: 641, baseType: !332, size: 8, offset: 1200)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_a", scope: !4006, file: !51, line: 642, baseType: !332, size: 8, offset: 1208)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_b", scope: !4006, file: !51, line: 643, baseType: !332, size: 8, offset: 1216)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_c", scope: !4006, file: !51, line: 644, baseType: !332, size: 8, offset: 1224)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_d", scope: !4006, file: !51, line: 645, baseType: !332, size: 8, offset: 1232)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "lna", scope: !4006, file: !51, line: 647, baseType: !326, size: 32, offset: 1248)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !4006, file: !51, line: 650, baseType: !4058, size: 296, offset: 1280)
!4058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_fe_stats", file: !6, line: 825, size: 296, elements: !4059)
!4059 = !{!4060, !4061}
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4058, file: !6, line: 826, baseType: !333, size: 8)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !4058, file: !6, line: 827, baseType: !4062, size: 288, offset: 8)
!4062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4063, size: 288, elements: !1274)
!4063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_stats", file: !6, line: 803, size: 72, elements: !4064)
!4064 = !{!4065, !4066}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !4063, file: !6, line: 804, baseType: !333, size: 8)
!4066 = !DIDerivedType(tag: DW_TAG_member, scope: !4063, file: !6, line: 805, baseType: !4067, size: 64, offset: 8)
!4067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4063, file: !6, line: 805, size: 64, elements: !4068)
!4068 = !{!4069, !4070}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "uvalue", scope: !4067, file: !6, line: 806, baseType: !336, size: 64)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "svalue", scope: !4067, file: !6, line: 807, baseType: !742, size: 64)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "cnr", scope: !4006, file: !51, line: 651, baseType: !4058, size: 296, offset: 1576)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "pre_bit_error", scope: !4006, file: !51, line: 652, baseType: !4058, size: 296, offset: 1872)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "pre_bit_count", scope: !4006, file: !51, line: 653, baseType: !4058, size: 296, offset: 2168)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "post_bit_error", scope: !4006, file: !51, line: 654, baseType: !4058, size: 296, offset: 2464)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "post_bit_count", scope: !4006, file: !51, line: 655, baseType: !4058, size: 296, offset: 2760)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "block_error", scope: !4006, file: !51, line: 656, baseType: !4058, size: 296, offset: 3056)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "block_count", scope: !4006, file: !51, line: 657, baseType: !4058, size: 296, offset: 3352)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !391, file: !51, line: 698, baseType: !4079, size: 64, offset: 10112)
!4079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4080, size: 64)
!4080 = !DISubroutineType(types: !4081)
!4081 = !{!331, !325, !331, !331, !331}
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !391, file: !51, line: 699, baseType: !331, size: 32, offset: 10176)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !391, file: !51, line: 700, baseType: !7, size: 32, offset: 10208)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !365, file: !51, line: 441, baseType: !387, size: 64, offset: 1408)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "release_sec", scope: !365, file: !51, line: 442, baseType: !387, size: 64, offset: 1472)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !365, file: !51, line: 444, baseType: !4087, size: 64, offset: 1536)
!4087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4088, size: 64)
!4088 = !DISubroutineType(types: !4089)
!4089 = !{!331, !390}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !365, file: !51, line: 445, baseType: !4087, size: 64, offset: 1600)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !365, file: !51, line: 447, baseType: !4092, size: 64, offset: 1664)
!4092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4093, size: 64)
!4093 = !DISubroutineType(types: !4094)
!4094 = !{!331, !390, !4095, !331}
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !332)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !365, file: !51, line: 450, baseType: !4098, size: 64, offset: 1728)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4099, size: 64)
!4099 = !DISubroutineType(types: !4100)
!4100 = !{!331, !390, !692, !7, !2734, !4101}
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "get_frontend_algo", scope: !365, file: !51, line: 457, baseType: !4103, size: 64, offset: 1792)
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4104, size: 64)
!4104 = !DISubroutineType(types: !4105)
!4105 = !{!50, !390}
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "set_frontend", scope: !365, file: !51, line: 460, baseType: !4087, size: 64, offset: 1856)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "get_tune_settings", scope: !365, file: !51, line: 461, baseType: !4108, size: 64, offset: 1920)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{!331, !390, !4111}
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_tune_settings", file: !51, line: 69, size: 96, elements: !4113)
!4113 = !{!4114, !4115, !4116}
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "min_delay_ms", scope: !4112, file: !51, line: 70, baseType: !331, size: 32)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "step_size", scope: !4112, file: !51, line: 71, baseType: !331, size: 32, offset: 32)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "max_drift", scope: !4112, file: !51, line: 72, baseType: !331, size: 32, offset: 64)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "get_frontend", scope: !365, file: !51, line: 463, baseType: !4118, size: 64, offset: 1984)
!4118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4119, size: 64)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{!331, !390, !4121}
!4121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "read_status", scope: !365, file: !51, line: 466, baseType: !4123, size: 64, offset: 2048)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!331, !390, !4101}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "read_ber", scope: !365, file: !51, line: 467, baseType: !4127, size: 64, offset: 2112)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!331, !390, !1525}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "read_signal_strength", scope: !365, file: !51, line: 468, baseType: !4131, size: 64, offset: 2176)
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{!331, !390, !4134}
!4134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "read_snr", scope: !365, file: !51, line: 469, baseType: !4131, size: 64, offset: 2240)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "read_ucblocks", scope: !365, file: !51, line: 470, baseType: !4127, size: 64, offset: 2304)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_reset_overload", scope: !365, file: !51, line: 472, baseType: !4087, size: 64, offset: 2368)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_send_master_cmd", scope: !365, file: !51, line: 473, baseType: !4139, size: 64, offset: 2432)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!331, !390, !4142}
!4142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4143, size: 64)
!4143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_diseqc_master_cmd", file: !6, line: 173, size: 56, elements: !4144)
!4144 = !{!4145, !4147}
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4143, file: !6, line: 174, baseType: !4146, size: 48)
!4146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 48, elements: !424)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !4143, file: !6, line: 175, baseType: !333, size: 8, offset: 48)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_recv_slave_reply", scope: !365, file: !51, line: 474, baseType: !4149, size: 64, offset: 2496)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!331, !390, !4152}
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4153, size: 64)
!4153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_diseqc_slave_reply", file: !6, line: 195, size: 96, elements: !4154)
!4154 = !{!4155, !4157, !4158}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4153, file: !6, line: 196, baseType: !4156, size: 32)
!4156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 32, elements: !1274)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !4153, file: !6, line: 197, baseType: !333, size: 8, offset: 32)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4153, file: !6, line: 198, baseType: !331, size: 32, offset: 64)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_send_burst", scope: !365, file: !51, line: 475, baseType: !4160, size: 64, offset: 2560)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4161, size: 64)
!4161 = !DISubroutineType(types: !4162)
!4162 = !{!331, !390, !171}
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "set_tone", scope: !365, file: !51, line: 477, baseType: !4164, size: 64, offset: 2624)
!4164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4165, size: 64)
!4165 = !DISubroutineType(types: !4166)
!4166 = !{!331, !390, !78}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "set_voltage", scope: !365, file: !51, line: 478, baseType: !4168, size: 64, offset: 2688)
!4168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4169, size: 64)
!4169 = !DISubroutineType(types: !4170)
!4170 = !{!331, !390, !73}
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "enable_high_lnb_voltage", scope: !365, file: !51, line: 480, baseType: !4172, size: 64, offset: 2752)
!4172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4173, size: 64)
!4173 = !DISubroutineType(types: !4174)
!4174 = !{!331, !390, !339}
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "dishnetwork_send_legacy_command", scope: !365, file: !51, line: 481, baseType: !4176, size: 64, offset: 2816)
!4176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4177, size: 64)
!4177 = !DISubroutineType(types: !4178)
!4178 = !{!331, !390, !534}
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_gate_ctrl", scope: !365, file: !51, line: 482, baseType: !4180, size: 64, offset: 2880)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DISubroutineType(types: !4182)
!4182 = !{!331, !390, !331}
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "ts_bus_ctrl", scope: !365, file: !51, line: 483, baseType: !4180, size: 64, offset: 2944)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "set_lna", scope: !365, file: !51, line: 484, baseType: !4087, size: 64, offset: 3008)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "search", scope: !365, file: !51, line: 490, baseType: !4186, size: 64, offset: 3072)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{!175, !390}
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_ops", scope: !365, file: !51, line: 492, baseType: !4190, size: 2304, offset: 3136)
!4190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_tuner_ops", file: !51, line: 226, size: 2304, elements: !4191)
!4191 = !{!4192, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4219, !4223, !4224, !4225, !4226, !4227, !4228, !4233, !4238, !4242}
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4190, file: !51, line: 228, baseType: !4193, size: 1216)
!4193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_tuner_info", file: !51, line: 88, size: 1216, elements: !4194)
!4194 = !{!4195, !4196, !4197, !4198, !4199, !4200, !4201}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4193, file: !51, line: 89, baseType: !371, size: 1024)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_min_hz", scope: !4193, file: !51, line: 91, baseType: !326, size: 32, offset: 1024)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_max_hz", scope: !4193, file: !51, line: 92, baseType: !326, size: 32, offset: 1056)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_step_hz", scope: !4193, file: !51, line: 93, baseType: !326, size: 32, offset: 1088)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_min", scope: !4193, file: !51, line: 95, baseType: !326, size: 32, offset: 1120)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_max", scope: !4193, file: !51, line: 96, baseType: !326, size: 32, offset: 1152)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_step", scope: !4193, file: !51, line: 97, baseType: !326, size: 32, offset: 1184)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4190, file: !51, line: 230, baseType: !387, size: 64, offset: 1216)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !4190, file: !51, line: 231, baseType: !4087, size: 64, offset: 1280)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !4190, file: !51, line: 232, baseType: !4087, size: 64, offset: 1344)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4190, file: !51, line: 233, baseType: !4087, size: 64, offset: 1408)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4190, file: !51, line: 234, baseType: !4087, size: 64, offset: 1472)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "set_params", scope: !4190, file: !51, line: 237, baseType: !4087, size: 64, offset: 1536)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "set_analog_params", scope: !4190, file: !51, line: 238, baseType: !4209, size: 64, offset: 1600)
!4209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4210, size: 64)
!4210 = !DISubroutineType(types: !4211)
!4211 = !{!331, !390, !4212}
!4212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4213, size: 64)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_parameters", file: !51, line: 114, size: 192, elements: !4214)
!4214 = !{!4215, !4216, !4217, !4218}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !4213, file: !51, line: 115, baseType: !7, size: 32)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4213, file: !51, line: 116, baseType: !7, size: 32, offset: 32)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "audmode", scope: !4213, file: !51, line: 117, baseType: !7, size: 32, offset: 64)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "std", scope: !4213, file: !51, line: 118, baseType: !335, size: 64, offset: 128)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !4190, file: !51, line: 240, baseType: !4220, size: 64, offset: 1664)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = !DISubroutineType(types: !4222)
!4222 = !{!331, !390, !325}
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "get_frequency", scope: !4190, file: !51, line: 242, baseType: !4127, size: 64, offset: 1728)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "get_bandwidth", scope: !4190, file: !51, line: 243, baseType: !4127, size: 64, offset: 1792)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "get_if_frequency", scope: !4190, file: !51, line: 244, baseType: !4127, size: 64, offset: 1856)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !4190, file: !51, line: 248, baseType: !4127, size: 64, offset: 1920)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "get_rf_strength", scope: !4190, file: !51, line: 249, baseType: !4131, size: 64, offset: 1984)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "get_afc", scope: !4190, file: !51, line: 250, baseType: !4229, size: 64, offset: 2048)
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4230, size: 64)
!4230 = !DISubroutineType(types: !4231)
!4231 = !{!331, !390, !4232}
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "calc_regs", scope: !4190, file: !51, line: 258, baseType: !4234, size: 64, offset: 2112)
!4234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4235, size: 64)
!4235 = !DISubroutineType(types: !4236)
!4236 = !{!331, !390, !4237, !331}
!4237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "set_frequency", scope: !4190, file: !51, line: 267, baseType: !4239, size: 64, offset: 2176)
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64)
!4240 = !DISubroutineType(types: !4241)
!4241 = !{!331, !390, !326}
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "set_bandwidth", scope: !4190, file: !51, line: 268, baseType: !4239, size: 64, offset: 2240)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "analog_ops", scope: !365, file: !51, line: 493, baseType: !4244, size: 576, offset: 5440)
!4244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_demod_ops", file: !51, line: 302, size: 576, elements: !4245)
!4245 = !{!4246, !4250, !4254, !4255, !4256, !4257, !4258, !4259, !4260}
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4244, file: !51, line: 304, baseType: !4247, size: 64)
!4247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_demod_info", file: !51, line: 276, size: 64, elements: !4248)
!4248 = !{!4249}
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4247, file: !51, line: 277, baseType: !486, size: 64)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "set_params", scope: !4244, file: !51, line: 306, baseType: !4251, size: 64, offset: 64)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = !DISubroutineType(types: !4253)
!4253 = !{null, !390, !4212}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "has_signal", scope: !4244, file: !51, line: 308, baseType: !4131, size: 64, offset: 128)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "get_afc", scope: !4244, file: !51, line: 309, baseType: !4229, size: 64, offset: 192)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_status", scope: !4244, file: !51, line: 310, baseType: !387, size: 64, offset: 256)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "standby", scope: !4244, file: !51, line: 311, baseType: !387, size: 64, offset: 320)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4244, file: !51, line: 312, baseType: !387, size: 64, offset: 384)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_gate_ctrl", scope: !4244, file: !51, line: 313, baseType: !4180, size: 64, offset: 448)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !4244, file: !51, line: 316, baseType: !4220, size: 64, offset: 512)
!4261 = !DIGlobalVariableExpression(var: !4262, expr: !DIExpression())
!4262 = distinct !DIGlobalVariable(name: "nominalRate8bw", scope: !4263, file: !3, line: 2421, type: !4409, isLocal: true, isDefinition: true)
!4263 = distinct !DISubprogram(name: "cxd2841er_sleep_tc_to_active_t_band", scope: !3, file: !3, line: 2416, type: !4264, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4264 = !DISubroutineType(types: !4265)
!4265 = !{!331, !4266, !326}
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cxd2841er_priv", file: !3, line: 52, size: 10688, elements: !4268)
!4268 = !{!4269, !4270, !4393, !4394, !4395, !4403, !4404, !4405, !4406, !4407, !4408}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "frontend", scope: !4267, file: !3, line: 53, baseType: !391, size: 10240)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "i2c", scope: !4267, file: !3, line: 54, baseType: !4271, size: 64, offset: 10240)
!4271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4272, size: 64)
!4272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter", file: !4273, line: 695, size: 7552, elements: !4274)
!4273 = !DIFile(filename: "./include/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!4274 = !{!4275, !4276, !4277, !4314, !4315, !4329, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4346, !4347, !4348, !4349, !4381, !4392}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4272, file: !4273, line: 696, baseType: !835, size: 64)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4272, file: !4273, line: 697, baseType: !7, size: 32, offset: 64)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !4272, file: !4273, line: 698, baseType: !4278, size: 64, offset: 128)
!4278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4279, size: 64)
!4279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4280)
!4280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_algorithm", file: !4273, line: 519, size: 320, elements: !4281)
!4281 = !{!4282, !4295, !4296, !4309, !4310}
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer", scope: !4280, file: !4273, line: 529, baseType: !4283, size: 64)
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{!331, !4271, !4286, !331}
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_msg", file: !4288, line: 69, size: 128, elements: !4289)
!4288 = !DIFile(filename: "./include/uapi/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!4289 = !{!4290, !4291, !4292, !4293}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4287, file: !4288, line: 70, baseType: !341, size: 16)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4287, file: !4288, line: 71, baseType: !341, size: 16, offset: 16)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4287, file: !4288, line: 84, baseType: !341, size: 16, offset: 32)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4287, file: !4288, line: 85, baseType: !4294, size: 64, offset: 64)
!4294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer_atomic", scope: !4280, file: !4273, line: 531, baseType: !4283, size: 64, offset: 64)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer", scope: !4280, file: !4273, line: 533, baseType: !4297, size: 64, offset: 128)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{!331, !4271, !340, !342, !350, !332, !331, !4300}
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "i2c_smbus_data", file: !4288, line: 135, size: 272, elements: !4302)
!4302 = !{!4303, !4304, !4305}
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !4301, file: !4288, line: 136, baseType: !333, size: 8)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !4301, file: !4288, line: 137, baseType: !341, size: 16)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4301, file: !4288, line: 138, baseType: !4306, size: 272)
!4306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !333, size: 272, elements: !4307)
!4307 = !{!4308}
!4308 = !DISubrange(count: 34)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer_atomic", scope: !4280, file: !4273, line: 536, baseType: !4297, size: 64, offset: 192)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "functionality", scope: !4280, file: !4273, line: 541, baseType: !4311, size: 64, offset: 256)
!4311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4312, size: 64)
!4312 = !DISubroutineType(types: !4313)
!4313 = !{!326, !4271}
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "algo_data", scope: !4272, file: !4273, line: 699, baseType: !325, size: 64, offset: 192)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "lock_ops", scope: !4272, file: !4273, line: 702, baseType: !4316, size: 64, offset: 256)
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4317, size: 64)
!4317 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4318)
!4318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_lock_operations", file: !4273, line: 557, size: 192, elements: !4319)
!4319 = !{!4320, !4324, !4328}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "lock_bus", scope: !4318, file: !4273, line: 558, baseType: !4321, size: 64)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{null, !4271, !7}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "trylock_bus", scope: !4318, file: !4273, line: 559, baseType: !4325, size: 64, offset: 64)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!331, !4271, !7}
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_bus", scope: !4318, file: !4273, line: 560, baseType: !4321, size: 64, offset: 128)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock", scope: !4272, file: !4273, line: 703, baseType: !4330, size: 192, offset: 320)
!4330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex", file: !4331, line: 30, size: 192, elements: !4332)
!4331 = !DIFile(filename: "./include/linux/rtmutex.h", directory: "/home/lizy2001/genbc/linux")
!4332 = !{!4333, !4334, !4335}
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !4330, file: !4331, line: 31, baseType: !981)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4330, file: !4331, line: 32, baseType: !953, size: 128)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4330, file: !4331, line: 33, baseType: !1335, size: 64, offset: 128)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "mux_lock", scope: !4272, file: !4273, line: 704, baseType: !4330, size: 192, offset: 512)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4272, file: !4273, line: 706, baseType: !331, size: 32, offset: 704)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !4272, file: !4273, line: 707, baseType: !331, size: 32, offset: 736)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4272, file: !4273, line: 708, baseType: !429, size: 5568, offset: 768)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "locked_flags", scope: !4272, file: !4273, line: 709, baseType: !534, size: 64, offset: 6336)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !4272, file: !4273, line: 713, baseType: !331, size: 32, offset: 6400)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4272, file: !4273, line: 714, baseType: !4343, size: 384, offset: 6432)
!4343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !350, size: 384, elements: !4344)
!4344 = !{!4345}
!4345 = !DISubrange(count: 48)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "dev_released", scope: !4272, file: !4273, line: 715, baseType: !1615, size: 192, offset: 6848)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients_lock", scope: !4272, file: !4273, line: 717, baseType: !1292, size: 192, offset: 7040)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients", scope: !4272, file: !4273, line: 718, baseType: !414, size: 128, offset: 7232)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "bus_recovery_info", scope: !4272, file: !4273, line: 720, baseType: !4350, size: 64, offset: 7360)
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4351, size: 64)
!4351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_bus_recovery_info", file: !4273, line: 618, size: 832, elements: !4352)
!4352 = !{!4353, !4357, !4358, !4362, !4363, !4364, !4365, !4369, !4370, !4373, !4374, !4377, !4380}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "recover_bus", scope: !4351, file: !4273, line: 619, baseType: !4354, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4355, size: 64)
!4355 = !DISubroutineType(types: !4356)
!4356 = !{!331, !4271}
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "get_scl", scope: !4351, file: !4273, line: 621, baseType: !4354, size: 64, offset: 64)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "set_scl", scope: !4351, file: !4273, line: 622, baseType: !4359, size: 64, offset: 128)
!4359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4360, size: 64)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{null, !4271, !331}
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "get_sda", scope: !4351, file: !4273, line: 623, baseType: !4354, size: 64, offset: 192)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "set_sda", scope: !4351, file: !4273, line: 624, baseType: !4359, size: 64, offset: 256)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "get_bus_free", scope: !4351, file: !4273, line: 625, baseType: !4354, size: 64, offset: 320)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_recovery", scope: !4351, file: !4273, line: 627, baseType: !4366, size: 64, offset: 384)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4367 = !DISubroutineType(types: !4368)
!4368 = !{null, !4271}
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_recovery", scope: !4351, file: !4273, line: 628, baseType: !4366, size: 64, offset: 448)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "scl_gpiod", scope: !4351, file: !4273, line: 631, baseType: !4371, size: 64, offset: 512)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !4273, line: 631, flags: DIFlagFwdDecl)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "sda_gpiod", scope: !4351, file: !4273, line: 632, baseType: !4371, size: 64, offset: 576)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "pinctrl", scope: !4351, file: !4273, line: 633, baseType: !4375, size: 64, offset: 640)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl", file: !4273, line: 633, flags: DIFlagFwdDecl)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "pins_default", scope: !4351, file: !4273, line: 634, baseType: !4378, size: 64, offset: 704)
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !4273, line: 634, flags: DIFlagFwdDecl)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "pins_gpio", scope: !4351, file: !4273, line: 635, baseType: !4378, size: 64, offset: 768)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !4272, file: !4273, line: 721, baseType: !4382, size: 64, offset: 7424)
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4383, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4384)
!4384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter_quirks", file: !4273, line: 664, size: 192, elements: !4385)
!4385 = !{!4386, !4387, !4388, !4389, !4390, !4391}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4384, file: !4273, line: 665, baseType: !335, size: 64)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_msgs", scope: !4384, file: !4273, line: 666, baseType: !331, size: 32, offset: 64)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_len", scope: !4384, file: !4273, line: 667, baseType: !340, size: 16, offset: 96)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "max_read_len", scope: !4384, file: !4273, line: 668, baseType: !340, size: 16, offset: 112)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_1st_msg_len", scope: !4384, file: !4273, line: 669, baseType: !340, size: 16, offset: 128)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_2nd_msg_len", scope: !4384, file: !4273, line: 670, baseType: !340, size: 16, offset: 144)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "host_notify_domain", scope: !4272, file: !4273, line: 723, baseType: !3711, size: 64, offset: 7488)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_addr_slvx", scope: !4267, file: !3, line: 55, baseType: !332, size: 8, offset: 10304)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_addr_slvt", scope: !4267, file: !3, line: 56, baseType: !332, size: 8, offset: 10312)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !4267, file: !3, line: 57, baseType: !4396, size: 64, offset: 10368)
!4396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4397, size: 64)
!4397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4398)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cxd2841er_config", file: !284, line: 33, size: 96, elements: !4399)
!4399 = !{!4400, !4401, !4402}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_addr", scope: !4398, file: !284, line: 34, baseType: !332, size: 8)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "xtal", scope: !4398, file: !284, line: 35, baseType: !283, size: 32, offset: 32)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4398, file: !284, line: 36, baseType: !326, size: 32, offset: 64)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4267, file: !3, line: 58, baseType: !289, size: 32, offset: 10432)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !4267, file: !3, line: 59, baseType: !332, size: 8, offset: 10464)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "xtal", scope: !4267, file: !3, line: 60, baseType: !283, size: 32, offset: 10496)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !4267, file: !3, line: 61, baseType: !5, size: 32, offset: 10528)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4267, file: !3, line: 62, baseType: !326, size: 32, offset: 10560)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "stats_time", scope: !4267, file: !3, line: 63, baseType: !534, size: 64, offset: 10624)
!4409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4096, size: 120, elements: !4410)
!4410 = !{!488, !4411}
!4411 = !DISubrange(count: 5)
!4412 = !DIGlobalVariableExpression(var: !4413, expr: !DIExpression())
!4413 = distinct !DIGlobalVariable(name: "nominalRate7bw", scope: !4263, file: !3, line: 2427, type: !4409, isLocal: true, isDefinition: true)
!4414 = !DIGlobalVariableExpression(var: !4415, expr: !DIExpression())
!4415 = distinct !DIGlobalVariable(name: "nominalRate6bw", scope: !4263, file: !3, line: 2433, type: !4409, isLocal: true, isDefinition: true)
!4416 = !DIGlobalVariableExpression(var: !4417, expr: !DIExpression())
!4417 = distinct !DIGlobalVariable(name: "nominalRate5bw", scope: !4263, file: !3, line: 2439, type: !4409, isLocal: true, isDefinition: true)
!4418 = !DIGlobalVariableExpression(var: !4419, expr: !DIExpression())
!4419 = distinct !DIGlobalVariable(name: "itbCoef8bw", scope: !4263, file: !3, line: 2446, type: !4420, isLocal: true, isDefinition: true)
!4420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4096, size: 336, elements: !4421)
!4421 = !{!488, !4422}
!4422 = !DISubrange(count: 14)
!4423 = !DIGlobalVariableExpression(var: !4424, expr: !DIExpression())
!4424 = distinct !DIGlobalVariable(name: "itbCoef7bw", scope: !4263, file: !3, line: 2454, type: !4420, isLocal: true, isDefinition: true)
!4425 = !DIGlobalVariableExpression(var: !4426, expr: !DIExpression())
!4426 = distinct !DIGlobalVariable(name: "itbCoef6bw", scope: !4263, file: !3, line: 2462, type: !4420, isLocal: true, isDefinition: true)
!4427 = !DIGlobalVariableExpression(var: !4428, expr: !DIExpression())
!4428 = distinct !DIGlobalVariable(name: "itbCoef5bw", scope: !4263, file: !3, line: 2470, type: !4420, isLocal: true, isDefinition: true)
!4429 = !DIGlobalVariableExpression(var: !4430, expr: !DIExpression())
!4430 = distinct !DIGlobalVariable(name: "nominalRate8bw", scope: !4431, file: !3, line: 2176, type: !4432, isLocal: true, isDefinition: true)
!4431 = distinct !DISubprogram(name: "cxd2841er_sleep_tc_to_active_t2_band", scope: !3, file: !3, line: 2170, type: !4264, scopeLine: 2172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4433, size: 120, elements: !4410)
!4433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4434)
!4434 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !324, line: 102, baseType: !332)
!4435 = !DIGlobalVariableExpression(var: !4436, expr: !DIExpression())
!4436 = distinct !DIGlobalVariable(name: "nominalRate7bw", scope: !4431, file: !3, line: 2183, type: !4432, isLocal: true, isDefinition: true)
!4437 = !DIGlobalVariableExpression(var: !4438, expr: !DIExpression())
!4438 = distinct !DIGlobalVariable(name: "nominalRate6bw", scope: !4431, file: !3, line: 2190, type: !4432, isLocal: true, isDefinition: true)
!4439 = !DIGlobalVariableExpression(var: !4440, expr: !DIExpression())
!4440 = distinct !DIGlobalVariable(name: "nominalRate5bw", scope: !4431, file: !3, line: 2197, type: !4432, isLocal: true, isDefinition: true)
!4441 = !DIGlobalVariableExpression(var: !4442, expr: !DIExpression())
!4442 = distinct !DIGlobalVariable(name: "nominalRate17bw", scope: !4431, file: !3, line: 2204, type: !4432, isLocal: true, isDefinition: true)
!4443 = !DIGlobalVariableExpression(var: !4444, expr: !DIExpression())
!4444 = distinct !DIGlobalVariable(name: "itbCoef8bw", scope: !4431, file: !3, line: 2211, type: !4445, isLocal: true, isDefinition: true)
!4445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4433, size: 336, elements: !4421)
!4446 = !DIGlobalVariableExpression(var: !4447, expr: !DIExpression())
!4447 = distinct !DIGlobalVariable(name: "itbCoef7bw", scope: !4431, file: !3, line: 2220, type: !4445, isLocal: true, isDefinition: true)
!4448 = !DIGlobalVariableExpression(var: !4449, expr: !DIExpression())
!4449 = distinct !DIGlobalVariable(name: "itbCoef6bw", scope: !4431, file: !3, line: 2229, type: !4445, isLocal: true, isDefinition: true)
!4450 = !DIGlobalVariableExpression(var: !4451, expr: !DIExpression())
!4451 = distinct !DIGlobalVariable(name: "itbCoef5bw", scope: !4431, file: !3, line: 2238, type: !4445, isLocal: true, isDefinition: true)
!4452 = !DIGlobalVariableExpression(var: !4453, expr: !DIExpression())
!4453 = distinct !DIGlobalVariable(name: "itbCoef17bw", scope: !4431, file: !3, line: 2247, type: !4445, isLocal: true, isDefinition: true)
!4454 = !DIGlobalVariableExpression(var: !4455, expr: !DIExpression())
!4455 = distinct !DIGlobalVariable(name: "nominalRate8bw", scope: !4456, file: !3, line: 2650, type: !4409, isLocal: true, isDefinition: true)
!4456 = distinct !DISubprogram(name: "cxd2841er_sleep_tc_to_active_i_band", scope: !3, file: !3, line: 2643, type: !4264, scopeLine: 2645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4457 = !DIGlobalVariableExpression(var: !4458, expr: !DIExpression())
!4458 = distinct !DIGlobalVariable(name: "nominalRate7bw", scope: !4456, file: !3, line: 2656, type: !4409, isLocal: true, isDefinition: true)
!4459 = !DIGlobalVariableExpression(var: !4460, expr: !DIExpression())
!4460 = distinct !DIGlobalVariable(name: "nominalRate6bw", scope: !4456, file: !3, line: 2662, type: !4409, isLocal: true, isDefinition: true)
!4461 = !DIGlobalVariableExpression(var: !4462, expr: !DIExpression())
!4462 = distinct !DIGlobalVariable(name: "itbCoef8bw", scope: !4456, file: !3, line: 2668, type: !4420, isLocal: true, isDefinition: true)
!4463 = !DIGlobalVariableExpression(var: !4464, expr: !DIExpression())
!4464 = distinct !DIGlobalVariable(name: "itbCoef7bw", scope: !4456, file: !3, line: 2675, type: !4420, isLocal: true, isDefinition: true)
!4465 = !DIGlobalVariableExpression(var: !4466, expr: !DIExpression())
!4466 = distinct !DIGlobalVariable(name: "itbCoef6bw", scope: !4456, file: !3, line: 2682, type: !4420, isLocal: true, isDefinition: true)
!4467 = !DIGlobalVariableExpression(var: !4468, expr: !DIExpression())
!4468 = distinct !DIGlobalVariable(name: "cn_data", scope: !4469, file: !3, line: 1675, type: !4472, isLocal: true, isDefinition: true)
!4469 = distinct !DISubprogram(name: "cxd2841er_dvbs_read_snr", scope: !3, file: !3, line: 1669, type: !4470, scopeLine: 1671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!326, !4266, !332, !1525}
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4474)
!4474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cxd2841er_cnr_data", file: !310, line: 27, size: 64, elements: !4475)
!4475 = !{!4476, !4477}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4474, file: !310, line: 28, baseType: !326, size: 32)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "cnr_x1000", scope: !4474, file: !310, line: 29, baseType: !331, size: 32, offset: 32)
!4478 = !DIGlobalVariableExpression(var: !4479, expr: !DIExpression())
!4479 = distinct !DIGlobalVariable(name: "s_cn_data", scope: !2, file: !3, line: 66, type: !4480, isLocal: true, isDefinition: true)
!4480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4473, size: 12224, elements: !4481)
!4481 = !{!4482}
!4482 = !DISubrange(count: 191)
!4483 = !DIGlobalVariableExpression(var: !4484, expr: !DIExpression())
!4484 = distinct !DIGlobalVariable(name: "s2_cn_data", scope: !2, file: !3, line: 133, type: !4485, isLocal: true, isDefinition: true)
!4485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4473, size: 12288, elements: !4486)
!4486 = !{!4487}
!4487 = !DISubrange(count: 192)
!4488 = !DIGlobalVariableExpression(var: !4489, expr: !DIExpression())
!4489 = distinct !DIGlobalVariable(name: "cxd2841er_dvbs_s2_ops", scope: !2, file: !3, line: 3942, type: !4490, isLocal: true, isDefinition: true)
!4490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !365)
!4491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 696, elements: !4492)
!4492 = !{!4493}
!4493 = !DISubrange(count: 87)
!4494 = !{i32 7, !"Dwarf Version", i32 4}
!4495 = !{i32 2, !"Debug Info Version", i32 3}
!4496 = !{i32 1, !"wchar_size", i32 2}
!4497 = !{i32 1, !"Code Model", i32 2}
!4498 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4499 = distinct !DISubprogram(name: "cxd2841er_attach_s", scope: !3, file: !3, line: 3928, type: !4500, scopeLine: 3930, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4500 = !DISubroutineType(types: !4501)
!4501 = !{!390, !4502, !4271}
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4503 = !DILocalVariable(name: "cfg", arg: 1, scope: !4499, file: !3, line: 3928, type: !4502)
!4504 = !DILocation(line: 3928, column: 66, scope: !4499)
!4505 = !DILocalVariable(name: "i2c", arg: 2, scope: !4499, file: !3, line: 3929, type: !4271)
!4506 = !DILocation(line: 3929, column: 26, scope: !4499)
!4507 = !DILocation(line: 3931, column: 26, scope: !4499)
!4508 = !DILocation(line: 3931, column: 31, scope: !4499)
!4509 = !DILocation(line: 3931, column: 9, scope: !4499)
!4510 = !DILocation(line: 3931, column: 2, scope: !4499)
!4511 = distinct !DISubprogram(name: "cxd2841er_attach", scope: !3, file: !3, line: 3840, type: !4512, scopeLine: 3843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!390, !4502, !4271, !332}
!4514 = !DILocalVariable(name: "cfg", arg: 1, scope: !4511, file: !3, line: 3840, type: !4502)
!4515 = !DILocation(line: 3840, column: 71, scope: !4511)
!4516 = !DILocalVariable(name: "i2c", arg: 2, scope: !4511, file: !3, line: 3841, type: !4271)
!4517 = !DILocation(line: 3841, column: 31, scope: !4511)
!4518 = !DILocalVariable(name: "system", arg: 3, scope: !4511, file: !3, line: 3842, type: !332)
!4519 = !DILocation(line: 3842, column: 14, scope: !4511)
!4520 = !DILocalVariable(name: "chip_id", scope: !4511, file: !3, line: 3844, type: !332)
!4521 = !DILocation(line: 3844, column: 5, scope: !4511)
!4522 = !DILocalVariable(name: "type", scope: !4511, file: !3, line: 3845, type: !421)
!4523 = !DILocation(line: 3845, column: 14, scope: !4511)
!4524 = !DILocalVariable(name: "name", scope: !4511, file: !3, line: 3846, type: !421)
!4525 = !DILocation(line: 3846, column: 14, scope: !4511)
!4526 = !DILocalVariable(name: "priv", scope: !4511, file: !3, line: 3847, type: !4266)
!4527 = !DILocation(line: 3847, column: 25, scope: !4511)
!4528 = !DILocation(line: 3850, column: 9, scope: !4511)
!4529 = !DILocation(line: 3850, column: 7, scope: !4511)
!4530 = !DILocation(line: 3851, column: 7, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4511, file: !3, line: 3851, column: 6)
!4532 = !DILocation(line: 3851, column: 6, scope: !4511)
!4533 = !DILocation(line: 3852, column: 3, scope: !4531)
!4534 = !DILocation(line: 3853, column: 14, scope: !4511)
!4535 = !DILocation(line: 3853, column: 2, scope: !4511)
!4536 = !DILocation(line: 3853, column: 8, scope: !4511)
!4537 = !DILocation(line: 3853, column: 12, scope: !4511)
!4538 = !DILocation(line: 3854, column: 17, scope: !4511)
!4539 = !DILocation(line: 3854, column: 2, scope: !4511)
!4540 = !DILocation(line: 3854, column: 8, scope: !4511)
!4541 = !DILocation(line: 3854, column: 15, scope: !4511)
!4542 = !DILocation(line: 3855, column: 25, scope: !4511)
!4543 = !DILocation(line: 3855, column: 30, scope: !4511)
!4544 = !DILocation(line: 3855, column: 39, scope: !4511)
!4545 = !DILocation(line: 3855, column: 44, scope: !4511)
!4546 = !DILocation(line: 3855, column: 24, scope: !4511)
!4547 = !DILocation(line: 3855, column: 2, scope: !4511)
!4548 = !DILocation(line: 3855, column: 8, scope: !4511)
!4549 = !DILocation(line: 3855, column: 22, scope: !4511)
!4550 = !DILocation(line: 3856, column: 25, scope: !4511)
!4551 = !DILocation(line: 3856, column: 30, scope: !4511)
!4552 = !DILocation(line: 3856, column: 24, scope: !4511)
!4553 = !DILocation(line: 3856, column: 40, scope: !4511)
!4554 = !DILocation(line: 3856, column: 2, scope: !4511)
!4555 = !DILocation(line: 3856, column: 8, scope: !4511)
!4556 = !DILocation(line: 3856, column: 22, scope: !4511)
!4557 = !DILocation(line: 3857, column: 15, scope: !4511)
!4558 = !DILocation(line: 3857, column: 20, scope: !4511)
!4559 = !DILocation(line: 3857, column: 2, scope: !4511)
!4560 = !DILocation(line: 3857, column: 8, scope: !4511)
!4561 = !DILocation(line: 3857, column: 13, scope: !4511)
!4562 = !DILocation(line: 3858, column: 16, scope: !4511)
!4563 = !DILocation(line: 3858, column: 21, scope: !4511)
!4564 = !DILocation(line: 3858, column: 2, scope: !4511)
!4565 = !DILocation(line: 3858, column: 8, scope: !4511)
!4566 = !DILocation(line: 3858, column: 14, scope: !4511)
!4567 = !DILocation(line: 3859, column: 36, scope: !4511)
!4568 = !DILocation(line: 3859, column: 2, scope: !4511)
!4569 = !DILocation(line: 3859, column: 8, scope: !4511)
!4570 = !DILocation(line: 3859, column: 17, scope: !4511)
!4571 = !DILocation(line: 3859, column: 34, scope: !4511)
!4572 = !DILocation(line: 3860, column: 2, scope: !4511)
!4573 = !DILocation(line: 3864, column: 30, scope: !4511)
!4574 = !DILocation(line: 3864, column: 12, scope: !4511)
!4575 = !DILocation(line: 3864, column: 10, scope: !4511)
!4576 = !DILocation(line: 3865, column: 10, scope: !4511)
!4577 = !DILocation(line: 3865, column: 2, scope: !4511)
!4578 = !DILocation(line: 3867, column: 3, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4511, file: !3, line: 3865, column: 19)
!4580 = !DILocation(line: 3869, column: 8, scope: !4579)
!4581 = !DILocation(line: 3870, column: 8, scope: !4579)
!4582 = !DILocation(line: 3871, column: 3, scope: !4579)
!4583 = !DILocation(line: 3873, column: 3, scope: !4579)
!4584 = !DILocation(line: 3875, column: 31, scope: !4579)
!4585 = !DILocation(line: 3876, column: 31, scope: !4579)
!4586 = !DILocation(line: 3877, column: 31, scope: !4579)
!4587 = !DILocation(line: 3878, column: 8, scope: !4579)
!4588 = !DILocation(line: 3879, column: 8, scope: !4579)
!4589 = !DILocation(line: 3880, column: 3, scope: !4579)
!4590 = !DILocation(line: 3882, column: 3, scope: !4579)
!4591 = !DILocation(line: 3884, column: 8, scope: !4579)
!4592 = !DILocation(line: 3885, column: 8, scope: !4579)
!4593 = !DILocation(line: 3886, column: 3, scope: !4579)
!4594 = !DILocation(line: 3888, column: 3, scope: !4579)
!4595 = !DILocation(line: 3890, column: 8, scope: !4579)
!4596 = !DILocation(line: 3891, column: 8, scope: !4579)
!4597 = !DILocation(line: 3892, column: 3, scope: !4579)
!4598 = !DILocation(line: 3894, column: 3, scope: !4579)
!4599 = !DILocation(line: 3896, column: 31, scope: !4579)
!4600 = !DILocation(line: 3897, column: 8, scope: !4579)
!4601 = !DILocation(line: 3898, column: 8, scope: !4579)
!4602 = !DILocation(line: 3899, column: 3, scope: !4579)
!4603 = !DILocation(line: 3901, column: 3, scope: !4579)
!4604 = !DILocation(line: 3903, column: 3, scope: !4579)
!4605 = !DILocation(line: 3903, column: 9, scope: !4579)
!4606 = !DILocation(line: 3903, column: 18, scope: !4579)
!4607 = !DILocation(line: 3903, column: 35, scope: !4579)
!4608 = !DILocation(line: 3904, column: 9, scope: !4579)
!4609 = !DILocation(line: 3904, column: 3, scope: !4579)
!4610 = !DILocation(line: 3905, column: 3, scope: !4579)
!4611 = !DILocation(line: 3909, column: 6, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4511, file: !3, line: 3909, column: 6)
!4613 = !DILocation(line: 3909, column: 13, scope: !4612)
!4614 = !DILocation(line: 3909, column: 6, scope: !4511)
!4615 = !DILocation(line: 3910, column: 11, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 3909, column: 26)
!4617 = !DILocation(line: 3910, column: 17, scope: !4616)
!4618 = !DILocation(line: 3910, column: 26, scope: !4616)
!4619 = !DILocation(line: 3910, column: 3, scope: !4616)
!4620 = !DILocation(line: 3913, column: 8, scope: !4616)
!4621 = !DILocation(line: 3914, column: 2, scope: !4616)
!4622 = !DILocation(line: 3915, column: 11, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4612, file: !3, line: 3914, column: 9)
!4624 = !DILocation(line: 3915, column: 17, scope: !4623)
!4625 = !DILocation(line: 3915, column: 26, scope: !4623)
!4626 = !DILocation(line: 3915, column: 3, scope: !4623)
!4627 = !DILocation(line: 3920, column: 2, scope: !4511)
!4628 = !DILocation(line: 3923, column: 2, scope: !4511)
!4629 = !DILocation(line: 3925, column: 10, scope: !4511)
!4630 = !DILocation(line: 3925, column: 16, scope: !4511)
!4631 = !DILocation(line: 3925, column: 2, scope: !4511)
!4632 = !DILocation(line: 3926, column: 1, scope: !4511)
!4633 = distinct !DISubprogram(name: "cxd2841er_attach_t_c", scope: !3, file: !3, line: 3935, type: !4500, scopeLine: 3937, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4634 = !DILocalVariable(name: "cfg", arg: 1, scope: !4633, file: !3, line: 3935, type: !4502)
!4635 = !DILocation(line: 3935, column: 68, scope: !4633)
!4636 = !DILocalVariable(name: "i2c", arg: 2, scope: !4633, file: !3, line: 3936, type: !4271)
!4637 = !DILocation(line: 3936, column: 26, scope: !4633)
!4638 = !DILocation(line: 3938, column: 26, scope: !4633)
!4639 = !DILocation(line: 3938, column: 31, scope: !4633)
!4640 = !DILocation(line: 3938, column: 9, scope: !4633)
!4641 = !DILocation(line: 3938, column: 2, scope: !4633)
!4642 = distinct !DISubprogram(name: "kzalloc", scope: !297, file: !297, line: 662, type: !4643, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{!325, !531, !323}
!4645 = !DILocalVariable(name: "s", arg: 1, scope: !4646, file: !297, line: 445, type: !1134)
!4646 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !297, file: !297, line: 445, type: !4647, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{!325, !1134, !323, !531}
!4649 = !DILocation(line: 445, column: 72, scope: !4646, inlinedAt: !4650)
!4650 = distinct !DILocation(line: 552, column: 10, scope: !4651, inlinedAt: !4654)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !297, line: 540, column: 34)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !297, line: 540, column: 6)
!4653 = distinct !DISubprogram(name: "kmalloc", scope: !297, file: !297, line: 538, type: !4643, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4654 = distinct !DILocation(line: 664, column: 9, scope: !4642)
!4655 = !DILocalVariable(name: "flags", arg: 2, scope: !4646, file: !297, line: 446, type: !323)
!4656 = !DILocation(line: 446, column: 9, scope: !4646, inlinedAt: !4650)
!4657 = !DILocalVariable(name: "size", arg: 3, scope: !4646, file: !297, line: 446, type: !531)
!4658 = !DILocation(line: 446, column: 23, scope: !4646, inlinedAt: !4650)
!4659 = !DILocalVariable(name: "ret", scope: !4646, file: !297, line: 448, type: !325)
!4660 = !DILocation(line: 448, column: 8, scope: !4646, inlinedAt: !4650)
!4661 = !DILocalVariable(name: "flags", arg: 1, scope: !4662, file: !297, line: 318, type: !323)
!4662 = distinct !DISubprogram(name: "kmalloc_type", scope: !297, file: !297, line: 318, type: !4663, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4663 = !DISubroutineType(types: !4664)
!4664 = !{!296, !323}
!4665 = !DILocation(line: 318, column: 67, scope: !4662, inlinedAt: !4666)
!4666 = distinct !DILocation(line: 553, column: 20, scope: !4651, inlinedAt: !4654)
!4667 = !DILocalVariable(name: "size", arg: 1, scope: !4668, file: !297, line: 346, type: !531)
!4668 = distinct !DISubprogram(name: "kmalloc_index", scope: !297, file: !297, line: 346, type: !4669, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{!7, !531}
!4671 = !DILocation(line: 346, column: 58, scope: !4668, inlinedAt: !4672)
!4672 = distinct !DILocation(line: 547, column: 11, scope: !4651, inlinedAt: !4654)
!4673 = !DILocalVariable(name: "size", arg: 1, scope: !4674, file: !297, line: 472, type: !531)
!4674 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !297, file: !297, line: 472, type: !4675, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4675 = !DISubroutineType(types: !4676)
!4676 = !{!325, !531, !323, !7}
!4677 = !DILocation(line: 472, column: 28, scope: !4674, inlinedAt: !4678)
!4678 = distinct !DILocation(line: 481, column: 9, scope: !4679, inlinedAt: !4680)
!4679 = distinct !DISubprogram(name: "kmalloc_large", scope: !297, file: !297, line: 478, type: !4643, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4680 = distinct !DILocation(line: 545, column: 11, scope: !4681, inlinedAt: !4654)
!4681 = distinct !DILexicalBlock(scope: !4651, file: !297, line: 544, column: 7)
!4682 = !DILocalVariable(name: "flags", arg: 2, scope: !4674, file: !297, line: 472, type: !323)
!4683 = !DILocation(line: 472, column: 40, scope: !4674, inlinedAt: !4678)
!4684 = !DILocalVariable(name: "order", arg: 3, scope: !4674, file: !297, line: 472, type: !7)
!4685 = !DILocation(line: 472, column: 60, scope: !4674, inlinedAt: !4678)
!4686 = !DILocalVariable(name: "size", arg: 1, scope: !4679, file: !297, line: 478, type: !531)
!4687 = !DILocation(line: 478, column: 51, scope: !4679, inlinedAt: !4680)
!4688 = !DILocalVariable(name: "flags", arg: 2, scope: !4679, file: !297, line: 478, type: !323)
!4689 = !DILocation(line: 478, column: 63, scope: !4679, inlinedAt: !4680)
!4690 = !DILocalVariable(name: "order", scope: !4679, file: !297, line: 480, type: !7)
!4691 = !DILocation(line: 480, column: 15, scope: !4679, inlinedAt: !4680)
!4692 = !DILocalVariable(name: "size", arg: 1, scope: !4653, file: !297, line: 538, type: !531)
!4693 = !DILocation(line: 538, column: 45, scope: !4653, inlinedAt: !4654)
!4694 = !DILocalVariable(name: "flags", arg: 2, scope: !4653, file: !297, line: 538, type: !323)
!4695 = !DILocation(line: 538, column: 57, scope: !4653, inlinedAt: !4654)
!4696 = !DILocalVariable(name: "index", scope: !4651, file: !297, line: 542, type: !7)
!4697 = !DILocation(line: 542, column: 16, scope: !4651, inlinedAt: !4654)
!4698 = !DILocalVariable(name: "size", arg: 1, scope: !4642, file: !297, line: 662, type: !531)
!4699 = !DILocation(line: 662, column: 36, scope: !4642)
!4700 = !DILocalVariable(name: "flags", arg: 2, scope: !4642, file: !297, line: 662, type: !323)
!4701 = !DILocation(line: 662, column: 48, scope: !4642)
!4702 = !DILocation(line: 664, column: 17, scope: !4642)
!4703 = !DILocation(line: 664, column: 23, scope: !4642)
!4704 = !DILocation(line: 664, column: 29, scope: !4642)
!4705 = !DILocation(line: 540, column: 27, scope: !4652, inlinedAt: !4654)
!4706 = !DILocation(line: 540, column: 6, scope: !4652, inlinedAt: !4654)
!4707 = !DILocation(line: 540, column: 6, scope: !4653, inlinedAt: !4654)
!4708 = !DILocation(line: 544, column: 7, scope: !4681, inlinedAt: !4654)
!4709 = !DILocation(line: 544, column: 12, scope: !4681, inlinedAt: !4654)
!4710 = !DILocation(line: 544, column: 7, scope: !4651, inlinedAt: !4654)
!4711 = !DILocation(line: 545, column: 25, scope: !4681, inlinedAt: !4654)
!4712 = !DILocation(line: 545, column: 31, scope: !4681, inlinedAt: !4654)
!4713 = !DILocation(line: 480, column: 33, scope: !4679, inlinedAt: !4680)
!4714 = !DILocation(line: 480, column: 23, scope: !4679, inlinedAt: !4680)
!4715 = !DILocation(line: 481, column: 29, scope: !4679, inlinedAt: !4680)
!4716 = !DILocation(line: 481, column: 35, scope: !4679, inlinedAt: !4680)
!4717 = !DILocation(line: 481, column: 42, scope: !4679, inlinedAt: !4680)
!4718 = !DILocation(line: 474, column: 23, scope: !4674, inlinedAt: !4678)
!4719 = !DILocation(line: 474, column: 29, scope: !4674, inlinedAt: !4678)
!4720 = !DILocation(line: 474, column: 36, scope: !4674, inlinedAt: !4678)
!4721 = !DILocation(line: 474, column: 9, scope: !4674, inlinedAt: !4678)
!4722 = !DILocation(line: 545, column: 4, scope: !4681, inlinedAt: !4654)
!4723 = !DILocation(line: 547, column: 25, scope: !4651, inlinedAt: !4654)
!4724 = !DILocation(line: 348, column: 7, scope: !4725, inlinedAt: !4672)
!4725 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 348, column: 6)
!4726 = !DILocation(line: 348, column: 6, scope: !4668, inlinedAt: !4672)
!4727 = !DILocation(line: 349, column: 3, scope: !4725, inlinedAt: !4672)
!4728 = !DILocation(line: 351, column: 6, scope: !4729, inlinedAt: !4672)
!4729 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 351, column: 6)
!4730 = !DILocation(line: 351, column: 11, scope: !4729, inlinedAt: !4672)
!4731 = !DILocation(line: 351, column: 6, scope: !4668, inlinedAt: !4672)
!4732 = !DILocation(line: 352, column: 3, scope: !4729, inlinedAt: !4672)
!4733 = !DILocation(line: 354, column: 32, scope: !4734, inlinedAt: !4672)
!4734 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 354, column: 6)
!4735 = !DILocation(line: 354, column: 37, scope: !4734, inlinedAt: !4672)
!4736 = !DILocation(line: 354, column: 42, scope: !4734, inlinedAt: !4672)
!4737 = !DILocation(line: 354, column: 45, scope: !4734, inlinedAt: !4672)
!4738 = !DILocation(line: 354, column: 50, scope: !4734, inlinedAt: !4672)
!4739 = !DILocation(line: 354, column: 6, scope: !4668, inlinedAt: !4672)
!4740 = !DILocation(line: 355, column: 3, scope: !4734, inlinedAt: !4672)
!4741 = !DILocation(line: 356, column: 32, scope: !4742, inlinedAt: !4672)
!4742 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 356, column: 6)
!4743 = !DILocation(line: 356, column: 37, scope: !4742, inlinedAt: !4672)
!4744 = !DILocation(line: 356, column: 43, scope: !4742, inlinedAt: !4672)
!4745 = !DILocation(line: 356, column: 46, scope: !4742, inlinedAt: !4672)
!4746 = !DILocation(line: 356, column: 51, scope: !4742, inlinedAt: !4672)
!4747 = !DILocation(line: 356, column: 6, scope: !4668, inlinedAt: !4672)
!4748 = !DILocation(line: 357, column: 3, scope: !4742, inlinedAt: !4672)
!4749 = !DILocation(line: 358, column: 6, scope: !4750, inlinedAt: !4672)
!4750 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 358, column: 6)
!4751 = !DILocation(line: 358, column: 11, scope: !4750, inlinedAt: !4672)
!4752 = !DILocation(line: 358, column: 6, scope: !4668, inlinedAt: !4672)
!4753 = !DILocation(line: 358, column: 26, scope: !4750, inlinedAt: !4672)
!4754 = !DILocation(line: 359, column: 6, scope: !4755, inlinedAt: !4672)
!4755 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 359, column: 6)
!4756 = !DILocation(line: 359, column: 11, scope: !4755, inlinedAt: !4672)
!4757 = !DILocation(line: 359, column: 6, scope: !4668, inlinedAt: !4672)
!4758 = !DILocation(line: 359, column: 26, scope: !4755, inlinedAt: !4672)
!4759 = !DILocation(line: 360, column: 6, scope: !4760, inlinedAt: !4672)
!4760 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 360, column: 6)
!4761 = !DILocation(line: 360, column: 11, scope: !4760, inlinedAt: !4672)
!4762 = !DILocation(line: 360, column: 6, scope: !4668, inlinedAt: !4672)
!4763 = !DILocation(line: 360, column: 26, scope: !4760, inlinedAt: !4672)
!4764 = !DILocation(line: 361, column: 6, scope: !4765, inlinedAt: !4672)
!4765 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 361, column: 6)
!4766 = !DILocation(line: 361, column: 11, scope: !4765, inlinedAt: !4672)
!4767 = !DILocation(line: 361, column: 6, scope: !4668, inlinedAt: !4672)
!4768 = !DILocation(line: 361, column: 26, scope: !4765, inlinedAt: !4672)
!4769 = !DILocation(line: 362, column: 6, scope: !4770, inlinedAt: !4672)
!4770 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 362, column: 6)
!4771 = !DILocation(line: 362, column: 11, scope: !4770, inlinedAt: !4672)
!4772 = !DILocation(line: 362, column: 6, scope: !4668, inlinedAt: !4672)
!4773 = !DILocation(line: 362, column: 26, scope: !4770, inlinedAt: !4672)
!4774 = !DILocation(line: 363, column: 6, scope: !4775, inlinedAt: !4672)
!4775 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 363, column: 6)
!4776 = !DILocation(line: 363, column: 11, scope: !4775, inlinedAt: !4672)
!4777 = !DILocation(line: 363, column: 6, scope: !4668, inlinedAt: !4672)
!4778 = !DILocation(line: 363, column: 26, scope: !4775, inlinedAt: !4672)
!4779 = !DILocation(line: 364, column: 6, scope: !4780, inlinedAt: !4672)
!4780 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 364, column: 6)
!4781 = !DILocation(line: 364, column: 11, scope: !4780, inlinedAt: !4672)
!4782 = !DILocation(line: 364, column: 6, scope: !4668, inlinedAt: !4672)
!4783 = !DILocation(line: 364, column: 26, scope: !4780, inlinedAt: !4672)
!4784 = !DILocation(line: 365, column: 6, scope: !4785, inlinedAt: !4672)
!4785 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 365, column: 6)
!4786 = !DILocation(line: 365, column: 11, scope: !4785, inlinedAt: !4672)
!4787 = !DILocation(line: 365, column: 6, scope: !4668, inlinedAt: !4672)
!4788 = !DILocation(line: 365, column: 26, scope: !4785, inlinedAt: !4672)
!4789 = !DILocation(line: 366, column: 6, scope: !4790, inlinedAt: !4672)
!4790 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 366, column: 6)
!4791 = !DILocation(line: 366, column: 11, scope: !4790, inlinedAt: !4672)
!4792 = !DILocation(line: 366, column: 6, scope: !4668, inlinedAt: !4672)
!4793 = !DILocation(line: 366, column: 26, scope: !4790, inlinedAt: !4672)
!4794 = !DILocation(line: 367, column: 6, scope: !4795, inlinedAt: !4672)
!4795 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 367, column: 6)
!4796 = !DILocation(line: 367, column: 11, scope: !4795, inlinedAt: !4672)
!4797 = !DILocation(line: 367, column: 6, scope: !4668, inlinedAt: !4672)
!4798 = !DILocation(line: 367, column: 26, scope: !4795, inlinedAt: !4672)
!4799 = !DILocation(line: 368, column: 6, scope: !4800, inlinedAt: !4672)
!4800 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 368, column: 6)
!4801 = !DILocation(line: 368, column: 11, scope: !4800, inlinedAt: !4672)
!4802 = !DILocation(line: 368, column: 6, scope: !4668, inlinedAt: !4672)
!4803 = !DILocation(line: 368, column: 26, scope: !4800, inlinedAt: !4672)
!4804 = !DILocation(line: 369, column: 6, scope: !4805, inlinedAt: !4672)
!4805 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 369, column: 6)
!4806 = !DILocation(line: 369, column: 11, scope: !4805, inlinedAt: !4672)
!4807 = !DILocation(line: 369, column: 6, scope: !4668, inlinedAt: !4672)
!4808 = !DILocation(line: 369, column: 26, scope: !4805, inlinedAt: !4672)
!4809 = !DILocation(line: 370, column: 6, scope: !4810, inlinedAt: !4672)
!4810 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 370, column: 6)
!4811 = !DILocation(line: 370, column: 11, scope: !4810, inlinedAt: !4672)
!4812 = !DILocation(line: 370, column: 6, scope: !4668, inlinedAt: !4672)
!4813 = !DILocation(line: 370, column: 26, scope: !4810, inlinedAt: !4672)
!4814 = !DILocation(line: 371, column: 6, scope: !4815, inlinedAt: !4672)
!4815 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 371, column: 6)
!4816 = !DILocation(line: 371, column: 11, scope: !4815, inlinedAt: !4672)
!4817 = !DILocation(line: 371, column: 6, scope: !4668, inlinedAt: !4672)
!4818 = !DILocation(line: 371, column: 26, scope: !4815, inlinedAt: !4672)
!4819 = !DILocation(line: 372, column: 6, scope: !4820, inlinedAt: !4672)
!4820 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 372, column: 6)
!4821 = !DILocation(line: 372, column: 11, scope: !4820, inlinedAt: !4672)
!4822 = !DILocation(line: 372, column: 6, scope: !4668, inlinedAt: !4672)
!4823 = !DILocation(line: 372, column: 26, scope: !4820, inlinedAt: !4672)
!4824 = !DILocation(line: 373, column: 6, scope: !4825, inlinedAt: !4672)
!4825 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 373, column: 6)
!4826 = !DILocation(line: 373, column: 11, scope: !4825, inlinedAt: !4672)
!4827 = !DILocation(line: 373, column: 6, scope: !4668, inlinedAt: !4672)
!4828 = !DILocation(line: 373, column: 26, scope: !4825, inlinedAt: !4672)
!4829 = !DILocation(line: 374, column: 6, scope: !4830, inlinedAt: !4672)
!4830 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 374, column: 6)
!4831 = !DILocation(line: 374, column: 11, scope: !4830, inlinedAt: !4672)
!4832 = !DILocation(line: 374, column: 6, scope: !4668, inlinedAt: !4672)
!4833 = !DILocation(line: 374, column: 26, scope: !4830, inlinedAt: !4672)
!4834 = !DILocation(line: 375, column: 6, scope: !4835, inlinedAt: !4672)
!4835 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 375, column: 6)
!4836 = !DILocation(line: 375, column: 11, scope: !4835, inlinedAt: !4672)
!4837 = !DILocation(line: 375, column: 6, scope: !4668, inlinedAt: !4672)
!4838 = !DILocation(line: 375, column: 27, scope: !4835, inlinedAt: !4672)
!4839 = !DILocation(line: 376, column: 6, scope: !4840, inlinedAt: !4672)
!4840 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 376, column: 6)
!4841 = !DILocation(line: 376, column: 11, scope: !4840, inlinedAt: !4672)
!4842 = !DILocation(line: 376, column: 6, scope: !4668, inlinedAt: !4672)
!4843 = !DILocation(line: 376, column: 32, scope: !4840, inlinedAt: !4672)
!4844 = !DILocation(line: 377, column: 6, scope: !4845, inlinedAt: !4672)
!4845 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 377, column: 6)
!4846 = !DILocation(line: 377, column: 11, scope: !4845, inlinedAt: !4672)
!4847 = !DILocation(line: 377, column: 6, scope: !4668, inlinedAt: !4672)
!4848 = !DILocation(line: 377, column: 32, scope: !4845, inlinedAt: !4672)
!4849 = !DILocation(line: 378, column: 6, scope: !4850, inlinedAt: !4672)
!4850 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 378, column: 6)
!4851 = !DILocation(line: 378, column: 11, scope: !4850, inlinedAt: !4672)
!4852 = !DILocation(line: 378, column: 6, scope: !4668, inlinedAt: !4672)
!4853 = !DILocation(line: 378, column: 32, scope: !4850, inlinedAt: !4672)
!4854 = !DILocation(line: 379, column: 6, scope: !4855, inlinedAt: !4672)
!4855 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 379, column: 6)
!4856 = !DILocation(line: 379, column: 11, scope: !4855, inlinedAt: !4672)
!4857 = !DILocation(line: 379, column: 6, scope: !4668, inlinedAt: !4672)
!4858 = !DILocation(line: 379, column: 33, scope: !4855, inlinedAt: !4672)
!4859 = !DILocation(line: 380, column: 6, scope: !4860, inlinedAt: !4672)
!4860 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 380, column: 6)
!4861 = !DILocation(line: 380, column: 11, scope: !4860, inlinedAt: !4672)
!4862 = !DILocation(line: 380, column: 6, scope: !4668, inlinedAt: !4672)
!4863 = !DILocation(line: 380, column: 33, scope: !4860, inlinedAt: !4672)
!4864 = !DILocation(line: 381, column: 6, scope: !4865, inlinedAt: !4672)
!4865 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 381, column: 6)
!4866 = !DILocation(line: 381, column: 11, scope: !4865, inlinedAt: !4672)
!4867 = !DILocation(line: 381, column: 6, scope: !4668, inlinedAt: !4672)
!4868 = !DILocation(line: 381, column: 33, scope: !4865, inlinedAt: !4672)
!4869 = !DILocation(line: 382, column: 2, scope: !4870, inlinedAt: !4672)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !297, line: 382, column: 2)
!4871 = distinct !DILexicalBlock(scope: !4668, file: !297, line: 382, column: 2)
!4872 = !{i32 -2144125051, i32 -2144125022, i32 -2144124976, i32 -2144124918, i32 -2144124864, i32 -2144124810, i32 -2144124755, i32 -2144124724}
!4873 = !DILocation(line: 382, column: 2, scope: !4874, inlinedAt: !4672)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !297, line: 382, column: 2)
!4875 = distinct !DILexicalBlock(scope: !4871, file: !297, line: 382, column: 2)
!4876 = !{i32 -2144124281, i32 -2144124274, i32 -2144124220, i32 -2144124189, i32 -2144124159}
!4877 = !DILocation(line: 382, column: 2, scope: !4875, inlinedAt: !4672)
!4878 = !DILocation(line: 386, column: 1, scope: !4668, inlinedAt: !4672)
!4879 = !DILocation(line: 547, column: 9, scope: !4651, inlinedAt: !4654)
!4880 = !DILocation(line: 549, column: 8, scope: !4881, inlinedAt: !4654)
!4881 = distinct !DILexicalBlock(scope: !4651, file: !297, line: 549, column: 7)
!4882 = !DILocation(line: 549, column: 7, scope: !4651, inlinedAt: !4654)
!4883 = !DILocation(line: 550, column: 4, scope: !4881, inlinedAt: !4654)
!4884 = !DILocation(line: 553, column: 33, scope: !4651, inlinedAt: !4654)
!4885 = !DILocation(line: 325, column: 6, scope: !4886, inlinedAt: !4666)
!4886 = distinct !DILexicalBlock(scope: !4662, file: !297, line: 325, column: 6)
!4887 = !DILocation(line: 325, column: 6, scope: !4662, inlinedAt: !4666)
!4888 = !DILocation(line: 326, column: 3, scope: !4886, inlinedAt: !4666)
!4889 = !DILocation(line: 332, column: 9, scope: !4662, inlinedAt: !4666)
!4890 = !DILocation(line: 332, column: 15, scope: !4662, inlinedAt: !4666)
!4891 = !DILocation(line: 332, column: 2, scope: !4662, inlinedAt: !4666)
!4892 = !DILocation(line: 336, column: 1, scope: !4662, inlinedAt: !4666)
!4893 = !DILocation(line: 553, column: 5, scope: !4651, inlinedAt: !4654)
!4894 = !DILocation(line: 553, column: 41, scope: !4651, inlinedAt: !4654)
!4895 = !DILocation(line: 554, column: 5, scope: !4651, inlinedAt: !4654)
!4896 = !DILocation(line: 554, column: 12, scope: !4651, inlinedAt: !4654)
!4897 = !DILocation(line: 448, column: 31, scope: !4646, inlinedAt: !4650)
!4898 = !DILocation(line: 448, column: 34, scope: !4646, inlinedAt: !4650)
!4899 = !DILocation(line: 448, column: 14, scope: !4646, inlinedAt: !4650)
!4900 = !DILocation(line: 450, column: 22, scope: !4646, inlinedAt: !4650)
!4901 = !DILocation(line: 450, column: 25, scope: !4646, inlinedAt: !4650)
!4902 = !DILocation(line: 450, column: 30, scope: !4646, inlinedAt: !4650)
!4903 = !DILocation(line: 450, column: 36, scope: !4646, inlinedAt: !4650)
!4904 = !DILocation(line: 450, column: 8, scope: !4646, inlinedAt: !4650)
!4905 = !DILocation(line: 450, column: 6, scope: !4646, inlinedAt: !4650)
!4906 = !DILocation(line: 451, column: 9, scope: !4646, inlinedAt: !4650)
!4907 = !DILocation(line: 552, column: 3, scope: !4651, inlinedAt: !4654)
!4908 = !DILocation(line: 557, column: 19, scope: !4653, inlinedAt: !4654)
!4909 = !DILocation(line: 557, column: 25, scope: !4653, inlinedAt: !4654)
!4910 = !DILocation(line: 557, column: 9, scope: !4653, inlinedAt: !4654)
!4911 = !DILocation(line: 557, column: 2, scope: !4653, inlinedAt: !4654)
!4912 = !DILocation(line: 558, column: 1, scope: !4653, inlinedAt: !4654)
!4913 = !DILocation(line: 664, column: 2, scope: !4642)
!4914 = distinct !DISubprogram(name: "cxd2841er_chip_id", scope: !3, file: !3, line: 959, type: !4915, scopeLine: 960, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{!332, !4266}
!4917 = !DILocalVariable(name: "priv", arg: 1, scope: !4914, file: !3, line: 959, type: !4266)
!4918 = !DILocation(line: 959, column: 52, scope: !4914)
!4919 = !DILocalVariable(name: "chip_id", scope: !4914, file: !3, line: 961, type: !332)
!4920 = !DILocation(line: 961, column: 5, scope: !4914)
!4921 = !DILocation(line: 964, column: 26, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 964, column: 6)
!4923 = !DILocation(line: 964, column: 6, scope: !4922)
!4924 = !DILocation(line: 964, column: 48, scope: !4922)
!4925 = !DILocation(line: 964, column: 6, scope: !4914)
!4926 = !DILocation(line: 965, column: 22, scope: !4922)
!4927 = !DILocation(line: 965, column: 3, scope: !4922)
!4928 = !DILocation(line: 966, column: 31, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4922, file: !3, line: 966, column: 11)
!4930 = !DILocation(line: 966, column: 11, scope: !4929)
!4931 = !DILocation(line: 966, column: 53, scope: !4929)
!4932 = !DILocation(line: 966, column: 11, scope: !4922)
!4933 = !DILocation(line: 967, column: 22, scope: !4929)
!4934 = !DILocation(line: 967, column: 3, scope: !4929)
!4935 = !DILocation(line: 969, column: 9, scope: !4914)
!4936 = !DILocation(line: 969, column: 2, scope: !4914)
!4937 = distinct !DISubprogram(name: "get_order", scope: !4938, file: !4938, line: 29, type: !4939, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4938 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!4939 = !DISubroutineType(types: !4940)
!4940 = !{!331, !534}
!4941 = !DILocalVariable(name: "x", arg: 1, scope: !4942, file: !4943, line: 366, type: !336)
!4942 = distinct !DISubprogram(name: "fls64", scope: !4943, file: !4943, line: 366, type: !4944, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4943 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!4944 = !DISubroutineType(types: !4945)
!4945 = !{!331, !336}
!4946 = !DILocation(line: 366, column: 40, scope: !4942, inlinedAt: !4947)
!4947 = distinct !DILocation(line: 46, column: 9, scope: !4937)
!4948 = !DILocalVariable(name: "bitpos", scope: !4942, file: !4943, line: 368, type: !331)
!4949 = !DILocation(line: 368, column: 6, scope: !4942, inlinedAt: !4947)
!4950 = !DILocalVariable(name: "size", arg: 1, scope: !4937, file: !4938, line: 29, type: !534)
!4951 = !DILocation(line: 29, column: 63, scope: !4937)
!4952 = !DILocation(line: 31, column: 27, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4937, file: !4938, line: 31, column: 6)
!4954 = !DILocation(line: 31, column: 6, scope: !4953)
!4955 = !DILocation(line: 31, column: 6, scope: !4937)
!4956 = !DILocation(line: 32, column: 8, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !4938, line: 32, column: 7)
!4958 = distinct !DILexicalBlock(scope: !4953, file: !4938, line: 31, column: 34)
!4959 = !DILocation(line: 32, column: 7, scope: !4958)
!4960 = !DILocation(line: 33, column: 4, scope: !4957)
!4961 = !DILocation(line: 35, column: 7, scope: !4962)
!4962 = distinct !DILexicalBlock(scope: !4958, file: !4938, line: 35, column: 7)
!4963 = !DILocation(line: 35, column: 12, scope: !4962)
!4964 = !DILocation(line: 35, column: 7, scope: !4958)
!4965 = !DILocation(line: 36, column: 4, scope: !4962)
!4966 = !DILocation(line: 38, column: 10, scope: !4958)
!4967 = !DILocation(line: 38, column: 28, scope: !4958)
!4968 = !DILocation(line: 38, column: 41, scope: !4958)
!4969 = !DILocation(line: 38, column: 3, scope: !4958)
!4970 = !DILocation(line: 41, column: 6, scope: !4937)
!4971 = !DILocation(line: 42, column: 7, scope: !4937)
!4972 = !DILocation(line: 46, column: 15, scope: !4937)
!4973 = !DILocation(line: 374, column: 2, scope: !4942, inlinedAt: !4947)
!4974 = !DILocation(line: 376, column: 14, scope: !4942, inlinedAt: !4947)
!4975 = !{i32 419274}
!4976 = !DILocation(line: 377, column: 9, scope: !4942, inlinedAt: !4947)
!4977 = !DILocation(line: 377, column: 16, scope: !4942, inlinedAt: !4947)
!4978 = !DILocation(line: 46, column: 2, scope: !4937)
!4979 = !DILocation(line: 48, column: 1, scope: !4937)
!4980 = distinct !DISubprogram(name: "__ilog2_u64", scope: !4981, file: !4981, line: 30, type: !4982, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4981 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!4982 = !DISubroutineType(types: !4983)
!4983 = !{!331, !335}
!4984 = !DILocation(line: 366, column: 40, scope: !4942, inlinedAt: !4985)
!4985 = distinct !DILocation(line: 32, column: 9, scope: !4980)
!4986 = !DILocation(line: 368, column: 6, scope: !4942, inlinedAt: !4985)
!4987 = !DILocalVariable(name: "n", arg: 1, scope: !4980, file: !4981, line: 30, type: !335)
!4988 = !DILocation(line: 30, column: 21, scope: !4980)
!4989 = !DILocation(line: 32, column: 15, scope: !4980)
!4990 = !DILocation(line: 374, column: 2, scope: !4942, inlinedAt: !4985)
!4991 = !DILocation(line: 376, column: 14, scope: !4942, inlinedAt: !4985)
!4992 = !DILocation(line: 377, column: 9, scope: !4942, inlinedAt: !4985)
!4993 = !DILocation(line: 377, column: 16, scope: !4942, inlinedAt: !4985)
!4994 = !DILocation(line: 32, column: 18, scope: !4980)
!4995 = !DILocation(line: 32, column: 2, scope: !4980)
!4996 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !4997, file: !4997, line: 137, type: !4998, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!4997 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!325, !1134, !2239, !531, !323}
!5000 = !DILocalVariable(name: "s", arg: 1, scope: !4996, file: !4997, line: 137, type: !1134)
!5001 = !DILocation(line: 137, column: 54, scope: !4996)
!5002 = !DILocalVariable(name: "object", arg: 2, scope: !4996, file: !4997, line: 137, type: !2239)
!5003 = !DILocation(line: 137, column: 69, scope: !4996)
!5004 = !DILocalVariable(name: "size", arg: 3, scope: !4996, file: !4997, line: 138, type: !531)
!5005 = !DILocation(line: 138, column: 12, scope: !4996)
!5006 = !DILocalVariable(name: "flags", arg: 4, scope: !4996, file: !4997, line: 138, type: !323)
!5007 = !DILocation(line: 138, column: 24, scope: !4996)
!5008 = !DILocation(line: 140, column: 17, scope: !4996)
!5009 = !DILocation(line: 140, column: 2, scope: !4996)
!5010 = distinct !DISubprogram(name: "cxd2841er_write_reg", scope: !3, file: !3, line: 250, type: !5011, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5011 = !DISubroutineType(types: !5012)
!5012 = !{!331, !4266, !332, !332, !332}
!5013 = !DILocalVariable(name: "priv", arg: 1, scope: !5010, file: !3, line: 250, type: !4266)
!5014 = !DILocation(line: 250, column: 55, scope: !5010)
!5015 = !DILocalVariable(name: "addr", arg: 2, scope: !5010, file: !3, line: 251, type: !332)
!5016 = !DILocation(line: 251, column: 14, scope: !5010)
!5017 = !DILocalVariable(name: "reg", arg: 3, scope: !5010, file: !3, line: 251, type: !332)
!5018 = !DILocation(line: 251, column: 23, scope: !5010)
!5019 = !DILocalVariable(name: "val", arg: 4, scope: !5010, file: !3, line: 251, type: !332)
!5020 = !DILocation(line: 251, column: 31, scope: !5010)
!5021 = !DILocalVariable(name: "tmp", scope: !5010, file: !3, line: 253, type: !332)
!5022 = !DILocation(line: 253, column: 5, scope: !5010)
!5023 = !DILocation(line: 253, column: 11, scope: !5010)
!5024 = !DILocation(line: 255, column: 30, scope: !5010)
!5025 = !DILocation(line: 255, column: 36, scope: !5010)
!5026 = !DILocation(line: 255, column: 42, scope: !5010)
!5027 = !DILocation(line: 255, column: 9, scope: !5010)
!5028 = !DILocation(line: 255, column: 2, scope: !5010)
!5029 = distinct !DISubprogram(name: "cxd2841er_read_reg", scope: !3, file: !3, line: 291, type: !5030, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5030 = !DISubroutineType(types: !5031)
!5031 = !{!331, !4266, !332, !332, !4237}
!5032 = !DILocalVariable(name: "priv", arg: 1, scope: !5029, file: !3, line: 291, type: !4266)
!5033 = !DILocation(line: 291, column: 54, scope: !5029)
!5034 = !DILocalVariable(name: "addr", arg: 2, scope: !5029, file: !3, line: 292, type: !332)
!5035 = !DILocation(line: 292, column: 13, scope: !5029)
!5036 = !DILocalVariable(name: "reg", arg: 3, scope: !5029, file: !3, line: 292, type: !332)
!5037 = !DILocation(line: 292, column: 22, scope: !5029)
!5038 = !DILocalVariable(name: "val", arg: 4, scope: !5029, file: !3, line: 292, type: !4237)
!5039 = !DILocation(line: 292, column: 31, scope: !5029)
!5040 = !DILocation(line: 294, column: 29, scope: !5029)
!5041 = !DILocation(line: 294, column: 35, scope: !5029)
!5042 = !DILocation(line: 294, column: 41, scope: !5029)
!5043 = !DILocation(line: 294, column: 46, scope: !5029)
!5044 = !DILocation(line: 294, column: 9, scope: !5029)
!5045 = !DILocation(line: 294, column: 2, scope: !5029)
!5046 = distinct !DISubprogram(name: "cxd2841er_write_regs", scope: !3, file: !3, line: 212, type: !5047, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5047 = !DISubroutineType(types: !5048)
!5048 = !{!331, !4266, !332, !332, !4095, !326}
!5049 = !DILocalVariable(name: "priv", arg: 1, scope: !5046, file: !3, line: 212, type: !4266)
!5050 = !DILocation(line: 212, column: 56, scope: !5046)
!5051 = !DILocalVariable(name: "addr", arg: 2, scope: !5046, file: !3, line: 213, type: !332)
!5052 = !DILocation(line: 213, column: 8, scope: !5046)
!5053 = !DILocalVariable(name: "reg", arg: 3, scope: !5046, file: !3, line: 213, type: !332)
!5054 = !DILocation(line: 213, column: 17, scope: !5046)
!5055 = !DILocalVariable(name: "data", arg: 4, scope: !5046, file: !3, line: 213, type: !4095)
!5056 = !DILocation(line: 213, column: 32, scope: !5046)
!5057 = !DILocalVariable(name: "len", arg: 5, scope: !5046, file: !3, line: 213, type: !326)
!5058 = !DILocation(line: 213, column: 42, scope: !5046)
!5059 = !DILocalVariable(name: "ret", scope: !5046, file: !3, line: 215, type: !331)
!5060 = !DILocation(line: 215, column: 6, scope: !5046)
!5061 = !DILocalVariable(name: "buf", scope: !5046, file: !3, line: 216, type: !5062)
!5062 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 136, elements: !5063)
!5063 = !{!5064}
!5064 = !DISubrange(count: 17)
!5065 = !DILocation(line: 216, column: 5, scope: !5046)
!5066 = !DILocalVariable(name: "i2c_addr", scope: !5046, file: !3, line: 217, type: !332)
!5067 = !DILocation(line: 217, column: 5, scope: !5046)
!5068 = !DILocation(line: 217, column: 17, scope: !5046)
!5069 = !DILocation(line: 217, column: 22, scope: !5046)
!5070 = !DILocation(line: 218, column: 3, scope: !5046)
!5071 = !DILocation(line: 218, column: 9, scope: !5046)
!5072 = !DILocation(line: 218, column: 25, scope: !5046)
!5073 = !DILocation(line: 218, column: 31, scope: !5046)
!5074 = !DILocation(line: 217, column: 16, scope: !5046)
!5075 = !DILocalVariable(name: "msg", scope: !5046, file: !3, line: 219, type: !5076)
!5076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4287, size: 128, elements: !1481)
!5077 = !DILocation(line: 219, column: 17, scope: !5046)
!5078 = !DILocation(line: 219, column: 26, scope: !5046)
!5079 = !DILocation(line: 220, column: 3, scope: !5046)
!5080 = !DILocation(line: 221, column: 12, scope: !5046)
!5081 = !DILocation(line: 223, column: 11, scope: !5046)
!5082 = !DILocation(line: 223, column: 15, scope: !5046)
!5083 = !DILocation(line: 224, column: 11, scope: !5046)
!5084 = !DILocation(line: 228, column: 6, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 228, column: 6)
!5086 = !DILocation(line: 228, column: 10, scope: !5085)
!5087 = !DILocation(line: 228, column: 14, scope: !5085)
!5088 = !DILocation(line: 228, column: 6, scope: !5046)
!5089 = !DILocation(line: 229, column: 3, scope: !5090)
!5090 = distinct !DILexicalBlock(scope: !5085, file: !3, line: 228, column: 30)
!5091 = !DILocation(line: 231, column: 3, scope: !5090)
!5092 = !DILocation(line: 234, column: 22, scope: !5046)
!5093 = !DILocation(line: 234, column: 28, scope: !5046)
!5094 = !DILocation(line: 234, column: 38, scope: !5046)
!5095 = !DILocation(line: 234, column: 46, scope: !5046)
!5096 = !DILocation(line: 234, column: 52, scope: !5046)
!5097 = !DILocation(line: 234, column: 2, scope: !5046)
!5098 = !DILocation(line: 235, column: 11, scope: !5046)
!5099 = !DILocation(line: 235, column: 2, scope: !5046)
!5100 = !DILocation(line: 235, column: 9, scope: !5046)
!5101 = !DILocation(line: 236, column: 10, scope: !5046)
!5102 = !DILocation(line: 236, column: 18, scope: !5046)
!5103 = !DILocation(line: 236, column: 24, scope: !5046)
!5104 = !DILocation(line: 236, column: 2, scope: !5046)
!5105 = !DILocation(line: 238, column: 21, scope: !5046)
!5106 = !DILocation(line: 238, column: 27, scope: !5046)
!5107 = !DILocation(line: 238, column: 32, scope: !5046)
!5108 = !DILocation(line: 238, column: 8, scope: !5046)
!5109 = !DILocation(line: 238, column: 6, scope: !5046)
!5110 = !DILocation(line: 239, column: 6, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 239, column: 6)
!5112 = !DILocation(line: 239, column: 10, scope: !5111)
!5113 = !DILocation(line: 239, column: 15, scope: !5111)
!5114 = !DILocation(line: 239, column: 18, scope: !5111)
!5115 = !DILocation(line: 239, column: 22, scope: !5111)
!5116 = !DILocation(line: 239, column: 6, scope: !5046)
!5117 = !DILocation(line: 240, column: 7, scope: !5111)
!5118 = !DILocation(line: 240, column: 3, scope: !5111)
!5119 = !DILocation(line: 241, column: 6, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 241, column: 6)
!5121 = !DILocation(line: 241, column: 10, scope: !5120)
!5122 = !DILocation(line: 241, column: 6, scope: !5046)
!5123 = !DILocation(line: 242, column: 3, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5120, file: !3, line: 241, column: 15)
!5125 = !DILocation(line: 245, column: 10, scope: !5124)
!5126 = !DILocation(line: 245, column: 3, scope: !5124)
!5127 = !DILocation(line: 247, column: 2, scope: !5046)
!5128 = !DILocation(line: 248, column: 1, scope: !5046)
!5129 = distinct !DISubprogram(name: "cxd2841er_i2c_debug", scope: !3, file: !3, line: 203, type: !5130, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{null, !4266, !332, !332, !332, !4095, !326}
!5132 = !DILocalVariable(name: "priv", arg: 1, scope: !5129, file: !3, line: 203, type: !4266)
!5133 = !DILocation(line: 203, column: 56, scope: !5129)
!5134 = !DILocalVariable(name: "addr", arg: 2, scope: !5129, file: !3, line: 204, type: !332)
!5135 = !DILocation(line: 204, column: 8, scope: !5129)
!5136 = !DILocalVariable(name: "reg", arg: 3, scope: !5129, file: !3, line: 204, type: !332)
!5137 = !DILocation(line: 204, column: 17, scope: !5129)
!5138 = !DILocalVariable(name: "write", arg: 4, scope: !5129, file: !3, line: 204, type: !332)
!5139 = !DILocation(line: 204, column: 25, scope: !5129)
!5140 = !DILocalVariable(name: "data", arg: 5, scope: !5129, file: !3, line: 205, type: !4095)
!5141 = !DILocation(line: 205, column: 15, scope: !5129)
!5142 = !DILocalVariable(name: "len", arg: 6, scope: !5129, file: !3, line: 205, type: !326)
!5143 = !DILocation(line: 205, column: 25, scope: !5129)
!5144 = !DILocation(line: 210, column: 1, scope: !5129)
!5145 = distinct !DISubprogram(name: "cxd2841er_read_regs", scope: !3, file: !3, line: 258, type: !5146, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5146 = !DISubroutineType(types: !5147)
!5147 = !{!331, !4266, !332, !332, !4237, !326}
!5148 = !DILocalVariable(name: "priv", arg: 1, scope: !5145, file: !3, line: 258, type: !4266)
!5149 = !DILocation(line: 258, column: 55, scope: !5145)
!5150 = !DILocalVariable(name: "addr", arg: 2, scope: !5145, file: !3, line: 259, type: !332)
!5151 = !DILocation(line: 259, column: 14, scope: !5145)
!5152 = !DILocalVariable(name: "reg", arg: 3, scope: !5145, file: !3, line: 259, type: !332)
!5153 = !DILocation(line: 259, column: 23, scope: !5145)
!5154 = !DILocalVariable(name: "val", arg: 4, scope: !5145, file: !3, line: 259, type: !4237)
!5155 = !DILocation(line: 259, column: 32, scope: !5145)
!5156 = !DILocalVariable(name: "len", arg: 5, scope: !5145, file: !3, line: 259, type: !326)
!5157 = !DILocation(line: 259, column: 41, scope: !5145)
!5158 = !DILocalVariable(name: "ret", scope: !5145, file: !3, line: 261, type: !331)
!5159 = !DILocation(line: 261, column: 6, scope: !5145)
!5160 = !DILocalVariable(name: "i2c_addr", scope: !5145, file: !3, line: 262, type: !332)
!5161 = !DILocation(line: 262, column: 5, scope: !5145)
!5162 = !DILocation(line: 262, column: 17, scope: !5145)
!5163 = !DILocation(line: 262, column: 22, scope: !5145)
!5164 = !DILocation(line: 263, column: 3, scope: !5145)
!5165 = !DILocation(line: 263, column: 9, scope: !5145)
!5166 = !DILocation(line: 263, column: 25, scope: !5145)
!5167 = !DILocation(line: 263, column: 31, scope: !5145)
!5168 = !DILocation(line: 262, column: 16, scope: !5145)
!5169 = !DILocalVariable(name: "msg", scope: !5145, file: !3, line: 264, type: !5170)
!5170 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4287, size: 256, elements: !1682)
!5171 = !DILocation(line: 264, column: 17, scope: !5145)
!5172 = !DILocation(line: 264, column: 26, scope: !5145)
!5173 = !DILocation(line: 265, column: 3, scope: !5145)
!5174 = !DILocation(line: 266, column: 12, scope: !5145)
!5175 = !DILocation(line: 270, column: 6, scope: !5145)
!5176 = !DILocation(line: 271, column: 12, scope: !5145)
!5177 = !DILocation(line: 273, column: 11, scope: !5145)
!5178 = !DILocation(line: 274, column: 11, scope: !5145)
!5179 = !DILocation(line: 278, column: 21, scope: !5145)
!5180 = !DILocation(line: 278, column: 27, scope: !5145)
!5181 = !DILocation(line: 278, column: 32, scope: !5145)
!5182 = !DILocation(line: 278, column: 8, scope: !5145)
!5183 = !DILocation(line: 278, column: 6, scope: !5145)
!5184 = !DILocation(line: 279, column: 6, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 279, column: 6)
!5186 = !DILocation(line: 279, column: 10, scope: !5185)
!5187 = !DILocation(line: 279, column: 15, scope: !5185)
!5188 = !DILocation(line: 279, column: 18, scope: !5185)
!5189 = !DILocation(line: 279, column: 22, scope: !5185)
!5190 = !DILocation(line: 279, column: 6, scope: !5145)
!5191 = !DILocation(line: 280, column: 7, scope: !5185)
!5192 = !DILocation(line: 280, column: 3, scope: !5185)
!5193 = !DILocation(line: 281, column: 6, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5145, file: !3, line: 281, column: 6)
!5195 = !DILocation(line: 281, column: 10, scope: !5194)
!5196 = !DILocation(line: 281, column: 6, scope: !5145)
!5197 = !DILocation(line: 282, column: 3, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5194, file: !3, line: 281, column: 15)
!5199 = !DILocation(line: 285, column: 10, scope: !5198)
!5200 = !DILocation(line: 285, column: 3, scope: !5198)
!5201 = !DILocation(line: 287, column: 22, scope: !5145)
!5202 = !DILocation(line: 287, column: 28, scope: !5145)
!5203 = !DILocation(line: 287, column: 38, scope: !5145)
!5204 = !DILocation(line: 287, column: 46, scope: !5145)
!5205 = !DILocation(line: 287, column: 51, scope: !5145)
!5206 = !DILocation(line: 287, column: 2, scope: !5145)
!5207 = !DILocation(line: 288, column: 2, scope: !5145)
!5208 = !DILocation(line: 289, column: 1, scope: !5145)
!5209 = distinct !DISubprogram(name: "cxd2841er_release", scope: !3, file: !3, line: 3739, type: !388, scopeLine: 3740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5210 = !DILocalVariable(name: "fe", arg: 1, scope: !5209, file: !3, line: 3739, type: !390)
!5211 = !DILocation(line: 3739, column: 52, scope: !5209)
!5212 = !DILocalVariable(name: "priv", scope: !5209, file: !3, line: 3741, type: !4266)
!5213 = !DILocation(line: 3741, column: 25, scope: !5209)
!5214 = !DILocation(line: 3741, column: 33, scope: !5209)
!5215 = !DILocation(line: 3741, column: 37, scope: !5209)
!5216 = !DILocation(line: 3744, column: 8, scope: !5209)
!5217 = !DILocation(line: 3744, column: 2, scope: !5209)
!5218 = !DILocation(line: 3745, column: 1, scope: !5209)
!5219 = distinct !DISubprogram(name: "cxd2841er_init_tc", scope: !3, file: !3, line: 3809, type: !4088, scopeLine: 3810, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5220 = !DILocalVariable(name: "fe", arg: 1, scope: !5219, file: !3, line: 3809, type: !390)
!5221 = !DILocation(line: 3809, column: 51, scope: !5219)
!5222 = !DILocalVariable(name: "priv", scope: !5219, file: !3, line: 3811, type: !4266)
!5223 = !DILocation(line: 3811, column: 25, scope: !5219)
!5224 = !DILocation(line: 3811, column: 32, scope: !5219)
!5225 = !DILocation(line: 3811, column: 36, scope: !5219)
!5226 = !DILocalVariable(name: "p", scope: !5219, file: !3, line: 3812, type: !4121)
!5227 = !DILocation(line: 3812, column: 34, scope: !5219)
!5228 = !DILocation(line: 3812, column: 39, scope: !5219)
!5229 = !DILocation(line: 3812, column: 43, scope: !5219)
!5230 = !DILocation(line: 3816, column: 33, scope: !5219)
!5231 = !DILocation(line: 3816, column: 2, scope: !5219)
!5232 = !DILocation(line: 3818, column: 22, scope: !5219)
!5233 = !DILocation(line: 3818, column: 2, scope: !5219)
!5234 = !DILocation(line: 3819, column: 25, scope: !5219)
!5235 = !DILocation(line: 3820, column: 5, scope: !5219)
!5236 = !DILocation(line: 3820, column: 11, scope: !5219)
!5237 = !DILocation(line: 3820, column: 17, scope: !5219)
!5238 = !DILocation(line: 3820, column: 4, scope: !5219)
!5239 = !DILocation(line: 3820, column: 3, scope: !5219)
!5240 = !DILocation(line: 3819, column: 2, scope: !5219)
!5241 = !DILocation(line: 3822, column: 22, scope: !5219)
!5242 = !DILocation(line: 3822, column: 2, scope: !5219)
!5243 = !DILocation(line: 3824, column: 22, scope: !5219)
!5244 = !DILocation(line: 3824, column: 2, scope: !5219)
!5245 = !DILocation(line: 3825, column: 25, scope: !5219)
!5246 = !DILocation(line: 3826, column: 5, scope: !5219)
!5247 = !DILocation(line: 3826, column: 11, scope: !5219)
!5248 = !DILocation(line: 3826, column: 17, scope: !5219)
!5249 = !DILocation(line: 3826, column: 4, scope: !5219)
!5250 = !DILocation(line: 3826, column: 3, scope: !5219)
!5251 = !DILocation(line: 3825, column: 2, scope: !5219)
!5252 = !DILocation(line: 3829, column: 6, scope: !5253)
!5253 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 3829, column: 6)
!5254 = !DILocation(line: 3829, column: 12, scope: !5253)
!5255 = !DILocation(line: 3829, column: 18, scope: !5253)
!5256 = !DILocation(line: 3829, column: 6, scope: !5219)
!5257 = !DILocation(line: 3830, column: 26, scope: !5253)
!5258 = !DILocation(line: 3830, column: 3, scope: !5253)
!5259 = !DILocation(line: 3832, column: 23, scope: !5219)
!5260 = !DILocation(line: 3832, column: 2, scope: !5219)
!5261 = !DILocation(line: 3834, column: 2, scope: !5219)
!5262 = distinct !DISubprogram(name: "cxd2841er_shutdown_tc", scope: !3, file: !3, line: 3642, type: !4088, scopeLine: 3643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5263 = !DILocalVariable(name: "fe", arg: 1, scope: !5262, file: !3, line: 3642, type: !390)
!5264 = !DILocation(line: 3642, column: 55, scope: !5262)
!5265 = !DILocalVariable(name: "priv", scope: !5262, file: !3, line: 3644, type: !4266)
!5266 = !DILocation(line: 3644, column: 25, scope: !5262)
!5267 = !DILocation(line: 3644, column: 32, scope: !5262)
!5268 = !DILocation(line: 3644, column: 36, scope: !5262)
!5269 = !DILocation(line: 3648, column: 26, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 3648, column: 6)
!5271 = !DILocation(line: 3648, column: 7, scope: !5270)
!5272 = !DILocation(line: 3648, column: 6, scope: !5262)
!5273 = !DILocation(line: 3649, column: 34, scope: !5270)
!5274 = !DILocation(line: 3649, column: 3, scope: !5270)
!5275 = !DILocation(line: 3650, column: 2, scope: !5262)
!5276 = distinct !DISubprogram(name: "cxd2841er_tune_tc", scope: !3, file: !3, line: 3534, type: !4099, scopeLine: 3539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5277 = !DILocalVariable(name: "fe", arg: 1, scope: !5276, file: !3, line: 3534, type: !390)
!5278 = !DILocation(line: 3534, column: 51, scope: !5276)
!5279 = !DILocalVariable(name: "re_tune", arg: 2, scope: !5276, file: !3, line: 3535, type: !692)
!5280 = !DILocation(line: 3535, column: 14, scope: !5276)
!5281 = !DILocalVariable(name: "mode_flags", arg: 3, scope: !5276, file: !3, line: 3536, type: !7)
!5282 = !DILocation(line: 3536, column: 22, scope: !5276)
!5283 = !DILocalVariable(name: "delay", arg: 4, scope: !5276, file: !3, line: 3537, type: !2734)
!5284 = !DILocation(line: 3537, column: 23, scope: !5276)
!5285 = !DILocalVariable(name: "status", arg: 5, scope: !5276, file: !3, line: 3538, type: !4101)
!5286 = !DILocation(line: 3538, column: 25, scope: !5276)
!5287 = !DILocalVariable(name: "ret", scope: !5276, file: !3, line: 3540, type: !331)
!5288 = !DILocation(line: 3540, column: 6, scope: !5276)
!5289 = !DILocalVariable(name: "carrier_offset", scope: !5276, file: !3, line: 3540, type: !331)
!5290 = !DILocation(line: 3540, column: 11, scope: !5276)
!5291 = !DILocalVariable(name: "priv", scope: !5276, file: !3, line: 3541, type: !4266)
!5292 = !DILocation(line: 3541, column: 25, scope: !5276)
!5293 = !DILocation(line: 3541, column: 32, scope: !5276)
!5294 = !DILocation(line: 3541, column: 36, scope: !5276)
!5295 = !DILocalVariable(name: "p", scope: !5276, file: !3, line: 3542, type: !4121)
!5296 = !DILocation(line: 3542, column: 34, scope: !5276)
!5297 = !DILocation(line: 3542, column: 39, scope: !5276)
!5298 = !DILocation(line: 3542, column: 43, scope: !5276)
!5299 = !DILocation(line: 3546, column: 6, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 3546, column: 6)
!5301 = !DILocation(line: 3546, column: 6, scope: !5276)
!5302 = !DILocation(line: 3547, column: 35, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 3546, column: 15)
!5304 = !DILocation(line: 3547, column: 9, scope: !5303)
!5305 = !DILocation(line: 3547, column: 7, scope: !5303)
!5306 = !DILocation(line: 3548, column: 7, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 3548, column: 7)
!5308 = !DILocation(line: 3548, column: 7, scope: !5303)
!5309 = !DILocation(line: 3549, column: 11, scope: !5307)
!5310 = !DILocation(line: 3549, column: 4, scope: !5307)
!5311 = !DILocation(line: 3550, column: 28, scope: !5303)
!5312 = !DILocation(line: 3550, column: 32, scope: !5303)
!5313 = !DILocation(line: 3550, column: 3, scope: !5303)
!5314 = !DILocation(line: 3551, column: 8, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5303, file: !3, line: 3551, column: 7)
!5316 = !DILocation(line: 3551, column: 7, scope: !5315)
!5317 = !DILocation(line: 3551, column: 15, scope: !5315)
!5318 = !DILocation(line: 3551, column: 7, scope: !5303)
!5319 = !DILocation(line: 3552, column: 12, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5315, file: !3, line: 3551, column: 30)
!5321 = !DILocation(line: 3552, column: 18, scope: !5320)
!5322 = !DILocation(line: 3552, column: 4, scope: !5320)
!5323 = !DILocation(line: 3555, column: 7, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 3552, column: 26)
!5325 = !DILocation(line: 3555, column: 13, scope: !5324)
!5326 = !DILocation(line: 3555, column: 16, scope: !5324)
!5327 = !DILocation(line: 3554, column: 11, scope: !5324)
!5328 = !DILocation(line: 3554, column: 9, scope: !5324)
!5329 = !DILocation(line: 3557, column: 9, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 3557, column: 9)
!5331 = !DILocation(line: 3557, column: 9, scope: !5324)
!5332 = !DILocation(line: 3558, column: 13, scope: !5330)
!5333 = !DILocation(line: 3558, column: 6, scope: !5330)
!5334 = !DILocation(line: 3559, column: 5, scope: !5324)
!5335 = !DILocation(line: 3562, column: 6, scope: !5324)
!5336 = !DILocation(line: 3562, column: 12, scope: !5324)
!5337 = !DILocation(line: 3562, column: 15, scope: !5324)
!5338 = !DILocation(line: 3561, column: 11, scope: !5324)
!5339 = !DILocation(line: 3561, column: 9, scope: !5324)
!5340 = !DILocation(line: 3564, column: 9, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 3564, column: 9)
!5342 = !DILocation(line: 3564, column: 9, scope: !5324)
!5343 = !DILocation(line: 3565, column: 13, scope: !5341)
!5344 = !DILocation(line: 3565, column: 6, scope: !5341)
!5345 = !DILocation(line: 3566, column: 5, scope: !5324)
!5346 = !DILocation(line: 3569, column: 6, scope: !5324)
!5347 = !DILocation(line: 3569, column: 12, scope: !5324)
!5348 = !DILocation(line: 3569, column: 15, scope: !5324)
!5349 = !DILocation(line: 3568, column: 11, scope: !5324)
!5350 = !DILocation(line: 3568, column: 9, scope: !5324)
!5351 = !DILocation(line: 3571, column: 9, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 3571, column: 9)
!5353 = !DILocation(line: 3571, column: 9, scope: !5324)
!5354 = !DILocation(line: 3572, column: 13, scope: !5352)
!5355 = !DILocation(line: 3572, column: 6, scope: !5352)
!5356 = !DILocation(line: 3573, column: 5, scope: !5324)
!5357 = !DILocation(line: 3576, column: 6, scope: !5324)
!5358 = !DILocation(line: 3575, column: 11, scope: !5324)
!5359 = !DILocation(line: 3575, column: 9, scope: !5324)
!5360 = !DILocation(line: 3577, column: 9, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 3577, column: 9)
!5362 = !DILocation(line: 3577, column: 9, scope: !5324)
!5363 = !DILocation(line: 3578, column: 13, scope: !5361)
!5364 = !DILocation(line: 3578, column: 6, scope: !5361)
!5365 = !DILocation(line: 3579, column: 5, scope: !5324)
!5366 = !DILocation(line: 3584, column: 5, scope: !5324)
!5367 = !DILocation(line: 3588, column: 20, scope: !5320)
!5368 = !DILocation(line: 3588, column: 4, scope: !5320)
!5369 = !DILocation(line: 3588, column: 7, scope: !5320)
!5370 = !DILocation(line: 3588, column: 17, scope: !5320)
!5371 = !DILocation(line: 3589, column: 36, scope: !5320)
!5372 = !DILocation(line: 3589, column: 10, scope: !5320)
!5373 = !DILocation(line: 3589, column: 8, scope: !5320)
!5374 = !DILocation(line: 3590, column: 8, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5320, file: !3, line: 3590, column: 8)
!5376 = !DILocation(line: 3590, column: 8, scope: !5320)
!5377 = !DILocation(line: 3591, column: 12, scope: !5375)
!5378 = !DILocation(line: 3591, column: 5, scope: !5375)
!5379 = !DILocation(line: 3592, column: 3, scope: !5320)
!5380 = !DILocation(line: 3593, column: 2, scope: !5303)
!5381 = !DILocation(line: 3594, column: 3, scope: !5276)
!5382 = !DILocation(line: 3594, column: 9, scope: !5276)
!5383 = !DILocation(line: 3595, column: 34, scope: !5276)
!5384 = !DILocation(line: 3595, column: 38, scope: !5276)
!5385 = !DILocation(line: 3595, column: 9, scope: !5276)
!5386 = !DILocation(line: 3595, column: 2, scope: !5276)
!5387 = !DILocation(line: 3596, column: 1, scope: !5276)
!5388 = distinct !DISubprogram(name: "cxd2841er_get_algo", scope: !3, file: !3, line: 3757, type: !4104, scopeLine: 3758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5389 = !DILocalVariable(name: "fe", arg: 1, scope: !5388, file: !3, line: 3757, type: !390)
!5390 = !DILocation(line: 3757, column: 64, scope: !5388)
!5391 = !DILocalVariable(name: "priv", scope: !5388, file: !3, line: 3759, type: !4266)
!5392 = !DILocation(line: 3759, column: 25, scope: !5388)
!5393 = !DILocation(line: 3759, column: 32, scope: !5388)
!5394 = !DILocation(line: 3759, column: 36, scope: !5388)
!5395 = !DILocation(line: 3762, column: 2, scope: !5388)
!5396 = distinct !DISubprogram(name: "cxd2841er_set_frontend_tc", scope: !3, file: !3, line: 3376, type: !4088, scopeLine: 3377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5397 = !DILocalVariable(name: "fe", arg: 1, scope: !5396, file: !3, line: 3376, type: !390)
!5398 = !DILocation(line: 3376, column: 59, scope: !5396)
!5399 = !DILocalVariable(name: "ret", scope: !5396, file: !3, line: 3378, type: !331)
!5400 = !DILocation(line: 3378, column: 6, scope: !5396)
!5401 = !DILocalVariable(name: "timeout", scope: !5396, file: !3, line: 3378, type: !331)
!5402 = !DILocation(line: 3378, column: 15, scope: !5396)
!5403 = !DILocalVariable(name: "status", scope: !5396, file: !3, line: 3379, type: !40)
!5404 = !DILocation(line: 3379, column: 17, scope: !5396)
!5405 = !DILocalVariable(name: "priv", scope: !5396, file: !3, line: 3380, type: !4266)
!5406 = !DILocation(line: 3380, column: 25, scope: !5396)
!5407 = !DILocation(line: 3380, column: 32, scope: !5396)
!5408 = !DILocation(line: 3380, column: 36, scope: !5396)
!5409 = !DILocalVariable(name: "p", scope: !5396, file: !3, line: 3381, type: !4121)
!5410 = !DILocation(line: 3381, column: 34, scope: !5396)
!5411 = !DILocation(line: 3381, column: 39, scope: !5396)
!5412 = !DILocation(line: 3381, column: 43, scope: !5396)
!5413 = !DILocation(line: 3386, column: 6, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3386, column: 6)
!5415 = !DILocation(line: 3386, column: 12, scope: !5414)
!5416 = !DILocation(line: 3386, column: 18, scope: !5414)
!5417 = !DILocation(line: 3386, column: 6, scope: !5396)
!5418 = !DILocation(line: 3387, column: 23, scope: !5414)
!5419 = !DILocation(line: 3387, column: 3, scope: !5414)
!5420 = !DILocation(line: 3390, column: 6, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3390, column: 6)
!5422 = !DILocation(line: 3390, column: 12, scope: !5421)
!5423 = !DILocation(line: 3390, column: 18, scope: !5421)
!5424 = !DILocation(line: 3390, column: 37, scope: !5421)
!5425 = !DILocation(line: 3391, column: 6, scope: !5421)
!5426 = !DILocation(line: 3391, column: 12, scope: !5421)
!5427 = !DILocation(line: 3391, column: 22, scope: !5421)
!5428 = !DILocation(line: 3391, column: 25, scope: !5421)
!5429 = !DILocation(line: 3391, column: 19, scope: !5421)
!5430 = !DILocation(line: 3390, column: 6, scope: !5396)
!5431 = !DILocation(line: 3394, column: 22, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 3391, column: 42)
!5433 = !DILocation(line: 3394, column: 3, scope: !5432)
!5434 = !DILocation(line: 3395, column: 2, scope: !5432)
!5435 = !DILocation(line: 3397, column: 6, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3397, column: 6)
!5437 = !DILocation(line: 3397, column: 9, scope: !5436)
!5438 = !DILocation(line: 3397, column: 25, scope: !5436)
!5439 = !DILocation(line: 3397, column: 6, scope: !5396)
!5440 = !DILocation(line: 3398, column: 3, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 3397, column: 38)
!5442 = !DILocation(line: 3398, column: 9, scope: !5441)
!5443 = !DILocation(line: 3398, column: 16, scope: !5441)
!5444 = !DILocation(line: 3399, column: 11, scope: !5441)
!5445 = !DILocation(line: 3399, column: 17, scope: !5441)
!5446 = !DILocation(line: 3399, column: 3, scope: !5441)
!5447 = !DILocation(line: 3402, column: 5, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 3399, column: 24)
!5449 = !DILocation(line: 3402, column: 11, scope: !5448)
!5450 = !DILocation(line: 3402, column: 14, scope: !5448)
!5451 = !DILocation(line: 3401, column: 10, scope: !5448)
!5452 = !DILocation(line: 3401, column: 8, scope: !5448)
!5453 = !DILocation(line: 3403, column: 4, scope: !5448)
!5454 = !DILocation(line: 3405, column: 34, scope: !5448)
!5455 = !DILocation(line: 3405, column: 40, scope: !5448)
!5456 = !DILocation(line: 3405, column: 10, scope: !5448)
!5457 = !DILocation(line: 3405, column: 8, scope: !5448)
!5458 = !DILocation(line: 3406, column: 4, scope: !5448)
!5459 = !DILocation(line: 3410, column: 8, scope: !5448)
!5460 = !DILocation(line: 3411, column: 3, scope: !5448)
!5461 = !DILocation(line: 3412, column: 2, scope: !5441)
!5462 = !DILocation(line: 3412, column: 13, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 3412, column: 13)
!5464 = !DILocation(line: 3412, column: 16, scope: !5463)
!5465 = !DILocation(line: 3412, column: 32, scope: !5463)
!5466 = !DILocation(line: 3412, column: 13, scope: !5436)
!5467 = !DILocation(line: 3413, column: 3, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 3412, column: 46)
!5469 = !DILocation(line: 3413, column: 9, scope: !5468)
!5470 = !DILocation(line: 3413, column: 16, scope: !5468)
!5471 = !DILocation(line: 3414, column: 34, scope: !5468)
!5472 = !DILocation(line: 3415, column: 10, scope: !5468)
!5473 = !DILocation(line: 3415, column: 13, scope: !5468)
!5474 = !DILocation(line: 3415, column: 23, scope: !5468)
!5475 = !DILocation(line: 3415, column: 4, scope: !5468)
!5476 = !DILocation(line: 3415, column: 31, scope: !5468)
!5477 = !DILocation(line: 3415, column: 34, scope: !5468)
!5478 = !DILocation(line: 3414, column: 3, scope: !5468)
!5479 = !DILocation(line: 3416, column: 31, scope: !5468)
!5480 = !DILocation(line: 3416, column: 3, scope: !5468)
!5481 = !DILocation(line: 3417, column: 11, scope: !5468)
!5482 = !DILocation(line: 3417, column: 17, scope: !5468)
!5483 = !DILocation(line: 3417, column: 3, scope: !5468)
!5484 = !DILocation(line: 3419, column: 42, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 3417, column: 24)
!5486 = !DILocation(line: 3420, column: 5, scope: !5485)
!5487 = !DILocation(line: 3420, column: 8, scope: !5485)
!5488 = !DILocation(line: 3419, column: 10, scope: !5485)
!5489 = !DILocation(line: 3419, column: 8, scope: !5485)
!5490 = !DILocation(line: 3421, column: 4, scope: !5485)
!5491 = !DILocation(line: 3423, column: 34, scope: !5485)
!5492 = !DILocation(line: 3423, column: 40, scope: !5485)
!5493 = !DILocation(line: 3423, column: 10, scope: !5485)
!5494 = !DILocation(line: 3423, column: 8, scope: !5485)
!5495 = !DILocation(line: 3424, column: 4, scope: !5485)
!5496 = !DILocation(line: 3428, column: 8, scope: !5485)
!5497 = !DILocation(line: 3429, column: 3, scope: !5485)
!5498 = !DILocation(line: 3430, column: 2, scope: !5468)
!5499 = !DILocation(line: 3430, column: 13, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 3430, column: 13)
!5501 = !DILocation(line: 3430, column: 16, scope: !5500)
!5502 = !DILocation(line: 3430, column: 32, scope: !5500)
!5503 = !DILocation(line: 3430, column: 13, scope: !5463)
!5504 = !DILocation(line: 3431, column: 3, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 3430, column: 46)
!5506 = !DILocation(line: 3431, column: 9, scope: !5505)
!5507 = !DILocation(line: 3431, column: 16, scope: !5505)
!5508 = !DILocation(line: 3432, column: 11, scope: !5505)
!5509 = !DILocation(line: 3432, column: 17, scope: !5505)
!5510 = !DILocation(line: 3432, column: 3, scope: !5505)
!5511 = !DILocation(line: 3435, column: 6, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 3432, column: 24)
!5513 = !DILocation(line: 3435, column: 12, scope: !5512)
!5514 = !DILocation(line: 3435, column: 15, scope: !5512)
!5515 = !DILocation(line: 3434, column: 10, scope: !5512)
!5516 = !DILocation(line: 3434, column: 8, scope: !5512)
!5517 = !DILocation(line: 3436, column: 4, scope: !5512)
!5518 = !DILocation(line: 3438, column: 34, scope: !5512)
!5519 = !DILocation(line: 3438, column: 40, scope: !5512)
!5520 = !DILocation(line: 3438, column: 10, scope: !5512)
!5521 = !DILocation(line: 3438, column: 8, scope: !5512)
!5522 = !DILocation(line: 3439, column: 4, scope: !5512)
!5523 = !DILocation(line: 3443, column: 8, scope: !5512)
!5524 = !DILocation(line: 3444, column: 3, scope: !5512)
!5525 = !DILocation(line: 3445, column: 2, scope: !5505)
!5526 = !DILocation(line: 3445, column: 13, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 3445, column: 13)
!5528 = !DILocation(line: 3445, column: 16, scope: !5527)
!5529 = !DILocation(line: 3445, column: 32, scope: !5527)
!5530 = !DILocation(line: 3445, column: 52, scope: !5527)
!5531 = !DILocation(line: 3446, column: 4, scope: !5527)
!5532 = !DILocation(line: 3446, column: 7, scope: !5527)
!5533 = !DILocation(line: 3446, column: 23, scope: !5527)
!5534 = !DILocation(line: 3445, column: 13, scope: !5500)
!5535 = !DILocation(line: 3447, column: 3, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 3446, column: 44)
!5537 = !DILocation(line: 3447, column: 9, scope: !5536)
!5538 = !DILocation(line: 3447, column: 16, scope: !5536)
!5539 = !DILocation(line: 3449, column: 7, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5536, file: !3, line: 3449, column: 7)
!5541 = !DILocation(line: 3449, column: 10, scope: !5540)
!5542 = !DILocation(line: 3449, column: 23, scope: !5540)
!5543 = !DILocation(line: 3449, column: 34, scope: !5540)
!5544 = !DILocation(line: 3450, column: 5, scope: !5540)
!5545 = !DILocation(line: 3450, column: 8, scope: !5540)
!5546 = !DILocation(line: 3450, column: 21, scope: !5540)
!5547 = !DILocation(line: 3450, column: 32, scope: !5540)
!5548 = !DILocation(line: 3451, column: 5, scope: !5540)
!5549 = !DILocation(line: 3451, column: 8, scope: !5540)
!5550 = !DILocation(line: 3451, column: 21, scope: !5540)
!5551 = !DILocation(line: 3449, column: 7, scope: !5536)
!5552 = !DILocation(line: 3452, column: 4, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5540, file: !3, line: 3451, column: 33)
!5554 = !DILocation(line: 3452, column: 7, scope: !5553)
!5555 = !DILocation(line: 3452, column: 20, scope: !5553)
!5556 = !DILocation(line: 3455, column: 3, scope: !5553)
!5557 = !DILocation(line: 3457, column: 11, scope: !5536)
!5558 = !DILocation(line: 3457, column: 17, scope: !5536)
!5559 = !DILocation(line: 3457, column: 3, scope: !5536)
!5560 = !DILocation(line: 3460, column: 5, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5536, file: !3, line: 3457, column: 24)
!5562 = !DILocation(line: 3460, column: 11, scope: !5561)
!5563 = !DILocation(line: 3460, column: 14, scope: !5561)
!5564 = !DILocation(line: 3459, column: 10, scope: !5561)
!5565 = !DILocation(line: 3459, column: 8, scope: !5561)
!5566 = !DILocation(line: 3461, column: 4, scope: !5561)
!5567 = !DILocation(line: 3463, column: 34, scope: !5561)
!5568 = !DILocation(line: 3463, column: 40, scope: !5561)
!5569 = !DILocation(line: 3463, column: 10, scope: !5561)
!5570 = !DILocation(line: 3463, column: 8, scope: !5561)
!5571 = !DILocation(line: 3464, column: 4, scope: !5561)
!5572 = !DILocation(line: 3468, column: 8, scope: !5561)
!5573 = !DILocation(line: 3469, column: 3, scope: !5561)
!5574 = !DILocation(line: 3470, column: 2, scope: !5536)
!5575 = !DILocation(line: 3474, column: 7, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5527, file: !3, line: 3470, column: 9)
!5577 = !DILocation(line: 3476, column: 6, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3476, column: 6)
!5579 = !DILocation(line: 3476, column: 6, scope: !5396)
!5580 = !DILocation(line: 3477, column: 3, scope: !5578)
!5581 = !DILocation(line: 3479, column: 8, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3479, column: 6)
!5583 = !DILocation(line: 3479, column: 14, scope: !5582)
!5584 = !DILocation(line: 3479, column: 20, scope: !5582)
!5585 = !DILocation(line: 3479, column: 6, scope: !5396)
!5586 = !DILocation(line: 3480, column: 23, scope: !5582)
!5587 = !DILocation(line: 3480, column: 3, scope: !5582)
!5588 = !DILocation(line: 3482, column: 22, scope: !5396)
!5589 = !DILocation(line: 3482, column: 2, scope: !5396)
!5590 = !DILocation(line: 3484, column: 6, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3484, column: 6)
!5592 = !DILocation(line: 3484, column: 12, scope: !5591)
!5593 = !DILocation(line: 3484, column: 18, scope: !5591)
!5594 = !DILocation(line: 3484, column: 6, scope: !5396)
!5595 = !DILocation(line: 3485, column: 3, scope: !5591)
!5596 = !DILocation(line: 3487, column: 10, scope: !5396)
!5597 = !DILocation(line: 3488, column: 2, scope: !5396)
!5598 = !DILocation(line: 3488, column: 9, scope: !5396)
!5599 = !DILocation(line: 3488, column: 17, scope: !5396)
!5600 = !DILocation(line: 3489, column: 34, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3488, column: 22)
!5602 = !DILocation(line: 3489, column: 9, scope: !5601)
!5603 = !DILocation(line: 3489, column: 7, scope: !5601)
!5604 = !DILocation(line: 3490, column: 7, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 3490, column: 7)
!5606 = !DILocation(line: 3490, column: 7, scope: !5601)
!5607 = !DILocation(line: 3491, column: 4, scope: !5605)
!5608 = !DILocation(line: 3492, column: 7, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 3492, column: 7)
!5610 = !DILocation(line: 3492, column: 14, scope: !5609)
!5611 = !DILocation(line: 3492, column: 7, scope: !5601)
!5612 = !DILocation(line: 3493, column: 4, scope: !5609)
!5613 = !DILocation(line: 3494, column: 3, scope: !5601)
!5614 = !DILocation(line: 3495, column: 11, scope: !5601)
!5615 = distinct !{!5615, !5597, !5616}
!5616 = !DILocation(line: 3496, column: 2, scope: !5396)
!5617 = !DILocation(line: 3497, column: 6, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5396, file: !3, line: 3497, column: 6)
!5619 = !DILocation(line: 3497, column: 14, scope: !5618)
!5620 = !DILocation(line: 3497, column: 6, scope: !5396)
!5621 = !DILocation(line: 3498, column: 3, scope: !5618)
!5622 = !DILocation(line: 3497, column: 16, scope: !5618)
!5623 = !DILabel(scope: !5396, name: "done", file: !3, line: 3500)
!5624 = !DILocation(line: 3500, column: 1, scope: !5396)
!5625 = !DILocation(line: 3501, column: 9, scope: !5396)
!5626 = !DILocation(line: 3501, column: 2, scope: !5396)
!5627 = distinct !DISubprogram(name: "cxd2841er_get_frontend", scope: !3, file: !3, line: 3265, type: !4119, scopeLine: 3267, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5628 = !DILocalVariable(name: "m", arg: 1, scope: !5629, file: !5630, line: 363, type: !2878)
!5629 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !5630, file: !5630, line: 363, type: !5631, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5630 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!5631 = !DISubroutineType(types: !5632)
!5632 = !{!534, !2878}
!5633 = !DILocation(line: 363, column: 74, scope: !5629, inlinedAt: !5634)
!5634 = distinct !DILocation(line: 3288, column: 32, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 3282, column: 28)
!5636 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 3282, column: 6)
!5637 = !DILocalVariable(name: "fe", arg: 1, scope: !5627, file: !3, line: 3265, type: !390)
!5638 = !DILocation(line: 3265, column: 56, scope: !5627)
!5639 = !DILocalVariable(name: "p", arg: 2, scope: !5627, file: !3, line: 3266, type: !4121)
!5640 = !DILocation(line: 3266, column: 39, scope: !5627)
!5641 = !DILocalVariable(name: "status", scope: !5627, file: !3, line: 3268, type: !40)
!5642 = !DILocation(line: 3268, column: 17, scope: !5627)
!5643 = !DILocalVariable(name: "priv", scope: !5627, file: !3, line: 3269, type: !4266)
!5644 = !DILocation(line: 3269, column: 25, scope: !5627)
!5645 = !DILocation(line: 3269, column: 32, scope: !5627)
!5646 = !DILocation(line: 3269, column: 36, scope: !5627)
!5647 = !DILocation(line: 3272, column: 6, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 3272, column: 6)
!5649 = !DILocation(line: 3272, column: 12, scope: !5648)
!5650 = !DILocation(line: 3272, column: 18, scope: !5648)
!5651 = !DILocation(line: 3272, column: 6, scope: !5627)
!5652 = !DILocation(line: 3273, column: 27, scope: !5648)
!5653 = !DILocation(line: 3273, column: 3, scope: !5648)
!5654 = !DILocation(line: 3274, column: 11, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 3274, column: 11)
!5656 = !DILocation(line: 3274, column: 17, scope: !5655)
!5657 = !DILocation(line: 3274, column: 23, scope: !5655)
!5658 = !DILocation(line: 3274, column: 11, scope: !5648)
!5659 = !DILocation(line: 3275, column: 28, scope: !5655)
!5660 = !DILocation(line: 3275, column: 3, scope: !5655)
!5661 = !DILocation(line: 3277, column: 6, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5627, file: !3, line: 3277, column: 6)
!5663 = !DILocation(line: 3277, column: 12, scope: !5662)
!5664 = !DILocation(line: 3277, column: 18, scope: !5662)
!5665 = !DILocation(line: 3277, column: 37, scope: !5662)
!5666 = !DILocation(line: 3277, column: 40, scope: !5662)
!5667 = !DILocation(line: 3277, column: 46, scope: !5662)
!5668 = !DILocation(line: 3277, column: 52, scope: !5662)
!5669 = !DILocation(line: 3277, column: 6, scope: !5627)
!5670 = !DILocation(line: 3278, column: 34, scope: !5662)
!5671 = !DILocation(line: 3278, column: 3, scope: !5662)
!5672 = !DILocation(line: 3280, column: 3, scope: !5662)
!5673 = !DILocation(line: 3280, column: 6, scope: !5662)
!5674 = !DILocation(line: 3280, column: 15, scope: !5662)
!5675 = !DILocation(line: 3280, column: 23, scope: !5662)
!5676 = !DILocation(line: 3280, column: 29, scope: !5662)
!5677 = !DILocation(line: 3282, column: 6, scope: !5636)
!5678 = !DILocation(line: 3282, column: 13, scope: !5636)
!5679 = !DILocation(line: 3282, column: 6, scope: !5627)
!5680 = !DILocation(line: 3283, column: 7, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5635, file: !3, line: 3283, column: 7)
!5682 = !DILocation(line: 3283, column: 13, scope: !5681)
!5683 = !DILocation(line: 3283, column: 24, scope: !5681)
!5684 = !DILocation(line: 3284, column: 9, scope: !5681)
!5685 = !DILocation(line: 3283, column: 7, scope: !5635)
!5686 = !DILocation(line: 3285, column: 4, scope: !5681)
!5687 = !DILocation(line: 3288, column: 22, scope: !5635)
!5688 = !DILocation(line: 365, column: 27, scope: !5689, inlinedAt: !5634)
!5689 = distinct !DILexicalBlock(scope: !5629, file: !5630, line: 365, column: 6)
!5690 = !DILocation(line: 365, column: 6, scope: !5689, inlinedAt: !5634)
!5691 = !DILocation(line: 365, column: 6, scope: !5629, inlinedAt: !5634)
!5692 = !DILocation(line: 366, column: 12, scope: !5693, inlinedAt: !5634)
!5693 = distinct !DILexicalBlock(scope: !5694, file: !5630, line: 366, column: 7)
!5694 = distinct !DILexicalBlock(scope: !5689, file: !5630, line: 365, column: 31)
!5695 = !DILocation(line: 366, column: 14, scope: !5693, inlinedAt: !5634)
!5696 = !DILocation(line: 366, column: 7, scope: !5694, inlinedAt: !5634)
!5697 = !DILocation(line: 367, column: 4, scope: !5693, inlinedAt: !5634)
!5698 = !DILocation(line: 368, column: 28, scope: !5694, inlinedAt: !5634)
!5699 = !DILocation(line: 368, column: 10, scope: !5694, inlinedAt: !5634)
!5700 = !DILocation(line: 368, column: 3, scope: !5694, inlinedAt: !5634)
!5701 = !DILocation(line: 370, column: 29, scope: !5702, inlinedAt: !5634)
!5702 = distinct !DILexicalBlock(scope: !5689, file: !5630, line: 369, column: 9)
!5703 = !DILocation(line: 370, column: 10, scope: !5702, inlinedAt: !5634)
!5704 = !DILocation(line: 370, column: 3, scope: !5702, inlinedAt: !5634)
!5705 = !DILocation(line: 372, column: 1, scope: !5629, inlinedAt: !5634)
!5706 = !DILocation(line: 3288, column: 30, scope: !5635)
!5707 = !DILocation(line: 3288, column: 3, scope: !5635)
!5708 = !DILocation(line: 3288, column: 9, scope: !5635)
!5709 = !DILocation(line: 3288, column: 20, scope: !5635)
!5710 = !DILocation(line: 3290, column: 22, scope: !5635)
!5711 = !DILocation(line: 3290, column: 3, scope: !5635)
!5712 = !DILocation(line: 3291, column: 27, scope: !5635)
!5713 = !DILocation(line: 3291, column: 3, scope: !5635)
!5714 = !DILocation(line: 3292, column: 22, scope: !5635)
!5715 = !DILocation(line: 3292, column: 3, scope: !5635)
!5716 = !DILocation(line: 3293, column: 2, scope: !5635)
!5717 = !DILocation(line: 3294, column: 3, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5636, file: !3, line: 3293, column: 9)
!5719 = !DILocation(line: 3294, column: 6, scope: !5718)
!5720 = !DILocation(line: 3294, column: 10, scope: !5718)
!5721 = !DILocation(line: 3294, column: 18, scope: !5718)
!5722 = !DILocation(line: 3294, column: 24, scope: !5718)
!5723 = !DILocation(line: 3295, column: 3, scope: !5718)
!5724 = !DILocation(line: 3295, column: 6, scope: !5718)
!5725 = !DILocation(line: 3295, column: 18, scope: !5718)
!5726 = !DILocation(line: 3295, column: 26, scope: !5718)
!5727 = !DILocation(line: 3295, column: 32, scope: !5718)
!5728 = !DILocation(line: 3296, column: 3, scope: !5718)
!5729 = !DILocation(line: 3296, column: 6, scope: !5718)
!5730 = !DILocation(line: 3296, column: 21, scope: !5718)
!5731 = !DILocation(line: 3296, column: 29, scope: !5718)
!5732 = !DILocation(line: 3296, column: 35, scope: !5718)
!5733 = !DILocation(line: 3297, column: 3, scope: !5718)
!5734 = !DILocation(line: 3297, column: 6, scope: !5718)
!5735 = !DILocation(line: 3297, column: 21, scope: !5718)
!5736 = !DILocation(line: 3297, column: 29, scope: !5718)
!5737 = !DILocation(line: 3297, column: 35, scope: !5718)
!5738 = !DILocation(line: 3299, column: 2, scope: !5627)
!5739 = !DILocation(line: 3300, column: 1, scope: !5627)
!5740 = distinct !DISubprogram(name: "cxd2841er_read_status_tc", scope: !3, file: !3, line: 1070, type: !4124, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5741 = !DILocalVariable(name: "fe", arg: 1, scope: !5740, file: !3, line: 1070, type: !390)
!5742 = !DILocation(line: 1070, column: 58, scope: !5740)
!5743 = !DILocalVariable(name: "status", arg: 2, scope: !5740, file: !3, line: 1071, type: !4101)
!5744 = !DILocation(line: 1071, column: 25, scope: !5740)
!5745 = !DILocalVariable(name: "ret", scope: !5740, file: !3, line: 1073, type: !331)
!5746 = !DILocation(line: 1073, column: 6, scope: !5740)
!5747 = !DILocalVariable(name: "sync", scope: !5740, file: !3, line: 1074, type: !332)
!5748 = !DILocation(line: 1074, column: 5, scope: !5740)
!5749 = !DILocalVariable(name: "tslock", scope: !5740, file: !3, line: 1075, type: !332)
!5750 = !DILocation(line: 1075, column: 5, scope: !5740)
!5751 = !DILocalVariable(name: "unlock", scope: !5740, file: !3, line: 1076, type: !332)
!5752 = !DILocation(line: 1076, column: 5, scope: !5740)
!5753 = !DILocalVariable(name: "priv", scope: !5740, file: !3, line: 1077, type: !4266)
!5754 = !DILocation(line: 1077, column: 25, scope: !5740)
!5755 = !DILocation(line: 1077, column: 32, scope: !5740)
!5756 = !DILocation(line: 1077, column: 36, scope: !5740)
!5757 = !DILocation(line: 1079, column: 3, scope: !5740)
!5758 = !DILocation(line: 1079, column: 10, scope: !5740)
!5759 = !DILocation(line: 1080, column: 6, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 1080, column: 6)
!5761 = !DILocation(line: 1080, column: 12, scope: !5760)
!5762 = !DILocation(line: 1080, column: 18, scope: !5760)
!5763 = !DILocation(line: 1080, column: 6, scope: !5740)
!5764 = !DILocation(line: 1081, column: 7, scope: !5765)
!5765 = distinct !DILexicalBlock(scope: !5766, file: !3, line: 1081, column: 7)
!5766 = distinct !DILexicalBlock(scope: !5760, file: !3, line: 1080, column: 38)
!5767 = !DILocation(line: 1081, column: 13, scope: !5765)
!5768 = !DILocation(line: 1081, column: 20, scope: !5765)
!5769 = !DILocation(line: 1081, column: 32, scope: !5765)
!5770 = !DILocation(line: 1081, column: 35, scope: !5765)
!5771 = !DILocation(line: 1081, column: 41, scope: !5765)
!5772 = !DILocation(line: 1081, column: 48, scope: !5765)
!5773 = !DILocation(line: 1081, column: 7, scope: !5766)
!5774 = !DILocation(line: 1083, column: 5, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 1081, column: 62)
!5776 = !DILocation(line: 1082, column: 10, scope: !5775)
!5777 = !DILocation(line: 1082, column: 8, scope: !5775)
!5778 = !DILocation(line: 1084, column: 8, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 1084, column: 8)
!5780 = !DILocation(line: 1084, column: 8, scope: !5775)
!5781 = !DILocation(line: 1085, column: 5, scope: !5779)
!5782 = !DILocation(line: 1086, column: 8, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 1086, column: 8)
!5784 = !DILocation(line: 1086, column: 8, scope: !5775)
!5785 = !DILocation(line: 1087, column: 5, scope: !5783)
!5786 = !DILocation(line: 1088, column: 8, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 1088, column: 8)
!5788 = !DILocation(line: 1088, column: 8, scope: !5775)
!5789 = !DILocation(line: 1089, column: 6, scope: !5787)
!5790 = !DILocation(line: 1089, column: 13, scope: !5787)
!5791 = !DILocation(line: 1089, column: 5, scope: !5787)
!5792 = !DILocation(line: 1093, column: 8, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 1093, column: 8)
!5794 = !DILocation(line: 1093, column: 8, scope: !5775)
!5795 = !DILocation(line: 1094, column: 6, scope: !5793)
!5796 = !DILocation(line: 1094, column: 13, scope: !5793)
!5797 = !DILocation(line: 1094, column: 5, scope: !5793)
!5798 = !DILocation(line: 1095, column: 3, scope: !5775)
!5799 = !DILocation(line: 1095, column: 14, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5765, file: !3, line: 1095, column: 14)
!5801 = !DILocation(line: 1095, column: 20, scope: !5800)
!5802 = !DILocation(line: 1095, column: 27, scope: !5800)
!5803 = !DILocation(line: 1095, column: 14, scope: !5765)
!5804 = !DILocation(line: 1097, column: 6, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 1095, column: 41)
!5806 = !DILocation(line: 1096, column: 10, scope: !5805)
!5807 = !DILocation(line: 1096, column: 8, scope: !5805)
!5808 = !DILocation(line: 1098, column: 8, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 1098, column: 8)
!5810 = !DILocation(line: 1098, column: 8, scope: !5805)
!5811 = !DILocation(line: 1099, column: 5, scope: !5809)
!5812 = !DILocation(line: 1100, column: 8, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 1100, column: 8)
!5814 = !DILocation(line: 1100, column: 8, scope: !5805)
!5815 = !DILocation(line: 1101, column: 5, scope: !5813)
!5816 = !DILocation(line: 1102, column: 8, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 1102, column: 8)
!5818 = !DILocation(line: 1102, column: 8, scope: !5805)
!5819 = !DILocation(line: 1103, column: 6, scope: !5817)
!5820 = !DILocation(line: 1103, column: 13, scope: !5817)
!5821 = !DILocation(line: 1103, column: 5, scope: !5817)
!5822 = !DILocation(line: 1107, column: 8, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5805, file: !3, line: 1107, column: 8)
!5824 = !DILocation(line: 1107, column: 8, scope: !5805)
!5825 = !DILocation(line: 1108, column: 6, scope: !5823)
!5826 = !DILocation(line: 1108, column: 13, scope: !5823)
!5827 = !DILocation(line: 1108, column: 5, scope: !5823)
!5828 = !DILocation(line: 1109, column: 3, scope: !5805)
!5829 = !DILocation(line: 1109, column: 14, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 1109, column: 14)
!5831 = !DILocation(line: 1109, column: 20, scope: !5830)
!5832 = !DILocation(line: 1109, column: 27, scope: !5830)
!5833 = !DILocation(line: 1109, column: 14, scope: !5800)
!5834 = !DILocation(line: 1110, column: 34, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5830, file: !3, line: 1109, column: 48)
!5836 = !DILocation(line: 1110, column: 10, scope: !5835)
!5837 = !DILocation(line: 1110, column: 8, scope: !5835)
!5838 = !DILocation(line: 1111, column: 8, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1111, column: 8)
!5840 = !DILocation(line: 1111, column: 8, scope: !5835)
!5841 = !DILocation(line: 1112, column: 5, scope: !5839)
!5842 = !DILocation(line: 1113, column: 8, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1113, column: 8)
!5844 = !DILocation(line: 1113, column: 8, scope: !5835)
!5845 = !DILocation(line: 1114, column: 6, scope: !5843)
!5846 = !DILocation(line: 1114, column: 13, scope: !5843)
!5847 = !DILocation(line: 1114, column: 5, scope: !5843)
!5848 = !DILocation(line: 1119, column: 3, scope: !5835)
!5849 = !DILocation(line: 1120, column: 2, scope: !5766)
!5850 = !DILocation(line: 1080, column: 21, scope: !5760)
!5851 = !DILabel(scope: !5740, name: "done", file: !3, line: 1121)
!5852 = !DILocation(line: 1121, column: 1, scope: !5740)
!5853 = !DILocation(line: 1123, column: 9, scope: !5740)
!5854 = !DILocation(line: 1123, column: 2, scope: !5740)
!5855 = distinct !DISubprogram(name: "cxd2841er_i2c_gate_ctrl", scope: !3, file: !3, line: 3747, type: !4181, scopeLine: 3748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5856 = !DILocalVariable(name: "fe", arg: 1, scope: !5855, file: !3, line: 3747, type: !390)
!5857 = !DILocation(line: 3747, column: 57, scope: !5855)
!5858 = !DILocalVariable(name: "enable", arg: 2, scope: !5855, file: !3, line: 3747, type: !331)
!5859 = !DILocation(line: 3747, column: 65, scope: !5855)
!5860 = !DILocalVariable(name: "priv", scope: !5855, file: !3, line: 3749, type: !4266)
!5861 = !DILocation(line: 3749, column: 25, scope: !5855)
!5862 = !DILocation(line: 3749, column: 32, scope: !5855)
!5863 = !DILocation(line: 3749, column: 36, scope: !5855)
!5864 = !DILocation(line: 3753, column: 3, scope: !5855)
!5865 = !DILocation(line: 3753, column: 25, scope: !5855)
!5866 = !DILocation(line: 3753, column: 24, scope: !5855)
!5867 = !DILocation(line: 3752, column: 2, scope: !5855)
!5868 = !DILocation(line: 3754, column: 2, scope: !5855)
!5869 = distinct !DISubprogram(name: "cxd2841er_shutdown_to_sleep_tc", scope: !3, file: !3, line: 832, type: !5870, scopeLine: 833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5870 = !DISubroutineType(types: !5871)
!5871 = !{!331, !4266}
!5872 = !DILocalVariable(name: "priv", arg: 1, scope: !5869, file: !3, line: 832, type: !4266)
!5873 = !DILocation(line: 832, column: 66, scope: !5869)
!5874 = !DILocalVariable(name: "data", scope: !5869, file: !3, line: 834, type: !332)
!5875 = !DILocation(line: 834, column: 5, scope: !5869)
!5876 = !DILocation(line: 837, column: 6, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 837, column: 6)
!5878 = !DILocation(line: 837, column: 12, scope: !5877)
!5879 = !DILocation(line: 837, column: 18, scope: !5877)
!5880 = !DILocation(line: 837, column: 6, scope: !5869)
!5881 = !DILocation(line: 840, column: 3, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5877, file: !3, line: 837, column: 37)
!5883 = !DILocation(line: 843, column: 22, scope: !5869)
!5884 = !DILocation(line: 843, column: 2, scope: !5869)
!5885 = !DILocation(line: 845, column: 22, scope: !5869)
!5886 = !DILocation(line: 845, column: 2, scope: !5869)
!5887 = !DILocation(line: 846, column: 2, scope: !5869)
!5888 = !DILocation(line: 848, column: 22, scope: !5869)
!5889 = !DILocation(line: 848, column: 2, scope: !5869)
!5890 = !DILocation(line: 850, column: 22, scope: !5869)
!5891 = !DILocation(line: 850, column: 2, scope: !5869)
!5892 = !DILocation(line: 852, column: 22, scope: !5869)
!5893 = !DILocation(line: 852, column: 2, scope: !5869)
!5894 = !DILocation(line: 854, column: 10, scope: !5869)
!5895 = !DILocation(line: 854, column: 16, scope: !5869)
!5896 = !DILocation(line: 854, column: 2, scope: !5869)
!5897 = !DILocation(line: 856, column: 8, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 854, column: 22)
!5899 = !DILocation(line: 857, column: 3, scope: !5898)
!5900 = !DILocation(line: 860, column: 23, scope: !5898)
!5901 = !DILocation(line: 860, column: 3, scope: !5898)
!5902 = !DILocation(line: 861, column: 8, scope: !5898)
!5903 = !DILocation(line: 862, column: 3, scope: !5898)
!5904 = !DILocation(line: 864, column: 23, scope: !5898)
!5905 = !DILocation(line: 864, column: 3, scope: !5898)
!5906 = !DILocation(line: 865, column: 8, scope: !5898)
!5907 = !DILocation(line: 866, column: 3, scope: !5898)
!5908 = !DILocation(line: 868, column: 22, scope: !5869)
!5909 = !DILocation(line: 868, column: 44, scope: !5869)
!5910 = !DILocation(line: 868, column: 2, scope: !5869)
!5911 = !DILocation(line: 870, column: 22, scope: !5869)
!5912 = !DILocation(line: 870, column: 2, scope: !5869)
!5913 = !DILocation(line: 871, column: 2, scope: !5869)
!5914 = !DILocation(line: 873, column: 22, scope: !5869)
!5915 = !DILocation(line: 873, column: 2, scope: !5869)
!5916 = !DILocation(line: 875, column: 22, scope: !5869)
!5917 = !DILocation(line: 875, column: 2, scope: !5869)
!5918 = !DILocation(line: 876, column: 22, scope: !5869)
!5919 = !DILocation(line: 876, column: 2, scope: !5869)
!5920 = !DILocation(line: 878, column: 22, scope: !5869)
!5921 = !DILocation(line: 878, column: 2, scope: !5869)
!5922 = !DILocation(line: 879, column: 22, scope: !5869)
!5923 = !DILocation(line: 879, column: 2, scope: !5869)
!5924 = !DILocation(line: 880, column: 22, scope: !5869)
!5925 = !DILocation(line: 880, column: 2, scope: !5869)
!5926 = !DILocation(line: 881, column: 2, scope: !5869)
!5927 = !DILocation(line: 881, column: 8, scope: !5869)
!5928 = !DILocation(line: 881, column: 14, scope: !5869)
!5929 = !DILocation(line: 882, column: 2, scope: !5869)
!5930 = !DILocation(line: 883, column: 1, scope: !5869)
!5931 = distinct !DISubprogram(name: "cxd2841er_set_reg_bits", scope: !3, file: !3, line: 297, type: !5932, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5932 = !DISubroutineType(types: !5933)
!5933 = !{!331, !4266, !332, !332, !332, !332}
!5934 = !DILocalVariable(name: "priv", arg: 1, scope: !5931, file: !3, line: 297, type: !4266)
!5935 = !DILocation(line: 297, column: 58, scope: !5931)
!5936 = !DILocalVariable(name: "addr", arg: 2, scope: !5931, file: !3, line: 298, type: !332)
!5937 = !DILocation(line: 298, column: 10, scope: !5931)
!5938 = !DILocalVariable(name: "reg", arg: 3, scope: !5931, file: !3, line: 298, type: !332)
!5939 = !DILocation(line: 298, column: 19, scope: !5931)
!5940 = !DILocalVariable(name: "data", arg: 4, scope: !5931, file: !3, line: 298, type: !332)
!5941 = !DILocation(line: 298, column: 27, scope: !5931)
!5942 = !DILocalVariable(name: "mask", arg: 5, scope: !5931, file: !3, line: 298, type: !332)
!5943 = !DILocation(line: 298, column: 36, scope: !5931)
!5944 = !DILocalVariable(name: "res", scope: !5931, file: !3, line: 300, type: !331)
!5945 = !DILocation(line: 300, column: 6, scope: !5931)
!5946 = !DILocalVariable(name: "rdata", scope: !5931, file: !3, line: 301, type: !332)
!5947 = !DILocation(line: 301, column: 5, scope: !5931)
!5948 = !DILocation(line: 303, column: 6, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5931, file: !3, line: 303, column: 6)
!5950 = !DILocation(line: 303, column: 11, scope: !5949)
!5951 = !DILocation(line: 303, column: 6, scope: !5931)
!5952 = !DILocation(line: 304, column: 28, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 303, column: 20)
!5954 = !DILocation(line: 304, column: 34, scope: !5953)
!5955 = !DILocation(line: 304, column: 40, scope: !5953)
!5956 = !DILocation(line: 304, column: 9, scope: !5953)
!5957 = !DILocation(line: 304, column: 7, scope: !5953)
!5958 = !DILocation(line: 305, column: 7, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 305, column: 7)
!5960 = !DILocation(line: 305, column: 7, scope: !5953)
!5961 = !DILocation(line: 306, column: 11, scope: !5959)
!5962 = !DILocation(line: 306, column: 4, scope: !5959)
!5963 = !DILocation(line: 307, column: 12, scope: !5953)
!5964 = !DILocation(line: 307, column: 19, scope: !5953)
!5965 = !DILocation(line: 307, column: 17, scope: !5953)
!5966 = !DILocation(line: 307, column: 28, scope: !5953)
!5967 = !DILocation(line: 307, column: 37, scope: !5953)
!5968 = !DILocation(line: 307, column: 42, scope: !5953)
!5969 = !DILocation(line: 307, column: 34, scope: !5953)
!5970 = !DILocation(line: 307, column: 25, scope: !5953)
!5971 = !DILocation(line: 307, column: 10, scope: !5953)
!5972 = !DILocation(line: 307, column: 8, scope: !5953)
!5973 = !DILocation(line: 308, column: 2, scope: !5953)
!5974 = !DILocation(line: 309, column: 29, scope: !5931)
!5975 = !DILocation(line: 309, column: 35, scope: !5931)
!5976 = !DILocation(line: 309, column: 41, scope: !5931)
!5977 = !DILocation(line: 309, column: 46, scope: !5931)
!5978 = !DILocation(line: 309, column: 9, scope: !5931)
!5979 = !DILocation(line: 309, column: 2, scope: !5931)
!5980 = !DILocation(line: 310, column: 1, scope: !5931)
!5981 = distinct !DISubprogram(name: "cxd2841er_init_stats", scope: !3, file: !3, line: 3765, type: !388, scopeLine: 3766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!5982 = !DILocalVariable(name: "fe", arg: 1, scope: !5981, file: !3, line: 3765, type: !390)
!5983 = !DILocation(line: 3765, column: 55, scope: !5981)
!5984 = !DILocalVariable(name: "p", scope: !5981, file: !3, line: 3767, type: !4121)
!5985 = !DILocation(line: 3767, column: 34, scope: !5981)
!5986 = !DILocation(line: 3767, column: 39, scope: !5981)
!5987 = !DILocation(line: 3767, column: 43, scope: !5981)
!5988 = !DILocation(line: 3769, column: 2, scope: !5981)
!5989 = !DILocation(line: 3769, column: 5, scope: !5981)
!5990 = !DILocation(line: 3769, column: 14, scope: !5981)
!5991 = !DILocation(line: 3769, column: 18, scope: !5981)
!5992 = !DILocation(line: 3770, column: 2, scope: !5981)
!5993 = !DILocation(line: 3770, column: 5, scope: !5981)
!5994 = !DILocation(line: 3770, column: 14, scope: !5981)
!5995 = !DILocation(line: 3770, column: 22, scope: !5981)
!5996 = !DILocation(line: 3770, column: 28, scope: !5981)
!5997 = !DILocation(line: 3771, column: 2, scope: !5981)
!5998 = !DILocation(line: 3771, column: 5, scope: !5981)
!5999 = !DILocation(line: 3771, column: 9, scope: !5981)
!6000 = !DILocation(line: 3771, column: 13, scope: !5981)
!6001 = !DILocation(line: 3772, column: 2, scope: !5981)
!6002 = !DILocation(line: 3772, column: 5, scope: !5981)
!6003 = !DILocation(line: 3772, column: 9, scope: !5981)
!6004 = !DILocation(line: 3772, column: 17, scope: !5981)
!6005 = !DILocation(line: 3772, column: 23, scope: !5981)
!6006 = !DILocation(line: 3773, column: 2, scope: !5981)
!6007 = !DILocation(line: 3773, column: 5, scope: !5981)
!6008 = !DILocation(line: 3773, column: 17, scope: !5981)
!6009 = !DILocation(line: 3773, column: 21, scope: !5981)
!6010 = !DILocation(line: 3774, column: 2, scope: !5981)
!6011 = !DILocation(line: 3774, column: 5, scope: !5981)
!6012 = !DILocation(line: 3774, column: 17, scope: !5981)
!6013 = !DILocation(line: 3774, column: 25, scope: !5981)
!6014 = !DILocation(line: 3774, column: 31, scope: !5981)
!6015 = !DILocation(line: 3775, column: 2, scope: !5981)
!6016 = !DILocation(line: 3775, column: 5, scope: !5981)
!6017 = !DILocation(line: 3775, column: 20, scope: !5981)
!6018 = !DILocation(line: 3775, column: 24, scope: !5981)
!6019 = !DILocation(line: 3776, column: 2, scope: !5981)
!6020 = !DILocation(line: 3776, column: 5, scope: !5981)
!6021 = !DILocation(line: 3776, column: 20, scope: !5981)
!6022 = !DILocation(line: 3776, column: 28, scope: !5981)
!6023 = !DILocation(line: 3776, column: 34, scope: !5981)
!6024 = !DILocation(line: 3777, column: 2, scope: !5981)
!6025 = !DILocation(line: 3777, column: 5, scope: !5981)
!6026 = !DILocation(line: 3777, column: 20, scope: !5981)
!6027 = !DILocation(line: 3777, column: 24, scope: !5981)
!6028 = !DILocation(line: 3778, column: 2, scope: !5981)
!6029 = !DILocation(line: 3778, column: 5, scope: !5981)
!6030 = !DILocation(line: 3778, column: 20, scope: !5981)
!6031 = !DILocation(line: 3778, column: 28, scope: !5981)
!6032 = !DILocation(line: 3778, column: 34, scope: !5981)
!6033 = !DILocation(line: 3779, column: 1, scope: !5981)
!6034 = distinct !DISubprogram(name: "cxd2841er_sleep_tc", scope: !3, file: !3, line: 3608, type: !4088, scopeLine: 3609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6035 = !DILocalVariable(name: "fe", arg: 1, scope: !6034, file: !3, line: 3608, type: !390)
!6036 = !DILocation(line: 3608, column: 52, scope: !6034)
!6037 = !DILocalVariable(name: "priv", scope: !6034, file: !3, line: 3610, type: !4266)
!6038 = !DILocation(line: 3610, column: 25, scope: !6034)
!6039 = !DILocation(line: 3610, column: 32, scope: !6034)
!6040 = !DILocation(line: 3610, column: 36, scope: !6034)
!6041 = !DILocation(line: 3614, column: 6, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 3614, column: 6)
!6043 = !DILocation(line: 3614, column: 12, scope: !6042)
!6044 = !DILocation(line: 3614, column: 18, scope: !6042)
!6045 = !DILocation(line: 3614, column: 6, scope: !6034)
!6046 = !DILocation(line: 3615, column: 11, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 3614, column: 38)
!6048 = !DILocation(line: 3615, column: 17, scope: !6047)
!6049 = !DILocation(line: 3615, column: 3, scope: !6047)
!6050 = !DILocation(line: 3617, column: 35, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 3615, column: 25)
!6052 = !DILocation(line: 3617, column: 4, scope: !6051)
!6053 = !DILocation(line: 3618, column: 4, scope: !6051)
!6054 = !DILocation(line: 3620, column: 36, scope: !6051)
!6055 = !DILocation(line: 3620, column: 4, scope: !6051)
!6056 = !DILocation(line: 3621, column: 4, scope: !6051)
!6057 = !DILocation(line: 3623, column: 35, scope: !6051)
!6058 = !DILocation(line: 3623, column: 4, scope: !6051)
!6059 = !DILocation(line: 3624, column: 4, scope: !6051)
!6060 = !DILocation(line: 3626, column: 35, scope: !6051)
!6061 = !DILocation(line: 3626, column: 4, scope: !6051)
!6062 = !DILocation(line: 3627, column: 4, scope: !6051)
!6063 = !DILocation(line: 3629, column: 4, scope: !6051)
!6064 = !DILocation(line: 3632, column: 3, scope: !6051)
!6065 = !DILocation(line: 3633, column: 2, scope: !6047)
!6066 = !DILocation(line: 3634, column: 6, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 3634, column: 6)
!6068 = !DILocation(line: 3634, column: 12, scope: !6067)
!6069 = !DILocation(line: 3634, column: 18, scope: !6067)
!6070 = !DILocation(line: 3634, column: 6, scope: !6034)
!6071 = !DILocation(line: 3635, column: 3, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 3634, column: 37)
!6073 = !DILocation(line: 3637, column: 3, scope: !6072)
!6074 = !DILocation(line: 3639, column: 2, scope: !6034)
!6075 = !DILocation(line: 3640, column: 1, scope: !6034)
!6076 = distinct !DISubprogram(name: "cxd2841er_sleep_tc_to_shutdown", scope: !3, file: !3, line: 596, type: !5870, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6077 = !DILocalVariable(name: "priv", arg: 1, scope: !6076, file: !3, line: 596, type: !4266)
!6078 = !DILocation(line: 596, column: 66, scope: !6076)
!6079 = !DILocation(line: 599, column: 6, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 599, column: 6)
!6081 = !DILocation(line: 599, column: 12, scope: !6080)
!6082 = !DILocation(line: 599, column: 18, scope: !6080)
!6083 = !DILocation(line: 599, column: 6, scope: !6076)
!6084 = !DILocation(line: 602, column: 3, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 599, column: 37)
!6086 = !DILocation(line: 605, column: 22, scope: !6076)
!6087 = !DILocation(line: 605, column: 2, scope: !6076)
!6088 = !DILocation(line: 607, column: 22, scope: !6076)
!6089 = !DILocation(line: 607, column: 2, scope: !6076)
!6090 = !DILocation(line: 609, column: 22, scope: !6076)
!6091 = !DILocation(line: 609, column: 2, scope: !6076)
!6092 = !DILocation(line: 610, column: 2, scope: !6076)
!6093 = !DILocation(line: 610, column: 8, scope: !6076)
!6094 = !DILocation(line: 610, column: 14, scope: !6076)
!6095 = !DILocation(line: 611, column: 2, scope: !6076)
!6096 = !DILocation(line: 612, column: 1, scope: !6076)
!6097 = distinct !DISubprogram(name: "cxd2841er_active_t_to_sleep_tc", scope: !3, file: !3, line: 614, type: !5870, scopeLine: 615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6098 = !DILocalVariable(name: "priv", arg: 1, scope: !6097, file: !3, line: 614, type: !4266)
!6099 = !DILocation(line: 614, column: 66, scope: !6097)
!6100 = !DILocation(line: 617, column: 6, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 617, column: 6)
!6102 = !DILocation(line: 617, column: 12, scope: !6101)
!6103 = !DILocation(line: 617, column: 18, scope: !6101)
!6104 = !DILocation(line: 617, column: 6, scope: !6097)
!6105 = !DILocation(line: 618, column: 3, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6101, file: !3, line: 617, column: 38)
!6107 = !DILocation(line: 620, column: 3, scope: !6106)
!6108 = !DILocation(line: 623, column: 22, scope: !6097)
!6109 = !DILocation(line: 623, column: 2, scope: !6097)
!6110 = !DILocation(line: 625, column: 22, scope: !6097)
!6111 = !DILocation(line: 625, column: 2, scope: !6097)
!6112 = !DILocation(line: 627, column: 22, scope: !6097)
!6113 = !DILocation(line: 627, column: 2, scope: !6097)
!6114 = !DILocation(line: 629, column: 22, scope: !6097)
!6115 = !DILocation(line: 629, column: 2, scope: !6097)
!6116 = !DILocation(line: 631, column: 22, scope: !6097)
!6117 = !DILocation(line: 631, column: 2, scope: !6097)
!6118 = !DILocation(line: 633, column: 22, scope: !6097)
!6119 = !DILocation(line: 633, column: 2, scope: !6097)
!6120 = !DILocation(line: 635, column: 22, scope: !6097)
!6121 = !DILocation(line: 635, column: 2, scope: !6097)
!6122 = !DILocation(line: 637, column: 22, scope: !6097)
!6123 = !DILocation(line: 637, column: 2, scope: !6097)
!6124 = !DILocation(line: 639, column: 22, scope: !6097)
!6125 = !DILocation(line: 639, column: 2, scope: !6097)
!6126 = !DILocation(line: 641, column: 22, scope: !6097)
!6127 = !DILocation(line: 641, column: 2, scope: !6097)
!6128 = !DILocation(line: 643, column: 22, scope: !6097)
!6129 = !DILocation(line: 643, column: 2, scope: !6097)
!6130 = !DILocation(line: 645, column: 22, scope: !6097)
!6131 = !DILocation(line: 645, column: 2, scope: !6097)
!6132 = !DILocation(line: 646, column: 2, scope: !6097)
!6133 = !DILocation(line: 646, column: 8, scope: !6097)
!6134 = !DILocation(line: 646, column: 14, scope: !6097)
!6135 = !DILocation(line: 647, column: 2, scope: !6097)
!6136 = !DILocation(line: 648, column: 1, scope: !6097)
!6137 = distinct !DISubprogram(name: "cxd2841er_active_t2_to_sleep_tc", scope: !3, file: !3, line: 650, type: !5870, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6138 = !DILocalVariable(name: "priv", arg: 1, scope: !6137, file: !3, line: 650, type: !4266)
!6139 = !DILocation(line: 650, column: 67, scope: !6137)
!6140 = !DILocation(line: 653, column: 6, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 653, column: 6)
!6142 = !DILocation(line: 653, column: 12, scope: !6141)
!6143 = !DILocation(line: 653, column: 18, scope: !6141)
!6144 = !DILocation(line: 653, column: 6, scope: !6137)
!6145 = !DILocation(line: 654, column: 3, scope: !6146)
!6146 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 653, column: 38)
!6147 = !DILocation(line: 656, column: 3, scope: !6146)
!6148 = !DILocation(line: 659, column: 22, scope: !6137)
!6149 = !DILocation(line: 659, column: 2, scope: !6137)
!6150 = !DILocation(line: 661, column: 22, scope: !6137)
!6151 = !DILocation(line: 661, column: 2, scope: !6137)
!6152 = !DILocation(line: 663, column: 22, scope: !6137)
!6153 = !DILocation(line: 663, column: 2, scope: !6137)
!6154 = !DILocation(line: 665, column: 22, scope: !6137)
!6155 = !DILocation(line: 665, column: 2, scope: !6137)
!6156 = !DILocation(line: 667, column: 22, scope: !6137)
!6157 = !DILocation(line: 667, column: 2, scope: !6137)
!6158 = !DILocation(line: 668, column: 22, scope: !6137)
!6159 = !DILocation(line: 668, column: 2, scope: !6137)
!6160 = !DILocation(line: 669, column: 22, scope: !6137)
!6161 = !DILocation(line: 669, column: 2, scope: !6137)
!6162 = !DILocation(line: 670, column: 25, scope: !6137)
!6163 = !DILocation(line: 670, column: 2, scope: !6137)
!6164 = !DILocation(line: 671, column: 22, scope: !6137)
!6165 = !DILocation(line: 671, column: 2, scope: !6137)
!6166 = !DILocation(line: 672, column: 22, scope: !6137)
!6167 = !DILocation(line: 672, column: 2, scope: !6137)
!6168 = !DILocation(line: 673, column: 25, scope: !6137)
!6169 = !DILocation(line: 673, column: 2, scope: !6137)
!6170 = !DILocation(line: 674, column: 22, scope: !6137)
!6171 = !DILocation(line: 674, column: 2, scope: !6137)
!6172 = !DILocation(line: 675, column: 25, scope: !6137)
!6173 = !DILocation(line: 675, column: 2, scope: !6137)
!6174 = !DILocation(line: 677, column: 22, scope: !6137)
!6175 = !DILocation(line: 677, column: 2, scope: !6137)
!6176 = !DILocation(line: 679, column: 22, scope: !6137)
!6177 = !DILocation(line: 679, column: 2, scope: !6137)
!6178 = !DILocation(line: 681, column: 22, scope: !6137)
!6179 = !DILocation(line: 681, column: 2, scope: !6137)
!6180 = !DILocation(line: 683, column: 22, scope: !6137)
!6181 = !DILocation(line: 683, column: 2, scope: !6137)
!6182 = !DILocation(line: 685, column: 22, scope: !6137)
!6183 = !DILocation(line: 685, column: 2, scope: !6137)
!6184 = !DILocation(line: 687, column: 22, scope: !6137)
!6185 = !DILocation(line: 687, column: 2, scope: !6137)
!6186 = !DILocation(line: 689, column: 22, scope: !6137)
!6187 = !DILocation(line: 689, column: 2, scope: !6137)
!6188 = !DILocation(line: 691, column: 22, scope: !6137)
!6189 = !DILocation(line: 691, column: 2, scope: !6137)
!6190 = !DILocation(line: 692, column: 2, scope: !6137)
!6191 = !DILocation(line: 692, column: 8, scope: !6137)
!6192 = !DILocation(line: 692, column: 14, scope: !6137)
!6193 = !DILocation(line: 693, column: 2, scope: !6137)
!6194 = !DILocation(line: 694, column: 1, scope: !6137)
!6195 = distinct !DISubprogram(name: "cxd2841er_active_i_to_sleep_tc", scope: !3, file: !3, line: 735, type: !5870, scopeLine: 736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6196 = !DILocalVariable(name: "priv", arg: 1, scope: !6195, file: !3, line: 735, type: !4266)
!6197 = !DILocation(line: 735, column: 66, scope: !6195)
!6198 = !DILocation(line: 738, column: 6, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 738, column: 6)
!6200 = !DILocation(line: 738, column: 12, scope: !6199)
!6201 = !DILocation(line: 738, column: 18, scope: !6199)
!6202 = !DILocation(line: 738, column: 6, scope: !6195)
!6203 = !DILocation(line: 739, column: 3, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6199, file: !3, line: 738, column: 38)
!6205 = !DILocation(line: 741, column: 3, scope: !6204)
!6206 = !DILocation(line: 744, column: 22, scope: !6195)
!6207 = !DILocation(line: 744, column: 2, scope: !6195)
!6208 = !DILocation(line: 746, column: 22, scope: !6195)
!6209 = !DILocation(line: 746, column: 2, scope: !6195)
!6210 = !DILocation(line: 748, column: 22, scope: !6195)
!6211 = !DILocation(line: 748, column: 2, scope: !6195)
!6212 = !DILocation(line: 750, column: 22, scope: !6195)
!6213 = !DILocation(line: 750, column: 2, scope: !6195)
!6214 = !DILocation(line: 755, column: 22, scope: !6195)
!6215 = !DILocation(line: 755, column: 2, scope: !6195)
!6216 = !DILocation(line: 757, column: 22, scope: !6195)
!6217 = !DILocation(line: 757, column: 2, scope: !6195)
!6218 = !DILocation(line: 759, column: 22, scope: !6195)
!6219 = !DILocation(line: 759, column: 2, scope: !6195)
!6220 = !DILocation(line: 761, column: 22, scope: !6195)
!6221 = !DILocation(line: 761, column: 2, scope: !6195)
!6222 = !DILocation(line: 763, column: 22, scope: !6195)
!6223 = !DILocation(line: 763, column: 2, scope: !6195)
!6224 = !DILocation(line: 765, column: 22, scope: !6195)
!6225 = !DILocation(line: 765, column: 2, scope: !6195)
!6226 = !DILocation(line: 767, column: 22, scope: !6195)
!6227 = !DILocation(line: 767, column: 2, scope: !6195)
!6228 = !DILocation(line: 769, column: 22, scope: !6195)
!6229 = !DILocation(line: 769, column: 2, scope: !6195)
!6230 = !DILocation(line: 770, column: 2, scope: !6195)
!6231 = !DILocation(line: 770, column: 8, scope: !6195)
!6232 = !DILocation(line: 770, column: 14, scope: !6195)
!6233 = !DILocation(line: 771, column: 2, scope: !6195)
!6234 = !DILocation(line: 772, column: 1, scope: !6195)
!6235 = distinct !DISubprogram(name: "cxd2841er_active_c_to_sleep_tc", scope: !3, file: !3, line: 696, type: !5870, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6236 = !DILocalVariable(name: "priv", arg: 1, scope: !6235, file: !3, line: 696, type: !4266)
!6237 = !DILocation(line: 696, column: 66, scope: !6235)
!6238 = !DILocation(line: 699, column: 6, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6235, file: !3, line: 699, column: 6)
!6240 = !DILocation(line: 699, column: 12, scope: !6239)
!6241 = !DILocation(line: 699, column: 18, scope: !6239)
!6242 = !DILocation(line: 699, column: 6, scope: !6235)
!6243 = !DILocation(line: 700, column: 3, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 699, column: 38)
!6245 = !DILocation(line: 702, column: 3, scope: !6244)
!6246 = !DILocation(line: 705, column: 22, scope: !6235)
!6247 = !DILocation(line: 705, column: 2, scope: !6235)
!6248 = !DILocation(line: 707, column: 22, scope: !6235)
!6249 = !DILocation(line: 707, column: 2, scope: !6235)
!6250 = !DILocation(line: 709, column: 22, scope: !6235)
!6251 = !DILocation(line: 709, column: 2, scope: !6235)
!6252 = !DILocation(line: 711, column: 22, scope: !6235)
!6253 = !DILocation(line: 711, column: 2, scope: !6235)
!6254 = !DILocation(line: 713, column: 22, scope: !6235)
!6255 = !DILocation(line: 713, column: 2, scope: !6235)
!6256 = !DILocation(line: 714, column: 25, scope: !6235)
!6257 = !DILocation(line: 714, column: 2, scope: !6235)
!6258 = !DILocation(line: 716, column: 22, scope: !6235)
!6259 = !DILocation(line: 716, column: 2, scope: !6235)
!6260 = !DILocation(line: 718, column: 22, scope: !6235)
!6261 = !DILocation(line: 718, column: 2, scope: !6235)
!6262 = !DILocation(line: 720, column: 22, scope: !6235)
!6263 = !DILocation(line: 720, column: 2, scope: !6235)
!6264 = !DILocation(line: 722, column: 22, scope: !6235)
!6265 = !DILocation(line: 722, column: 2, scope: !6235)
!6266 = !DILocation(line: 724, column: 22, scope: !6235)
!6267 = !DILocation(line: 724, column: 2, scope: !6235)
!6268 = !DILocation(line: 726, column: 22, scope: !6235)
!6269 = !DILocation(line: 726, column: 2, scope: !6235)
!6270 = !DILocation(line: 728, column: 22, scope: !6235)
!6271 = !DILocation(line: 728, column: 2, scope: !6235)
!6272 = !DILocation(line: 730, column: 22, scope: !6235)
!6273 = !DILocation(line: 730, column: 2, scope: !6235)
!6274 = !DILocation(line: 731, column: 2, scope: !6235)
!6275 = !DILocation(line: 731, column: 8, scope: !6235)
!6276 = !DILocation(line: 731, column: 14, scope: !6235)
!6277 = !DILocation(line: 732, column: 2, scope: !6235)
!6278 = !DILocation(line: 733, column: 1, scope: !6235)
!6279 = distinct !DISubprogram(name: "cxd2841er_get_carrier_offset_i", scope: !3, file: !3, line: 1185, type: !6280, scopeLine: 1187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6280 = !DISubroutineType(types: !6281)
!6281 = !{!331, !4266, !326, !910}
!6282 = !DILocalVariable(name: "value", arg: 1, scope: !6283, file: !6284, line: 165, type: !328)
!6283 = distinct !DISubprogram(name: "sign_extend32", scope: !6284, file: !6284, line: 165, type: !6285, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6284 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6285 = !DISubroutineType(types: !6286)
!6286 = !{!330, !328, !331}
!6287 = !DILocation(line: 165, column: 50, scope: !6283, inlinedAt: !6288)
!6288 = distinct !DILocation(line: 1203, column: 17, scope: !6279)
!6289 = !DILocalVariable(name: "index", arg: 2, scope: !6283, file: !6284, line: 165, type: !331)
!6290 = !DILocation(line: 165, column: 61, scope: !6283, inlinedAt: !6288)
!6291 = !DILocalVariable(name: "shift", scope: !6283, file: !6284, line: 167, type: !333)
!6292 = !DILocation(line: 167, column: 7, scope: !6283, inlinedAt: !6288)
!6293 = !DILocalVariable(name: "priv", arg: 1, scope: !6279, file: !3, line: 1185, type: !4266)
!6294 = !DILocation(line: 1185, column: 66, scope: !6279)
!6295 = !DILocalVariable(name: "bandwidth", arg: 2, scope: !6279, file: !3, line: 1186, type: !326)
!6296 = !DILocation(line: 1186, column: 13, scope: !6279)
!6297 = !DILocalVariable(name: "offset", arg: 3, scope: !6279, file: !3, line: 1186, type: !910)
!6298 = !DILocation(line: 1186, column: 29, scope: !6279)
!6299 = !DILocalVariable(name: "data", scope: !6279, file: !3, line: 1188, type: !6300)
!6300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 32, elements: !1274)
!6301 = !DILocation(line: 1188, column: 5, scope: !6279)
!6302 = !DILocation(line: 1191, column: 6, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 1191, column: 6)
!6304 = !DILocation(line: 1191, column: 12, scope: !6303)
!6305 = !DILocation(line: 1191, column: 18, scope: !6303)
!6306 = !DILocation(line: 1191, column: 6, scope: !6279)
!6307 = !DILocation(line: 1194, column: 3, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 1191, column: 38)
!6309 = !DILocation(line: 1196, column: 6, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 1196, column: 6)
!6311 = !DILocation(line: 1196, column: 12, scope: !6310)
!6312 = !DILocation(line: 1196, column: 19, scope: !6310)
!6313 = !DILocation(line: 1196, column: 6, scope: !6279)
!6314 = !DILocation(line: 1199, column: 3, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 1196, column: 33)
!6316 = !DILocation(line: 1201, column: 22, scope: !6279)
!6317 = !DILocation(line: 1201, column: 2, scope: !6279)
!6318 = !DILocation(line: 1202, column: 22, scope: !6279)
!6319 = !DILocation(line: 1202, column: 44, scope: !6279)
!6320 = !DILocation(line: 1202, column: 2, scope: !6279)
!6321 = !DILocation(line: 1204, column: 10, scope: !6279)
!6322 = !DILocation(line: 1204, column: 18, scope: !6279)
!6323 = !DILocation(line: 1204, column: 26, scope: !6279)
!6324 = !DILocation(line: 1204, column: 41, scope: !6279)
!6325 = !DILocation(line: 1204, column: 36, scope: !6279)
!6326 = !DILocation(line: 1204, column: 49, scope: !6279)
!6327 = !DILocation(line: 1204, column: 33, scope: !6279)
!6328 = !DILocation(line: 1205, column: 9, scope: !6279)
!6329 = !DILocation(line: 1205, column: 4, scope: !6279)
!6330 = !DILocation(line: 1205, column: 17, scope: !6279)
!6331 = !DILocation(line: 1204, column: 56, scope: !6279)
!6332 = !DILocation(line: 1205, column: 30, scope: !6279)
!6333 = !DILocation(line: 1205, column: 25, scope: !6279)
!6334 = !DILocation(line: 1205, column: 23, scope: !6279)
!6335 = !DILocation(line: 167, column: 20, scope: !6283, inlinedAt: !6288)
!6336 = !DILocation(line: 167, column: 18, scope: !6283, inlinedAt: !6288)
!6337 = !DILocation(line: 167, column: 15, scope: !6283, inlinedAt: !6288)
!6338 = !DILocation(line: 168, column: 17, scope: !6283, inlinedAt: !6288)
!6339 = !DILocation(line: 168, column: 26, scope: !6283, inlinedAt: !6288)
!6340 = !DILocation(line: 168, column: 23, scope: !6283, inlinedAt: !6288)
!6341 = !DILocation(line: 168, column: 36, scope: !6283, inlinedAt: !6288)
!6342 = !DILocation(line: 168, column: 33, scope: !6283, inlinedAt: !6288)
!6343 = !DILocation(line: 1203, column: 15, scope: !6279)
!6344 = !DILocation(line: 1203, column: 3, scope: !6279)
!6345 = !DILocation(line: 1203, column: 10, scope: !6279)
!6346 = !DILocation(line: 1207, column: 10, scope: !6279)
!6347 = !DILocation(line: 1207, column: 2, scope: !6279)
!6348 = !DILocation(line: 1209, column: 21, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 1207, column: 21)
!6350 = !DILocation(line: 1209, column: 20, scope: !6349)
!6351 = !DILocation(line: 1209, column: 29, scope: !6349)
!6352 = !DILocation(line: 1209, column: 32, scope: !6349)
!6353 = !DILocation(line: 1209, column: 16, scope: !6349)
!6354 = !DILocation(line: 1209, column: 4, scope: !6349)
!6355 = !DILocation(line: 1209, column: 11, scope: !6349)
!6356 = !DILocation(line: 1210, column: 3, scope: !6349)
!6357 = !DILocation(line: 1212, column: 21, scope: !6349)
!6358 = !DILocation(line: 1212, column: 20, scope: !6349)
!6359 = !DILocation(line: 1212, column: 29, scope: !6349)
!6360 = !DILocation(line: 1212, column: 32, scope: !6349)
!6361 = !DILocation(line: 1212, column: 16, scope: !6349)
!6362 = !DILocation(line: 1212, column: 4, scope: !6349)
!6363 = !DILocation(line: 1212, column: 11, scope: !6349)
!6364 = !DILocation(line: 1213, column: 3, scope: !6349)
!6365 = !DILocation(line: 1215, column: 21, scope: !6349)
!6366 = !DILocation(line: 1215, column: 20, scope: !6349)
!6367 = !DILocation(line: 1215, column: 29, scope: !6349)
!6368 = !DILocation(line: 1215, column: 32, scope: !6349)
!6369 = !DILocation(line: 1215, column: 16, scope: !6349)
!6370 = !DILocation(line: 1215, column: 4, scope: !6349)
!6371 = !DILocation(line: 1215, column: 11, scope: !6349)
!6372 = !DILocation(line: 1216, column: 3, scope: !6349)
!6373 = !DILocation(line: 1220, column: 3, scope: !6349)
!6374 = !DILocation(line: 1226, column: 2, scope: !6279)
!6375 = !DILocation(line: 1227, column: 1, scope: !6279)
!6376 = distinct !DISubprogram(name: "cxd2841er_get_carrier_offset_t", scope: !3, file: !3, line: 1229, type: !6280, scopeLine: 1231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6377 = !DILocation(line: 165, column: 50, scope: !6283, inlinedAt: !6378)
!6378 = distinct !DILocation(line: 1247, column: 17, scope: !6376)
!6379 = !DILocation(line: 165, column: 61, scope: !6283, inlinedAt: !6378)
!6380 = !DILocation(line: 167, column: 7, scope: !6283, inlinedAt: !6378)
!6381 = !DILocalVariable(name: "priv", arg: 1, scope: !6376, file: !3, line: 1229, type: !4266)
!6382 = !DILocation(line: 1229, column: 66, scope: !6376)
!6383 = !DILocalVariable(name: "bandwidth", arg: 2, scope: !6376, file: !3, line: 1230, type: !326)
!6384 = !DILocation(line: 1230, column: 13, scope: !6376)
!6385 = !DILocalVariable(name: "offset", arg: 3, scope: !6376, file: !3, line: 1230, type: !910)
!6386 = !DILocation(line: 1230, column: 29, scope: !6376)
!6387 = !DILocalVariable(name: "data", scope: !6376, file: !3, line: 1232, type: !6300)
!6388 = !DILocation(line: 1232, column: 5, scope: !6376)
!6389 = !DILocation(line: 1235, column: 6, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 1235, column: 6)
!6391 = !DILocation(line: 1235, column: 12, scope: !6390)
!6392 = !DILocation(line: 1235, column: 18, scope: !6390)
!6393 = !DILocation(line: 1235, column: 6, scope: !6376)
!6394 = !DILocation(line: 1238, column: 3, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 1235, column: 38)
!6396 = !DILocation(line: 1240, column: 6, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 1240, column: 6)
!6398 = !DILocation(line: 1240, column: 12, scope: !6397)
!6399 = !DILocation(line: 1240, column: 19, scope: !6397)
!6400 = !DILocation(line: 1240, column: 6, scope: !6376)
!6401 = !DILocation(line: 1243, column: 3, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 1240, column: 32)
!6403 = !DILocation(line: 1245, column: 22, scope: !6376)
!6404 = !DILocation(line: 1245, column: 2, scope: !6376)
!6405 = !DILocation(line: 1246, column: 22, scope: !6376)
!6406 = !DILocation(line: 1246, column: 44, scope: !6376)
!6407 = !DILocation(line: 1246, column: 2, scope: !6376)
!6408 = !DILocation(line: 1248, column: 10, scope: !6376)
!6409 = !DILocation(line: 1248, column: 18, scope: !6376)
!6410 = !DILocation(line: 1248, column: 26, scope: !6376)
!6411 = !DILocation(line: 1248, column: 41, scope: !6376)
!6412 = !DILocation(line: 1248, column: 36, scope: !6376)
!6413 = !DILocation(line: 1248, column: 49, scope: !6376)
!6414 = !DILocation(line: 1248, column: 33, scope: !6376)
!6415 = !DILocation(line: 1249, column: 9, scope: !6376)
!6416 = !DILocation(line: 1249, column: 4, scope: !6376)
!6417 = !DILocation(line: 1249, column: 17, scope: !6376)
!6418 = !DILocation(line: 1248, column: 56, scope: !6376)
!6419 = !DILocation(line: 1249, column: 30, scope: !6376)
!6420 = !DILocation(line: 1249, column: 25, scope: !6376)
!6421 = !DILocation(line: 1249, column: 23, scope: !6376)
!6422 = !DILocation(line: 167, column: 20, scope: !6283, inlinedAt: !6378)
!6423 = !DILocation(line: 167, column: 18, scope: !6283, inlinedAt: !6378)
!6424 = !DILocation(line: 167, column: 15, scope: !6283, inlinedAt: !6378)
!6425 = !DILocation(line: 168, column: 17, scope: !6283, inlinedAt: !6378)
!6426 = !DILocation(line: 168, column: 26, scope: !6283, inlinedAt: !6378)
!6427 = !DILocation(line: 168, column: 23, scope: !6283, inlinedAt: !6378)
!6428 = !DILocation(line: 168, column: 36, scope: !6283, inlinedAt: !6378)
!6429 = !DILocation(line: 168, column: 33, scope: !6283, inlinedAt: !6378)
!6430 = !DILocation(line: 1247, column: 15, scope: !6376)
!6431 = !DILocation(line: 1247, column: 3, scope: !6376)
!6432 = !DILocation(line: 1247, column: 10, scope: !6376)
!6433 = !DILocation(line: 1250, column: 14, scope: !6376)
!6434 = !DILocation(line: 1250, column: 24, scope: !6376)
!6435 = !DILocation(line: 1250, column: 3, scope: !6376)
!6436 = !DILocation(line: 1250, column: 10, scope: !6376)
!6437 = !DILocation(line: 1251, column: 3, scope: !6376)
!6438 = !DILocation(line: 1251, column: 10, scope: !6376)
!6439 = !DILocation(line: 1252, column: 2, scope: !6376)
!6440 = !DILocation(line: 1253, column: 1, scope: !6376)
!6441 = distinct !DISubprogram(name: "cxd2841er_get_carrier_offset_t2", scope: !3, file: !3, line: 1255, type: !6280, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6442 = !DILocation(line: 165, column: 50, scope: !6283, inlinedAt: !6443)
!6443 = distinct !DILocation(line: 1273, column: 17, scope: !6441)
!6444 = !DILocation(line: 165, column: 61, scope: !6283, inlinedAt: !6443)
!6445 = !DILocation(line: 167, column: 7, scope: !6283, inlinedAt: !6443)
!6446 = !DILocalVariable(name: "priv", arg: 1, scope: !6441, file: !3, line: 1255, type: !4266)
!6447 = !DILocation(line: 1255, column: 67, scope: !6441)
!6448 = !DILocalVariable(name: "bandwidth", arg: 2, scope: !6441, file: !3, line: 1256, type: !326)
!6449 = !DILocation(line: 1256, column: 13, scope: !6441)
!6450 = !DILocalVariable(name: "offset", arg: 3, scope: !6441, file: !3, line: 1256, type: !910)
!6451 = !DILocation(line: 1256, column: 29, scope: !6441)
!6452 = !DILocalVariable(name: "data", scope: !6441, file: !3, line: 1258, type: !6300)
!6453 = !DILocation(line: 1258, column: 5, scope: !6441)
!6454 = !DILocation(line: 1261, column: 6, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 1261, column: 6)
!6456 = !DILocation(line: 1261, column: 12, scope: !6455)
!6457 = !DILocation(line: 1261, column: 18, scope: !6455)
!6458 = !DILocation(line: 1261, column: 6, scope: !6441)
!6459 = !DILocation(line: 1264, column: 3, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 1261, column: 38)
!6461 = !DILocation(line: 1266, column: 6, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 1266, column: 6)
!6463 = !DILocation(line: 1266, column: 12, scope: !6462)
!6464 = !DILocation(line: 1266, column: 19, scope: !6462)
!6465 = !DILocation(line: 1266, column: 6, scope: !6441)
!6466 = !DILocation(line: 1269, column: 3, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 1266, column: 33)
!6468 = !DILocation(line: 1271, column: 22, scope: !6441)
!6469 = !DILocation(line: 1271, column: 2, scope: !6441)
!6470 = !DILocation(line: 1272, column: 22, scope: !6441)
!6471 = !DILocation(line: 1272, column: 44, scope: !6441)
!6472 = !DILocation(line: 1272, column: 2, scope: !6441)
!6473 = !DILocation(line: 1274, column: 10, scope: !6441)
!6474 = !DILocation(line: 1274, column: 18, scope: !6441)
!6475 = !DILocation(line: 1274, column: 26, scope: !6441)
!6476 = !DILocation(line: 1274, column: 41, scope: !6441)
!6477 = !DILocation(line: 1274, column: 36, scope: !6441)
!6478 = !DILocation(line: 1274, column: 49, scope: !6441)
!6479 = !DILocation(line: 1274, column: 33, scope: !6441)
!6480 = !DILocation(line: 1275, column: 9, scope: !6441)
!6481 = !DILocation(line: 1275, column: 4, scope: !6441)
!6482 = !DILocation(line: 1275, column: 17, scope: !6441)
!6483 = !DILocation(line: 1274, column: 56, scope: !6441)
!6484 = !DILocation(line: 1275, column: 30, scope: !6441)
!6485 = !DILocation(line: 1275, column: 25, scope: !6441)
!6486 = !DILocation(line: 1275, column: 23, scope: !6441)
!6487 = !DILocation(line: 167, column: 20, scope: !6283, inlinedAt: !6443)
!6488 = !DILocation(line: 167, column: 18, scope: !6283, inlinedAt: !6443)
!6489 = !DILocation(line: 167, column: 15, scope: !6283, inlinedAt: !6443)
!6490 = !DILocation(line: 168, column: 17, scope: !6283, inlinedAt: !6443)
!6491 = !DILocation(line: 168, column: 26, scope: !6283, inlinedAt: !6443)
!6492 = !DILocation(line: 168, column: 23, scope: !6283, inlinedAt: !6443)
!6493 = !DILocation(line: 168, column: 36, scope: !6283, inlinedAt: !6443)
!6494 = !DILocation(line: 168, column: 33, scope: !6283, inlinedAt: !6443)
!6495 = !DILocation(line: 1273, column: 15, scope: !6441)
!6496 = !DILocation(line: 1273, column: 3, scope: !6441)
!6497 = !DILocation(line: 1273, column: 10, scope: !6441)
!6498 = !DILocation(line: 1276, column: 10, scope: !6441)
!6499 = !DILocation(line: 1276, column: 2, scope: !6441)
!6500 = !DILocation(line: 1278, column: 4, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 1276, column: 21)
!6502 = !DILocation(line: 1278, column: 11, scope: !6501)
!6503 = !DILocation(line: 1279, column: 3, scope: !6501)
!6504 = !DILocation(line: 1284, column: 15, scope: !6501)
!6505 = !DILocation(line: 1284, column: 25, scope: !6501)
!6506 = !DILocation(line: 1284, column: 4, scope: !6501)
!6507 = !DILocation(line: 1284, column: 11, scope: !6501)
!6508 = !DILocation(line: 1285, column: 4, scope: !6501)
!6509 = !DILocation(line: 1285, column: 11, scope: !6501)
!6510 = !DILocation(line: 1286, column: 3, scope: !6501)
!6511 = !DILocation(line: 1290, column: 3, scope: !6501)
!6512 = !DILocation(line: 1292, column: 2, scope: !6441)
!6513 = !DILocation(line: 1293, column: 1, scope: !6441)
!6514 = distinct !DISubprogram(name: "cxd2841er_get_carrier_offset_c", scope: !3, file: !3, line: 1295, type: !6515, scopeLine: 1297, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6515 = !DISubroutineType(types: !6516)
!6516 = !{!331, !4266, !910}
!6517 = !DILocation(line: 165, column: 50, scope: !6283, inlinedAt: !6518)
!6518 = distinct !DILocation(line: 1313, column: 30, scope: !6514)
!6519 = !DILocation(line: 165, column: 61, scope: !6283, inlinedAt: !6518)
!6520 = !DILocation(line: 167, column: 7, scope: !6283, inlinedAt: !6518)
!6521 = !DILocalVariable(name: "priv", arg: 1, scope: !6514, file: !3, line: 1295, type: !4266)
!6522 = !DILocation(line: 1295, column: 66, scope: !6514)
!6523 = !DILocalVariable(name: "offset", arg: 2, scope: !6514, file: !3, line: 1296, type: !910)
!6524 = !DILocation(line: 1296, column: 13, scope: !6514)
!6525 = !DILocalVariable(name: "data", scope: !6514, file: !3, line: 1298, type: !6526)
!6526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 16, elements: !1682)
!6527 = !DILocation(line: 1298, column: 5, scope: !6514)
!6528 = !DILocation(line: 1301, column: 6, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 1301, column: 6)
!6530 = !DILocation(line: 1301, column: 12, scope: !6529)
!6531 = !DILocation(line: 1301, column: 18, scope: !6529)
!6532 = !DILocation(line: 1301, column: 6, scope: !6514)
!6533 = !DILocation(line: 1304, column: 3, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6529, file: !3, line: 1301, column: 38)
!6535 = !DILocation(line: 1306, column: 6, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 1306, column: 6)
!6537 = !DILocation(line: 1306, column: 12, scope: !6536)
!6538 = !DILocation(line: 1306, column: 19, scope: !6536)
!6539 = !DILocation(line: 1306, column: 6, scope: !6514)
!6540 = !DILocation(line: 1309, column: 3, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6536, file: !3, line: 1306, column: 40)
!6542 = !DILocation(line: 1311, column: 22, scope: !6514)
!6543 = !DILocation(line: 1311, column: 2, scope: !6514)
!6544 = !DILocation(line: 1312, column: 22, scope: !6514)
!6545 = !DILocation(line: 1312, column: 44, scope: !6514)
!6546 = !DILocation(line: 1312, column: 2, scope: !6514)
!6547 = !DILocation(line: 1313, column: 51, scope: !6514)
!6548 = !DILocation(line: 1313, column: 46, scope: !6514)
!6549 = !DILocation(line: 1313, column: 59, scope: !6514)
!6550 = !DILocation(line: 1313, column: 67, scope: !6514)
!6551 = !DILocation(line: 1314, column: 14, scope: !6514)
!6552 = !DILocation(line: 1314, column: 9, scope: !6514)
!6553 = !DILocation(line: 1314, column: 7, scope: !6514)
!6554 = !DILocation(line: 167, column: 20, scope: !6283, inlinedAt: !6518)
!6555 = !DILocation(line: 167, column: 18, scope: !6283, inlinedAt: !6518)
!6556 = !DILocation(line: 167, column: 15, scope: !6283, inlinedAt: !6518)
!6557 = !DILocation(line: 168, column: 17, scope: !6283, inlinedAt: !6518)
!6558 = !DILocation(line: 168, column: 26, scope: !6283, inlinedAt: !6518)
!6559 = !DILocation(line: 168, column: 23, scope: !6283, inlinedAt: !6518)
!6560 = !DILocation(line: 168, column: 36, scope: !6283, inlinedAt: !6518)
!6561 = !DILocation(line: 168, column: 33, scope: !6283, inlinedAt: !6518)
!6562 = !DILocation(line: 1313, column: 30, scope: !6514)
!6563 = !DILocation(line: 1313, column: 28, scope: !6514)
!6564 = !DILocation(line: 1313, column: 12, scope: !6514)
!6565 = !DILocation(line: 1313, column: 3, scope: !6514)
!6566 = !DILocation(line: 1313, column: 10, scope: !6514)
!6567 = !DILocation(line: 1315, column: 2, scope: !6514)
!6568 = !DILocation(line: 1316, column: 1, scope: !6514)
!6569 = distinct !DISubprogram(name: "div_s64", scope: !6570, file: !6570, line: 137, type: !6571, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6570 = !DIFile(filename: "./include/linux/math64.h", directory: "/home/lizy2001/genbc/linux")
!6571 = !DISubroutineType(types: !6572)
!6572 = !{!978, !978, !344}
!6573 = !DILocalVariable(name: "dividend", arg: 1, scope: !6569, file: !6570, line: 137, type: !978)
!6574 = !DILocation(line: 137, column: 31, scope: !6569)
!6575 = !DILocalVariable(name: "divisor", arg: 2, scope: !6569, file: !6570, line: 137, type: !344)
!6576 = !DILocation(line: 137, column: 45, scope: !6569)
!6577 = !DILocalVariable(name: "remainder", scope: !6569, file: !6570, line: 139, type: !344)
!6578 = !DILocation(line: 139, column: 6, scope: !6569)
!6579 = !DILocation(line: 140, column: 21, scope: !6569)
!6580 = !DILocation(line: 140, column: 31, scope: !6569)
!6581 = !DILocation(line: 140, column: 9, scope: !6569)
!6582 = !DILocation(line: 140, column: 2, scope: !6569)
!6583 = distinct !DISubprogram(name: "div_s64_rem", scope: !6570, file: !6570, line: 39, type: !6584, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6584 = !DISubroutineType(types: !6585)
!6585 = !{!978, !978, !344, !4232}
!6586 = !DILocalVariable(name: "dividend", arg: 1, scope: !6583, file: !6570, line: 39, type: !978)
!6587 = !DILocation(line: 39, column: 35, scope: !6583)
!6588 = !DILocalVariable(name: "divisor", arg: 2, scope: !6583, file: !6570, line: 39, type: !344)
!6589 = !DILocation(line: 39, column: 49, scope: !6583)
!6590 = !DILocalVariable(name: "remainder", arg: 3, scope: !6583, file: !6570, line: 39, type: !4232)
!6591 = !DILocation(line: 39, column: 63, scope: !6583)
!6592 = !DILocation(line: 41, column: 15, scope: !6583)
!6593 = !DILocation(line: 41, column: 26, scope: !6583)
!6594 = !DILocation(line: 41, column: 24, scope: !6583)
!6595 = !DILocation(line: 41, column: 3, scope: !6583)
!6596 = !DILocation(line: 41, column: 13, scope: !6583)
!6597 = !DILocation(line: 42, column: 9, scope: !6583)
!6598 = !DILocation(line: 42, column: 20, scope: !6583)
!6599 = !DILocation(line: 42, column: 18, scope: !6583)
!6600 = !DILocation(line: 42, column: 2, scope: !6583)
!6601 = distinct !DISubprogram(name: "cxd2841er_tuner_set", scope: !3, file: !3, line: 341, type: !4088, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6602 = !DILocalVariable(name: "fe", arg: 1, scope: !6601, file: !3, line: 341, type: !390)
!6603 = !DILocation(line: 341, column: 53, scope: !6601)
!6604 = !DILocalVariable(name: "priv", scope: !6601, file: !3, line: 343, type: !4266)
!6605 = !DILocation(line: 343, column: 25, scope: !6601)
!6606 = !DILocation(line: 343, column: 32, scope: !6601)
!6607 = !DILocation(line: 343, column: 36, scope: !6601)
!6608 = !DILocation(line: 345, column: 7, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 345, column: 6)
!6610 = !DILocation(line: 345, column: 13, scope: !6609)
!6611 = !DILocation(line: 345, column: 19, scope: !6609)
!6612 = !DILocation(line: 345, column: 45, scope: !6609)
!6613 = !DILocation(line: 345, column: 48, scope: !6609)
!6614 = !DILocation(line: 345, column: 52, scope: !6609)
!6615 = !DILocation(line: 345, column: 56, scope: !6609)
!6616 = !DILocation(line: 345, column: 6, scope: !6601)
!6617 = !DILocation(line: 346, column: 3, scope: !6609)
!6618 = !DILocation(line: 346, column: 7, scope: !6609)
!6619 = !DILocation(line: 346, column: 11, scope: !6609)
!6620 = !DILocation(line: 346, column: 25, scope: !6609)
!6621 = !DILocation(line: 347, column: 6, scope: !6622)
!6622 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 347, column: 6)
!6623 = !DILocation(line: 347, column: 10, scope: !6622)
!6624 = !DILocation(line: 347, column: 14, scope: !6622)
!6625 = !DILocation(line: 347, column: 24, scope: !6622)
!6626 = !DILocation(line: 347, column: 6, scope: !6601)
!6627 = !DILocation(line: 348, column: 3, scope: !6622)
!6628 = !DILocation(line: 348, column: 7, scope: !6622)
!6629 = !DILocation(line: 348, column: 11, scope: !6622)
!6630 = !DILocation(line: 348, column: 21, scope: !6622)
!6631 = !DILocation(line: 348, column: 32, scope: !6622)
!6632 = !DILocation(line: 349, column: 7, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6601, file: !3, line: 349, column: 6)
!6634 = !DILocation(line: 349, column: 13, scope: !6633)
!6635 = !DILocation(line: 349, column: 19, scope: !6633)
!6636 = !DILocation(line: 349, column: 45, scope: !6633)
!6637 = !DILocation(line: 349, column: 48, scope: !6633)
!6638 = !DILocation(line: 349, column: 52, scope: !6633)
!6639 = !DILocation(line: 349, column: 56, scope: !6633)
!6640 = !DILocation(line: 349, column: 6, scope: !6601)
!6641 = !DILocation(line: 350, column: 3, scope: !6633)
!6642 = !DILocation(line: 350, column: 7, scope: !6633)
!6643 = !DILocation(line: 350, column: 11, scope: !6633)
!6644 = !DILocation(line: 350, column: 25, scope: !6633)
!6645 = !DILocation(line: 352, column: 2, scope: !6601)
!6646 = distinct !DISubprogram(name: "cxd2841er_sleep_tc_to_active_t", scope: !3, file: !3, line: 2897, type: !4264, scopeLine: 2899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6647 = !DILocalVariable(name: "priv", arg: 1, scope: !6646, file: !3, line: 2897, type: !4266)
!6648 = !DILocation(line: 2897, column: 66, scope: !6646)
!6649 = !DILocalVariable(name: "bandwidth", arg: 2, scope: !6646, file: !3, line: 2898, type: !326)
!6650 = !DILocation(line: 2898, column: 12, scope: !6646)
!6651 = !DILocalVariable(name: "data", scope: !6646, file: !3, line: 2900, type: !6526)
!6652 = !DILocation(line: 2900, column: 5, scope: !6646)
!6653 = !DILocalVariable(name: "data24m", scope: !6646, file: !3, line: 2901, type: !6654)
!6654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 24, elements: !487)
!6655 = !DILocation(line: 2901, column: 5, scope: !6646)
!6656 = !DILocation(line: 2904, column: 30, scope: !6646)
!6657 = !DILocation(line: 2904, column: 2, scope: !6646)
!6658 = !DILocation(line: 2906, column: 22, scope: !6646)
!6659 = !DILocation(line: 2906, column: 2, scope: !6646)
!6660 = !DILocation(line: 2908, column: 22, scope: !6646)
!6661 = !DILocation(line: 2908, column: 2, scope: !6646)
!6662 = !DILocation(line: 2910, column: 22, scope: !6646)
!6663 = !DILocation(line: 2910, column: 2, scope: !6646)
!6664 = !DILocation(line: 2912, column: 22, scope: !6646)
!6665 = !DILocation(line: 2912, column: 2, scope: !6646)
!6666 = !DILocation(line: 2914, column: 22, scope: !6646)
!6667 = !DILocation(line: 2914, column: 2, scope: !6646)
!6668 = !DILocation(line: 2916, column: 22, scope: !6646)
!6669 = !DILocation(line: 2916, column: 2, scope: !6646)
!6670 = !DILocation(line: 2918, column: 22, scope: !6646)
!6671 = !DILocation(line: 2918, column: 2, scope: !6646)
!6672 = !DILocation(line: 2920, column: 6, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 2920, column: 6)
!6674 = !DILocation(line: 2920, column: 12, scope: !6673)
!6675 = !DILocation(line: 2920, column: 17, scope: !6673)
!6676 = !DILocation(line: 2920, column: 6, scope: !6646)
!6677 = !DILocation(line: 2921, column: 3, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 2920, column: 37)
!6679 = !DILocation(line: 2921, column: 11, scope: !6678)
!6680 = !DILocation(line: 2922, column: 3, scope: !6678)
!6681 = !DILocation(line: 2922, column: 11, scope: !6678)
!6682 = !DILocation(line: 2923, column: 2, scope: !6678)
!6683 = !DILocation(line: 2924, column: 23, scope: !6646)
!6684 = !DILocation(line: 2924, column: 45, scope: !6646)
!6685 = !DILocation(line: 2924, column: 2, scope: !6646)
!6686 = !DILocation(line: 2926, column: 22, scope: !6646)
!6687 = !DILocation(line: 2926, column: 2, scope: !6646)
!6688 = !DILocation(line: 2928, column: 22, scope: !6646)
!6689 = !DILocation(line: 2928, column: 2, scope: !6646)
!6690 = !DILocation(line: 2930, column: 25, scope: !6646)
!6691 = !DILocation(line: 2930, column: 2, scope: !6646)
!6692 = !DILocation(line: 2932, column: 22, scope: !6646)
!6693 = !DILocation(line: 2932, column: 2, scope: !6646)
!6694 = !DILocation(line: 2934, column: 22, scope: !6646)
!6695 = !DILocation(line: 2934, column: 2, scope: !6646)
!6696 = !DILocation(line: 2936, column: 22, scope: !6646)
!6697 = !DILocation(line: 2936, column: 2, scope: !6646)
!6698 = !DILocation(line: 2938, column: 25, scope: !6646)
!6699 = !DILocation(line: 2939, column: 5, scope: !6646)
!6700 = !DILocation(line: 2939, column: 11, scope: !6646)
!6701 = !DILocation(line: 2939, column: 17, scope: !6646)
!6702 = !DILocation(line: 2939, column: 4, scope: !6646)
!6703 = !DILocation(line: 2939, column: 3, scope: !6646)
!6704 = !DILocation(line: 2938, column: 2, scope: !6646)
!6705 = !DILocation(line: 2941, column: 22, scope: !6646)
!6706 = !DILocation(line: 2941, column: 2, scope: !6646)
!6707 = !DILocation(line: 2943, column: 25, scope: !6646)
!6708 = !DILocation(line: 2943, column: 2, scope: !6646)
!6709 = !DILocation(line: 2945, column: 25, scope: !6646)
!6710 = !DILocation(line: 2945, column: 2, scope: !6646)
!6711 = !DILocation(line: 2946, column: 25, scope: !6646)
!6712 = !DILocation(line: 2946, column: 2, scope: !6646)
!6713 = !DILocation(line: 2948, column: 22, scope: !6646)
!6714 = !DILocation(line: 2948, column: 2, scope: !6646)
!6715 = !DILocation(line: 2950, column: 25, scope: !6646)
!6716 = !DILocation(line: 2950, column: 2, scope: !6646)
!6717 = !DILocation(line: 2951, column: 25, scope: !6646)
!6718 = !DILocation(line: 2951, column: 2, scope: !6646)
!6719 = !DILocation(line: 2953, column: 6, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6646, file: !3, line: 2953, column: 6)
!6721 = !DILocation(line: 2953, column: 12, scope: !6720)
!6722 = !DILocation(line: 2953, column: 17, scope: !6720)
!6723 = !DILocation(line: 2953, column: 6, scope: !6646)
!6724 = !DILocation(line: 2955, column: 23, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 2953, column: 37)
!6726 = !DILocation(line: 2955, column: 3, scope: !6725)
!6727 = !DILocation(line: 2956, column: 23, scope: !6725)
!6728 = !DILocation(line: 2956, column: 3, scope: !6725)
!6729 = !DILocation(line: 2957, column: 23, scope: !6725)
!6730 = !DILocation(line: 2957, column: 3, scope: !6725)
!6731 = !DILocation(line: 2958, column: 24, scope: !6725)
!6732 = !DILocation(line: 2958, column: 46, scope: !6725)
!6733 = !DILocation(line: 2958, column: 3, scope: !6725)
!6734 = !DILocation(line: 2959, column: 2, scope: !6725)
!6735 = !DILocation(line: 2961, column: 38, scope: !6646)
!6736 = !DILocation(line: 2961, column: 44, scope: !6646)
!6737 = !DILocation(line: 2961, column: 2, scope: !6646)
!6738 = !DILocation(line: 2963, column: 22, scope: !6646)
!6739 = !DILocation(line: 2963, column: 2, scope: !6646)
!6740 = !DILocation(line: 2965, column: 22, scope: !6646)
!6741 = !DILocation(line: 2965, column: 2, scope: !6646)
!6742 = !DILocation(line: 2967, column: 22, scope: !6646)
!6743 = !DILocation(line: 2967, column: 2, scope: !6646)
!6744 = !DILocation(line: 2968, column: 2, scope: !6646)
!6745 = !DILocation(line: 2968, column: 8, scope: !6646)
!6746 = !DILocation(line: 2968, column: 14, scope: !6646)
!6747 = !DILocation(line: 2969, column: 2, scope: !6646)
!6748 = distinct !DISubprogram(name: "cxd2841er_retune_active", scope: !3, file: !3, line: 487, type: !6749, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6749 = !DISubroutineType(types: !6750)
!6750 = !{!331, !4266, !4121}
!6751 = !DILocalVariable(name: "priv", arg: 1, scope: !6748, file: !3, line: 487, type: !4266)
!6752 = !DILocation(line: 487, column: 59, scope: !6748)
!6753 = !DILocalVariable(name: "p", arg: 2, scope: !6748, file: !3, line: 488, type: !4121)
!6754 = !DILocation(line: 488, column: 40, scope: !6748)
!6755 = !DILocation(line: 491, column: 6, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 491, column: 6)
!6757 = !DILocation(line: 491, column: 12, scope: !6756)
!6758 = !DILocation(line: 491, column: 18, scope: !6756)
!6759 = !DILocation(line: 491, column: 36, scope: !6756)
!6760 = !DILocation(line: 492, column: 4, scope: !6756)
!6761 = !DILocation(line: 492, column: 10, scope: !6756)
!6762 = !DILocation(line: 492, column: 16, scope: !6756)
!6763 = !DILocation(line: 491, column: 6, scope: !6748)
!6764 = !DILocation(line: 495, column: 3, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 492, column: 36)
!6766 = !DILocation(line: 498, column: 22, scope: !6748)
!6767 = !DILocation(line: 498, column: 2, scope: !6748)
!6768 = !DILocation(line: 500, column: 22, scope: !6748)
!6769 = !DILocation(line: 500, column: 2, scope: !6748)
!6770 = !DILocation(line: 501, column: 6, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 501, column: 6)
!6772 = !DILocation(line: 501, column: 12, scope: !6771)
!6773 = !DILocation(line: 501, column: 18, scope: !6771)
!6774 = !DILocation(line: 501, column: 6, scope: !6748)
!6775 = !DILocation(line: 503, column: 5, scope: !6771)
!6776 = !DILocation(line: 503, column: 11, scope: !6771)
!6777 = !DILocation(line: 503, column: 14, scope: !6771)
!6778 = !DILocation(line: 503, column: 26, scope: !6771)
!6779 = !DILocation(line: 502, column: 10, scope: !6771)
!6780 = !DILocation(line: 502, column: 3, scope: !6771)
!6781 = !DILocation(line: 504, column: 11, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 504, column: 11)
!6783 = !DILocation(line: 504, column: 17, scope: !6782)
!6784 = !DILocation(line: 504, column: 23, scope: !6782)
!6785 = !DILocation(line: 504, column: 11, scope: !6771)
!6786 = !DILocation(line: 505, column: 11, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 504, column: 43)
!6788 = !DILocation(line: 505, column: 17, scope: !6787)
!6789 = !DILocation(line: 505, column: 3, scope: !6787)
!6790 = !DILocation(line: 508, column: 6, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 505, column: 25)
!6792 = !DILocation(line: 508, column: 12, scope: !6791)
!6793 = !DILocation(line: 508, column: 15, scope: !6791)
!6794 = !DILocation(line: 507, column: 11, scope: !6791)
!6795 = !DILocation(line: 507, column: 4, scope: !6791)
!6796 = !DILocation(line: 511, column: 6, scope: !6791)
!6797 = !DILocation(line: 511, column: 12, scope: !6791)
!6798 = !DILocation(line: 511, column: 15, scope: !6791)
!6799 = !DILocation(line: 510, column: 11, scope: !6791)
!6800 = !DILocation(line: 510, column: 4, scope: !6791)
!6801 = !DILocation(line: 514, column: 6, scope: !6791)
!6802 = !DILocation(line: 514, column: 12, scope: !6791)
!6803 = !DILocation(line: 514, column: 15, scope: !6791)
!6804 = !DILocation(line: 513, column: 11, scope: !6791)
!6805 = !DILocation(line: 513, column: 4, scope: !6791)
!6806 = !DILocation(line: 516, column: 35, scope: !6791)
!6807 = !DILocation(line: 516, column: 4, scope: !6791)
!6808 = !DILocation(line: 517, column: 35, scope: !6791)
!6809 = !DILocation(line: 517, column: 4, scope: !6791)
!6810 = !DILocation(line: 518, column: 35, scope: !6791)
!6811 = !DILocation(line: 518, column: 4, scope: !6791)
!6812 = !DILocation(line: 520, column: 6, scope: !6791)
!6813 = !DILocation(line: 520, column: 12, scope: !6791)
!6814 = !DILocation(line: 520, column: 15, scope: !6791)
!6815 = !DILocation(line: 519, column: 11, scope: !6791)
!6816 = !DILocation(line: 519, column: 4, scope: !6791)
!6817 = !DILocation(line: 522, column: 2, scope: !6787)
!6818 = !DILocation(line: 525, column: 2, scope: !6748)
!6819 = !DILocation(line: 526, column: 1, scope: !6748)
!6820 = distinct !DISubprogram(name: "cxd2841er_dvbt2_set_plp_config", scope: !3, file: !3, line: 2148, type: !6821, scopeLine: 2150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{!331, !4266, !332, !332}
!6823 = !DILocalVariable(name: "priv", arg: 1, scope: !6820, file: !3, line: 2148, type: !4266)
!6824 = !DILocation(line: 2148, column: 66, scope: !6820)
!6825 = !DILocalVariable(name: "is_auto", arg: 2, scope: !6820, file: !3, line: 2149, type: !332)
!6826 = !DILocation(line: 2149, column: 11, scope: !6820)
!6827 = !DILocalVariable(name: "plp_id", arg: 3, scope: !6820, file: !3, line: 2149, type: !332)
!6828 = !DILocation(line: 2149, column: 23, scope: !6820)
!6829 = !DILocation(line: 2151, column: 6, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 2151, column: 6)
!6831 = !DILocation(line: 2151, column: 6, scope: !6820)
!6832 = !DILocation(line: 2154, column: 2, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6830, file: !3, line: 2151, column: 15)
!6834 = !DILocation(line: 2160, column: 22, scope: !6820)
!6835 = !DILocation(line: 2160, column: 2, scope: !6820)
!6836 = !DILocation(line: 2161, column: 7, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 2161, column: 6)
!6838 = !DILocation(line: 2161, column: 6, scope: !6820)
!6839 = !DILocation(line: 2163, column: 23, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 2161, column: 16)
!6841 = !DILocation(line: 2163, column: 45, scope: !6840)
!6842 = !DILocation(line: 2163, column: 3, scope: !6840)
!6843 = !DILocation(line: 2164, column: 2, scope: !6840)
!6844 = !DILocation(line: 2166, column: 22, scope: !6820)
!6845 = !DILocation(line: 2166, column: 45, scope: !6820)
!6846 = !DILocation(line: 2166, column: 44, scope: !6820)
!6847 = !DILocation(line: 2166, column: 2, scope: !6820)
!6848 = !DILocation(line: 2167, column: 2, scope: !6820)
!6849 = distinct !DISubprogram(name: "cxd2841er_dvbt2_set_profile", scope: !3, file: !3, line: 2111, type: !6850, scopeLine: 2113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6850 = !DISubroutineType(types: !6851)
!6851 = !{!331, !4266, !309}
!6852 = !DILocalVariable(name: "priv", arg: 1, scope: !6849, file: !3, line: 2112, type: !4266)
!6853 = !DILocation(line: 2112, column: 25, scope: !6849)
!6854 = !DILocalVariable(name: "profile", arg: 2, scope: !6849, file: !3, line: 2112, type: !309)
!6855 = !DILocation(line: 2112, column: 62, scope: !6849)
!6856 = !DILocalVariable(name: "tune_mode", scope: !6849, file: !3, line: 2114, type: !332)
!6857 = !DILocation(line: 2114, column: 5, scope: !6849)
!6858 = !DILocalVariable(name: "seq_not2d_time", scope: !6849, file: !3, line: 2115, type: !332)
!6859 = !DILocation(line: 2115, column: 5, scope: !6849)
!6860 = !DILocation(line: 2118, column: 10, scope: !6849)
!6861 = !DILocation(line: 2118, column: 2, scope: !6849)
!6862 = !DILocation(line: 2120, column: 13, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 2118, column: 19)
!6864 = !DILocation(line: 2122, column: 21, scope: !6863)
!6865 = !DILocation(line: 2122, column: 27, scope: !6863)
!6866 = !DILocation(line: 2122, column: 32, scope: !6863)
!6867 = !DILocation(line: 2122, column: 20, scope: !6863)
!6868 = !DILocation(line: 2122, column: 18, scope: !6863)
!6869 = !DILocation(line: 2123, column: 3, scope: !6863)
!6870 = !DILocation(line: 2125, column: 13, scope: !6863)
!6871 = !DILocation(line: 2127, column: 21, scope: !6863)
!6872 = !DILocation(line: 2127, column: 27, scope: !6863)
!6873 = !DILocation(line: 2127, column: 32, scope: !6863)
!6874 = !DILocation(line: 2127, column: 20, scope: !6863)
!6875 = !DILocation(line: 2127, column: 18, scope: !6863)
!6876 = !DILocation(line: 2128, column: 3, scope: !6863)
!6877 = !DILocation(line: 2130, column: 13, scope: !6863)
!6878 = !DILocation(line: 2132, column: 21, scope: !6863)
!6879 = !DILocation(line: 2132, column: 27, scope: !6863)
!6880 = !DILocation(line: 2132, column: 32, scope: !6863)
!6881 = !DILocation(line: 2132, column: 20, scope: !6863)
!6882 = !DILocation(line: 2132, column: 18, scope: !6863)
!6883 = !DILocation(line: 2133, column: 3, scope: !6863)
!6884 = !DILocation(line: 2135, column: 3, scope: !6863)
!6885 = !DILocation(line: 2138, column: 22, scope: !6849)
!6886 = !DILocation(line: 2138, column: 2, scope: !6849)
!6887 = !DILocation(line: 2140, column: 25, scope: !6849)
!6888 = !DILocation(line: 2140, column: 47, scope: !6849)
!6889 = !DILocation(line: 2140, column: 2, scope: !6849)
!6890 = !DILocation(line: 2142, column: 22, scope: !6849)
!6891 = !DILocation(line: 2142, column: 2, scope: !6849)
!6892 = !DILocation(line: 2144, column: 22, scope: !6849)
!6893 = !DILocation(line: 2144, column: 44, scope: !6849)
!6894 = !DILocation(line: 2144, column: 2, scope: !6849)
!6895 = !DILocation(line: 2145, column: 2, scope: !6849)
!6896 = !DILocation(line: 2146, column: 1, scope: !6849)
!6897 = distinct !DISubprogram(name: "cxd2841er_sleep_tc_to_active_t2", scope: !3, file: !3, line: 2972, type: !4264, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!6898 = !DILocalVariable(name: "priv", arg: 1, scope: !6897, file: !3, line: 2972, type: !4266)
!6899 = !DILocation(line: 2972, column: 67, scope: !6897)
!6900 = !DILocalVariable(name: "bandwidth", arg: 2, scope: !6897, file: !3, line: 2973, type: !326)
!6901 = !DILocation(line: 2973, column: 13, scope: !6897)
!6902 = !DILocalVariable(name: "data", scope: !6897, file: !3, line: 2975, type: !6903)
!6903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 128, elements: !1845)
!6904 = !DILocation(line: 2975, column: 5, scope: !6897)
!6905 = !DILocation(line: 2978, column: 30, scope: !6897)
!6906 = !DILocation(line: 2978, column: 2, scope: !6897)
!6907 = !DILocation(line: 2980, column: 22, scope: !6897)
!6908 = !DILocation(line: 2980, column: 2, scope: !6897)
!6909 = !DILocation(line: 2982, column: 22, scope: !6897)
!6910 = !DILocation(line: 2982, column: 2, scope: !6897)
!6911 = !DILocation(line: 2984, column: 22, scope: !6897)
!6912 = !DILocation(line: 2984, column: 2, scope: !6897)
!6913 = !DILocation(line: 2986, column: 22, scope: !6897)
!6914 = !DILocation(line: 2986, column: 2, scope: !6897)
!6915 = !DILocation(line: 2988, column: 22, scope: !6897)
!6916 = !DILocation(line: 2988, column: 2, scope: !6897)
!6917 = !DILocation(line: 2989, column: 22, scope: !6897)
!6918 = !DILocation(line: 2989, column: 2, scope: !6897)
!6919 = !DILocation(line: 2991, column: 22, scope: !6897)
!6920 = !DILocation(line: 2991, column: 2, scope: !6897)
!6921 = !DILocation(line: 2993, column: 22, scope: !6897)
!6922 = !DILocation(line: 2993, column: 2, scope: !6897)
!6923 = !DILocation(line: 2995, column: 6, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 2995, column: 6)
!6925 = !DILocation(line: 2995, column: 12, scope: !6924)
!6926 = !DILocation(line: 2995, column: 17, scope: !6924)
!6927 = !DILocation(line: 2995, column: 6, scope: !6897)
!6928 = !DILocation(line: 2996, column: 3, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 2995, column: 37)
!6930 = !DILocation(line: 2996, column: 11, scope: !6929)
!6931 = !DILocation(line: 2997, column: 3, scope: !6929)
!6932 = !DILocation(line: 2997, column: 11, scope: !6929)
!6933 = !DILocation(line: 2998, column: 2, scope: !6929)
!6934 = !DILocation(line: 2999, column: 3, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 2998, column: 9)
!6936 = !DILocation(line: 2999, column: 11, scope: !6935)
!6937 = !DILocation(line: 3000, column: 3, scope: !6935)
!6938 = !DILocation(line: 3000, column: 11, scope: !6935)
!6939 = !DILocation(line: 3003, column: 23, scope: !6897)
!6940 = !DILocation(line: 3003, column: 45, scope: !6897)
!6941 = !DILocation(line: 3003, column: 2, scope: !6897)
!6942 = !DILocation(line: 3005, column: 22, scope: !6897)
!6943 = !DILocation(line: 3005, column: 2, scope: !6897)
!6944 = !DILocation(line: 3007, column: 22, scope: !6897)
!6945 = !DILocation(line: 3007, column: 2, scope: !6897)
!6946 = !DILocation(line: 3009, column: 25, scope: !6897)
!6947 = !DILocation(line: 3009, column: 2, scope: !6897)
!6948 = !DILocation(line: 3011, column: 22, scope: !6897)
!6949 = !DILocation(line: 3011, column: 2, scope: !6897)
!6950 = !DILocation(line: 3013, column: 22, scope: !6897)
!6951 = !DILocation(line: 3013, column: 2, scope: !6897)
!6952 = !DILocation(line: 3015, column: 22, scope: !6897)
!6953 = !DILocation(line: 3015, column: 2, scope: !6897)
!6954 = !DILocation(line: 3017, column: 25, scope: !6897)
!6955 = !DILocation(line: 3018, column: 5, scope: !6897)
!6956 = !DILocation(line: 3018, column: 11, scope: !6897)
!6957 = !DILocation(line: 3018, column: 17, scope: !6897)
!6958 = !DILocation(line: 3018, column: 4, scope: !6897)
!6959 = !DILocation(line: 3018, column: 3, scope: !6897)
!6960 = !DILocation(line: 3017, column: 2, scope: !6897)
!6961 = !DILocation(line: 3020, column: 22, scope: !6897)
!6962 = !DILocation(line: 3020, column: 2, scope: !6897)
!6963 = !DILocation(line: 3022, column: 22, scope: !6897)
!6964 = !DILocation(line: 3022, column: 2, scope: !6897)
!6965 = !DILocation(line: 3024, column: 22, scope: !6897)
!6966 = !DILocation(line: 3024, column: 2, scope: !6897)
!6967 = !DILocation(line: 3025, column: 25, scope: !6897)
!6968 = !DILocation(line: 3025, column: 2, scope: !6897)
!6969 = !DILocation(line: 3027, column: 22, scope: !6897)
!6970 = !DILocation(line: 3027, column: 2, scope: !6897)
!6971 = !DILocation(line: 3029, column: 25, scope: !6897)
!6972 = !DILocation(line: 3029, column: 2, scope: !6897)
!6973 = !DILocation(line: 3031, column: 22, scope: !6897)
!6974 = !DILocation(line: 3031, column: 2, scope: !6897)
!6975 = !DILocation(line: 3033, column: 25, scope: !6897)
!6976 = !DILocation(line: 3033, column: 2, scope: !6897)
!6977 = !DILocation(line: 3034, column: 25, scope: !6897)
!6978 = !DILocation(line: 3034, column: 2, scope: !6897)
!6979 = !DILocation(line: 3036, column: 22, scope: !6897)
!6980 = !DILocation(line: 3036, column: 2, scope: !6897)
!6981 = !DILocation(line: 3037, column: 22, scope: !6897)
!6982 = !DILocation(line: 3037, column: 2, scope: !6897)
!6983 = !DILocation(line: 3038, column: 22, scope: !6897)
!6984 = !DILocation(line: 3038, column: 2, scope: !6897)
!6985 = !DILocation(line: 3039, column: 25, scope: !6897)
!6986 = !DILocation(line: 3039, column: 2, scope: !6897)
!6987 = !DILocation(line: 3040, column: 22, scope: !6897)
!6988 = !DILocation(line: 3040, column: 2, scope: !6897)
!6989 = !DILocation(line: 3042, column: 22, scope: !6897)
!6990 = !DILocation(line: 3042, column: 2, scope: !6897)
!6991 = !DILocation(line: 3043, column: 25, scope: !6897)
!6992 = !DILocation(line: 3043, column: 2, scope: !6897)
!6993 = !DILocation(line: 3045, column: 22, scope: !6897)
!6994 = !DILocation(line: 3045, column: 2, scope: !6897)
!6995 = !DILocation(line: 3046, column: 25, scope: !6897)
!6996 = !DILocation(line: 3046, column: 2, scope: !6897)
!6997 = !DILocation(line: 3049, column: 6, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 3049, column: 6)
!6999 = !DILocation(line: 3049, column: 12, scope: !6998)
!7000 = !DILocation(line: 3049, column: 17, scope: !6998)
!7001 = !DILocation(line: 3049, column: 6, scope: !6897)
!7002 = !DILocation(line: 3051, column: 23, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 3049, column: 37)
!7004 = !DILocation(line: 3051, column: 3, scope: !7003)
!7005 = !DILocation(line: 3052, column: 3, scope: !7003)
!7006 = !DILocation(line: 3052, column: 11, scope: !7003)
!7007 = !DILocation(line: 3053, column: 3, scope: !7003)
!7008 = !DILocation(line: 3053, column: 11, scope: !7003)
!7009 = !DILocation(line: 3054, column: 3, scope: !7003)
!7010 = !DILocation(line: 3054, column: 11, scope: !7003)
!7011 = !DILocation(line: 3055, column: 24, scope: !7003)
!7012 = !DILocation(line: 3055, column: 46, scope: !7003)
!7013 = !DILocation(line: 3055, column: 3, scope: !7003)
!7014 = !DILocation(line: 3058, column: 23, scope: !7003)
!7015 = !DILocation(line: 3058, column: 3, scope: !7003)
!7016 = !DILocation(line: 3059, column: 3, scope: !7003)
!7017 = !DILocation(line: 3059, column: 11, scope: !7003)
!7018 = !DILocation(line: 3060, column: 3, scope: !7003)
!7019 = !DILocation(line: 3060, column: 11, scope: !7003)
!7020 = !DILocation(line: 3061, column: 3, scope: !7003)
!7021 = !DILocation(line: 3061, column: 11, scope: !7003)
!7022 = !DILocation(line: 3062, column: 24, scope: !7003)
!7023 = !DILocation(line: 3062, column: 46, scope: !7003)
!7024 = !DILocation(line: 3062, column: 3, scope: !7003)
!7025 = !DILocation(line: 3064, column: 23, scope: !7003)
!7026 = !DILocation(line: 3064, column: 3, scope: !7003)
!7027 = !DILocation(line: 3066, column: 3, scope: !7003)
!7028 = !DILocation(line: 3066, column: 11, scope: !7003)
!7029 = !DILocation(line: 3067, column: 3, scope: !7003)
!7030 = !DILocation(line: 3067, column: 11, scope: !7003)
!7031 = !DILocation(line: 3068, column: 24, scope: !7003)
!7032 = !DILocation(line: 3068, column: 46, scope: !7003)
!7033 = !DILocation(line: 3068, column: 3, scope: !7003)
!7034 = !DILocation(line: 3071, column: 23, scope: !7003)
!7035 = !DILocation(line: 3071, column: 3, scope: !7003)
!7036 = !DILocation(line: 3072, column: 3, scope: !7003)
!7037 = !DILocation(line: 3072, column: 11, scope: !7003)
!7038 = !DILocation(line: 3073, column: 3, scope: !7003)
!7039 = !DILocation(line: 3073, column: 11, scope: !7003)
!7040 = !DILocation(line: 3074, column: 24, scope: !7003)
!7041 = !DILocation(line: 3074, column: 46, scope: !7003)
!7042 = !DILocation(line: 3074, column: 3, scope: !7003)
!7043 = !DILocation(line: 3076, column: 3, scope: !7003)
!7044 = !DILocation(line: 3076, column: 11, scope: !7003)
!7045 = !DILocation(line: 3077, column: 3, scope: !7003)
!7046 = !DILocation(line: 3077, column: 11, scope: !7003)
!7047 = !DILocation(line: 3078, column: 3, scope: !7003)
!7048 = !DILocation(line: 3078, column: 11, scope: !7003)
!7049 = !DILocation(line: 3079, column: 24, scope: !7003)
!7050 = !DILocation(line: 3079, column: 46, scope: !7003)
!7051 = !DILocation(line: 3079, column: 3, scope: !7003)
!7052 = !DILocation(line: 3081, column: 3, scope: !7003)
!7053 = !DILocation(line: 3081, column: 11, scope: !7003)
!7054 = !DILocation(line: 3082, column: 3, scope: !7003)
!7055 = !DILocation(line: 3082, column: 11, scope: !7003)
!7056 = !DILocation(line: 3083, column: 3, scope: !7003)
!7057 = !DILocation(line: 3083, column: 11, scope: !7003)
!7058 = !DILocation(line: 3084, column: 24, scope: !7003)
!7059 = !DILocation(line: 3084, column: 46, scope: !7003)
!7060 = !DILocation(line: 3084, column: 3, scope: !7003)
!7061 = !DILocation(line: 3086, column: 23, scope: !7003)
!7062 = !DILocation(line: 3086, column: 3, scope: !7003)
!7063 = !DILocation(line: 3089, column: 23, scope: !7003)
!7064 = !DILocation(line: 3089, column: 3, scope: !7003)
!7065 = !DILocation(line: 3090, column: 23, scope: !7003)
!7066 = !DILocation(line: 3090, column: 3, scope: !7003)
!7067 = !DILocation(line: 3093, column: 23, scope: !7003)
!7068 = !DILocation(line: 3093, column: 3, scope: !7003)
!7069 = !DILocation(line: 3094, column: 23, scope: !7003)
!7070 = !DILocation(line: 3094, column: 3, scope: !7003)
!7071 = !DILocation(line: 3097, column: 23, scope: !7003)
!7072 = !DILocation(line: 3097, column: 3, scope: !7003)
!7073 = !DILocation(line: 3098, column: 23, scope: !7003)
!7074 = !DILocation(line: 3098, column: 3, scope: !7003)
!7075 = !DILocation(line: 3099, column: 23, scope: !7003)
!7076 = !DILocation(line: 3099, column: 3, scope: !7003)
!7077 = !DILocation(line: 3102, column: 23, scope: !7003)
!7078 = !DILocation(line: 3102, column: 3, scope: !7003)
!7079 = !DILocation(line: 3103, column: 3, scope: !7003)
!7080 = !DILocation(line: 3103, column: 11, scope: !7003)
!7081 = !DILocation(line: 3104, column: 3, scope: !7003)
!7082 = !DILocation(line: 3104, column: 11, scope: !7003)
!7083 = !DILocation(line: 3105, column: 24, scope: !7003)
!7084 = !DILocation(line: 3105, column: 46, scope: !7003)
!7085 = !DILocation(line: 3105, column: 3, scope: !7003)
!7086 = !DILocation(line: 3108, column: 23, scope: !7003)
!7087 = !DILocation(line: 3108, column: 3, scope: !7003)
!7088 = !DILocation(line: 3109, column: 3, scope: !7003)
!7089 = !DILocation(line: 3109, column: 11, scope: !7003)
!7090 = !DILocation(line: 3110, column: 3, scope: !7003)
!7091 = !DILocation(line: 3110, column: 11, scope: !7003)
!7092 = !DILocation(line: 3111, column: 24, scope: !7003)
!7093 = !DILocation(line: 3111, column: 46, scope: !7003)
!7094 = !DILocation(line: 3111, column: 3, scope: !7003)
!7095 = !DILocation(line: 3112, column: 2, scope: !7003)
!7096 = !DILocation(line: 3114, column: 39, scope: !6897)
!7097 = !DILocation(line: 3114, column: 45, scope: !6897)
!7098 = !DILocation(line: 3114, column: 2, scope: !6897)
!7099 = !DILocation(line: 3117, column: 22, scope: !6897)
!7100 = !DILocation(line: 3117, column: 2, scope: !6897)
!7101 = !DILocation(line: 3119, column: 22, scope: !6897)
!7102 = !DILocation(line: 3119, column: 2, scope: !6897)
!7103 = !DILocation(line: 3121, column: 22, scope: !6897)
!7104 = !DILocation(line: 3121, column: 2, scope: !6897)
!7105 = !DILocation(line: 3122, column: 2, scope: !6897)
!7106 = !DILocation(line: 3122, column: 8, scope: !6897)
!7107 = !DILocation(line: 3122, column: 14, scope: !6897)
!7108 = !DILocation(line: 3123, column: 2, scope: !6897)
!7109 = distinct !DISubprogram(name: "cxd2841er_sleep_tc_to_active_i", scope: !3, file: !3, line: 3127, type: !4264, scopeLine: 3129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!7110 = !DILocalVariable(name: "priv", arg: 1, scope: !7109, file: !3, line: 3127, type: !4266)
!7111 = !DILocation(line: 3127, column: 66, scope: !7109)
!7112 = !DILocalVariable(name: "bandwidth", arg: 2, scope: !7109, file: !3, line: 3128, type: !326)
!7113 = !DILocation(line: 3128, column: 7, scope: !7109)
!7114 = !DILocalVariable(name: "data", scope: !7109, file: !3, line: 3130, type: !6526)
!7115 = !DILocation(line: 3130, column: 5, scope: !7109)
!7116 = !DILocalVariable(name: "data24m", scope: !7109, file: !3, line: 3131, type: !6526)
!7117 = !DILocation(line: 3131, column: 5, scope: !7109)
!7118 = !DILocalVariable(name: "data24m2", scope: !7109, file: !3, line: 3132, type: !6654)
!7119 = !DILocation(line: 3132, column: 5, scope: !7109)
!7120 = !DILocation(line: 3135, column: 30, scope: !7109)
!7121 = !DILocation(line: 3135, column: 2, scope: !7109)
!7122 = !DILocation(line: 3137, column: 22, scope: !7109)
!7123 = !DILocation(line: 3137, column: 2, scope: !7109)
!7124 = !DILocation(line: 3139, column: 22, scope: !7109)
!7125 = !DILocation(line: 3139, column: 2, scope: !7109)
!7126 = !DILocation(line: 3141, column: 22, scope: !7109)
!7127 = !DILocation(line: 3141, column: 2, scope: !7109)
!7128 = !DILocation(line: 3143, column: 22, scope: !7109)
!7129 = !DILocation(line: 3143, column: 2, scope: !7109)
!7130 = !DILocation(line: 3145, column: 22, scope: !7109)
!7131 = !DILocation(line: 3145, column: 2, scope: !7109)
!7132 = !DILocation(line: 3146, column: 22, scope: !7109)
!7133 = !DILocation(line: 3146, column: 2, scope: !7109)
!7134 = !DILocation(line: 3148, column: 22, scope: !7109)
!7135 = !DILocation(line: 3148, column: 2, scope: !7109)
!7136 = !DILocation(line: 3150, column: 22, scope: !7109)
!7137 = !DILocation(line: 3150, column: 2, scope: !7109)
!7138 = !DILocation(line: 3152, column: 23, scope: !7109)
!7139 = !DILocation(line: 3152, column: 45, scope: !7109)
!7140 = !DILocation(line: 3152, column: 2, scope: !7109)
!7141 = !DILocation(line: 3154, column: 22, scope: !7109)
!7142 = !DILocation(line: 3154, column: 2, scope: !7109)
!7143 = !DILocation(line: 3156, column: 25, scope: !7109)
!7144 = !DILocation(line: 3157, column: 5, scope: !7109)
!7145 = !DILocation(line: 3157, column: 11, scope: !7109)
!7146 = !DILocation(line: 3157, column: 17, scope: !7109)
!7147 = !DILocation(line: 3157, column: 4, scope: !7109)
!7148 = !DILocation(line: 3157, column: 3, scope: !7109)
!7149 = !DILocation(line: 3156, column: 2, scope: !7109)
!7150 = !DILocation(line: 3159, column: 25, scope: !7109)
!7151 = !DILocation(line: 3159, column: 2, scope: !7109)
!7152 = !DILocation(line: 3160, column: 25, scope: !7109)
!7153 = !DILocation(line: 3160, column: 2, scope: !7109)
!7154 = !DILocation(line: 3163, column: 22, scope: !7109)
!7155 = !DILocation(line: 3163, column: 2, scope: !7109)
!7156 = !DILocation(line: 3164, column: 25, scope: !7109)
!7157 = !DILocation(line: 3164, column: 2, scope: !7109)
!7158 = !DILocation(line: 3165, column: 25, scope: !7109)
!7159 = !DILocation(line: 3165, column: 2, scope: !7109)
!7160 = !DILocation(line: 3167, column: 22, scope: !7109)
!7161 = !DILocation(line: 3167, column: 2, scope: !7109)
!7162 = !DILocation(line: 3168, column: 25, scope: !7109)
!7163 = !DILocation(line: 3168, column: 2, scope: !7109)
!7164 = !DILocation(line: 3169, column: 25, scope: !7109)
!7165 = !DILocation(line: 3169, column: 2, scope: !7109)
!7166 = !DILocation(line: 3170, column: 25, scope: !7109)
!7167 = !DILocation(line: 3170, column: 2, scope: !7109)
!7168 = !DILocation(line: 3171, column: 25, scope: !7109)
!7169 = !DILocation(line: 3171, column: 2, scope: !7109)
!7170 = !DILocation(line: 3172, column: 25, scope: !7109)
!7171 = !DILocation(line: 3172, column: 2, scope: !7109)
!7172 = !DILocation(line: 3173, column: 25, scope: !7109)
!7173 = !DILocation(line: 3173, column: 2, scope: !7109)
!7174 = !DILocation(line: 3174, column: 25, scope: !7109)
!7175 = !DILocation(line: 3174, column: 2, scope: !7109)
!7176 = !DILocation(line: 3175, column: 25, scope: !7109)
!7177 = !DILocation(line: 3175, column: 2, scope: !7109)
!7178 = !DILocation(line: 3177, column: 22, scope: !7109)
!7179 = !DILocation(line: 3177, column: 2, scope: !7109)
!7180 = !DILocation(line: 3178, column: 25, scope: !7109)
!7181 = !DILocation(line: 3178, column: 2, scope: !7109)
!7182 = !DILocation(line: 3180, column: 22, scope: !7109)
!7183 = !DILocation(line: 3180, column: 2, scope: !7109)
!7184 = !DILocation(line: 3181, column: 25, scope: !7109)
!7185 = !DILocation(line: 3181, column: 2, scope: !7109)
!7186 = !DILocation(line: 3183, column: 22, scope: !7109)
!7187 = !DILocation(line: 3183, column: 2, scope: !7109)
!7188 = !DILocation(line: 3184, column: 25, scope: !7109)
!7189 = !DILocation(line: 3184, column: 2, scope: !7109)
!7190 = !DILocation(line: 3188, column: 22, scope: !7109)
!7191 = !DILocation(line: 3188, column: 2, scope: !7109)
!7192 = !DILocation(line: 3189, column: 23, scope: !7109)
!7193 = !DILocation(line: 3189, column: 45, scope: !7109)
!7194 = !DILocation(line: 3189, column: 2, scope: !7109)
!7195 = !DILocation(line: 3191, column: 22, scope: !7109)
!7196 = !DILocation(line: 3191, column: 2, scope: !7109)
!7197 = !DILocation(line: 3192, column: 23, scope: !7109)
!7198 = !DILocation(line: 3192, column: 45, scope: !7109)
!7199 = !DILocation(line: 3192, column: 2, scope: !7109)
!7200 = !DILocation(line: 3194, column: 38, scope: !7109)
!7201 = !DILocation(line: 3194, column: 44, scope: !7109)
!7202 = !DILocation(line: 3194, column: 2, scope: !7109)
!7203 = !DILocation(line: 3196, column: 22, scope: !7109)
!7204 = !DILocation(line: 3196, column: 2, scope: !7109)
!7205 = !DILocation(line: 3198, column: 22, scope: !7109)
!7206 = !DILocation(line: 3198, column: 2, scope: !7109)
!7207 = !DILocation(line: 3200, column: 22, scope: !7109)
!7208 = !DILocation(line: 3200, column: 2, scope: !7109)
!7209 = !DILocation(line: 3201, column: 2, scope: !7109)
!7210 = !DILocation(line: 3201, column: 8, scope: !7109)
!7211 = !DILocation(line: 3201, column: 14, scope: !7109)
!7212 = !DILocation(line: 3202, column: 2, scope: !7109)
!7213 = distinct !DISubprogram(name: "cxd2841er_sleep_tc_to_active_c", scope: !3, file: !3, line: 3205, type: !4264, scopeLine: 3207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!7214 = !DILocalVariable(name: "priv", arg: 1, scope: !7213, file: !3, line: 3205, type: !4266)
!7215 = !DILocation(line: 3205, column: 66, scope: !7213)
!7216 = !DILocalVariable(name: "bandwidth", arg: 2, scope: !7213, file: !3, line: 3206, type: !326)
!7217 = !DILocation(line: 3206, column: 12, scope: !7213)
!7218 = !DILocalVariable(name: "data", scope: !7213, file: !3, line: 3208, type: !6526)
!7219 = !DILocation(line: 3208, column: 5, scope: !7213)
!7220 = !DILocation(line: 3211, column: 30, scope: !7213)
!7221 = !DILocation(line: 3211, column: 2, scope: !7213)
!7222 = !DILocation(line: 3213, column: 22, scope: !7213)
!7223 = !DILocation(line: 3213, column: 2, scope: !7213)
!7224 = !DILocation(line: 3215, column: 22, scope: !7213)
!7225 = !DILocation(line: 3215, column: 2, scope: !7213)
!7226 = !DILocation(line: 3217, column: 22, scope: !7213)
!7227 = !DILocation(line: 3217, column: 2, scope: !7213)
!7228 = !DILocation(line: 3219, column: 22, scope: !7213)
!7229 = !DILocation(line: 3219, column: 2, scope: !7213)
!7230 = !DILocation(line: 3221, column: 22, scope: !7213)
!7231 = !DILocation(line: 3221, column: 2, scope: !7213)
!7232 = !DILocation(line: 3222, column: 22, scope: !7213)
!7233 = !DILocation(line: 3222, column: 2, scope: !7213)
!7234 = !DILocation(line: 3224, column: 22, scope: !7213)
!7235 = !DILocation(line: 3224, column: 2, scope: !7213)
!7236 = !DILocation(line: 3226, column: 22, scope: !7213)
!7237 = !DILocation(line: 3226, column: 2, scope: !7213)
!7238 = !DILocation(line: 3228, column: 23, scope: !7213)
!7239 = !DILocation(line: 3228, column: 45, scope: !7213)
!7240 = !DILocation(line: 3228, column: 2, scope: !7213)
!7241 = !DILocation(line: 3230, column: 22, scope: !7213)
!7242 = !DILocation(line: 3230, column: 2, scope: !7213)
!7243 = !DILocation(line: 3232, column: 22, scope: !7213)
!7244 = !DILocation(line: 3232, column: 2, scope: !7213)
!7245 = !DILocation(line: 3234, column: 25, scope: !7213)
!7246 = !DILocation(line: 3234, column: 2, scope: !7213)
!7247 = !DILocation(line: 3236, column: 22, scope: !7213)
!7248 = !DILocation(line: 3236, column: 2, scope: !7213)
!7249 = !DILocation(line: 3238, column: 22, scope: !7213)
!7250 = !DILocation(line: 3238, column: 2, scope: !7213)
!7251 = !DILocation(line: 3240, column: 22, scope: !7213)
!7252 = !DILocation(line: 3240, column: 2, scope: !7213)
!7253 = !DILocation(line: 3242, column: 25, scope: !7213)
!7254 = !DILocation(line: 3243, column: 5, scope: !7213)
!7255 = !DILocation(line: 3243, column: 11, scope: !7213)
!7256 = !DILocation(line: 3243, column: 17, scope: !7213)
!7257 = !DILocation(line: 3243, column: 4, scope: !7213)
!7258 = !DILocation(line: 3243, column: 3, scope: !7213)
!7259 = !DILocation(line: 3242, column: 2, scope: !7213)
!7260 = !DILocation(line: 3245, column: 22, scope: !7213)
!7261 = !DILocation(line: 3245, column: 2, scope: !7213)
!7262 = !DILocation(line: 3247, column: 25, scope: !7213)
!7263 = !DILocation(line: 3247, column: 2, scope: !7213)
!7264 = !DILocation(line: 3249, column: 22, scope: !7213)
!7265 = !DILocation(line: 3249, column: 2, scope: !7213)
!7266 = !DILocation(line: 3251, column: 25, scope: !7213)
!7267 = !DILocation(line: 3251, column: 2, scope: !7213)
!7268 = !DILocation(line: 3252, column: 25, scope: !7213)
!7269 = !DILocation(line: 3252, column: 2, scope: !7213)
!7270 = !DILocation(line: 3254, column: 38, scope: !7213)
!7271 = !DILocation(line: 3254, column: 44, scope: !7213)
!7272 = !DILocation(line: 3254, column: 2, scope: !7213)
!7273 = !DILocation(line: 3256, column: 22, scope: !7213)
!7274 = !DILocation(line: 3256, column: 2, scope: !7213)
!7275 = !DILocation(line: 3258, column: 22, scope: !7213)
!7276 = !DILocation(line: 3258, column: 2, scope: !7213)
!7277 = !DILocation(line: 3260, column: 22, scope: !7213)
!7278 = !DILocation(line: 3260, column: 2, scope: !7213)
!7279 = !DILocation(line: 3261, column: 2, scope: !7213)
!7280 = !DILocation(line: 3261, column: 8, scope: !7213)
!7281 = !DILocation(line: 3261, column: 14, scope: !7213)
!7282 = !DILocation(line: 3262, column: 2, scope: !7213)
!7283 = distinct !DISubprogram(name: "cxd2841er_tune_done", scope: !3, file: !3, line: 885, type: !5870, scopeLine: 886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!7284 = !DILocalVariable(name: "priv", arg: 1, scope: !7283, file: !3, line: 885, type: !4266)
!7285 = !DILocation(line: 885, column: 55, scope: !7283)
!7286 = !DILocation(line: 889, column: 22, scope: !7283)
!7287 = !DILocation(line: 889, column: 2, scope: !7283)
!7288 = !DILocation(line: 891, column: 22, scope: !7283)
!7289 = !DILocation(line: 891, column: 2, scope: !7283)
!7290 = !DILocation(line: 893, column: 22, scope: !7283)
!7291 = !DILocation(line: 893, column: 2, scope: !7283)
!7292 = !DILocation(line: 894, column: 2, scope: !7283)
!7293 = distinct !DISubprogram(name: "cxd2841er_set_ts_clock_mode", scope: !3, file: !3, line: 898, type: !7294, scopeLine: 900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!7294 = !DISubroutineType(types: !7295)
!7295 = !{null, !4266, !332}
!7296 = !DILocalVariable(name: "priv", arg: 1, scope: !7293, file: !3, line: 898, type: !4266)
!7297 = !DILocation(line: 898, column: 64, scope: !7293)
!7298 = !DILocalVariable(name: "system", arg: 2, scope: !7293, file: !3, line: 899, type: !332)
!7299 = !DILocation(line: 899, column: 9, scope: !7293)
!7300 = !DILocalVariable(name: "serial_ts", scope: !7293, file: !3, line: 901, type: !332)
!7301 = !DILocation(line: 901, column: 5, scope: !7293)
!7302 = !DILocalVariable(name: "ts_rate_ctrl_off", scope: !7293, file: !3, line: 901, type: !332)
!7303 = !DILocation(line: 901, column: 16, scope: !7293)
!7304 = !DILocalVariable(name: "ts_in_off", scope: !7293, file: !3, line: 901, type: !332)
!7305 = !DILocation(line: 901, column: 34, scope: !7293)
!7306 = !DILocation(line: 905, column: 22, scope: !7293)
!7307 = !DILocation(line: 905, column: 2, scope: !7293)
!7308 = !DILocation(line: 906, column: 21, scope: !7293)
!7309 = !DILocation(line: 906, column: 2, scope: !7293)
!7310 = !DILocation(line: 907, column: 21, scope: !7293)
!7311 = !DILocation(line: 907, column: 2, scope: !7293)
!7312 = !DILocation(line: 908, column: 21, scope: !7293)
!7313 = !DILocation(line: 908, column: 2, scope: !7293)
!7314 = !DILocation(line: 916, column: 25, scope: !7293)
!7315 = !DILocation(line: 917, column: 5, scope: !7293)
!7316 = !DILocation(line: 917, column: 11, scope: !7293)
!7317 = !DILocation(line: 917, column: 17, scope: !7293)
!7318 = !DILocation(line: 917, column: 4, scope: !7293)
!7319 = !DILocation(line: 917, column: 3, scope: !7293)
!7320 = !DILocation(line: 916, column: 2, scope: !7293)
!7321 = !DILocation(line: 922, column: 25, scope: !7293)
!7322 = !DILocation(line: 923, column: 5, scope: !7293)
!7323 = !DILocation(line: 923, column: 11, scope: !7293)
!7324 = !DILocation(line: 923, column: 17, scope: !7293)
!7325 = !DILocation(line: 923, column: 4, scope: !7293)
!7326 = !DILocation(line: 923, column: 3, scope: !7293)
!7327 = !DILocation(line: 922, column: 2, scope: !7293)
!7328 = !DILocation(line: 928, column: 22, scope: !7293)
!7329 = !DILocation(line: 928, column: 2, scope: !7293)
!7330 = !DILocation(line: 934, column: 25, scope: !7293)
!7331 = !DILocation(line: 934, column: 2, scope: !7293)
!7332 = !DILocation(line: 939, column: 25, scope: !7293)
!7333 = !DILocation(line: 940, column: 5, scope: !7293)
!7334 = !DILocation(line: 940, column: 11, scope: !7293)
!7335 = !DILocation(line: 940, column: 17, scope: !7293)
!7336 = !DILocation(line: 940, column: 4, scope: !7293)
!7337 = !DILocation(line: 940, column: 3, scope: !7293)
!7338 = !DILocation(line: 939, column: 2, scope: !7293)
!7339 = !DILocation(line: 946, column: 25, scope: !7293)
!7340 = !DILocation(line: 946, column: 2, scope: !7293)
!7341 = !DILocation(line: 948, column: 6, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7293, file: !3, line: 948, column: 6)
!7343 = !DILocation(line: 948, column: 13, scope: !7342)
!7344 = !DILocation(line: 948, column: 6, scope: !7293)
!7345 = !DILocation(line: 950, column: 23, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 948, column: 26)
!7347 = !DILocation(line: 950, column: 3, scope: !7346)
!7348 = !DILocation(line: 951, column: 26, scope: !7346)
!7349 = !DILocation(line: 951, column: 3, scope: !7346)
!7350 = !DILocation(line: 952, column: 2, scope: !7346)
!7351 = !DILocation(line: 952, column: 13, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 952, column: 13)
!7353 = !DILocation(line: 952, column: 20, scope: !7352)
!7354 = !DILocation(line: 952, column: 13, scope: !7342)
!7355 = !DILocation(line: 954, column: 23, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 952, column: 41)
!7357 = !DILocation(line: 954, column: 3, scope: !7356)
!7358 = !DILocation(line: 955, column: 26, scope: !7356)
!7359 = !DILocation(line: 955, column: 3, scope: !7356)
!7360 = !DILocation(line: 956, column: 2, scope: !7356)
!7361 = !DILocation(line: 957, column: 1, scope: !7293)
!7362 = !DILocalVariable(name: "priv", arg: 1, scope: !4263, file: !3, line: 2417, type: !4266)
!7363 = !DILocation(line: 2417, column: 26, scope: !4263)
!7364 = !DILocalVariable(name: "bandwidth", arg: 2, scope: !4263, file: !3, line: 2417, type: !326)
!7365 = !DILocation(line: 2417, column: 36, scope: !4263)
!7366 = !DILocalVariable(name: "data", scope: !4263, file: !3, line: 2419, type: !6903)
!7367 = !DILocation(line: 2419, column: 5, scope: !4263)
!7368 = !DILocalVariable(name: "iffreq", scope: !4263, file: !3, line: 2420, type: !326)
!7369 = !DILocation(line: 2420, column: 6, scope: !4263)
!7370 = !DILocalVariable(name: "ifhz", scope: !4263, file: !3, line: 2420, type: !326)
!7371 = !DILocation(line: 2420, column: 14, scope: !4263)
!7372 = !DILocation(line: 2480, column: 22, scope: !4263)
!7373 = !DILocation(line: 2480, column: 2, scope: !4263)
!7374 = !DILocation(line: 2482, column: 2, scope: !4263)
!7375 = !DILocation(line: 2482, column: 10, scope: !4263)
!7376 = !DILocation(line: 2483, column: 2, scope: !4263)
!7377 = !DILocation(line: 2483, column: 10, scope: !4263)
!7378 = !DILocation(line: 2484, column: 23, scope: !4263)
!7379 = !DILocation(line: 2484, column: 45, scope: !4263)
!7380 = !DILocation(line: 2484, column: 2, scope: !4263)
!7381 = !DILocation(line: 2487, column: 22, scope: !4263)
!7382 = !DILocation(line: 2487, column: 2, scope: !4263)
!7383 = !DILocation(line: 2489, column: 10, scope: !4263)
!7384 = !DILocation(line: 2489, column: 2, scope: !4263)
!7385 = !DILocation(line: 2492, column: 24, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !4263, file: !3, line: 2489, column: 21)
!7387 = !DILocation(line: 2493, column: 26, scope: !7386)
!7388 = !DILocation(line: 2493, column: 32, scope: !7386)
!7389 = !DILocation(line: 2493, column: 11, scope: !7386)
!7390 = !DILocation(line: 2492, column: 3, scope: !7386)
!7391 = !DILocation(line: 2497, column: 7, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 2497, column: 7)
!7393 = !DILocation(line: 2497, column: 13, scope: !7392)
!7394 = !DILocation(line: 2497, column: 19, scope: !7392)
!7395 = !DILocation(line: 2497, column: 7, scope: !7386)
!7396 = !DILocation(line: 2498, column: 25, scope: !7392)
!7397 = !DILocation(line: 2499, column: 22, scope: !7392)
!7398 = !DILocation(line: 2499, column: 28, scope: !7392)
!7399 = !DILocation(line: 2499, column: 11, scope: !7392)
!7400 = !DILocation(line: 2498, column: 4, scope: !7392)
!7401 = !DILocation(line: 2501, column: 30, scope: !7386)
!7402 = !DILocation(line: 2501, column: 10, scope: !7386)
!7403 = !DILocation(line: 2501, column: 8, scope: !7386)
!7404 = !DILocation(line: 2502, column: 39, scope: !7386)
!7405 = !DILocation(line: 2502, column: 45, scope: !7386)
!7406 = !DILocation(line: 2502, column: 51, scope: !7386)
!7407 = !DILocation(line: 2502, column: 12, scope: !7386)
!7408 = !DILocation(line: 2502, column: 10, scope: !7386)
!7409 = !DILocation(line: 2503, column: 20, scope: !7386)
!7410 = !DILocation(line: 2503, column: 27, scope: !7386)
!7411 = !DILocation(line: 2503, column: 34, scope: !7386)
!7412 = !DILocation(line: 2503, column: 13, scope: !7386)
!7413 = !DILocation(line: 2503, column: 3, scope: !7386)
!7414 = !DILocation(line: 2503, column: 11, scope: !7386)
!7415 = !DILocation(line: 2504, column: 19, scope: !7386)
!7416 = !DILocation(line: 2504, column: 26, scope: !7386)
!7417 = !DILocation(line: 2504, column: 32, scope: !7386)
!7418 = !DILocation(line: 2504, column: 13, scope: !7386)
!7419 = !DILocation(line: 2504, column: 3, scope: !7386)
!7420 = !DILocation(line: 2504, column: 11, scope: !7386)
!7421 = !DILocation(line: 2505, column: 18, scope: !7386)
!7422 = !DILocation(line: 2505, column: 25, scope: !7386)
!7423 = !DILocation(line: 2505, column: 13, scope: !7386)
!7424 = !DILocation(line: 2505, column: 3, scope: !7386)
!7425 = !DILocation(line: 2505, column: 11, scope: !7386)
!7426 = !DILocation(line: 2506, column: 24, scope: !7386)
!7427 = !DILocation(line: 2506, column: 46, scope: !7386)
!7428 = !DILocation(line: 2506, column: 3, scope: !7386)
!7429 = !DILocation(line: 2509, column: 4, scope: !7386)
!7430 = !DILocation(line: 2508, column: 3, scope: !7386)
!7431 = !DILocation(line: 2512, column: 7, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 2512, column: 7)
!7433 = !DILocation(line: 2512, column: 13, scope: !7432)
!7434 = !DILocation(line: 2512, column: 18, scope: !7432)
!7435 = !DILocation(line: 2512, column: 7, scope: !7386)
!7436 = !DILocation(line: 2513, column: 4, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 2512, column: 38)
!7438 = !DILocation(line: 2513, column: 12, scope: !7437)
!7439 = !DILocation(line: 2514, column: 4, scope: !7437)
!7440 = !DILocation(line: 2514, column: 12, scope: !7437)
!7441 = !DILocation(line: 2515, column: 3, scope: !7437)
!7442 = !DILocation(line: 2516, column: 4, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7432, file: !3, line: 2515, column: 10)
!7444 = !DILocation(line: 2516, column: 12, scope: !7443)
!7445 = !DILocation(line: 2517, column: 4, scope: !7443)
!7446 = !DILocation(line: 2517, column: 12, scope: !7443)
!7447 = !DILocation(line: 2519, column: 24, scope: !7386)
!7448 = !DILocation(line: 2519, column: 46, scope: !7386)
!7449 = !DILocation(line: 2519, column: 3, scope: !7386)
!7450 = !DILocation(line: 2522, column: 3, scope: !7386)
!7451 = !DILocation(line: 2522, column: 11, scope: !7386)
!7452 = !DILocation(line: 2523, column: 3, scope: !7386)
!7453 = !DILocation(line: 2523, column: 11, scope: !7386)
!7454 = !DILocation(line: 2524, column: 23, scope: !7386)
!7455 = !DILocation(line: 2524, column: 3, scope: !7386)
!7456 = !DILocation(line: 2525, column: 24, scope: !7386)
!7457 = !DILocation(line: 2525, column: 46, scope: !7386)
!7458 = !DILocation(line: 2525, column: 3, scope: !7386)
!7459 = !DILocation(line: 2526, column: 3, scope: !7386)
!7460 = !DILocation(line: 2529, column: 24, scope: !7386)
!7461 = !DILocation(line: 2530, column: 26, scope: !7386)
!7462 = !DILocation(line: 2530, column: 32, scope: !7386)
!7463 = !DILocation(line: 2530, column: 11, scope: !7386)
!7464 = !DILocation(line: 2529, column: 3, scope: !7386)
!7465 = !DILocation(line: 2534, column: 7, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 2534, column: 7)
!7467 = !DILocation(line: 2534, column: 13, scope: !7466)
!7468 = !DILocation(line: 2534, column: 19, scope: !7466)
!7469 = !DILocation(line: 2534, column: 7, scope: !7386)
!7470 = !DILocation(line: 2535, column: 25, scope: !7466)
!7471 = !DILocation(line: 2536, column: 22, scope: !7466)
!7472 = !DILocation(line: 2536, column: 28, scope: !7466)
!7473 = !DILocation(line: 2536, column: 11, scope: !7466)
!7474 = !DILocation(line: 2535, column: 4, scope: !7466)
!7475 = !DILocation(line: 2538, column: 30, scope: !7386)
!7476 = !DILocation(line: 2538, column: 10, scope: !7386)
!7477 = !DILocation(line: 2538, column: 8, scope: !7386)
!7478 = !DILocation(line: 2539, column: 39, scope: !7386)
!7479 = !DILocation(line: 2539, column: 45, scope: !7386)
!7480 = !DILocation(line: 2539, column: 51, scope: !7386)
!7481 = !DILocation(line: 2539, column: 12, scope: !7386)
!7482 = !DILocation(line: 2539, column: 10, scope: !7386)
!7483 = !DILocation(line: 2540, column: 20, scope: !7386)
!7484 = !DILocation(line: 2540, column: 27, scope: !7386)
!7485 = !DILocation(line: 2540, column: 34, scope: !7386)
!7486 = !DILocation(line: 2540, column: 13, scope: !7386)
!7487 = !DILocation(line: 2540, column: 3, scope: !7386)
!7488 = !DILocation(line: 2540, column: 11, scope: !7386)
!7489 = !DILocation(line: 2541, column: 19, scope: !7386)
!7490 = !DILocation(line: 2541, column: 26, scope: !7386)
!7491 = !DILocation(line: 2541, column: 32, scope: !7386)
!7492 = !DILocation(line: 2541, column: 13, scope: !7386)
!7493 = !DILocation(line: 2541, column: 3, scope: !7386)
!7494 = !DILocation(line: 2541, column: 11, scope: !7386)
!7495 = !DILocation(line: 2542, column: 18, scope: !7386)
!7496 = !DILocation(line: 2542, column: 25, scope: !7386)
!7497 = !DILocation(line: 2542, column: 13, scope: !7386)
!7498 = !DILocation(line: 2542, column: 3, scope: !7386)
!7499 = !DILocation(line: 2542, column: 11, scope: !7386)
!7500 = !DILocation(line: 2543, column: 24, scope: !7386)
!7501 = !DILocation(line: 2543, column: 46, scope: !7386)
!7502 = !DILocation(line: 2543, column: 3, scope: !7386)
!7503 = !DILocation(line: 2546, column: 4, scope: !7386)
!7504 = !DILocation(line: 2545, column: 3, scope: !7386)
!7505 = !DILocation(line: 2549, column: 7, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 2549, column: 7)
!7507 = !DILocation(line: 2549, column: 13, scope: !7506)
!7508 = !DILocation(line: 2549, column: 18, scope: !7506)
!7509 = !DILocation(line: 2549, column: 7, scope: !7386)
!7510 = !DILocation(line: 2550, column: 4, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 2549, column: 38)
!7512 = !DILocation(line: 2550, column: 12, scope: !7511)
!7513 = !DILocation(line: 2551, column: 4, scope: !7511)
!7514 = !DILocation(line: 2551, column: 12, scope: !7511)
!7515 = !DILocation(line: 2552, column: 3, scope: !7511)
!7516 = !DILocation(line: 2553, column: 4, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 2552, column: 10)
!7518 = !DILocation(line: 2553, column: 12, scope: !7517)
!7519 = !DILocation(line: 2554, column: 4, scope: !7517)
!7520 = !DILocation(line: 2554, column: 12, scope: !7517)
!7521 = !DILocation(line: 2556, column: 24, scope: !7386)
!7522 = !DILocation(line: 2556, column: 46, scope: !7386)
!7523 = !DILocation(line: 2556, column: 3, scope: !7386)
!7524 = !DILocation(line: 2559, column: 3, scope: !7386)
!7525 = !DILocation(line: 2559, column: 11, scope: !7386)
!7526 = !DILocation(line: 2560, column: 3, scope: !7386)
!7527 = !DILocation(line: 2560, column: 11, scope: !7386)
!7528 = !DILocation(line: 2561, column: 23, scope: !7386)
!7529 = !DILocation(line: 2561, column: 3, scope: !7386)
!7530 = !DILocation(line: 2562, column: 24, scope: !7386)
!7531 = !DILocation(line: 2562, column: 46, scope: !7386)
!7532 = !DILocation(line: 2562, column: 3, scope: !7386)
!7533 = !DILocation(line: 2563, column: 3, scope: !7386)
!7534 = !DILocation(line: 2566, column: 24, scope: !7386)
!7535 = !DILocation(line: 2567, column: 26, scope: !7386)
!7536 = !DILocation(line: 2567, column: 32, scope: !7386)
!7537 = !DILocation(line: 2567, column: 11, scope: !7386)
!7538 = !DILocation(line: 2566, column: 3, scope: !7386)
!7539 = !DILocation(line: 2571, column: 7, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 2571, column: 7)
!7541 = !DILocation(line: 2571, column: 13, scope: !7540)
!7542 = !DILocation(line: 2571, column: 19, scope: !7540)
!7543 = !DILocation(line: 2571, column: 7, scope: !7386)
!7544 = !DILocation(line: 2572, column: 25, scope: !7540)
!7545 = !DILocation(line: 2573, column: 22, scope: !7540)
!7546 = !DILocation(line: 2573, column: 28, scope: !7540)
!7547 = !DILocation(line: 2573, column: 11, scope: !7540)
!7548 = !DILocation(line: 2572, column: 4, scope: !7540)
!7549 = !DILocation(line: 2575, column: 30, scope: !7386)
!7550 = !DILocation(line: 2575, column: 10, scope: !7386)
!7551 = !DILocation(line: 2575, column: 8, scope: !7386)
!7552 = !DILocation(line: 2576, column: 39, scope: !7386)
!7553 = !DILocation(line: 2576, column: 45, scope: !7386)
!7554 = !DILocation(line: 2576, column: 51, scope: !7386)
!7555 = !DILocation(line: 2576, column: 12, scope: !7386)
!7556 = !DILocation(line: 2576, column: 10, scope: !7386)
!7557 = !DILocation(line: 2577, column: 20, scope: !7386)
!7558 = !DILocation(line: 2577, column: 27, scope: !7386)
!7559 = !DILocation(line: 2577, column: 34, scope: !7386)
!7560 = !DILocation(line: 2577, column: 13, scope: !7386)
!7561 = !DILocation(line: 2577, column: 3, scope: !7386)
!7562 = !DILocation(line: 2577, column: 11, scope: !7386)
!7563 = !DILocation(line: 2578, column: 19, scope: !7386)
!7564 = !DILocation(line: 2578, column: 26, scope: !7386)
!7565 = !DILocation(line: 2578, column: 32, scope: !7386)
!7566 = !DILocation(line: 2578, column: 13, scope: !7386)
!7567 = !DILocation(line: 2578, column: 3, scope: !7386)
!7568 = !DILocation(line: 2578, column: 11, scope: !7386)
!7569 = !DILocation(line: 2579, column: 18, scope: !7386)
!7570 = !DILocation(line: 2579, column: 25, scope: !7386)
!7571 = !DILocation(line: 2579, column: 13, scope: !7386)
!7572 = !DILocation(line: 2579, column: 3, scope: !7386)
!7573 = !DILocation(line: 2579, column: 11, scope: !7386)
!7574 = !DILocation(line: 2580, column: 24, scope: !7386)
!7575 = !DILocation(line: 2580, column: 46, scope: !7386)
!7576 = !DILocation(line: 2580, column: 3, scope: !7386)
!7577 = !DILocation(line: 2583, column: 4, scope: !7386)
!7578 = !DILocation(line: 2582, column: 3, scope: !7386)
!7579 = !DILocation(line: 2586, column: 7, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 2586, column: 7)
!7581 = !DILocation(line: 2586, column: 13, scope: !7580)
!7582 = !DILocation(line: 2586, column: 18, scope: !7580)
!7583 = !DILocation(line: 2586, column: 7, scope: !7386)
!7584 = !DILocation(line: 2587, column: 4, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 2586, column: 38)
!7586 = !DILocation(line: 2587, column: 12, scope: !7585)
!7587 = !DILocation(line: 2588, column: 4, scope: !7585)
!7588 = !DILocation(line: 2588, column: 12, scope: !7585)
!7589 = !DILocation(line: 2589, column: 3, scope: !7585)
!7590 = !DILocation(line: 2590, column: 4, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 2589, column: 10)
!7592 = !DILocation(line: 2590, column: 12, scope: !7591)
!7593 = !DILocation(line: 2591, column: 4, scope: !7591)
!7594 = !DILocation(line: 2591, column: 12, scope: !7591)
!7595 = !DILocation(line: 2593, column: 24, scope: !7386)
!7596 = !DILocation(line: 2593, column: 46, scope: !7386)
!7597 = !DILocation(line: 2593, column: 3, scope: !7386)
!7598 = !DILocation(line: 2596, column: 3, scope: !7386)
!7599 = !DILocation(line: 2596, column: 11, scope: !7386)
!7600 = !DILocation(line: 2597, column: 3, scope: !7386)
!7601 = !DILocation(line: 2597, column: 11, scope: !7386)
!7602 = !DILocation(line: 2598, column: 23, scope: !7386)
!7603 = !DILocation(line: 2598, column: 3, scope: !7386)
!7604 = !DILocation(line: 2599, column: 24, scope: !7386)
!7605 = !DILocation(line: 2599, column: 46, scope: !7386)
!7606 = !DILocation(line: 2599, column: 3, scope: !7386)
!7607 = !DILocation(line: 2600, column: 3, scope: !7386)
!7608 = !DILocation(line: 2603, column: 24, scope: !7386)
!7609 = !DILocation(line: 2604, column: 26, scope: !7386)
!7610 = !DILocation(line: 2604, column: 32, scope: !7386)
!7611 = !DILocation(line: 2604, column: 11, scope: !7386)
!7612 = !DILocation(line: 2603, column: 3, scope: !7386)
!7613 = !DILocation(line: 2608, column: 7, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 2608, column: 7)
!7615 = !DILocation(line: 2608, column: 13, scope: !7614)
!7616 = !DILocation(line: 2608, column: 19, scope: !7614)
!7617 = !DILocation(line: 2608, column: 7, scope: !7386)
!7618 = !DILocation(line: 2609, column: 25, scope: !7614)
!7619 = !DILocation(line: 2610, column: 22, scope: !7614)
!7620 = !DILocation(line: 2610, column: 28, scope: !7614)
!7621 = !DILocation(line: 2610, column: 11, scope: !7614)
!7622 = !DILocation(line: 2609, column: 4, scope: !7614)
!7623 = !DILocation(line: 2612, column: 30, scope: !7386)
!7624 = !DILocation(line: 2612, column: 10, scope: !7386)
!7625 = !DILocation(line: 2612, column: 8, scope: !7386)
!7626 = !DILocation(line: 2613, column: 39, scope: !7386)
!7627 = !DILocation(line: 2613, column: 45, scope: !7386)
!7628 = !DILocation(line: 2613, column: 51, scope: !7386)
!7629 = !DILocation(line: 2613, column: 12, scope: !7386)
!7630 = !DILocation(line: 2613, column: 10, scope: !7386)
!7631 = !DILocation(line: 2614, column: 20, scope: !7386)
!7632 = !DILocation(line: 2614, column: 27, scope: !7386)
!7633 = !DILocation(line: 2614, column: 34, scope: !7386)
!7634 = !DILocation(line: 2614, column: 13, scope: !7386)
!7635 = !DILocation(line: 2614, column: 3, scope: !7386)
!7636 = !DILocation(line: 2614, column: 11, scope: !7386)
!7637 = !DILocation(line: 2615, column: 19, scope: !7386)
!7638 = !DILocation(line: 2615, column: 26, scope: !7386)
!7639 = !DILocation(line: 2615, column: 32, scope: !7386)
!7640 = !DILocation(line: 2615, column: 13, scope: !7386)
!7641 = !DILocation(line: 2615, column: 3, scope: !7386)
!7642 = !DILocation(line: 2615, column: 11, scope: !7386)
!7643 = !DILocation(line: 2616, column: 18, scope: !7386)
!7644 = !DILocation(line: 2616, column: 25, scope: !7386)
!7645 = !DILocation(line: 2616, column: 13, scope: !7386)
!7646 = !DILocation(line: 2616, column: 3, scope: !7386)
!7647 = !DILocation(line: 2616, column: 11, scope: !7386)
!7648 = !DILocation(line: 2617, column: 24, scope: !7386)
!7649 = !DILocation(line: 2617, column: 46, scope: !7386)
!7650 = !DILocation(line: 2617, column: 3, scope: !7386)
!7651 = !DILocation(line: 2620, column: 4, scope: !7386)
!7652 = !DILocation(line: 2619, column: 3, scope: !7386)
!7653 = !DILocation(line: 2623, column: 7, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 2623, column: 7)
!7655 = !DILocation(line: 2623, column: 13, scope: !7654)
!7656 = !DILocation(line: 2623, column: 18, scope: !7654)
!7657 = !DILocation(line: 2623, column: 7, scope: !7386)
!7658 = !DILocation(line: 2624, column: 4, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2623, column: 38)
!7660 = !DILocation(line: 2624, column: 12, scope: !7659)
!7661 = !DILocation(line: 2625, column: 4, scope: !7659)
!7662 = !DILocation(line: 2625, column: 12, scope: !7659)
!7663 = !DILocation(line: 2626, column: 3, scope: !7659)
!7664 = !DILocation(line: 2627, column: 4, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 2626, column: 10)
!7666 = !DILocation(line: 2627, column: 12, scope: !7665)
!7667 = !DILocation(line: 2628, column: 4, scope: !7665)
!7668 = !DILocation(line: 2628, column: 12, scope: !7665)
!7669 = !DILocation(line: 2630, column: 24, scope: !7386)
!7670 = !DILocation(line: 2630, column: 46, scope: !7386)
!7671 = !DILocation(line: 2630, column: 3, scope: !7386)
!7672 = !DILocation(line: 2633, column: 3, scope: !7386)
!7673 = !DILocation(line: 2633, column: 11, scope: !7386)
!7674 = !DILocation(line: 2634, column: 3, scope: !7386)
!7675 = !DILocation(line: 2634, column: 11, scope: !7386)
!7676 = !DILocation(line: 2635, column: 23, scope: !7386)
!7677 = !DILocation(line: 2635, column: 3, scope: !7386)
!7678 = !DILocation(line: 2636, column: 24, scope: !7386)
!7679 = !DILocation(line: 2636, column: 46, scope: !7386)
!7680 = !DILocation(line: 2636, column: 3, scope: !7386)
!7681 = !DILocation(line: 2637, column: 3, scope: !7386)
!7682 = !DILocation(line: 2640, column: 2, scope: !4263)
!7683 = distinct !DISubprogram(name: "cxd2841er_get_if_hz", scope: !3, file: !3, line: 327, type: !4264, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!7684 = !DILocalVariable(name: "priv", arg: 1, scope: !7683, file: !3, line: 327, type: !4266)
!7685 = !DILocation(line: 327, column: 55, scope: !7683)
!7686 = !DILocalVariable(name: "def_hz", arg: 2, scope: !7683, file: !3, line: 327, type: !326)
!7687 = !DILocation(line: 327, column: 65, scope: !7683)
!7688 = !DILocalVariable(name: "hz", scope: !7683, file: !3, line: 329, type: !326)
!7689 = !DILocation(line: 329, column: 6, scope: !7683)
!7690 = !DILocation(line: 331, column: 6, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7683, file: !3, line: 331, column: 6)
!7692 = !DILocation(line: 331, column: 12, scope: !7691)
!7693 = !DILocation(line: 331, column: 21, scope: !7691)
!7694 = !DILocation(line: 331, column: 25, scope: !7691)
!7695 = !DILocation(line: 331, column: 35, scope: !7691)
!7696 = !DILocation(line: 332, column: 4, scope: !7691)
!7697 = !DILocation(line: 332, column: 8, scope: !7691)
!7698 = !DILocation(line: 332, column: 14, scope: !7691)
!7699 = !DILocation(line: 332, column: 20, scope: !7691)
!7700 = !DILocation(line: 331, column: 6, scope: !7683)
!7701 = !DILocation(line: 333, column: 3, scope: !7691)
!7702 = !DILocation(line: 333, column: 9, scope: !7691)
!7703 = !DILocation(line: 333, column: 18, scope: !7691)
!7704 = !DILocation(line: 333, column: 22, scope: !7691)
!7705 = !DILocation(line: 333, column: 32, scope: !7691)
!7706 = !DILocation(line: 334, column: 5, scope: !7691)
!7707 = !DILocation(line: 334, column: 11, scope: !7691)
!7708 = !DILocation(line: 336, column: 8, scope: !7691)
!7709 = !DILocation(line: 336, column: 6, scope: !7691)
!7710 = !DILocation(line: 338, column: 9, scope: !7683)
!7711 = !DILocation(line: 338, column: 2, scope: !7683)
!7712 = distinct !DISubprogram(name: "cxd2841er_calc_iffreq_xtal", scope: !3, file: !3, line: 312, type: !7713, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!7713 = !DISubroutineType(types: !7714)
!7714 = !{!326, !283, !326}
!7715 = !DILocalVariable(name: "xtal", arg: 1, scope: !7712, file: !3, line: 312, type: !283)
!7716 = !DILocation(line: 312, column: 59, scope: !7712)
!7717 = !DILocalVariable(name: "ifhz", arg: 2, scope: !7712, file: !3, line: 312, type: !326)
!7718 = !DILocation(line: 312, column: 69, scope: !7712)
!7719 = !DILocalVariable(name: "tmp", scope: !7712, file: !3, line: 314, type: !335)
!7720 = !DILocation(line: 314, column: 6, scope: !7712)
!7721 = !DILocation(line: 316, column: 14, scope: !7712)
!7722 = !DILocation(line: 316, column: 8, scope: !7712)
!7723 = !DILocation(line: 316, column: 19, scope: !7712)
!7724 = !DILocation(line: 316, column: 6, scope: !7712)
!7725 = !DILocalVariable(name: "__base", scope: !7726, file: !3, line: 317, type: !761)
!7726 = distinct !DILexicalBlock(scope: !7712, file: !3, line: 317, column: 2)
!7727 = !DILocation(line: 317, column: 2, scope: !7726)
!7728 = !DILocalVariable(name: "__rem", scope: !7726, file: !3, line: 317, type: !761)
!7729 = !DILocation(line: 319, column: 15, scope: !7712)
!7730 = !DILocation(line: 319, column: 9, scope: !7712)
!7731 = !DILocation(line: 319, column: 2, scope: !7712)
!7732 = distinct !DISubprogram(name: "cxd2841er_dvbs2_set_symbol_rate", scope: !3, file: !3, line: 355, type: !4264, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!7733 = !DILocalVariable(name: "priv", arg: 1, scope: !7732, file: !3, line: 355, type: !4266)
!7734 = !DILocation(line: 355, column: 67, scope: !7732)
!7735 = !DILocalVariable(name: "symbol_rate", arg: 2, scope: !7732, file: !3, line: 356, type: !326)
!7736 = !DILocation(line: 356, column: 13, scope: !7732)
!7737 = !DILocalVariable(name: "reg_value", scope: !7732, file: !3, line: 358, type: !326)
!7738 = !DILocation(line: 358, column: 6, scope: !7732)
!7739 = !DILocalVariable(name: "data", scope: !7732, file: !3, line: 359, type: !6654)
!7740 = !DILocation(line: 359, column: 5, scope: !7732)
!7741 = !DILocalVariable(name: "__x", scope: !7742, file: !3, line: 367, type: !7)
!7742 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 367, column: 14)
!7743 = !DILocation(line: 367, column: 14, scope: !7742)
!7744 = !DILocalVariable(name: "__d", scope: !7742, file: !3, line: 367, type: !331)
!7745 = !DILocation(line: 367, column: 12, scope: !7732)
!7746 = !DILocation(line: 368, column: 7, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 368, column: 6)
!7748 = !DILocation(line: 368, column: 17, scope: !7747)
!7749 = !DILocation(line: 368, column: 23, scope: !7747)
!7750 = !DILocation(line: 368, column: 27, scope: !7747)
!7751 = !DILocation(line: 368, column: 37, scope: !7747)
!7752 = !DILocation(line: 368, column: 6, scope: !7732)
!7753 = !DILocation(line: 369, column: 3, scope: !7754)
!7754 = distinct !DILexicalBlock(scope: !7747, file: !3, line: 368, column: 49)
!7755 = !DILocation(line: 371, column: 3, scope: !7754)
!7756 = !DILocation(line: 373, column: 18, scope: !7732)
!7757 = !DILocation(line: 373, column: 28, scope: !7732)
!7758 = !DILocation(line: 373, column: 35, scope: !7732)
!7759 = !DILocation(line: 373, column: 12, scope: !7732)
!7760 = !DILocation(line: 373, column: 2, scope: !7732)
!7761 = !DILocation(line: 373, column: 10, scope: !7732)
!7762 = !DILocation(line: 374, column: 18, scope: !7732)
!7763 = !DILocation(line: 374, column: 28, scope: !7732)
!7764 = !DILocation(line: 374, column: 35, scope: !7732)
!7765 = !DILocation(line: 374, column: 12, scope: !7732)
!7766 = !DILocation(line: 374, column: 2, scope: !7732)
!7767 = !DILocation(line: 374, column: 10, scope: !7732)
!7768 = !DILocation(line: 375, column: 17, scope: !7732)
!7769 = !DILocation(line: 375, column: 27, scope: !7732)
!7770 = !DILocation(line: 375, column: 12, scope: !7732)
!7771 = !DILocation(line: 375, column: 2, scope: !7732)
!7772 = !DILocation(line: 375, column: 10, scope: !7732)
!7773 = !DILocation(line: 377, column: 22, scope: !7732)
!7774 = !DILocation(line: 377, column: 2, scope: !7732)
!7775 = !DILocation(line: 378, column: 23, scope: !7732)
!7776 = !DILocation(line: 378, column: 45, scope: !7732)
!7777 = !DILocation(line: 378, column: 2, scope: !7732)
!7778 = !DILocation(line: 379, column: 2, scope: !7732)
!7779 = !DILocation(line: 380, column: 1, scope: !7732)
!7780 = !DILocalVariable(name: "priv", arg: 1, scope: !4431, file: !3, line: 2170, type: !4266)
!7781 = !DILocation(line: 2170, column: 72, scope: !4431)
!7782 = !DILocalVariable(name: "bandwidth", arg: 2, scope: !4431, file: !3, line: 2171, type: !326)
!7783 = !DILocation(line: 2171, column: 11, scope: !4431)
!7784 = !DILocalVariable(name: "iffreq", scope: !4431, file: !3, line: 2173, type: !326)
!7785 = !DILocation(line: 2173, column: 6, scope: !4431)
!7786 = !DILocalVariable(name: "ifhz", scope: !4431, file: !3, line: 2173, type: !326)
!7787 = !DILocation(line: 2173, column: 14, scope: !4431)
!7788 = !DILocalVariable(name: "data", scope: !4431, file: !3, line: 2174, type: !6903)
!7789 = !DILocation(line: 2174, column: 5, scope: !4431)
!7790 = !DILocation(line: 2257, column: 22, scope: !4431)
!7791 = !DILocation(line: 2257, column: 2, scope: !4431)
!7792 = !DILocation(line: 2259, column: 10, scope: !4431)
!7793 = !DILocation(line: 2259, column: 2, scope: !4431)
!7794 = !DILocation(line: 2262, column: 24, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !4431, file: !3, line: 2259, column: 21)
!7796 = !DILocation(line: 2263, column: 26, scope: !7795)
!7797 = !DILocation(line: 2263, column: 32, scope: !7795)
!7798 = !DILocation(line: 2263, column: 11, scope: !7795)
!7799 = !DILocation(line: 2262, column: 3, scope: !7795)
!7800 = !DILocation(line: 2266, column: 23, scope: !7795)
!7801 = !DILocation(line: 2266, column: 3, scope: !7795)
!7802 = !DILocation(line: 2267, column: 26, scope: !7795)
!7803 = !DILocation(line: 2267, column: 3, scope: !7795)
!7804 = !DILocation(line: 2271, column: 23, scope: !7795)
!7805 = !DILocation(line: 2271, column: 3, scope: !7795)
!7806 = !DILocation(line: 2276, column: 7, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2276, column: 7)
!7808 = !DILocation(line: 2276, column: 13, scope: !7807)
!7809 = !DILocation(line: 2276, column: 19, scope: !7807)
!7810 = !DILocation(line: 2276, column: 7, scope: !7795)
!7811 = !DILocation(line: 2277, column: 25, scope: !7807)
!7812 = !DILocation(line: 2278, column: 22, scope: !7807)
!7813 = !DILocation(line: 2278, column: 28, scope: !7807)
!7814 = !DILocation(line: 2278, column: 11, scope: !7807)
!7815 = !DILocation(line: 2277, column: 4, scope: !7807)
!7816 = !DILocation(line: 2280, column: 30, scope: !7795)
!7817 = !DILocation(line: 2280, column: 10, scope: !7795)
!7818 = !DILocation(line: 2280, column: 8, scope: !7795)
!7819 = !DILocation(line: 2281, column: 39, scope: !7795)
!7820 = !DILocation(line: 2281, column: 45, scope: !7795)
!7821 = !DILocation(line: 2281, column: 51, scope: !7795)
!7822 = !DILocation(line: 2281, column: 12, scope: !7795)
!7823 = !DILocation(line: 2281, column: 10, scope: !7795)
!7824 = !DILocation(line: 2282, column: 20, scope: !7795)
!7825 = !DILocation(line: 2282, column: 27, scope: !7795)
!7826 = !DILocation(line: 2282, column: 34, scope: !7795)
!7827 = !DILocation(line: 2282, column: 13, scope: !7795)
!7828 = !DILocation(line: 2282, column: 3, scope: !7795)
!7829 = !DILocation(line: 2282, column: 11, scope: !7795)
!7830 = !DILocation(line: 2283, column: 19, scope: !7795)
!7831 = !DILocation(line: 2283, column: 26, scope: !7795)
!7832 = !DILocation(line: 2283, column: 32, scope: !7795)
!7833 = !DILocation(line: 2283, column: 13, scope: !7795)
!7834 = !DILocation(line: 2283, column: 3, scope: !7795)
!7835 = !DILocation(line: 2283, column: 11, scope: !7795)
!7836 = !DILocation(line: 2284, column: 18, scope: !7795)
!7837 = !DILocation(line: 2284, column: 25, scope: !7795)
!7838 = !DILocation(line: 2284, column: 13, scope: !7795)
!7839 = !DILocation(line: 2284, column: 3, scope: !7795)
!7840 = !DILocation(line: 2284, column: 11, scope: !7795)
!7841 = !DILocation(line: 2285, column: 24, scope: !7795)
!7842 = !DILocation(line: 2285, column: 46, scope: !7795)
!7843 = !DILocation(line: 2285, column: 3, scope: !7795)
!7844 = !DILocation(line: 2288, column: 5, scope: !7795)
!7845 = !DILocation(line: 2287, column: 3, scope: !7795)
!7846 = !DILocation(line: 2289, column: 3, scope: !7795)
!7847 = !DILocation(line: 2292, column: 24, scope: !7795)
!7848 = !DILocation(line: 2293, column: 26, scope: !7795)
!7849 = !DILocation(line: 2293, column: 32, scope: !7795)
!7850 = !DILocation(line: 2293, column: 11, scope: !7795)
!7851 = !DILocation(line: 2292, column: 3, scope: !7795)
!7852 = !DILocation(line: 2296, column: 23, scope: !7795)
!7853 = !DILocation(line: 2296, column: 3, scope: !7795)
!7854 = !DILocation(line: 2297, column: 26, scope: !7795)
!7855 = !DILocation(line: 2297, column: 3, scope: !7795)
!7856 = !DILocation(line: 2301, column: 23, scope: !7795)
!7857 = !DILocation(line: 2301, column: 3, scope: !7795)
!7858 = !DILocation(line: 2306, column: 7, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2306, column: 7)
!7860 = !DILocation(line: 2306, column: 13, scope: !7859)
!7861 = !DILocation(line: 2306, column: 19, scope: !7859)
!7862 = !DILocation(line: 2306, column: 7, scope: !7795)
!7863 = !DILocation(line: 2307, column: 25, scope: !7859)
!7864 = !DILocation(line: 2308, column: 22, scope: !7859)
!7865 = !DILocation(line: 2308, column: 28, scope: !7859)
!7866 = !DILocation(line: 2308, column: 11, scope: !7859)
!7867 = !DILocation(line: 2307, column: 4, scope: !7859)
!7868 = !DILocation(line: 2310, column: 30, scope: !7795)
!7869 = !DILocation(line: 2310, column: 10, scope: !7795)
!7870 = !DILocation(line: 2310, column: 8, scope: !7795)
!7871 = !DILocation(line: 2311, column: 39, scope: !7795)
!7872 = !DILocation(line: 2311, column: 45, scope: !7795)
!7873 = !DILocation(line: 2311, column: 51, scope: !7795)
!7874 = !DILocation(line: 2311, column: 12, scope: !7795)
!7875 = !DILocation(line: 2311, column: 10, scope: !7795)
!7876 = !DILocation(line: 2312, column: 20, scope: !7795)
!7877 = !DILocation(line: 2312, column: 27, scope: !7795)
!7878 = !DILocation(line: 2312, column: 34, scope: !7795)
!7879 = !DILocation(line: 2312, column: 13, scope: !7795)
!7880 = !DILocation(line: 2312, column: 3, scope: !7795)
!7881 = !DILocation(line: 2312, column: 11, scope: !7795)
!7882 = !DILocation(line: 2313, column: 19, scope: !7795)
!7883 = !DILocation(line: 2313, column: 26, scope: !7795)
!7884 = !DILocation(line: 2313, column: 32, scope: !7795)
!7885 = !DILocation(line: 2313, column: 13, scope: !7795)
!7886 = !DILocation(line: 2313, column: 3, scope: !7795)
!7887 = !DILocation(line: 2313, column: 11, scope: !7795)
!7888 = !DILocation(line: 2314, column: 18, scope: !7795)
!7889 = !DILocation(line: 2314, column: 25, scope: !7795)
!7890 = !DILocation(line: 2314, column: 13, scope: !7795)
!7891 = !DILocation(line: 2314, column: 3, scope: !7795)
!7892 = !DILocation(line: 2314, column: 11, scope: !7795)
!7893 = !DILocation(line: 2315, column: 24, scope: !7795)
!7894 = !DILocation(line: 2315, column: 46, scope: !7795)
!7895 = !DILocation(line: 2315, column: 3, scope: !7795)
!7896 = !DILocation(line: 2318, column: 5, scope: !7795)
!7897 = !DILocation(line: 2317, column: 3, scope: !7795)
!7898 = !DILocation(line: 2319, column: 3, scope: !7795)
!7899 = !DILocation(line: 2322, column: 24, scope: !7795)
!7900 = !DILocation(line: 2323, column: 26, scope: !7795)
!7901 = !DILocation(line: 2323, column: 32, scope: !7795)
!7902 = !DILocation(line: 2323, column: 11, scope: !7795)
!7903 = !DILocation(line: 2322, column: 3, scope: !7795)
!7904 = !DILocation(line: 2326, column: 23, scope: !7795)
!7905 = !DILocation(line: 2326, column: 3, scope: !7795)
!7906 = !DILocation(line: 2327, column: 26, scope: !7795)
!7907 = !DILocation(line: 2327, column: 3, scope: !7795)
!7908 = !DILocation(line: 2331, column: 23, scope: !7795)
!7909 = !DILocation(line: 2331, column: 3, scope: !7795)
!7910 = !DILocation(line: 2336, column: 7, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2336, column: 7)
!7912 = !DILocation(line: 2336, column: 13, scope: !7911)
!7913 = !DILocation(line: 2336, column: 19, scope: !7911)
!7914 = !DILocation(line: 2336, column: 7, scope: !7795)
!7915 = !DILocation(line: 2337, column: 25, scope: !7911)
!7916 = !DILocation(line: 2338, column: 22, scope: !7911)
!7917 = !DILocation(line: 2338, column: 28, scope: !7911)
!7918 = !DILocation(line: 2338, column: 11, scope: !7911)
!7919 = !DILocation(line: 2337, column: 4, scope: !7911)
!7920 = !DILocation(line: 2340, column: 30, scope: !7795)
!7921 = !DILocation(line: 2340, column: 10, scope: !7795)
!7922 = !DILocation(line: 2340, column: 8, scope: !7795)
!7923 = !DILocation(line: 2341, column: 39, scope: !7795)
!7924 = !DILocation(line: 2341, column: 45, scope: !7795)
!7925 = !DILocation(line: 2341, column: 51, scope: !7795)
!7926 = !DILocation(line: 2341, column: 12, scope: !7795)
!7927 = !DILocation(line: 2341, column: 10, scope: !7795)
!7928 = !DILocation(line: 2342, column: 20, scope: !7795)
!7929 = !DILocation(line: 2342, column: 27, scope: !7795)
!7930 = !DILocation(line: 2342, column: 34, scope: !7795)
!7931 = !DILocation(line: 2342, column: 13, scope: !7795)
!7932 = !DILocation(line: 2342, column: 3, scope: !7795)
!7933 = !DILocation(line: 2342, column: 11, scope: !7795)
!7934 = !DILocation(line: 2343, column: 19, scope: !7795)
!7935 = !DILocation(line: 2343, column: 26, scope: !7795)
!7936 = !DILocation(line: 2343, column: 32, scope: !7795)
!7937 = !DILocation(line: 2343, column: 13, scope: !7795)
!7938 = !DILocation(line: 2343, column: 3, scope: !7795)
!7939 = !DILocation(line: 2343, column: 11, scope: !7795)
!7940 = !DILocation(line: 2344, column: 18, scope: !7795)
!7941 = !DILocation(line: 2344, column: 25, scope: !7795)
!7942 = !DILocation(line: 2344, column: 13, scope: !7795)
!7943 = !DILocation(line: 2344, column: 3, scope: !7795)
!7944 = !DILocation(line: 2344, column: 11, scope: !7795)
!7945 = !DILocation(line: 2345, column: 24, scope: !7795)
!7946 = !DILocation(line: 2345, column: 46, scope: !7795)
!7947 = !DILocation(line: 2345, column: 3, scope: !7795)
!7948 = !DILocation(line: 2348, column: 5, scope: !7795)
!7949 = !DILocation(line: 2347, column: 3, scope: !7795)
!7950 = !DILocation(line: 2349, column: 3, scope: !7795)
!7951 = !DILocation(line: 2352, column: 24, scope: !7795)
!7952 = !DILocation(line: 2353, column: 26, scope: !7795)
!7953 = !DILocation(line: 2353, column: 32, scope: !7795)
!7954 = !DILocation(line: 2353, column: 11, scope: !7795)
!7955 = !DILocation(line: 2352, column: 3, scope: !7795)
!7956 = !DILocation(line: 2356, column: 23, scope: !7795)
!7957 = !DILocation(line: 2356, column: 3, scope: !7795)
!7958 = !DILocation(line: 2357, column: 26, scope: !7795)
!7959 = !DILocation(line: 2357, column: 3, scope: !7795)
!7960 = !DILocation(line: 2361, column: 23, scope: !7795)
!7961 = !DILocation(line: 2361, column: 3, scope: !7795)
!7962 = !DILocation(line: 2366, column: 7, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2366, column: 7)
!7964 = !DILocation(line: 2366, column: 13, scope: !7963)
!7965 = !DILocation(line: 2366, column: 19, scope: !7963)
!7966 = !DILocation(line: 2366, column: 7, scope: !7795)
!7967 = !DILocation(line: 2367, column: 25, scope: !7963)
!7968 = !DILocation(line: 2368, column: 22, scope: !7963)
!7969 = !DILocation(line: 2368, column: 28, scope: !7963)
!7970 = !DILocation(line: 2368, column: 11, scope: !7963)
!7971 = !DILocation(line: 2367, column: 4, scope: !7963)
!7972 = !DILocation(line: 2370, column: 30, scope: !7795)
!7973 = !DILocation(line: 2370, column: 10, scope: !7795)
!7974 = !DILocation(line: 2370, column: 8, scope: !7795)
!7975 = !DILocation(line: 2371, column: 39, scope: !7795)
!7976 = !DILocation(line: 2371, column: 45, scope: !7795)
!7977 = !DILocation(line: 2371, column: 51, scope: !7795)
!7978 = !DILocation(line: 2371, column: 12, scope: !7795)
!7979 = !DILocation(line: 2371, column: 10, scope: !7795)
!7980 = !DILocation(line: 2372, column: 20, scope: !7795)
!7981 = !DILocation(line: 2372, column: 27, scope: !7795)
!7982 = !DILocation(line: 2372, column: 34, scope: !7795)
!7983 = !DILocation(line: 2372, column: 13, scope: !7795)
!7984 = !DILocation(line: 2372, column: 3, scope: !7795)
!7985 = !DILocation(line: 2372, column: 11, scope: !7795)
!7986 = !DILocation(line: 2373, column: 19, scope: !7795)
!7987 = !DILocation(line: 2373, column: 26, scope: !7795)
!7988 = !DILocation(line: 2373, column: 32, scope: !7795)
!7989 = !DILocation(line: 2373, column: 13, scope: !7795)
!7990 = !DILocation(line: 2373, column: 3, scope: !7795)
!7991 = !DILocation(line: 2373, column: 11, scope: !7795)
!7992 = !DILocation(line: 2374, column: 18, scope: !7795)
!7993 = !DILocation(line: 2374, column: 25, scope: !7795)
!7994 = !DILocation(line: 2374, column: 13, scope: !7795)
!7995 = !DILocation(line: 2374, column: 3, scope: !7795)
!7996 = !DILocation(line: 2374, column: 11, scope: !7795)
!7997 = !DILocation(line: 2375, column: 24, scope: !7795)
!7998 = !DILocation(line: 2375, column: 46, scope: !7795)
!7999 = !DILocation(line: 2375, column: 3, scope: !7795)
!8000 = !DILocation(line: 2378, column: 5, scope: !7795)
!8001 = !DILocation(line: 2377, column: 3, scope: !7795)
!8002 = !DILocation(line: 2379, column: 3, scope: !7795)
!8003 = !DILocation(line: 2382, column: 24, scope: !7795)
!8004 = !DILocation(line: 2383, column: 27, scope: !7795)
!8005 = !DILocation(line: 2383, column: 33, scope: !7795)
!8006 = !DILocation(line: 2383, column: 11, scope: !7795)
!8007 = !DILocation(line: 2382, column: 3, scope: !7795)
!8008 = !DILocation(line: 2386, column: 23, scope: !7795)
!8009 = !DILocation(line: 2386, column: 3, scope: !7795)
!8010 = !DILocation(line: 2387, column: 26, scope: !7795)
!8011 = !DILocation(line: 2387, column: 3, scope: !7795)
!8012 = !DILocation(line: 2391, column: 23, scope: !7795)
!8013 = !DILocation(line: 2391, column: 3, scope: !7795)
!8014 = !DILocation(line: 2396, column: 7, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 2396, column: 7)
!8016 = !DILocation(line: 2396, column: 13, scope: !8015)
!8017 = !DILocation(line: 2396, column: 19, scope: !8015)
!8018 = !DILocation(line: 2396, column: 7, scope: !7795)
!8019 = !DILocation(line: 2397, column: 25, scope: !8015)
!8020 = !DILocation(line: 2398, column: 23, scope: !8015)
!8021 = !DILocation(line: 2398, column: 29, scope: !8015)
!8022 = !DILocation(line: 2398, column: 11, scope: !8015)
!8023 = !DILocation(line: 2397, column: 4, scope: !8015)
!8024 = !DILocation(line: 2400, column: 30, scope: !7795)
!8025 = !DILocation(line: 2400, column: 10, scope: !7795)
!8026 = !DILocation(line: 2400, column: 8, scope: !7795)
!8027 = !DILocation(line: 2401, column: 39, scope: !7795)
!8028 = !DILocation(line: 2401, column: 45, scope: !7795)
!8029 = !DILocation(line: 2401, column: 51, scope: !7795)
!8030 = !DILocation(line: 2401, column: 12, scope: !7795)
!8031 = !DILocation(line: 2401, column: 10, scope: !7795)
!8032 = !DILocation(line: 2402, column: 20, scope: !7795)
!8033 = !DILocation(line: 2402, column: 27, scope: !7795)
!8034 = !DILocation(line: 2402, column: 34, scope: !7795)
!8035 = !DILocation(line: 2402, column: 13, scope: !7795)
!8036 = !DILocation(line: 2402, column: 3, scope: !7795)
!8037 = !DILocation(line: 2402, column: 11, scope: !7795)
!8038 = !DILocation(line: 2403, column: 19, scope: !7795)
!8039 = !DILocation(line: 2403, column: 26, scope: !7795)
!8040 = !DILocation(line: 2403, column: 32, scope: !7795)
!8041 = !DILocation(line: 2403, column: 13, scope: !7795)
!8042 = !DILocation(line: 2403, column: 3, scope: !7795)
!8043 = !DILocation(line: 2403, column: 11, scope: !7795)
!8044 = !DILocation(line: 2404, column: 18, scope: !7795)
!8045 = !DILocation(line: 2404, column: 25, scope: !7795)
!8046 = !DILocation(line: 2404, column: 13, scope: !7795)
!8047 = !DILocation(line: 2404, column: 3, scope: !7795)
!8048 = !DILocation(line: 2404, column: 11, scope: !7795)
!8049 = !DILocation(line: 2405, column: 24, scope: !7795)
!8050 = !DILocation(line: 2405, column: 46, scope: !7795)
!8051 = !DILocation(line: 2405, column: 3, scope: !7795)
!8052 = !DILocation(line: 2408, column: 5, scope: !7795)
!8053 = !DILocation(line: 2407, column: 3, scope: !7795)
!8054 = !DILocation(line: 2409, column: 3, scope: !7795)
!8055 = !DILocation(line: 2411, column: 3, scope: !7795)
!8056 = !DILocation(line: 2413, column: 2, scope: !4431)
!8057 = !DILocation(line: 2414, column: 1, scope: !4431)
!8058 = distinct !DISubprogram(name: "cxd2841er_sleep_tc_to_active_c_band", scope: !3, file: !3, line: 2812, type: !4264, scopeLine: 2814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8059 = !DILocalVariable(name: "priv", arg: 1, scope: !8058, file: !3, line: 2812, type: !4266)
!8060 = !DILocation(line: 2812, column: 71, scope: !8058)
!8061 = !DILocalVariable(name: "bandwidth", arg: 2, scope: !8058, file: !3, line: 2813, type: !326)
!8062 = !DILocation(line: 2813, column: 17, scope: !8058)
!8063 = !DILocalVariable(name: "bw7_8mhz_b10_a6", scope: !8058, file: !3, line: 2815, type: !8064)
!8064 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 112, elements: !8065)
!8065 = !{!4422}
!8066 = !DILocation(line: 2815, column: 5, scope: !8058)
!8067 = !DILocalVariable(name: "bw6mhz_b10_a6", scope: !8058, file: !3, line: 2818, type: !8064)
!8068 = !DILocation(line: 2818, column: 5, scope: !8058)
!8069 = !DILocalVariable(name: "b10_b6", scope: !8058, file: !3, line: 2821, type: !6654)
!8070 = !DILocation(line: 2821, column: 5, scope: !8058)
!8071 = !DILocalVariable(name: "iffreq", scope: !8058, file: !3, line: 2822, type: !326)
!8072 = !DILocation(line: 2822, column: 6, scope: !8058)
!8073 = !DILocalVariable(name: "ifhz", scope: !8058, file: !3, line: 2822, type: !326)
!8074 = !DILocation(line: 2822, column: 14, scope: !8058)
!8075 = !DILocation(line: 2824, column: 6, scope: !8076)
!8076 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 2824, column: 6)
!8077 = !DILocation(line: 2824, column: 16, scope: !8076)
!8078 = !DILocation(line: 2824, column: 27, scope: !8076)
!8079 = !DILocation(line: 2825, column: 4, scope: !8076)
!8080 = !DILocation(line: 2825, column: 14, scope: !8076)
!8081 = !DILocation(line: 2825, column: 25, scope: !8076)
!8082 = !DILocation(line: 2826, column: 4, scope: !8076)
!8083 = !DILocation(line: 2826, column: 14, scope: !8076)
!8084 = !DILocation(line: 2824, column: 6, scope: !8058)
!8085 = !DILocation(line: 2827, column: 3, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8076, file: !3, line: 2826, column: 26)
!8087 = !DILocation(line: 2829, column: 13, scope: !8086)
!8088 = !DILocation(line: 2830, column: 2, scope: !8086)
!8089 = !DILocation(line: 2833, column: 22, scope: !8058)
!8090 = !DILocation(line: 2833, column: 2, scope: !8058)
!8091 = !DILocation(line: 2834, column: 10, scope: !8058)
!8092 = !DILocation(line: 2834, column: 2, scope: !8058)
!8093 = !DILocation(line: 2837, column: 7, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 2837, column: 7)
!8095 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 2834, column: 21)
!8096 = !DILocation(line: 2837, column: 13, scope: !8094)
!8097 = !DILocation(line: 2837, column: 19, scope: !8094)
!8098 = !DILocation(line: 2837, column: 7, scope: !8095)
!8099 = !DILocation(line: 2839, column: 5, scope: !8094)
!8100 = !DILocation(line: 2840, column: 5, scope: !8094)
!8101 = !DILocation(line: 2838, column: 4, scope: !8094)
!8102 = !DILocation(line: 2841, column: 30, scope: !8095)
!8103 = !DILocation(line: 2841, column: 10, scope: !8095)
!8104 = !DILocation(line: 2841, column: 8, scope: !8095)
!8105 = !DILocation(line: 2842, column: 34, scope: !8095)
!8106 = !DILocation(line: 2842, column: 12, scope: !8095)
!8107 = !DILocation(line: 2842, column: 10, scope: !8095)
!8108 = !DILocation(line: 2843, column: 3, scope: !8095)
!8109 = !DILocation(line: 2845, column: 7, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 2845, column: 7)
!8111 = !DILocation(line: 2845, column: 13, scope: !8110)
!8112 = !DILocation(line: 2845, column: 19, scope: !8110)
!8113 = !DILocation(line: 2845, column: 7, scope: !8095)
!8114 = !DILocation(line: 2847, column: 5, scope: !8110)
!8115 = !DILocation(line: 2848, column: 5, scope: !8110)
!8116 = !DILocation(line: 2846, column: 4, scope: !8110)
!8117 = !DILocation(line: 2849, column: 30, scope: !8095)
!8118 = !DILocation(line: 2849, column: 10, scope: !8095)
!8119 = !DILocation(line: 2849, column: 8, scope: !8095)
!8120 = !DILocation(line: 2850, column: 34, scope: !8095)
!8121 = !DILocation(line: 2850, column: 12, scope: !8095)
!8122 = !DILocation(line: 2850, column: 10, scope: !8095)
!8123 = !DILocation(line: 2851, column: 3, scope: !8095)
!8124 = !DILocation(line: 2853, column: 3, scope: !8095)
!8125 = !DILocation(line: 2855, column: 3, scope: !8095)
!8126 = !DILocation(line: 2858, column: 21, scope: !8058)
!8127 = !DILocation(line: 2858, column: 28, scope: !8058)
!8128 = !DILocation(line: 2858, column: 35, scope: !8058)
!8129 = !DILocation(line: 2858, column: 14, scope: !8058)
!8130 = !DILocation(line: 2858, column: 2, scope: !8058)
!8131 = !DILocation(line: 2858, column: 12, scope: !8058)
!8132 = !DILocation(line: 2859, column: 20, scope: !8058)
!8133 = !DILocation(line: 2859, column: 27, scope: !8058)
!8134 = !DILocation(line: 2859, column: 33, scope: !8058)
!8135 = !DILocation(line: 2859, column: 14, scope: !8058)
!8136 = !DILocation(line: 2859, column: 2, scope: !8058)
!8137 = !DILocation(line: 2859, column: 12, scope: !8058)
!8138 = !DILocation(line: 2860, column: 19, scope: !8058)
!8139 = !DILocation(line: 2860, column: 26, scope: !8058)
!8140 = !DILocation(line: 2860, column: 14, scope: !8058)
!8141 = !DILocation(line: 2860, column: 2, scope: !8058)
!8142 = !DILocation(line: 2860, column: 12, scope: !8058)
!8143 = !DILocation(line: 2861, column: 23, scope: !8058)
!8144 = !DILocation(line: 2861, column: 45, scope: !8058)
!8145 = !DILocation(line: 2861, column: 2, scope: !8058)
!8146 = !DILocation(line: 2863, column: 22, scope: !8058)
!8147 = !DILocation(line: 2863, column: 2, scope: !8058)
!8148 = !DILocation(line: 2864, column: 10, scope: !8058)
!8149 = !DILocation(line: 2864, column: 2, scope: !8058)
!8150 = !DILocation(line: 2868, column: 4, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 2864, column: 21)
!8152 = !DILocation(line: 2867, column: 3, scope: !8151)
!8153 = !DILocation(line: 2869, column: 3, scope: !8151)
!8154 = !DILocation(line: 2872, column: 4, scope: !8151)
!8155 = !DILocation(line: 2871, column: 3, scope: !8151)
!8156 = !DILocation(line: 2873, column: 3, scope: !8151)
!8157 = !DILocation(line: 2876, column: 22, scope: !8058)
!8158 = !DILocation(line: 2876, column: 2, scope: !8058)
!8159 = !DILocation(line: 2877, column: 10, scope: !8058)
!8160 = !DILocation(line: 2877, column: 2, scope: !8058)
!8161 = !DILocation(line: 2880, column: 4, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8058, file: !3, line: 2877, column: 21)
!8163 = !DILocation(line: 2879, column: 3, scope: !8162)
!8164 = !DILocation(line: 2881, column: 23, scope: !8162)
!8165 = !DILocation(line: 2881, column: 3, scope: !8162)
!8166 = !DILocation(line: 2882, column: 3, scope: !8162)
!8167 = !DILocation(line: 2885, column: 4, scope: !8162)
!8168 = !DILocation(line: 2884, column: 3, scope: !8162)
!8169 = !DILocation(line: 2886, column: 23, scope: !8162)
!8170 = !DILocation(line: 2886, column: 3, scope: !8162)
!8171 = !DILocation(line: 2887, column: 3, scope: !8162)
!8172 = !DILocation(line: 2890, column: 4, scope: !8162)
!8173 = !DILocation(line: 2889, column: 3, scope: !8162)
!8174 = !DILocation(line: 2891, column: 23, scope: !8162)
!8175 = !DILocation(line: 2891, column: 3, scope: !8162)
!8176 = !DILocation(line: 2892, column: 3, scope: !8162)
!8177 = !DILocation(line: 2894, column: 2, scope: !8058)
!8178 = !DILocation(line: 2895, column: 1, scope: !8058)
!8179 = distinct !DISubprogram(name: "cxd2841er_calc_iffreq", scope: !3, file: !3, line: 322, type: !8180, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8180 = !DISubroutineType(types: !8181)
!8181 = !{!326, !326}
!8182 = !DILocalVariable(name: "ifhz", arg: 1, scope: !8179, file: !3, line: 322, type: !326)
!8183 = !DILocation(line: 322, column: 38, scope: !8179)
!8184 = !DILocation(line: 324, column: 53, scope: !8179)
!8185 = !DILocation(line: 324, column: 9, scope: !8179)
!8186 = !DILocation(line: 324, column: 2, scope: !8179)
!8187 = !DILocalVariable(name: "priv", arg: 1, scope: !4456, file: !3, line: 2644, type: !4266)
!8188 = !DILocation(line: 2644, column: 26, scope: !4456)
!8189 = !DILocalVariable(name: "bandwidth", arg: 2, scope: !4456, file: !3, line: 2644, type: !326)
!8190 = !DILocation(line: 2644, column: 36, scope: !4456)
!8191 = !DILocalVariable(name: "iffreq", scope: !4456, file: !3, line: 2646, type: !326)
!8192 = !DILocation(line: 2646, column: 6, scope: !4456)
!8193 = !DILocalVariable(name: "ifhz", scope: !4456, file: !3, line: 2646, type: !326)
!8194 = !DILocation(line: 2646, column: 14, scope: !4456)
!8195 = !DILocalVariable(name: "data", scope: !4456, file: !3, line: 2647, type: !6654)
!8196 = !DILocation(line: 2647, column: 5, scope: !4456)
!8197 = !DILocation(line: 2693, column: 22, scope: !4456)
!8198 = !DILocation(line: 2693, column: 2, scope: !4456)
!8199 = !DILocation(line: 2698, column: 6, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 2698, column: 6)
!8201 = !DILocation(line: 2698, column: 12, scope: !8200)
!8202 = !DILocation(line: 2698, column: 17, scope: !8200)
!8203 = !DILocation(line: 2698, column: 36, scope: !8200)
!8204 = !DILocation(line: 2698, column: 39, scope: !8200)
!8205 = !DILocation(line: 2698, column: 49, scope: !8200)
!8206 = !DILocation(line: 2698, column: 6, scope: !4456)
!8207 = !DILocation(line: 2699, column: 3, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8200, file: !3, line: 2698, column: 60)
!8209 = !DILocation(line: 2702, column: 3, scope: !8208)
!8210 = !DILocation(line: 2705, column: 10, scope: !4456)
!8211 = !DILocation(line: 2705, column: 2, scope: !4456)
!8212 = !DILocation(line: 2708, column: 24, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 2705, column: 21)
!8214 = !DILocation(line: 2709, column: 26, scope: !8213)
!8215 = !DILocation(line: 2709, column: 32, scope: !8213)
!8216 = !DILocation(line: 2709, column: 11, scope: !8213)
!8217 = !DILocation(line: 2708, column: 3, scope: !8213)
!8218 = !DILocation(line: 2711, column: 7, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2711, column: 7)
!8220 = !DILocation(line: 2711, column: 13, scope: !8219)
!8221 = !DILocation(line: 2711, column: 19, scope: !8219)
!8222 = !DILocation(line: 2711, column: 7, scope: !8213)
!8223 = !DILocation(line: 2712, column: 25, scope: !8219)
!8224 = !DILocation(line: 2713, column: 22, scope: !8219)
!8225 = !DILocation(line: 2713, column: 28, scope: !8219)
!8226 = !DILocation(line: 2713, column: 11, scope: !8219)
!8227 = !DILocation(line: 2712, column: 4, scope: !8219)
!8228 = !DILocation(line: 2716, column: 30, scope: !8213)
!8229 = !DILocation(line: 2716, column: 10, scope: !8213)
!8230 = !DILocation(line: 2716, column: 8, scope: !8213)
!8231 = !DILocation(line: 2717, column: 39, scope: !8213)
!8232 = !DILocation(line: 2717, column: 45, scope: !8213)
!8233 = !DILocation(line: 2717, column: 51, scope: !8213)
!8234 = !DILocation(line: 2717, column: 12, scope: !8213)
!8235 = !DILocation(line: 2717, column: 10, scope: !8213)
!8236 = !DILocation(line: 2718, column: 20, scope: !8213)
!8237 = !DILocation(line: 2718, column: 27, scope: !8213)
!8238 = !DILocation(line: 2718, column: 34, scope: !8213)
!8239 = !DILocation(line: 2718, column: 13, scope: !8213)
!8240 = !DILocation(line: 2718, column: 3, scope: !8213)
!8241 = !DILocation(line: 2718, column: 11, scope: !8213)
!8242 = !DILocation(line: 2719, column: 19, scope: !8213)
!8243 = !DILocation(line: 2719, column: 26, scope: !8213)
!8244 = !DILocation(line: 2719, column: 32, scope: !8213)
!8245 = !DILocation(line: 2719, column: 13, scope: !8213)
!8246 = !DILocation(line: 2719, column: 3, scope: !8213)
!8247 = !DILocation(line: 2719, column: 11, scope: !8213)
!8248 = !DILocation(line: 2720, column: 18, scope: !8213)
!8249 = !DILocation(line: 2720, column: 25, scope: !8213)
!8250 = !DILocation(line: 2720, column: 13, scope: !8213)
!8251 = !DILocation(line: 2720, column: 3, scope: !8213)
!8252 = !DILocation(line: 2720, column: 11, scope: !8213)
!8253 = !DILocation(line: 2721, column: 24, scope: !8213)
!8254 = !DILocation(line: 2721, column: 46, scope: !8213)
!8255 = !DILocation(line: 2721, column: 3, scope: !8213)
!8256 = !DILocation(line: 2724, column: 26, scope: !8213)
!8257 = !DILocation(line: 2724, column: 3, scope: !8213)
!8258 = !DILocation(line: 2727, column: 3, scope: !8213)
!8259 = !DILocation(line: 2727, column: 11, scope: !8213)
!8260 = !DILocation(line: 2728, column: 3, scope: !8213)
!8261 = !DILocation(line: 2728, column: 11, scope: !8213)
!8262 = !DILocation(line: 2729, column: 24, scope: !8213)
!8263 = !DILocation(line: 2729, column: 46, scope: !8213)
!8264 = !DILocation(line: 2729, column: 3, scope: !8213)
!8265 = !DILocation(line: 2732, column: 23, scope: !8213)
!8266 = !DILocation(line: 2732, column: 3, scope: !8213)
!8267 = !DILocation(line: 2733, column: 26, scope: !8213)
!8268 = !DILocation(line: 2733, column: 3, scope: !8213)
!8269 = !DILocation(line: 2734, column: 23, scope: !8213)
!8270 = !DILocation(line: 2734, column: 3, scope: !8213)
!8271 = !DILocation(line: 2735, column: 23, scope: !8213)
!8272 = !DILocation(line: 2735, column: 3, scope: !8213)
!8273 = !DILocation(line: 2736, column: 3, scope: !8213)
!8274 = !DILocation(line: 2739, column: 24, scope: !8213)
!8275 = !DILocation(line: 2740, column: 26, scope: !8213)
!8276 = !DILocation(line: 2740, column: 32, scope: !8213)
!8277 = !DILocation(line: 2740, column: 11, scope: !8213)
!8278 = !DILocation(line: 2739, column: 3, scope: !8213)
!8279 = !DILocation(line: 2742, column: 7, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2742, column: 7)
!8281 = !DILocation(line: 2742, column: 13, scope: !8280)
!8282 = !DILocation(line: 2742, column: 19, scope: !8280)
!8283 = !DILocation(line: 2742, column: 7, scope: !8213)
!8284 = !DILocation(line: 2743, column: 25, scope: !8280)
!8285 = !DILocation(line: 2744, column: 22, scope: !8280)
!8286 = !DILocation(line: 2744, column: 28, scope: !8280)
!8287 = !DILocation(line: 2744, column: 11, scope: !8280)
!8288 = !DILocation(line: 2743, column: 4, scope: !8280)
!8289 = !DILocation(line: 2747, column: 30, scope: !8213)
!8290 = !DILocation(line: 2747, column: 10, scope: !8213)
!8291 = !DILocation(line: 2747, column: 8, scope: !8213)
!8292 = !DILocation(line: 2748, column: 39, scope: !8213)
!8293 = !DILocation(line: 2748, column: 45, scope: !8213)
!8294 = !DILocation(line: 2748, column: 51, scope: !8213)
!8295 = !DILocation(line: 2748, column: 12, scope: !8213)
!8296 = !DILocation(line: 2748, column: 10, scope: !8213)
!8297 = !DILocation(line: 2749, column: 20, scope: !8213)
!8298 = !DILocation(line: 2749, column: 27, scope: !8213)
!8299 = !DILocation(line: 2749, column: 34, scope: !8213)
!8300 = !DILocation(line: 2749, column: 13, scope: !8213)
!8301 = !DILocation(line: 2749, column: 3, scope: !8213)
!8302 = !DILocation(line: 2749, column: 11, scope: !8213)
!8303 = !DILocation(line: 2750, column: 19, scope: !8213)
!8304 = !DILocation(line: 2750, column: 26, scope: !8213)
!8305 = !DILocation(line: 2750, column: 32, scope: !8213)
!8306 = !DILocation(line: 2750, column: 13, scope: !8213)
!8307 = !DILocation(line: 2750, column: 3, scope: !8213)
!8308 = !DILocation(line: 2750, column: 11, scope: !8213)
!8309 = !DILocation(line: 2751, column: 18, scope: !8213)
!8310 = !DILocation(line: 2751, column: 25, scope: !8213)
!8311 = !DILocation(line: 2751, column: 13, scope: !8213)
!8312 = !DILocation(line: 2751, column: 3, scope: !8213)
!8313 = !DILocation(line: 2751, column: 11, scope: !8213)
!8314 = !DILocation(line: 2752, column: 24, scope: !8213)
!8315 = !DILocation(line: 2752, column: 46, scope: !8213)
!8316 = !DILocation(line: 2752, column: 3, scope: !8213)
!8317 = !DILocation(line: 2755, column: 26, scope: !8213)
!8318 = !DILocation(line: 2755, column: 3, scope: !8213)
!8319 = !DILocation(line: 2758, column: 3, scope: !8213)
!8320 = !DILocation(line: 2758, column: 11, scope: !8213)
!8321 = !DILocation(line: 2759, column: 3, scope: !8213)
!8322 = !DILocation(line: 2759, column: 11, scope: !8213)
!8323 = !DILocation(line: 2760, column: 24, scope: !8213)
!8324 = !DILocation(line: 2760, column: 46, scope: !8213)
!8325 = !DILocation(line: 2760, column: 3, scope: !8213)
!8326 = !DILocation(line: 2763, column: 23, scope: !8213)
!8327 = !DILocation(line: 2763, column: 3, scope: !8213)
!8328 = !DILocation(line: 2764, column: 26, scope: !8213)
!8329 = !DILocation(line: 2764, column: 3, scope: !8213)
!8330 = !DILocation(line: 2765, column: 23, scope: !8213)
!8331 = !DILocation(line: 2765, column: 3, scope: !8213)
!8332 = !DILocation(line: 2766, column: 23, scope: !8213)
!8333 = !DILocation(line: 2766, column: 3, scope: !8213)
!8334 = !DILocation(line: 2767, column: 3, scope: !8213)
!8335 = !DILocation(line: 2770, column: 24, scope: !8213)
!8336 = !DILocation(line: 2771, column: 26, scope: !8213)
!8337 = !DILocation(line: 2771, column: 32, scope: !8213)
!8338 = !DILocation(line: 2771, column: 11, scope: !8213)
!8339 = !DILocation(line: 2770, column: 3, scope: !8213)
!8340 = !DILocation(line: 2773, column: 7, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2773, column: 7)
!8342 = !DILocation(line: 2773, column: 13, scope: !8341)
!8343 = !DILocation(line: 2773, column: 19, scope: !8341)
!8344 = !DILocation(line: 2773, column: 7, scope: !8213)
!8345 = !DILocation(line: 2774, column: 25, scope: !8341)
!8346 = !DILocation(line: 2775, column: 22, scope: !8341)
!8347 = !DILocation(line: 2775, column: 28, scope: !8341)
!8348 = !DILocation(line: 2775, column: 11, scope: !8341)
!8349 = !DILocation(line: 2774, column: 4, scope: !8341)
!8350 = !DILocation(line: 2778, column: 30, scope: !8213)
!8351 = !DILocation(line: 2778, column: 10, scope: !8213)
!8352 = !DILocation(line: 2778, column: 8, scope: !8213)
!8353 = !DILocation(line: 2779, column: 39, scope: !8213)
!8354 = !DILocation(line: 2779, column: 45, scope: !8213)
!8355 = !DILocation(line: 2779, column: 51, scope: !8213)
!8356 = !DILocation(line: 2779, column: 12, scope: !8213)
!8357 = !DILocation(line: 2779, column: 10, scope: !8213)
!8358 = !DILocation(line: 2780, column: 20, scope: !8213)
!8359 = !DILocation(line: 2780, column: 27, scope: !8213)
!8360 = !DILocation(line: 2780, column: 34, scope: !8213)
!8361 = !DILocation(line: 2780, column: 13, scope: !8213)
!8362 = !DILocation(line: 2780, column: 3, scope: !8213)
!8363 = !DILocation(line: 2780, column: 11, scope: !8213)
!8364 = !DILocation(line: 2781, column: 19, scope: !8213)
!8365 = !DILocation(line: 2781, column: 26, scope: !8213)
!8366 = !DILocation(line: 2781, column: 32, scope: !8213)
!8367 = !DILocation(line: 2781, column: 13, scope: !8213)
!8368 = !DILocation(line: 2781, column: 3, scope: !8213)
!8369 = !DILocation(line: 2781, column: 11, scope: !8213)
!8370 = !DILocation(line: 2782, column: 18, scope: !8213)
!8371 = !DILocation(line: 2782, column: 25, scope: !8213)
!8372 = !DILocation(line: 2782, column: 13, scope: !8213)
!8373 = !DILocation(line: 2782, column: 3, scope: !8213)
!8374 = !DILocation(line: 2782, column: 11, scope: !8213)
!8375 = !DILocation(line: 2783, column: 24, scope: !8213)
!8376 = !DILocation(line: 2783, column: 46, scope: !8213)
!8377 = !DILocation(line: 2783, column: 3, scope: !8213)
!8378 = !DILocation(line: 2786, column: 26, scope: !8213)
!8379 = !DILocation(line: 2786, column: 3, scope: !8213)
!8380 = !DILocation(line: 2789, column: 7, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 2789, column: 7)
!8382 = !DILocation(line: 2789, column: 13, scope: !8381)
!8383 = !DILocation(line: 2789, column: 18, scope: !8381)
!8384 = !DILocation(line: 2789, column: 7, scope: !8213)
!8385 = !DILocation(line: 2790, column: 4, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 2789, column: 38)
!8387 = !DILocation(line: 2790, column: 12, scope: !8386)
!8388 = !DILocation(line: 2791, column: 4, scope: !8386)
!8389 = !DILocation(line: 2791, column: 12, scope: !8386)
!8390 = !DILocation(line: 2792, column: 3, scope: !8386)
!8391 = !DILocation(line: 2793, column: 4, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 2792, column: 10)
!8393 = !DILocation(line: 2793, column: 12, scope: !8392)
!8394 = !DILocation(line: 2794, column: 4, scope: !8392)
!8395 = !DILocation(line: 2794, column: 12, scope: !8392)
!8396 = !DILocation(line: 2796, column: 24, scope: !8213)
!8397 = !DILocation(line: 2796, column: 46, scope: !8213)
!8398 = !DILocation(line: 2796, column: 3, scope: !8213)
!8399 = !DILocation(line: 2799, column: 23, scope: !8213)
!8400 = !DILocation(line: 2799, column: 3, scope: !8213)
!8401 = !DILocation(line: 2800, column: 26, scope: !8213)
!8402 = !DILocation(line: 2800, column: 3, scope: !8213)
!8403 = !DILocation(line: 2801, column: 23, scope: !8213)
!8404 = !DILocation(line: 2801, column: 3, scope: !8213)
!8405 = !DILocation(line: 2802, column: 23, scope: !8213)
!8406 = !DILocation(line: 2802, column: 3, scope: !8213)
!8407 = !DILocation(line: 2803, column: 3, scope: !8213)
!8408 = !DILocation(line: 2807, column: 3, scope: !8213)
!8409 = !DILocation(line: 2809, column: 2, scope: !4456)
!8410 = !DILocation(line: 2810, column: 1, scope: !4456)
!8411 = distinct !DISubprogram(name: "cxd2841er_read_status_s", scope: !3, file: !3, line: 972, type: !4124, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8412 = !DILocalVariable(name: "fe", arg: 1, scope: !8411, file: !3, line: 972, type: !390)
!8413 = !DILocation(line: 972, column: 57, scope: !8411)
!8414 = !DILocalVariable(name: "status", arg: 2, scope: !8411, file: !3, line: 973, type: !4101)
!8415 = !DILocation(line: 973, column: 24, scope: !8411)
!8416 = !DILocalVariable(name: "reg", scope: !8411, file: !3, line: 975, type: !332)
!8417 = !DILocation(line: 975, column: 5, scope: !8411)
!8418 = !DILocalVariable(name: "priv", scope: !8411, file: !3, line: 976, type: !4266)
!8419 = !DILocation(line: 976, column: 25, scope: !8411)
!8420 = !DILocation(line: 976, column: 32, scope: !8411)
!8421 = !DILocation(line: 976, column: 36, scope: !8411)
!8422 = !DILocation(line: 979, column: 3, scope: !8411)
!8423 = !DILocation(line: 979, column: 10, scope: !8411)
!8424 = !DILocation(line: 980, column: 6, scope: !8425)
!8425 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 980, column: 6)
!8426 = !DILocation(line: 980, column: 12, scope: !8425)
!8427 = !DILocation(line: 980, column: 18, scope: !8425)
!8428 = !DILocation(line: 980, column: 6, scope: !8411)
!8429 = !DILocation(line: 981, column: 3, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 980, column: 37)
!8431 = !DILocation(line: 983, column: 3, scope: !8430)
!8432 = !DILocation(line: 986, column: 22, scope: !8411)
!8433 = !DILocation(line: 986, column: 2, scope: !8411)
!8434 = !DILocation(line: 991, column: 21, scope: !8411)
!8435 = !DILocation(line: 991, column: 2, scope: !8411)
!8436 = !DILocation(line: 992, column: 6, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 992, column: 6)
!8438 = !DILocation(line: 992, column: 10, scope: !8437)
!8439 = !DILocation(line: 992, column: 6, scope: !8411)
!8440 = !DILocation(line: 993, column: 4, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 992, column: 18)
!8442 = !DILocation(line: 993, column: 11, scope: !8441)
!8443 = !DILocation(line: 998, column: 2, scope: !8441)
!8444 = !DILocation(line: 1000, column: 2, scope: !8411)
!8445 = !DILocation(line: 1001, column: 1, scope: !8411)
!8446 = distinct !DISubprogram(name: "cxd2841er_read_signal_strength", scope: !3, file: !3, line: 1984, type: !388, scopeLine: 1985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8447 = !DILocalVariable(name: "fe", arg: 1, scope: !8446, file: !3, line: 1984, type: !390)
!8448 = !DILocation(line: 1984, column: 65, scope: !8446)
!8449 = !DILocalVariable(name: "p", scope: !8446, file: !3, line: 1986, type: !4121)
!8450 = !DILocation(line: 1986, column: 34, scope: !8446)
!8451 = !DILocation(line: 1986, column: 39, scope: !8446)
!8452 = !DILocation(line: 1986, column: 43, scope: !8446)
!8453 = !DILocalVariable(name: "priv", scope: !8446, file: !3, line: 1987, type: !4266)
!8454 = !DILocation(line: 1987, column: 25, scope: !8446)
!8455 = !DILocation(line: 1987, column: 32, scope: !8446)
!8456 = !DILocation(line: 1987, column: 36, scope: !8446)
!8457 = !DILocalVariable(name: "strength", scope: !8446, file: !3, line: 1988, type: !344)
!8458 = !DILocation(line: 1988, column: 6, scope: !8446)
!8459 = !DILocation(line: 1991, column: 10, scope: !8446)
!8460 = !DILocation(line: 1991, column: 13, scope: !8446)
!8461 = !DILocation(line: 1991, column: 2, scope: !8446)
!8462 = !DILocation(line: 1994, column: 43, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 1991, column: 30)
!8464 = !DILocation(line: 1995, column: 8, scope: !8463)
!8465 = !DILocation(line: 1995, column: 11, scope: !8463)
!8466 = !DILocation(line: 1994, column: 14, scope: !8463)
!8467 = !DILocation(line: 1994, column: 12, scope: !8463)
!8468 = !DILocation(line: 1996, column: 3, scope: !8463)
!8469 = !DILocation(line: 1996, column: 6, scope: !8463)
!8470 = !DILocation(line: 1996, column: 15, scope: !8463)
!8471 = !DILocation(line: 1996, column: 23, scope: !8463)
!8472 = !DILocation(line: 1996, column: 29, scope: !8463)
!8473 = !DILocation(line: 1998, column: 32, scope: !8463)
!8474 = !DILocation(line: 1998, column: 41, scope: !8463)
!8475 = !DILocation(line: 1998, column: 47, scope: !8463)
!8476 = !DILocation(line: 1998, column: 53, scope: !8463)
!8477 = !DILocation(line: 1998, column: 3, scope: !8463)
!8478 = !DILocation(line: 1998, column: 6, scope: !8463)
!8479 = !DILocation(line: 1998, column: 15, scope: !8463)
!8480 = !DILocation(line: 1998, column: 23, scope: !8463)
!8481 = !DILocation(line: 1998, column: 30, scope: !8463)
!8482 = !DILocation(line: 1999, column: 3, scope: !8463)
!8483 = !DILocation(line: 2003, column: 40, scope: !8463)
!8484 = !DILocation(line: 2004, column: 8, scope: !8463)
!8485 = !DILocation(line: 2004, column: 11, scope: !8463)
!8486 = !DILocation(line: 2003, column: 14, scope: !8463)
!8487 = !DILocation(line: 2003, column: 12, scope: !8463)
!8488 = !DILocation(line: 2005, column: 3, scope: !8463)
!8489 = !DILocation(line: 2005, column: 6, scope: !8463)
!8490 = !DILocation(line: 2005, column: 15, scope: !8463)
!8491 = !DILocation(line: 2005, column: 23, scope: !8463)
!8492 = !DILocation(line: 2005, column: 29, scope: !8463)
!8493 = !DILocation(line: 2011, column: 32, scope: !8463)
!8494 = !DILocation(line: 2011, column: 41, scope: !8463)
!8495 = !DILocation(line: 2011, column: 48, scope: !8463)
!8496 = !DILocation(line: 2011, column: 55, scope: !8463)
!8497 = !DILocation(line: 2011, column: 3, scope: !8463)
!8498 = !DILocation(line: 2011, column: 6, scope: !8463)
!8499 = !DILocation(line: 2011, column: 15, scope: !8463)
!8500 = !DILocation(line: 2011, column: 23, scope: !8463)
!8501 = !DILocation(line: 2011, column: 30, scope: !8463)
!8502 = !DILocation(line: 2012, column: 3, scope: !8463)
!8503 = !DILocation(line: 2014, column: 40, scope: !8463)
!8504 = !DILocation(line: 2014, column: 46, scope: !8463)
!8505 = !DILocation(line: 2014, column: 49, scope: !8463)
!8506 = !DILocation(line: 2014, column: 14, scope: !8463)
!8507 = !DILocation(line: 2014, column: 12, scope: !8463)
!8508 = !DILocation(line: 2015, column: 3, scope: !8463)
!8509 = !DILocation(line: 2015, column: 6, scope: !8463)
!8510 = !DILocation(line: 2015, column: 15, scope: !8463)
!8511 = !DILocation(line: 2015, column: 23, scope: !8463)
!8512 = !DILocation(line: 2015, column: 29, scope: !8463)
!8513 = !DILocation(line: 2020, column: 32, scope: !8463)
!8514 = !DILocation(line: 2020, column: 41, scope: !8463)
!8515 = !DILocation(line: 2020, column: 48, scope: !8463)
!8516 = !DILocation(line: 2020, column: 55, scope: !8463)
!8517 = !DILocation(line: 2020, column: 3, scope: !8463)
!8518 = !DILocation(line: 2020, column: 6, scope: !8463)
!8519 = !DILocation(line: 2020, column: 15, scope: !8463)
!8520 = !DILocation(line: 2020, column: 23, scope: !8463)
!8521 = !DILocation(line: 2020, column: 30, scope: !8463)
!8522 = !DILocation(line: 2021, column: 3, scope: !8463)
!8523 = !DILocation(line: 2024, column: 48, scope: !8463)
!8524 = !DILocation(line: 2024, column: 22, scope: !8463)
!8525 = !DILocation(line: 2024, column: 20, scope: !8463)
!8526 = !DILocation(line: 2024, column: 12, scope: !8463)
!8527 = !DILocation(line: 2025, column: 3, scope: !8463)
!8528 = !DILocation(line: 2025, column: 6, scope: !8463)
!8529 = !DILocation(line: 2025, column: 15, scope: !8463)
!8530 = !DILocation(line: 2025, column: 23, scope: !8463)
!8531 = !DILocation(line: 2025, column: 29, scope: !8463)
!8532 = !DILocation(line: 2026, column: 32, scope: !8463)
!8533 = !DILocation(line: 2026, column: 3, scope: !8463)
!8534 = !DILocation(line: 2026, column: 6, scope: !8463)
!8535 = !DILocation(line: 2026, column: 15, scope: !8463)
!8536 = !DILocation(line: 2026, column: 23, scope: !8463)
!8537 = !DILocation(line: 2026, column: 30, scope: !8463)
!8538 = !DILocation(line: 2027, column: 3, scope: !8463)
!8539 = !DILocation(line: 2029, column: 3, scope: !8463)
!8540 = !DILocation(line: 2029, column: 6, scope: !8463)
!8541 = !DILocation(line: 2029, column: 15, scope: !8463)
!8542 = !DILocation(line: 2029, column: 23, scope: !8463)
!8543 = !DILocation(line: 2029, column: 29, scope: !8463)
!8544 = !DILocation(line: 2030, column: 3, scope: !8463)
!8545 = !DILocation(line: 2032, column: 1, scope: !8446)
!8546 = distinct !DISubprogram(name: "cxd2841er_read_snr", scope: !3, file: !3, line: 2034, type: !388, scopeLine: 2035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8547 = !DILocalVariable(name: "fe", arg: 1, scope: !8546, file: !3, line: 2034, type: !390)
!8548 = !DILocation(line: 2034, column: 53, scope: !8546)
!8549 = !DILocalVariable(name: "tmp", scope: !8546, file: !3, line: 2036, type: !326)
!8550 = !DILocation(line: 2036, column: 6, scope: !8546)
!8551 = !DILocalVariable(name: "ret", scope: !8546, file: !3, line: 2037, type: !331)
!8552 = !DILocation(line: 2037, column: 6, scope: !8546)
!8553 = !DILocalVariable(name: "p", scope: !8546, file: !3, line: 2038, type: !4121)
!8554 = !DILocation(line: 2038, column: 34, scope: !8546)
!8555 = !DILocation(line: 2038, column: 39, scope: !8546)
!8556 = !DILocation(line: 2038, column: 43, scope: !8546)
!8557 = !DILocalVariable(name: "priv", scope: !8546, file: !3, line: 2039, type: !4266)
!8558 = !DILocation(line: 2039, column: 25, scope: !8546)
!8559 = !DILocation(line: 2039, column: 32, scope: !8546)
!8560 = !DILocation(line: 2039, column: 36, scope: !8546)
!8561 = !DILocation(line: 2042, column: 10, scope: !8546)
!8562 = !DILocation(line: 2042, column: 13, scope: !8546)
!8563 = !DILocation(line: 2042, column: 2, scope: !8546)
!8564 = !DILocation(line: 2046, column: 30, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 2042, column: 30)
!8566 = !DILocation(line: 2046, column: 9, scope: !8565)
!8567 = !DILocation(line: 2046, column: 7, scope: !8565)
!8568 = !DILocation(line: 2047, column: 3, scope: !8565)
!8569 = !DILocation(line: 2049, column: 30, scope: !8565)
!8570 = !DILocation(line: 2049, column: 9, scope: !8565)
!8571 = !DILocation(line: 2049, column: 7, scope: !8565)
!8572 = !DILocation(line: 2050, column: 3, scope: !8565)
!8573 = !DILocation(line: 2052, column: 31, scope: !8565)
!8574 = !DILocation(line: 2052, column: 9, scope: !8565)
!8575 = !DILocation(line: 2052, column: 7, scope: !8565)
!8576 = !DILocation(line: 2053, column: 3, scope: !8565)
!8577 = !DILocation(line: 2055, column: 30, scope: !8565)
!8578 = !DILocation(line: 2055, column: 9, scope: !8565)
!8579 = !DILocation(line: 2055, column: 7, scope: !8565)
!8580 = !DILocation(line: 2056, column: 3, scope: !8565)
!8581 = !DILocation(line: 2059, column: 33, scope: !8565)
!8582 = !DILocation(line: 2059, column: 39, scope: !8565)
!8583 = !DILocation(line: 2059, column: 42, scope: !8565)
!8584 = !DILocation(line: 2059, column: 9, scope: !8565)
!8585 = !DILocation(line: 2059, column: 7, scope: !8565)
!8586 = !DILocation(line: 2060, column: 3, scope: !8565)
!8587 = !DILocation(line: 2064, column: 3, scope: !8565)
!8588 = !DILocation(line: 2064, column: 6, scope: !8565)
!8589 = !DILocation(line: 2064, column: 10, scope: !8565)
!8590 = !DILocation(line: 2064, column: 18, scope: !8565)
!8591 = !DILocation(line: 2064, column: 24, scope: !8565)
!8592 = !DILocation(line: 2065, column: 3, scope: !8565)
!8593 = !DILocation(line: 2071, column: 7, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 2071, column: 6)
!8595 = !DILocation(line: 2071, column: 6, scope: !8546)
!8596 = !DILocation(line: 2072, column: 3, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 2071, column: 12)
!8598 = !DILocation(line: 2072, column: 6, scope: !8597)
!8599 = !DILocation(line: 2072, column: 10, scope: !8597)
!8600 = !DILocation(line: 2072, column: 18, scope: !8597)
!8601 = !DILocation(line: 2072, column: 24, scope: !8597)
!8602 = !DILocation(line: 2073, column: 27, scope: !8597)
!8603 = !DILocation(line: 2073, column: 3, scope: !8597)
!8604 = !DILocation(line: 2073, column: 6, scope: !8597)
!8605 = !DILocation(line: 2073, column: 10, scope: !8597)
!8606 = !DILocation(line: 2073, column: 18, scope: !8597)
!8607 = !DILocation(line: 2073, column: 25, scope: !8597)
!8608 = !DILocation(line: 2074, column: 2, scope: !8597)
!8609 = !DILocation(line: 2075, column: 3, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 2074, column: 9)
!8611 = !DILocation(line: 2075, column: 6, scope: !8610)
!8612 = !DILocation(line: 2075, column: 10, scope: !8610)
!8613 = !DILocation(line: 2075, column: 18, scope: !8610)
!8614 = !DILocation(line: 2075, column: 24, scope: !8610)
!8615 = !DILocation(line: 2077, column: 1, scope: !8546)
!8616 = distinct !DISubprogram(name: "cxd2841er_read_ucblocks", scope: !3, file: !3, line: 2079, type: !388, scopeLine: 2080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8617 = !DILocalVariable(name: "fe", arg: 1, scope: !8616, file: !3, line: 2079, type: !390)
!8618 = !DILocation(line: 2079, column: 58, scope: !8616)
!8619 = !DILocalVariable(name: "p", scope: !8616, file: !3, line: 2081, type: !4121)
!8620 = !DILocation(line: 2081, column: 34, scope: !8616)
!8621 = !DILocation(line: 2081, column: 39, scope: !8616)
!8622 = !DILocation(line: 2081, column: 43, scope: !8616)
!8623 = !DILocalVariable(name: "priv", scope: !8616, file: !3, line: 2082, type: !4266)
!8624 = !DILocation(line: 2082, column: 25, scope: !8616)
!8625 = !DILocation(line: 2082, column: 32, scope: !8616)
!8626 = !DILocation(line: 2082, column: 36, scope: !8616)
!8627 = !DILocalVariable(name: "ucblocks", scope: !8616, file: !3, line: 2083, type: !326)
!8628 = !DILocation(line: 2083, column: 6, scope: !8616)
!8629 = !DILocation(line: 2086, column: 10, scope: !8616)
!8630 = !DILocation(line: 2086, column: 13, scope: !8616)
!8631 = !DILocation(line: 2086, column: 2, scope: !8616)
!8632 = !DILocation(line: 2090, column: 34, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 2086, column: 30)
!8634 = !DILocation(line: 2090, column: 3, scope: !8633)
!8635 = !DILocation(line: 2091, column: 3, scope: !8633)
!8636 = !DILocation(line: 2093, column: 34, scope: !8633)
!8637 = !DILocation(line: 2093, column: 3, scope: !8633)
!8638 = !DILocation(line: 2094, column: 3, scope: !8633)
!8639 = !DILocation(line: 2096, column: 35, scope: !8633)
!8640 = !DILocation(line: 2096, column: 3, scope: !8633)
!8641 = !DILocation(line: 2097, column: 3, scope: !8633)
!8642 = !DILocation(line: 2099, column: 34, scope: !8633)
!8643 = !DILocation(line: 2099, column: 3, scope: !8633)
!8644 = !DILocation(line: 2100, column: 3, scope: !8633)
!8645 = !DILocation(line: 2102, column: 3, scope: !8633)
!8646 = !DILocation(line: 2102, column: 6, scope: !8633)
!8647 = !DILocation(line: 2102, column: 18, scope: !8633)
!8648 = !DILocation(line: 2102, column: 26, scope: !8633)
!8649 = !DILocation(line: 2102, column: 32, scope: !8633)
!8650 = !DILocation(line: 2103, column: 3, scope: !8633)
!8651 = !DILocation(line: 2107, column: 2, scope: !8616)
!8652 = !DILocation(line: 2107, column: 5, scope: !8616)
!8653 = !DILocation(line: 2107, column: 17, scope: !8616)
!8654 = !DILocation(line: 2107, column: 25, scope: !8616)
!8655 = !DILocation(line: 2107, column: 31, scope: !8616)
!8656 = !DILocation(line: 2108, column: 34, scope: !8616)
!8657 = !DILocation(line: 2108, column: 2, scope: !8616)
!8658 = !DILocation(line: 2108, column: 5, scope: !8616)
!8659 = !DILocation(line: 2108, column: 17, scope: !8616)
!8660 = !DILocation(line: 2108, column: 25, scope: !8616)
!8661 = !DILocation(line: 2108, column: 32, scope: !8616)
!8662 = !DILocation(line: 2109, column: 1, scope: !8616)
!8663 = distinct !DISubprogram(name: "cxd2841er_read_ber", scope: !3, file: !3, line: 1939, type: !388, scopeLine: 1940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8664 = !DILocalVariable(name: "fe", arg: 1, scope: !8663, file: !3, line: 1939, type: !390)
!8665 = !DILocation(line: 1939, column: 53, scope: !8663)
!8666 = !DILocalVariable(name: "p", scope: !8663, file: !3, line: 1941, type: !4121)
!8667 = !DILocation(line: 1941, column: 34, scope: !8663)
!8668 = !DILocation(line: 1941, column: 39, scope: !8663)
!8669 = !DILocation(line: 1941, column: 43, scope: !8663)
!8670 = !DILocalVariable(name: "priv", scope: !8663, file: !3, line: 1942, type: !4266)
!8671 = !DILocation(line: 1942, column: 25, scope: !8663)
!8672 = !DILocation(line: 1942, column: 32, scope: !8663)
!8673 = !DILocation(line: 1942, column: 36, scope: !8663)
!8674 = !DILocalVariable(name: "ret", scope: !8663, file: !3, line: 1943, type: !326)
!8675 = !DILocation(line: 1943, column: 6, scope: !8663)
!8676 = !DILocalVariable(name: "bit_error", scope: !8663, file: !3, line: 1943, type: !326)
!8677 = !DILocation(line: 1943, column: 11, scope: !8663)
!8678 = !DILocalVariable(name: "bit_count", scope: !8663, file: !3, line: 1943, type: !326)
!8679 = !DILocation(line: 1943, column: 26, scope: !8663)
!8680 = !DILocation(line: 1946, column: 10, scope: !8663)
!8681 = !DILocation(line: 1946, column: 13, scope: !8663)
!8682 = !DILocation(line: 1946, column: 2, scope: !8663)
!8683 = !DILocation(line: 1950, column: 30, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8663, file: !3, line: 1946, column: 30)
!8685 = !DILocation(line: 1950, column: 9, scope: !8684)
!8686 = !DILocation(line: 1950, column: 7, scope: !8684)
!8687 = !DILocation(line: 1951, column: 3, scope: !8684)
!8688 = !DILocation(line: 1953, column: 30, scope: !8684)
!8689 = !DILocation(line: 1953, column: 9, scope: !8684)
!8690 = !DILocation(line: 1953, column: 7, scope: !8684)
!8691 = !DILocation(line: 1954, column: 3, scope: !8684)
!8692 = !DILocation(line: 1956, column: 34, scope: !8684)
!8693 = !DILocation(line: 1956, column: 9, scope: !8684)
!8694 = !DILocation(line: 1956, column: 7, scope: !8684)
!8695 = !DILocation(line: 1957, column: 3, scope: !8684)
!8696 = !DILocation(line: 1959, column: 35, scope: !8684)
!8697 = !DILocation(line: 1959, column: 9, scope: !8684)
!8698 = !DILocation(line: 1959, column: 7, scope: !8684)
!8699 = !DILocation(line: 1960, column: 3, scope: !8684)
!8700 = !DILocation(line: 1962, column: 30, scope: !8684)
!8701 = !DILocation(line: 1962, column: 9, scope: !8684)
!8702 = !DILocation(line: 1962, column: 7, scope: !8684)
!8703 = !DILocation(line: 1963, column: 3, scope: !8684)
!8704 = !DILocation(line: 1965, column: 31, scope: !8684)
!8705 = !DILocation(line: 1965, column: 9, scope: !8684)
!8706 = !DILocation(line: 1965, column: 7, scope: !8684)
!8707 = !DILocation(line: 1966, column: 3, scope: !8684)
!8708 = !DILocation(line: 1968, column: 3, scope: !8684)
!8709 = !DILocation(line: 1968, column: 6, scope: !8684)
!8710 = !DILocation(line: 1968, column: 21, scope: !8684)
!8711 = !DILocation(line: 1968, column: 29, scope: !8684)
!8712 = !DILocation(line: 1968, column: 35, scope: !8684)
!8713 = !DILocation(line: 1969, column: 3, scope: !8684)
!8714 = !DILocation(line: 1969, column: 6, scope: !8684)
!8715 = !DILocation(line: 1969, column: 21, scope: !8684)
!8716 = !DILocation(line: 1969, column: 29, scope: !8684)
!8717 = !DILocation(line: 1969, column: 35, scope: !8684)
!8718 = !DILocation(line: 1970, column: 3, scope: !8684)
!8719 = !DILocation(line: 1973, column: 7, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8663, file: !3, line: 1973, column: 6)
!8721 = !DILocation(line: 1973, column: 6, scope: !8663)
!8722 = !DILocation(line: 1974, column: 3, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 1973, column: 12)
!8724 = !DILocation(line: 1974, column: 6, scope: !8723)
!8725 = !DILocation(line: 1974, column: 21, scope: !8723)
!8726 = !DILocation(line: 1974, column: 29, scope: !8723)
!8727 = !DILocation(line: 1974, column: 35, scope: !8723)
!8728 = !DILocation(line: 1975, column: 39, scope: !8723)
!8729 = !DILocation(line: 1975, column: 3, scope: !8723)
!8730 = !DILocation(line: 1975, column: 6, scope: !8723)
!8731 = !DILocation(line: 1975, column: 21, scope: !8723)
!8732 = !DILocation(line: 1975, column: 29, scope: !8723)
!8733 = !DILocation(line: 1975, column: 36, scope: !8723)
!8734 = !DILocation(line: 1976, column: 3, scope: !8723)
!8735 = !DILocation(line: 1976, column: 6, scope: !8723)
!8736 = !DILocation(line: 1976, column: 21, scope: !8723)
!8737 = !DILocation(line: 1976, column: 29, scope: !8723)
!8738 = !DILocation(line: 1976, column: 35, scope: !8723)
!8739 = !DILocation(line: 1977, column: 39, scope: !8723)
!8740 = !DILocation(line: 1977, column: 3, scope: !8723)
!8741 = !DILocation(line: 1977, column: 6, scope: !8723)
!8742 = !DILocation(line: 1977, column: 21, scope: !8723)
!8743 = !DILocation(line: 1977, column: 29, scope: !8723)
!8744 = !DILocation(line: 1977, column: 36, scope: !8723)
!8745 = !DILocation(line: 1978, column: 2, scope: !8723)
!8746 = !DILocation(line: 1979, column: 3, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 1978, column: 9)
!8748 = !DILocation(line: 1979, column: 6, scope: !8747)
!8749 = !DILocation(line: 1979, column: 21, scope: !8747)
!8750 = !DILocation(line: 1979, column: 29, scope: !8747)
!8751 = !DILocation(line: 1979, column: 35, scope: !8747)
!8752 = !DILocation(line: 1980, column: 3, scope: !8747)
!8753 = !DILocation(line: 1980, column: 6, scope: !8747)
!8754 = !DILocation(line: 1980, column: 21, scope: !8747)
!8755 = !DILocation(line: 1980, column: 29, scope: !8747)
!8756 = !DILocation(line: 1980, column: 35, scope: !8747)
!8757 = !DILocation(line: 1982, column: 1, scope: !8663)
!8758 = distinct !DISubprogram(name: "cxd2841er_read_agc_gain_t_t2", scope: !3, file: !3, line: 1893, type: !8759, scopeLine: 1895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8759 = !DISubroutineType(types: !8760)
!8760 = !{!340, !4266, !332}
!8761 = !DILocalVariable(name: "priv", arg: 1, scope: !8758, file: !3, line: 1893, type: !4266)
!8762 = !DILocation(line: 1893, column: 64, scope: !8758)
!8763 = !DILocalVariable(name: "delsys", arg: 2, scope: !8758, file: !3, line: 1894, type: !332)
!8764 = !DILocation(line: 1894, column: 9, scope: !8758)
!8765 = !DILocalVariable(name: "data", scope: !8758, file: !3, line: 1896, type: !6526)
!8766 = !DILocation(line: 1896, column: 5, scope: !8758)
!8767 = !DILocation(line: 1899, column: 3, scope: !8758)
!8768 = !DILocation(line: 1899, column: 26, scope: !8758)
!8769 = !DILocation(line: 1899, column: 33, scope: !8758)
!8770 = !DILocation(line: 1899, column: 25, scope: !8758)
!8771 = !DILocation(line: 1898, column: 2, scope: !8758)
!8772 = !DILocation(line: 1900, column: 22, scope: !8758)
!8773 = !DILocation(line: 1900, column: 44, scope: !8758)
!8774 = !DILocation(line: 1900, column: 2, scope: !8758)
!8775 = !DILocation(line: 1905, column: 17, scope: !8758)
!8776 = !DILocation(line: 1905, column: 12, scope: !8758)
!8777 = !DILocation(line: 1905, column: 25, scope: !8758)
!8778 = !DILocation(line: 1905, column: 33, scope: !8758)
!8779 = !DILocation(line: 1905, column: 47, scope: !8758)
!8780 = !DILocation(line: 1905, column: 55, scope: !8758)
!8781 = !DILocation(line: 1905, column: 41, scope: !8758)
!8782 = !DILocation(line: 1905, column: 39, scope: !8758)
!8783 = !DILocation(line: 1905, column: 64, scope: !8758)
!8784 = !DILocation(line: 1905, column: 9, scope: !8758)
!8785 = !DILocation(line: 1905, column: 2, scope: !8758)
!8786 = distinct !DISubprogram(name: "cxd2841er_read_agc_gain_c", scope: !3, file: !3, line: 1878, type: !8759, scopeLine: 1880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8787 = !DILocalVariable(name: "priv", arg: 1, scope: !8786, file: !3, line: 1878, type: !4266)
!8788 = !DILocation(line: 1878, column: 61, scope: !8786)
!8789 = !DILocalVariable(name: "delsys", arg: 2, scope: !8786, file: !3, line: 1879, type: !332)
!8790 = !DILocation(line: 1879, column: 9, scope: !8786)
!8791 = !DILocalVariable(name: "data", scope: !8786, file: !3, line: 1881, type: !6526)
!8792 = !DILocation(line: 1881, column: 5, scope: !8786)
!8793 = !DILocation(line: 1884, column: 3, scope: !8786)
!8794 = !DILocation(line: 1883, column: 2, scope: !8786)
!8795 = !DILocation(line: 1885, column: 22, scope: !8786)
!8796 = !DILocation(line: 1885, column: 44, scope: !8786)
!8797 = !DILocation(line: 1885, column: 2, scope: !8786)
!8798 = !DILocation(line: 1890, column: 17, scope: !8786)
!8799 = !DILocation(line: 1890, column: 12, scope: !8786)
!8800 = !DILocation(line: 1890, column: 25, scope: !8786)
!8801 = !DILocation(line: 1890, column: 33, scope: !8786)
!8802 = !DILocation(line: 1890, column: 47, scope: !8786)
!8803 = !DILocation(line: 1890, column: 55, scope: !8786)
!8804 = !DILocation(line: 1890, column: 41, scope: !8786)
!8805 = !DILocation(line: 1890, column: 39, scope: !8786)
!8806 = !DILocation(line: 1890, column: 64, scope: !8786)
!8807 = !DILocation(line: 1890, column: 9, scope: !8786)
!8808 = !DILocation(line: 1890, column: 2, scope: !8786)
!8809 = distinct !DISubprogram(name: "cxd2841er_read_agc_gain_i", scope: !3, file: !3, line: 1908, type: !8759, scopeLine: 1910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8810 = !DILocalVariable(name: "priv", arg: 1, scope: !8809, file: !3, line: 1908, type: !4266)
!8811 = !DILocation(line: 1908, column: 61, scope: !8809)
!8812 = !DILocalVariable(name: "delsys", arg: 2, scope: !8809, file: !3, line: 1909, type: !332)
!8813 = !DILocation(line: 1909, column: 6, scope: !8809)
!8814 = !DILocalVariable(name: "data", scope: !8809, file: !3, line: 1911, type: !6526)
!8815 = !DILocation(line: 1911, column: 5, scope: !8809)
!8816 = !DILocation(line: 1914, column: 4, scope: !8809)
!8817 = !DILocation(line: 1913, column: 2, scope: !8809)
!8818 = !DILocation(line: 1915, column: 22, scope: !8809)
!8819 = !DILocation(line: 1915, column: 44, scope: !8809)
!8820 = !DILocation(line: 1915, column: 2, scope: !8809)
!8821 = !DILocation(line: 1921, column: 17, scope: !8809)
!8822 = !DILocation(line: 1921, column: 12, scope: !8809)
!8823 = !DILocation(line: 1921, column: 25, scope: !8809)
!8824 = !DILocation(line: 1921, column: 33, scope: !8809)
!8825 = !DILocation(line: 1921, column: 47, scope: !8809)
!8826 = !DILocation(line: 1921, column: 55, scope: !8809)
!8827 = !DILocation(line: 1921, column: 41, scope: !8809)
!8828 = !DILocation(line: 1921, column: 39, scope: !8809)
!8829 = !DILocation(line: 1921, column: 64, scope: !8809)
!8830 = !DILocation(line: 1921, column: 9, scope: !8809)
!8831 = !DILocation(line: 1921, column: 2, scope: !8809)
!8832 = distinct !DISubprogram(name: "cxd2841er_read_agc_gain_s", scope: !3, file: !3, line: 1924, type: !8833, scopeLine: 1925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8833 = !DISubroutineType(types: !8834)
!8834 = !{!340, !4266}
!8835 = !DILocalVariable(name: "priv", arg: 1, scope: !8832, file: !3, line: 1924, type: !4266)
!8836 = !DILocation(line: 1924, column: 61, scope: !8832)
!8837 = !DILocalVariable(name: "data", scope: !8832, file: !3, line: 1926, type: !6526)
!8838 = !DILocation(line: 1926, column: 5, scope: !8832)
!8839 = !DILocation(line: 1929, column: 22, scope: !8832)
!8840 = !DILocation(line: 1929, column: 2, scope: !8832)
!8841 = !DILocation(line: 1935, column: 22, scope: !8832)
!8842 = !DILocation(line: 1935, column: 44, scope: !8832)
!8843 = !DILocation(line: 1935, column: 2, scope: !8832)
!8844 = !DILocation(line: 1936, column: 17, scope: !8832)
!8845 = !DILocation(line: 1936, column: 12, scope: !8832)
!8846 = !DILocation(line: 1936, column: 25, scope: !8832)
!8847 = !DILocation(line: 1936, column: 33, scope: !8832)
!8848 = !DILocation(line: 1936, column: 47, scope: !8832)
!8849 = !DILocation(line: 1936, column: 55, scope: !8832)
!8850 = !DILocation(line: 1936, column: 41, scope: !8832)
!8851 = !DILocation(line: 1936, column: 39, scope: !8832)
!8852 = !DILocation(line: 1936, column: 64, scope: !8832)
!8853 = !DILocation(line: 1936, column: 9, scope: !8832)
!8854 = !DILocation(line: 1936, column: 2, scope: !8832)
!8855 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !5630, file: !5630, line: 308, type: !5631, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8856 = !DILocalVariable(name: "m", arg: 1, scope: !8855, file: !5630, line: 308, type: !2878)
!8857 = !DILocation(line: 308, column: 66, scope: !8855)
!8858 = !DILocation(line: 310, column: 10, scope: !8855)
!8859 = !DILocation(line: 310, column: 12, scope: !8855)
!8860 = !DILocation(line: 310, column: 34, scope: !8855)
!8861 = !DILocation(line: 310, column: 39, scope: !8855)
!8862 = !DILocation(line: 310, column: 2, scope: !8855)
!8863 = distinct !DISubprogram(name: "cxd2841er_read_snr_c", scope: !3, file: !3, line: 1741, type: !8864, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8864 = !DISubroutineType(types: !8865)
!8865 = !{!331, !4266, !1525}
!8866 = !DILocalVariable(name: "priv", arg: 1, scope: !8863, file: !3, line: 1741, type: !4266)
!8867 = !DILocation(line: 1741, column: 56, scope: !8863)
!8868 = !DILocalVariable(name: "snr", arg: 2, scope: !8863, file: !3, line: 1741, type: !1525)
!8869 = !DILocation(line: 1741, column: 67, scope: !8863)
!8870 = !DILocalVariable(name: "reg", scope: !8863, file: !3, line: 1743, type: !326)
!8871 = !DILocation(line: 1743, column: 6, scope: !8863)
!8872 = !DILocalVariable(name: "data", scope: !8863, file: !3, line: 1744, type: !6526)
!8873 = !DILocation(line: 1744, column: 5, scope: !8863)
!8874 = !DILocalVariable(name: "qam", scope: !8863, file: !3, line: 1745, type: !315)
!8875 = !DILocation(line: 1745, column: 33, scope: !8863)
!8876 = !DILocation(line: 1747, column: 3, scope: !8863)
!8877 = !DILocation(line: 1747, column: 7, scope: !8863)
!8878 = !DILocation(line: 1748, column: 6, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 1748, column: 6)
!8880 = !DILocation(line: 1748, column: 12, scope: !8879)
!8881 = !DILocation(line: 1748, column: 18, scope: !8879)
!8882 = !DILocation(line: 1748, column: 6, scope: !8863)
!8883 = !DILocation(line: 1752, column: 3, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1748, column: 38)
!8885 = !DILocation(line: 1755, column: 24, scope: !8863)
!8886 = !DILocation(line: 1755, column: 2, scope: !8863)
!8887 = !DILocation(line: 1756, column: 22, scope: !8863)
!8888 = !DILocation(line: 1756, column: 2, scope: !8863)
!8889 = !DILocation(line: 1757, column: 22, scope: !8863)
!8890 = !DILocation(line: 1757, column: 44, scope: !8863)
!8891 = !DILocation(line: 1757, column: 2, scope: !8863)
!8892 = !DILocation(line: 1758, column: 42, scope: !8863)
!8893 = !DILocation(line: 1758, column: 50, scope: !8863)
!8894 = !DILocation(line: 1758, column: 6, scope: !8863)
!8895 = !DILocation(line: 1759, column: 22, scope: !8863)
!8896 = !DILocation(line: 1759, column: 44, scope: !8863)
!8897 = !DILocation(line: 1759, column: 2, scope: !8863)
!8898 = !DILocation(line: 1760, column: 26, scope: !8863)
!8899 = !DILocation(line: 1760, column: 2, scope: !8863)
!8900 = !DILocation(line: 1762, column: 15, scope: !8863)
!8901 = !DILocation(line: 1762, column: 22, scope: !8863)
!8902 = !DILocation(line: 1762, column: 29, scope: !8863)
!8903 = !DILocation(line: 1762, column: 42, scope: !8863)
!8904 = !DILocation(line: 1762, column: 37, scope: !8863)
!8905 = !DILocation(line: 1762, column: 35, scope: !8863)
!8906 = !DILocation(line: 1762, column: 6, scope: !8863)
!8907 = !DILocation(line: 1763, column: 6, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 1763, column: 6)
!8909 = !DILocation(line: 1763, column: 10, scope: !8908)
!8910 = !DILocation(line: 1763, column: 6, scope: !8863)
!8911 = !DILocation(line: 1766, column: 3, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 1763, column: 16)
!8913 = !DILocation(line: 1769, column: 10, scope: !8863)
!8914 = !DILocation(line: 1769, column: 2, scope: !8863)
!8915 = !DILocation(line: 1774, column: 7, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 1774, column: 7)
!8917 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 1769, column: 15)
!8918 = !DILocation(line: 1774, column: 11, scope: !8916)
!8919 = !DILocation(line: 1774, column: 7, scope: !8917)
!8920 = !DILocation(line: 1775, column: 8, scope: !8916)
!8921 = !DILocation(line: 1775, column: 4, scope: !8916)
!8922 = !DILocation(line: 1776, column: 34, scope: !8917)
!8923 = !DILocation(line: 1776, column: 25, scope: !8917)
!8924 = !DILocation(line: 1776, column: 14, scope: !8917)
!8925 = !DILocation(line: 1776, column: 39, scope: !8917)
!8926 = !DILocation(line: 1776, column: 4, scope: !8917)
!8927 = !DILocation(line: 1776, column: 8, scope: !8917)
!8928 = !DILocation(line: 1777, column: 3, scope: !8917)
!8929 = !DILocation(line: 1781, column: 7, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 1781, column: 7)
!8931 = !DILocation(line: 1781, column: 11, scope: !8930)
!8932 = !DILocation(line: 1781, column: 7, scope: !8917)
!8933 = !DILocation(line: 1782, column: 8, scope: !8930)
!8934 = !DILocation(line: 1782, column: 4, scope: !8930)
!8935 = !DILocation(line: 1783, column: 34, scope: !8917)
!8936 = !DILocation(line: 1783, column: 25, scope: !8917)
!8937 = !DILocation(line: 1783, column: 14, scope: !8917)
!8938 = !DILocation(line: 1783, column: 39, scope: !8917)
!8939 = !DILocation(line: 1783, column: 4, scope: !8917)
!8940 = !DILocation(line: 1783, column: 8, scope: !8917)
!8941 = !DILocation(line: 1784, column: 3, scope: !8917)
!8942 = !DILocation(line: 1786, column: 3, scope: !8917)
!8943 = !DILocation(line: 1789, column: 2, scope: !8863)
!8944 = !DILocation(line: 1790, column: 1, scope: !8863)
!8945 = distinct !DISubprogram(name: "cxd2841er_read_snr_t", scope: !3, file: !3, line: 1792, type: !8864, scopeLine: 1793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!8946 = !DILocalVariable(name: "priv", arg: 1, scope: !8945, file: !3, line: 1792, type: !4266)
!8947 = !DILocation(line: 1792, column: 56, scope: !8945)
!8948 = !DILocalVariable(name: "snr", arg: 2, scope: !8945, file: !3, line: 1792, type: !1525)
!8949 = !DILocation(line: 1792, column: 67, scope: !8945)
!8950 = !DILocalVariable(name: "reg", scope: !8945, file: !3, line: 1794, type: !326)
!8951 = !DILocation(line: 1794, column: 6, scope: !8945)
!8952 = !DILocalVariable(name: "data", scope: !8945, file: !3, line: 1795, type: !6526)
!8953 = !DILocation(line: 1795, column: 5, scope: !8945)
!8954 = !DILocation(line: 1797, column: 3, scope: !8945)
!8955 = !DILocation(line: 1797, column: 7, scope: !8945)
!8956 = !DILocation(line: 1798, column: 6, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 1798, column: 6)
!8958 = !DILocation(line: 1798, column: 12, scope: !8957)
!8959 = !DILocation(line: 1798, column: 18, scope: !8957)
!8960 = !DILocation(line: 1798, column: 6, scope: !8945)
!8961 = !DILocation(line: 1801, column: 3, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8957, file: !3, line: 1798, column: 38)
!8963 = !DILocation(line: 1804, column: 24, scope: !8945)
!8964 = !DILocation(line: 1804, column: 2, scope: !8945)
!8965 = !DILocation(line: 1805, column: 22, scope: !8945)
!8966 = !DILocation(line: 1805, column: 2, scope: !8945)
!8967 = !DILocation(line: 1806, column: 22, scope: !8945)
!8968 = !DILocation(line: 1806, column: 44, scope: !8945)
!8969 = !DILocation(line: 1806, column: 2, scope: !8945)
!8970 = !DILocation(line: 1807, column: 26, scope: !8945)
!8971 = !DILocation(line: 1807, column: 2, scope: !8945)
!8972 = !DILocation(line: 1809, column: 14, scope: !8945)
!8973 = !DILocation(line: 1809, column: 9, scope: !8945)
!8974 = !DILocation(line: 1809, column: 22, scope: !8945)
!8975 = !DILocation(line: 1809, column: 35, scope: !8945)
!8976 = !DILocation(line: 1809, column: 30, scope: !8945)
!8977 = !DILocation(line: 1809, column: 28, scope: !8945)
!8978 = !DILocation(line: 1809, column: 6, scope: !8945)
!8979 = !DILocation(line: 1810, column: 6, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 1810, column: 6)
!8981 = !DILocation(line: 1810, column: 10, scope: !8980)
!8982 = !DILocation(line: 1810, column: 6, scope: !8945)
!8983 = !DILocation(line: 1813, column: 3, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8980, file: !3, line: 1810, column: 16)
!8985 = !DILocation(line: 1815, column: 6, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 1815, column: 6)
!8987 = !DILocation(line: 1815, column: 10, scope: !8986)
!8988 = !DILocation(line: 1815, column: 6, scope: !8945)
!8989 = !DILocation(line: 1816, column: 7, scope: !8986)
!8990 = !DILocation(line: 1816, column: 3, scope: !8986)
!8991 = !DILocation(line: 1817, column: 17, scope: !8945)
!8992 = !DILocation(line: 1817, column: 37, scope: !8945)
!8993 = !DILocation(line: 1817, column: 35, scope: !8945)
!8994 = !DILocation(line: 1817, column: 63, scope: !8945)
!8995 = !DILocation(line: 1817, column: 13, scope: !8945)
!8996 = !DILocation(line: 1817, column: 3, scope: !8945)
!8997 = !DILocation(line: 1817, column: 7, scope: !8945)
!8998 = !DILocation(line: 1818, column: 2, scope: !8945)
!8999 = !DILocation(line: 1819, column: 1, scope: !8945)
!9000 = distinct !DISubprogram(name: "cxd2841er_read_snr_t2", scope: !3, file: !3, line: 1821, type: !8864, scopeLine: 1822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9001 = !DILocalVariable(name: "priv", arg: 1, scope: !9000, file: !3, line: 1821, type: !4266)
!9002 = !DILocation(line: 1821, column: 57, scope: !9000)
!9003 = !DILocalVariable(name: "snr", arg: 2, scope: !9000, file: !3, line: 1821, type: !1525)
!9004 = !DILocation(line: 1821, column: 68, scope: !9000)
!9005 = !DILocalVariable(name: "reg", scope: !9000, file: !3, line: 1823, type: !326)
!9006 = !DILocation(line: 1823, column: 6, scope: !9000)
!9007 = !DILocalVariable(name: "data", scope: !9000, file: !3, line: 1824, type: !6526)
!9008 = !DILocation(line: 1824, column: 5, scope: !9000)
!9009 = !DILocation(line: 1826, column: 3, scope: !9000)
!9010 = !DILocation(line: 1826, column: 7, scope: !9000)
!9011 = !DILocation(line: 1827, column: 6, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1827, column: 6)
!9013 = !DILocation(line: 1827, column: 12, scope: !9012)
!9014 = !DILocation(line: 1827, column: 18, scope: !9012)
!9015 = !DILocation(line: 1827, column: 6, scope: !9000)
!9016 = !DILocation(line: 1830, column: 3, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 1827, column: 38)
!9018 = !DILocation(line: 1833, column: 24, scope: !9000)
!9019 = !DILocation(line: 1833, column: 2, scope: !9000)
!9020 = !DILocation(line: 1834, column: 22, scope: !9000)
!9021 = !DILocation(line: 1834, column: 2, scope: !9000)
!9022 = !DILocation(line: 1835, column: 22, scope: !9000)
!9023 = !DILocation(line: 1835, column: 44, scope: !9000)
!9024 = !DILocation(line: 1835, column: 2, scope: !9000)
!9025 = !DILocation(line: 1836, column: 26, scope: !9000)
!9026 = !DILocation(line: 1836, column: 2, scope: !9000)
!9027 = !DILocation(line: 1838, column: 14, scope: !9000)
!9028 = !DILocation(line: 1838, column: 9, scope: !9000)
!9029 = !DILocation(line: 1838, column: 22, scope: !9000)
!9030 = !DILocation(line: 1838, column: 35, scope: !9000)
!9031 = !DILocation(line: 1838, column: 30, scope: !9000)
!9032 = !DILocation(line: 1838, column: 28, scope: !9000)
!9033 = !DILocation(line: 1838, column: 6, scope: !9000)
!9034 = !DILocation(line: 1839, column: 6, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1839, column: 6)
!9036 = !DILocation(line: 1839, column: 10, scope: !9035)
!9037 = !DILocation(line: 1839, column: 6, scope: !9000)
!9038 = !DILocation(line: 1842, column: 3, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9035, file: !3, line: 1839, column: 16)
!9040 = !DILocation(line: 1844, column: 6, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 1844, column: 6)
!9042 = !DILocation(line: 1844, column: 10, scope: !9041)
!9043 = !DILocation(line: 1844, column: 6, scope: !9000)
!9044 = !DILocation(line: 1845, column: 7, scope: !9041)
!9045 = !DILocation(line: 1845, column: 3, scope: !9041)
!9046 = !DILocation(line: 1846, column: 17, scope: !9000)
!9047 = !DILocation(line: 1846, column: 37, scope: !9000)
!9048 = !DILocation(line: 1846, column: 35, scope: !9000)
!9049 = !DILocation(line: 1846, column: 64, scope: !9000)
!9050 = !DILocation(line: 1846, column: 13, scope: !9000)
!9051 = !DILocation(line: 1846, column: 3, scope: !9000)
!9052 = !DILocation(line: 1846, column: 7, scope: !9000)
!9053 = !DILocation(line: 1847, column: 2, scope: !9000)
!9054 = !DILocation(line: 1848, column: 1, scope: !9000)
!9055 = distinct !DISubprogram(name: "cxd2841er_read_snr_i", scope: !3, file: !3, line: 1850, type: !8864, scopeLine: 1851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9056 = !DILocalVariable(name: "priv", arg: 1, scope: !9055, file: !3, line: 1850, type: !4266)
!9057 = !DILocation(line: 1850, column: 56, scope: !9055)
!9058 = !DILocalVariable(name: "snr", arg: 2, scope: !9055, file: !3, line: 1850, type: !1525)
!9059 = !DILocation(line: 1850, column: 67, scope: !9055)
!9060 = !DILocalVariable(name: "reg", scope: !9055, file: !3, line: 1852, type: !326)
!9061 = !DILocation(line: 1852, column: 6, scope: !9055)
!9062 = !DILocalVariable(name: "data", scope: !9055, file: !3, line: 1853, type: !6526)
!9063 = !DILocation(line: 1853, column: 5, scope: !9055)
!9064 = !DILocation(line: 1855, column: 3, scope: !9055)
!9065 = !DILocation(line: 1855, column: 7, scope: !9055)
!9066 = !DILocation(line: 1856, column: 6, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 1856, column: 6)
!9068 = !DILocation(line: 1856, column: 12, scope: !9067)
!9069 = !DILocation(line: 1856, column: 18, scope: !9067)
!9070 = !DILocation(line: 1856, column: 6, scope: !9055)
!9071 = !DILocation(line: 1860, column: 3, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 1856, column: 38)
!9073 = !DILocation(line: 1863, column: 24, scope: !9055)
!9074 = !DILocation(line: 1863, column: 2, scope: !9055)
!9075 = !DILocation(line: 1864, column: 22, scope: !9055)
!9076 = !DILocation(line: 1864, column: 2, scope: !9055)
!9077 = !DILocation(line: 1865, column: 22, scope: !9055)
!9078 = !DILocation(line: 1865, column: 44, scope: !9055)
!9079 = !DILocation(line: 1865, column: 2, scope: !9055)
!9080 = !DILocation(line: 1866, column: 26, scope: !9055)
!9081 = !DILocation(line: 1866, column: 2, scope: !9055)
!9082 = !DILocation(line: 1868, column: 14, scope: !9055)
!9083 = !DILocation(line: 1868, column: 9, scope: !9055)
!9084 = !DILocation(line: 1868, column: 22, scope: !9055)
!9085 = !DILocation(line: 1868, column: 35, scope: !9055)
!9086 = !DILocation(line: 1868, column: 30, scope: !9055)
!9087 = !DILocation(line: 1868, column: 28, scope: !9055)
!9088 = !DILocation(line: 1868, column: 6, scope: !9055)
!9089 = !DILocation(line: 1869, column: 6, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9055, file: !3, line: 1869, column: 6)
!9091 = !DILocation(line: 1869, column: 10, scope: !9090)
!9092 = !DILocation(line: 1869, column: 6, scope: !9055)
!9093 = !DILocation(line: 1872, column: 3, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 1869, column: 16)
!9095 = !DILocation(line: 1874, column: 27, scope: !9055)
!9096 = !DILocation(line: 1874, column: 18, scope: !9055)
!9097 = !DILocation(line: 1874, column: 32, scope: !9055)
!9098 = !DILocation(line: 1874, column: 15, scope: !9055)
!9099 = !DILocation(line: 1874, column: 39, scope: !9055)
!9100 = !DILocation(line: 1874, column: 3, scope: !9055)
!9101 = !DILocation(line: 1874, column: 7, scope: !9055)
!9102 = !DILocation(line: 1875, column: 2, scope: !9055)
!9103 = !DILocation(line: 1876, column: 1, scope: !9055)
!9104 = !DILocalVariable(name: "priv", arg: 1, scope: !4469, file: !3, line: 1669, type: !4266)
!9105 = !DILocation(line: 1669, column: 59, scope: !4469)
!9106 = !DILocalVariable(name: "delsys", arg: 2, scope: !4469, file: !3, line: 1670, type: !332)
!9107 = !DILocation(line: 1670, column: 6, scope: !4469)
!9108 = !DILocalVariable(name: "snr", arg: 3, scope: !4469, file: !3, line: 1670, type: !1525)
!9109 = !DILocation(line: 1670, column: 19, scope: !4469)
!9110 = !DILocalVariable(name: "data", scope: !4469, file: !3, line: 1672, type: !6654)
!9111 = !DILocation(line: 1672, column: 5, scope: !4469)
!9112 = !DILocalVariable(name: "res", scope: !4469, file: !3, line: 1673, type: !326)
!9113 = !DILocation(line: 1673, column: 6, scope: !4469)
!9114 = !DILocalVariable(name: "value", scope: !4469, file: !3, line: 1673, type: !326)
!9115 = !DILocation(line: 1673, column: 15, scope: !4469)
!9116 = !DILocalVariable(name: "min_index", scope: !4469, file: !3, line: 1674, type: !331)
!9117 = !DILocation(line: 1674, column: 6, scope: !4469)
!9118 = !DILocalVariable(name: "max_index", scope: !4469, file: !3, line: 1674, type: !331)
!9119 = !DILocation(line: 1674, column: 17, scope: !4469)
!9120 = !DILocalVariable(name: "index", scope: !4469, file: !3, line: 1674, type: !331)
!9121 = !DILocation(line: 1674, column: 28, scope: !4469)
!9122 = !DILocation(line: 1677, column: 24, scope: !4469)
!9123 = !DILocation(line: 1677, column: 2, scope: !4469)
!9124 = !DILocation(line: 1679, column: 22, scope: !4469)
!9125 = !DILocation(line: 1679, column: 2, scope: !4469)
!9126 = !DILocation(line: 1686, column: 22, scope: !4469)
!9127 = !DILocation(line: 1686, column: 44, scope: !4469)
!9128 = !DILocation(line: 1686, column: 2, scope: !4469)
!9129 = !DILocation(line: 1687, column: 26, scope: !4469)
!9130 = !DILocation(line: 1687, column: 2, scope: !4469)
!9131 = !DILocation(line: 1689, column: 6, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 1689, column: 6)
!9133 = !DILocation(line: 1689, column: 14, scope: !9132)
!9134 = !DILocation(line: 1689, column: 6, scope: !4469)
!9135 = !DILocation(line: 1690, column: 18, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9132, file: !3, line: 1689, column: 22)
!9137 = !DILocation(line: 1690, column: 26, scope: !9136)
!9138 = !DILocation(line: 1690, column: 34, scope: !9136)
!9139 = !DILocation(line: 1690, column: 48, scope: !9136)
!9140 = !DILocation(line: 1690, column: 56, scope: !9136)
!9141 = !DILocation(line: 1690, column: 40, scope: !9136)
!9142 = !DILocation(line: 1690, column: 9, scope: !9136)
!9143 = !DILocation(line: 1691, column: 13, scope: !9136)
!9144 = !DILocation(line: 1692, column: 7, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 1692, column: 7)
!9146 = !DILocation(line: 1692, column: 14, scope: !9145)
!9147 = !DILocation(line: 1692, column: 7, scope: !9136)
!9148 = !DILocation(line: 1693, column: 12, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9145, file: !3, line: 1692, column: 27)
!9150 = !DILocation(line: 1694, column: 14, scope: !9149)
!9151 = !DILocation(line: 1695, column: 3, scope: !9149)
!9152 = !DILocation(line: 1696, column: 12, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9145, file: !3, line: 1695, column: 10)
!9154 = !DILocation(line: 1697, column: 14, scope: !9153)
!9155 = !DILocation(line: 1699, column: 7, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 1699, column: 7)
!9157 = !DILocation(line: 1699, column: 16, scope: !9156)
!9158 = !DILocation(line: 1699, column: 24, scope: !9156)
!9159 = !DILocation(line: 1699, column: 35, scope: !9156)
!9160 = !DILocation(line: 1699, column: 13, scope: !9156)
!9161 = !DILocation(line: 1699, column: 7, scope: !9136)
!9162 = !DILocation(line: 1700, column: 10, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 1699, column: 42)
!9164 = !DILocation(line: 1700, column: 18, scope: !9163)
!9165 = !DILocation(line: 1700, column: 29, scope: !9163)
!9166 = !DILocation(line: 1700, column: 8, scope: !9163)
!9167 = !DILocation(line: 1701, column: 4, scope: !9163)
!9168 = !DILocation(line: 1703, column: 7, scope: !9169)
!9169 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 1703, column: 7)
!9170 = !DILocation(line: 1703, column: 16, scope: !9169)
!9171 = !DILocation(line: 1703, column: 24, scope: !9169)
!9172 = !DILocation(line: 1703, column: 35, scope: !9169)
!9173 = !DILocation(line: 1703, column: 13, scope: !9169)
!9174 = !DILocation(line: 1703, column: 7, scope: !9136)
!9175 = !DILocation(line: 1704, column: 10, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 1703, column: 42)
!9177 = !DILocation(line: 1704, column: 18, scope: !9176)
!9178 = !DILocation(line: 1704, column: 29, scope: !9176)
!9179 = !DILocation(line: 1704, column: 8, scope: !9176)
!9180 = !DILocation(line: 1705, column: 4, scope: !9176)
!9181 = !DILocation(line: 1707, column: 3, scope: !9136)
!9182 = !DILocation(line: 1707, column: 11, scope: !9136)
!9183 = !DILocation(line: 1707, column: 23, scope: !9136)
!9184 = !DILocation(line: 1707, column: 21, scope: !9136)
!9185 = !DILocation(line: 1707, column: 34, scope: !9136)
!9186 = !DILocation(line: 1708, column: 13, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9136, file: !3, line: 1707, column: 39)
!9188 = !DILocation(line: 1708, column: 25, scope: !9187)
!9189 = !DILocation(line: 1708, column: 23, scope: !9187)
!9190 = !DILocation(line: 1708, column: 36, scope: !9187)
!9191 = !DILocation(line: 1708, column: 10, scope: !9187)
!9192 = !DILocation(line: 1709, column: 8, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 1709, column: 8)
!9194 = !DILocation(line: 1709, column: 17, scope: !9193)
!9195 = !DILocation(line: 1709, column: 25, scope: !9193)
!9196 = !DILocation(line: 1709, column: 32, scope: !9193)
!9197 = !DILocation(line: 1709, column: 14, scope: !9193)
!9198 = !DILocation(line: 1709, column: 8, scope: !9187)
!9199 = !DILocation(line: 1710, column: 11, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 1709, column: 39)
!9201 = !DILocation(line: 1710, column: 19, scope: !9200)
!9202 = !DILocation(line: 1710, column: 26, scope: !9200)
!9203 = !DILocation(line: 1710, column: 9, scope: !9200)
!9204 = !DILocation(line: 1711, column: 5, scope: !9200)
!9205 = !DILocation(line: 1712, column: 15, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9193, file: !3, line: 1712, column: 15)
!9207 = !DILocation(line: 1712, column: 23, scope: !9206)
!9208 = !DILocation(line: 1712, column: 31, scope: !9206)
!9209 = !DILocation(line: 1712, column: 38, scope: !9206)
!9210 = !DILocation(line: 1712, column: 21, scope: !9206)
!9211 = !DILocation(line: 1712, column: 15, scope: !9193)
!9212 = !DILocation(line: 1713, column: 17, scope: !9206)
!9213 = !DILocation(line: 1713, column: 15, scope: !9206)
!9214 = !DILocation(line: 1713, column: 5, scope: !9206)
!9215 = !DILocation(line: 1715, column: 17, scope: !9206)
!9216 = !DILocation(line: 1715, column: 15, scope: !9206)
!9217 = !DILocation(line: 1716, column: 9, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 1716, column: 8)
!9219 = !DILocation(line: 1716, column: 21, scope: !9218)
!9220 = !DILocation(line: 1716, column: 19, scope: !9218)
!9221 = !DILocation(line: 1716, column: 32, scope: !9218)
!9222 = !DILocation(line: 1716, column: 8, scope: !9187)
!9223 = !DILocation(line: 1717, column: 9, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 1717, column: 9)
!9225 = distinct !DILexicalBlock(scope: !9218, file: !3, line: 1716, column: 38)
!9226 = !DILocation(line: 1717, column: 18, scope: !9224)
!9227 = !DILocation(line: 1717, column: 26, scope: !9224)
!9228 = !DILocation(line: 1717, column: 37, scope: !9224)
!9229 = !DILocation(line: 1717, column: 15, scope: !9224)
!9230 = !DILocation(line: 1717, column: 9, scope: !9225)
!9231 = !DILocation(line: 1718, column: 12, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 1717, column: 44)
!9233 = !DILocation(line: 1718, column: 20, scope: !9232)
!9234 = !DILocation(line: 1718, column: 31, scope: !9232)
!9235 = !DILocation(line: 1718, column: 10, scope: !9232)
!9236 = !DILocation(line: 1719, column: 6, scope: !9232)
!9237 = !DILocation(line: 1721, column: 12, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 1720, column: 12)
!9239 = !DILocation(line: 1721, column: 20, scope: !9238)
!9240 = !DILocation(line: 1721, column: 31, scope: !9238)
!9241 = !DILocation(line: 1721, column: 10, scope: !9238)
!9242 = !DILocation(line: 1722, column: 6, scope: !9238)
!9243 = distinct !{!9243, !9181, !9244}
!9244 = !DILocation(line: 1725, column: 3, scope: !9136)
!9245 = !DILocation(line: 1726, column: 2, scope: !9136)
!9246 = !DILocation(line: 1729, column: 3, scope: !9247)
!9247 = distinct !DILexicalBlock(scope: !9132, file: !3, line: 1726, column: 9)
!9248 = !DILocation(line: 1689, column: 16, scope: !9132)
!9249 = !DILabel(scope: !4469, name: "done", file: !3, line: 1731)
!9250 = !DILocation(line: 1731, column: 1, scope: !4469)
!9251 = !DILocation(line: 1732, column: 9, scope: !4469)
!9252 = !DILocation(line: 1732, column: 3, scope: !4469)
!9253 = !DILocation(line: 1732, column: 7, scope: !4469)
!9254 = !DILocation(line: 1733, column: 2, scope: !4469)
!9255 = !DILocation(line: 1734, column: 1, scope: !4469)
!9256 = distinct !DISubprogram(name: "cxd2841er_freeze_regs", scope: !3, file: !3, line: 1650, type: !5870, scopeLine: 1651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9257 = !DILocalVariable(name: "priv", arg: 1, scope: !9256, file: !3, line: 1650, type: !4266)
!9258 = !DILocation(line: 1650, column: 57, scope: !9256)
!9259 = !DILocation(line: 1656, column: 22, scope: !9256)
!9260 = !DILocation(line: 1656, column: 2, scope: !9256)
!9261 = !DILocation(line: 1657, column: 2, scope: !9256)
!9262 = distinct !DISubprogram(name: "cxd2841er_unfreeze_regs", scope: !3, file: !3, line: 1660, type: !5870, scopeLine: 1661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9263 = !DILocalVariable(name: "priv", arg: 1, scope: !9262, file: !3, line: 1660, type: !4266)
!9264 = !DILocation(line: 1660, column: 59, scope: !9262)
!9265 = !DILocation(line: 1665, column: 22, scope: !9262)
!9266 = !DILocation(line: 1665, column: 2, scope: !9262)
!9267 = !DILocation(line: 1666, column: 2, scope: !9262)
!9268 = distinct !DISubprogram(name: "sony_log", scope: !3, file: !3, line: 1736, type: !9269, scopeLine: 1737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9269 = !DISubroutineType(types: !9270)
!9270 = !{!761, !761}
!9271 = !DILocalVariable(name: "x", arg: 1, scope: !9268, file: !3, line: 1736, type: !761)
!9272 = !DILocation(line: 1736, column: 35, scope: !9268)
!9273 = !DILocation(line: 1738, column: 31, scope: !9268)
!9274 = !DILocation(line: 1738, column: 23, scope: !9268)
!9275 = !DILocation(line: 1738, column: 33, scope: !9268)
!9276 = !DILocation(line: 1738, column: 21, scope: !9268)
!9277 = !DILocation(line: 1738, column: 39, scope: !9268)
!9278 = !DILocation(line: 1738, column: 55, scope: !9268)
!9279 = !DILocation(line: 1738, column: 2, scope: !9268)
!9280 = distinct !DISubprogram(name: "cxd2841er_read_packet_errors_c", scope: !3, file: !3, line: 1318, type: !8864, scopeLine: 1320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9281 = !DILocalVariable(name: "priv", arg: 1, scope: !9280, file: !3, line: 1319, type: !4266)
!9282 = !DILocation(line: 1319, column: 26, scope: !9280)
!9283 = !DILocalVariable(name: "penum", arg: 2, scope: !9280, file: !3, line: 1319, type: !1525)
!9284 = !DILocation(line: 1319, column: 37, scope: !9280)
!9285 = !DILocalVariable(name: "data", scope: !9280, file: !3, line: 1321, type: !6654)
!9286 = !DILocation(line: 1321, column: 5, scope: !9280)
!9287 = !DILocation(line: 1323, column: 3, scope: !9280)
!9288 = !DILocation(line: 1323, column: 9, scope: !9280)
!9289 = !DILocation(line: 1324, column: 6, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 1324, column: 6)
!9291 = !DILocation(line: 1324, column: 12, scope: !9290)
!9292 = !DILocation(line: 1324, column: 18, scope: !9290)
!9293 = !DILocation(line: 1324, column: 6, scope: !9280)
!9294 = !DILocation(line: 1327, column: 3, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 1324, column: 38)
!9296 = !DILocation(line: 1329, column: 22, scope: !9280)
!9297 = !DILocation(line: 1329, column: 2, scope: !9280)
!9298 = !DILocation(line: 1330, column: 22, scope: !9280)
!9299 = !DILocation(line: 1330, column: 44, scope: !9280)
!9300 = !DILocation(line: 1330, column: 2, scope: !9280)
!9301 = !DILocation(line: 1331, column: 6, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 1331, column: 6)
!9303 = !DILocation(line: 1331, column: 14, scope: !9302)
!9304 = !DILocation(line: 1331, column: 6, scope: !9280)
!9305 = !DILocation(line: 1332, column: 18, scope: !9302)
!9306 = !DILocation(line: 1332, column: 13, scope: !9302)
!9307 = !DILocation(line: 1332, column: 26, scope: !9302)
!9308 = !DILocation(line: 1332, column: 39, scope: !9302)
!9309 = !DILocation(line: 1332, column: 34, scope: !9302)
!9310 = !DILocation(line: 1332, column: 32, scope: !9302)
!9311 = !DILocation(line: 1332, column: 4, scope: !9302)
!9312 = !DILocation(line: 1332, column: 10, scope: !9302)
!9313 = !DILocation(line: 1332, column: 3, scope: !9302)
!9314 = !DILocation(line: 1333, column: 2, scope: !9280)
!9315 = !DILocation(line: 1334, column: 1, scope: !9280)
!9316 = distinct !DISubprogram(name: "cxd2841er_read_packet_errors_t", scope: !3, file: !3, line: 1336, type: !8864, scopeLine: 1338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9317 = !DILocalVariable(name: "priv", arg: 1, scope: !9316, file: !3, line: 1337, type: !4266)
!9318 = !DILocation(line: 1337, column: 26, scope: !9316)
!9319 = !DILocalVariable(name: "penum", arg: 2, scope: !9316, file: !3, line: 1337, type: !1525)
!9320 = !DILocation(line: 1337, column: 37, scope: !9316)
!9321 = !DILocalVariable(name: "data", scope: !9316, file: !3, line: 1339, type: !6654)
!9322 = !DILocation(line: 1339, column: 5, scope: !9316)
!9323 = !DILocation(line: 1341, column: 3, scope: !9316)
!9324 = !DILocation(line: 1341, column: 9, scope: !9316)
!9325 = !DILocation(line: 1342, column: 6, scope: !9326)
!9326 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 1342, column: 6)
!9327 = !DILocation(line: 1342, column: 12, scope: !9326)
!9328 = !DILocation(line: 1342, column: 18, scope: !9326)
!9329 = !DILocation(line: 1342, column: 6, scope: !9316)
!9330 = !DILocation(line: 1345, column: 3, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9326, file: !3, line: 1342, column: 38)
!9332 = !DILocation(line: 1347, column: 22, scope: !9316)
!9333 = !DILocation(line: 1347, column: 2, scope: !9316)
!9334 = !DILocation(line: 1348, column: 22, scope: !9316)
!9335 = !DILocation(line: 1348, column: 44, scope: !9316)
!9336 = !DILocation(line: 1348, column: 2, scope: !9316)
!9337 = !DILocation(line: 1349, column: 6, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9316, file: !3, line: 1349, column: 6)
!9339 = !DILocation(line: 1349, column: 14, scope: !9338)
!9340 = !DILocation(line: 1349, column: 6, scope: !9316)
!9341 = !DILocation(line: 1350, column: 18, scope: !9338)
!9342 = !DILocation(line: 1350, column: 13, scope: !9338)
!9343 = !DILocation(line: 1350, column: 26, scope: !9338)
!9344 = !DILocation(line: 1350, column: 39, scope: !9338)
!9345 = !DILocation(line: 1350, column: 34, scope: !9338)
!9346 = !DILocation(line: 1350, column: 32, scope: !9338)
!9347 = !DILocation(line: 1350, column: 4, scope: !9338)
!9348 = !DILocation(line: 1350, column: 10, scope: !9338)
!9349 = !DILocation(line: 1350, column: 3, scope: !9338)
!9350 = !DILocation(line: 1351, column: 2, scope: !9316)
!9351 = !DILocation(line: 1352, column: 1, scope: !9316)
!9352 = distinct !DISubprogram(name: "cxd2841er_read_packet_errors_t2", scope: !3, file: !3, line: 1354, type: !8864, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9353 = !DILocalVariable(name: "priv", arg: 1, scope: !9352, file: !3, line: 1355, type: !4266)
!9354 = !DILocation(line: 1355, column: 26, scope: !9352)
!9355 = !DILocalVariable(name: "penum", arg: 2, scope: !9352, file: !3, line: 1355, type: !1525)
!9356 = !DILocation(line: 1355, column: 37, scope: !9352)
!9357 = !DILocalVariable(name: "data", scope: !9352, file: !3, line: 1357, type: !6654)
!9358 = !DILocation(line: 1357, column: 5, scope: !9352)
!9359 = !DILocation(line: 1359, column: 3, scope: !9352)
!9360 = !DILocation(line: 1359, column: 9, scope: !9352)
!9361 = !DILocation(line: 1360, column: 6, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9352, file: !3, line: 1360, column: 6)
!9363 = !DILocation(line: 1360, column: 12, scope: !9362)
!9364 = !DILocation(line: 1360, column: 18, scope: !9362)
!9365 = !DILocation(line: 1360, column: 6, scope: !9352)
!9366 = !DILocation(line: 1363, column: 3, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 1360, column: 38)
!9368 = !DILocation(line: 1365, column: 22, scope: !9352)
!9369 = !DILocation(line: 1365, column: 2, scope: !9352)
!9370 = !DILocation(line: 1366, column: 22, scope: !9352)
!9371 = !DILocation(line: 1366, column: 44, scope: !9352)
!9372 = !DILocation(line: 1366, column: 2, scope: !9352)
!9373 = !DILocation(line: 1367, column: 6, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9352, file: !3, line: 1367, column: 6)
!9375 = !DILocation(line: 1367, column: 14, scope: !9374)
!9376 = !DILocation(line: 1367, column: 6, scope: !9352)
!9377 = !DILocation(line: 1368, column: 18, scope: !9374)
!9378 = !DILocation(line: 1368, column: 13, scope: !9374)
!9379 = !DILocation(line: 1368, column: 26, scope: !9374)
!9380 = !DILocation(line: 1368, column: 39, scope: !9374)
!9381 = !DILocation(line: 1368, column: 34, scope: !9374)
!9382 = !DILocation(line: 1368, column: 32, scope: !9374)
!9383 = !DILocation(line: 1368, column: 4, scope: !9374)
!9384 = !DILocation(line: 1368, column: 10, scope: !9374)
!9385 = !DILocation(line: 1368, column: 3, scope: !9374)
!9386 = !DILocation(line: 1369, column: 2, scope: !9352)
!9387 = !DILocation(line: 1370, column: 1, scope: !9352)
!9388 = distinct !DISubprogram(name: "cxd2841er_read_packet_errors_i", scope: !3, file: !3, line: 1372, type: !8864, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9389 = !DILocalVariable(name: "priv", arg: 1, scope: !9388, file: !3, line: 1373, type: !4266)
!9390 = !DILocation(line: 1373, column: 26, scope: !9388)
!9391 = !DILocalVariable(name: "penum", arg: 2, scope: !9388, file: !3, line: 1373, type: !1525)
!9392 = !DILocation(line: 1373, column: 37, scope: !9388)
!9393 = !DILocalVariable(name: "data", scope: !9388, file: !3, line: 1375, type: !6526)
!9394 = !DILocation(line: 1375, column: 5, scope: !9388)
!9395 = !DILocation(line: 1377, column: 3, scope: !9388)
!9396 = !DILocation(line: 1377, column: 9, scope: !9388)
!9397 = !DILocation(line: 1378, column: 6, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9388, file: !3, line: 1378, column: 6)
!9399 = !DILocation(line: 1378, column: 12, scope: !9398)
!9400 = !DILocation(line: 1378, column: 18, scope: !9398)
!9401 = !DILocation(line: 1378, column: 6, scope: !9388)
!9402 = !DILocation(line: 1381, column: 3, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9398, file: !3, line: 1378, column: 38)
!9404 = !DILocation(line: 1383, column: 22, scope: !9388)
!9405 = !DILocation(line: 1383, column: 2, scope: !9388)
!9406 = !DILocation(line: 1384, column: 22, scope: !9388)
!9407 = !DILocation(line: 1384, column: 44, scope: !9388)
!9408 = !DILocation(line: 1384, column: 2, scope: !9388)
!9409 = !DILocation(line: 1386, column: 8, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9388, file: !3, line: 1386, column: 6)
!9411 = !DILocation(line: 1386, column: 16, scope: !9410)
!9412 = !DILocation(line: 1386, column: 6, scope: !9388)
!9413 = !DILocation(line: 1387, column: 3, scope: !9410)
!9414 = !DILocation(line: 1390, column: 22, scope: !9388)
!9415 = !DILocation(line: 1390, column: 44, scope: !9388)
!9416 = !DILocation(line: 1390, column: 2, scope: !9388)
!9417 = !DILocation(line: 1391, column: 17, scope: !9388)
!9418 = !DILocation(line: 1391, column: 12, scope: !9388)
!9419 = !DILocation(line: 1391, column: 25, scope: !9388)
!9420 = !DILocation(line: 1391, column: 38, scope: !9388)
!9421 = !DILocation(line: 1391, column: 33, scope: !9388)
!9422 = !DILocation(line: 1391, column: 31, scope: !9388)
!9423 = !DILocation(line: 1391, column: 3, scope: !9388)
!9424 = !DILocation(line: 1391, column: 9, scope: !9388)
!9425 = !DILocation(line: 1394, column: 22, scope: !9388)
!9426 = !DILocation(line: 1394, column: 44, scope: !9388)
!9427 = !DILocation(line: 1394, column: 2, scope: !9388)
!9428 = !DILocation(line: 1395, column: 18, scope: !9388)
!9429 = !DILocation(line: 1395, column: 13, scope: !9388)
!9430 = !DILocation(line: 1395, column: 26, scope: !9388)
!9431 = !DILocation(line: 1395, column: 39, scope: !9388)
!9432 = !DILocation(line: 1395, column: 34, scope: !9388)
!9433 = !DILocation(line: 1395, column: 32, scope: !9388)
!9434 = !DILocation(line: 1395, column: 3, scope: !9388)
!9435 = !DILocation(line: 1395, column: 9, scope: !9388)
!9436 = !DILocation(line: 1398, column: 22, scope: !9388)
!9437 = !DILocation(line: 1398, column: 44, scope: !9388)
!9438 = !DILocation(line: 1398, column: 2, scope: !9388)
!9439 = !DILocation(line: 1399, column: 18, scope: !9388)
!9440 = !DILocation(line: 1399, column: 13, scope: !9388)
!9441 = !DILocation(line: 1399, column: 26, scope: !9388)
!9442 = !DILocation(line: 1399, column: 39, scope: !9388)
!9443 = !DILocation(line: 1399, column: 34, scope: !9388)
!9444 = !DILocation(line: 1399, column: 32, scope: !9388)
!9445 = !DILocation(line: 1399, column: 3, scope: !9388)
!9446 = !DILocation(line: 1399, column: 9, scope: !9388)
!9447 = !DILocation(line: 1401, column: 2, scope: !9388)
!9448 = !DILocation(line: 1402, column: 1, scope: !9388)
!9449 = distinct !DISubprogram(name: "cxd2841er_read_ber_c", scope: !3, file: !3, line: 1404, type: !9450, scopeLine: 1406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9450 = !DISubroutineType(types: !9451)
!9451 = !{!331, !4266, !1525, !1525}
!9452 = !DILocalVariable(name: "priv", arg: 1, scope: !9449, file: !3, line: 1404, type: !4266)
!9453 = !DILocation(line: 1404, column: 56, scope: !9449)
!9454 = !DILocalVariable(name: "bit_error", arg: 2, scope: !9449, file: !3, line: 1405, type: !1525)
!9455 = !DILocation(line: 1405, column: 8, scope: !9449)
!9456 = !DILocalVariable(name: "bit_count", arg: 3, scope: !9449, file: !3, line: 1405, type: !1525)
!9457 = !DILocation(line: 1405, column: 24, scope: !9449)
!9458 = !DILocalVariable(name: "data", scope: !9449, file: !3, line: 1407, type: !6654)
!9459 = !DILocation(line: 1407, column: 5, scope: !9449)
!9460 = !DILocalVariable(name: "bit_err", scope: !9449, file: !3, line: 1408, type: !326)
!9461 = !DILocation(line: 1408, column: 6, scope: !9449)
!9462 = !DILocalVariable(name: "period_exp", scope: !9449, file: !3, line: 1408, type: !326)
!9463 = !DILocation(line: 1408, column: 15, scope: !9449)
!9464 = !DILocation(line: 1411, column: 6, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 1411, column: 6)
!9466 = !DILocation(line: 1411, column: 12, scope: !9465)
!9467 = !DILocation(line: 1411, column: 18, scope: !9465)
!9468 = !DILocation(line: 1411, column: 6, scope: !9449)
!9469 = !DILocation(line: 1414, column: 3, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9465, file: !3, line: 1411, column: 38)
!9471 = !DILocation(line: 1416, column: 22, scope: !9449)
!9472 = !DILocation(line: 1416, column: 2, scope: !9449)
!9473 = !DILocation(line: 1417, column: 22, scope: !9449)
!9474 = !DILocation(line: 1417, column: 44, scope: !9449)
!9475 = !DILocation(line: 1417, column: 2, scope: !9449)
!9476 = !DILocation(line: 1418, column: 8, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 1418, column: 6)
!9478 = !DILocation(line: 1418, column: 16, scope: !9477)
!9479 = !DILocation(line: 1418, column: 6, scope: !9449)
!9480 = !DILocation(line: 1421, column: 3, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 1418, column: 25)
!9482 = !DILocation(line: 1423, column: 19, scope: !9449)
!9483 = !DILocation(line: 1423, column: 27, scope: !9449)
!9484 = !DILocation(line: 1423, column: 35, scope: !9449)
!9485 = !DILocation(line: 1424, column: 9, scope: !9449)
!9486 = !DILocation(line: 1424, column: 4, scope: !9449)
!9487 = !DILocation(line: 1424, column: 17, scope: !9449)
!9488 = !DILocation(line: 1423, column: 42, scope: !9449)
!9489 = !DILocation(line: 1425, column: 8, scope: !9449)
!9490 = !DILocation(line: 1425, column: 3, scope: !9449)
!9491 = !DILocation(line: 1424, column: 23, scope: !9449)
!9492 = !DILocation(line: 1423, column: 10, scope: !9449)
!9493 = !DILocation(line: 1426, column: 21, scope: !9449)
!9494 = !DILocation(line: 1426, column: 43, scope: !9449)
!9495 = !DILocation(line: 1426, column: 2, scope: !9449)
!9496 = !DILocation(line: 1427, column: 15, scope: !9449)
!9497 = !DILocation(line: 1427, column: 23, scope: !9449)
!9498 = !DILocation(line: 1427, column: 13, scope: !9449)
!9499 = !DILocation(line: 1429, column: 7, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9449, file: !3, line: 1429, column: 6)
!9501 = !DILocation(line: 1429, column: 18, scope: !9500)
!9502 = !DILocation(line: 1429, column: 25, scope: !9500)
!9503 = !DILocation(line: 1429, column: 29, scope: !9500)
!9504 = !DILocation(line: 1429, column: 45, scope: !9500)
!9505 = !DILocation(line: 1429, column: 42, scope: !9500)
!9506 = !DILocation(line: 1429, column: 57, scope: !9500)
!9507 = !DILocation(line: 1429, column: 63, scope: !9500)
!9508 = !DILocation(line: 1429, column: 37, scope: !9500)
!9509 = !DILocation(line: 1429, column: 6, scope: !9449)
!9510 = !DILocation(line: 1433, column: 3, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 1429, column: 69)
!9512 = !DILocation(line: 1441, column: 15, scope: !9449)
!9513 = !DILocation(line: 1441, column: 3, scope: !9449)
!9514 = !DILocation(line: 1441, column: 13, scope: !9449)
!9515 = !DILocation(line: 1442, column: 22, scope: !9449)
!9516 = !DILocation(line: 1442, column: 19, scope: !9449)
!9517 = !DILocation(line: 1442, column: 34, scope: !9449)
!9518 = !DILocation(line: 1442, column: 40, scope: !9449)
!9519 = !DILocation(line: 1442, column: 3, scope: !9449)
!9520 = !DILocation(line: 1442, column: 13, scope: !9449)
!9521 = !DILocation(line: 1444, column: 2, scope: !9449)
!9522 = !DILocation(line: 1445, column: 1, scope: !9449)
!9523 = distinct !DISubprogram(name: "cxd2841er_read_ber_i", scope: !3, file: !3, line: 1447, type: !9450, scopeLine: 1449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9524 = !DILocalVariable(name: "priv", arg: 1, scope: !9523, file: !3, line: 1447, type: !4266)
!9525 = !DILocation(line: 1447, column: 56, scope: !9523)
!9526 = !DILocalVariable(name: "bit_error", arg: 2, scope: !9523, file: !3, line: 1448, type: !1525)
!9527 = !DILocation(line: 1448, column: 8, scope: !9523)
!9528 = !DILocalVariable(name: "bit_count", arg: 3, scope: !9523, file: !3, line: 1448, type: !1525)
!9529 = !DILocation(line: 1448, column: 24, scope: !9523)
!9530 = !DILocalVariable(name: "data", scope: !9523, file: !3, line: 1450, type: !6654)
!9531 = !DILocation(line: 1450, column: 5, scope: !9523)
!9532 = !DILocalVariable(name: "pktnum", scope: !9523, file: !3, line: 1451, type: !6526)
!9533 = !DILocation(line: 1451, column: 5, scope: !9523)
!9534 = !DILocation(line: 1454, column: 6, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 1454, column: 6)
!9536 = !DILocation(line: 1454, column: 12, scope: !9535)
!9537 = !DILocation(line: 1454, column: 18, scope: !9535)
!9538 = !DILocation(line: 1454, column: 6, scope: !9523)
!9539 = !DILocation(line: 1457, column: 3, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9535, file: !3, line: 1454, column: 38)
!9541 = !DILocation(line: 1460, column: 24, scope: !9523)
!9542 = !DILocation(line: 1460, column: 2, scope: !9523)
!9543 = !DILocation(line: 1461, column: 22, scope: !9523)
!9544 = !DILocation(line: 1461, column: 2, scope: !9523)
!9545 = !DILocation(line: 1462, column: 22, scope: !9523)
!9546 = !DILocation(line: 1462, column: 44, scope: !9523)
!9547 = !DILocation(line: 1462, column: 2, scope: !9523)
!9548 = !DILocation(line: 1463, column: 22, scope: !9523)
!9549 = !DILocation(line: 1463, column: 44, scope: !9523)
!9550 = !DILocation(line: 1463, column: 2, scope: !9523)
!9551 = !DILocation(line: 1464, column: 26, scope: !9523)
!9552 = !DILocation(line: 1464, column: 2, scope: !9523)
!9553 = !DILocation(line: 1466, column: 7, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 1466, column: 6)
!9555 = !DILocation(line: 1466, column: 17, scope: !9554)
!9556 = !DILocation(line: 1466, column: 21, scope: !9554)
!9557 = !DILocation(line: 1466, column: 6, scope: !9523)
!9558 = !DILocation(line: 1469, column: 3, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9554, file: !3, line: 1466, column: 32)
!9560 = !DILocation(line: 1472, column: 22, scope: !9523)
!9561 = !DILocation(line: 1472, column: 30, scope: !9523)
!9562 = !DILocation(line: 1472, column: 38, scope: !9523)
!9563 = !DILocation(line: 1473, column: 9, scope: !9523)
!9564 = !DILocation(line: 1473, column: 4, scope: !9523)
!9565 = !DILocation(line: 1473, column: 17, scope: !9523)
!9566 = !DILocation(line: 1472, column: 45, scope: !9523)
!9567 = !DILocation(line: 1473, column: 25, scope: !9523)
!9568 = !DILocation(line: 1473, column: 23, scope: !9523)
!9569 = !DILocation(line: 1472, column: 3, scope: !9523)
!9570 = !DILocation(line: 1472, column: 13, scope: !9523)
!9571 = !DILocation(line: 1474, column: 23, scope: !9523)
!9572 = !DILocation(line: 1474, column: 18, scope: !9523)
!9573 = !DILocation(line: 1474, column: 33, scope: !9523)
!9574 = !DILocation(line: 1474, column: 41, scope: !9523)
!9575 = !DILocation(line: 1474, column: 39, scope: !9523)
!9576 = !DILocation(line: 1474, column: 52, scope: !9523)
!9577 = !DILocation(line: 1474, column: 58, scope: !9523)
!9578 = !DILocation(line: 1474, column: 3, scope: !9523)
!9579 = !DILocation(line: 1474, column: 13, scope: !9523)
!9580 = !DILocation(line: 1478, column: 2, scope: !9523)
!9581 = !DILocation(line: 1479, column: 1, scope: !9523)
!9582 = distinct !DISubprogram(name: "cxd2841er_mon_read_ber_s", scope: !3, file: !3, line: 1481, type: !9450, scopeLine: 1483, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9583 = !DILocalVariable(name: "priv", arg: 1, scope: !9582, file: !3, line: 1481, type: !4266)
!9584 = !DILocation(line: 1481, column: 60, scope: !9582)
!9585 = !DILocalVariable(name: "bit_error", arg: 2, scope: !9582, file: !3, line: 1482, type: !1525)
!9586 = !DILocation(line: 1482, column: 14, scope: !9582)
!9587 = !DILocalVariable(name: "bit_count", arg: 3, scope: !9582, file: !3, line: 1482, type: !1525)
!9588 = !DILocation(line: 1482, column: 30, scope: !9582)
!9589 = !DILocalVariable(name: "data", scope: !9582, file: !3, line: 1484, type: !9590)
!9590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 88, elements: !9591)
!9591 = !{!9592}
!9592 = !DISubrange(count: 11)
!9593 = !DILocation(line: 1484, column: 5, scope: !9582)
!9594 = !DILocation(line: 1487, column: 22, scope: !9582)
!9595 = !DILocation(line: 1487, column: 2, scope: !9582)
!9596 = !DILocation(line: 1498, column: 22, scope: !9582)
!9597 = !DILocation(line: 1498, column: 44, scope: !9582)
!9598 = !DILocation(line: 1498, column: 2, scope: !9582)
!9599 = !DILocation(line: 1499, column: 6, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9582, file: !3, line: 1499, column: 6)
!9601 = !DILocation(line: 1499, column: 14, scope: !9600)
!9602 = !DILocation(line: 1499, column: 6, scope: !9582)
!9603 = !DILocation(line: 1500, column: 23, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9600, file: !3, line: 1499, column: 22)
!9605 = !DILocation(line: 1500, column: 32, scope: !9604)
!9606 = !DILocation(line: 1500, column: 40, scope: !9604)
!9607 = !DILocation(line: 1501, column: 16, scope: !9604)
!9608 = !DILocation(line: 1501, column: 25, scope: !9604)
!9609 = !DILocation(line: 1501, column: 33, scope: !9604)
!9610 = !DILocation(line: 1500, column: 47, scope: !9604)
!9611 = !DILocation(line: 1502, column: 15, scope: !9604)
!9612 = !DILocation(line: 1502, column: 24, scope: !9604)
!9613 = !DILocation(line: 1501, column: 40, scope: !9604)
!9614 = !DILocation(line: 1500, column: 4, scope: !9604)
!9615 = !DILocation(line: 1500, column: 14, scope: !9604)
!9616 = !DILocation(line: 1503, column: 23, scope: !9604)
!9617 = !DILocation(line: 1503, column: 32, scope: !9604)
!9618 = !DILocation(line: 1503, column: 40, scope: !9604)
!9619 = !DILocation(line: 1504, column: 16, scope: !9604)
!9620 = !DILocation(line: 1504, column: 25, scope: !9604)
!9621 = !DILocation(line: 1504, column: 33, scope: !9604)
!9622 = !DILocation(line: 1503, column: 47, scope: !9604)
!9623 = !DILocation(line: 1505, column: 15, scope: !9604)
!9624 = !DILocation(line: 1505, column: 24, scope: !9604)
!9625 = !DILocation(line: 1504, column: 40, scope: !9604)
!9626 = !DILocation(line: 1503, column: 4, scope: !9604)
!9627 = !DILocation(line: 1503, column: 14, scope: !9604)
!9628 = !DILocation(line: 1506, column: 9, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9604, file: !3, line: 1506, column: 7)
!9630 = !DILocation(line: 1506, column: 8, scope: !9629)
!9631 = !DILocation(line: 1506, column: 19, scope: !9629)
!9632 = !DILocation(line: 1506, column: 25, scope: !9629)
!9633 = !DILocation(line: 1506, column: 30, scope: !9629)
!9634 = !DILocation(line: 1506, column: 29, scope: !9629)
!9635 = !DILocation(line: 1506, column: 43, scope: !9629)
!9636 = !DILocation(line: 1506, column: 42, scope: !9629)
!9637 = !DILocation(line: 1506, column: 40, scope: !9629)
!9638 = !DILocation(line: 1506, column: 7, scope: !9604)
!9639 = !DILocation(line: 1510, column: 4, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 1506, column: 55)
!9641 = !DILocation(line: 1512, column: 3, scope: !9604)
!9642 = !DILocation(line: 1515, column: 2, scope: !9582)
!9643 = !DILocation(line: 1516, column: 1, scope: !9582)
!9644 = distinct !DISubprogram(name: "cxd2841er_mon_read_ber_s2", scope: !3, file: !3, line: 1519, type: !9450, scopeLine: 1521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9645 = !DILocalVariable(name: "priv", arg: 1, scope: !9644, file: !3, line: 1519, type: !4266)
!9646 = !DILocation(line: 1519, column: 61, scope: !9644)
!9647 = !DILocalVariable(name: "bit_error", arg: 2, scope: !9644, file: !3, line: 1520, type: !1525)
!9648 = !DILocation(line: 1520, column: 15, scope: !9644)
!9649 = !DILocalVariable(name: "bit_count", arg: 3, scope: !9644, file: !3, line: 1520, type: !1525)
!9650 = !DILocation(line: 1520, column: 31, scope: !9644)
!9651 = !DILocalVariable(name: "data", scope: !9644, file: !3, line: 1522, type: !9652)
!9652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 40, elements: !9653)
!9653 = !{!4411}
!9654 = !DILocation(line: 1522, column: 5, scope: !9644)
!9655 = !DILocalVariable(name: "period", scope: !9644, file: !3, line: 1523, type: !326)
!9656 = !DILocation(line: 1523, column: 6, scope: !9644)
!9657 = !DILocation(line: 1526, column: 22, scope: !9644)
!9658 = !DILocation(line: 1526, column: 2, scope: !9644)
!9659 = !DILocation(line: 1535, column: 22, scope: !9644)
!9660 = !DILocation(line: 1535, column: 44, scope: !9644)
!9661 = !DILocation(line: 1535, column: 2, scope: !9644)
!9662 = !DILocation(line: 1536, column: 6, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 1536, column: 6)
!9664 = !DILocation(line: 1536, column: 14, scope: !9663)
!9665 = !DILocation(line: 1536, column: 6, scope: !9644)
!9666 = !DILocation(line: 1538, column: 23, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 1536, column: 22)
!9668 = !DILocation(line: 1538, column: 31, scope: !9667)
!9669 = !DILocation(line: 1538, column: 39, scope: !9667)
!9670 = !DILocation(line: 1539, column: 16, scope: !9667)
!9671 = !DILocation(line: 1539, column: 24, scope: !9667)
!9672 = !DILocation(line: 1539, column: 32, scope: !9667)
!9673 = !DILocation(line: 1538, column: 46, scope: !9667)
!9674 = !DILocation(line: 1540, column: 16, scope: !9667)
!9675 = !DILocation(line: 1540, column: 24, scope: !9667)
!9676 = !DILocation(line: 1540, column: 32, scope: !9667)
!9677 = !DILocation(line: 1539, column: 39, scope: !9667)
!9678 = !DILocation(line: 1541, column: 15, scope: !9667)
!9679 = !DILocation(line: 1541, column: 23, scope: !9667)
!9680 = !DILocation(line: 1540, column: 39, scope: !9667)
!9681 = !DILocation(line: 1538, column: 4, scope: !9667)
!9682 = !DILocation(line: 1538, column: 14, scope: !9667)
!9683 = !DILocation(line: 1544, column: 23, scope: !9667)
!9684 = !DILocation(line: 1544, column: 3, scope: !9667)
!9685 = !DILocation(line: 1545, column: 22, scope: !9667)
!9686 = !DILocation(line: 1545, column: 44, scope: !9667)
!9687 = !DILocation(line: 1545, column: 3, scope: !9667)
!9688 = !DILocation(line: 1547, column: 24, scope: !9667)
!9689 = !DILocation(line: 1547, column: 32, scope: !9667)
!9690 = !DILocation(line: 1547, column: 20, scope: !9667)
!9691 = !DILocation(line: 1547, column: 10, scope: !9667)
!9692 = !DILocation(line: 1548, column: 7, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 1548, column: 7)
!9694 = !DILocation(line: 1548, column: 14, scope: !9693)
!9695 = !DILocation(line: 1548, column: 7, scope: !9667)
!9696 = !DILocation(line: 1551, column: 4, scope: !9697)
!9697 = distinct !DILexicalBlock(scope: !9693, file: !3, line: 1548, column: 20)
!9698 = !DILocation(line: 1553, column: 8, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 1553, column: 7)
!9700 = !DILocation(line: 1553, column: 7, scope: !9699)
!9701 = !DILocation(line: 1553, column: 21, scope: !9699)
!9702 = !DILocation(line: 1553, column: 28, scope: !9699)
!9703 = !DILocation(line: 1553, column: 18, scope: !9699)
!9704 = !DILocation(line: 1553, column: 7, scope: !9667)
!9705 = !DILocation(line: 1557, column: 4, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 1553, column: 38)
!9707 = !DILocation(line: 1559, column: 16, scope: !9667)
!9708 = !DILocation(line: 1559, column: 23, scope: !9667)
!9709 = !DILocation(line: 1559, column: 4, scope: !9667)
!9710 = !DILocation(line: 1559, column: 14, scope: !9667)
!9711 = !DILocation(line: 1561, column: 3, scope: !9667)
!9712 = !DILocation(line: 1566, column: 2, scope: !9644)
!9713 = !DILocation(line: 1567, column: 1, scope: !9644)
!9714 = distinct !DISubprogram(name: "cxd2841er_read_ber_t", scope: !3, file: !3, line: 1617, type: !9450, scopeLine: 1619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9715 = !DILocalVariable(name: "priv", arg: 1, scope: !9714, file: !3, line: 1617, type: !4266)
!9716 = !DILocation(line: 1617, column: 56, scope: !9714)
!9717 = !DILocalVariable(name: "bit_error", arg: 2, scope: !9714, file: !3, line: 1618, type: !1525)
!9718 = !DILocation(line: 1618, column: 10, scope: !9714)
!9719 = !DILocalVariable(name: "bit_count", arg: 3, scope: !9714, file: !3, line: 1618, type: !1525)
!9720 = !DILocation(line: 1618, column: 26, scope: !9714)
!9721 = !DILocalVariable(name: "data", scope: !9714, file: !3, line: 1620, type: !6526)
!9722 = !DILocation(line: 1620, column: 5, scope: !9714)
!9723 = !DILocalVariable(name: "period", scope: !9714, file: !3, line: 1621, type: !326)
!9724 = !DILocation(line: 1621, column: 6, scope: !9714)
!9725 = !DILocation(line: 1623, column: 6, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 1623, column: 6)
!9727 = !DILocation(line: 1623, column: 12, scope: !9726)
!9728 = !DILocation(line: 1623, column: 18, scope: !9726)
!9729 = !DILocation(line: 1623, column: 6, scope: !9714)
!9730 = !DILocation(line: 1626, column: 3, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 1623, column: 38)
!9732 = !DILocation(line: 1628, column: 22, scope: !9714)
!9733 = !DILocation(line: 1628, column: 2, scope: !9714)
!9734 = !DILocation(line: 1629, column: 21, scope: !9714)
!9735 = !DILocation(line: 1629, column: 43, scope: !9714)
!9736 = !DILocation(line: 1629, column: 2, scope: !9714)
!9737 = !DILocation(line: 1630, column: 8, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 1630, column: 6)
!9739 = !DILocation(line: 1630, column: 16, scope: !9738)
!9740 = !DILocation(line: 1630, column: 6, scope: !9714)
!9741 = !DILocation(line: 1633, column: 3, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 1630, column: 25)
!9743 = !DILocation(line: 1635, column: 22, scope: !9714)
!9744 = !DILocation(line: 1635, column: 44, scope: !9714)
!9745 = !DILocation(line: 1635, column: 2, scope: !9714)
!9746 = !DILocation(line: 1636, column: 21, scope: !9714)
!9747 = !DILocation(line: 1636, column: 16, scope: !9714)
!9748 = !DILocation(line: 1636, column: 29, scope: !9714)
!9749 = !DILocation(line: 1636, column: 42, scope: !9714)
!9750 = !DILocation(line: 1636, column: 37, scope: !9714)
!9751 = !DILocation(line: 1636, column: 35, scope: !9714)
!9752 = !DILocation(line: 1636, column: 3, scope: !9714)
!9753 = !DILocation(line: 1636, column: 13, scope: !9714)
!9754 = !DILocation(line: 1637, column: 21, scope: !9714)
!9755 = !DILocation(line: 1637, column: 43, scope: !9714)
!9756 = !DILocation(line: 1637, column: 2, scope: !9714)
!9757 = !DILocation(line: 1638, column: 13, scope: !9714)
!9758 = !DILocation(line: 1638, column: 21, scope: !9714)
!9759 = !DILocation(line: 1638, column: 29, scope: !9714)
!9760 = !DILocation(line: 1638, column: 11, scope: !9714)
!9761 = !DILocation(line: 1638, column: 53, scope: !9714)
!9762 = !DILocation(line: 1638, column: 61, scope: !9714)
!9763 = !DILocation(line: 1638, column: 49, scope: !9714)
!9764 = !DILocation(line: 1638, column: 9, scope: !9714)
!9765 = !DILocation(line: 1645, column: 15, scope: !9714)
!9766 = !DILocation(line: 1645, column: 22, scope: !9714)
!9767 = !DILocation(line: 1645, column: 3, scope: !9714)
!9768 = !DILocation(line: 1645, column: 13, scope: !9714)
!9769 = !DILocation(line: 1646, column: 3, scope: !9714)
!9770 = !DILocation(line: 1646, column: 13, scope: !9714)
!9771 = !DILocation(line: 1647, column: 2, scope: !9714)
!9772 = !DILocation(line: 1648, column: 1, scope: !9714)
!9773 = distinct !DISubprogram(name: "cxd2841er_read_ber_t2", scope: !3, file: !3, line: 1569, type: !9450, scopeLine: 1571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9774 = !DILocalVariable(name: "priv", arg: 1, scope: !9773, file: !3, line: 1569, type: !4266)
!9775 = !DILocation(line: 1569, column: 57, scope: !9773)
!9776 = !DILocalVariable(name: "bit_error", arg: 2, scope: !9773, file: !3, line: 1570, type: !1525)
!9777 = !DILocation(line: 1570, column: 11, scope: !9773)
!9778 = !DILocalVariable(name: "bit_count", arg: 3, scope: !9773, file: !3, line: 1570, type: !1525)
!9779 = !DILocation(line: 1570, column: 27, scope: !9773)
!9780 = !DILocalVariable(name: "data", scope: !9773, file: !3, line: 1572, type: !6300)
!9781 = !DILocation(line: 1572, column: 5, scope: !9773)
!9782 = !DILocalVariable(name: "period_exp", scope: !9773, file: !3, line: 1573, type: !326)
!9783 = !DILocation(line: 1573, column: 6, scope: !9773)
!9784 = !DILocalVariable(name: "n_ldpc", scope: !9773, file: !3, line: 1573, type: !326)
!9785 = !DILocation(line: 1573, column: 18, scope: !9773)
!9786 = !DILocation(line: 1575, column: 6, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9773, file: !3, line: 1575, column: 6)
!9788 = !DILocation(line: 1575, column: 12, scope: !9787)
!9789 = !DILocation(line: 1575, column: 18, scope: !9787)
!9790 = !DILocation(line: 1575, column: 6, scope: !9773)
!9791 = !DILocation(line: 1578, column: 3, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9787, file: !3, line: 1575, column: 38)
!9793 = !DILocation(line: 1580, column: 22, scope: !9773)
!9794 = !DILocation(line: 1580, column: 2, scope: !9773)
!9795 = !DILocation(line: 1581, column: 22, scope: !9773)
!9796 = !DILocation(line: 1581, column: 44, scope: !9773)
!9797 = !DILocation(line: 1581, column: 2, scope: !9773)
!9798 = !DILocation(line: 1582, column: 8, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9773, file: !3, line: 1582, column: 6)
!9800 = !DILocation(line: 1582, column: 16, scope: !9799)
!9801 = !DILocation(line: 1582, column: 6, scope: !9773)
!9802 = !DILocation(line: 1585, column: 3, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9799, file: !3, line: 1582, column: 25)
!9804 = !DILocation(line: 1587, column: 22, scope: !9773)
!9805 = !DILocation(line: 1587, column: 30, scope: !9773)
!9806 = !DILocation(line: 1587, column: 38, scope: !9773)
!9807 = !DILocation(line: 1588, column: 14, scope: !9773)
!9808 = !DILocation(line: 1588, column: 9, scope: !9773)
!9809 = !DILocation(line: 1588, column: 22, scope: !9773)
!9810 = !DILocation(line: 1587, column: 45, scope: !9773)
!9811 = !DILocation(line: 1589, column: 14, scope: !9773)
!9812 = !DILocation(line: 1589, column: 9, scope: !9773)
!9813 = !DILocation(line: 1589, column: 22, scope: !9773)
!9814 = !DILocation(line: 1588, column: 29, scope: !9773)
!9815 = !DILocation(line: 1590, column: 13, scope: !9773)
!9816 = !DILocation(line: 1590, column: 8, scope: !9773)
!9817 = !DILocation(line: 1589, column: 28, scope: !9773)
!9818 = !DILocation(line: 1587, column: 3, scope: !9773)
!9819 = !DILocation(line: 1587, column: 13, scope: !9773)
!9820 = !DILocation(line: 1591, column: 21, scope: !9773)
!9821 = !DILocation(line: 1591, column: 43, scope: !9773)
!9822 = !DILocation(line: 1591, column: 2, scope: !9773)
!9823 = !DILocation(line: 1592, column: 15, scope: !9773)
!9824 = !DILocation(line: 1592, column: 23, scope: !9773)
!9825 = !DILocation(line: 1592, column: 13, scope: !9773)
!9826 = !DILocation(line: 1593, column: 22, scope: !9773)
!9827 = !DILocation(line: 1593, column: 2, scope: !9773)
!9828 = !DILocation(line: 1594, column: 21, scope: !9773)
!9829 = !DILocation(line: 1594, column: 43, scope: !9773)
!9830 = !DILocation(line: 1594, column: 2, scope: !9773)
!9831 = !DILocation(line: 1595, column: 13, scope: !9773)
!9832 = !DILocation(line: 1595, column: 21, scope: !9773)
!9833 = !DILocation(line: 1595, column: 29, scope: !9773)
!9834 = !DILocation(line: 1595, column: 12, scope: !9773)
!9835 = !DILocation(line: 1595, column: 9, scope: !9773)
!9836 = !DILocation(line: 1596, column: 7, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9773, file: !3, line: 1596, column: 6)
!9838 = !DILocation(line: 1596, column: 6, scope: !9837)
!9839 = !DILocation(line: 1596, column: 27, scope: !9837)
!9840 = !DILocation(line: 1596, column: 24, scope: !9837)
!9841 = !DILocation(line: 1596, column: 41, scope: !9837)
!9842 = !DILocation(line: 1596, column: 39, scope: !9837)
!9843 = !DILocation(line: 1596, column: 17, scope: !9837)
!9844 = !DILocation(line: 1596, column: 6, scope: !9773)
!9845 = !DILocation(line: 1599, column: 3, scope: !9846)
!9846 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 1596, column: 50)
!9847 = !DILocation(line: 1607, column: 6, scope: !9848)
!9848 = distinct !DILexicalBlock(scope: !9773, file: !3, line: 1607, column: 6)
!9849 = !DILocation(line: 1607, column: 17, scope: !9848)
!9850 = !DILocation(line: 1607, column: 6, scope: !9773)
!9851 = !DILocation(line: 1608, column: 24, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 1607, column: 23)
!9853 = !DILocation(line: 1608, column: 35, scope: !9852)
!9854 = !DILocation(line: 1608, column: 20, scope: !9852)
!9855 = !DILocation(line: 1608, column: 44, scope: !9852)
!9856 = !DILocation(line: 1608, column: 51, scope: !9852)
!9857 = !DILocation(line: 1608, column: 41, scope: !9852)
!9858 = !DILocation(line: 1608, column: 4, scope: !9852)
!9859 = !DILocation(line: 1608, column: 14, scope: !9852)
!9860 = !DILocation(line: 1609, column: 4, scope: !9852)
!9861 = !DILocation(line: 1609, column: 14, scope: !9852)
!9862 = !DILocation(line: 1610, column: 2, scope: !9852)
!9863 = !DILocation(line: 1611, column: 23, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 1610, column: 9)
!9865 = !DILocation(line: 1611, column: 20, scope: !9864)
!9866 = !DILocation(line: 1611, column: 38, scope: !9864)
!9867 = !DILocation(line: 1611, column: 45, scope: !9864)
!9868 = !DILocation(line: 1611, column: 35, scope: !9864)
!9869 = !DILocation(line: 1611, column: 4, scope: !9864)
!9870 = !DILocation(line: 1611, column: 14, scope: !9864)
!9871 = !DILocation(line: 1612, column: 4, scope: !9864)
!9872 = !DILocation(line: 1612, column: 14, scope: !9864)
!9873 = !DILocation(line: 1614, column: 2, scope: !9773)
!9874 = !DILocation(line: 1615, column: 1, scope: !9773)
!9875 = distinct !DISubprogram(name: "cxd2841er_read_status_t_t2", scope: !3, file: !3, line: 1003, type: !9876, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9876 = !DISubroutineType(types: !9877)
!9877 = !{!331, !4266, !4237, !4237, !4237}
!9878 = !DILocalVariable(name: "priv", arg: 1, scope: !9875, file: !3, line: 1003, type: !4266)
!9879 = !DILocation(line: 1003, column: 62, scope: !9875)
!9880 = !DILocalVariable(name: "sync", arg: 2, scope: !9875, file: !3, line: 1004, type: !4237)
!9881 = !DILocation(line: 1004, column: 15, scope: !9875)
!9882 = !DILocalVariable(name: "tslock", arg: 3, scope: !9875, file: !3, line: 1004, type: !4237)
!9883 = !DILocation(line: 1004, column: 25, scope: !9875)
!9884 = !DILocalVariable(name: "unlock", arg: 4, scope: !9875, file: !3, line: 1004, type: !4237)
!9885 = !DILocation(line: 1004, column: 37, scope: !9875)
!9886 = !DILocalVariable(name: "data", scope: !9875, file: !3, line: 1006, type: !332)
!9887 = !DILocation(line: 1006, column: 5, scope: !9875)
!9888 = !DILocation(line: 1009, column: 6, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 1009, column: 6)
!9890 = !DILocation(line: 1009, column: 12, scope: !9889)
!9891 = !DILocation(line: 1009, column: 18, scope: !9889)
!9892 = !DILocation(line: 1009, column: 6, scope: !9875)
!9893 = !DILocation(line: 1010, column: 3, scope: !9889)
!9894 = !DILocation(line: 1011, column: 6, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 1011, column: 6)
!9896 = !DILocation(line: 1011, column: 12, scope: !9895)
!9897 = !DILocation(line: 1011, column: 19, scope: !9895)
!9898 = !DILocation(line: 1011, column: 6, scope: !9875)
!9899 = !DILocation(line: 1013, column: 23, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 1011, column: 32)
!9901 = !DILocation(line: 1013, column: 3, scope: !9900)
!9902 = !DILocation(line: 1014, column: 2, scope: !9900)
!9903 = !DILocation(line: 1016, column: 23, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 1014, column: 9)
!9905 = !DILocation(line: 1016, column: 3, scope: !9904)
!9906 = !DILocation(line: 1018, column: 21, scope: !9875)
!9907 = !DILocation(line: 1018, column: 2, scope: !9875)
!9908 = !DILocation(line: 1019, column: 7, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 1019, column: 6)
!9910 = !DILocation(line: 1019, column: 12, scope: !9909)
!9911 = !DILocation(line: 1019, column: 20, scope: !9909)
!9912 = !DILocation(line: 1019, column: 6, scope: !9875)
!9913 = !DILocation(line: 1022, column: 4, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9909, file: !3, line: 1019, column: 29)
!9915 = !DILocation(line: 1022, column: 9, scope: !9914)
!9916 = !DILocation(line: 1023, column: 4, scope: !9914)
!9917 = !DILocation(line: 1023, column: 11, scope: !9914)
!9918 = !DILocation(line: 1024, column: 4, scope: !9914)
!9919 = !DILocation(line: 1024, column: 11, scope: !9914)
!9920 = !DILocation(line: 1025, column: 2, scope: !9914)
!9921 = !DILocation(line: 1026, column: 13, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9909, file: !3, line: 1025, column: 9)
!9923 = !DILocation(line: 1026, column: 18, scope: !9922)
!9924 = !DILocation(line: 1026, column: 26, scope: !9922)
!9925 = !DILocation(line: 1026, column: 12, scope: !9922)
!9926 = !DILocation(line: 1026, column: 11, scope: !9922)
!9927 = !DILocation(line: 1026, column: 4, scope: !9922)
!9928 = !DILocation(line: 1026, column: 9, scope: !9922)
!9929 = !DILocation(line: 1027, column: 15, scope: !9922)
!9930 = !DILocation(line: 1027, column: 20, scope: !9922)
!9931 = !DILocation(line: 1027, column: 14, scope: !9922)
!9932 = !DILocation(line: 1027, column: 13, scope: !9922)
!9933 = !DILocation(line: 1027, column: 4, scope: !9922)
!9934 = !DILocation(line: 1027, column: 11, scope: !9922)
!9935 = !DILocation(line: 1028, column: 15, scope: !9922)
!9936 = !DILocation(line: 1028, column: 20, scope: !9922)
!9937 = !DILocation(line: 1028, column: 14, scope: !9922)
!9938 = !DILocation(line: 1028, column: 13, scope: !9922)
!9939 = !DILocation(line: 1028, column: 4, scope: !9922)
!9940 = !DILocation(line: 1028, column: 11, scope: !9922)
!9941 = !DILocation(line: 1030, column: 2, scope: !9875)
!9942 = !DILocation(line: 1031, column: 1, scope: !9875)
!9943 = distinct !DISubprogram(name: "cxd2841er_read_status_i", scope: !3, file: !3, line: 1051, type: !9876, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9944 = !DILocalVariable(name: "priv", arg: 1, scope: !9943, file: !3, line: 1051, type: !4266)
!9945 = !DILocation(line: 1051, column: 59, scope: !9943)
!9946 = !DILocalVariable(name: "sync", arg: 2, scope: !9943, file: !3, line: 1052, type: !4237)
!9947 = !DILocation(line: 1052, column: 7, scope: !9943)
!9948 = !DILocalVariable(name: "tslock", arg: 3, scope: !9943, file: !3, line: 1052, type: !4237)
!9949 = !DILocation(line: 1052, column: 17, scope: !9943)
!9950 = !DILocalVariable(name: "unlock", arg: 4, scope: !9943, file: !3, line: 1052, type: !4237)
!9951 = !DILocation(line: 1052, column: 29, scope: !9943)
!9952 = !DILocalVariable(name: "data", scope: !9943, file: !3, line: 1054, type: !332)
!9953 = !DILocation(line: 1054, column: 5, scope: !9943)
!9954 = !DILocation(line: 1057, column: 6, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 1057, column: 6)
!9956 = !DILocation(line: 1057, column: 12, scope: !9955)
!9957 = !DILocation(line: 1057, column: 18, scope: !9955)
!9958 = !DILocation(line: 1057, column: 6, scope: !9943)
!9959 = !DILocation(line: 1058, column: 3, scope: !9955)
!9960 = !DILocation(line: 1060, column: 22, scope: !9943)
!9961 = !DILocation(line: 1060, column: 2, scope: !9943)
!9962 = !DILocation(line: 1061, column: 21, scope: !9943)
!9963 = !DILocation(line: 1061, column: 2, scope: !9943)
!9964 = !DILocation(line: 1064, column: 12, scope: !9943)
!9965 = !DILocation(line: 1064, column: 17, scope: !9943)
!9966 = !DILocation(line: 1064, column: 11, scope: !9943)
!9967 = !DILocation(line: 1064, column: 10, scope: !9943)
!9968 = !DILocation(line: 1064, column: 3, scope: !9943)
!9969 = !DILocation(line: 1064, column: 8, scope: !9943)
!9970 = !DILocation(line: 1065, column: 14, scope: !9943)
!9971 = !DILocation(line: 1065, column: 19, scope: !9943)
!9972 = !DILocation(line: 1065, column: 13, scope: !9943)
!9973 = !DILocation(line: 1065, column: 12, scope: !9943)
!9974 = !DILocation(line: 1065, column: 3, scope: !9943)
!9975 = !DILocation(line: 1065, column: 10, scope: !9943)
!9976 = !DILocation(line: 1066, column: 14, scope: !9943)
!9977 = !DILocation(line: 1066, column: 19, scope: !9943)
!9978 = !DILocation(line: 1066, column: 13, scope: !9943)
!9979 = !DILocation(line: 1066, column: 12, scope: !9943)
!9980 = !DILocation(line: 1066, column: 3, scope: !9943)
!9981 = !DILocation(line: 1066, column: 10, scope: !9943)
!9982 = !DILocation(line: 1067, column: 2, scope: !9943)
!9983 = !DILocation(line: 1068, column: 1, scope: !9943)
!9984 = distinct !DISubprogram(name: "cxd2841er_read_status_c", scope: !3, file: !3, line: 1033, type: !9985, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!9985 = !DISubroutineType(types: !9986)
!9986 = !{!331, !4266, !4237}
!9987 = !DILocalVariable(name: "priv", arg: 1, scope: !9984, file: !3, line: 1033, type: !4266)
!9988 = !DILocation(line: 1033, column: 59, scope: !9984)
!9989 = !DILocalVariable(name: "tslock", arg: 2, scope: !9984, file: !3, line: 1033, type: !4237)
!9990 = !DILocation(line: 1033, column: 69, scope: !9984)
!9991 = !DILocalVariable(name: "data", scope: !9984, file: !3, line: 1035, type: !332)
!9992 = !DILocation(line: 1035, column: 5, scope: !9984)
!9993 = !DILocation(line: 1038, column: 6, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1038, column: 6)
!9995 = !DILocation(line: 1038, column: 12, scope: !9994)
!9996 = !DILocation(line: 1038, column: 18, scope: !9994)
!9997 = !DILocation(line: 1038, column: 6, scope: !9984)
!9998 = !DILocation(line: 1039, column: 3, scope: !9994)
!9999 = !DILocation(line: 1040, column: 22, scope: !9984)
!10000 = !DILocation(line: 1040, column: 2, scope: !9984)
!10001 = !DILocation(line: 1041, column: 21, scope: !9984)
!10002 = !DILocation(line: 1041, column: 2, scope: !9984)
!10003 = !DILocation(line: 1042, column: 7, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1042, column: 6)
!10005 = !DILocation(line: 1042, column: 12, scope: !10004)
!10006 = !DILocation(line: 1042, column: 20, scope: !10004)
!10007 = !DILocation(line: 1042, column: 6, scope: !9984)
!10008 = !DILocation(line: 1043, column: 4, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1042, column: 26)
!10010 = !DILocation(line: 1043, column: 11, scope: !10009)
!10011 = !DILocation(line: 1044, column: 2, scope: !10009)
!10012 = !DILocation(line: 1045, column: 22, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1044, column: 9)
!10014 = !DILocation(line: 1045, column: 3, scope: !10013)
!10015 = !DILocation(line: 1046, column: 15, scope: !10013)
!10016 = !DILocation(line: 1046, column: 20, scope: !10013)
!10017 = !DILocation(line: 1046, column: 14, scope: !10013)
!10018 = !DILocation(line: 1046, column: 13, scope: !10013)
!10019 = !DILocation(line: 1046, column: 4, scope: !10013)
!10020 = !DILocation(line: 1046, column: 11, scope: !10013)
!10021 = !DILocation(line: 1048, column: 2, scope: !9984)
!10022 = !DILocation(line: 1049, column: 1, scope: !9984)
!10023 = distinct !DISubprogram(name: "cxd2841er_init_s", scope: !3, file: !3, line: 3782, type: !4088, scopeLine: 3783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10024 = !DILocalVariable(name: "fe", arg: 1, scope: !10023, file: !3, line: 3782, type: !390)
!10025 = !DILocation(line: 3782, column: 50, scope: !10023)
!10026 = !DILocalVariable(name: "priv", scope: !10023, file: !3, line: 3784, type: !4266)
!10027 = !DILocation(line: 3784, column: 25, scope: !10023)
!10028 = !DILocation(line: 3784, column: 32, scope: !10023)
!10029 = !DILocation(line: 3784, column: 36, scope: !10023)
!10030 = !DILocation(line: 3787, column: 6, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 3787, column: 6)
!10032 = !DILocation(line: 3787, column: 12, scope: !10031)
!10033 = !DILocation(line: 3787, column: 18, scope: !10031)
!10034 = !DILocation(line: 3787, column: 6, scope: !10023)
!10035 = !DILocation(line: 3790, column: 33, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 3787, column: 36)
!10037 = !DILocation(line: 3790, column: 3, scope: !10036)
!10038 = !DILocation(line: 3791, column: 2, scope: !10036)
!10039 = !DILocation(line: 3791, column: 13, scope: !10040)
!10040 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 3791, column: 13)
!10041 = !DILocation(line: 3791, column: 19, scope: !10040)
!10042 = !DILocation(line: 3791, column: 25, scope: !10040)
!10043 = !DILocation(line: 3791, column: 13, scope: !10031)
!10044 = !DILocation(line: 3794, column: 33, scope: !10045)
!10045 = distinct !DILexicalBlock(scope: !10040, file: !3, line: 3791, column: 44)
!10046 = !DILocation(line: 3794, column: 3, scope: !10045)
!10047 = !DILocation(line: 3795, column: 33, scope: !10045)
!10048 = !DILocation(line: 3795, column: 3, scope: !10045)
!10049 = !DILocation(line: 3796, column: 2, scope: !10045)
!10050 = !DILocation(line: 3799, column: 32, scope: !10023)
!10051 = !DILocation(line: 3799, column: 2, scope: !10023)
!10052 = !DILocation(line: 3801, column: 22, scope: !10023)
!10053 = !DILocation(line: 3801, column: 2, scope: !10023)
!10054 = !DILocation(line: 3802, column: 25, scope: !10023)
!10055 = !DILocation(line: 3802, column: 2, scope: !10023)
!10056 = !DILocation(line: 3804, column: 23, scope: !10023)
!10057 = !DILocation(line: 3804, column: 2, scope: !10023)
!10058 = !DILocation(line: 3806, column: 2, scope: !10023)
!10059 = distinct !DISubprogram(name: "cxd2841er_sleep_s", scope: !3, file: !3, line: 3598, type: !4088, scopeLine: 3599, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10060 = !DILocalVariable(name: "fe", arg: 1, scope: !10059, file: !3, line: 3598, type: !390)
!10061 = !DILocation(line: 3598, column: 51, scope: !10059)
!10062 = !DILocalVariable(name: "priv", scope: !10059, file: !3, line: 3600, type: !4266)
!10063 = !DILocation(line: 3600, column: 25, scope: !10059)
!10064 = !DILocation(line: 3600, column: 32, scope: !10059)
!10065 = !DILocation(line: 3600, column: 36, scope: !10059)
!10066 = !DILocation(line: 3603, column: 32, scope: !10059)
!10067 = !DILocation(line: 3603, column: 36, scope: !10059)
!10068 = !DILocation(line: 3603, column: 2, scope: !10059)
!10069 = !DILocation(line: 3604, column: 32, scope: !10059)
!10070 = !DILocation(line: 3604, column: 36, scope: !10059)
!10071 = !DILocation(line: 3604, column: 2, scope: !10059)
!10072 = !DILocation(line: 3605, column: 2, scope: !10059)
!10073 = distinct !DISubprogram(name: "cxd2841er_tune_s", scope: !3, file: !3, line: 3504, type: !4099, scopeLine: 3509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10074 = !DILocalVariable(name: "fe", arg: 1, scope: !10073, file: !3, line: 3504, type: !390)
!10075 = !DILocation(line: 3504, column: 50, scope: !10073)
!10076 = !DILocalVariable(name: "re_tune", arg: 2, scope: !10073, file: !3, line: 3505, type: !692)
!10077 = !DILocation(line: 3505, column: 13, scope: !10073)
!10078 = !DILocalVariable(name: "mode_flags", arg: 3, scope: !10073, file: !3, line: 3506, type: !7)
!10079 = !DILocation(line: 3506, column: 21, scope: !10073)
!10080 = !DILocalVariable(name: "delay", arg: 4, scope: !10073, file: !3, line: 3507, type: !2734)
!10081 = !DILocation(line: 3507, column: 22, scope: !10073)
!10082 = !DILocalVariable(name: "status", arg: 5, scope: !10073, file: !3, line: 3508, type: !4101)
!10083 = !DILocation(line: 3508, column: 24, scope: !10073)
!10084 = !DILocalVariable(name: "ret", scope: !10073, file: !3, line: 3510, type: !331)
!10085 = !DILocation(line: 3510, column: 6, scope: !10073)
!10086 = !DILocalVariable(name: "carrier_offset", scope: !10073, file: !3, line: 3510, type: !331)
!10087 = !DILocation(line: 3510, column: 11, scope: !10073)
!10088 = !DILocalVariable(name: "priv", scope: !10073, file: !3, line: 3511, type: !4266)
!10089 = !DILocation(line: 3511, column: 25, scope: !10073)
!10090 = !DILocation(line: 3511, column: 32, scope: !10073)
!10091 = !DILocation(line: 3511, column: 36, scope: !10073)
!10092 = !DILocalVariable(name: "p", scope: !10073, file: !3, line: 3512, type: !4121)
!10093 = !DILocation(line: 3512, column: 34, scope: !10073)
!10094 = !DILocation(line: 3512, column: 39, scope: !10073)
!10095 = !DILocation(line: 3512, column: 43, scope: !10073)
!10096 = !DILocation(line: 3515, column: 6, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10073, file: !3, line: 3515, column: 6)
!10098 = !DILocation(line: 3515, column: 6, scope: !10073)
!10099 = !DILocation(line: 3516, column: 34, scope: !10100)
!10100 = distinct !DILexicalBlock(scope: !10097, file: !3, line: 3515, column: 15)
!10101 = !DILocation(line: 3516, column: 9, scope: !10100)
!10102 = !DILocation(line: 3516, column: 7, scope: !10100)
!10103 = !DILocation(line: 3517, column: 7, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10100, file: !3, line: 3517, column: 7)
!10105 = !DILocation(line: 3517, column: 7, scope: !10100)
!10106 = !DILocation(line: 3518, column: 11, scope: !10104)
!10107 = !DILocation(line: 3518, column: 4, scope: !10104)
!10108 = !DILocation(line: 3519, column: 27, scope: !10100)
!10109 = !DILocation(line: 3519, column: 31, scope: !10100)
!10110 = !DILocation(line: 3519, column: 3, scope: !10100)
!10111 = !DILocation(line: 3520, column: 8, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10100, file: !3, line: 3520, column: 7)
!10113 = !DILocation(line: 3520, column: 7, scope: !10112)
!10114 = !DILocation(line: 3520, column: 15, scope: !10112)
!10115 = !DILocation(line: 3520, column: 7, scope: !10100)
!10116 = !DILocation(line: 3522, column: 6, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10118, file: !3, line: 3521, column: 8)
!10118 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 3520, column: 30)
!10119 = !DILocation(line: 3521, column: 8, scope: !10117)
!10120 = !DILocation(line: 3521, column: 8, scope: !10118)
!10121 = !DILocation(line: 3523, column: 5, scope: !10117)
!10122 = !DILocation(line: 3524, column: 20, scope: !10118)
!10123 = !DILocation(line: 3524, column: 4, scope: !10118)
!10124 = !DILocation(line: 3524, column: 7, scope: !10118)
!10125 = !DILocation(line: 3524, column: 17, scope: !10118)
!10126 = !DILocation(line: 3525, column: 35, scope: !10118)
!10127 = !DILocation(line: 3525, column: 10, scope: !10118)
!10128 = !DILocation(line: 3525, column: 8, scope: !10118)
!10129 = !DILocation(line: 3526, column: 8, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10118, file: !3, line: 3526, column: 8)
!10131 = !DILocation(line: 3526, column: 8, scope: !10118)
!10132 = !DILocation(line: 3527, column: 12, scope: !10130)
!10133 = !DILocation(line: 3527, column: 5, scope: !10130)
!10134 = !DILocation(line: 3528, column: 3, scope: !10118)
!10135 = !DILocation(line: 3529, column: 2, scope: !10100)
!10136 = !DILocation(line: 3530, column: 3, scope: !10073)
!10137 = !DILocation(line: 3530, column: 9, scope: !10073)
!10138 = !DILocation(line: 3531, column: 33, scope: !10073)
!10139 = !DILocation(line: 3531, column: 37, scope: !10073)
!10140 = !DILocation(line: 3531, column: 9, scope: !10073)
!10141 = !DILocation(line: 3531, column: 2, scope: !10073)
!10142 = !DILocation(line: 3532, column: 1, scope: !10073)
!10143 = distinct !DISubprogram(name: "cxd2841er_set_frontend_s", scope: !3, file: !3, line: 3302, type: !4088, scopeLine: 3303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10144 = !DILocalVariable(name: "fe", arg: 1, scope: !10143, file: !3, line: 3302, type: !390)
!10145 = !DILocation(line: 3302, column: 58, scope: !10143)
!10146 = !DILocalVariable(name: "ret", scope: !10143, file: !3, line: 3304, type: !331)
!10147 = !DILocation(line: 3304, column: 6, scope: !10143)
!10148 = !DILocalVariable(name: "i", scope: !10143, file: !3, line: 3304, type: !331)
!10149 = !DILocation(line: 3304, column: 15, scope: !10143)
!10150 = !DILocalVariable(name: "timeout", scope: !10143, file: !3, line: 3304, type: !331)
!10151 = !DILocation(line: 3304, column: 18, scope: !10143)
!10152 = !DILocalVariable(name: "carr_offset", scope: !10143, file: !3, line: 3304, type: !331)
!10153 = !DILocation(line: 3304, column: 27, scope: !10143)
!10154 = !DILocalVariable(name: "status", scope: !10143, file: !3, line: 3305, type: !40)
!10155 = !DILocation(line: 3305, column: 17, scope: !10143)
!10156 = !DILocalVariable(name: "priv", scope: !10143, file: !3, line: 3306, type: !4266)
!10157 = !DILocation(line: 3306, column: 25, scope: !10143)
!10158 = !DILocation(line: 3306, column: 32, scope: !10143)
!10159 = !DILocation(line: 3306, column: 36, scope: !10143)
!10160 = !DILocalVariable(name: "p", scope: !10143, file: !3, line: 3307, type: !4121)
!10161 = !DILocation(line: 3307, column: 34, scope: !10143)
!10162 = !DILocation(line: 3307, column: 39, scope: !10143)
!10163 = !DILocation(line: 3307, column: 43, scope: !10143)
!10164 = !DILocalVariable(name: "symbol_rate", scope: !10143, file: !3, line: 3308, type: !326)
!10165 = !DILocation(line: 3308, column: 6, scope: !10143)
!10166 = !DILocation(line: 3308, column: 20, scope: !10143)
!10167 = !DILocation(line: 3308, column: 23, scope: !10143)
!10168 = !DILocation(line: 3308, column: 34, scope: !10143)
!10169 = !DILocation(line: 3315, column: 6, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 3315, column: 6)
!10171 = !DILocation(line: 3315, column: 12, scope: !10170)
!10172 = !DILocation(line: 3315, column: 18, scope: !10170)
!10173 = !DILocation(line: 3315, column: 6, scope: !10143)
!10174 = !DILocation(line: 3316, column: 23, scope: !10170)
!10175 = !DILocation(line: 3316, column: 3, scope: !10170)
!10176 = !DILocation(line: 3318, column: 10, scope: !10143)
!10177 = !DILocation(line: 3318, column: 16, scope: !10143)
!10178 = !DILocation(line: 3318, column: 2, scope: !10143)
!10179 = !DILocation(line: 3321, column: 4, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 3318, column: 23)
!10181 = !DILocation(line: 3321, column: 10, scope: !10180)
!10182 = !DILocation(line: 3321, column: 13, scope: !10180)
!10183 = !DILocation(line: 3321, column: 30, scope: !10180)
!10184 = !DILocation(line: 3320, column: 9, scope: !10180)
!10185 = !DILocation(line: 3320, column: 7, scope: !10180)
!10186 = !DILocation(line: 3322, column: 3, scope: !10180)
!10187 = !DILocation(line: 3324, column: 33, scope: !10180)
!10188 = !DILocation(line: 3324, column: 39, scope: !10180)
!10189 = !DILocation(line: 3324, column: 9, scope: !10180)
!10190 = !DILocation(line: 3324, column: 7, scope: !10180)
!10191 = !DILocation(line: 3325, column: 3, scope: !10180)
!10192 = !DILocation(line: 3329, column: 7, scope: !10180)
!10193 = !DILocation(line: 3330, column: 3, scope: !10180)
!10194 = !DILocation(line: 3332, column: 6, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 3332, column: 6)
!10196 = !DILocation(line: 3332, column: 6, scope: !10143)
!10197 = !DILocation(line: 3334, column: 3, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10195, file: !3, line: 3332, column: 11)
!10199 = !DILocation(line: 3337, column: 8, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 3337, column: 6)
!10201 = !DILocation(line: 3337, column: 14, scope: !10200)
!10202 = !DILocation(line: 3337, column: 20, scope: !10200)
!10203 = !DILocation(line: 3337, column: 6, scope: !10143)
!10204 = !DILocation(line: 3338, column: 23, scope: !10200)
!10205 = !DILocation(line: 3338, column: 3, scope: !10200)
!10206 = !DILocation(line: 3340, column: 22, scope: !10143)
!10207 = !DILocation(line: 3340, column: 2, scope: !10143)
!10208 = !DILocation(line: 3341, column: 25, scope: !10143)
!10209 = !DILocation(line: 3341, column: 37, scope: !10143)
!10210 = !DILocation(line: 3341, column: 22, scope: !10143)
!10211 = !DILocation(line: 3341, column: 45, scope: !10143)
!10212 = !DILocation(line: 3341, column: 43, scope: !10143)
!10213 = !DILocation(line: 3341, column: 58, scope: !10143)
!10214 = !DILocation(line: 3341, column: 10, scope: !10143)
!10215 = !DILocation(line: 3343, column: 4, scope: !10143)
!10216 = !DILocation(line: 3344, column: 2, scope: !10143)
!10217 = !DILocation(line: 3345, column: 3, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 3344, column: 5)
!10219 = !DILocation(line: 3347, column: 27, scope: !10218)
!10220 = !DILocation(line: 3347, column: 3, scope: !10218)
!10221 = !DILocation(line: 3348, column: 7, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 3348, column: 7)
!10223 = !DILocation(line: 3348, column: 14, scope: !10222)
!10224 = !DILocation(line: 3348, column: 7, scope: !10218)
!10225 = !DILocation(line: 3349, column: 4, scope: !10222)
!10226 = !DILocation(line: 3350, column: 4, scope: !10218)
!10227 = !DILocation(line: 3351, column: 2, scope: !10218)
!10228 = !DILocation(line: 3351, column: 11, scope: !10143)
!10229 = !DILocation(line: 3351, column: 15, scope: !10143)
!10230 = !DILocation(line: 3351, column: 23, scope: !10143)
!10231 = !DILocation(line: 3351, column: 13, scope: !10143)
!10232 = distinct !{!10232, !10216, !10233}
!10233 = !DILocation(line: 3351, column: 52, scope: !10143)
!10234 = !DILocation(line: 3353, column: 6, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10143, file: !3, line: 3353, column: 6)
!10236 = !DILocation(line: 3353, column: 13, scope: !10235)
!10237 = !DILocation(line: 3353, column: 6, scope: !10143)
!10238 = !DILocation(line: 3355, column: 5, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 3354, column: 7)
!10240 = distinct !DILexicalBlock(scope: !10235, file: !3, line: 3353, column: 28)
!10241 = !DILocation(line: 3354, column: 7, scope: !10239)
!10242 = !DILocation(line: 3354, column: 7, scope: !10240)
!10243 = !DILocation(line: 3356, column: 8, scope: !10244)
!10244 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 3355, column: 26)
!10245 = !DILocation(line: 3357, column: 4, scope: !10244)
!10246 = !DILocation(line: 3361, column: 2, scope: !10240)
!10247 = !DILocation(line: 3353, column: 15, scope: !10235)
!10248 = !DILabel(scope: !10143, name: "done", file: !3, line: 3362)
!10249 = !DILocation(line: 3362, column: 1, scope: !10143)
!10250 = !DILocation(line: 3364, column: 2, scope: !10143)
!10251 = !DILocation(line: 3364, column: 5, scope: !10143)
!10252 = !DILocation(line: 3364, column: 14, scope: !10143)
!10253 = !DILocation(line: 3364, column: 22, scope: !10143)
!10254 = !DILocation(line: 3364, column: 28, scope: !10143)
!10255 = !DILocation(line: 3365, column: 2, scope: !10143)
!10256 = !DILocation(line: 3365, column: 5, scope: !10143)
!10257 = !DILocation(line: 3365, column: 9, scope: !10143)
!10258 = !DILocation(line: 3365, column: 17, scope: !10143)
!10259 = !DILocation(line: 3365, column: 23, scope: !10143)
!10260 = !DILocation(line: 3366, column: 2, scope: !10143)
!10261 = !DILocation(line: 3366, column: 5, scope: !10143)
!10262 = !DILocation(line: 3366, column: 17, scope: !10143)
!10263 = !DILocation(line: 3366, column: 25, scope: !10143)
!10264 = !DILocation(line: 3366, column: 31, scope: !10143)
!10265 = !DILocation(line: 3367, column: 2, scope: !10143)
!10266 = !DILocation(line: 3367, column: 5, scope: !10143)
!10267 = !DILocation(line: 3367, column: 20, scope: !10143)
!10268 = !DILocation(line: 3367, column: 28, scope: !10143)
!10269 = !DILocation(line: 3367, column: 34, scope: !10143)
!10270 = !DILocation(line: 3368, column: 2, scope: !10143)
!10271 = !DILocation(line: 3368, column: 5, scope: !10143)
!10272 = !DILocation(line: 3368, column: 20, scope: !10143)
!10273 = !DILocation(line: 3368, column: 28, scope: !10143)
!10274 = !DILocation(line: 3368, column: 34, scope: !10143)
!10275 = !DILocation(line: 3371, column: 2, scope: !10143)
!10276 = !DILocation(line: 3371, column: 8, scope: !10143)
!10277 = !DILocation(line: 3371, column: 19, scope: !10143)
!10278 = !DILocation(line: 3373, column: 9, scope: !10143)
!10279 = !DILocation(line: 3373, column: 2, scope: !10143)
!10280 = distinct !DISubprogram(name: "cxd2841er_send_diseqc_msg", scope: !3, file: !3, line: 3694, type: !4140, scopeLine: 3696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10281 = !DILocalVariable(name: "fe", arg: 1, scope: !10280, file: !3, line: 3694, type: !390)
!10282 = !DILocation(line: 3694, column: 59, scope: !10280)
!10283 = !DILocalVariable(name: "cmd", arg: 2, scope: !10280, file: !3, line: 3695, type: !4142)
!10284 = !DILocation(line: 3695, column: 40, scope: !10280)
!10285 = !DILocalVariable(name: "i", scope: !10280, file: !3, line: 3697, type: !331)
!10286 = !DILocation(line: 3697, column: 6, scope: !10280)
!10287 = !DILocalVariable(name: "data", scope: !10280, file: !3, line: 3698, type: !10288)
!10288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 96, elements: !2348)
!10289 = !DILocation(line: 3698, column: 5, scope: !10280)
!10290 = !DILocalVariable(name: "priv", scope: !10280, file: !3, line: 3699, type: !4266)
!10291 = !DILocation(line: 3699, column: 25, scope: !10280)
!10292 = !DILocation(line: 3699, column: 33, scope: !10280)
!10293 = !DILocation(line: 3699, column: 37, scope: !10280)
!10294 = !DILocation(line: 3701, column: 6, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10280, file: !3, line: 3701, column: 6)
!10296 = !DILocation(line: 3701, column: 12, scope: !10295)
!10297 = !DILocation(line: 3701, column: 18, scope: !10295)
!10298 = !DILocation(line: 3701, column: 35, scope: !10295)
!10299 = !DILocation(line: 3702, column: 4, scope: !10295)
!10300 = !DILocation(line: 3702, column: 10, scope: !10295)
!10301 = !DILocation(line: 3702, column: 16, scope: !10295)
!10302 = !DILocation(line: 3701, column: 6, scope: !10280)
!10303 = !DILocation(line: 3703, column: 3, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 3702, column: 35)
!10305 = !DILocation(line: 3705, column: 3, scope: !10304)
!10306 = !DILocation(line: 3709, column: 22, scope: !10280)
!10307 = !DILocation(line: 3709, column: 2, scope: !10280)
!10308 = !DILocation(line: 3711, column: 22, scope: !10280)
!10309 = !DILocation(line: 3711, column: 2, scope: !10280)
!10310 = !DILocation(line: 3713, column: 22, scope: !10280)
!10311 = !DILocation(line: 3713, column: 44, scope: !10280)
!10312 = !DILocation(line: 3713, column: 49, scope: !10280)
!10313 = !DILocation(line: 3713, column: 2, scope: !10280)
!10314 = !DILocation(line: 3714, column: 2, scope: !10280)
!10315 = !DILocation(line: 3715, column: 9, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10280, file: !3, line: 3715, column: 2)
!10317 = !DILocation(line: 3715, column: 7, scope: !10316)
!10318 = !DILocation(line: 3715, column: 14, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 3715, column: 2)
!10320 = !DILocation(line: 3715, column: 18, scope: !10319)
!10321 = !DILocation(line: 3715, column: 23, scope: !10319)
!10322 = !DILocation(line: 3715, column: 16, scope: !10319)
!10323 = !DILocation(line: 3715, column: 31, scope: !10319)
!10324 = !DILocation(line: 3715, column: 34, scope: !10319)
!10325 = !DILocation(line: 3715, column: 36, scope: !10319)
!10326 = !DILocation(line: 0, scope: !10319)
!10327 = !DILocation(line: 3715, column: 2, scope: !10316)
!10328 = !DILocation(line: 3716, column: 13, scope: !10319)
!10329 = !DILocation(line: 3716, column: 18, scope: !10319)
!10330 = !DILocation(line: 3716, column: 22, scope: !10319)
!10331 = !DILocation(line: 3716, column: 8, scope: !10319)
!10332 = !DILocation(line: 3716, column: 3, scope: !10319)
!10333 = !DILocation(line: 3716, column: 11, scope: !10319)
!10334 = !DILocation(line: 3715, column: 53, scope: !10319)
!10335 = !DILocation(line: 3715, column: 2, scope: !10319)
!10336 = distinct !{!10336, !10327, !10337}
!10337 = !DILocation(line: 3716, column: 23, scope: !10316)
!10338 = !DILocation(line: 3717, column: 23, scope: !10280)
!10339 = !DILocation(line: 3717, column: 45, scope: !10280)
!10340 = !DILocation(line: 3717, column: 2, scope: !10280)
!10341 = !DILocation(line: 3719, column: 22, scope: !10280)
!10342 = !DILocation(line: 3719, column: 2, scope: !10280)
!10343 = !DILocation(line: 3721, column: 22, scope: !10280)
!10344 = !DILocation(line: 3721, column: 2, scope: !10280)
!10345 = !DILocation(line: 3723, column: 22, scope: !10280)
!10346 = !DILocation(line: 3723, column: 2, scope: !10280)
!10347 = !DILocation(line: 3725, column: 9, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10280, file: !3, line: 3725, column: 2)
!10349 = !DILocation(line: 3725, column: 7, scope: !10348)
!10350 = !DILocation(line: 3725, column: 14, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 3725, column: 2)
!10352 = !DILocation(line: 3725, column: 16, scope: !10351)
!10353 = !DILocation(line: 3725, column: 2, scope: !10348)
!10354 = !DILocation(line: 3726, column: 22, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10351, file: !3, line: 3725, column: 27)
!10356 = !DILocation(line: 3726, column: 44, scope: !10355)
!10357 = !DILocation(line: 3726, column: 3, scope: !10355)
!10358 = !DILocation(line: 3727, column: 8, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10355, file: !3, line: 3727, column: 7)
!10360 = !DILocation(line: 3727, column: 7, scope: !10355)
!10361 = !DILocation(line: 3730, column: 4, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 3727, column: 17)
!10363 = !DILocation(line: 3732, column: 3, scope: !10355)
!10364 = !DILocation(line: 3733, column: 2, scope: !10355)
!10365 = !DILocation(line: 3725, column: 23, scope: !10351)
!10366 = !DILocation(line: 3725, column: 2, scope: !10351)
!10367 = distinct !{!10367, !10353, !10368}
!10368 = !DILocation(line: 3733, column: 2, scope: !10348)
!10369 = !DILocation(line: 3736, column: 2, scope: !10280)
!10370 = !DILocation(line: 3737, column: 1, scope: !10280)
!10371 = distinct !DISubprogram(name: "cxd2841er_send_burst", scope: !3, file: !3, line: 3653, type: !4161, scopeLine: 3655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10372 = !DILocalVariable(name: "fe", arg: 1, scope: !10371, file: !3, line: 3653, type: !390)
!10373 = !DILocation(line: 3653, column: 54, scope: !10371)
!10374 = !DILocalVariable(name: "burst", arg: 2, scope: !10371, file: !3, line: 3654, type: !171)
!10375 = !DILocation(line: 3654, column: 26, scope: !10371)
!10376 = !DILocalVariable(name: "data", scope: !10371, file: !3, line: 3656, type: !332)
!10377 = !DILocation(line: 3656, column: 5, scope: !10371)
!10378 = !DILocalVariable(name: "priv", scope: !10371, file: !3, line: 3657, type: !4266)
!10379 = !DILocation(line: 3657, column: 25, scope: !10371)
!10380 = !DILocation(line: 3657, column: 33, scope: !10371)
!10381 = !DILocation(line: 3657, column: 37, scope: !10371)
!10382 = !DILocation(line: 3661, column: 6, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 3661, column: 6)
!10384 = !DILocation(line: 3661, column: 12, scope: !10383)
!10385 = !DILocation(line: 3661, column: 18, scope: !10383)
!10386 = !DILocation(line: 3661, column: 35, scope: !10383)
!10387 = !DILocation(line: 3662, column: 4, scope: !10383)
!10388 = !DILocation(line: 3662, column: 10, scope: !10383)
!10389 = !DILocation(line: 3662, column: 16, scope: !10383)
!10390 = !DILocation(line: 3661, column: 6, scope: !10371)
!10391 = !DILocation(line: 3663, column: 3, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 3662, column: 35)
!10393 = !DILocation(line: 3665, column: 3, scope: !10392)
!10394 = !DILocation(line: 3667, column: 10, scope: !10371)
!10395 = !DILocation(line: 3667, column: 16, scope: !10371)
!10396 = !DILocation(line: 3667, column: 9, scope: !10371)
!10397 = !DILocation(line: 3667, column: 7, scope: !10371)
!10398 = !DILocation(line: 3668, column: 22, scope: !10371)
!10399 = !DILocation(line: 3668, column: 2, scope: !10371)
!10400 = !DILocation(line: 3669, column: 22, scope: !10371)
!10401 = !DILocation(line: 3669, column: 2, scope: !10371)
!10402 = !DILocation(line: 3670, column: 22, scope: !10371)
!10403 = !DILocation(line: 3670, column: 44, scope: !10371)
!10404 = !DILocation(line: 3670, column: 2, scope: !10371)
!10405 = !DILocation(line: 3671, column: 2, scope: !10371)
!10406 = !DILocation(line: 3672, column: 1, scope: !10371)
!10407 = distinct !DISubprogram(name: "cxd2841er_set_tone", scope: !3, file: !3, line: 3674, type: !4165, scopeLine: 3676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10408 = !DILocalVariable(name: "fe", arg: 1, scope: !10407, file: !3, line: 3674, type: !390)
!10409 = !DILocation(line: 3674, column: 52, scope: !10407)
!10410 = !DILocalVariable(name: "tone", arg: 2, scope: !10407, file: !3, line: 3675, type: !78)
!10411 = !DILocation(line: 3675, column: 32, scope: !10407)
!10412 = !DILocalVariable(name: "data", scope: !10407, file: !3, line: 3677, type: !332)
!10413 = !DILocation(line: 3677, column: 5, scope: !10407)
!10414 = !DILocalVariable(name: "priv", scope: !10407, file: !3, line: 3678, type: !4266)
!10415 = !DILocation(line: 3678, column: 25, scope: !10407)
!10416 = !DILocation(line: 3678, column: 33, scope: !10407)
!10417 = !DILocation(line: 3678, column: 37, scope: !10407)
!10418 = !DILocation(line: 3682, column: 6, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 3682, column: 6)
!10420 = !DILocation(line: 3682, column: 12, scope: !10419)
!10421 = !DILocation(line: 3682, column: 18, scope: !10419)
!10422 = !DILocation(line: 3682, column: 35, scope: !10419)
!10423 = !DILocation(line: 3683, column: 4, scope: !10419)
!10424 = !DILocation(line: 3683, column: 10, scope: !10419)
!10425 = !DILocation(line: 3683, column: 16, scope: !10419)
!10426 = !DILocation(line: 3682, column: 6, scope: !10407)
!10427 = !DILocation(line: 3684, column: 3, scope: !10428)
!10428 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 3683, column: 35)
!10429 = !DILocation(line: 3686, column: 3, scope: !10428)
!10430 = !DILocation(line: 3688, column: 10, scope: !10407)
!10431 = !DILocation(line: 3688, column: 15, scope: !10407)
!10432 = !DILocation(line: 3688, column: 9, scope: !10407)
!10433 = !DILocation(line: 3688, column: 7, scope: !10407)
!10434 = !DILocation(line: 3689, column: 22, scope: !10407)
!10435 = !DILocation(line: 3689, column: 2, scope: !10407)
!10436 = !DILocation(line: 3690, column: 22, scope: !10407)
!10437 = !DILocation(line: 3690, column: 44, scope: !10407)
!10438 = !DILocation(line: 3690, column: 2, scope: !10407)
!10439 = !DILocation(line: 3691, column: 2, scope: !10407)
!10440 = !DILocation(line: 3692, column: 1, scope: !10407)
!10441 = distinct !DISubprogram(name: "cxd2841er_sleep_s_to_shutdown", scope: !3, file: !3, line: 572, type: !5870, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10442 = !DILocalVariable(name: "priv", arg: 1, scope: !10441, file: !3, line: 572, type: !4266)
!10443 = !DILocation(line: 572, column: 65, scope: !10441)
!10444 = !DILocation(line: 575, column: 6, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10441, file: !3, line: 575, column: 6)
!10446 = !DILocation(line: 575, column: 12, scope: !10445)
!10447 = !DILocation(line: 575, column: 18, scope: !10445)
!10448 = !DILocation(line: 575, column: 6, scope: !10441)
!10449 = !DILocation(line: 578, column: 3, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 575, column: 36)
!10451 = !DILocation(line: 581, column: 22, scope: !10441)
!10452 = !DILocation(line: 581, column: 2, scope: !10441)
!10453 = !DILocation(line: 583, column: 22, scope: !10441)
!10454 = !DILocation(line: 583, column: 2, scope: !10441)
!10455 = !DILocation(line: 585, column: 22, scope: !10441)
!10456 = !DILocation(line: 585, column: 2, scope: !10441)
!10457 = !DILocation(line: 587, column: 22, scope: !10441)
!10458 = !DILocation(line: 587, column: 2, scope: !10441)
!10459 = !DILocation(line: 589, column: 22, scope: !10441)
!10460 = !DILocation(line: 589, column: 2, scope: !10441)
!10461 = !DILocation(line: 591, column: 22, scope: !10441)
!10462 = !DILocation(line: 591, column: 2, scope: !10441)
!10463 = !DILocation(line: 592, column: 2, scope: !10441)
!10464 = !DILocation(line: 592, column: 8, scope: !10441)
!10465 = !DILocation(line: 592, column: 14, scope: !10441)
!10466 = !DILocation(line: 593, column: 2, scope: !10441)
!10467 = !DILocation(line: 594, column: 1, scope: !10441)
!10468 = distinct !DISubprogram(name: "cxd2841er_active_s_to_sleep_s", scope: !3, file: !3, line: 528, type: !5870, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10469 = !DILocalVariable(name: "priv", arg: 1, scope: !10468, file: !3, line: 528, type: !4266)
!10470 = !DILocation(line: 528, column: 65, scope: !10468)
!10471 = !DILocation(line: 531, column: 6, scope: !10472)
!10472 = distinct !DILexicalBlock(scope: !10468, file: !3, line: 531, column: 6)
!10473 = !DILocation(line: 531, column: 12, scope: !10472)
!10474 = !DILocation(line: 531, column: 18, scope: !10472)
!10475 = !DILocation(line: 531, column: 6, scope: !10468)
!10476 = !DILocation(line: 532, column: 3, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 531, column: 37)
!10478 = !DILocation(line: 534, column: 3, scope: !10477)
!10479 = !DILocation(line: 537, column: 22, scope: !10468)
!10480 = !DILocation(line: 537, column: 2, scope: !10468)
!10481 = !DILocation(line: 539, column: 22, scope: !10468)
!10482 = !DILocation(line: 539, column: 2, scope: !10468)
!10483 = !DILocation(line: 541, column: 22, scope: !10468)
!10484 = !DILocation(line: 541, column: 2, scope: !10468)
!10485 = !DILocation(line: 543, column: 22, scope: !10468)
!10486 = !DILocation(line: 543, column: 2, scope: !10468)
!10487 = !DILocation(line: 545, column: 22, scope: !10468)
!10488 = !DILocation(line: 545, column: 2, scope: !10468)
!10489 = !DILocation(line: 547, column: 22, scope: !10468)
!10490 = !DILocation(line: 547, column: 2, scope: !10468)
!10491 = !DILocation(line: 549, column: 22, scope: !10468)
!10492 = !DILocation(line: 549, column: 2, scope: !10468)
!10493 = !DILocation(line: 551, column: 22, scope: !10468)
!10494 = !DILocation(line: 551, column: 2, scope: !10468)
!10495 = !DILocation(line: 553, column: 22, scope: !10468)
!10496 = !DILocation(line: 553, column: 2, scope: !10468)
!10497 = !DILocation(line: 555, column: 22, scope: !10468)
!10498 = !DILocation(line: 555, column: 2, scope: !10468)
!10499 = !DILocation(line: 557, column: 22, scope: !10468)
!10500 = !DILocation(line: 557, column: 2, scope: !10468)
!10501 = !DILocation(line: 559, column: 22, scope: !10468)
!10502 = !DILocation(line: 559, column: 2, scope: !10468)
!10503 = !DILocation(line: 561, column: 22, scope: !10468)
!10504 = !DILocation(line: 561, column: 2, scope: !10468)
!10505 = !DILocation(line: 563, column: 22, scope: !10468)
!10506 = !DILocation(line: 563, column: 2, scope: !10468)
!10507 = !DILocation(line: 565, column: 22, scope: !10468)
!10508 = !DILocation(line: 565, column: 2, scope: !10468)
!10509 = !DILocation(line: 567, column: 22, scope: !10468)
!10510 = !DILocation(line: 567, column: 2, scope: !10468)
!10511 = !DILocation(line: 568, column: 2, scope: !10468)
!10512 = !DILocation(line: 568, column: 8, scope: !10468)
!10513 = !DILocation(line: 568, column: 14, scope: !10468)
!10514 = !DILocation(line: 569, column: 2, scope: !10468)
!10515 = !DILocation(line: 570, column: 1, scope: !10468)
!10516 = distinct !DISubprogram(name: "cxd2841er_shutdown_to_sleep_s", scope: !3, file: !3, line: 774, type: !5870, scopeLine: 775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10517 = !DILocalVariable(name: "priv", arg: 1, scope: !10516, file: !3, line: 774, type: !4266)
!10518 = !DILocation(line: 774, column: 65, scope: !10516)
!10519 = !DILocation(line: 777, column: 6, scope: !10520)
!10520 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 777, column: 6)
!10521 = !DILocation(line: 777, column: 12, scope: !10520)
!10522 = !DILocation(line: 777, column: 18, scope: !10520)
!10523 = !DILocation(line: 777, column: 6, scope: !10516)
!10524 = !DILocation(line: 780, column: 3, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 777, column: 37)
!10526 = !DILocation(line: 783, column: 22, scope: !10516)
!10527 = !DILocation(line: 783, column: 2, scope: !10516)
!10528 = !DILocation(line: 785, column: 22, scope: !10516)
!10529 = !DILocation(line: 785, column: 2, scope: !10516)
!10530 = !DILocation(line: 786, column: 2, scope: !10516)
!10531 = !DILocation(line: 788, column: 22, scope: !10516)
!10532 = !DILocation(line: 788, column: 2, scope: !10516)
!10533 = !DILocation(line: 790, column: 22, scope: !10516)
!10534 = !DILocation(line: 790, column: 2, scope: !10516)
!10535 = !DILocation(line: 792, column: 10, scope: !10516)
!10536 = !DILocation(line: 792, column: 16, scope: !10516)
!10537 = !DILocation(line: 792, column: 2, scope: !10516)
!10538 = !DILocation(line: 794, column: 23, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10516, file: !3, line: 792, column: 22)
!10540 = !DILocation(line: 794, column: 3, scope: !10539)
!10541 = !DILocation(line: 795, column: 3, scope: !10539)
!10542 = !DILocation(line: 798, column: 23, scope: !10539)
!10543 = !DILocation(line: 798, column: 3, scope: !10539)
!10544 = !DILocation(line: 799, column: 23, scope: !10539)
!10545 = !DILocation(line: 799, column: 3, scope: !10539)
!10546 = !DILocation(line: 800, column: 3, scope: !10539)
!10547 = !DILocation(line: 802, column: 23, scope: !10539)
!10548 = !DILocation(line: 802, column: 3, scope: !10539)
!10549 = !DILocation(line: 803, column: 3, scope: !10539)
!10550 = !DILocation(line: 807, column: 3, scope: !10539)
!10551 = !DILocation(line: 811, column: 22, scope: !10516)
!10552 = !DILocation(line: 811, column: 2, scope: !10516)
!10553 = !DILocation(line: 813, column: 22, scope: !10516)
!10554 = !DILocation(line: 813, column: 2, scope: !10516)
!10555 = !DILocation(line: 814, column: 2, scope: !10516)
!10556 = !DILocation(line: 816, column: 22, scope: !10516)
!10557 = !DILocation(line: 816, column: 2, scope: !10516)
!10558 = !DILocation(line: 818, column: 22, scope: !10516)
!10559 = !DILocation(line: 818, column: 2, scope: !10516)
!10560 = !DILocation(line: 820, column: 22, scope: !10516)
!10561 = !DILocation(line: 820, column: 2, scope: !10516)
!10562 = !DILocation(line: 822, column: 22, scope: !10516)
!10563 = !DILocation(line: 822, column: 2, scope: !10516)
!10564 = !DILocation(line: 823, column: 22, scope: !10516)
!10565 = !DILocation(line: 823, column: 2, scope: !10516)
!10566 = !DILocation(line: 825, column: 22, scope: !10516)
!10567 = !DILocation(line: 825, column: 2, scope: !10516)
!10568 = !DILocation(line: 826, column: 22, scope: !10516)
!10569 = !DILocation(line: 826, column: 2, scope: !10516)
!10570 = !DILocation(line: 827, column: 22, scope: !10516)
!10571 = !DILocation(line: 827, column: 2, scope: !10516)
!10572 = !DILocation(line: 828, column: 2, scope: !10516)
!10573 = !DILocation(line: 828, column: 8, scope: !10516)
!10574 = !DILocation(line: 828, column: 14, scope: !10516)
!10575 = !DILocation(line: 829, column: 2, scope: !10516)
!10576 = !DILocation(line: 830, column: 1, scope: !10516)
!10577 = distinct !DISubprogram(name: "cxd2841er_get_carrier_offset_s_s2", scope: !3, file: !3, line: 1126, type: !6515, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10578 = !DILocation(line: 165, column: 50, scope: !6283, inlinedAt: !10579)
!10579 = distinct !DILocation(line: 1166, column: 17, scope: !10577)
!10580 = !DILocation(line: 165, column: 61, scope: !6283, inlinedAt: !10579)
!10581 = !DILocation(line: 167, column: 7, scope: !6283, inlinedAt: !10579)
!10582 = !DILocalVariable(name: "priv", arg: 1, scope: !10577, file: !3, line: 1126, type: !4266)
!10583 = !DILocation(line: 1126, column: 69, scope: !10577)
!10584 = !DILocalVariable(name: "offset", arg: 2, scope: !10577, file: !3, line: 1127, type: !910)
!10585 = !DILocation(line: 1127, column: 16, scope: !10577)
!10586 = !DILocalVariable(name: "data", scope: !10577, file: !3, line: 1129, type: !6654)
!10587 = !DILocation(line: 1129, column: 5, scope: !10577)
!10588 = !DILocalVariable(name: "is_hs_mode", scope: !10577, file: !3, line: 1130, type: !332)
!10589 = !DILocation(line: 1130, column: 5, scope: !10577)
!10590 = !DILocalVariable(name: "cfrl_ctrlval", scope: !10577, file: !3, line: 1131, type: !344)
!10591 = !DILocation(line: 1131, column: 6, scope: !10577)
!10592 = !DILocalVariable(name: "temp_div", scope: !10577, file: !3, line: 1132, type: !344)
!10593 = !DILocation(line: 1132, column: 6, scope: !10577)
!10594 = !DILocalVariable(name: "temp_q", scope: !10577, file: !3, line: 1132, type: !344)
!10595 = !DILocation(line: 1132, column: 16, scope: !10577)
!10596 = !DILocalVariable(name: "temp_r", scope: !10577, file: !3, line: 1132, type: !344)
!10597 = !DILocation(line: 1132, column: 24, scope: !10577)
!10598 = !DILocation(line: 1134, column: 6, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 1134, column: 6)
!10600 = !DILocation(line: 1134, column: 12, scope: !10599)
!10601 = !DILocation(line: 1134, column: 18, scope: !10599)
!10602 = !DILocation(line: 1134, column: 6, scope: !10577)
!10603 = !DILocation(line: 1137, column: 3, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10599, file: !3, line: 1134, column: 37)
!10605 = !DILocation(line: 1144, column: 22, scope: !10577)
!10606 = !DILocation(line: 1144, column: 2, scope: !10577)
!10607 = !DILocation(line: 1145, column: 21, scope: !10577)
!10608 = !DILocation(line: 1145, column: 44, scope: !10577)
!10609 = !DILocation(line: 1145, column: 2, scope: !10577)
!10610 = !DILocation(line: 1146, column: 6, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 1146, column: 6)
!10612 = !DILocation(line: 1146, column: 14, scope: !10611)
!10613 = !DILocation(line: 1146, column: 6, scope: !10577)
!10614 = !DILocation(line: 1151, column: 22, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 1146, column: 22)
!10616 = !DILocation(line: 1151, column: 45, scope: !10615)
!10617 = !DILocation(line: 1151, column: 3, scope: !10615)
!10618 = !DILocation(line: 1152, column: 17, scope: !10615)
!10619 = !DILocation(line: 1152, column: 25, scope: !10615)
!10620 = !DILocation(line: 1152, column: 16, scope: !10615)
!10621 = !DILocation(line: 1152, column: 14, scope: !10615)
!10622 = !DILocation(line: 1153, column: 2, scope: !10615)
!10623 = !DILocation(line: 1157, column: 3, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10611, file: !3, line: 1153, column: 9)
!10625 = !DILocation(line: 1165, column: 22, scope: !10577)
!10626 = !DILocation(line: 1165, column: 44, scope: !10577)
!10627 = !DILocation(line: 1165, column: 2, scope: !10577)
!10628 = !DILocation(line: 1166, column: 38, scope: !10577)
!10629 = !DILocation(line: 1166, column: 33, scope: !10577)
!10630 = !DILocation(line: 1166, column: 46, scope: !10577)
!10631 = !DILocation(line: 1166, column: 54, scope: !10577)
!10632 = !DILocation(line: 1167, column: 12, scope: !10577)
!10633 = !DILocation(line: 1167, column: 7, scope: !10577)
!10634 = !DILocation(line: 1167, column: 20, scope: !10577)
!10635 = !DILocation(line: 1167, column: 28, scope: !10577)
!10636 = !DILocation(line: 1166, column: 61, scope: !10577)
!10637 = !DILocation(line: 1168, column: 11, scope: !10577)
!10638 = !DILocation(line: 1168, column: 6, scope: !10577)
!10639 = !DILocation(line: 1168, column: 19, scope: !10577)
!10640 = !DILocation(line: 1167, column: 35, scope: !10577)
!10641 = !DILocation(line: 167, column: 20, scope: !6283, inlinedAt: !10579)
!10642 = !DILocation(line: 167, column: 18, scope: !6283, inlinedAt: !10579)
!10643 = !DILocation(line: 167, column: 15, scope: !6283, inlinedAt: !10579)
!10644 = !DILocation(line: 168, column: 17, scope: !6283, inlinedAt: !10579)
!10645 = !DILocation(line: 168, column: 26, scope: !6283, inlinedAt: !10579)
!10646 = !DILocation(line: 168, column: 23, scope: !6283, inlinedAt: !10579)
!10647 = !DILocation(line: 168, column: 36, scope: !6283, inlinedAt: !10579)
!10648 = !DILocation(line: 168, column: 33, scope: !6283, inlinedAt: !10579)
!10649 = !DILocation(line: 1166, column: 15, scope: !10577)
!10650 = !DILocation(line: 1169, column: 14, scope: !10577)
!10651 = !DILocation(line: 1169, column: 11, scope: !10577)
!10652 = !DILocation(line: 1170, column: 6, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 1170, column: 6)
!10654 = !DILocation(line: 1170, column: 19, scope: !10653)
!10655 = !DILocation(line: 1170, column: 6, scope: !10577)
!10656 = !DILocation(line: 1171, column: 34, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 1170, column: 24)
!10658 = !DILocation(line: 1171, column: 32, scope: !10657)
!10659 = !DILocation(line: 1172, column: 4, scope: !10657)
!10660 = !DILocation(line: 1171, column: 12, scope: !10657)
!10661 = !DILocation(line: 1171, column: 10, scope: !10657)
!10662 = !DILocation(line: 1173, column: 2, scope: !10657)
!10663 = !DILocation(line: 1174, column: 35, scope: !10664)
!10664 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 1173, column: 9)
!10665 = !DILocation(line: 1174, column: 33, scope: !10664)
!10666 = !DILocation(line: 1175, column: 4, scope: !10664)
!10667 = !DILocation(line: 1174, column: 12, scope: !10664)
!10668 = !DILocation(line: 1174, column: 10, scope: !10664)
!10669 = !DILocation(line: 1177, column: 6, scope: !10670)
!10670 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 1177, column: 6)
!10671 = !DILocation(line: 1177, column: 16, scope: !10670)
!10672 = !DILocation(line: 1177, column: 25, scope: !10670)
!10673 = !DILocation(line: 1177, column: 13, scope: !10670)
!10674 = !DILocation(line: 1177, column: 6, scope: !10577)
!10675 = !DILocation(line: 1178, column: 9, scope: !10670)
!10676 = !DILocation(line: 1178, column: 3, scope: !10670)
!10677 = !DILocation(line: 1179, column: 6, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10577, file: !3, line: 1179, column: 6)
!10679 = !DILocation(line: 1179, column: 19, scope: !10678)
!10680 = !DILocation(line: 1179, column: 6, scope: !10577)
!10681 = !DILocation(line: 1180, column: 10, scope: !10678)
!10682 = !DILocation(line: 1180, column: 3, scope: !10678)
!10683 = !DILocation(line: 1181, column: 12, scope: !10577)
!10684 = !DILocation(line: 1181, column: 3, scope: !10577)
!10685 = !DILocation(line: 1181, column: 10, scope: !10577)
!10686 = !DILocation(line: 1182, column: 2, scope: !10577)
!10687 = !DILocation(line: 1183, column: 1, scope: !10577)
!10688 = distinct !DISubprogram(name: "cxd2841er_sleep_s_to_active_s", scope: !3, file: !3, line: 385, type: !10689, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !459)
!10689 = !DISubroutineType(types: !10690)
!10690 = !{!331, !4266, !332, !326}
!10691 = !DILocalVariable(name: "priv", arg: 1, scope: !10688, file: !3, line: 385, type: !4266)
!10692 = !DILocation(line: 385, column: 65, scope: !10688)
!10693 = !DILocalVariable(name: "system", arg: 2, scope: !10688, file: !3, line: 386, type: !332)
!10694 = !DILocation(line: 386, column: 10, scope: !10688)
!10695 = !DILocalVariable(name: "symbol_rate", arg: 3, scope: !10688, file: !3, line: 386, type: !326)
!10696 = !DILocation(line: 386, column: 22, scope: !10688)
!10697 = !DILocalVariable(name: "ret", scope: !10688, file: !3, line: 388, type: !331)
!10698 = !DILocation(line: 388, column: 6, scope: !10688)
!10699 = !DILocalVariable(name: "data", scope: !10688, file: !3, line: 389, type: !6300)
!10700 = !DILocation(line: 389, column: 5, scope: !10688)
!10701 = !DILocation(line: 391, column: 6, scope: !10702)
!10702 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 391, column: 6)
!10703 = !DILocation(line: 391, column: 12, scope: !10702)
!10704 = !DILocation(line: 391, column: 18, scope: !10702)
!10705 = !DILocation(line: 391, column: 6, scope: !10688)
!10706 = !DILocation(line: 392, column: 3, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 391, column: 36)
!10708 = !DILocation(line: 394, column: 3, scope: !10707)
!10709 = !DILocation(line: 397, column: 30, scope: !10688)
!10710 = !DILocation(line: 397, column: 2, scope: !10688)
!10711 = !DILocation(line: 399, column: 6, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 399, column: 6)
!10713 = !DILocation(line: 399, column: 13, scope: !10712)
!10714 = !DILocation(line: 399, column: 6, scope: !10688)
!10715 = !DILocation(line: 400, column: 3, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10712, file: !3, line: 399, column: 26)
!10717 = !DILocation(line: 400, column: 11, scope: !10716)
!10718 = !DILocation(line: 401, column: 2, scope: !10716)
!10719 = !DILocation(line: 401, column: 13, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10712, file: !3, line: 401, column: 13)
!10721 = !DILocation(line: 401, column: 20, scope: !10720)
!10722 = !DILocation(line: 401, column: 13, scope: !10712)
!10723 = !DILocation(line: 402, column: 3, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10720, file: !3, line: 401, column: 34)
!10725 = !DILocation(line: 402, column: 11, scope: !10724)
!10726 = !DILocation(line: 403, column: 2, scope: !10724)
!10727 = !DILocation(line: 404, column: 3, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10720, file: !3, line: 403, column: 9)
!10729 = !DILocation(line: 406, column: 3, scope: !10728)
!10730 = !DILocation(line: 409, column: 22, scope: !10688)
!10731 = !DILocation(line: 409, column: 2, scope: !10688)
!10732 = !DILocation(line: 410, column: 22, scope: !10688)
!10733 = !DILocation(line: 410, column: 44, scope: !10688)
!10734 = !DILocation(line: 410, column: 2, scope: !10688)
!10735 = !DILocation(line: 412, column: 2, scope: !10688)
!10736 = !DILocation(line: 412, column: 10, scope: !10688)
!10737 = !DILocation(line: 414, column: 22, scope: !10688)
!10738 = !DILocation(line: 414, column: 2, scope: !10688)
!10739 = !DILocation(line: 416, column: 22, scope: !10688)
!10740 = !DILocation(line: 416, column: 44, scope: !10688)
!10741 = !DILocation(line: 416, column: 2, scope: !10688)
!10742 = !DILocation(line: 418, column: 22, scope: !10688)
!10743 = !DILocation(line: 418, column: 2, scope: !10688)
!10744 = !DILocation(line: 420, column: 22, scope: !10688)
!10745 = !DILocation(line: 420, column: 44, scope: !10688)
!10746 = !DILocation(line: 420, column: 2, scope: !10688)
!10747 = !DILocation(line: 422, column: 22, scope: !10688)
!10748 = !DILocation(line: 422, column: 2, scope: !10688)
!10749 = !DILocation(line: 424, column: 22, scope: !10688)
!10750 = !DILocation(line: 424, column: 2, scope: !10688)
!10751 = !DILocation(line: 426, column: 22, scope: !10688)
!10752 = !DILocation(line: 426, column: 2, scope: !10688)
!10753 = !DILocation(line: 428, column: 22, scope: !10688)
!10754 = !DILocation(line: 428, column: 2, scope: !10688)
!10755 = !DILocation(line: 430, column: 22, scope: !10688)
!10756 = !DILocation(line: 430, column: 2, scope: !10688)
!10757 = !DILocation(line: 432, column: 22, scope: !10688)
!10758 = !DILocation(line: 432, column: 2, scope: !10688)
!10759 = !DILocation(line: 434, column: 22, scope: !10688)
!10760 = !DILocation(line: 434, column: 2, scope: !10688)
!10761 = !DILocation(line: 436, column: 22, scope: !10688)
!10762 = !DILocation(line: 436, column: 2, scope: !10688)
!10763 = !DILocation(line: 437, column: 22, scope: !10688)
!10764 = !DILocation(line: 437, column: 2, scope: !10688)
!10765 = !DILocation(line: 438, column: 2, scope: !10688)
!10766 = !DILocation(line: 438, column: 10, scope: !10688)
!10767 = !DILocation(line: 439, column: 2, scope: !10688)
!10768 = !DILocation(line: 439, column: 10, scope: !10688)
!10769 = !DILocation(line: 440, column: 2, scope: !10688)
!10770 = !DILocation(line: 440, column: 10, scope: !10688)
!10771 = !DILocation(line: 441, column: 2, scope: !10688)
!10772 = !DILocation(line: 441, column: 10, scope: !10688)
!10773 = !DILocation(line: 443, column: 22, scope: !10688)
!10774 = !DILocation(line: 443, column: 2, scope: !10688)
!10775 = !DILocation(line: 444, column: 23, scope: !10688)
!10776 = !DILocation(line: 444, column: 45, scope: !10688)
!10777 = !DILocation(line: 444, column: 2, scope: !10688)
!10778 = !DILocation(line: 445, column: 2, scope: !10688)
!10779 = !DILocation(line: 445, column: 10, scope: !10688)
!10780 = !DILocation(line: 446, column: 2, scope: !10688)
!10781 = !DILocation(line: 446, column: 10, scope: !10688)
!10782 = !DILocation(line: 447, column: 2, scope: !10688)
!10783 = !DILocation(line: 447, column: 10, scope: !10688)
!10784 = !DILocation(line: 448, column: 2, scope: !10688)
!10785 = !DILocation(line: 448, column: 10, scope: !10688)
!10786 = !DILocation(line: 449, column: 23, scope: !10688)
!10787 = !DILocation(line: 449, column: 45, scope: !10688)
!10788 = !DILocation(line: 449, column: 2, scope: !10688)
!10789 = !DILocation(line: 450, column: 2, scope: !10688)
!10790 = !DILocation(line: 450, column: 10, scope: !10688)
!10791 = !DILocation(line: 451, column: 2, scope: !10688)
!10792 = !DILocation(line: 451, column: 10, scope: !10688)
!10793 = !DILocation(line: 452, column: 23, scope: !10688)
!10794 = !DILocation(line: 452, column: 45, scope: !10688)
!10795 = !DILocation(line: 452, column: 2, scope: !10688)
!10796 = !DILocation(line: 454, column: 40, scope: !10688)
!10797 = !DILocation(line: 454, column: 46, scope: !10688)
!10798 = !DILocation(line: 454, column: 8, scope: !10688)
!10799 = !DILocation(line: 454, column: 6, scope: !10688)
!10800 = !DILocation(line: 455, column: 6, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10688, file: !3, line: 455, column: 6)
!10802 = !DILocation(line: 455, column: 10, scope: !10801)
!10803 = !DILocation(line: 455, column: 6, scope: !10688)
!10804 = !DILocation(line: 456, column: 10, scope: !10801)
!10805 = !DILocation(line: 456, column: 3, scope: !10801)
!10806 = !DILocation(line: 458, column: 22, scope: !10688)
!10807 = !DILocation(line: 458, column: 2, scope: !10688)
!10808 = !DILocation(line: 460, column: 22, scope: !10688)
!10809 = !DILocation(line: 460, column: 2, scope: !10688)
!10810 = !DILocation(line: 462, column: 22, scope: !10688)
!10811 = !DILocation(line: 462, column: 2, scope: !10688)
!10812 = !DILocation(line: 463, column: 2, scope: !10688)
!10813 = !DILocation(line: 463, column: 8, scope: !10688)
!10814 = !DILocation(line: 463, column: 14, scope: !10688)
!10815 = !DILocation(line: 464, column: 2, scope: !10688)
!10816 = !DILocation(line: 465, column: 1, scope: !10688)
